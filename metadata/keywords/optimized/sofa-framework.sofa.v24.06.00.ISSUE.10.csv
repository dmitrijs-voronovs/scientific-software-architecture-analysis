quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"I do understand the idea.; But I guess it should be possible to got only one component, let's call it `WarningAndErrorInGTest`, that would be created directly in Sofa_test (so added to every tests).; This component would have two tristates `{not_expected,expected,nothing}`, one for warnings and one for errors.; By default both states would be set to `not_expected`, such as by default every sofa warnings/errors would raise a gtest error.; It would be enough for most of the tests, so the user has NOTHING to do when writing its tests (and it would work for any existing tests, incl. plugins'). For more complex tests like in your example, rather than creating; `ErrorAsTestFailure err(SOURCE_LOCATION) ;; ExpectWarning warn(SOURCE_LOCATION) ;; `; you could write something like:; `this->warningAndErrorInGTest.warningState = expected;`. It is as explicit, not heavier, and even more flexible, as you can switch the state during the test (w/o having to delete objects and creating new ones). I am note sure to be clear enough, do you follow me?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288686630:191,test,tests,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288686630,6,['test'],"['test', 'tests']"
Testability,"I don't believe there was a pull request already attached to issofa_plugins branch ? My apologies if that ; was the case. . # Purpose; Some basic plugin functionalities were silently changed for no good reasons other the past years, namely; - SOFA_LIBSUFFIX which should be set as ""_d"" during a debug build is broken under msvc since c89da68 which as the commit name says is indeed monstruous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:832,test,test,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,['test'],"['test', 'tests']"
Testability,I don't have test yet.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-703543088:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-703543088,1,['test'],['test']
Testability,I don't know how it was working before but we need double antislash in; regex-string. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1161:339,test,test,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1161,2,['test'],['test']
Testability,I don't know if this test has ever been working properly...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1174#issuecomment-539879728:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1174#issuecomment-539879728,1,['test'],['test']
Testability,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1753:779,test,test,779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753,2,['test'],['test']
Testability,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1982:965,test,test,965,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982,2,['test'],['test']
Testability,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1781:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781,2,['test'],['test']
Testability,"I don't know why, but here it doesn't compile. ReadAccessor is not possible on: core::objectmodel::RenamedData<SeqPositions> inputPosition;. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5046:680,test,test,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5046,2,['test'],['test']
Testability,"I don't know... Some digging is needed. ; Eg the topology is ""mandatory"" because the checkAttributes test is calling ""init"" which emit an error if there is no topology. So do we add a topology or to we allow an MSG_EXPECT(Error) ? . The one about rigid is simpler as we simply this test is supposed to fail so it actually needs an MSG_EXPECT()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440233295:101,test,test,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440233295,2,['test'],['test']
Testability,"I don't know...it seems to be on ; CylinderGridTopology_test.cylinderGridCreation. Which are modified recently by this PR https://github.com/sofa-framework/sofa/pull/133 this seems to be not related to your request. @epernod any idea ? . EDIT: I found the problem... this is not PR133. It is in fact related to the fact is we are re-using the same build directory to compile all the PR and that this directory is not cleaned. This morning PR164 added a new test, then PR165 compiled, and execute every thing bin/*_test. But the added test was compiled against a different version of the sofa libraries resulting in crash. I fixed the CI so everything should back to the normal (or will severely crash because I edited the script of the running CI;))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/165#issuecomment-278916519:457,test,test,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/165#issuecomment-278916519,2,['test'],['test']
Testability,"I don't really think it is related to this PR, it has been quite a long time now that some SofaPython3 tests are failing, especially on macOS.; It does not happen on Ubuntu though apparently.; And it seems there is no unit tests of SofaPython3 on Windows ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831186824:103,test,tests,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831186824,2,['test'],['tests']
Testability,"I don't think that anything triggers when a non-existing file is trying to be load. So I added an error. I think it could have detected the error from https://github.com/sofa-framework/sofa/pull/3674. Unit tests are added. Changes in Node are just nullptr checks to prevent crashes when `getSimulation()` returns `nullptr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:206,test,tests,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,3,['test'],"['test', 'tests']"
Testability,I don't think that warnings are considered as failure in the tests,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2114505453:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2114505453,1,['test'],['tests']
Testability,"I don't think the minus operator should behave differently. The Rigid is just a container of a Vec3d and a Quaternion. Doing a subtraction element by element is something natural and quite expected when doing so. What is done here is equivalent to a Transform multiplication by the inverse (T1*T2^{-1}) , which attach more meaning to the rigid than just a container. So, this is just a different use-case I guess, maybe this could be added to the rigid as the operator/, it would be somewhat more logical...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1453155623:497,log,logical,497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680#issuecomment-1453155623,1,['log'],['logical']
Testability,"I don't think,. Graying out things, and more generally having them grouped in logical block, (as in http://doc.qt.io/qt-5/qtwidgets-widgets-groupbox-example.html) allow the user to very easily quickly understand the underlying logic that connect the fields. In addition graying things out is part of the user interface which, if well done should be separated as much as possible from your the functional logic of the component. Consequently I'm not sure that refactoring the internal logic of a component to please the GUI level is the way to go. . The difficulty with Sofa is that the components's data field (BaseObject) coherency checking is done by the component during init/reinit and the logic behind can be really complex (i.e. not just exclusive relation). We don't want to duplicate this logic at the GUI level. So...now I wonder if one solution could be to just set the ReadOnly flag in the Data during the init/reinit as well as when data changes and refresh the widget panel each time we are changing something. . This would result in the following processing: ; GUI -> Data(enableShadow) -> reinit()/update() -> change other data to be readOnly -> GUI redisplay",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/235#issuecomment-378953698:78,log,logical,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/235#issuecomment-378953698,6,['log'],"['logic', 'logical']"
Testability,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1843:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843,2,['test'],['test']
Testability,"I don't understand why a single map: tag => stack would not work: for each component, iterate over each of its tags, lookup the corresponding stack in the map and take the topmost shader in the corresponding stack. That's a total O(k * log(k)) for each component, which is O(1) if k is small/bounded. I mean the whole point of using a stack was to avoid linear searches upwards in the first place, so I don't see how using a single stack improves the situation if you have to walk the whole stack upwards before finding the right shader? . It's both more complex than it is now *and* sub-optimal.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/292#issuecomment-306744462:236,log,log,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/292#issuecomment-306744462,1,['log'],['log']
Testability,"I don't understand why this check was made:; Without invalidating the bbox, the node's bbox will only be sized up, and never down with this visitor, to my understanding.. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1268:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1268,2,['test'],['test']
Testability,I dont know if it is linked with this PR but one additional scenes is failing `SceneTests.examples/Benchmark/TopologicalChanges.ProjectDirectionConstraint_RemovingMeshTest.scn` ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2589#issuecomment-1017448408:99,Benchmark,Benchmark,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2589#issuecomment-1017448408,1,['Benchmark'],['Benchmark']
Testability,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1798:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798,2,['test'],['test']
Testability,"I dont see why `addComplianceInConstraintSpace` is called if printLog() is enabled 🤔. This block of code just appears from nowhere in the git history, and this part is not even in the frictionless version. and _W is normally not used in the unbuilt case anyway,,,,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4170:805,test,test,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4170,2,['test'],['test']
Testability,"I dont think the fix is good ; the ""toMatrix()"" is available for Mat3x3 but not for Mat4x4 (there was a ` toMatrix` for Mat4x4 but it was deleted and replace with `toHomogenousMatrix()` ).; This RigidCoord::toMatrix() is templated on the Mat type actually, and is really ill-formed (no assert on the size of the given matrix, etc).; I think the solution is to either:; - test if the matrix is 3x3 or 4x4 (and failed to compile with a message with a static assert) and calling the respective ` toMatrix()` or ` toHomogenousMatrix ()` ; - or remove the template, force it to Mat3x3 and create an other `toHomogenousMatrix` in RigidCoord. Consisntent with Quat but duplicating code and breaking. I am more for the first solution. > Thanks for your contribution. I wonder how it was not detected before. I guess this was not detected before because nobody was calling RigidCoord::toMatrix with a Mat4x4 with the code compiled on the CI. Actually, nobody calls RigidCoord::toMatrix, either with mat3 or mat4 apparently.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881:286,assert,assert,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3360#issuecomment-1267742881,3,"['assert', 'test']","['assert', 'test']"
Testability,"I forgot one file in #586, leading to the disappearance of 14 tests. You didn't see it? Me neither. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/675:62,test,tests,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/675,3,['test'],"['test', 'tests']"
Testability,I forgot to include the version header ... :1st_place_medal: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1312:314,test,test,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1312,2,['test'],['test']
Testability,"I found the dependency between SofaFramework & gtest annoying so I moved the classes that rely on gtest from the framework to put them in two external packages:; - SofaFramework/SofaHelperTesting; - SofaSimulation/SofaSimulationHelperTesting . These two packages have dependencies on both gtest and SofaFramework or gtest and SofaSimulation. These packages should now be imported in subsequent tests. . I also moved framework_test and simulation_test which have non consistant naming and location to what, I hope, is more consistant.; So ; - SofaKernel/framework/sofa/framework_test is now SofaKernel/SofaFramework/tests/SofaFramework_test ; - SofaKernel/modules/sofa/simulation/frameworkextra_test is now SofaKernel/SofaFramework/tests/SofaFrameworkExtra_test ; - SofaKernel/modules/sofa/simulation/simulation_test is now SofaKernel/SofaSimulaton/tests/SofaSimulation_test . This PR rely on #604 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/605:394,test,tests,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/605,6,['test'],"['test', 'tests']"
Testability,"I found the graph difficult to read in the GUI. In particular, differentiating the name from the class name, and objects from nodes. Here is what I propose:. # BEFORE. https://user-images.githubusercontent.com/10572752/134344194-8be54612-178a-4c1b-9374-d18e57dcd2e3.mp4. # AFTER. https://user-images.githubusercontent.com/10572752/134344330-122dc953-fa71-494a-a678-e101f34b0e4a.mp4. - Nodes are in bold; - Graph is divided in two columns: 1) the name of the object, 2) its class name. It is inverted compared to the previous display. I think it's more logical with the name first if you think about a path. The path of an object is made from multiple names (nodes + objects), not class names. This way, it is easier to find an object from a path (in a link for example) in the displayed graph.; - The class name is in grey; - Both columns have a header; - Columns can be resized with the mouse using the headers; - There is a tooltip on each object, showing the name and the class name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2356:552,log,logical,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2356,3,"['log', 'test']","['logical', 'test']"
Testability,"I found those methods while digging into the code. I'm pretty sure no one is using it and not sure it even work. As mentioned in the disabled warning, the `MeshExporter `do that in a better way. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4192:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4192,2,['test'],['test']
Testability,"I guess the one main problem you have if you warm start by default, is that if any changes in the topology has occurred since the last step the previous solution vector may not be resized nor initialised properly ? Have you got any example to test that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/365#issuecomment-321609546:243,test,test,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/365#issuecomment-321609546,1,['test'],['test']
Testability,I had nothing to do in the past 10 minutes...so I did harmless cleaning to relax. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/733:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/733,2,['test'],['test']
Testability,"I had some runtime issues on Windows without the flag. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3543:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3543,2,['test'],['test']
Testability,"I have added a bunch of new functions and a draft on how to implement force field in python. . It taste like that:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs). def addForce(self, m, f, x, v):; n = numpy.ones((1000,1)); f = x * 2 + n; ; class Test(unittest.TestCase):; def test_animation(self):; node = Sofa.Node(""root""); node.addObject(""DefaultAnimationLoop"", name=""loop""); node.addObject(""EulerImplicit""); node.addObject(""CGLinearSolver""); object1 = node.addChild(""object1""); c = object1.addObject(""MechanicalObject"", position=[0,0,0]*1000); d = object1.addObject(MyForceField(""customFF"")). SingleSimulation.init(node); for i in range(10):; SingleSimulation.animate(node, 0.01); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771#issuecomment-428036943:352,Test,Test,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771#issuecomment-428036943,2,['Test'],"['Test', 'TestCase']"
Testability,"I have corrected the test scripts as they were retrieving and error with the class definition from the previous definition. Now it compiles succesfully and passes all the tests. Sorry for using multiple accounts for commiting, but I had to change PC in the last days and I did not realize that the one I was using already had a linked account.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944#issuecomment-1598530028,2,['test'],"['test', 'tests']"
Testability,"I have identified the actual issue in ```$sofa_dir/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - line 124 has a few mentions of ```/${PROJECT_NAME}``` too much, removing these at least reduces the header install path to ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/*.h```; - for some reason the ```MOC_HEADER_FILES``` (line 21 ff.) are not considered for copying by your ```sofa_create_package_with_targets``` macro. For testing I have simply copied the headers listed in ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES```. This does not affect the build and finally copies the previously missing MOC headers to the install include directory. I can make a pull request for this. Or I can wait a bit if someone has an idea on how to properly copy/install the MOC_HEADERS without the redundant mentioning in both header lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674:450,test,testing,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196#issuecomment-1734430674,1,['test'],['testing']
Testability,"I have installed via the souce code method of SOFA; All the build and compile process has successed but I can not open the runsofa test binary file successfully.; It always says that: the runsofa can not find its entry to link to the libpng16.dll ; ![image](https://user-images.githubusercontent.com/27597690/81058246-e78ea780-8e82-11ea-8cfc-2d698a2637dd.png); That is very weird because I don't know how is this .exe related to my anaconda 3 which include a python 3.7 (I have python 2.7 installed and my sofapython is built successfully). And then I find that the ""sofa-windows-dependency-pack"" include this .dll file so I replace it in the anaconda directory and it can find its entry but gives me another error like this:; ![image](https://user-images.githubusercontent.com/27597690/81058659-ba8ec480-8e83-11ea-8069-504741e99e43.png); I really don't know why sofa go to my anaconda directory to find that .dll and I don't know where I was wrong, I use vs2019 to generate the runsofa binary successfully. Hope to be reply!. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1364:131,test,test,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1364,1,['test'],['test']
Testability,"I have no idea what this code is supposed to do.; - it does not seems related to something that is in SimulationGraph (there is no #include). ; - it use a weird string comparison to detect parent-child relationship instead of the meta classe facilities (BaseClass) ; - it seems to be supposed to implement specific behavior for the XML loader ; - removing it does not change anything. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2694:924,test,test,924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2694,2,['test'],['test']
Testability,I have restored the recursive version because I see the advantage of handling vector of vector and I have no example of problematic case in mind.; I added two tests to validate this behavior.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308106140:159,test,tests,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308106140,1,['test'],['tests']
Testability,"I have tested both mass on a triangulation and tetra mesh, seems to work. Let's see the CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1212#issuecomment-551921002:7,test,tested,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1212#issuecomment-551921002,1,['test'],['tested']
Testability,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1763:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763,2,['test'],['test']
Testability,"I have tried that, but is not running yet correctly. I get the same assert. ```; xNObject = coarseObject.addChild(""xN""); xN_mo = xNObject.addObject(""MechanicalObject"", template=""Vec1"", name=""xN_MO"", size=3); xN_mo.rest_position = np.array([[0,0.25,0.75]]).T; ```. Is the assignment to rest_position correct?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1517#issuecomment-703709218:68,assert,assert,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1517#issuecomment-703709218,1,['assert'],['assert']
Testability,"I integrated the Tracy profiler (https://github.com/wolfpld/tracy). It adds a ton of new feature to our internal profiler. In particular, I like:; - Multithreaded timeline; - Statistics; - Messages; - Memory management (need more work, I could not test it); - See context switching; - Mutex profiling (not tested yet). I tried not to be invasive, but it will require a change on the way we define timers such as in https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofa:scoped_timer (the demo runs with this branch). TODO: a dedicated MessageHandler. ![peek (1)](https://github.com/sofa-framework/sofa/assets/10572752/17714b7d-337e-43b2-9701-3ae20dd5f262). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:248,test,test,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,4,['test'],"['test', 'tested']"
Testability,I just added changes to fix warnings created by the missing override and the ordering of data between declaration and initialization in header. [ci-build] [with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/497#issuecomment-340510526:167,test,tests,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/497#issuecomment-340510526,1,['test'],['tests']
Testability,"I just added the performances tests... not very significant on ""classical"" scenes. So for the moment I suggest keeping the two version of DataContentValue<> but merge de PR to remove the dependency to DataTypeInfo.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2285#issuecomment-910387440:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285#issuecomment-910387440,1,['test'],['tests']
Testability,"I just checked, this is the same for other topologies. For example if you take the scene: Demos/TriangleSurfaceCutting.scn and add change the mechanicalObject like this:; `<MechanicalObject translation=""10 0 0""/>`. in MeshGmshLoader: x[0] = [0; 10; 0] // logical; in MechanicalObject: x[0] = [10; 10; 0] // logical; in TriangleSetTopologyContainer: x[0] = [0; 10; 0] // because position=@meshLoader.position; in OglModel: x[0] = [10; 10; 0] // due to identityMapping. The problem in the regularGrid case is that if you change the value the position to match the mechanicalObject, you need to apply transformation to all child node. (the code I removed in the PR #324 ). I'm not sure what should be the good way to act?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-315030239:255,log,logical,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-315030239,2,['log'],['logical']
Testability,"I just cherry-picked Anatoscope's changes related to SofaPython (excl. PythonScriptController that comes in #283).; It seems huge, but it is simply:; - mainly cleaning-up,; - adding bindings,; - refactoring python-tests. More cleanings are coming, and waiting for #283 and #286.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-308411143:214,test,tests,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-308411143,1,['test'],['tests']
Testability,"I just did a quick test in a simple scene (horizontal beam with downward force at one end), and the Newton static solver does *not* converge with the TetrahedronFEMForceField in single precision, using a CGSolver in double precision. The problem may be with the addDforce function used by CG, but it would need some more investigating. So basically, we can't simply switch to single precision without checking everything that could be sensitive to numerical errors (but I agree that it would be better if we could use mostly single precision).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340728191:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-340728191,1,['test'],['test']
Testability,I just drop that here to remove warnings... (every thing is in the title). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1096:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1096,2,['test'],['test']
Testability,"I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:. - `element(Index i)` is virtual; - `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances. I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920:636,benchmark,benchmark,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920,1,['benchmark'],['benchmark']
Testability,I just implemented DataFileName binding. This PR could be merged as soon as the regression tests are moved somewhere else (the idea is to create a new git containing all regression tests with associated scenes and data).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171#issuecomment-285009182:91,test,tests,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171#issuecomment-285009182,2,['test'],['tests']
Testability,"I just noticed this PR is adding new feature without providing associated tests.; It would be great to have two tests, one validating the old behavior and one validating the new one.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283#issuecomment-308230210:74,test,tests,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283#issuecomment-308230210,2,['test'],['tests']
Testability,"I just spent a significant amount of time to understand how we play with GTest and XML outputs in SOFA.; Printing a call stack should be done with #191 + #195. ; But there is still a problem in our way to report unit tests.; Currently what we do is to run all our tests with `--gtests_output:xml`. This is OK but sometimes we have crashes (often due to segfaults) in our tests. When a test crashes, it just stops. All the other steps/functions/cases are skipped and the XML output is not created.; So currently, for each crash, we are losing results. This brings me a question: should we (1) handle the lost tests for each crash or (2) change the way we use GTest and detect crashes as failures? Is (2) even possible with segfaults?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/149#issuecomment-284763976:217,test,tests,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/149#issuecomment-284763976,5,['test'],"['test', 'tests']"
Testability,"I just tested it, it works :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-750883623:7,test,tested,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-750883623,1,['test'],['tested']
Testability,"I just tested this on SP3/Windows out-of-tree, and it works. Not sure why the Windows CI post-job failed, but it looks unrelated to this PR. I will merge this now since we need it quickly for the release.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708#issuecomment-759584141:7,test,tested,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708#issuecomment-759584141,1,['test'],['tested']
Testability,"I know the QtGui is going to be deprecated soon but I wanted/needed this feature since so long. Basically allow to see the animation step duration (ms) in a graphView, then allow to navigate on the graph or on the sliders and see the different substeps exectuted during this animation step.; Substeps are displayed in a Tree, in the right order and with their respective time and percentage resp. to the full step duration. All the mechanism to parse data could be kept for future runSofa2. The windows is a ""little"" inspired from Unity3D profiler. ![image](https://user-images.githubusercontent.com/21199245/57310905-ecdbd980-70ea-11e9-823d-56007e52fa8b.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1028:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1028,2,['test'],['test']
Testability,"I know this PR doesn't touch that file, but since we're looking at enhancing the tests for this component, I noticed that the way the FixedConstraint_test checks for the SparseLDLSolver (and in general how we should check for the presence of modules) could be improved",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/718#issuecomment-411335581:81,test,tests,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/718#issuecomment-411335581,1,['test'],['tests']
Testability,"I know we are planning to drop VS2015 support in a very near future (I'm actually working on it) but this ""unknown option"" warning bothers me at each compilation (yes, I'm still under VS2015 myself). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1192:451,test,test,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1192,2,['test'],['test']
Testability,I like new tests so thanks for your PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/289#issuecomment-306480023:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/289#issuecomment-306480023,1,['test'],['tests']
Testability,I made an unitary test to compare the results of the LDL solver to those of the LU solver. The difference goes up to 9e-13. I would have like to compare LU and Cholesky to see if that difference is realy significative.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191475068:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191475068,1,['test'],['test']
Testability,"I made some tests on godbolt, but I was not able to reproduce the crash. In any case, one day it would be great to remove the public inheritance from `std::vector` (but SofaCUDA probably doesn't agree).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1724957130:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1724957130,1,['test'],['tests']
Testability,I made some tests with the scene with the single big system:. 1system_without_CollisionGroupManager; 1000 iterations done in 5.63715 s ( 177.394 FPS). 2systems_with_CollisionGroupManager; 1000 iterations done in 8.45474 s ( 118.277 FPS). . 2systems_without_CollisionGroupManager; 1000 iterations done in 4.78311 s ( 209.069 FPS). . And here is the result of the simulation:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118659838-f4600e00-b7ed-11eb-8b47-2a8724e1e2b0.gif); From top to bottom:; - 1system_without_CollisionGroupManager; - 2systems_with_CollisionGroupManager; - 2systems_without_CollisionGroupManager. We can observe that 1system_without_CollisionGroupManager and 2systems_without_CollisionGroupManager behave similarly and both are fast. 2systems_with_CollisionGroupManager is different and twice slower.; This is not what we expected.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-843176724:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-843176724,1,['test'],['tests']
Testability,"I might have emmêlé mes pinceaux with the ""based on"". It is based on because I've added the class `Renamed` in the other PR, but in the end, it would have been more logical to do it separately. What you really have to look at are the commits [1384deb](https://github.com/sofa-framework/sofa/pull/4324/commits/1384deba11b6b402dd4318ca14b1c215e31520cc) and [7bf84de](https://github.com/sofa-framework/sofa/pull/4324/commits/7bf84dee24d6a66224b94390d7db22c4394a33db). The rest are on the other PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4324#issuecomment-1833328041:165,log,logical,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4324#issuecomment-1833328041,1,['log'],['logical']
Testability,I noticed several flaw (or hard to understand) with the way mass and totalMass interact in DiagonalMass compared to what is done in UniformMass. . eg: ; - totalMass is set as readOnly in DiagonalMass while it is not in UniformMass; - despite totalMass is readOnly the value can still be changed in the scene file (so I wonder that the readOnly flag should be renamed to something that reflect what is it used for :)); - despite totalMass is readOnly there is no error message indicating to the user that the value he gave in his scene is simply dropped and that he should not use this flag. ; - the totalMass parameter is re-computed in the un-specialized implementation of the reinit function... but the specialization for rigid/vec and so on are not forwarding to this un-specialized implementation but the to implementation in-herited from the parent. (Is this really what we want ? This look a very weird design to me and I suspect problems on this forwarding to the parent.). ; - f_mass data (mass) field also seems to be a readOnly component (it seems deduced from massDensity and volume of the elements) but it is not tagged in the same way as totalMass. Why ? . Any feedback or confirmation/or not on these topics would help me to write the correct test. . DM.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/36:1257,test,test,1257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/36,1,['test'],['test']
Testability,"I noticed that SingleStateAccessor was printing an error if mstate pointer is null which was not differentiating the following cases:; - mstate not linked but found in the context; - mstate not linked AND not found in the context. Commit of interest: https://github.com/sofa-framework/sofa/commit/172ec0028e0e1a25ff12a8eb5521499c9520afcc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4917:878,test,test,878,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4917,2,['test'],['test']
Testability,"I noticed that installed headers for SofaBaseMechanics aren't where they're supposed to be because the header's directory structure is not properly respected in SOFA's sofa_install_targets macro. This commit fixes the issue for the specific case of SofaBaseMechanics/BarycentricMappers/*.{h,inl} but doesn't offer a definitive fix. Additionally, it duplicates headers in SofaBaseMechanics/ since the sofa_install_targets is still in use. A definitive solution would be to embed the fix in the sofa_install_targets macro, but I wanted your input first. @damienmarchal @guparan ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/887:831,test,test,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/887,2,['test'],['test']
Testability,"I noticed while trying to build SofaPython as out-of-tree that the build could not find <SofaExporter/OBJExporter.h>. It was because SofaExporter exposed its header files directly, instead of through a common folder named SofaExporter.; Thus this PR fixes the INCLUDE_INSTALL_DIR in SofaExporter/CMakeLists.txt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1089:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1089,2,['test'],['test']
Testability,"I presume it has nothing to do with Flexible, but it rather seems related to the mstate size. Maybe the test could be fixed, but what is important to notice is that this PR can have unexpected behaviors with existing code.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311600437:104,test,test,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311600437,1,['test'],['test']
Testability,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1999:1157,test,test,1157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999,2,['test'],['test']
Testability,"I ran the benchmark in https://github.com/alxbilger/SofaBenchmark/blob/main/SofaBenchmarkScenes/src/SofaBenchmarkScenes/linearsolver/SparseLDLSolver.cpp:. # `applyPermutation=""false""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1000 ms 1000 ms 1 FPS=200/s frame=5ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 2043 ms 2016 ms 1 FPS=198.45/s frame=5.03906ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 4050 ms 4047 ms 1 FPS=197.683/s frame=5.05859ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 8135 ms 8125 ms 1 FPS=196.923/s frame=5.07812ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 2606 ms 2562 ms 1 FPS=199.805/s frame=5.00488ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 5261 ms 5250 ms 1 FPS=195.048/s frame=5.12695ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 10407 ms 10406 ms 1 FPS=196.805/s frame=5.08118ms; ```. # `applyPermutation=""true""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1581 ms 1562 ms 1 FPS=128/s frame=7.8125ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 3114 ms 3141 ms 1 FPS=127.363/s frame=7.85156ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 6271 ms 6281 ms 1 FPS=127.363/s frame=7.85156ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 12554 ms 12609 ms 1 FPS=126.89/s frame=7.88086ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 3960 ms 3969 ms 1 FPS=12",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2762#issuecomment-1060704325:10,benchmark,benchmark,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2762#issuecomment-1060704325,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,I really don't see the link of the two new crashes on Max / Linux : ; - optiTrack : with a crash from a libc++abi; ```; libc++abi.dylib: terminating with uncaught exception of type boost::exception_detail::clone_impl; ```; - a CPU scene with beams in SofaCUDA plugin with a strange timeout (that I can't reproduce locally). Does anyone has a clue?; [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/658#issuecomment-390139788:371,test,tests,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/658#issuecomment-390139788,1,['test'],['tests']
Testability,I really dont see why the Quater test fails with mac in this PR 🤔,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323#issuecomment-921792080:33,test,test,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323#issuecomment-921792080,1,['test'],['test']
Testability,"I really think this isnt related to this PR. I don't see any ""CollisionModel"" in the test.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494462467:85,test,test,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494462467,1,['test'],['test']
Testability,I really would like to have this merged. ; So how could we progress ? ; - can we remove the feature that makes the tests fail ? ; - do we fix the test and hope others person code will no be broken silently ? ; - can we implement kind of backward compatibility tricks ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-312737011:115,test,tests,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-312737011,2,['test'],"['test', 'tests']"
Testability,"I recommend adding tests, and repeat them several times due to the non-deterministic nature of a multi-threaded approach.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-791314794:19,test,tests,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-791314794,1,['test'],['tests']
Testability,"I removed code that was unreachable. I am not sure that it is the intended behavior. I need advices (from @epernod ?). Fixes https://github.com/sofa-framework/sofa/issues/3739. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3771:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3771,2,['test'],['test']
Testability,I removed completely the unit tests. I'll add them later in another pull request.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-816570146:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-816570146,1,['test'],['tests']
Testability,"I removed some tests from the Data_test.cpp file and created a new files for these tests and i updated the Cmakelists.txt; __________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2573:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2573,4,['test'],"['test', 'tests']"
Testability,"I removed the check for a present topological mapping.; With the check a simple setup like. ```; TriangleSetTopologyContainer; TriangleSetTopologyModifier; MechanicalObject; TriangleCollisionModel with tag CarvingSurface; ```. is not recognized as a valid model for carving. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3276:829,test,test,829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3276,2,['test'],['test']
Testability,I restart [ci-build][with-scene-tests] to take into account the recent merge in master. ; Then merge. if ok.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-393438275:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-393438275,1,['test'],['tests']
Testability,I run the CI again because it seems the job on Windows has been killed; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3300#issuecomment-1253790425:92,test,tests,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3300#issuecomment-1253790425,1,['test'],['tests']
Testability,I run the CI again because it seems the job on fedora has been killed; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1253786500:91,test,tests,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3316#issuecomment-1253786500,1,['test'],['tests']
Testability,"I saw that `addSubMBKToMatrix` was not used in the SOFA code base, so I removed it savagely. I don't know the consequence of it. I would like feedback. Of course, if it is decided to remove it, I'll add the deprecated flags in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2244:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244,2,['test'],['test']
Testability,"I see the difference of point of view between you. Guillaume wants the dashboard to show the absolute current state of Sofa, with all failing tests marking the commits as ""broken/need to be fixed""; Damien sees more the average Sofa contributor point of view: ""did I break something?""/""is Sofa better or worse with my last commit"". **_Would it be acceptable**_ to add a simple checkbox on the dashboard, to filter the *_OpenIssue tests ? This way, open issues don't polute the workflow of people not concerned/competent with them. ; By default this option would be disabled. The same for pull request, new failing tests (marked as _OpenIssue) should not be marked as failures during the pull request, since they do not introduce new malfunctions but only reveal them, which is (in my opinion) a step toward the good direction, ie kind of an improvement ?. Once fixed, *_OpenIssue tests should be renamed and kept in the tests base as normal regression tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52#issuecomment-261500585:142,test,tests,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52#issuecomment-261500585,6,['test'],['tests']
Testability,I should buy new glasses...one of the tests is now failing. I think this is minor and I'm not sure if the test or the component have to be fixed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331190290:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331190290,2,['test'],"['test', 'tests']"
Testability,"I start in advance the lifecycle process for v23.06; I am looking for feedback if anything is wrong in my first changes, once this is validated I will proceed to the entire code base. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3634:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3634,2,['test'],['test']
Testability,"I suggest to add a message in GUI that a newer version of SOFA is available if an old version is used. I would look like:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/4aeaabcf-ec81-4585-b53c-9a8f24ac68f1). I chose to rely on Qt because otherwise it requires a new lib for the http request, and Qt is already here. But having Qt is not enough. I have an error related to ssl (similar error to https://stackoverflow.com/questions/53805704/tls-initialization-failed-on-get-request). It requires additional components in the Qt installation. I did not try it myself because it changes the installation process of SOFA. So before going further, we need to conclude that this feature is desirable (and is not a gadget). If it is, we can decide to rely on Qt and its additional component, or to go with a simpler C++ library (https://github.com/JosephP91/curlcpp for example). The second solution would open the version checker to ImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4648:1490,test,test,1490,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4648,2,['test'],['test']
Testability,I suppose it is an old macro. Was not accesible from cmake config and always equal to true if compiled in debug mode. only a few code was using it and were already checking NDebug as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1232:440,test,test,440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1232,2,['test'],['test']
Testability,"I suspect a copy/paste mistake when implementing this unit test in https://github.com/sofa-framework/sofa/pull/942. Note that the unit test succeeded despite the mistake. Perhaps the unit test is not enough strict?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3864:59,test,test,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3864,5,['test'],['test']
Testability,"I suspect that `m_cId` (introduced in https://github.com/sofa-framework/sofa/commit/142aa4ba1f5299301633600ba8031e8159b67d55) and `m_constraintIndex` mean the same thing. I suggest to remove `m_cId` and to keep the Data. Related to https://github.com/sofa-framework/sofa/pull/4763 and https://github.com/SofaDefrost/SoftRobots/pull/283. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4786:876,test,test,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4786,2,['test'],['test']
Testability,"I suspect that it is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2313:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2313,2,['test'],['test']
Testability,"I suspect the tests are failing because of api inconsistancy. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1697:14,test,tests,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1697,3,['test'],"['test', 'tests']"
Testability,"I switched to the dark side, running emacs as my IDE :smiling_imp:, and I was testing it on SOFA's codebase. (If you like coding & navigating through SOFA's codebase without having QtCreator transforming your laptop into an airplane, you should try it, it's great!) ; Anyway, I'd like to suggest adding some stuff to the .gitignore file:. * emacs auto-generates autosave files that have the following formats: `#*` and `~*` ; * When running emacs as an IDE, an emacs package called `projectile` creates a file called `.dir-locals.el`, containing project configuration, compilation, and running instructions for emacs in the project's root folder.; * Finally, Emacs uses `clangd` or `ccls` as its language servers. these programs store their index (LSP data for the project's codebase) in `.cache/` and `.ccls-cache/` respectively. clangd & ccls both require cmake to generate a `compile_commands.json` file, which we also don't want to be committed in the git repository. I also noticed that SOFA doesn't have a `.clang-format` file. A clang-format file gives great hints to contributors, regarding the formating guidelines for SOFA. This .clang-format file respects the [coding guidelines described here](https://www.sofa-framework.org/community/doc/programming-with-sofa/guidelines/); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884:78,test,testing,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884,3,['test'],"['test', 'testing']"
Testability,"I tested different scenarios:; If `ComponentA` is defined before `ComponentB`:. 1. A Data of `ComponentA` referring to a Data of `ComponentB` is not linked properly: the numeric value is not the right one, and Data that depends on the first Data are not updated accordingly.; 2. A Data of `ComponentB` referring to a Data that does not exist (and will not exist) does not warn the user. The link is created (pointing to nothing) with a default numeric value. Therefore, I suggest to restore the `else` statement with a warning to the user that the link does not have a parent. It seems that the case when a Data points to a Data that will be initialized later is not supported.; What do you think @damienmarchal ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2211#issuecomment-872029650:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2211#issuecomment-872029650,1,['test'],['tested']
Testability,I tested it it works :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943#issuecomment-1125768922:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943#issuecomment-1125768922,1,['test'],['tested']
Testability,"I tested it on OSX Mojave and this PR is miraculous. The caduceus goes from 35FPS to 130FPS by adding "" forceFloat=1"" to each of the 4 OglModel in the scene. ; I approve this fix (once forceFloat is set to ""on"" by default)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069#issuecomment-498193900:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069#issuecomment-498193900,1,['test'],['tested']
Testability,"I tested it: it compiles, it runs fine; Anyone else to test it? @epernod maybe?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1806#issuecomment-783650739:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806#issuecomment-783650739,2,['test'],"['test', 'tested']"
Testability,"I tested the component and the examples and this sound fine, ; I merge it so that I can work on it to add more checking on its inputs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264160693:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264160693,1,['test'],['tested']
Testability,I tested the master branch.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191484076:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1191484076,1,['test'],['tested']
Testability,"I tested the update of the scene graph and the msg icon, both features seem to work :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026#issuecomment-1172259093:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026#issuecomment-1172259093,1,['test'],['tested']
Testability,"I tested your work yesterday in the evening and I really appreciated the easy usage! I would like to add some remarks that might be interesting for future improvements:; 1. If there is a possibility to use the advanced timer at initialization (see #357), where do we need to perform changes to use your code? I would guess the main changes have to be made in [PythonAdvancedTimer.py](https://github.com/mimesis-inria/sofa/blob/0e1a298aa41f666eb792d846101be36352dbb5b3/applications/plugins/SofaPython/python/SofaPython/PythonAdvancedTimer.py) and in the reading of the json file, since the first time step has the identifier 0.; 2. Currently -c and your time evaluation exist side by side. Is it possible to combine your work with the command line argument -c?; 3. Similarly, your time evaluation exists side by side with the command -n (this variable is used in batch mode when launching the simulation for a certain number of steps). When running my simulation, I realized, your number of steps and the number of steps given by the command line add up. Again here, it would be valuable to know: how is it possible to directly use the command line argument?. More ideas might follow, thank you for your investment of time in this nice feature that I will use certainly!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-324873542:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-324873542,1,['test'],['tested']
Testability,"I think ""_rotationIdx"" should have the size of the number of points.; The problem occured when using subtopology, i.e when the number of points is greater than nbElements*4... . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/341:429,test,test,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/341,2,['test'],['test']
Testability,I think - except by implementing a complicated check on time step change in both of the above components - we are good here. Only one thing remain TMO as discussed with @alxbilger : we could create a test scene inspired from caduceus using a python controller decreasing progressively the time step to check that in this configuration the simulation smoothly handles the change of time step. Anything else?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074:200,test,test,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1564497074,1,['test'],['test']
Testability,"I think I get your point but it adds an another parameter that changes nothing in practice. Here the point is to cut everything outside the bounds. With your suggestions, who will test the sensibility of this epsilon parameter ? It is not acceptable to have a number outside these bounds since asin is not defined at all",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-338133353:180,test,test,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-338133353,1,['test'],['test']
Testability,"I think I have another sofa installation, but I have tested pointing CMAKE_PREFIX_PATH to /usr/local and also to /SOFA_DIR/build/install dependending on where I installed v20.06. In both cases failed. . Have u been able to replicate?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655812712:53,test,tested,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429#issuecomment-655812712,1,['test'],['tested']
Testability,"I think I like the PR :smile: but I lack of knowledge .. does it mean that we can use these accessor on any type not event Data?. > I added unit tests for the default class, for the vector types specialization and for the Data specialization. is this the mechanism used when the flag readOnly is set on a Data?. well.. I need to get a technical update on this!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850:145,test,tests,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228179850,1,['test'],['tests']
Testability,"I think constructors in fixed_array, Vec and Mat passed their arguments by value. Perfect forwarding avoids this copy. Also, constructors of base classes are called instead of re-defining a similar constructor. # Before. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 1.09 us 1.10 us 640000; BM_Matrix_typemat3x3f_construct/256 2.20 us 2.20 us 320000; BM_Matrix_typemat3x3f_construct/512 4.40 us 4.39 us 160000; BM_Matrix_eigenmat33_construct/128 0.270 us 0.270 us 2488889; BM_Matrix_eigenmat33_construct/256 0.509 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.996 us 0.977 us 640000; ```. # After. ```; -------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 0.324 us 0.328 us 2240000; BM_Matrix_typemat3x3f_construct/256 0.627 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct/512 1.26 us 1.26 us 560000; BM_Matrix_typemat3x3f_construct_noinit/128 0.323 us 0.321 us 2240000; BM_Matrix_typemat3x3f_construct_noinit/256 0.638 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct_noinit/512 1.28 us 1.28 us 560000; BM_Matrix_eigenmat33_construct/128 0.255 us 0.256 us 2986667; BM_Matrix_eigenmat33_construct/256 0.502 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.993 us 1.00 us 746667; ```. Now the construction of a 3x3 matrix is 3x faster and close to the construction of a 3x3 matrix with Eigen. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2450:306,Benchmark,Benchmark,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2450,2,['Benchmark'],['Benchmark']
Testability,I think it's time to update our old icons for v18.12 :wink: . SOFA.png; ![SOFA](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/SOFA.png). MODELER.png; ![MODELER](https://raw.githubusercontent.com/sofa-framework/sofa/43b71cf490996847a15f8fddf5e04db823b8d52d/share/icons/MODELER.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/881:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/881,2,['test'],['test']
Testability,I think my commit is what you actually need. Could you test and confirm?; @hugtalbot,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346#issuecomment-921156133:55,test,test,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346#issuecomment-921156133,1,['test'],['test']
Testability,"I think skyboxes are a great tool for demos with better visual quality. That's why I wanted a demo showing how to make one.; I had more ambitions than that but it's rather difficult to work with OpenGL from the 90's in SOFA.; The limitation is that the skybox reacts to translations and zoom. A scene is introduced and here is a capture:. https://user-images.githubusercontent.com/10572752/153029239-2b5fd241-173d-4314-9ba8-a4870d21f31e.mp4. In this PR, I also added a build ""project"" containing all the shaders. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2678:1052,test,test,1052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2678,2,['test'],['test']
Testability,"I think the clean should not be done independently, if you remove the if (printLog) test many components are going to fill their ""log buffer"", hence increase memory usage",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276908575:84,test,test,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276908575,2,"['log', 'test']","['log', 'test']"
Testability,"I think the layout is ok now, . I only want o re-implement the xsp loader using the code from MeshXspLoader that is stl instead of good old C. . There is new tests including one that fails (because ...well the implementation is broken and the test is right ;))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-461343436:158,test,tests,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-461343436,2,['test'],"['test', 'tests']"
Testability,"I think this has some benefits:; - the features are already merged in the master branch and *should* work without the hassle of merging different dev branches; - they are OFF by default, so they are not disturbing anyone. But we should take care of the following:; - they must be tested (at least ONE ci config should activate them); - they are not meant to stay ""experimental"" forever, so there is an implicit contract to move them to ""non-experimental"" as soon as they are ready and working. ""EXPERIMENTAL_FEATURES"" must not be the carpet above the decisions we don't make. Typically, an ""experimental"" feature in release N should be merged in release N+1.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517#issuecomment-345207607:280,test,tested,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517#issuecomment-345207607,1,['test'],['tested']
Testability,"I thought at that moment that sofa.ini was a resource but apparently no.; (it was related to CPack and Mac when creating a .app/dmg).; So yes, it should be processed outside this test then.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/114#issuecomment-270325726:179,test,test,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/114#issuecomment-270325726,1,['test'],['test']
Testability,"I thought dmsg_info was only display in debug but this line is trolling the whole CI.; Remove this debugging info from normal execution. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2401:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2401,2,['test'],['test']
Testability,"I thought it was done previously but no... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3755:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3755,2,['test'],['test']
Testability,"I took into account @damienmarchal 's comment; Scene updated, tested and working properly. Regarding changes (refactoring) proposed by @epernod, this must be done in another PR. I do not want to refactor only obj export, otherwise SOFA would be inconsistent (look at STLExporter, VTKExporter).; I would therefore like to refactor all exporters as a clean I/O API! This will take some efforts and this is not related to this PR (which just fix and add the obj export in MeshExporter). I set this one as to review again then.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1789#issuecomment-785262772:62,test,tested,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789#issuecomment-785262772,1,['test'],['tested']
Testability,"I tried and on macOS and Ubuntu/gcc :; - `EXPECT_EQ(std::string{sofa::geometry::ElementInfo<sofa::geometry::Point>::name()}, ""Point"");` test passes; - `EXPECT_EQ(defaulttype::DataTypeName<sofa::topology::Element<sofa::geometry::Point> >::name(), ""Point"");` does not (return Element<Point> as you said). After some investigation, `DataTypeInfo<topo::Element<geo::Point>` does not exist so it uses the default decoder.; IMO, It was not implemented because topology::Point (which should be an alias on `topo::Element<geo::Point>`) is not defined. I dont remember why it was not done while Sofa.Topo and Sofa.Geo was created. Maybe topology::Point does not make sense ? (in a topology point of view); If in the end it does, making the alias (and adding the typeinfo) does work. (see https://github.com/alxbilger/sofa/pull/8 )",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4732#issuecomment-2109148673:136,test,test,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4732#issuecomment-2109148673,1,['test'],['test']
Testability,"I tried this feature with BeamAdapter, replacing the parallel std::for_each() on https://github.com/sofa-framework/BeamAdapter/pull/50; On a custom scene, the performance is the same, which is a good news by itself. The regression test did not report any discrepancy either.; And at least there is no special case (compiler not supporting std::execution, etc) to handle 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383:231,test,test,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383,1,['test'],['test']
Testability,"I understand the feature, I understand the need and I agree I would use it.... but I find really weird to set the option using a component in the graph... Do you know if there is an option in the Node? we could use the same logic but per Node",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193394417:224,log,logic,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1193394417,1,['log'],['logic']
Testability,"I understood the first time, so don't nag me at every step 👺; It is already quite bothersome to execute in debug 😅. And it alleviates a little bit the debug output on the CI (ubuntu-debug: 515,231 KB 🥴 on master). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5050:753,test,test,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5050,2,['test'],['test']
Testability,"I used the given CMakeList code in ""Create your scene in C++"" page to test the given source code in the same page. But when I run cmake to build, the error occured. I know where the SofaFrameworkConfig.cmake is and i had tied to change ""find_package(SofaFramework REQUIRED)"" to ""find_package(/home/user_name/sofa/src/sofabuild/install/lib/cmake/SofaFramework/SofaFramework REQUIRED)"", then other errors occured, which is still about some Config.cmake files not found. CMake Error at CMakeLists.txt:7 (find_package):; By not providing ""FindSofaFramework.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""SofaFramework"", but CMake did not find one. Could not find a package configuration file provided by ""SofaFramework""; with any of the following names:. SofaFrameworkConfig.cmake; sofaframework-config.cmake. Add the installation prefix of ""SofaFramework"" to CMAKE_PREFIX_PATH or set; ""SofaFramework_DIR"" to a directory containing one of the above files. If; ""SofaFramework"" provides a separate development package or SDK, be sure it; has been installed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2784:70,test,test,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2784,1,['test'],['test']
Testability,"I vote for no warning message, and no global switch! **Keep it light and simple.**; The only case where you really expect to have the string `""[1,2,3]""` is for Data<SVector> that would report a problem for `""1,2,3""`, and the fix is simple (simply add some `""""`). But frankly who was benefiting from that?!. Indeed we do not want warning messages when converting scalars, but we can easily add a test for specific types (float, bool, int...). At least everything would be clearly exposed in the code. Also, I propose that if you pass a Node, a BaseObject or a Data, it uses their getLinkPath (defined in the bindings, i.e. `""@/path/from/root/node""`, `""@/path/from/root/node/myobject""`, `""@/path/from/root/node/myobject.mydata""` ). It would be so useful when creating Links that are required during creation (like the mapping's inputs).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-306712656:395,test,test,395,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-306712656,1,['test'],['test']
Testability,"I was looking for writting some test for ArgumentParser, but I don't see any test for SofaKernel/framework/sofa. Is it normal :D ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346334238:32,test,test,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/513#issuecomment-346334238,2,['test'],['test']
Testability,"I was playing with clang-format in the goal of reformatting the whole code base and have a consistent code style. As a proof of concept, it was applied on Sofa.Type. Of course, such a change has high chances to create conflicts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3930:768,test,test,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3930,2,['test'],['test']
Testability,"I was testing a benchmark scene with quite a lot of constraints (frictions) and:; (exactly the same scene); ```; master : 5000 iterations done in 203.986 s ( 24.5115 FPS); this PR : 5000 iterations done in 134.177 s ( 37.2643 FPS); ```; with just having to set `multithread=""true""` (and building multithreading plugin) this is **cool** 🥳. Edit: and it was with Windows/MSVC",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-802383252:6,test,testing,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-802383252,2,"['benchmark', 'test']","['benchmark', 'testing']"
Testability,I was thinking that the PR was about keeping the vsize and real vector size the same so I was thinking ; to a test that fails if there is a size mismatch. But I may be wrong...I'm really weak on these part of Sofa.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329790996:110,test,test,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329790996,1,['test'],['test']
Testability,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1984:758,test,test,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984,2,['test'],['test']
Testability,I will test your branch any way but would you have a visu of this feature @bakpaul ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1640703846:7,test,test,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1640703846,1,['test'],['test']
Testability,I wonder if it will compile and succeed on the tests .; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/885:47,test,tests,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/885,3,['test'],"['test', 'tests']"
Testability,"I wondered why it is necessary to pass the pointer to the Data to initialize it in the `initData` function.; I tried to remove it, and nothing bad seems to happen.; So, why?. Of course, the `initData` mechanism is questionable. But this is not the scope of this PR. If it appears that passing the pointer is not necessary, this PR will have to add a compatibility mechanism and perhaps a depreciation. The files to reviews are mainly:; * BaseClass; * BaseData; * Base. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3167:1008,test,test,1008,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3167,2,['test'],['test']
Testability,"I worked with the scene `examples\Demos\fallingBeamLagrangianCollision.scn`. I noticed that the distribution of the work among threads is not uniform:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/9145a080-0a7a-4b22-b3dc-501d509aefcf). Here is the distribution after the changes:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/cd047f43-aa7c-49de-a303-7d1945d8dcbd). Benchmark on 500 time steps:; Before:; ```; [INFO] [BatchGUI] 500 iterations done in 22.9377 s ( 21.7982 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 14.42 1 0.01 30.28 19.39 6.24 19.39 42.69 .....Get Compliance; ```. After; ```; [INFO] [BatchGUI] 500 iterations done in 19.7138 s ( 25.363 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 13.77 1 0 22.02 15.31 5.07 15.31 39.29 .....Get Compliance; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4220:403,Benchmark,Benchmark,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4220,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"I would also point out that while there is no tests on the SparseLDLSolver (which is not very suprising) there is also no example scene, no mention of it in any doc etc.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390939574:46,test,tests,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390939574,1,['test'],['tests']
Testability,"I would like to schedule a hangout in the coming days to synchronize everyone's job on CI. I have the feeling that everyone is not up-to-date with the current CI status, and I came to the point I would not touch anything until I understand clearly what has been done recently. ; This includes jenkins updates, use of tests ci scripts, etc.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576:317,test,tests,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186#issuecomment-282669576,1,['test'],['tests']
Testability,I would not add a boolean because you would have a large number of tests in the case of a large mesh.; I would rather rename those functions and set them purely protected/private (then transforming them like utility methods for DrawToolGL). ; And then create other functions implementing the DrawTool interface (calling those private methods and glBegin(*)/glEnd calls),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/7#issuecomment-250756856:67,test,tests,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/7#issuecomment-250756856,1,['test'],['tests']
Testability,"I'll check how difficult it is to write this component for BTD.; In the meantime, I also have unit tests to fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1728994383:99,test,tests,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1728994383,1,['test'],['tests']
Testability,I'm a bit surprised with the test failures;... so i restart ; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/847#issuecomment-446571947:29,test,test,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/847#issuecomment-446571947,2,['test'],"['test', 'tests']"
Testability,I'm afraid this PR was merged to fast.; - windows7_VS-2013_options_amd64 has 3 more test failures; - we don't know what happens for centos_clang-3.4_options and mac_clang-3.4_options; - there is 36 new test errors for centos_clang-3.4_options on origin/master after merge,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-288380223:84,test,test,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-288380223,2,['test'],['test']
Testability,"I'm always having a hard time designing this type of workflow...; I agree with you that it's way easier to have a branch than a commit in GIT_TAG.; What will happen though is that SOFA CI could be failing because of changes in SP3/master. . For instance, this will happen:; ~~1. Bob opens a SOFA PR that breaks SP3~~; ~~-> the SOFA PR fails on SOFA CI~~; ~~2. Bob opens a SP3 PR to propose a fix to this future change in SOFA that will break SP3~~; ~~-> the SP3 PR fails on SP3 CI (because it fixes something that is not broken yet)~~; ~~3. Thanks to my work on ExternalProject, SOFA CI is able to test the SOFA PR with a custom version for SP3 (the version of the SP3 PR)~~; ~~-> the SOFA PR succeeds on SOFA CI~~; ~~4. Both PRs are merged (in any order)~~; ~~5. **All the other SOFA PRs are now failing on SOFA CI** and must be updated with SOFA/master~~. EDIT: corrected version below",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821081219:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821081219,1,['test'],['test']
Testability,I'm fixing the failing tests in https://github.com/sofa-framework/sofa/pull/457,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453#issuecomment-334871354:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453#issuecomment-334871354,1,['test'],['tests']
Testability,I'm gonna find some time to investigate this test failure. To be continued...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-313034837:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-313034837,1,['test'],['test']
Testability,"I'm looking for the ""-"" in the read to detect the intervals syntax:; 0-5 or 0-10-2 as well as --5-5 or 10--10. This intervals syntax using '-' was not of my own and I'm actually quite surprised and happy it was possible to fix the crash & endless loop that were in the code while preserving the syntax and backward compatibility. . Now all this discussion about performance rise my interest as I wonder if all this discussion have a measurable impact on performances. As usual I cannot prevent myself to make a small benchmark. ; The benchmark is implemented in the test class so that we will be able to detect performance regression in the future. . First there is a +200ms variation between the same run so I average several runs which gaves these numbers: ; strtoll alone tooks 1645 ms to ""read"" 1 000 000 time a size 10 array. ; strtoll+early check of '-' tooks 1654 ms to ""read"" 1 000 000 times the same array. ; ; strtoll alone tooks 7758 ms to ""read"" 100 000 time a size 1000 array. ; strtoll+early check of '-' tooks 7719 ms to ""read"" 100 000 times the same array. . strtoll alone tooks 8464 ms to ""read"" 1000 time a size 100 000 array. ; strtoll+early check of '-' tooks 8403 ms to ""read"" 10000 times the same array. . So we are discussing about un-measurable effect and I switched to your version because it contains less lines of code and looks simpler which is a very good property. . Is there still question about this PR? . EDIT: and the dashboard is now green on linux. @bcarrez please finish #267 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828:517,benchmark,benchmark,517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"I'm not sure it's a good practice to open a PR only for Changelog stuff, unless if you're logging already done changes.; It's not easier to maintain because I have no idea if your adds are relevant. It would be way more convenient to edit the Changelog in **each** important PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/58#issuecomment-262732494:90,log,logging,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/58#issuecomment-262732494,1,['log'],['logging']
Testability,"I'm ok with the change regarding the edges. I can't see some border effect right now... and as all the non regression tests are green I'm 99% confident!; I just added some additional warning and tests inside the tetrahedron methods you fixed to match what has been done inside the TriangleSetTopologyContainer. You could double check if needed.; Thanks, I missed those one.; :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1008#issuecomment-490437324:118,test,tests,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1008#issuecomment-490437324,2,['test'],['tests']
Testability,I'm on it...but first I'm making a Test suite. . PR on its way.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/928#issuecomment-466451014:35,Test,Test,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/928#issuecomment-466451014,1,['Test'],['Test']
Testability,"I'm progressing... ; There is a lot of test failure but this was expected as now any warning that was not explicitely EXPECTED generates a test failure. . So it looks really fine to me. ; @epernod, @fredroy, @thomas-lemaire as you wrote tests...what do you think about the current approach ? . EDIT: OUPS this was for PR #213 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/207#issuecomment-288874603:39,test,test,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/207#issuecomment-288874603,3,['test'],"['test', 'tests']"
Testability,"I'm sorry, I missed part of the conversation on this topic during the sofa-dev meeting. Here's my suggestion:. What if we would set a `Check()` method (and maybe also a `Parse(), Init(), fwdInit(), bwdInit()` and all other method that kind of expect a ""call super"" code smell to work...) in `SOFA_ABSTRACT_CLASS_DECL`, similar to this:. ```cpp; #define SOFA_ABSTRACT_CLASS_DECL \; [...]; void doCheck() { this->check(); static_cast<Inherit1*>(this)->doCheck(); }	\; virtual void Check() { this->doCheck(); }; ```; ; `Check()` would be a virtual method, so that when called from a casted `BaseObject` ptr or from a visitor, the child's method would be called.; `check()` and `doCheck()` on the other hand would not be virtual, so that when called from `this` casted as `Parent*`, the method of the current pointer cast would be called, thus triggering the recursion when static_casting the pointer. . It's the same as the ""call super"" pattern, with the exception that it is this time bug-free, because the API's user is not in charge of calling manually the parent's method. A small example here if you want to test the concept:. ```cpp; #include <iostream>. #define SOFA_BASE_CLASS(T) \; virtual void Init() {} \; void doInit() { this->init(); }. #define SOFA_CLASS(T, Parent) \; typedef Parent Inherit1; \; void doInit() { this->init(); static_cast<Inherit1*>(this)->doInit(); }	\; virtual void Init() { this->doInit(); }; . struct BaseObject; {; SOFA_BASE_CLASS(BaseObject); void init() { std::cout << ""BaseObejct::init()"" << std::endl; }; };. struct A : public BaseObject; {; SOFA_CLASS(A, BaseObject); void init() { std::cout << ""A::init()"" << std::endl; }; };. struct B : public A; {; SOFA_CLASS(B, A); void init() { std::cout << ""B::init()"" << std::endl; }; };. main(); {; BaseObject* b = new B();; b->Init();; }; ```. The imact in terms of implementation would be a bit huge though.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416907185:1110,test,test,1110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416907185,1,['test'],['test']
Testability,"I'm trying to debug to see where it fails, but it will take a little bit more than expected.; Meanwhile I just want to highlight that coming back to the un-fixed version (the one without my commit) the test doesn't fail YET the **toEulerVector** is doing an invalid operation (the bug that my commit is supposed to fix). ![screenshot from 2017-11-10 12-13-39](https://user-images.githubusercontent.com/20112873/32656351-bf740592-c611-11e7-95a5-786c795763c1.png)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343448267:202,test,test,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343448267,1,['test'],['test']
Testability,"I'm very happy to say that it compiles and passes the tests. ; bye bye the sofa float ugliness. ; @guparan, @hugtalbot, @ChristianDuriez, @bcarrez . So now how do we merge ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/853#issuecomment-447487467:54,test,tests,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/853#issuecomment-447487467,1,['test'],['tests']
Testability,I've had a problem combining OglViewport (which is using old openGL) with another component using modern OpenGL.; Here's a fix I did with the help of @fredroy.; We just needed OglViewport to update the visualparams with the new matrices. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1500:491,test,test,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1500,2,['test'],['test']
Testability,"I've tested to remove completely the functions. If used or overridden, it should fail to compile. On my setup, I don't observe a compilation failure, even with SofaCuda. Let's see if the CI does not complain.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460:5,test,tested,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335#issuecomment-1267085460,1,['test'],['tested']
Testability,"IMO it is dangerous to let UncoupledCC used without any compliance info given.; This PR adds a warning when it's the case. It's also slightly polishing all UCC messages in general. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3858:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3858,2,['test'],['test']
Testability,"IMO it's pain to see and consider WARNINGS when they do not burn my retina from the console :eyeglasses: ; Yellow color for warning messages (as for deprecation) will help me sleeping at night . ![Screenshot_2023-06-02_15-39-17](https://github.com/sofa-framework/sofa/assets/17544719/81ad75c4-a272-4378-a2c5-a6012d19ef99). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3914:862,test,test,862,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914,2,['test'],['test']
Testability,"IPO option was already available for MSVC. This PR is the CMake way to enable it.; ~~However, it does not seem to apply on my setup with MSVC. That's why I kept the `/GL` and `/LTCG` compilation options.~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3345:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3345,2,['test'],['test']
Testability,"IPO state wont change anyway so it is useless to do the test every time. On Windows, this test takes 2sec (for a total of 7sec for a minimal SOFA configuration), so it is quite appreciable without it.; On linux (Ubuntu) it takes 200ms on my setup so barely perceptible... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4191:56,test,test,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4191,4,['test'],['test']
Testability,"IdentityMapping.h possesses some helper functions (eq & peq on float <-> double, and Coord <->OtherCoord); This should be moved in a later PR. This PR just removes the need of those utility functions in GenerateGrid (which has nothing to do with IdentityMapping obviously), thus removing the header inclusion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2090:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2090,2,['test'],['test']
Testability,"If I understand well how AdvanceTimer is working (which I'm still not sure), this Begin(""animate"") command should not be there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1029:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1029,2,['test'],['test']
Testability,"If a class inherits from `Base` it already has 2 `initData` overloads available. So why redefining them in the `SOFA_CLASS` macro?; The third overload is not defined in `Base`, so I did it and remove the one in `SOFA_CLASS`.; In summary, the 3 `initData` overloads are only defined in `Base` and nowhere else. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3190:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3190,2,['test'],['test']
Testability,"If either `from` or `to` is not provided, the second argument is assigned to a `std::string`. It is an undefined behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3686:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3686,2,['test'],['test']
Testability,"If it is in a plugin, you need to load this plugin to load an other plugin :yo_dawg:. <img src=""https://user-images.githubusercontent.com/11028016/162191671-72defde9-badc-4f99-b0a3-9ec70a40531e.jpg"" width=""300"" />. so `RequiredPlugin` should always be available, even if no plugin is loaded.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2849:832,test,test,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2849,2,['test'],['test']
Testability,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2135:1706,test,test,1706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135,2,['test'],['test']
Testability,"If not virtual, it leads to multiple construction of `StateAccessor` in `PairInteractionProjectiveConstraintSet`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2594:653,test,test,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2594,2,['test'],['test']
Testability,"If savingMatrixToFile is set to true, the system matrix is saved during each time step with the name ""MatrixInLDL_%04d"", where %d is the value of the time.; I added two new input data:. - savingFilename; 	The filename where the matrix is stored can be changed using the input data d_filename. ; 	If it contains ""%d"", it will keep the previously described behavior, else it will always save in the same file overwriting it. - savingPrecision; 	The second new input is d_precision. It is the precision with which the matrix will be stored. These options are useful to save the system matrix from SOFA and read it from another software. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/845:887,test,test,887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/845,2,['test'],['test']
Testability,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2190:3,test,testing,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190,6,"['Test', 'test']","['Testing', 'test', 'testing', 'tests']"
Testability,"If the Data was simply renamed (but is having the same role as previously), it is not a big deal to have a alias. If the Data is no longer used, backward compatibility will have to be done in the 'parse' function (to fill others Data for instance), in that case, it is easy to add a deprecated message. Note that the initial Data should not exist anymore.; As an example, you can look at RigidMapping, where the Data 'repartition' was removed, but the 'parse' function still ensures backward compatibility and log a deprecated msg.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/35#issuecomment-255372823:510,log,log,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/35#issuecomment-255372823,1,['log'],['log']
Testability,"If the user did not specify any sampling number for MSAA (by default), `viewerMSAANbSampling` was not set in getValueFromKey(), and as it was not initialized, it had some random number (usually huge).; Consequently, MSAA was always activated with the highest number of samples even if the user did not specify it.; (and got some bogus message like `[INFO] [RealGUI] Set multisampling anti-aliasing (MSAA) with 1538452832 samples.` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3220:973,test,test,973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3220,2,['test'],['test']
Testability,"If we don't set a template to SparseLDLSolver we get a warning message saying that it might be insteresting to set it to speedup the calculations. ; In my opinion this is an information. A warning should mean ""be careful if you don't solve this warning bad things might happen"". . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2969:820,test,test,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2969,2,['test'],['test']
Testability,"Illustrating #4462 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464,2,['test'],['test']
Testability,"Implement missing methods to work in FreeMotionAnimationLoop. --> simply took what was implemented in FixedProjectiveConstraint. Also add a new feature to keep the constraint applied after all the key event have passed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5025:759,test,test,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5025,2,['test'],['test']
Testability,"Implement the improvement discussed in; https://github.com/sofa-framework/sofa/issues/56. This request contains: ; A new message class have been added for logging (in addition to Dev & Runtime).; A new RoutingMessageHandler.; A new test to validate the basic behavior of RoutingMessageHandler. Eg of use... to install a filter that will only send the; Runtime message of type Warning to a File you can do something like:; ```cpp; RoutingMessageHandler* m = new RoutingMessageHandler();; FileMessageHandler* toAFile = new FileMessageHandler(""the file""). /// Yes this is using c++ lambda syntax; m->setAFilter( [](Message& m); {; if(m.context() == Message::Runtime && m.type() == Message::Warning); return true ;; return false ;; }, toAFile );; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/57:155,log,logging,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/57,2,"['log', 'test']","['logging', 'test']"
Testability,"Implementation of http://developer.download.nvidia.com/presentations/2010/gdc/Direct3D_Effects.pdf. ![ezgif-6-9b93f0eae158](https://user-images.githubusercontent.com/11028016/67236511-afc19480-f449-11e9-9528-bf093f77e0d2.gif). Allows nice (?) renders without relying on surface reconstruction etc.; In this SPH simulation (10k particules) , the rendering takes <1% of the resources. Also tweak a bit the default Z planes with QGLViewer (it has a weird behavior with narrow BBox scenes). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1194:738,test,test,738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1194,2,['test'],['test']
Testability,"Implementation of the (2nd part of) proposal #281 . Quick Reminder:; - CMake generates the list of compiled plugins in a file (`plugin_list.conf.default`) at the configuration stage.; - runSofa loads this list at startup; - if the user creates a custom `plugin_list.conf`, it will load this list instead.; - add an option to bypass the file (thus disable automatic loading) in runSofa. Everything is done in the runSofa application (+small patch in the macro sofa_add_generic() in SofaFramework CMake modules ; that allows us to have a list of all added targets which is not possible in CMake 3.1) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:851,test,test,851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,2,['test'],['test']
Testability,"Imported targets can be aliased only if they are global. Otherwise, this error is raised:; ```; CMake Error at /data/Softwares/sofa/build/build-master/install/lib/cmake/SofaFramework/SofaFrameworkConfig.cmake:45 (add_library):; add_library cannot create ALIAS target ""SofaHelper"" because target; ""Sofa.Helper"" is imported but not globally visible.; Call Stack (most recent call first):; CMakeLists.txt:5 (find_package); ```. Thus, this PR adds the GLOBAL property to the imported targets we want to alias.; It also move all the alias definitions in their respective projects (not in SofaFramework anymore). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2175:1146,test,test,1146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2175,2,['test'],['test']
Testability,"Improve the message when a component is deprecated and removed, in order to mention GitHub issues :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3913:653,test,test,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3913,2,['test'],['test']
Testability,"In #2076, a `vector` was replaced in favour of a `map`. It has a consequence on the order of traversal, therefore on the contact response creation. With a `map`, the order is based on the contact pointer address, which can be random. The vector is ordered by insertion.; This PR restores the `vector` for reproducible simulations. It should fix #2128. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2134:891,test,test,891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2134,2,['test'],['test']
Testability,"In #2404 I rename types `Bloc` to `Block`. I forgot one that now triggers compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2441:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2441,2,['test'],['test']
Testability,"In #2777, a new API to assemble matrices was introduced. I used this new API to avoid the need to implement `addDForce` if `buildStiffnessMatrix` is already implemented. In other terms, it unifies the `addDForce` and `buildStiffnessMatrix` (previously it was `addKToMatrix`. Indeed, those two functions are very similar as they are related to the derivative of the force. This PR is a proof of concept that is not ready to be merged. Indeed, I noticed losses of performances. And I also would like to make sure with the CI that everything works perfectly. The concept is implemented only on force fields (not interactions), and only for stiffness (no damping), but I can be easily extended to damping and masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010:1252,test,test,1252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010,2,['test'],['test']
Testability,"In #3838 we agreed on the misleading variable `symmetricMatrix` in the MechanicalParams.; I propose here a simple change using `m_supportOnlySymmetricMatrix` et associated read/write access function updates. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3861:747,test,test,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861,2,['test'],['test']
Testability,"In BTDLinearSolver, a lot of functions needed ` Index bsize = Matrix::getSubMatrixDim(d_blockSize.getValue());` ; consequently, ` d_blockSize.getValue` was called a tremendous number of times (billions of time for 5000 steps in our case). It appeared that:; - getSubMatrixDim(Index) is only implemented by BTDMatrix and BlockFullMatrix; - it never really depended on its parameter (just returning BSIZE, which is a constant); - d_blockSize was never used in other cases. So this PR:; - reword getSubMatrixDim() without parameter, and make it compile-time constant; - replace its usage in BTDLinearSolver; - deprecate d_blockSize in BTDLinearSolver; - add the compat layer (macros & stuff). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3556:1229,test,test,1229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3556,2,['test'],['test']
Testability,In BaseData and BaseLink mainly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1152:284,test,test,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1152,2,['test'],['test']
Testability,"In ConstantForcefield, ; if the showForceField flag was not set, the draw() function was not restoring the visual state.; Consequently, some weird visual bugs could happen with some other components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1017:451,test,test,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1017,2,['test'],['test']
Testability,"In CudaVisualModel, it was not possible to define which `state` and `topology` to use. State and topology could only be found implicitly. I converted the raw pointers to links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2442:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2442,2,['test'],['test']
Testability,"In ImplicitSurfaceContainer:; Class name didn't match and also the namespace of DiscreteGridField. In applications/plugin/CMakeLists.txt:; SofaVolumetricData depends on SofaDistanceGrid and SofaImplicitField, so should be added first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/422:486,test,test,486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/422,2,['test'],['test']
Testability,In PR #1485 we introduce DataLink & AbstractDataLink; In PR #1490 we remove the duplicated SingleLink<> parentData in BaseData to ease further refactoring; In this PR we can now cleanly replace the use of the SingleLink<Data<T>> by a DataLink class in Data.h. Once that done:; - we will be able to finally remove from BaseData & Data the code that lay there just because of the use of SingleLink.; - then remove in Link & BaseLink all the code that lay there to support SingleLink<BaseData>. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1491:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1491,2,['test'],['test']
Testability,In PR https://github.com/sofa-framework/sofa/pull/217. ```cpp; #ifdef BARYCENTRIC_MAPPER_TOPOCHANGE_REINIT; // handle topology changes in the From topology; virtual void handleTopologyChange(core::topology::Topology* t);; #endif // BARYCENTRIC_MAPPER_TOPOCHANGE_REINIT; ```; Is coding to change to runtime condition instead of #IFDEF. . @JeremieA pointed that this rise consistency issues in how the topology changes are handled into the mapping. . Maybe we should keep that in mind and in some future do something (eg making a test that should be done all mapping to validate a consistent and clear behavior).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/223:528,test,test,528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/223,1,['test'],['test']
Testability,"In RestShapeSpringsForceField the rest_shape is currently provided using a raw pointer which is really Bad. ; In this PR is change that to use SingleLink instead. . The PR imply a change by which the syntax of the external_rest_shape is provided. Adding an ""@"" as in the test examples/Components/forcefield/RestShapeSpringsForceField2.scn make it work. Editting: Damien. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/315:271,test,test,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/315,3,['test'],['test']
Testability,"In SOFA not using an accessor is really bad (I mean really really bad), but the syntax is not really; friendly and thus discourage ppl to use it. . The PR adds few easing function smooth the syntax. ; So you can now type:; auto points = getReadAccessor(d_points);; in place of:; ReadAccessor<Data<Vec3> points = d_points;. In also make code update more manageable, as the whole code based does not need to be changed if the d_points type change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1254:697,test,test,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1254,2,['test'],['test']
Testability,"In SimpleAPI and SofaPython3 (surely XML too), ; if a data link is set to a data of a not-yet created BaseObject, `isSet` is not true. In the newly created tests, the last one would be false without the fix in BaseData. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5081:156,test,tests,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5081,3,['test'],"['test', 'tests']"
Testability,"In TriangularFEMForceField, the strainDisplacementMatrix was not re-computed for a new simulation step in the computeForce-method. Because of that, the strain computation used an old version of the strainDisplacementMatrix. EDIT: this will fix issue: ; fix #2704. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2706:803,test,test,803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2706,2,['test'],['test']
Testability,In UncoupledConstraintCorrection class:; - Use PointData instead of handleTopologyChange method; - Small cleaning; - Remove duplicated constructor. Fix one of the component in #810 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1115:434,test,test,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1115,2,['test'],['test']
Testability,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2040:1771,test,test,1771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040,2,['test'],['test']
Testability,"In `HexahedronFEMForceField<DataTypes>::draw`, the topology pointer is checked first before being used. It avoids a crash if the topology cannot be found in the initialization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2478:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2478,2,['test'],['test']
Testability,"In ```BeamFEMForceField```:; - Remove TopologyHandler to directly use TopologyData creation callback. Activate ```SofaGeneralSimpleFem_test``` by adding 8 tests in ```BeamFEMForceField_test.cpp``` to test:; - Component creation with given values or default values; - Error catching when creating without MechanicalObject; - Error catching when creating without topology or with empty topology; - value after init and after several simulation steps; - Check update of the FEM while removing edges. This last test on topological change is failing because of the bug in UniformMass fixed in PR #2377 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2382:155,test,tests,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2382,5,['test'],"['test', 'tests']"
Testability,"In ```TriangularBendingSpring```:; - Remove all unused code; - Clean loops logic to exit/continue when possible. No major changes.; - Rename damping and stiffness Data to use prefix `d_`; - Add tests on Data setter to avoid negative values; - Document Header. Activate ```SofaGeneralDeformable_test``` by adding 8 tests in ```TriangularBendingSpring_test.cpp``` to test:; - Component creation with given values or default values; - Error catching if wrong Data values; - Error catching when creating without topology or with empty topology; - Init value on a single pair of triangles; - Simulated values on a grid scene; - Check update of the FEM while removing triangles. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2363:75,log,logic,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2363,6,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"In `applyDJT`, the following product is computed:. $$; b \mathrel{{+}{=}} h^2 \frac{\partial \mathbf{J}}{\partial x_{\text{out}}} f_{\text{out}} v_\text{in}; $$. with `b` being the right side of the main equation, `h` the time step size ($h^2$ is the `kFactor`), `x` the position, `v` the velocity and `f` the force. Subscript `in` refers to the parent of the mapping, and `out` to the child. $J$ is the jacobian matrix of the mapping. The method in `SquareMapping` had two ways to compute this product:. 1) Using K which has been computed previsously. And multiply it by $v_\text{in}$; 2) Using $f_{\text{out}}$ and $v_\text{in}$ only, without using a cached matrix. Only the first method was tested in unit tests. I forced the second method in a unit test by introducing a Data `useGeometricStiffnessMatrix`. It could be observed that the second method failed. It needed a fix. The product with $v_\text{in}$ was forgotten. It is now added in this pull request. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3761:694,test,tested,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3761,5,['test'],"['test', 'tested', 'tests']"
Testability,"In `modules/SofaMiscForceField/SofaMiscForceField_test/MeshMatrixMass_test.cpp`, the tests used `EXPECT_FLOAT_EQ`. It supposed that both values are of type `float`. In these tests, they are actually of type `SReal`, which is `double` by default. Hence, a type conversion from `double` to `float`. A macro detecting the type is introduced, and replaces `EXPECT_FLOAT_EQ`. Note that, line 1372, I had to change the test. The test with `EXPECT_FLOATINGPOINT_EQ` failed due to the higher precision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2714:85,test,tests,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2714,6,['test'],"['test', 'tests']"
Testability,"In a `Eigen::Matrix<U, 6, 6>`, it is not possible to call `rightCols<3>` with a `3x3` matrix. The dimensions don't match. The should have been a `6x3`. To provide a `3x3` matrix, we must explicitly define the row AND the column. In that case, we use `topRightCorner`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3978:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3978,2,['test'],['test']
Testability,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625:1632,test,test,1632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625,2,['test'],['test']
Testability,"In addition to a simplification, it allows also to automatically use the newly introduced constructors from `vector_device`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4864:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4864,2,['test'],['test']
Testability,"In all CMakeLists, upgrade `cmake_minimum_required` from 3.12 to 3.22 in order to support the find or fetch mechanism. **TODO**; - update documentation; - update SP3 readme. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4586:713,test,test,713,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4586,2,['test'],['test']
Testability,"In all SetGeometryAlgorithms, this PR ; - adds save and restore state (creating rendering bugs in EdgeSetGA); - fixes warning in mustComputeBbox function; - fix other warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3070:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3070,2,['test'],['test']
Testability,"In an IDE (Visual Studio at least), tidy cozily all *_relocatable_install projects into a folder.; Before:; ![Capture1](https://user-images.githubusercontent.com/11028016/83787044-787bbd00-a693-11ea-8949-55a86b91b779.PNG); After:; ![Capture2](https://user-images.githubusercontent.com/11028016/83787136-a103b700-a693-11ea-9a7f-d2652e039bbd.PNG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1405:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1405,2,['test'],['test']
Testability,"In both `LCPConstraintSolver` and `GenericConstraintSolver`, there is a list of constraint corrections as a class member. Both class inherits from the same base class and the lists are used equivalently. Therefore, I move them into the base class. I changed them from a `vector<BaseConstraintCorrection*>` to a `MultiLink`. These changes allows to unify `init`, `cleanup` and `removeConstraintCorrection` methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4117:953,test,test,953,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4117,2,['test'],['test']
Testability,"In case the force field is not located in the same context than the MechanicalState it works on, `canCreate` denied the creation of the force field.; This PR makes sure it is possible to create the force field in the aforementioned condition. A new condition authorizes the creation of the force field: when the link to the mstate is valid (even if the mstate is not in the current context). This PR also check if mstate is null before using it in some functions (`addForce`, `addDForce` etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2553:1033,test,test,1033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2553,2,['test'],['test']
Testability,In case these SOFA_DEV were usefull to you please make PR in which the removed; code is properly engineered (i.e no #ifdef). If you don't think using #ifdef is bad don't hesitate to tell it to sofa-dev. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/835:454,test,test,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/835,2,['test'],['test']
Testability,"In collisionModel createPrevious method, propagate value from parent; ```cpp; pmodel->f_listening.setValue(f_listening.getValue());; pmodel->f_printLog.setValue(f_printLog.getValue());; ```. Fix bad resize method in ```CubeModel::ddCube```. Buffers where resized using the member ```size``` instead of a fix variable, previous code behavior:; ```cpp; int i = size; // size == 0; this->core::CollisionModel::resize(size+1);	// resize(0+1) -> size == 1 ; elems.resize(size+1); // elems.resize (1+1) instead of 0+1; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1202:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1202,2,['test'],['test']
Testability,In component FixeConstraint in function projectVelocity use Data flag instead of #define Flag to set velocity and free velocity to zero. ; @digitaltrainers and @matthieu-nesme . Suggested label enhance. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288:454,test,test,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288,2,['test'],['test']
Testability,"In createObject... When you given an object as argument instead of a string the binding convert it (with str). This is problematic in many cases eg. with a list it is converted with the bracket (ie: '[' ) and comma as separator. To resolve that I add a method that, if a list is passed as an argument, convert it as a string following the sofa style (without comma and bracket). CHANGELOG for @hugtalbot & @guparan :; [SofaPython]: change the way createObject() handle its arguments to simplify scene writing + batch of tests.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286:520,test,tests,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286,3,['test'],"['test', 'tests']"
Testability,"In dynamic topology you need to add 4 components:. 1. TriangleSetTopologyContainer ///< contains all the buffers to define the topology structure; 2. TriangleSetTopologyModifier ///< friend class handling all low level operation on the topology container; 3. TriangleSetTopologyAlgorithms ///< class to store more complex algorithms base only on topology structure (will use Modifier and Container); 4. TriangleSetGeometryAlgorithms ///< class to store all complex algorithms involving topology and geometry (3D positions) structure (will use Modifier and Container). After quick investigation the 3rd one is often nearly empty or contains algorithms that in fact need geometry information such as edge length, direction, area, volume etc. So I propose to move all methods of xxxSetTopologyAlgorithms into the xxxSetTopologyModifier if it is really only topological operations or to xxxSetGeometryAlgorithms for better clarification of the code. This will concern:; - PointSetTopologyAlgorithms; - EdgeSetTopologyAlgorithms; - TriangleSetTopologyAlgorithms; - QuadSetTopologyAlgorithms; - TetrahedronSetTopologyAlgorithms; - HexahedronSetTopologyAlgorithms. Of curse I will add Deprecated component and I can also let the methods and forward to the new one with a deprecated message. ; And start to add tests on those methods...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1538:1303,test,tests,1303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1538,1,['test'],['tests']
Testability,In fact most of the methods I'm testing are directly inside the mother class. So I'm not sure a gridTopology_test is needed.; But to remove GridTopology from the factory is maybe possible. We need to investigate if someone is using it as a component.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301501500:32,test,testing,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301501500,1,['test'],['testing']
Testability,In fact would be better to merge PR #3330 and #3331 before this one as they are fixing bugs found while doing this test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1254711655:115,test,test,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1254711655,1,['test'],['test']
Testability,"In fact, we have to go down to the iterator protocol as some strings are initialized with proxies (e.g. `' '.join(...)`) and the Sequence protocol fails on getting the length/size. . The following conversion code passes all python tests in Compliant:. ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }. if( PyIter_Check(object) ) {; // TODO we should throw and abort createObject in case of error; std::stringstream ss;; bool first = true;. PyObject *iterator = PyObject_GetIter(object);; if(!iterator) {; msg_error(""createObject"") << ""error while creating iterator"";; }; ; while(PyObject* next = PyIter_Next(iterator)) {; if(first) first = false;; else ss << ' ';. ss << convert_string(next);; Py_DECREF(next);; }. Py_DECREF(iterator);; ; if (PyErr_Occurred()) {; msg_error(""createObject"") << ""error while iterating"";; }; ; return ss.str();; }. // link path conversion for baseobjects; if( PyObject_IsInstance(object, (PyObject*) &SP_SOFAPYTYPEOBJECT(BaseObject)) ) {; const std::string path_name = (((PySPtr<Base>*) object)->object->toBaseObject()->getPathName());; return '@' + path_name;; }. // fallback to python string conversion; return PyString_AsString(PyObject_Str(object));; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307438921:231,test,tests,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307438921,1,['test'],['tests']
Testability,In favor of a new sofa_generate_package function (with named arguments). It's never clear what the arguments passed to this function are for. Now you have to know to use it :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/909:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/909,2,['test'],['test']
Testability,"In file ```examples/Benchmark/Analysis/constantMomentum.scn```, we cannot observe what is written in ```examples/Benchmark/Analysis/constantMomentum.html```, namely ""A scene where the linear and angular momenta should be preserved."" Can anyone try it too?. Is it due to the absence of the plot or the imposed velocities wrong? They seem a bit extreme to me.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3531:20,Benchmark,Benchmark,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3531,2,['Benchmark'],['Benchmark']
Testability,"In https://github.com/sofa-framework/sofa/pull/1605, https://github.com/sofa-framework/sofa/pull/1611 and https://github.com/sofa-framework/sofa/pull/1632 were layed-out typeInfo subsystem refactoring. The general objective was to remove the ""magic"" and ODR violation of existing code.; The migration to the new system was postpone while NG refactoring & cleaning was progressing. ; Now it is done, let's go to deploy it. So in this step we are starting to use the new subsystem for ""selected"" type while printing a deprecation message for type that have not been migrated; . The PR shoul'nt break anything. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3288:1149,test,test,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3288,2,['test'],['test']
Testability,"In https://github.com/sofa-framework/sofa/pull/3986, I introduced the computation of `H A^-1 H^T` in SparseLDLSolver. In this PR, I do the same but in the base class of all linear solvers. All linear solvers inheriting from `MatrixLinearSolver` can now benefit from this parallelization (except the matrix-free conjugate gradient). I benchmarked `examples/Demos/fallingBeamLagrangianCollision.scn`:. ```; <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:334,benchmark,benchmarked,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,1,['benchmark'],['benchmarked']
Testability,"In issue #746 is reported a bug when trying trying to simulate; scenes while the underlying topology is containing empty data set. I narrowed the problem to be in LocalMinDistance::computeIntersection.; In this function we access the trianglesAroundVertex from a MeshTopology. with code like that:; ```cpp; if (m_edgesInTetrahedron.empty() || i > m_edgesInTetrahedron.size()-1); createEdgesInTetrahedronArray();; return m_edgesInTetrahedron[i];; ```. While if there is not ""nothing"" to create because there is no edges/triangles; it access in there is still a return of m_edgesInTetrahedron[i] with indice = 0. To avoid that I change the code for:; ```cpp; const MeshTopology::EdgesInTetrahedron& MeshTopology::getEdgesInTetrahedron(TetraID i); {; if (m_edgesInTetrahedron.empty() || i > m_edgesInTetrahedron.size()-1); createEdgesInTetrahedronArray();. if (i < m_edgesInTetrahedron.size()); return m_edgesInTetrahedron[i];. return InvalidEdgesInTetrahedron;; }; ```. So if there is nothing created we returns a valid object indicating either an; empty or one filled with invalid values. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/977:1339,test,test,1339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/977,2,['test'],['test']
Testability,In last commits:; - DataTrackerEngine is deprecated; - CallbackEngine is renamed as DataTrackerCallback & tests use it instead of the deprecated DataTrackerEngine; - Updated doc for the DataTrackerCallback; - const DataTracker& passed as argument to callback function: this makes it possible to call hasChanged() on datafields using the dataTracker in each DataTrackerCallback. @jnbrunet @damienmarchal if that's OK with you. If it passes I think that should be all on this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406#issuecomment-645446057:106,test,tests,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406#issuecomment-645446057,1,['test'],['tests']
Testability,"In my case, it helped me to understand that the file was corrupted, via the nonsensical number of triangles that was printed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3949:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3949,2,['test'],['test']
Testability,"In my plugin I have derived a new type from `BaseObject`. ```class BlendingField : public sofa::core::objectmodel::BaseObject; {; virtual double blending(const Eigen::Vector3d &p) const = 0;; }; ```. In order to implemente this, I tried to add python bindings. ```; class BlendingField : public VNCS::BlendingField; {; public:; SOFA_CLASS(VNCS::py::BlendingField, VNCS::BlendingField);; BlendingField();; ~BlendingField() override;. VNCS::Real blending(const VNCS::Point_3 &p) const final;; };; ...; VNCS::Real VNCS::py::BlendingField::blending(const VNCS::Point_3 &p) const; {; const std::array<double, 3> pyP{p[0], p[1], p[2]};; PYBIND11_OVERLOAD_PURE(VNCS::Real, /* Return type */; VNCS::BlendingField, /* Parent class */; blending, /* Name of function in C++ (must match Python name) */; pyP /* Argument(s) */; );; }. void VNCS::py::module::blendingField(pybind11::module &m); {; pybind11::class_<VNCS::BlendingField, VNCS::py::BlendingField>(m, ""BlendingField""); .def(pybind11::init([](pybind11::args &args, pybind11::kwargs &kwargs) {; return new VNCS::py::BlendingField();; })); .def(""blending"", &VNCS::BlendingField::blending);; }; ```. This works fine in the sense that I can derive from BlendingField in SOFA, but I can't add it to a SOFA node, with the following error:. ```; [ERROR] [SofaPython3::SceneLoader] TypeError: addObject(): incompatible function arguments. The following argument types are supported:; 1. (self: Sofa.Core.Node, arg0: str, **kwargs) -> object; 2. (self: Sofa.Core.Node, arg0: Sofa.Core.Object) -> object. Invoked with: <Sofa.Core.Node object at 0x7fffac34bef0>, <prepare_scene.TestBlendingField object at 0x7fffac34bea0>; ```. Somehow, it looks that SOFA can't see the my class derives from sofa::core::objectmodel::BaseObject. I have tried to find any example of any other plugin creating its own bindings but couldn't find any. ; Any help with this would be amazing.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1547:1615,Test,TestBlendingField,1615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1547,1,['Test'],['TestBlendingField']
Testability,"In my program, when running the scene, ""dataVecInForce[0] is nullptr"" appears in the function applyJT. Is it possible that the pointer is empty?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450:397,test,test,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450,2,['test'],['test']
Testability,"In my work I need to extract the dynamical model from SOFA, i.e. extracting mass and stiffness matrices from SOFA. I follow the SOFA instructions which use ""mass_matrix = root.mass.assembleMMatrix()"" & ""stiffness_matrix = root.force_field.assembleKMatrix()"" to obtain the mass and stiffness matrices. My test example is a cube with 8 Square unit, which results 27 nodes, i.e. 81dofs. see; ![mesh](https://github.com/user-attachments/assets/37529452-396a-48df-8a01-7c330d8297b3); The COMSOL result of mass matrix is below: ; ![Comsol_M](https://github.com/user-attachments/assets/ef3b9080-8bd6-44f3-9d17-da54f38b01b5); The SOFA result of mass matrix is below: ; ![SOFA_M](https://github.com/user-attachments/assets/a19ea4e4-f756-4b6a-badf-c1ec20719a59)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4954:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4954,1,['test'],['test']
Testability,"In order for SofaGuiQt to find NodeEditor a custom FindNodeEditorConfig.cmake was created in cmake/Modules but this file was obfuscating the real NodeEditorConfig.cmake that is packaged with the NodeEditor library when trying to find_package it in external plugins. I modified the CMakeLists.txt in sofa/gui/qt/ to use the proper find_package and link correctly to the NodeEditor::nodes target. This PR also fixes some unintentional renamings that were causing compile issue when SOFAGUIQT_ENABLE_NODEGRAPH is set to ON (it would be nice to be able to test this on the CI, or at least to build with SOFAGUIQT_ENABLE_NODEGRAPH=ON so that this doesn't happen again. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1424:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1424,3,['test'],['test']
Testability,"In order to smooth the changelog generation .. a gentle GH action :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4081:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4081,2,['test'],['test']
Testability,"In order to work as expected the automatic addition of the GravityForceField by the node need to be implemented for the two following events:; - react when the ""gravity"" field is changed to add the GravityForceField not only done at parse/init... and if gravity is set back to zero... should we remove the GravityForceFIeld ? ; - have a hook in the addObject(BaseObject*) so that any addition of a Mass Object trigger on a node that had a gravity set ... the function adding the GravityForceField is called. The underlying logic is complex and looks very hack to me but needed to provide a consistant behavior between two deeply inter-connected component (mass & gravityforcefield). I may be wrong but using a ""slave"" for the ""automatic"" use-case would cut that complexity.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149#issuecomment-1190185317:523,log,logic,523,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149#issuecomment-1190185317,1,['log'],['logic']
Testability,In past PR we have removed the use of a Link to store link between two data and we use DataLink instead. ; As Link cannot store anymore a link between Data the type traits code can be removed from Link.h and BaseLink.h. . This is what this PR does (removing the un-needed). . The next step will consist in refactoring the whole Link to separate SingleLink & MultiLink. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1503:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1503,2,['test'],['test']
Testability,"In some (very) rare cases, if the user links two libs (in which was included the header PythonScriptControllerHelper.h), compilation should throw an error of duplicate symbol for PythonScriptController_parametersToVector().; I got the problem while making static libraries. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1036:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1036,2,['test'],['test']
Testability,"In some cases (which ones?), gcc does not link against pthread which is necessary for the recently added AsyncSparseLDLSolver.; I got the case on the latest gcc on Manjaro (`gcc version 11.1.0`), and at least one other user is reported the same error #2736 . Same configuration with clang worked fine without so I suppose the added library comes from somewhere (but I dont where/what). ; This PR adds the necessary library in any case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:975,test,test,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,2,['test'],['test']
Testability,"In some simulations relying on mappings, a computation intensive task is the product `J^T * K * J` (including the computation of `J`). To offer the user a choice of strategy regarding the way to compute this product, I introduce a component `MatrixMapping`. This component is optional in a scene. If not present, it will be created automatically with a generic-purpose strategy, i.e. the one already implemented. In order to illustrate the options given to the user, I already added a Data to consider the mapping Jacobians to be constant. For example, it is true for `ModelOrderReductionMapping`. In the future, maybe this property can be defined automatically. I benchmarked the reduced diamond robot over 1000 time steps (the previous benchmark is in https://github.com/sofa-framework/sofa/pull/4443):. Before; ```; [INFO] [BatchGUI] 1000 iterations done in 17.4661 s ( 57.2539 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.08 1 11.85 20.52 13 0.85 13 88.39 ......projectMappedMatrices; ```. After (with `areJacobiansConstant=True`); ```; [INFO] [BatchGUI] 1000 iterations done in 12.3888 s ( 80.7183 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 7.64 18.39 8.59 0.76 8.59 84.35 ......projectMappedMatrices; ```. Speed up x1.5 on the matrix mapping. Note that using a `ConstantSparsityPatternSystem` instead of a `MatrixLinearSystem` is slightly faster (but it is not in the scope of this PR):. ```; [INFO] [BatchGUI] 1000 iterations done in 11.7897 s ( 84.82 FPS).; ```. Plans for the future:. - Write a new MatrixMapping component taking advantage of the constant sparsity pattern to further improve the performances; - Write a new MatrixMapping component that would use multithreading, and maybe one using the GPU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4490:665,benchmark,benchmarked,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490,2,['benchmark'],"['benchmark', 'benchmarked']"
Testability,"In terms of performances, I run the benchmark in https://github.com/alxbilger/SofaBenchmark/blob/main/SofaBenchmarkScenes/src/SofaBenchmarkScenes/linearsolver/SparseLDLSolver.cpp:. # `useSymbolicDecomposition=""false""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 2071 ms 2094 ms 1 FPS=95.5224/s frame=0.0104687s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 4103 ms 4094 ms 1 FPS=97.7099/s frame=0.0102344s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 8253 ms 8188 ms 1 FPS=97.7099/s frame=0.0102344s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 17380 ms 17312 ms 1 FPS=92.4188/s frame=0.0108203s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 6187 ms 6188 ms 1 FPS=82.7475/s frame=0.012085s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 11960 ms 11938 ms 1 FPS=85.7801/s frame=0.0116577s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 24209 ms 24156 ms 1 FPS=84.7814/s frame=0.011795s; ```. # `useSymbolicDecomposition=""true""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1588 ms 1578 ms 1 FPS=126.733/s frame=7.89062ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 3182 ms 3156 ms 1 FPS=126.733/s frame=7.89062ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 6391 ms 6344 ms 1 FPS=126.108/s frame=7.92969ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 12823 ms 12938 ms 1 FPS=123.671/s frame=8.08594ms; BM_Scene",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2756#issuecomment-1060696095:36,benchmark,benchmark,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2756#issuecomment-1060696095,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"In the DEFROST team we need our constraints to provide the computed forces as outputs. These forces are now provided to the constraints using the method `storeLambda()`. . Our constraints node usually looks like this: ; ```; cavity = accordion.createChild('cavity'); cavity.createObject('MechanicalObject'); cavity.createObject('SurfacePressureConstraint'); cavity.createObject('BarycentricMapping', name='mapping', mapForces=False, mapMasses=False); ``` ; As no forces have to be mapped, we set `mapForces=False` to avoid unnecessary computations. Yet in the current code, this disables the call to `storeLambda()`. . This PR changes this behavior by overriding the method `stopAtMechanicalMapping()` of `ConstraintStoreLambdaVisitor`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854:988,test,test,988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854,2,['test'],['test']
Testability,"In the Gauss-Seidel implementation from the class GenericConstraintSolver, an array called 'errF' is used to store the error forces from ConstraintResolution objects:. https://github.com/sofa-framework/sofa/blob/v18.12/modules/SofaConstraint/GenericConstraintSolver.cpp#L870. This array have a static size of 6. Consequently, in the case the user uses a custom ConstraintResolution having more than 6 constraints to resolve (nbLines > 6), it results in a buffer overflow during the loop of the second phase of the Gauss-Seidel algorithm, and there is nothing to prevent it:. https://github.com/sofa-framework/sofa/blob/v18.12/modules/SofaConstraint/GenericConstraintSolver.cpp#L937. I am aware this is not really a bug but rather a limitation of the constraint resolutions and it is very specific. But maybe we should at least prevent it by adding a simple assertion `assert(nb <= 6);` at line 934 for example. I personnally encountered this issue and it cost me time to figure it out. By the way, I noticed there is the same kind of issue with the array called 'tempF':. https://github.com/sofa-framework/sofa/blob/v18.12/modules/SofaConstraint/GenericConstraintSolver.cpp#L997. ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/914:857,assert,assertion,857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/914,2,['assert'],"['assert', 'assertion']"
Testability,"In the PR #484, the way of searching the ODESolver in GenericConstraintCorrection changed from ; `c->get(odesolver, core::objectmodel::BaseContext::SearchRoot);`; to; `c->get(odesolver, core::objectmodel::BaseContext::Local);`; In some of our simulations, the GenericConstraintCorrection is located in the root node. And so no ODE solver can be found, and the user can not set it manually. . In this PR: . - Added data d_ODESolverName, to allow user to specify the ODE solver as it is actually done for the linear solvers; - If no ODE solver found using d_ODESolverName, search in ""Local"", then in ""SearchRoot"".; - Some cleaning (including renaming). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/567:902,test,test,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/567,2,['test'],['test']
Testability,"In the `getValuePtr` methods, a buffer on vector data is obtained by actually returning a reference to the vector first element. However the case where the method is called on an empty (but valid) vector is not handled. This may lead to an execution error, for instance when using SofaPython3 to assign values to a component's Data dynamically. This specific scenario is the object of a second PR in SofaPython3 [(link to the PR)](https://github.com/sofa-framework/SofaPython3/pull/318). To change this, we propose to use the `std::vector.data()` method, which handles the case when the vector is actually empty (however returning a pointer that may or may not be null). All unit tests work on my setup with this modification. However I don't fully understand the consequences of a change at this depth in SOFA's core, so additional opinions would be useful. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3505:680,test,tests,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3505,3,['test'],"['test', 'tests']"
Testability,"In the caduceus scene, the collision detection and the free motion can be computed in parallel. Here are the timings for 1000 time steps on my computer:. # Before. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 1.43 8.29 2.27 0.44 2266.53 100 TOTAL; 1 0 1 1.43 8.27 2.27 0.44 2.27 99.95 .Simulation::animate; 2 0.06 1 1.05 6.97 1.28 0.22 1.28 56.46 ..FreeMotion+CollisionDetection. ```; [INFO] [BatchGUI] 1000 iterations done in 2.57462 s ( 388.407 FPS). # After. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 1.21 7.79 1.95 0.39 1948.88 100 TOTAL; 1 0 1 1.21 7.78 1.95 0.39 1.95 99.95 .Simulation::animate; 2 0.06 1 0.80 6.66 0.99 0.21 0.99 50.72 ..FreeMotion+CollisionDetection. ```; [INFO] [BatchGUI] 1000 iterations done in 2.24415 s ( 445.602 FPS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2471:1330,test,test,1330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2471,2,['test'],['test']
Testability,In the case of the Light (and actually this is true to most of the sofa component) I see several very simple tests to add to validate the inputes. But you are totally right this cannot be done automatically (unless with a kind of ; code-path/coverage analysis) so the developper have to write at least the easy one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264160230:109,test,tests,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264160230,1,['test'],['tests']
Testability,"In the case the template parameter is in the list of possible template, but is not compatible with the current context, the message said the template is not in the list.; A new message is introduced for this special case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2262:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262,2,['test'],['test']
Testability,"In the context of the documentation improvement, and towards the automation of its generation, here is a first wide clean PR. Replace #2751 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4751:681,test,test,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4751,2,['test'],['test']
Testability,"In the continuity of #1442 . Now plugin is here: https://github.com/sofa-framework/PSL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4047:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4047,2,['test'],['test']
Testability,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1900:1161,test,test,1161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900,2,['test'],['test']
Testability,"In the example of 72 falling cubes, mesh-based collision models are replaced by `OBBCollisionModel`, which is more suited for cubes.; I had to change from LocalMinDistance to NewProximityIntersection. It was the only intersection method supporting intersection between OBB and triangle. I tried adding it to LocalMinDistance, without success.; I also removed the visual models because we can see the cubes from the collision models.; The scene is at least twice faster. I also added security guards in ParallelBVHNarrowPhase because of a crash I experienced. I did not investigate why this crash happens. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2646:1144,test,test,1144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2646,2,['test'],['test']
Testability,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2258:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258,2,['test'],['test']
Testability,"In the process of building the performance regression scripts I needed a timer basis working for both FreeMotionAnimaitonLoop and DefaultAnimationLoop with Tracy. For this I needed to add timers around the mechanical mapping application in the FreeMotionAnimationLoop and scoped timers for RH side computation and MBKBuild in the EulerImplicit. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4957:886,test,test,886,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4957,2,['test'],['test']
Testability,"In the scene `examples/Benchmark/Performance/TorusFall.scn`, vectors are dynamically allocated by EulerImplicitSolver and GenericConstraintSolver. They now have a name instead of a meaning less number. ![image](https://user-images.githubusercontent.com/10572752/160145176-3fa3a101-5876-4c39-a0a5-8215d9d97be8.png). The names are not associated to the VecIds, but to the Data associated to the VecIds. Note: CGLinearSolver allocates dynamically temporary vectors. I did not add any complexity for having names for them, as they are ""freed"" after each solve. But they are actually not freed, just unset. I suspect its a source of the bug we already met when there are many vecids. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2811:23,Benchmark,Benchmark,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2811,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"In the spirit of #3900 and following #3924, this PR applies the change on the UniformMass. To be noted, the `componentState` must be added to trigger the callback (done in `addMDx()`, `addMToMatrix`, `accFromF` and `buildMassMatrix`). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927:774,test,test,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927,2,['test'],['test']
Testability,"In the spirit of #3900 this PR applies the change on the ConstantForceField. To be noted:; - `return` have been added ; - the `componentState` must be added to trigger the callback; - use function isComponentStateValid(); - Create separate addUpdateCallback and created dedicated separate functions; - Remove call to trackData for doUpdateInternal; - Use Accessors (remove beginEdit). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3924:924,test,test,924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3924,2,['test'],['test']
Testability,"In the spirit of #3983 (more readable, more efficient, more consistent). Also it fixes the function, by moving the `++i` inside the loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3989:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3989,2,['test'],['test']
Testability,"In this PR I do only cleaning:; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead. ; - remove commented code. If I didn't made mistake nothing should break. CHANGELOG:; [all]:; - remove a lot of commented code. ; - replace std:cerr, std::cout and printf with msg_* . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/339:538,test,test,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/339,2,['test'],['test']
Testability,"In this PR I remove some of the un-needed create()/canCreate() function when they were simply forwarding to their parent creat()/canCreate() one.; ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1622:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1622,2,['test'],['test']
Testability,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1890:703,test,test,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890,2,['test'],['test']
Testability,"In this PR we:; - add difflib in extlibs, difflib is an header only library that allows to make approximated search for string. ; - add sofa::helper::DiffLib to wrap the header only into a sofa looking library. ; - use DiffLib to implement spelling suggestion when a component cannot be created by the ObjectFactory.; Example of output:; ```console; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'toto.py'. ; Python exception: ValueError: Object type MechanicaObject<> was not created ; The object is not in the factory. ; But the following exits: ; : MechanicalObject (98% match); : MappedObject (54% match); : MechanicalStateController (53% match); ```; ; The DiffLib feature is extensively used to implement a much wider spelling suggestion mechanism in SofaPython3.; Have a look at all the examples and use cases in PR https://github.com/sofa-framework/SofaPython3/pull/314. . I'm not using xml scenes so I didn't implemented support for spelling suggestion there. If your are interested in doing such a thing, the SofaPython3 implementation is a good starting point for your PR. . ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3042:1657,test,test,1657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3042,2,['test'],['test']
Testability,"In this PR, `map_ptr_stable_compare` is preferred over `unordered_map`, as it allows reproducible contact response. However, `unordered_map` is still a lot faster. #2047 leads to a crash in `examples/Components/collision/RayTraceCollision.scn`. I suspect the cause of this crash existed before #2047, and that #2047 revealed the crash by processing the contacts in a non-deterministic order. With the non-deterministic order, I can see that the crash does not happen always at the same current time step. It even happened that there was no crash. Currently, I am not able to fix the crash. But I will continue investigating. As a workaround I restore the stable map to have deterministic contacts. IMO, it hides the cause of the crash. In the end, I think the stable map should be proposed to the user (as a parameter?) by default. Let's see if we can accelerate it (perhaps with [Insimo version](https://github.com/InSimo/ISSofa/commits/issofa/framework/sofa/helper/map_ptr_stable_compare.h)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2067:1534,test,test,1534,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2067,2,['test'],['test']
Testability,"In this PR:. - Added static class member `Visitor::runVisitorTask`; - Used `Visitor::runVisitorTask` in BaseMechanicalVisitor to replace all the boilerplate code; - Simplify the logic in `BaseMechanicalVisitor::processNodeTopDown` even though I have some concerns; - `Visitor::for_each` is now static; - `Visitor::for_each` accepts an optional string parameter giving the type of visitor ""fwd"" or ""bwd""; - `Visitor::for_each_r` is removed in favour of an overload of `Visitor::for_each`; - SOFA_VERBOSE_TRAVERSAL surrounds the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2125:178,log,logic,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125,2,['log'],['logic']
Testability,"In this PR:; - add some pairwise algorithms on fixed_array<> instead of Vec<> so here is an implementation. To avoid adding to the fixed_array.h I use the stl approach of putting that in a separated ""algorithm.h"" file. ; - I then use these to implement an enlightening function in RGBAColor with its unittest. The uses of these will be done in a future PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1172:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1172,2,['test'],['test']
Testability,"In this pull request I propose several improvements of the script scn2python.py: ; - Improved the structure of the output file, i.e. for both, the generation of .scn+.py and .py a class python script controller is introduced (before it was only the case for .scn+.py). For .py the function createScene then introduces an instance of the class. Moreover, the script now saves every node in self, s.t. it is not necessary to use getChild.; - In createScene, the command line arguments introduced in #356 are now forwarded to the class (not possible before); - If an xml scene includes another file, the script now locates this file and then introduces all its objects automatically; - In an insertion like the one mentioned in the last point, it can happen, that there are links like '@', are now dealt with the input of the user. I am open for any improvements!; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/387:1113,test,test,1113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/387,2,['test'],['test']
Testability,"Include PR #3519 . Add several methods similar to existing one but using output parameters. ; Done to access:; - gravity; - vertices / normals / texcoords; - edge / triangles / quads; Also add method to unload a scene. All methods return an int corresponding to a exit code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3520:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3520,2,['test'],['test']
Testability,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1776:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776,2,['test'],['test']
Testability,Including the Message API (Messaging.h) is needed in image so that the compilation can work independently from the activation of SofaPython. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1068:392,test,test,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1068,2,['test'],['test']
Testability,"Including the development cycle and associated events in the CONTRIBUTING.md. Feedback most welcome. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3774:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3774,2,['test'],['test']
Testability,Inconsistency in the tests on hyperelastic materials,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4605:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4605,1,['test'],['tests']
Testability,"Indeed :; - SceneTests.examples/Benchmark/TopologicalChanges.ProjectToPlaneConstraint_RemovingMeshTest.scn; - SceneTests.examples/Benchmark/TopologicalChanges.FixedPlaneConstraint_RemovingMeshTest.scn; crash.; Should we let them crash and appear in the CI log (thus maybe making the result even more confusing), or should we ignore it on the CI ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2161#issuecomment-863033431:32,Benchmark,Benchmark,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161#issuecomment-863033431,3,"['Benchmark', 'log']","['Benchmark', 'log']"
Testability,"Indeed. I am not a big fan of having a member function `invert`; Anyway, to fix the problem you can test that the address of reference passed as an argument is different from the address of the object instance. e.g. ```lang=cpp. template< std::size_t L, std::size_t C, typename real = double >; bool Mat<L,C,real>::invert(const Mat<L,C,real>& m ); {; if(&m == this ); {; // do something clever to handle ""in-place"" invert; }; else; {; invertMatrix(*this, m );; }; }; ```. NB: it is an usual pattern when for instance you must overload the assignment operator of a class (because it has to manage some heap allocated memory for example ), and therefore handle the special case when you self assign.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/280#issuecomment-305173227:100,test,test,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/280#issuecomment-305173227,1,['test'],['test']
Testability,"Indeed. It would be interesting to know why. But I can see that the `thread_local` version did not stay long (4 hours). From https://github.com/sofa-framework/sofa/pull/792, I can see that the compilation failed when `thread_local` was introduced. And the compilation log is no longer available. But you can see now that the compilation succeeds. I guess that at the time the compilation failed because of old version of the compilers. And it is no longer a problem now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586:268,log,log,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422#issuecomment-1291804586,1,['log'],['log']
Testability,Indeed... my bad.; This Pr already add tests for the gridTopology but the Tests needed a test. ; Thanks @matthieu-nesme for the review. It should be good now.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-305487544:39,test,tests,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-305487544,3,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"Indices were wrong in case of multiple objects under the same linear solver which uses an assembled 3x3 bloc-based matrix.; Bug introduced in https://github.com/sofa-framework/sofa/pull/2240. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2277:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2277,2,['test'],['test']
Testability,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1991:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991,2,['test'],['test']
Testability,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1782:8,test,test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782,3,['test'],['test']
Testability,"Initially I wanted to fix issue #673 that prevents compilation with gcc > 8.1. But I was not able to prevent myself to refactore the class in the process. . CHANGELOG:; - Move the implementation from .h to .inl; - Move the definition of the inner class FCPHandler from the .h to .inl; - Group the class member according their visibility (public, protected, private) to avoid interleaving.; - Uniformize the source code comments; - Rename the class members (attributes) to make them consistent with the sofa coding style.; - Factorize the code that was ""duplicated"" in the .cpp between rigid3dtype, rigid3ftype, vec3d, vec3f (I welcome an alternative implementation). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/803:918,test,test,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/803,2,['test'],['test']
Testability,"Initially fixes the visualization in InextensiblePendulum.scn. The second pendulum was out of the frustrum because the bounding box was not computed. The indentation has been changed from tabs to spaces in HexahedronSetGeometryAlgorithms.inl. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3034:782,test,test,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3034,2,['test'],['test']
Testability,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2009:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009,2,['test'],['test']
Testability,"Install FindTinyXML2 for OOT compilation using the binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4545:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4545,2,['test'],['test']
Testability,"Instead of accepting only one parameter applied on all springs, I propose to accept a list of lengths, so that each spring can have its own length. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2602:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2602,2,['test'],['test']
Testability,"Instead of suggesting to add the required plugins in the XML syntax, the goal is to use the scene loader to adapt the syntax to the type of file. For example, in Python, the message will be:. ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene: ; root.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance] ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:1540,test,test,1540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,2,['test'],['test']
Testability,"Instead, I use raw gpu pointers. I measured the performances on the scene `applications\plugins\SofaCUDA\scenes\benchmarks\CudaTetrahedronTLEDForceField_beam10x10x40_gpu.scn` on 50k time steps:. ```; before; [INFO] [BatchGUI] 50000 iterations done in 11.9961 s ( 4168.04 FPS). after; [INFO] [BatchGUI] 50000 iterations done in 10.3888 s ( 4812.87 FPS).; ```. Note that I did not change anything in the algorithm, except the following check:. ```cpp; if (FCrds.y < 0 || FCrds.y >= nbElements); {; FCrds.y = 0;; }; ```. I had to add this check because `FCrds.y` was often equal to `-1`, which then leads to out-of-bounds vector access. This check was not required before, because out-of-bounds texture returns 0.; I don't know if this behavior is intended or not. TODO:. - [x] Test that `CudaTetrahedronTLEDForceField` now compiles with CUDA 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3650:112,benchmark,benchmarks,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650,4,"['Test', 'benchmark', 'test']","['Test', 'benchmarks', 'test']"
Testability,"Interesting CI results a test failer I never heard about :). @guparan , @VannesteFelix any idea if this is related to the PR ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/841#issuecomment-441300085:25,test,test,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/841#issuecomment-441300085,1,['test'],['test']
Testability,"Interesting, I compiled on the CI with just the FAST_MATH option enabled and those tests fails; ```; [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta2ExplicitSolverDynamic_test.rungeKutta2ExplicitSolverDynamicTest_high_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta2ExplicitSolverDynamic_test/rungeKutta2ExplicitSolverDynamicTest_high_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_medium_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_medium_dt_0/); [UnitTests.SofaGeneralExplicitOdeSolver_test/RungeKutta4ExplicitSolverDynamic_test.rungeKutta4ExplicitSolverDynamicTest_small_dt/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralExplicitOdeSolver_test_RungeKutta4ExplicitSolverDynamic_test/rungeKutta4ExplicitSolverDynamicTest_small_dt_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping/0](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2652/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/UnitTests/SofaGeneralImplicitOdeSolver_test_VariationalSymplecticExplicitSolverDynamic_test/variationalSymplecticExplicitSolverDynamicTest_small_dt_without_damping_0/); [UnitTests.SofaGeneralImplicitOdeSolver_test/VariationalSymplecticExplicitSolverDynamic_test.variationalSymplecticExplicitSolverDynamicTest_medium_dt_with_damping/0](https://ci.inria.fr/sofa-ci-dev/jo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769:83,test,tests,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652#issuecomment-1028969769,3,['test'],"['testReport', 'tests']"
Testability,"Interestingly, `addKToMatrix` was not implemented for TriangularFEMForceField. It means, it was not possible to use this component with a linear solver which assembles its matrix.; The implementations are strongly based on the implementations in TriangleFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3991:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3991,2,['test'],['test']
Testability,"Introduce a Mapping component, mapping each tetrahedron in a topology to a scalar value representing its volume. The structure of the `VolumeMapping` class is strongly inspired by `DistanceMapping` and `AreaMapping` (https://github.com/sofa-framework/sofa/pull/4898). Two types of unit tests are added:. - Unit test the derivative and the second derivative using central difference without using the Mapping API; - Generic unit test on a mapping, checking that all the major methods of a mapping are correctly implemented. Also checked by finite difference. Should also comply with https://github.com/sofa-framework/sofa/pull/4897. Lastly, an example is provided with a use case. It allows to constraint the volume of tetrahedra over time. In the example, I use springs to apply the constraints. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4906:286,test,tests,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4906,5,['test'],"['test', 'tests']"
Testability,"Introduce a Mapping component, mapping each triangle in a topology to a scalar value representing its area. The structure of the `AreaMapping` class is strongly inspired by `DistanceMapping` (spoiler alert: soon `VolumeMapping`); The maths (derivative and second derivative) are done here: https://gist.github.com/alxbilger/668e775e52fa41626c54ffa33ef9bd57. Two types of unit tests are added:. - Unit test the derivative and the second derivative using central difference without using the Mapping API; - Generic unit test on a mapping, checking that all the major methods of a mapping are correctly implemented. Also checked by finite difference. Should also comply with https://github.com/sofa-framework/sofa/pull/4897. Lastly, an example is provided with a use case. It allows to constraint the area of triangle over time. In the example, I use springs to apply the constraints. ![image](https://github.com/user-attachments/assets/440004cc-eaa7-4803-9081-e05662954493). The red is the reference (no constraints), and the green is the constrained. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4898:376,test,tests,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4898,5,['test'],"['test', 'tests']"
Testability,"Introduce a free function doing a simple loop in the general case, and use memset in the vector<Vec> case. The operator = on the vector object is faster than the loop. Performance improvements validated by https://github.com/alxbilger/SofaBenchmark/pull/29. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3284:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3284,2,['test'],['test']
Testability,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2303:1075,test,test,1075,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303,2,['test'],['test']
Testability,"Introduce flags to know if STL parallelism is supported (see https://github.com/sofa-framework/BeamAdapter/pull/50), and an example on how to use it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3358:689,test,test,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3358,2,['test'],['test']
Testability,"Introduce the solvers from https://github.com/alxbilger/EigenLinearSolvers. Their description can be found in the readme. The readme mentions only speed ups, but I just found that `examples/Benchmark/Performance/TorusFall.scn` is slower with `EigenSimplicialLDLT` than `SparseLDLSolver`. Need more investigation. Questions for the review:. - Those components must be in Sofa or in a plugin?; - Do you like having Eigen as a prefix of the component? [I don't]. If no prefix, there is a conflict with the legacy solvers.; - What do we do with the csparse-based legacy solvers?; - If decided to remove them, how to deprecate? Do we rename EigenSimplicialLDLT to SparseLDLSolver?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2926:190,Benchmark,Benchmark,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2926,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Introduced in https://github.com/sofa-framework/sofa/pull/3858. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3876:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3876,2,['test'],['test']
Testability,"Introduction (by Damien); Erwan is a new member of Defrost. He will work on sofa, cleaning the haptic plugins & finally make user interfaces. Here is his first PR (to practice writing tests and our workflow :)). This PR contains tests to validate the behavior of the IndexValueMapper engine which was not tested before. ; The component was selected as it is listed into the SofaNGExt list. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/319:184,test,tests,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/319,5,['test'],"['test', 'tested', 'tests']"
Testability,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2038:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038,5,['test'],"['test', 'tested', 'tests']"
Testability,"Introduction of a scene checker SceneCheckDeprecatedComponents. Its job is to check for deprecated components in the scene, which was done previously by SceneCheckAPIChange. But SceneCheckAPIChange is no longer enabled. Note that SceneCheckAPIChange requires an APIVersion component in the scene, but does not use it to check for deprecated components. That is why I decided to move this check elsewhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2267:944,test,test,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2267,2,['test'],['test']
Testability,"Introduction of two scene files. This is actually the same scene, but one is with a `DefaultCollisionGroupManager` and the other is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:724,Benchmark,Benchmark,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['Benchmark'],['Benchmark']
Testability,"Introduction of wrappers, derived from `BaseMatrix` and `BaseVector`, to Eigen matrices. The wrappers are courtesy of @jnbrunet, from https://github.com/jnbrunet/caribou, and have been adapted to SOFA + missing functions for CGLinearSolver. `eigen::EigenMatrix` has the interface of `BaseMatrix`, so it can be used as a matrix storing the linear system, in a linear solver.; An example is provided in `CGLinearSolver`. Performances:. Tested on a cantilever beam from `examples/Components/linearsolver/FEMBAR-CGLinearSolver.scn`. **CompressedRowSparseMatrixMat3x3d**; [INFO] [BatchGUI] 1000 iterations done in 2.62389 s ( 381.113 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 2.23 5.32 2.59 0.21 2587.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:434,Test,Tested,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Test'],['Tested']
Testability,"Investigation from the problem I got with regression, which was that the sofa::component::init(); In GCC, it was crashing, whereas on clang/msvc it was not. After debugging, it appears that there was a infinite loop when calling all the init() of the submodules.; E.g Sofa.Component calls sofa::component::collision::init() which calls initExternalModule of Sofa.Component.Collision. ; But with gcc, it was not calling initExternalModule() of Sofa.Component.Collision but the one of Sofa.Component. and then tries to call again init() etc. I suspect problems with demangling the function name in the binary (extern ""C"") and stuff like that, but I did not go further.; The solution anyway is to put the call of the initialization in init() and not in initExternalModule() (and not vice versa). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3112:1332,test,test,1332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3112,2,['test'],['test']
Testability,"Is it really a fix? ; If yes, could be good to add a test. I never use quads",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2408#issuecomment-941133363:53,test,test,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2408#issuecomment-941133363,1,['test'],['test']
Testability,Is the examples automatically started during CI tests ? ; If not please consider adding a dedicated test (even one loading the examples file) because we don't want to be forced to run manually all the examples scenes to detect possible regressions.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335828643:48,test,tests,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335828643,2,['test'],"['test', 'tests']"
Testability,"Is the topology mandatory for the purpose of `DiagonalMass3_test.checkAttributes`? It seems not when reading the test.; About `DiagonalMass3_test.checkAttributeLoadFromXps` error, you commented `/// Rigid file are not handled only xs3....` [here](https://github.com/sofa-framework/sofa/blob/68cc242dd0140b668485277266d26b0ce9d476cf/SofaKernel/modules/SofaBaseMechanics/SofaBaseMechanics_test/DiagonalMass_test.cpp#L813). So maybe you know how to fix the error?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440211317:113,test,test,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440211317,1,['test'],['test']
Testability,Is there any ... test 🤓 ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-743748962:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-743748962,1,['test'],['test']
Testability,Is there any log I could use to investigate ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289412827:13,log,log,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289412827,1,['log'],['log']
Testability,"Is this CI error is related to the PR ? ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1034/CI_CONFIG=mac_clang-3.5,CI_PLUGINS=options,CI_TYPE=release/6/testReport/(root)/Assembly_test/testDecomposedString/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840:166,test,testReport,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034#issuecomment-494401840,2,['test'],"['testDecomposedString', 'testReport']"
Testability,"Is this PR ready to be reviewed? If yes, the label must be changed. [ci-build][with-all-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1225325160:88,test,tests,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1225325160,1,['test'],['tests']
Testability,"Isolate the piece of code from ; - #4787 . where the change of versions forces to use the new API for intersection, introduced in ; - #4583. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4802:680,test,test,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4802,2,['test'],['test']
Testability,Issue #1363. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1365:264,test,test,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1365,2,['test'],['test']
Testability,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1912:1610,test,test,1610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912,2,['test'],['test']
Testability,"Issue #2402. BarycentricMapping instanciates ""mappers"" according to the topology it is mapping from.; There are direct dependencies on *SetTopologyContainer, and Grids. Morever, it is using as well a few functions from *SetGeometryAlgorithms.; This PR:; - replace the direct usage of *SetTopologyContainer, and uses instead the abstraction TopologyContainer (test if a certain kind of element is present) which should be the same effect;; - move (copy from now) methods from GeometryAlgorithms, into Sofa.Geometry and Sofa.Topology. Those functions are designed to be the most generic possible (but not too much to not have huge/complex template predicates). This ""step-by-step"" process should be the way to convert *GeometryAlgorithms. (and remove this family of component in the future). This PR does not address the issue on the RegularGrid/SparseGrid dependency for now 😥. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2403:359,test,test,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2403,3,['test'],['test']
Testability,"Issue #2954, reports a problem in how context are set. A failing test is introduced in the first commit to demonstrate what happens when an object belong to multiple Node. ; Then a fix is implemented in Node.cpp by forcing base object to be attached to a single context at a time. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2964:65,test,test,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2964,3,['test'],['test']
Testability,"Issue description copied from SOFA Forum; https://www.sofa-framework.org/community/forum/topic/using-navigation-recorded-camera/. I have been trying to use the following scene:; https://github.com/sofa-framework/sofa/blob/master/examples/Components/visualmodel/NavigationRecordedCamera.scn. But it does not appear to work. The recorded camera node in the application shows a warning icon, with the following log on the console:; `[WARNING] [RecordedCamera(recordedCamera0)] Too many missing parameters; taking default ...; `; SO, assuming the default parameters should work fine for the scene.; I referred to the documentation provided here: https://www.sofa-framework.org/community/doc/components/ui/recorded-camera/; Which says I need to record at least two viewpoints, and one can do that using Mouse Manager. I do that by assigning mouse controls to appropriate actions. Left: For viewpoint recording; Right: To start navigation. However, I don’t see anything happening, when I run the Animation and use the left mouse to record viewpoint, at least two orientations, and then right-click to run the navigation. Any input on how to use a navigated recorded camera will be of great help. @hugtalbot",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1934:408,log,log,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1934,1,['log'],['log']
Testability,"Issue detected by @quentinfrancois0. This comes from a change in the Python configuration since the last High Sierra.; The line #include <Python/Python.h> involved a link ""Python"" to the python include, but this is no longer valid in High Sierra. This was causing a fail in the compilation (include not found). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/614:562,test,test,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/614,2,['test'],['test']
Testability,"Issue introduced in https://github.com/sofa-framework/sofa/pull/1167. The static variables were no longer initialized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3962:658,test,test,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3962,2,['test'],['test']
Testability,"It allows to differentiate C/C++/CUDA/(maybe other) flags which are passed through dependencies. Fix compilation problem with ; - https://github.com/sofa-framework/sofa/pull/4878; where specific msvc flags are passed to nvcc (and raise errors). This should be propagated in a potential cleaning of SofaCUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4990:847,test,test,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4990,2,['test'],['test']
Testability,"It allows to write something like:. ```cpp; static constexpr sofa::type::fixed_array<std::size_t, 4> sofaArray { 8, -7, 4, -1};; const auto& [a, b, c, d] = sofaArray;; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3753:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3753,2,['test'],['test']
Testability,It appears that Damien anticipated it: https://github.com/sofa-framework/BeamAdapter/pull/11. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1127441277:114,test,tests,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1127441277,1,['test'],['tests']
Testability,"It avoids a crash if the matrix is not positive definite. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3706:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3706,2,['test'],['test']
Testability,"It avoids a crash in the destructor when `m_handler` has not been affected. And pointers must be initialized anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4712:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4712,2,['test'],['test']
Testability,"It avoids crashes when animate after initialization in a Node where no topology is found. See unit test that I also modified. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3690:99,test,test,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3690,3,['test'],['test']
Testability,"It basically removes the use of `MultiMatrix` which hides the use of a `LinearSolver`. Implicitly, the first linear solver found was used. Now, the `LinearSolver` can be defined directly in the ODE solver as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4628:755,test,test,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4628,2,['test'],['test']
Testability,It compile...now warnings or test failure so let's merge it. ; Thanks raffaela.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331164452:29,test,test,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331164452,1,['test'],['test']
Testability,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1953:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953,2,['test'],['test']
Testability,"It crashed if `context` was `nullptr`. Not sure what to return if `context` is `nullptr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5075:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5075,2,['test'],['test']
Testability,"It does not come from your PR, but while trying to compile this branch with the newest gcc, there is an interesting (and useful) warning:; ```; /home/fred/sofa/src/current/Sofa/framework/Type/src/sofa/type/Mat.h:408:58: warning: array subscript 2 is above array bounds of ‘const sofa::type::VecNoInit<3, double> [2]’ [-Warray-bounds]; 408 | if( rabs( this->elems[i][j] - this->elems[j][i] ) > EQUALITY_THRESHOLD ) return false;; ```; ; Indeed, there is no compile-time test about the fact that the matrix is square or not (so the symmetry could be irrelevant)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240049702:469,test,test,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240049702,1,['test'],['test']
Testability,"It first started from fixing the issue raised by @damienmarchal in https://github.com/sofa-framework/sofa/pull/1657. But then, I just couldn't stop... Very nice activity to blow up some steam, I greatly recommend. Happy holidays !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1682:771,test,test,771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1682,2,['test'],['test']
Testability,"It happened to me in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4307:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4307,2,['test'],['test']
Testability,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4332:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332,2,['test'],['test']
Testability,"It has somehow been forgotten during a refactoring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3775:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3775,2,['test'],['test']
Testability,"It is also deprecated, and replaced by `EIGEN_MAX_ALIGN_BYTES` with value 0. See https://eigen.tuxfamily.org/dox/TopicPreprocessorDirectives.html. It has been introduced in https://github.com/sofa-framework/sofa/commit/a08e0d505cb68d0de73bf7126a1ff1c6f5cd68f0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3780:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3780,2,['test'],['test']
Testability,"It is made common with TetrahedronHyperelasticityFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2838:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2838,2,['test'],['test']
Testability,"It is needed to resolve dependencies when using binaries for dev on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1718:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1718,2,['test'],['test']
Testability,It is not exporting the target properties and thus the include path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1457:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1457,2,['test'],['test']
Testability,"It is not obvious they as the missing one as in fact already included from one of the base header (Data/BaseData). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3297:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3297,2,['test'],['test']
Testability,"It is not used, and its content is deprecated in Cuda 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3869:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3869,2,['test'],['test']
Testability,"It is now possible to ON/OFF SofaPython3 since https://github.com/sofa-framework/SofaPython3/pull/62; So let's make it fetchable again in SOFA :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1574:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1574,2,['test'],['test']
Testability,"It is possible to select multiple timers to be displayed in the chart through checkboxes. ![multipleSelection](https://user-images.githubusercontent.com/10572752/120432765-a9f89880-c37a-11eb-8605-2886ec7dd893.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141:754,test,test,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141,2,['test'],['test']
Testability,"It is preferable to force the `constexpr` context:. ```cpp; static constexpr ResolutionMethod NonsmoothNonlinearConjugateGradient(""NonsmoothNonlinearConjugateGradient"");; if (d_resolutionMethod.getValue() != NonsmoothNonlinearConjugateGradient); {; ```. The compiler may not choose to use `constexpr` in:. ```cpp; if (d_resolutionMethod.getValue() != ResolutionMethod(""NonsmoothNonlinearConjugateGradient"")); {; ```. Therefore, no `constexpr` check if `NonsmoothNonlinearConjugateGradient` is not in the list. There is a runtime check though. The type allows to deprecate a key if desired (I am thinking about the Data `method` in the FEM force fields). There is also a description of each key. And the whole list (key + description) can be added easily in the description of the Data, hence in the documentation. The major problem is about the GUI. More particularly, when a Data is read to be displayed in the GUI. Here, each of the `SelectableItem` is a new strong type. So there is no `DataTypeName`, `DataTypeInfo` etc for the new type. I tried to factorize with a common base class (`BaseSelectableItem`) but without success. I tried to define `DataTypeName`, `DataTypeInfo` etc for `SelectedItem` but without success. The consequence is that I cannot specialize a widget for this type of Data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5062:3791,test,test,3791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5062,2,['test'],['test']
Testability,"It is required in case of multiple inheritance of BaseObject in a BaseLinearSolver . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2799:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2799,2,['test'],['test']
Testability,"It is useful to be able to load shaders directly from a std::string as it allows us to not need filesystem management. Consequently ""fixed"" shaders like shadows (or normal rendering when OpenGL Core profile will come) will be directly integrated into the libs (no more share/shaders directory to locate/find/read). [needed to solve #142 ]. Checklist to merge this PR: ; - [x] succeed on each compilation setup on the CI ; - [x] does not generates new warnings or test failure ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] cleans stuff; - [x] have tests on the introduced features. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:463,test,test,463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,2,['test'],"['test', 'tests']"
Testability,"It is very useful to store and be able to retieve, for each object/node ; where it is implemented and where it was instanciated. This PR implements that. Having this allows to implement cool feature like in to jump from the selected object/node in scene graph straight in the scene file (python or xml) or to the implementation file (cpp or python). . We have such a feature in SofaQtQuick. We will backport this feature in a second PR soon. . The change in dmsg_* are a ""passager clandestin"" but a small one :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1012:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1012,2,['test'],['test']
Testability,"It looks like the intialization of the MO when nothing is given in input is a problem .. not sure. I see [this test](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1977/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/testReport/UnitTests/SofaDeformable_test_RestStiffSpringsForceField_test/defaultBehaviorVec3/)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-816682682:111,test,test,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-816682682,2,['test'],"['test', 'testReport']"
Testability,"It looks like this is the reason why SofaPython3 tests are failing.; I still have no idea why for now... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059:49,test,tests,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059,3,['test'],"['test', 'tests']"
Testability,"It makes no sense to have a drawSize set to zero by default given that the; drawing is activated by an additional drawPoints/drawBox boolean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3045:681,test,test,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3045,2,['test'],['test']
Testability,"It might not break anything, except if SReal == float. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2808:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2808,2,['test'],['test']
Testability,"It really appears as a proof of concept.This work will be very useful, especially regarding the recent discussion on matrix formats in SOFA relying on Eigen. Handles here only one type Eigen. Double/Float compatibility depending on SOFA compiling options (adjust with template): Vec3 or Real. Let’s make it explicitly only for double. A test is also needed here (e.g. AbstractTypeInfo). We need in a future.a more generic way for other Eigen types.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-708261022:337,test,test,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499#issuecomment-708261022,1,['test'],['test']
Testability,"It results in this structure:. ![image](https://user-images.githubusercontent.com/10572752/213701188-d0b43e3a-7123-4de5-a92f-be2f6ff3c8ce.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3598:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3598,2,['test'],['test']
Testability,"It seems it introduced a big decrease in performance.; I suppose we should freeze/unfreeze periodically (every second or so) instead of doing it every time step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2479:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2479,2,['test'],['test']
Testability,It seems like the function was tested through DataFilename as it is failing in `UnitTests.SofaCore_test/DataFileName_test.checkSetGetRelativePath`. But I agree that it needs to be tested in SofaHelper/FileRepository nevertheless.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2350#issuecomment-924101049:31,test,tested,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2350#issuecomment-924101049,2,['test'],['tested']
Testability,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:512,Test,Test,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,3,"['Test', 'test']","['Test', 'test']"
Testability,"It seems that Color has been deprecated a long time ago (git blame shows 03/2017 for the message). And some stuff (ctor/dtor/set()) are even not defined in the cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4264:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4264,2,['test'],['test']
Testability,"It seems that `serr` was outputed as WARNING in the test and thus not making it fail. See pre-merge output [here](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options/267/consoleText) and search for ""Vertex2Frame : no vertices or normals found...""; Replacing it with `msg_error` create a ""real"" error so the test fails.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331837341:52,test,test,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331837341,2,['test'],['test']
Testability,"It seems that the test still fails on Ubuntu Debug: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=debug/4872/testReport/UnitTests/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464#issuecomment-1935489193:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464#issuecomment-1935489193,2,['test'],"['test', 'testReport']"
Testability,"It seems that there was an error in the code of the SparseLDLSolver in the assembling of the constraint matrix.; I tried to see the execution of this function in the scene InextensiblePendulum.scn and it produced a wrong result at the first step (with the current master branch).; After this fix, it starts with a coherent behaviour but then it still fails. By submitting this pull request, I acknowledge that; I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco). Reviewers will merge this pull-request only if. it builds with SUCCESS for all platforms on the CI.; it does not generate new warnings.; it does not generate new unit test failures.; it does not generate new scene test failures.; it does not break API compatibility.; it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010:768,test,test,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010,2,['test'],['test']
Testability,"It seems to come from some very old version of the STL from SGI (google is not very prolix on this); In any case, this is not defined by the STL of msvc, libc++ (llvm) and libstdc++ (gnu gcc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251:732,test,test,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251,2,['test'],['test']
Testability,It should be alright now. Let's try to [ci-build][with-scene-tests] :-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536#issuecomment-356976670:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536#issuecomment-356976670,1,['test'],['tests']
Testability,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1985:1043,test,test,1043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985,2,['test'],['test']
Testability,"It started from the case where SparseGrid could not open .OBJ files (because it is upper case 🐶 ); Now SparseGrid relies on the FactoryMesh mechanism for its extension management. BUT MeshOBJ is super deprecated, and the legacy helper::io::MeshLoader (not the one in sofa::core::loader) should be not used anymore.; BUT SparseGrid does not really handle src=""@loader"" syntax very well now, and it will be upgraded in the future. . I added some tests anyway 💛 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:444,test,tests,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,3,['test'],"['test', 'tests']"
Testability,"It was agreed that runSofa is on its dying...but I see so much people that still use it so here is a set of patches to may make their live easier. I tried to spend as few time as possible so it is not super clean. . This PR contains: ; 1) Extend the live coding support. Before this PR only python script controller where concerned. Now any xml, pyscn and other is concerned when runSofa is started with the -i option. This is very usefull to make live demonstration, explaining scenes to an audiance or practice on small scene. It has no impact on user that don't start runSofa without -i. . 2) Currently Object that have messages in their logs exhibits small signs (green/yellow/red). This PR extends this behavior to the Node so it is more consistant and easy to locate the messages. . 3) Adds an openInEditor function in the pop menu in the scene graph to open the current scene in an external editor (It is nothing but I use that all the time in qtcreator and I wanted the same in sofa). Enjoy/. CHANGELOG for @hugtalbot & @guparan :; - [runSofa] ; - when using runSofa with the -i option adds live coding support for xml & pyscn scenes.; - adds icons (green, red, yellow) on nodes when their is message (before only the object have the icons). ; - in the scene graph pop-up menu adds an entry that open the current scene into an external editor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337:641,log,logs,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337,3,"['log', 'test']","['logs', 'test']"
Testability,"It was already marked deprecated but only in the documentation (comment).; It must be deprecated because it duplicates the functionality of two other visitors. It is clearer to call the two other visitors. In GenericConstraintSolver, `buildSystem_matrixAssembly` is divided into `parallelBuildSystem_matrixAssembly` and `sequentialBuildSystem_matrixAssembly` depending on the value of `d_multithreading`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393:944,test,test,944,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393,2,['test'],['test']
Testability,"It was commented in CMakeLists.txt, so never compiled. * cylinder_TLEDTetraSolution.scn: must not be in SOFA examples because it contains CudaTetrahedronTLEDForceField. Deleted; * CudaTetrahedronTLEDForceField.scn: it mentioned meshes that are not in the repository. Therefore the content of cylinder_TLEDTetraSolution.scn has been taken instead. However, the simulation compared the TLED solution to a reference solution and they are not matching. The reference solution is removed. It may indicate a problem, or not... Note that there is no CPU version of this force field. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2865:1115,test,test,1115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2865,2,['test'],['test']
Testability,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1946:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946,2,['test'],['test']
Testability,"It was initially defined in the same files than DistanceMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3707:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3707,2,['test'],['test']
Testability,"It was not possible to compile runSofa without activating SofaGuiQt, because GuiDataRepository was instantiated in SofaGuiQt library.; As GuiDataRepository seems to be rather generic and not tied to Qt, GuiDataRepository has been moved to SofaGuiCommon ; and allows runSofa to be compiled without enabling SOFA_GUI_QT. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/599:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/599,2,['test'],['test']
Testability,"It was only used if a ""LocalStorage"" stack was provided but #4327 showed that it was not used actually.; (and #4328 showed it was used it in a wrong way). So this PR makes all the related stuff (nodedata member, readNodeData and writeNodeData) non-functional at all . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4350:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4350,2,['test'],['test']
Testability,"It was pointed by @EulalieCoevoet that the callbacks update are only called when the modified data is accessed for reading. This has a consequence in the UX, when a data field value is changed in the inspector, the callback is only executed when data is accessed... but not when we click on the ""update"" or ""ok"" button. . It was thus suggested to trigger the callback by accessing the component state.; All other change are just cleaning and refactoring of the function. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3713:1012,test,test,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3713,2,['test'],['test']
Testability,"It was reported that include_guard(GLOBAL) is problematic with third-party plugins so let's go back to the ""normal"" version. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1467:439,test,test,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1467,2,['test'],['test']
Testability,It won't compile here on the CI if you don't merge your PR in this one. Or I missed something.; I will test it on my computer.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-526513905:103,test,test,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-526513905,1,['test'],['test']
Testability,It worked. Note that test failures and crashes are not due to this PR :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780069074:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780069074,1,['test'],['test']
Testability,"It would be better as unit test.. (when I have time), but until then, I put those scenes inside examples/benchmarks/TopologicalChanges. NB: some scenes are crashing. This reveals some component have been created with a copy past of the TopologyHandler but are not really handling topological changes. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2161:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161,4,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"It would be better to have gtest as an external lib... but in the meantime before such a PR arrive here is a gtest update to the latest official version (1.10). . It contains nice features to make abstract tests (to validate an abstract class properties on all its implementation). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1705:206,test,tests,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1705,3,['test'],"['test', 'tests']"
Testability,It would be nice to have a test in SofaTest that validate that all the element in the scene ; are correctly computing their BBox. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/412:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/412,1,['test'],['test']
Testability,"It would fix a scene, if only there was such a scene... Currently, the constructor just crashes. There are no tests and no scenes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4711#issuecomment-2092530090:110,test,tests,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4711#issuecomment-2092530090,1,['test'],['tests']
Testability,It's something I noticed when inspecting the values while debugging in https://github.com/sofa-framework/sofa/issues/4051. I would like to write a unit test if I find the time,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645661295:152,test,test,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063#issuecomment-1645661295,1,['test'],['test']
Testability,"I’m currently cleaning the ci infra disks, before anyone else notices… ;). > Le 28 mars 2017 à 09:36, Matthieu Nesme <notifications@github.com> a écrit :; > ; > more than 40Go of text!!!; > In top of adding a stopping criterion based on execution time, we could also add a maximal size for the logging buffer.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/sofa-framework/sofa/issues/221#issuecomment-289688384>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AR1ILlGbW9e6NmUklt1K8Zg1tlqpXtHkks5rqLiSgaJpZM4Mp6My>.; > . --------------------------------; Bruno Carrez; SED Inria Lille-Nord Europe; bruno.carrez@inria.fr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289693213:294,log,logging,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289693213,1,['log'],['logging']
Testability,"Just a PR to restore the SofaFramework folder for its modules (it was spread at the root of the project before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2061:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2061,2,['test'],['test']
Testability,"Just a minor fix, as the `VecXTypes` are not visible without the explicit namespace. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1188:336,test,test,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1188,2,['test'],['test']
Testability,Just added a dummy commit to see if ALL the tests are executed on CI (I changed some stuff in CI scripts).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780032801:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825#issuecomment-780032801,1,['test'],['tests']
Testability,Just adding a small helper function I'm using in [PR #33](https://github.com/sofa-framework/SofaPython3/pull/33). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1436:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1436,2,['test'],['test']
Testability,Just backporting small changes made on our dev branch... Plz merge quickly :D. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1169:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1169,2,['test'],['test']
Testability,Just before the February school break we started a branch on our repo. The task #189 is complete (needs more testing to validate it) and is a prerequisite before real python 3 refactoring in SofaPython.; Stay tuned.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23#issuecomment-282653658:109,test,testing,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23#issuecomment-282653658,1,['test'],['testing']
Testability,"Just call getValue once and use the const ref afterwards. This is particularly showing for the function getIndex() which is called a lot of times (really a lot). Release mode (full optim), MSVC and scene from Components/topology/RegularGridTopology.scn:; before: `5000 iterations done in 22.5747 s ( 221.487 FPS).`; after : `5000 iterations done in 20.7355 s ( 241.132 FPS).`; so 10% speedup. But the optimization is more effective the more complex the mesh is; (I changed the mesh in the previous scene with a liver with 500K triangles and the speed up was like around 30%). In any case, it shows that `getValue()` is not really ""free"" and must be called only once if the value is needed more than one time, especially in the ""hot"" functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:1283,test,test,1283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,2,['test'],['test']
Testability,"Just changing launcher.py to use the library SofaPython3 instead of SofaPython. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2968:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2968,2,['test'],['test']
Testability,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4325:886,test,test,886,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325,2,['test'],['test']
Testability,"Just for @fredroy :eyes:; .. We lack a ""pr: super fast merge"" :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4474:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4474,2,['test'],['test']
Testability,"Just happened to compile without the Compat option, and these 3 files were still using compat files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2574:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2574,2,['test'],['test']
Testability,Just not 100% sure for LCPcalc.h and OglModelPolicy.h ; Else we should get back to original warning number. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1421:359,test,test,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1421,2,['test'],['test']
Testability,Just removing unnecessary headers include inside header in sofa::core; No forward class or intelligent refactoring. any suggestion/remark is welcomed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/638:404,test,test,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/638,2,['test'],['test']
Testability,"Just set all data defined by the loader as read-only since it makes no sense any user modifies them directly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1660:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1660,2,['test'],['test']
Testability,"Just some cleaning while debugging the gui. All code are under #ifdef never define. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4025:623,test,test,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4025,2,['test'],['test']
Testability,Just tested it @epernod it works as a charm :+1: :+1: :+1: :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2377#issuecomment-952864133:5,test,tested,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2377#issuecomment-952864133,1,['test'],['tested']
Testability,Just tested it on Windows and it's indeed a mess. | | QGLViewer | QtViewer |; | ----- | ----- | ----- |; | S key | - Opens a dialog to save a screenshot next to runSofa executable<br>- Opens a 2nd dialog for image settings<br>- Captures the viewer only<br>- Crashes if file exists | - Quietly saves a screenshot in the screenshots folder<br>- Captures the whole interface |; | Screenshot<br>button | - Opens a dialog to save a screenshot in the screenshots folder<br>- Captures the whole interface<br>- Repeats 3 times | - Opens a dialog to save a screenshot in the screenshots folder<br>- Captures the viewer only<br>- Repeats 2 times |. Which behavior is the right one? :laughing:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1791#issuecomment-853756838:5,test,tested,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1791#issuecomment-853756838,1,['test'],['tested']
Testability,"Just tested it, fix indeed the issue",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279477705:5,test,tested,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279477705,1,['test'],['tested']
Testability,Just tested it:. Before | After 1 | After 2 ; :-------:|:---------:|:--------:|; ![before](https://user-images.githubusercontent.com/1651667/29559563-ba6ef7ee-872f-11e7-901d-d584baf0d8be.png) | ![after 1](https://user-images.githubusercontent.com/1651667/29559566-bd0aeb20-872f-11e7-8859-9455807cd76b.png) | ![after 2](https://user-images.githubusercontent.com/1651667/29615570-b4570754-880e-11e7-84a2-4983a2cf0726.png),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369#issuecomment-323977178:5,test,tested,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369#issuecomment-323977178,1,['test'],['tested']
Testability,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1835:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835,2,['test'],['test']
Testability,"Just to start identifying the first compilation errors on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5056:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5056,2,['test'],['test']
Testability,"Just update the 3 examples for components: `WriteState`, `ReadState` and `CompareState` to be more useful. Here is the screenshot of CompareState.scn with in blue the simulated beam, in green the result of readState from a record of a heavier beam and in purple the drawing from `CompareState` showing distance between the simulated dof and the expected position from the state file. ![image](https://github.com/sofa-framework/sofa/assets/21199245/4164a242-4462-45fa-a366-e77ab11e0076). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4745:1026,test,test,1026,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4745,2,['test'],['test']
Testability,Just wanted to see how we could clean Quater. There is obviously a lot to do. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/842:331,test,test,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/842,2,['test'],['test']
Testability,Keep in mind and FIX tests that were disabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2296:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2296,1,['test'],['tests']
Testability,LCPForceFeedback test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4671:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4671,1,['test'],['test']
Testability,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2187:1303,test,test,1303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187,2,['test'],['test']
Testability,"Last PR, moving finally all the code related to OBB and Capsule to SofaMiscCollision.; It should definitely cut some branches in the inclusion tree. Fix #1624 finally. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2168:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2168,2,['test'],['test']
Testability,Last [ci-build][force-full-build][with-all-tests] in case :F,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302126:43,test,tests,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242#issuecomment-1294302126,1,['test'],['tests']
Testability,"Last big one. #1527 . based on:; - #2790 . and needs :; - #2766 . Deprecates **_SofaBaseCollision_**, **_SofaMeshCollision_**, **_SofaGeneralMeshCollision_**, **_SofaObjectInteraction_**; Deprecates partially **_SofaConstraint_**, **_SofaUserInteraction_**. Split Collision-related components into 3 categories:; - ~~**Model**~~ **Geometry**: with all the collision models (sphere model, point model, triangle model....); - **Detection**: subdivided in 2 other categories: ; - **Algorithm**: narrow, broad phases implementation; - **Intersection**: how to compute intersections between models; - **Response**: subdivided in 2 other categories: ; - **Mapper**: how to map a contact between 2 objects (rigid, bary, etc); - **Contact**: how to handle a contact itself (create spring, constraint, etc). EDIT:; ~~[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239 ]~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2813:1422,test,test,1422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2813,2,['test'],['test']
Testability,Last but not least PR on SPH plugin to restore ParticleSink component.; - Move all code inside inl file; - Fix the extern template; - Add prefix d_ to data; - Fix global behavior; - Update the existing basic example scene ; - Add 2 others scenes using Topology changes and OglFluid rendering done in previous PR. ![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67562701-8b063f00-f71f-11e9-9e0b-d72e2a0f347a.gif). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,2,['test'],['test']
Testability,Last check : [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1294474300:33,test,tests,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299#issuecomment-1294474300,1,['test'],['tests']
Testability,"Last lifecycle before the release. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4760:576,test,test,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4760,2,['test'],['test']
Testability,"Last one in SofaGeneral !. A priori not breaking. Usual cleaning (namespaces, pragma),. Forgot the reference to the issue 😅 #1529 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1595:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1595,2,['test'],['test']
Testability,"Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. ; And for the note, the error is a false positive. The regression should be regenerated at one point.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1937719127:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1937719127,1,['test'],['test']
Testability,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1928:1010,test,test,1010,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928,2,['test'],['test']
Testability,"Last step to complete the task to unify the image importing process. Now that CImgPlugin is integrated, ImageBMP/ImagePNG and ImageQt can be removed from the trunk of Sofa. ; It lets all the responsibility of reading images to CImgPlugin (or any user custom plugin). (closes finally #9 and #51 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424:548,test,test,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424,2,['test'],['test']
Testability,Last uses of variable manually defined 3.14... ( for #799 ); Now uniformly using M_PI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1264:338,test,test,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1264,2,['test'],['test']
Testability,Latest benchmark on the caduceus:. Before; ```; [BatchGUI] 10000 iterations done in 37.8088 s ( 264.489 FPS).; ```. After; ```; [BatchGUI] 10000 iterations done in 14.4789 s ( 690.661 FPS).; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1655466999:7,benchmark,benchmark,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1655466999,1,['benchmark'],['benchmark']
Testability,"Launching any xml scene in Debug fire this assert multiples times:; ```; void DDGNode::addOutput(DDGNode* n); {; if(std::find(outputs.begin(), outputs.end(), n) != outputs.end()); {; assert(false && ""trying to add a DDGNode that is already in the output set."");; return;; }; ```. Here is the Call stack:; ```; 	SofaCore_d.dll!sofa::core::objectmodel::DDGNode::addOutput(sofa::core::objectmodel::DDGNode * n) Line 118	C++; >	SofaCore_d.dll!sofa::core::objectmodel::Base::addUpdateCallback(const std::basic_string<char,std::char_traits<char>,std::allocator<char> > & name, std::initializer_list<sofa::core::objectmodel::BaseData *> inputs, std::function<enum sofa::core::objectmodel::ComponentState __cdecl(sofa::core::DataTracker const &)> func, std::initializer_list<sofa::core::objectmodel::BaseData *> outputs) Line 119	C++; 	SofaCore_d.dll!sofa::core::objectmodel::Base::Base() Line 75	C++; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1502:43,assert,assert,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1502,2,['assert'],['assert']
Testability,Let's add a test like in https://github.com/sofa-framework/sofa/pull/289 !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/409#issuecomment-330462081:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/409#issuecomment-330462081,1,['test'],['test']
Testability,Let's count warnings: [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-673315660:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-673315660,1,['test'],['tests']
Testability,Let's fix them all !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/773:273,test,test,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/773,2,['test'],['test']
Testability,"Let's make is sexier . Before: ; ![TetrahedronFEMForceField_00000000](https://github.com/user-attachments/assets/1a69a1f7-4799-4db0-8fe9-e6d4b4c4a7d8). After:; ![TetrahedronFEMForceField_00000001](https://github.com/user-attachments/assets/3b34d328-af75-41fa-8e26-c91fb8d309ce). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4922:818,test,test,818,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4922,2,['test'],['test']
Testability,"Let's not pollute the `plugins` directory of SOFA install with all the old modules like SofaBaseMechanics that are now collections.; I created a new `collections` directory for them, working the same way as `plugins`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,2,['test'],['test']
Testability,Let's rebuild to check the CI ; [ci-build][force-full-build][with-all-tests]. thanks again @Changjing-Liu for your contribution,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1210386812:70,test,tests,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1210386812,1,['test'],['tests']
Testability,"Let's start from the begining. . By default the msg_ api does not stores the messages because in some context of use it is not needed while in some other it is (in a non graphical sofa vs in a sofa GUI). . Thanks to the MessageHandler class it is easy to add custom message storage that fits the application's needs.; ; Currently the existing LoggingMessageHandler can be used to store in a single storage queue the messages. The queue can be queried to get the messages for whatever the application developer want to do with them (displaying them in GUI or showing a long history, ...). In serr/sout API a different scheme is used as the history is stored at the Base object level in a (size increasing) string. This behavior is now possible with the PerComponentLoggingMessageHandler.; This behavior is closer to the existing serr/sout but it also have several improved properties:; - the message are really stored (not just the 'text' description);; - no text concatenation (memory resize, memory copy) at each message, ; - the queue size of each component can be controlled with a data field as well as the message type to store or to ignore in the queue. ; - when the handler is not installed...there is not recording of the message...so there is a computation & memory zero cost. . NB: The d_msgLevel and d_logLevel in Base* are only there for discussion but they are currently unused now. . There PR also contains several new tests. . Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:343,Log,LoggingMessageHandler,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,4,"['Log', 'test']","['LoggingMessageHandler', 'test', 'tests']"
Testability,Let's test to define it `constexpr` while defining it in the inl file (including it in the header) and see if it works as `constexpr`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1239097355:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221#issuecomment-1239097355,1,['test'],['test']
Testability,Let's try something new: [ci-build] [with-scene-tests] 😉,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350#issuecomment-318602338:48,test,tests,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350#issuecomment-318602338,1,['test'],['tests']
Testability,"Let's try this small scene; ```xml; <?xml version=""1.0"" ?>; <Node name=""root"" >; <MergeVectors template=""tartempion"" name=""merge"" nbInputs=""2""/>; </Node>; ```; No error is triggered on the console, and obviously ""tartempion"" is not a valid template; However in debug, I can follow up to the line where a message is sent to object->serr in ObjectFactory.cpp around line 174; if (!usertemplatename.empty() && object->getTemplateName() != userresolved) {; object->serr << ""template <"" << usertemplatename << ""> incorrect, used <""; << object->getTemplateName() + "">"";; }. maybe s.t. related to logging not initialized in the object at that time ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378:590,log,logging,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378,1,['log'],['logging']
Testability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,2,['test'],['test']
Testability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/298:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/298,2,['test'],['test']
Testability,LightManager test was failing on Windows.; Fixed using SofaTest API (inspired by SofaBaseCollision_test/Sphere_test).; Fixes #54,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/70:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/70,1,['test'],['test']
Testability,"Like the port salut, everything is in the title. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/764:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/764,2,['test'],['test']
Testability,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2229:809,test,test,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229,2,['test'],['test']
Testability,"Link with issue #2457. ~~The solution here is quite straight-forward (and a bit ugly IMO): encase 2d & 3d cases with `if constexpr (dimensions == X)`; Not ideal for the moment but hard to come by with the current design.~~ now the methods are not compiled if the dimension is wrong,; The merge of those two masses should this into account. (mentioned here #2452). Plus remove ""static_warning"" if the call was wrong and replace it with a real static_assert. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2514:996,test,test,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2514,2,['test'],['test']
Testability,"List of things to do:; - fix conflicts; - expose the private members as Data<> (for getters/setters, py2, xml etc); - register the component in the Factory (now it cannot be spawn like other BaseObject); - get an example, tests; - some math people could review (@hugtalbot, @jnbrunet ) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-910077737:222,test,tests,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-910077737,1,['test'],['tests']
Testability,"LocalMinDistance is printing a msg_warning when the lines are parallel.; This is a legitimate case that is properly handled in the rest of the code; so I and @EulalieCoevoet removed the message and document a bit the code while I was trying; to understand it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2976:799,test,test,799,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2976,2,['test'],['test']
Testability,"Located in ```examples/Components/mapping/DeformableOnRigidFrameMappingConstraints.scn```, the contact seems to be the reason of the crash, full log:. ```; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::mapping::linear::BarycentricMapperMeshTopology<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::apply(sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > >&, sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > const&); sofa::component::mapping::linear::BarycentricMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double>, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::apply(sofa::core::MechanicalParams const*, sofa::core::objectmodel::Data<sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > >&, sofa::core::objectmodel::Data<sofa::type::vector<sofa::type::Vec<3u, double>, sofa::type::CPUMemoryManager<sofa::type::Vec<3u, double> > > > const&); sofa::component::collision::response::mapper::BarycentricContactMapper<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::updateXfree(); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::geometry::LineCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3524:145,log,log,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3524,1,['log'],['log']
Testability,Log mutex locked twice (leading to crash),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3610:0,Log,Log,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3610,1,['Log'],['Log']
Testability,"Looking at the source code I just find a good example. . It is from https://github.com/sofa-framework/sofa/blob/8410f29a80093f44fb0b224c91867bb7f65ee328/modules/SofaGeneralTopology/SofaGeneralTopology_test/SphereGridTopology_test.cpp; In the SphereGridCreation test. Erik wanted to test both valid and invalid code path, and he is right to do so,...but as Sofa has no way to report error to the caller's he cannot detect that (I assume this is probably what he wanted to test and why he commented out line); ```cpp; // EXPECT_EQ(sphereGrid2, nullptr);; ```. With explicit message specification improve the situation as he can now write things like that:; ```cpp; bool SphereGridTopology_test::SphereGridCreation(); {; // Creating a good Grid; {; //// This is valid code so a warning or an error is probably a regression leading to test failure; ; WarningAndErrorAsTestFailure err(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid = sofa::core::objectmodel::New<SphereGridTopology>(5, 5, 5);; EXPECT_NE(sphereGrid, nullptr);; EXPECT_EQ(sphereGrid->d_radius.getValue(), 1.0);; }. // Creating a bad Grid; {; /// must send warn a warning message to the caller indicating something goes wrong; /// mustn't send an error ; ErrorAsTestFailure err(SOURCE_LOCATION) ;; ExpectWarning warn(SOURCE_LOCATION) ;. SphereGridTopology::SPtr sphereGrid2 = sofa::core::objectmodel::New<SphereGridTopology>(-1, 0, 1);; }. return true;; }. EDIT: It just appear to me that the message rising failures are very similar in EXPECT_ /ASSERT things from gtest...nothing more, nothing less ...and similarly to EXPECT_ they are very verbose because it is what tests do :) ; Maybe I should make a macro to emphasize the similarities and showing this is part of the test framework ? ; ```cpp; EXPECT_MESSAGE( Error ) ;; EXPECT_MESSAGE( Warning ) ;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168:261,test,test,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288670168,7,"['ASSERT', 'test']","['ASSERT', 'test', 'tests']"
Testability,Looks all good to me ... and gg guillaume for the extra test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/409#issuecomment-330655999:56,test,test,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/409#issuecomment-330655999,1,['test'],['test']
Testability,Looks fine now.; [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907#issuecomment-461843469:39,test,tests,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907#issuecomment-461843469,1,['test'],['tests']
Testability,"Looks fine to me, build and tests are passing (windows fails due to lack of free space). fast-merge -> let's merge this to alleviate our dev meetings",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1646#issuecomment-740486542:28,test,tests,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1646#issuecomment-740486542,1,['test'],['tests']
Testability,"Looks good to me, any idea what is the issue with the `emptyForceField.py` (unrelated to this PR) ?. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2804/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/8/testReport/SceneTests/applications_plugins_SofaPython3_examples/emptyForceField_py/. thanks @fredroy for the change and @alxbilger for the vigilance :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108841718:226,test,testReport,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108841718,1,['test'],['testReport']
Testability,"Looks good, let's [ci-build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378934582:40,test,tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378934582,1,['test'],['tests']
Testability,"Looks like this particular case falls under the Euler angles singularities. The initial quaternion `q0` converted to Roll-Pitch-Yaw Euler angles has a pitch of `pi / 2`, which corresponds to a singularity case, i.e. there is no global and smooth solutions to the inverse problem of converting the rotation to Euler angles. In this particular case, one DOF is lost (I found the explanations of this quite intuitive and clear here: http://lavalle.pl/vr/node83.html ).; When we can afford it, a good way would be to only allow global parameterizations of SO(3) and simply not use Euler angles, but I guess we have reasons to have them in SOFA and have to deal with them.; I would not go to change anything in the `createQuaterFromEuler` or `toEulerVector` conversions functions, as to me they are valid as it and it is left to the user of Euler angles to know that they have to be used as their are, locally, as it is a local parameterization, i.e. not close to their singularities.; I guess this is what happened also in the random rotations failing tests.; What do you think about simply fixing our tests by excluding cases where quaternion `q0` is leading to a Euler angles singularity (here checking that pitch is not `pi / 2`), prior to converting them back to queternion `q1` ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376:1048,test,tests,1048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1698867376,2,['test'],['tests']
Testability,"Loop/>. <EulerImplicitSolver name=""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <!-- A constant sparsity pattern is assumed, but the presence of PlaneForceField invalid this assumption; Indices checking is enabled in order to detect that the pattern is not constant.; As soon as the pattern is no longer constant, insertions in the matrix are ignored.; Since it happens for all forces from PlaneForceField, they can be considered semi-explicit.; -->; <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix"" name=""A"" printLog=""true"" checkIndices=""true""/>; <EigenSimplicialLDLT template=""CompressedRowSparseMatrix"" linearSystem=""@A""/>; <MechanicalObject name=""DoFs"" />; <UniformMass name=""mass"" totalMass=""320"" />; <RegularGridTopology name=""grid"" nx=""4"" ny=""4"" nz=""20"" xmin=""-9"" xmax=""-6"" ymin=""0"" ymax=""3"" zmin=""0"" zmax=""19"" />; <BoxROI name=""box"" box=""-10 -1 -0.0001 -5 4 0.0001""/>; <FixedProjectiveConstraint indices=""@box.indices"" />; <HexahedronFEMForceField name=""FEM"" youngModulus=""4000"" poissonRatio=""0.3"" method=""large"" />; <PlaneForceField name=""planeForce"" stiffness=""1000"" damping=""20"" normal=""0 1 0"" d=""-3"" showPlane=""true""/>. </Node>; ```. Note that a lot of changes was about fixing the index checking in ConstantSparsityPatternSystem. It was never implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:3919,test,test,3919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,2,['test'],['test']
Testability,"MFC/ATL SDK is needed to get this header (it is proposed in Visual Studio installer).; I tried to remove it once and had an issue, will retry and log here.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334512592:146,log,log,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448#issuecomment-334512592,1,['log'],['log']
Testability,"MSVC got recently a flag ""/fpermissive-"" to have a strict conformance with C++ standard (and is enabled by default if c++20 is specified). -> https://docs.microsoft.com/en-us/cpp/build/reference/permissive-standards-conformance?view=msvc-170. It would force the code made with msvc to be more similar to the one made with gcc/clang. By curiosity, I tried to enable it on SOFA master and got some errors:; - some initData not recognized (and the SOFA_CLASS and its `using Base::initData` does not work ??); - a fwd declaration of a Link was not possible anymore (because Node is not known at that time); - lastly a symbol was made twice, due to both the specialization in cpp, and the {} in the header file. To discuss:; - should we add an option to make the compilation with MSVC on strict conformance (add the flag ""/fpermissive-"" to CXX_FLAGS); - should we even make it by default ? (this could be quite breaking). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3290:1456,test,test,1456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3290,2,['test'],['test']
Testability,M_MapMapSparseMatrix_addCol/1024/512 3.54 ms 3.53 ms 195; BM_MapMapSparseMatrix_addCol/2048/512 7.01 ms 7.11 ms 112; BM_MapMapSparseMatrix_addCol/4096/512 14.1 ms 14.1 ms 50; BM_MapMapSparseMatrix_addCol/512/1024 5.74 ms 5.72 ms 112; BM_MapMapSparseMatrix_addCol/1024/1024 11.8 ms 11.7 ms 56; BM_MapMapSparseMatrix_addCol/2048/1024 23.4 ms 23.4 ms 30; BM_MapMapSparseMatrix_addCol/4096/1024 46.1 ms 46.9 ms 14; BM_MapMapSparseMatrix_addCol/512/2048 23.5 ms 23.4 ms 28; BM_MapMapSparseMatrix_addCol/1024/2048 46.2 ms 45.8 ms 15; BM_MapMapSparseMatrix_addCol/2048/2048 92.6 ms 93.8 ms 9; BM_MapMapSparseMatrix_addCol/4096/2048 187 ms 188 ms 4; BM_MapMapSparseMatrix_addCol/512/4096 59.8 ms 59.7 ms 11; BM_MapMapSparseMatrix_addCol/1024/4096 119 ms 120 ms 6; BM_MapMapSparseMatrix_addCol/2048/4096 238 ms 240 ms 3; BM_MapMapSparseMatrix_addCol/4096/4096 480 ms 477 ms 2; ```. After:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSparseMatrix_writeLine/1024 2.95 us 2.95 us 248889; BM_MapMapSparseMatrix_writeLine/2048 6.29 us 6.28 us 112000; BM_MapMapSparseMatrix_writeLine/4096 12.0 us 12.0 us 64000; BM_MapMapSparseMatrix_addCol/512/512 1.08 ms 1.07 ms 640; BM_MapMapSparseMatrix_addCol/1024/512 2.26 ms 2.26 ms 373; BM_MapMapSparseMatrix_addCol/2048/512 3.45 ms 3.45 ms 195; BM_MapMapSparseMatrix_addCol/4096/512 6.93 ms 6.94 ms 90; BM_MapMapSparseMatrix_addCol/512/1024 1.68 ms 1.71 ms 448; BM_MapMapSparseMatrix_addCol/1024/1024 3.43 ms 3.37 ms 213; BM_MapMapSparseMatrix_addCol/2048/1024 6.65 ms 6.70 ms 112; BM_MapMapSparseMatrix_addCol/4096/1024 13.2 ms 13.1 ms 50; BM_MapMapSparseMatrix_addCol/512/2048 3.36 ms 3.37 ms 218; BM_MapMapSparseMatrix_addCol/1024/2048 6.44 ms 6.60 ms 90; BM_MapMapSparseMatrix_addCol/2048/2048 13.5 ms 13.4 ms 50; BM_MapMapSparseMatrix_addCo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:1816,Benchmark,Benchmark,1816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,1,['Benchmark'],['Benchmark']
Testability,MacOS crashes in batch mode were due to FrameBufferObject constructor calls during simulation construction.; Fixed by moving those constructor calls to `initVisual()` using `std::unique_ptr`. WARNING: I changed VisualManagerPass::getFBO(). [See here](https://github.com/sofa-framework/sofa/commit/e910ec1e91e667ce213caeece639120598881940#diff-74e00cdcc25741750d2ed4f6b53398a7R93). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/646:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/646,2,['test'],['test']
Testability,"Macro sofa_install_git_infos will install a file `git-infos.txt` in all modules that contain a `.git` in their sources.; This will help to keep track of versions within SOFA binaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2309:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2309,2,['test'],['test']
Testability,"Magic numbers (200 and 50) were introduced when centering the window. This is to anticipate the change of viewer resolution that happens later. Instead, I suggest to remove the magic numbers to keep a nice regular formula of centering, and call the center function just after the viewer has been resized. This is compatible with #2416 without changing another value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2466:906,test,test,906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2466,2,['test'],['test']
Testability,"Mainly add error messages when calling currentGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4967:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4967,2,['test'],['test']
Testability,"Mainly for:; - MechanicalObject::position; - SparseGridRamificationTopology::hexahedra; - SparseGridRamificationTopology::position. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356,2,['test'],['test']
Testability,"Mainly remove unused functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2194:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2194,2,['test'],['test']
Testability,"Make `RGBAColor` constexpr and turn all `RGBAColor` to constexpr when it's possible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2630:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2630,2,['test'],['test']
Testability,"Make problemId counter id atomic for thread-safety. An other (better) solution could be to use local thread storage maybe ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4581:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4581,2,['test'],['test']
Testability,"Make sense that this error does not appear on the CI, as the assert() is not processed by the compiler in other mode than Debug (and I suppose the CI compiles in Release mode with MSVC); and the ambiguity comes from the fact there are two invalidID things, one defined in the sofa namespace and one other defined in the defaulttype namespace for compatibility.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958:61,assert,assert,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577#issuecomment-719695958,1,['assert'],['assert']
Testability,Make sense. [ci-build][with-all-tests]; (to be sure),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1879#issuecomment-788731272:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879#issuecomment-788731272,1,['test'],['tests']
Testability,"Make sure the API `isComponentValid` is used instead of direct access to the data `d_componentState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4921:641,test,test,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4921,2,['test'],['test']
Testability,"Makes more sense. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4837:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4837,2,['test'],['test']
Testability,Many scenes were still using the deprecated: Rigid template/; Now use Rigid3d. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1295:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1295,2,['test'],['test']
Testability,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2006:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006,2,['test'],['test']
Testability,"Matrix assembly can be accelerated if CRS matrices are defined using blocks of 3x3.; This PR makes LU solver compatible with 3x3 blocks. Benchmark https://github.com/alxbilger/SofaBenchmark/pull/22:. Before. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 368 ms 370 ms 10 FPS=135.021/s MBKBuild=1.82966m MBKSolve=5.34694m frame=7.40625ms; ```. After. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 371 ms 367 ms 10 FPS=136.17/s MBKBuild=1.81682m MBKSolve=5.41681m frame=7.34375ms; BM_SparseLUSolverMat3x3/50/iterations:10 308 ms 311 ms 10 FPS=160.804/s MBKBuild=529.916u MBKSolve=5.4368m frame=6.21875ms; ```. We can observe that the time stays the same for `CompressedRowSparseMatrixd` (no performance loss), and it is faster (MBKBuild timer) for `CompressedRowSparseMatrixd`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2862:137,Benchmark,Benchmark,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2862,5,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Matt',. Yes the breakage would be minimal. . It would be possible to mix instance-based and class-based Data management as long as the consistency in maintained through the data API in `Base`. Static data would incur no extra penalty at construction time, but later add/remove would remain possible. . I am unsure this is desirable, however: a full-blown mix of class-based and instance-based management would require more efforts, mainly to chain class-based datas up the class hierarchy, and I am not sure it is worth it. It could be the case though, but this requires _significant_ changes and testing, like converting all the existing `initData` to the new system for example. The use case I had in mind was more like the 5-10% cases where it really matters to be fast, and we don't really care whether data's are setup properly, and we sure do _not_ want to pay for it. . If data inspection turns out to be required (e.g. for debug), then we can come up with an ad-hoc solution when/if it's needed, but at this point it is not clear whether this will be of sufficient interest. But maybe more people could step in and provide feedback?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255404557:597,test,testing,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255404557,1,['test'],['testing']
Testability,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1901:692,test,test,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901,2,['test'],['test']
Testability,"Meh... it was just a missing warning that the test expected. :D ; I wanted to leave out the warning to not flood the output, once all points are gone. :P",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340841032:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340841032,1,['test'],['test']
Testability,Merged too fast! Tests are failing on CentOS.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1823#issuecomment-779848845:17,Test,Tests,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823#issuecomment-779848845,1,['Test'],['Tests']
Testability,"MeshTetraStuffing was the only component in SofaMiscExtra, and was simply a BaseObject.; This PR converts it as an engine (which it was already by its behavior) and move it in S.C.Engine.Generate.; \+ compat. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2917:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2917,2,['test'],['test']
Testability,MeshTopology doesn't load the topology from the mesh loader implicitely anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1273:332,test,test,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1273,2,['test'],['test']
Testability,"Message before was:; ```[INFO]    [TopologyHandler] Topology: lines is not dynamic, topology engine on Data 'indices' won't be registered.```. Now looks like:; ```[INFO]    [TopologyHandler] The TopologyDataHandler( FixedConstraint ) managing the TopologyData 'indices' won't be registered because linked topology 'lines' is not dynamic. Topological changes won't be supported by this Data.```. Also this message only pop up if component owner is not muted (printLog == true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3142:1016,test,test,1016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3142,2,['test'],['test']
Testability,"Message before:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro. Use 'sofa_add_subdirectory(plugin ...)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. Message after:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro 'sofa_add_plugin'. Use 'sofa_add_subdirectory(plugin caribou caribou)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3611:1174,test,test,1174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3611,2,['test'],['test']
Testability,"Message refers AsyncMatrixLinearSolver, but it's MatrixLinearSolver. And specifying the class name is not necessary with the msg_* API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2781:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2781,2,['test'],['test']
Testability,"Message was always saying that Sofa.GL was not found as the find_package() was done later; Set a STATUS/WARNING level in the same time. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3549:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3549,2,['test'],['test']
Testability,"Method LoadFromMemory to load an XML as a string is taking a parameter size which is unused and generate conversion warnings in tests. - Add method depreciation; - Update all tests compiled in my setup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:128,test,tests,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,4,['test'],"['test', 'tests']"
Testability,Method doCarve in CarcingManager should be called at AnimateEndEvent and not at CollisionEndEvent to avoid any topology synchronization error during step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1532:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1532,2,['test'],['test']
Testability,"Method initTopology was not called if the topology is empty at start. For example if we start with a cloud of points. . And initTopology methods are chained called to initialize topology from lower level. For example Tetrahedron initTopology will call triangle version, then edge and finally pointTpology. Each initTopology is used to initialize buffers and cross buffer only if the topology is not empty. Therefore in this special case the number of points was not well init for an empty topology. This fix #3211 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/34]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216:1125,test,test,1125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216,2,['test'],['test']
Testability,"Method isQuadDeulaunayOriented was only handling some specific case. Use directly the computation of angles to check flipping Delaunay condition to triangulate a quad see [wikipedia page](https://en.wikipedia.org/wiki/Delaunay_triangulation#Visual_Delaunay_definition:_Flipping) . And in fact the method was not working well but the method splitAlongPath used for triangular incision was calling it with wrong quad structure. ; Luckily in this case we had error*error = good behavior... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494:1028,test,test,1028,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494,2,['test'],['test']
Testability,"Metis and CSparse are always required by SofaSparseSolver, no need have their find_package in if blocks. Thanks @AlbanOdot for spotting the issue :beers: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1437:407,test,test,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1437,2,['test'],['test']
Testability,"Metis is an external library producing a few hundreds of compilation warnings (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2017,CI_PLUGINS=options,CI_TYPE=release/3459/FullBuildWarnings-MSBuild/). ![image](https://user-images.githubusercontent.com/10572752/163556296-5c153462-6e47-4e57-94c0-d06a36c6d299.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2874:887,test,test,887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2874,2,['test'],['test']
Testability,"Metis is installed only in the folder of the first plugin fetching it. Making the other one fail to find it. Moving it into the main folder with CMake is not really meaningful. The plugin should not fix something that is at higher level in the CMake hierarchy as itself (aka, fix install issue when another target depends on one of its dependency)... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:892,test,test,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,2,['test'],['test']
Testability,Minor PR fixing some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/739:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/739,2,['test'],['test']
Testability,"Minor PR just allowing the messages (msg_info) of **VTKExporter** of being indeed outputed; To do this, I just activated the _printLog_ flag for msg_info. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/553:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/553,2,['test'],['test']
Testability,Minor changes in RestShapeSpringsForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1431:296,test,test,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1431,2,['test'],['test']
Testability,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1899:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899,2,['test'],['test']
Testability,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:1086,test,test,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,4,['test'],['test']
Testability,"Minor commit to improve messaging when image cannot be loaded.; Before : no error, no message, no hints for available extensions to use. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503:388,test,test,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503,2,['test'],['test']
Testability,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1850:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850,2,['test'],['test']
Testability,"Minor refactoring to simplify the reading (it avoids the call to many `for` loops), and to match https://github.com/sofa-framework/sofa/pull/3981. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3983:686,test,test,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983,2,['test'],['test']
Testability,Minor warning fixes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1388:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1388,2,['test'],['test']
Testability,"Missing minus signs. Introduced in #2777.; Problem identified thanks to #4010. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4012:618,test,test,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4012,2,['test'],['test']
Testability,Modify the mapper in tetra barycentric mapping in order to listen for topological changes and only compute the added points. Previously the behaviour was to call reinit and recompute all the barycentric coordinates for the entire mesh at each topological modification. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1203:520,test,test,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1203,2,['test'],['test']
Testability,Module are systematically compiled which have a sensible impact to Sofa. ; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they ; don't need. In this PR I'm moving SofaMiscCollision & SofaSphFluid. ; I made the two because there is a dependency between them. ; There should be no big problem with this PR. ; But in the main CMakeList.txt I change the order of subdirectories so that plugins are before scenecreator. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/407:711,test,test,711,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/407,2,['test'],['test']
Testability,"Modules for pluginization contain a dot (Sofa.GL, Sofa.Types, etc),; and custom macro (sofa_create_package_with_targets) generates preprocessor definitions according to the name.; So with the new modules name, the macro creates a preprocessor definition with a dot '.' , but this is not permitted by the C preprocessor. So this PR replaces a '.' with a '_' for the generated definitions.; Fix #1695 (and seems to remove a warning generated by clang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1701:990,test,test,990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1701,2,['test'],['test']
Testability,"More or less trial-and-error works to make the SofaPython3 plugin compilable out-of-tree (and obviously others one too). Various stuff:; - out-of-date cmake vars; - need to reference old modules in the cmake.in (i dont really understand this issue); - remove completely SofaSimulationCore (was supposed to be deleted for v21.12) and add an error if used. I dont know if it is useful though. There were some f*ckey with the project/module called Sofa.SimulationCore but the folder SofaSimulationCore in any case. I put fast-merge because this is quite urging but some cmake-specialized eyes are needed 👀 . By the way, with this branch, I can compile SofaPython3 out-of-tree on Windows/MSCV2022. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031:1233,test,test,1233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031,2,['test'],['test']
Testability,"More post-NG cleaning.; Follows #2958. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2980:578,test,test,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2980,2,['test'],['test']
Testability,More tests and less SofaTest. Thanks @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909#issuecomment-795105690:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909#issuecomment-795105690,1,['test'],['tests']
Testability,"Most likely a typo, as using ref to shared_ptr is weird. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3620:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3620,2,['test'],['test']
Testability,"Most technical PR EVER. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2547:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2547,2,['test'],['test']
Testability,"Mostly because it bothered me when i was doing `git status`... But also because it does not really make sense that a file is created in the source directory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2537:697,test,test,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2537,2,['test'],['test']
Testability,"Mostly cleaning of the GUI `HeadlessRecorder`, but it also adds support for background color. In the future, I suggest to move `GLBackend` out of the qt namespace/folder, so it can be used in `HeadlessRecorder`. A lot of code can be shared between both, and `GLBackend` is not dependant on Qt. I'll create an issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2058:855,test,test,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2058,2,['test'],['test']
Testability,"Mostly in MeshSTEP plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4067:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4067,2,['test'],['test']
Testability,"Move CGALPlugin and its history to its own repository : https://github.com/sofa-framework/CGALPlugin. CI is not building CGALPlugin by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2500:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2500,2,['test'],['test']
Testability,"Move FEM. Follows. - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/219430901-2dfd90df-c077-4570-bb7a-6103cc148e47.png). I did not touch TLED files to avoid conflicts with another PR. They will be moved later.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3660:865,test,test,865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3660,2,['test'],['test']
Testability,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:890,test,test,890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,2,['test'],['test']
Testability,"Move ManifoldTopologies and its history to its own repository : https://github.com/sofa-framework/ManifoldTopologies . the configure script on the CI has already been updated. It has its own CI too (and releases). (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,2,['test'],['test']
Testability,"Move Material.h and PrimitiveGroup from SofaCore to SofaHelper. ; This move was needed as it was causing a backward dependency (ie. SofaHelper depending on SofaCore) ; I also removed the SofaDefaultType/Vector3Types... which was flagged for deprecation after 2018 :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1686:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1686,2,['test'],['test']
Testability,"Move OpenCTMPlugin and its history to its own repository : https://github.com/sofa-framework/OpenCTMPlugin . Not compiled by the CI, and was even not present in the CMakelists of the plugins directory by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2564:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2564,2,['test'],['test']
Testability,"Move OptitrackNatNet and its history to its own repository : https://github.com/sofa-framework/OptitrackNatNet. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,2,['test'],['test']
Testability,"Move PluginExample and its history to its own repository : https://github.com/sofa-framework/PluginExample (with brand-new github actions 😎). the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:755,test,test,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,2,['test'],['test']
Testability,"Move Registration and its history to its own repository : https://github.com/sofa-framework/Registration. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:719,test,test,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,2,['test'],['test']
Testability,"Move SofaCUDA and its history to its own repository : https://github.com/sofa-framework/SofaCUDA. CI is building SofaCUDA on Windows so the configure script has been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,2,['test'],['test']
Testability,"Move SofaPython code (using Python2) and its history to its own repository : https://github.com/sofa-framework/SofaPython. CI has been updated so it should fetch and enable SofaPython. (#1527 , #1442). TODO: convert MechanicalMatrixMapper.pyscn to a standard XML scene (in examples folder); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2224:830,test,test,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224,2,['test'],['test']
Testability,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:388,test,tests,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,3,['test'],"['test', 'tests']"
Testability,Move TaskScheduler files from Multithreading plugin to Sofa Kernel. This change allows any plugins to use the TaskScheduler without adding the dependency on the MultiThreading plugin. The MultiThreading plugin will be a collection of components using the TaskScheduler to parallelize some computation. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/805:555,test,test,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/805,2,['test'],['test']
Testability,"Move a few more components. Follows. - https://github.com/sofa-framework/sofa/pull/3760; - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3785:888,test,test,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3785,2,['test'],['test']
Testability,"Move collision components. Follows. - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3760:835,test,test,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3760,2,['test'],['test']
Testability,"Move components with only a cpp file. They don't need a compatibility layer. Follows. - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/228577598-3ded4d63-eeed-4082-b5ee-716365c27988.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3758:946,test,test,946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3758,2,['test'],['test']
Testability,"Move of CImgData was not done in CGAL plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2345:585,test,test,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2345,2,['test'],['test']
Testability,"Move projective constraints. Follows. - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. ![image](https://user-images.githubusercontent.com/10572752/222710672-f34d0aba-75d4-4476-aad4-396543e08b54.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3701:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3701,2,['test'],['test']
Testability,"Move some force fields and MechanicalObject. Follows. - https://github.com/sofa-framework/sofa/pull/3785; - https://github.com/sofa-framework/sofa/pull/3760; - https://github.com/sofa-framework/sofa/pull/3758; - https://github.com/sofa-framework/sofa/pull/3701; - https://github.com/sofa-framework/sofa/pull/3660; - https://github.com/sofa-framework/sofa/pull/3605; - https://github.com/sofa-framework/sofa/pull/3601. The last components are the TLED force fields. But they don't have a CPU equivalent. I suggest to move them into `solidmechanics/fem/elastic`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3795:1100,test,test,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3795,2,['test'],['test']
Testability,"Move some forward declaration in sofa/core/fwd.h; Use pragma once & one line namespace. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3303:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3303,2,['test'],['test']
Testability,"Move there: https://github.com/sofa-framework/MeshSTEPLoader. Part of ; - https://github.com/sofa-framework/sofa/issues/1442. Need OpenCascade SDK, which needs an account to download 👺. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4504:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504,2,['test'],['test']
Testability,Moved function definitions from .h to .inl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907,2,['test'],['test']
Testability,"Moved in https://github.com/sofa-framework/SofaValidation/pull/1. ![](https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExODV4ZTN0czYwbm02bXAycDYyc3lnY2x6MXE3MDA5NWZqYmd5ZDJ6ZiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/AhAysobj49aqQ/giphy.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4985:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4985,2,['test'],['test']
Testability,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1863:183,Test,Tested,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863,4,"['Test', 'test']","['Tested', 'test']"
Testability,Multiple users complained about errors that actually are not errors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/607:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/607,2,['test'],['test']
Testability,Multithread Unit test falling,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4323:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323,1,['test'],['test']
Testability,"Multithread/image: *Config.cmake.in were still using deprecated packages; Sofacuda: add dep (missing from a deprecated package). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3209:668,test,test,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3209,2,['test'],['test']
Testability,"My IDE found that some variables could be made `constexpr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2472:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2472,2,['test'],['test']
Testability,"My October fix-warning contribution :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4238:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4238,2,['test'],['test']
Testability,My biggest contrib' so far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1475:280,test,test,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1475,2,['test'],['test']
Testability,My change is not a regression. Builds are now failing when unit tests crash for an unexpected reason (not due to the test itself).; Sorry to kind of break your PR @damienmarchal :-/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343187862:64,test,tests,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343187862,2,['test'],"['test', 'tests']"
Testability,"My checklist:; - tests coverage (none, low, good); - have at least one working example (yes, no); - is validated in the Igor's sense (if yes provide a link to the validation references); - is thread safe according a given thread safe design provided by the Multi-thread WG. ; - sofa code guidelines violation (none, a few, a lot) . I suggest this checklist to be part of the component as a kind of meta-data in the factory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/228#issuecomment-291091132:17,test,tests,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/228#issuecomment-291091132,1,['test'],['tests']
Testability,"My example: ; Open ""test.scn"" in my application, the content is as follows:; ```; <?xml version=""1.0"" ?>; <Node name=""root"" dt=""0.005"" gravity=""0 0 0"" >; 	<AddResourceRepository path="".""/>; 	<RequiredPlugin pluginName='SofaOpenglVisual'/>; 	<RequiredPlugin pluginName='MyTestFlugin'/>; <VisualStyle displayFlags=""hideBehaviorModels showVisual hideForceFields"" />; 	; <CollisionPipeline verbose=""0"" />; <BruteForceDetection name=""N2"" />; 	<CollisionResponse response=""MultiFrictionContact"" />; <FreeMotionAnimationLoop/>; <!--LCPConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/-->; 	<GenericConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/>; 	<MyTestController name=""body"" modelName=""patient.scn"" />; </Node>; ```. I dynamically load ""patient.scn"" in the MyTestController component, the code is as follows:. ```; sofa::simulation::SceneLoader *loader = sofa::simulation::SceneLoaderFactory::getInstance()->getEntryFileName(modelPath);; if (loader); {; 	m_node = loader->load(modelPath.c_str());; 	m_node->init(sofa::core::ExecParams::defaultInstance());; }; ```; The content of ""patient.scn"" is as follows:; ```; <?xml version=""1.0""?>; <Node name=""root"" gravity=""0 0 0"" dt=""0.005"" >. 	<RequiredPlugin name=""MeshFbxLoader"" />; 	<Node name=""Patient"">; 		<MechanicalObject name=""Articulations"" template=""Vec1d"" size=""1"" />; 		<Node name=""PatientBone"">; 			<MeshFbxLoader name=""fbxloader"" filename=""Body-Bone.FBX"" />		; 			<MechanicalObject name=""Bones"" template=""Rigid3d"" position=""@fbxloader.bonePos"" showObject=""0"" />; 			<Node name=""skinning"">; 				<OglModel name=""body"" src=""@../fbxloader"" />; 				<SkinningMapping name=""skinMap"" template=""Rigid3d,ExtVec3d"" input =""@../Bones"" output =""@body"" nbRef =""@../fbxloader.nbref"" indices =""@../fbxloader.boneIds"" weight=""@../fbxloader.boneWeights""/>; 			</Node>	; 			<ArticulatedSystemMapping input1=""@../Articulations"" output=""@Bones""/>; 		</Node>; 		<ArticulatedHierarchyContainer/>; 		<Node name=""articulationCenters"">; 			<Node name=""art",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696,1,['test'],['test']
Testability,My guess is this PR is really a kick in the 💩 ; I came up to this single line fix because Data update were looping between engine using dofs as input and forcefield and mapping....; In the list of failing test could you pick one that you know is supposed to work and I'll check what changed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-815097407:205,test,test,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-815097407,1,['test'],['test']
Testability,My most important PR so-far. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1519:280,test,test,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1519,2,['test'],['test']
Testability,"NOTE: the **template=""NewMat""** for both CGLinearSolver CholeskyLinearSolver will now NEED the package SofaDenseSolver. #1298 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1299:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1299,2,['test'],['test']
Testability,Name / link change : ; - from https://github.com/sofa-framework/plugin.HighOrder; - to https://github.com/sofa-framework/SofaHighOrder. More info: https://github.com/sofa-framework/plugin.HighOrder/issues/5. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1430:459,test,test,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1430,2,['test'],['test']
Testability,"Namely BoxROI, SphereROI and MeshROI, sharing a common codebase (BaseROI). Massive refactoring. Lots of similar data, features, code across these components, lots of inconsistencies as well; - some filters quads, hexas, some not;; - some are doing the inverse selection, some not,; - some implements strict mode (aka the whole element is inside in the ROI, contrary to the normal mode where it is the center which is tested). Draw functions were copy-pasted ; lots of copy instead of reference as well.; The init procedure was very similar as well (if no one gives me X, I will search for mechanicalOjbect or a meshloader); Some classes use singular (quadIndices) some plural (quadsIndices)... ---; So this PR does gather everything with a common base with all the features (draw, strict mode, all the element types) and try to be quite generic.; Code could be even more generic and it could be very easy to add a new element type but it is not done for the moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4839:417,test,tested,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4839,3,['test'],"['test', 'tested']"
Testability,"Namespace was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2923:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2923,2,['test'],['test']
Testability,"Naming components was not consistent:. - XML used a 'load-time' helper to name the components: the class name of the component + a counter for a unique name; - Python used the class name only; - C++ instantiations: either the class name or a hard-coded value. This is now unified using the singleton `sofa::core::NameHelper`. It applies the XML method: the class name + a counter. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/228]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631:992,test,test,992,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631,2,['test'],['test']
Testability,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1892:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892,2,['test'],['test']
Testability,"Necessitate to update the CI: see https://github.com/sofa-framework/ci/pull/19. [ci-depends-on https://github.com/SofaDefrost/STLIB/pull/106]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/354]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/222]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882,2,['test'],['test']
Testability,"Need deeper investigation to remove handleState visitor. SOFA is not ready for that!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2867:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2867,2,['test'],['test']
Testability,Need to be benchmark to see if the conversion by the GPU has an impact or not.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1097837161:11,benchmark,benchmark,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1097837161,1,['benchmark'],['benchmark']
Testability,"Needed for binaries dependency management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1720:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1720,2,['test'],['test']
Testability,"Needed for https://github.com/sofa-framework/BeamAdapter/pull/115. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4247:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4247,2,['test'],['test']
Testability,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1760:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760,2,['test'],['test']
Testability,"Needed to build Flexible out-of-tree (yes, I tried to do that).; Surely needed to build other plugins too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2444:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2444,2,['test'],['test']
Testability,"Needed to create a clean and functional v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2226:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2226,2,['test'],['test']
Testability,"Needs #1408 ; OglModel recomputes its internal data on topology change. There's 2 things I need review for here:; 1. which initialization methods should be called to properly update an OglModel? Currently, I'm calling more or less the whole thing: delete buffers, then init / reinit / initVisual & updateBuffers. Not sure all of them are necessary; 2. Which datafields should be taken into consideration for a total reinit:; Ideally I'd like to trigger the full update of the OglModel only when a change in the loader triggers the recomputation: positions can vary during simulation and shouldn't trigger a reload of the component.; Edges / triangles & other topological info change when the loader changes geometry, but could also change during a topological change for instance, and in that 2nd case shouldn't trigger a reload from the loader, whose topology isn't up-to-date anymore. This component needs heavy restructuring I believe if we want to handle proper data update using callbacks, and might be a good example for other components if we do it right. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:1314,test,test,1314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,2,['test'],['test']
Testability,"Needs https://github.com/sofa-framework/sofa/pull/4917 to make all tests pass successfully. In the spirit of #3900 and following #3924, this PR applies the change on the MeshMatrixMass. To be noted:; - the `componentState` must be added to trigger the callback (done in `addMDx()`, `addMToMatrix`, `accFromF` and `buildMassMatrix`); - this PR does not solve the problem of circular dependency referred in #2173. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3928:67,test,tests,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3928,3,['test'],"['test', 'tests']"
Testability,"New action checking if a label is at least 7 days old OR if the label `pr: fast merge` is set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4386:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4386,2,['test'],['test']
Testability,"New action implemented here: https://github.com/hugtalbot/close-old-discussion-topics; We use this action in this new script. Note the action is not yet active and only creates logs. Close and replace #4096 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4250:177,log,logs,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4250,3,"['log', 'test']","['logs', 'test']"
Testability,"New batch of tests from DEFROST team. This branch only contains new tests, no new feature.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/97:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/97,2,['test'],['tests']
Testability,New benchmark:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 0.689 us 0.684 us 1120000; BM_Matrix_typematf_matmult<3>/256 1.28 us 1.29 us 497778; BM_Matrix_typematf_matmult<3>/512 2.76 us 2.73 us 263529; BM_Matrix_eigenmatf_matmult<3>/128 1.01 us 1.03 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.93 us 1.95 us 344615; BM_Matrix_eigenmatf_matmult<3>/512 3.81 us 3.81 us 172308; ```. We are faster than Eigen!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240734523:4,benchmark,benchmark,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240734523,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"New library to factorize the functions that will be called for the tests of BaseMatrix.; Need the INTERFACE CMakeMake keyword to compile a ""header-only library"". Did you intend to add any further features/functions/codes in the PR @alxbilger ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280#issuecomment-892494390:67,test,tests,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280#issuecomment-892494390,1,['test'],['tests']
Testability,"New methods:; - Edge: method ```pointBaryCoefs``` which, given a point, will return the 2 barycoefs of the edge describing the relative position.; - Edge: method ```intersectionWithPlane```, given and edge and a plan position + normal, return if there is an intersection and at which point.; - Triangle: method ```normal``` to compute the normal of the triangle. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2587:902,test,test,902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2587,2,['test'],['test']
Testability,Newly failing tests can be fixed in #237.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291900184:14,test,tests,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291900184,1,['test'],['tests']
Testability,"Nice and easy. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2898:554,test,test,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2898,2,['test'],['test']
Testability,"Nice work @epernod :+1:; If you already know what must be done to fix the tests, I'm for doing it in this PR !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2249#issuecomment-882630651:74,test,tests,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249#issuecomment-882630651,1,['test'],['tests']
Testability,"Nice work, do you need help to test?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/853#issuecomment-446174036:31,test,test,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/853#issuecomment-446174036,1,['test'],['test']
Testability,"No change of code. Just applying guidelines for a clean code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3476:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3476,2,['test'],['test']
Testability,No idea if this header is really needed with OCC < 7.4. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1310:307,test,test,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1310,2,['test'],['test']
Testability,"No information is given when the initExternalModule entry point is called.; For 99.999% of the plugins, there is nothing special in it but some (SofaPython3, I am looking at you) is doing a lot of ""failable"" things when it is called.; This PR is a potential solution to this problem, by adding a (optional) entry point to check if the plugin reports by itself that it was loaded successfully. This allows SOFA to not crash if a problem arises in SofaPython3 when calling PythonEnvironment::Init() . It is not really necessary for the ""ci depends on"" as the two PR can compile without needing the other one; but it makes sense to merge them in the same time I think. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/210]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:1277,test,test,1277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,2,['test'],['test']
Testability,"No more yellow background using this mapping :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4881:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4881,2,['test'],['test']
Testability,"No need for SofaBaseLinearSolver if SofaCore is available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2768:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2768,2,['test'],['test']
Testability,"No need for more than 1 iteration to test an export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2328:37,test,test,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2328,3,['test'],['test']
Testability,No regression test on the advanceTimer? ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405518396:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405518396,1,['test'],['test']
Testability,No support of thread local vars in mac_Clang 3.5 compiler.; This looks like a mac_Clang 3.5 compiler limitation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727:364,test,test,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727,2,['test'],['test']
Testability,No tests is existing on MeshSTLLoader it should be added!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2899:3,test,tests,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2899,1,['test'],['tests']
Testability,"None of these scenes are meaningful, they are deprecated and worse : they bother my dear #3927; Some .xs3 file is given as input for the UniformMass which does not support it.. :broom: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5035:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5035,2,['test'],['test']
Testability,"Nope, nothing planned. I trust you guys for the cmake side. On Wed., Aug. 4, 2021, 11:06 Hugo, ***@***.***> wrote:. > New library to factorize the functions that will be called for the tests; > of BaseMatrix.; > Need the INTERFACE CMakeMake keyword to compile a ""header-only library"".; >; > Did you intend to add any further features/functions/codes in the PR; > @alxbilger <https://github.com/alxbilger> ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/2280#issuecomment-892494390>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACQVHUH6LCJFLIWGUGITT3LT3D7J5ANCNFSM5BIERQAQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>; > .; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280#issuecomment-892979761:185,test,tests,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280#issuecomment-892979761,1,['test'],['tests']
Testability,"Not needed anymore as SofaPython has been discontinued. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2533:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2533,2,['test'],['test']
Testability,"Not possible to compile because I don't have opencascade, only rely on visual intellisense.... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/705:346,test,test,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/705,2,['test'],['test']
Testability,"Not significant, but towards a clean CI :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1206:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1206,2,['test'],['test']
Testability,Not since one week. ; We were waiting VS-2013 to be removed. ; I just fixed the merge with master done by froy which was looking weird on OglLabel and ; add some tests.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/206#issuecomment-297651950:162,test,tests,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/206#issuecomment-297651950,1,['test'],['tests']
Testability,Not sure why these tests do not pass @alxbilger https://github.com/sofa-framework/sofa/blob/dccb9849ed4b08a305086e02131ce7c25c79eff0/Sofa/Component/Topology/Utility/tests/TopologyChecker_test.cpp#L1346-L1369,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232705945:19,test,tests,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1232705945,2,['test'],['tests']
Testability,"Note for @sofa-framework/reviewers ; The PR now builds and tests run.; This PR might be really breaking, and your careful review and feedback is more than welcome. I am available for any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-391685881:59,test,tests,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-391685881,1,['test'],['tests']
Testability,Note meeting 28/02/2024 : Sofa.Testing should externalized in order to bring real modularization,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4459#issuecomment-1968479959:31,Test,Testing,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459#issuecomment-1968479959,1,['Test'],['Testing']
Testability,"Note that `Point` does not pass the test. The introduced tests don't pass on non-Windows OS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4732:36,test,test,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4732,4,['test'],"['test', 'tests']"
Testability,"Note that it confused Rider. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3140:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3140,2,['test'],['test']
Testability,Note that this PR should fix the unit tests introduced in https://github.com/sofa-framework/sofa/pull/3501,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1337529119:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1337529119,1,['test'],['tests']
Testability,Note: To test the bug: Demo/CollisionMultiple.scn related to #270,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-313043281:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-313043281,1,['test'],['test']
Testability,"Note: empty `ArgumentParser::extra_args()` will not set `sys.argv`, as opposed to set it some empty list (this was the reason why the test was failing: it would reset it to empty on script loading after being set initially from the test binary). I'm not quite happy with this kind of side-effect, but this matches the previous behaviour so `¯\_(ツ)_/¯`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/368#issuecomment-324934199:134,test,test,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/368#issuecomment-324934199,2,['test'],['test']
Testability,"Nothing else to say :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1638:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1638,2,['test'],['test']
Testability,"Nothing important, just switch char* with std::string in the component BaseObjectDescription. @damienmarchal @guparan . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/980:371,test,test,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/980,2,['test'],['test']
Testability,"Nothing to add except that after few test my conclusion is that Include-what-you-use is ok but can only detect includes that are not needed. Thus an include needed because of an single inline method in a .h will not be detected as not-needed. . On my side I'm using the -H options of g++ to prints all the includes loaded when compiling a .cpp then I use a small python script to generate an html page out of that to navigate from includes to includes. Because I lack of time it is as-is, ; https://github.com/damienmarchal/snippets/blob/master/include-analyzer.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-706382858:37,test,test,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-706382858,1,['test'],['test']
Testability,Noticed those files hanging around after the merge of #834. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/851:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/851,2,['test'],['test']
Testability,Now 255 is merged I can write the CHANGELOG for @hugtalbot (thank for the reminder:)). CHANGELOG: ; Batch replacement of std::cout with msg_info or dmsg_info and some delete of commented lines in the following module:; [SofaBaseMechanic]; [SofaBaseTopology]; [SofaBoundaryCondition]; [SceneCreator] ; [SofaGeneralSimpleFEM]; [SofaConstraint]; [SofaGeneralVisual]; [SofaMisc]; [SofaMiscCollision]; [SofaMiscEngine]; [SofaMiscFEM]; [SofaMiscMapping]; [SofaMiscTopology]; [SofaOpenGLVisual] ; [SofaPrecontionner]; [SofaSparseSolver]; [SofaVolumetricData]; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/261:780,test,test,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/261,1,['test'],['test']
Testability,"Now available here :arrow_right: [SofaDistanceGrid](https://github.com/sofa-framework/SofaDistanceGrid). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4573:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573,2,['test'],['test']
Testability,"Now callback handles the check for the draw vonMises value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2407:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2407,2,['test'],['test']
Testability,"Now checks in all Modifiers if the pointer towards the TopologyContainer is valid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3434:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3434,2,['test'],['test']
Testability,Now is the good time to suggest any other clang-tidy run among:. | _ | _ |; |------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------|; | [boost-use-to-string](https://clang.llvm.org/extra/clang-tidy/checks/boost-use-to-string.html) | [hicpp-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-braces-around-statements.html) |; | [bugprone-argument-comment](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-argument-comment.html) | [hicpp-deprecated-headers](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-deprecated-headers.html) |; | [bugprone-assert-side-effect](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-assert-side-effect.html) | [hicpp-exception-baseclass](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-exception-baseclass.html) |; | [bugprone-bool-pointer-implicit-conversion](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-bool-pointer-implicit-conversion.html) | [hicpp-explicit-conversions](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-explicit-conversions.html) |; | [bugprone-copy-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-copy-constructor-init.html) | [hicpp-function-size](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-function-size.html) |; | [bugprone-dangling-handle](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-dangling-handle.html) | [hicpp-invalid-access-moved](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-invalid-access-moved.html) |; | [bugprone-fold-init-type](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-fold-init-type.html) | [hicpp-member-init](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-member-init.html) |; | [bugprone-forward-declaration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:861,assert,assert-side-effect,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['assert'],['assert-side-effect']
Testability,Now it compiles let's try the full damages: [ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605#issuecomment-726778540:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605#issuecomment-726778540,2,['test'],['tests']
Testability,"Now pretty much all overridden 'canCreate' found in the kernel or the modules behave as they should, which is, **always specify why a component with the given template cannot be created in the given context**. This is the continuation of the PR #1266. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1294:503,test,test,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1294,2,['test'],['test']
Testability,"Now that the v23.12 is getting stable, this PR applies the [lifecycle](https://www.sofa-framework.org/community/doc/contributing-to-sofa/lifecycle-mechanisms/) policy of SOFA for the v24.06 release. Note that :; - another PR follows this one removing the entire `Sofa/Component/Compat` layer #4533; - this PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4532:1073,test,test,1073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4532,2,['test'],['test']
Testability,Now the `multTranspose` operation is faster than Eigen:. ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_multTranspose/128 0.731 us 0.711 us 746667; BM_Matrix_typemat3x3f_multTranspose/256 1.53 us 1.54 us 497778; BM_Matrix_typemat3x3f_multTranspose/512 2.83 us 2.85 us 235789; BM_Matrix_eigenmat3x3f_multTranspose/128 0.842 us 0.837 us 746667; BM_Matrix_eigenmat3x3f_multTranspose/256 1.73 us 1.73 us 407273; BM_Matrix_eigenmat3x3f_multTranspose/512 3.46 us 3.45 us 194783. ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240495147:147,Benchmark,Benchmark,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240495147,1,['Benchmark'],['Benchmark']
Testability,"Now the messaging when required data is not set by the user:. - either a warning is sent if a default value is available in the associated class constructor; - or an error is sent no a default value exists. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2527:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2527,2,['test'],['test']
Testability,"Now the only way to create a TopologyHandler is to create it internally through the TopologyData using the method createTopologyHandler.; The handler is created and handle only by the TopologyData as a unique_ptr. This PR need to be rebased after PR #2384 #2388 #2389 #2390 #2391 have been merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2393:837,test,test,837,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2393,2,['test'],['test']
Testability,"Now the user will be clearly warned :exclamation: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4059:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4059,2,['test'],['test']
Testability,"Now we check that the time is indeed 8:30 to properly announce the meeting, to please our gentle(wo)men . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4877:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4877,2,['test'],['test']
Testability,"Now we have a tool to list the deprecated components, we can build with `SOFA_WITH_DEPRECATED_COMPONENTS=OFF` + `APPLICATION_GETDEPRECATEDCOMPONENTS=ON` and ignore scenes using deprecated components during scene tests. I also added a function to ignore scenes using non-existent (because disabled) plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/611:212,test,tests,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/611,3,['test'],"['test', 'tests']"
Testability,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1801:681,test,test,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801,2,['test'],['test']
Testability,"Now, as you said Maxime, the definitive solution would be to implement component specific tests where the components are implemented and not in a shared plugins like SceneCreator or SofaTest but this is still something to do (One step at a time).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334525669:90,test,tests,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334525669,1,['test'],['tests']
Testability,"Now, each class has its own file. A unit test has been added. The error message is managed by a `Data<DisplayFlags>` (only if you include `Data[DisplayFlags].h`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721:41,test,test,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1384992721,1,['test'],['test']
Testability,"Now, each data field with a filename alias will show ""filename"" in the GUI.; The old names are now the aliases and are just keept for backward compatibility management. . I didn't do the change for data related to dumping/output filenames. Because I found that ambigious. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1024:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1024,2,['test'],['test']
Testability,"Now, this action checks and make sure that sufficiently descriptive labels are set.; Among the 8 possible labels:; - enhancement; - deprecated; - refactoring; - pr: breaking; - pr: clean; - pr: fix; - pr: new feature; - pr: test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4079:224,test,test,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4079,3,['test'],['test']
Testability,"Number of tetra at beginning is 44; Previous file was attempting to remove 60 of them. Worked with warnings but made the understanding harder for newcomers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3121:696,test,test,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3121,2,['test'],['test']
Testability,"OK,; I updated the PR with a few things:; 1 / the test now checks the content of the generated files for error; 2 / Monitor has an additional data field ""fileName"" through which one can override the default path to the generated files; 3 / Monitor now respects basic coding guidelines; Looks a bit better now",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828:50,test,test,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-313136828,1,['test'],['test']
Testability,"OMG There is so much things to do to finalize this PR. ; I'm reviewing my own code but among things:; - add docstring,; - remove the todo before PR; - add tests to each new features.; - ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410#issuecomment-332143846:155,test,tests,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410#issuecomment-332143846,1,['test'],['tests']
Testability,OMG... it compiles and it pass tests... DDGNode clean step1 will be over soon. ; next-step...BaseData/Data.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372#issuecomment-627197521:31,test,tests,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372#issuecomment-627197521,1,['test'],['tests']
Testability,OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.framework (1.0 - 98.80.2) <C257C950-F430-3762-BC72-15D314D99556> /System/Library/PrivateFrameworks/WatchdogClient.framework/V,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:51453,log,login,51453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['login']
Testability,"ObjectFactory] Module name cannot be found when registering DeprecatedComponent<> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamAdapterActionController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering InterventionalRadiologyController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering SutureController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamForceFieldAndMass<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveInflatableBeamForceField<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Vec3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamLengtthMapping<Rigid3d,Vec1d> into the object factory. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725:2124,test,test,2124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725,2,['test'],['test']
Testability,"OglModel was : ; - converting some data (vertices, normals) from (default) double to float, 'cause it was set to float for OpenGL; - textures was hard-set on float (and set as float for Ogl); - tangents on double (and set double for OGL). so a weird mix of conversion or not. So now everything is in `SReal` type (so double by default) and set as GL_DOUBLE for the GPU. This should not have any consequence for the performance, as OpenGL will still use single float-point for calculations _a priori_; And some cleanings here and there as usual. Based on; - #2855 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856:1104,test,test,1104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856,2,['test'],['test']
Testability,"Oh and here's a minimal scene to test the new feature:. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.add",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:33,test,test,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251,1,['test'],['test']
Testability,"Oh... when I made last commit, I meant to revert a37ba08. Had been awake for more than 40 hours(academics, tests, etc.) and evidently, wasn't thinking properly. (Slept like a baby right after last commit. :grin: ) Will adjust this in next commit. Creating new files sounds right. I have another exam tomorrow. Will do right after it. :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-382434596:107,test,tests,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-382434596,1,['test'],['tests']
Testability,"Ok I didn't take the time to run the tests myself so I wanted to see the Dashboard. Is it actually possible to have more than 1 failure in a test ? Both ""ATLEAST_ONE"" and ""ATLEAST_TWO"" seem useless there.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370723402:37,test,tests,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370723402,2,['test'],"['test', 'tests']"
Testability,"Ok for me. . (for the future: I'm still unsure mixing push based logic with the ""on demand"" will not cause more troubles than it solves).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-480197507:65,log,logic,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-480197507,1,['log'],['logic']
Testability,Ok found it: the scene-tests are not performing in default mode (100 iterations with a timeout of 60s for a Debug build) because FastTetrahedronCorotationalForceField.scn is listed with custom values in examples/.scene-tests config file.; Renaming the scene according to b061a51606f9dbe6a8bb9305eb6a95af0aad6bf5 should calm down the CI ;-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442,2,['test'],['tests']
Testability,"Ok so I see still a lot of change to do before to have a clean PR to merge. ; The first change is probably to make the code available in an independant plugin. ; I wonder if this could be an opportunity to make the whole VolumetricData a plugin ....this could be a kind of gentle test for sofa core pluginiization, . @guparan , @hugtalbot , @fredroy any opinion ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354#issuecomment-325373316:280,test,test,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354#issuecomment-325373316,1,['test'],['test']
Testability,Ok so if the pr is just about wrong messages no need for test :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329794045:57,test,test,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329794045,1,['test'],['test']
Testability,"Ok so maybe I misunderstood your last comment, but the GTest find module you added in your last commit works fine on my side with cmake >= 3.12 (which is our min required version). So I guess you meant that the embedded GTest find module in recent cmake version (>=3.20) was required to have the correct targets defined, which is not the case in earlier <3.20 version of cmake (tested in 3.12), but this recent GTest find module was not building if used with cmake <3.20. In the end, your last commit seems to fix everything, so looks like a more generic option that relying on cmake config files as suggested in my last comment.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923509418:378,test,tested,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923509418,1,['test'],['tested']
Testability,"Ok so, hopefully the end of this PR. I reverted some commit and double/both should be back to normal. In the case of float only the DilateEngine is not available and its test deactivated. So basically it should compile fine, but some components would be limited.; I quickly tried to fix it but I encountered some difficulties. I would prefer open a new issue regarding float compliance of remaining components. To sum up, it should be back to the original goal: fix compilation, not necessarily the components with type limitation",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305318209:170,test,test,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305318209,1,['test'],['test']
Testability,Ok thanks a lot for the test,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3650#issuecomment-1432673313:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650#issuecomment-1432673313,1,['test'],['test']
Testability,"Ok the following works: . ```c++; static std::string convert_string(PyObject* object) {; if( PyString_Check(object) ) {; // strings will be strings; return PyString_AsString(object);; }; ; if( PySequence_Check(object) ) {; std::stringstream ss;. for(Py_ssize_t i = 0, n = PySequence_Length(object); i < n; ++i) {; if(i > 0) ss << ' ';; ss << convert_string(PySequence_GetItem(object, i));; }; ; return ss.str();; }. // fallback to python string conversion; PyObject* str = PyObject_Str(object);; std::string res = PyString_AsString(str);; Py_DECREF(str);; ; return res;; }; ```. `Binding_BaseObject.cpp:`. ```c++; SP_CLASS_METHODS_END;. static struct patch {; patch() {; // set __str__ slot for BaseObject; SP_SOFAPYTYPEOBJECT(BaseObject).tp_str = [](PyObject* self) {; return BaseObject_getLinkPath(self, nullptr);; };; }; } patcher;. SP_CLASS_TYPE_SPTR(BaseObject, BaseObject, Base); ```; It does breaks some python tests in Compliant, but this is due to errors there. I can push code to another PR that does the whole thing if needed (I don't think I have push access to this one).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648:918,test,tests,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307775648,1,['test'],['tests']
Testability,Ok to be merged.; But should not we prepare the next PR correcting most of the tests before merging this PR?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291873684:79,test,tests,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291873684,1,['test'],['tests']
Testability,"Ok, I have meanly three reasons:; - how explain mechanically that the stiffness is multiplied by a length ?; - there is no test when the length is 0 (almost) (the problem that occured to me); - when the length is very small you will have a very high stiffness which is different from the stiffness you enterred. I understand your concerns but I think the behavior is not what expected (at least for the third reason). The existing scenes take maybe into account these strange behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290#issuecomment-311888196:123,test,test,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290#issuecomment-311888196,1,['test'],['test']
Testability,"Ok, I've just realized that the strange tetra crushing that appears on the top of the beam doesn't appear before your pr (on the commit from which your branch has been created). So there might be something wrong going on... Do you want my scene to do some tests on your side ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632825342:256,test,tests,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632825342,1,['test'],['tests']
Testability,"Ok, good to know! Thanks for having tested that. To summarize:. 1. PenalityContactForceField needs to implement `addKToMatrix`; 2. Matrices need to be mapped so contacts can be correctly created when the collision model is mapped",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908090195:36,test,tested,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908090195,1,['test'],['tested']
Testability,"Ok, so I gave it a quick look. ; The good news is that this PR does not breaks anything. ; The bad news is that the failing test may be a new OpenIssue. . The underlying problem is that the implementation of ; std::string FileRepository::relativeToPath(std::string path, std::string refPath); is converting the path to be to lowercase on windows but not on Linux/MacOS. I see no good reason why we should do that only on Windows so I think we should fix this function to gave it a consistant behavior on all OS as well as a behavior that correspond to its name. . If returning a lowercased relative path is important this should be implemented in a separated function.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/250#issuecomment-300150787:124,test,test,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/250#issuecomment-300150787,1,['test'],['test']
Testability,"Ok, this PR is almost there. Only one test is failing.; @fjourdes have you few minutes to check it out ? thx",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-367262010:38,test,test,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-367262010,1,['test'],['test']
Testability,"Old version using a specific TopologyHandler overriding callbacks will be totally remove in future PR. ; Use specific callbacks inside the TopologySubsetData. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2868:698,test,test,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2868,2,['test'],['test']
Testability,"On clang/g++ the visibility is not set (left blank). . This means that a sofa code using SOFA_EXPORT_DYNAMIC_LIBRARY but compiled with a command line setting the unspecified visibility to ""hidden"" will have linkage problems. . This fix the issue so now public code...are really public in clang/g++ . I'm not sure if there is non win32 compiler that does not understand this attribute. If this is the case,it is possible to add extra #ifdef GCC & CLANG & xxx. DM. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1410:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1410,2,['test'],['test']
Testability,On desktop with multiple screen the existing code to dimmension the; windows is wrong as it report the largest size. This FIX the problem; by using the correct way to get he screen geometry associated with a; widget. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1010:468,test,test,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1010,2,['test'],['test']
Testability,"On my end, never used, because never really worked this BarycentricStickContact response!; Now it is, and an example scene is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2509:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2509,2,['test'],['test']
Testability,"On my side I would like to have automatically generated tests on the Data<> to be sure the object behave nicely whatever the user gives as input. . I made some early prototype (read, non-satsifactory) using clang but I have more high priority task to do.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/111#issuecomment-271665560:56,test,tests,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/111#issuecomment-271665560,1,['test'],['tests']
Testability,On my way to fix this issue https://github.com/sofa-framework/sofa/issues/895; I found that the Xsp code was duplicated with a C and a C++ version. . So I refactored the two and I added some tests to the files. ; On of the added test in ReadState_loadFailure is currently failing...wich is expected as it shows an existing problem for which fixing is outside the scope of the PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918:191,test,tests,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918,4,['test'],"['test', 'tests']"
Testability,On running the command: bin/runSofa -g batch -n infinite; infinite iterations will start and time computed after every 1000 iterations will be echoed.; Solving the issue #552 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613,2,['test'],['test']
Testability,"On the BFM it compile perfectly!; There are just some errors related to update & doUpdate function that will need to be fixed but this doesn't come from this MR. (@EulalieCoevoet); I also test some examples and still no error for me, so it should be ok.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131:188,test,test,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834#issuecomment-441579131,1,['test'],['test']
Testability,"On the dash ; http://www.sofa-framework.org/dash/index.php?limit=10&pg=1&user=&branch=pr%2Ffix_filerepository&platform= . I do not see an information to be able to fix any compilation pb, I might not be looking in the right place ? Can you point me the correct dash url ? . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Author""; > <author@noreply.github.com>; > Envoyé: Jeudi 19 Janvier 2017 10:46:13; > Objet: Re: [sofa-framework/sofa] [SofaKernel] Fix FileRepository should not; > be optional (#122). > This PR:. > * succeed on all compilations setup on the CI.; > * does not generates new warnings or test failure.; > * does not break existing scenes.; > * does not break API compatibility.; > * is now 1 week old. > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274104510:750,test,test,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-274104510,1,['test'],['test']
Testability,"On top of the introduction of the stable Neo Hookean hyperelastic material (from Smith, Breannan, Fernando De Goes, and Theodore Kim. ""Stable neo-hookean flesh simulation."" ACM Transactions on Graphics (TOG) 37.2 (2018): 1-15.), I rewrote the St Venant-Kirchhoff and Neo Hookean materials to make it clearer to read. I also added unit tests, validating some material constitutive equations. I added an example having inverted tetrahedra:. ![invertedTets](https://github.com/sofa-framework/sofa/assets/10572752/3eea7447-dec2-4912-a4a4-f9d104f45630). Based on https://github.com/sofa-framework/sofa/pull/4600. $$; \alpha = 1 + \frac{\mu}{\lambda + \mu}; $$. ### Strain Energy Density Function. $$; \psi = \frac{1}{2} \left(\mu (I_C - 3) + (\lambda + \mu) (J - \alpha)^2 \right); $$. ### Second Piola-Kirchoff stress tensor. $$; S = \mu I_3 + \left((\lambda + \mu) J (J - \alpha)\right) C^{-1}; $$. ### Elasticity tensor. $$; \mathbb{C} = (\lambda + \mu); \left(-2 J (J - \alpha) C^{-1} \underline{\overline{\otimes}} C^{-1} + J (2 J-\alpha) C^{-1} \otimes C^{-1} \right); $$; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603:335,test,tests,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603,3,['test'],"['test', 'tests']"
Testability,"On top of the many things that c89da68 does (wrong), see PR #487 for a glimpse, I noticed that the ; inclusion of unit tests executable related to a given library have been extracted outside from the CMakeLists.txt of the very library it is supposed to test. . What I initially did was to have ; ```; # MyLibrary/CMakelists.txt. addLibrary( MyLibrary SHARED ${HEADER_FILES} ${SOURCE_FILES} ). if(TARGET gtest) ; # there is a gtest TARGET, so we are interested in having unit tests built for sure ! ; # since we do not reditribute unit tests, doing the find_package() thing is probably ; # overkill... If the main CMakelists.txt adds gtest to the build, then the gtest TARGET ; # will be defined; add_subdirectory(MyLibrary_test); endif(); ```. All the information related to the library is visible from the library `CMakelists.txt` and not hidden from the developer in some remote unrelated file, which also implies that you must include all the Sofa modules in your build.; What if I decide not to include the whole library set of Sofa and still get my precious unit tests executed ? ; Hint : I do not use the main `CMakelists.txt` provided in the master branch, and probably never will. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/489:119,test,tests,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/489,5,['test'],"['test', 'tests']"
Testability,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1870:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870,2,['test'],['test']
Testability,One good point about ignoring scenes with unmet `RequiredPlugin` dependencies is that we can see what scenes need some `RequiredPlugin`: they are the only left to crash trying to create unknown components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/628:457,test,test,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/628,2,['test'],['test']
Testability,One last test is failing (indice out of range) for Python_test,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264234:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264234,1,['test'],['test']
Testability,"One memory leak was identified, use of size_t is added and fix in the init of cube; Fix #804 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/815:346,test,test,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/815,2,['test'],['test']
Testability,One more plugin in Sofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477:278,test,test,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477,2,['test'],['test']
Testability,One more plugin in Sofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/486:276,test,test,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/486,2,['test'],['test']
Testability,One more time! [ci-build] [with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350#issuecomment-319609572:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350#issuecomment-319609572,1,['test'],['tests']
Testability,"One of the constructor of type::Vec takes a raw pointer and fill itself from this pointer, using its **own size**.; But the ctor does not know the size of the given array so this can contribute to unsafe behavior.; E.g ; ```; SReal array[2] = {1.0, 1.0};; sofa::type::Vec<3, SReal> vec(array);; ```; is valid and will compile; but it will lead to unexpected result (in the best case, a crash); GCC detected this case while compiling SpringForcefield with the bbox function on 2d and 1d datatypes.; And this leads to an other problem, with the case of TBoundingBox, which relies fully on this mechanism.; This PR removes as much as possible the usage of the unsafe ctor (effectuvely removing TBoundingBox usage) but does not deprecate TBoundingBox by itself (I suppose it should be). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3124:1322,test,test,1322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3124,2,['test'],['test']
Testability,One of the mac on the CI does not have numpy for python3 (thats why the unit tests are failing) but otherwise seems good for me!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1918#issuecomment-799500705:77,test,tests,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918#issuecomment-799500705,1,['test'],['tests']
Testability,"One package was missing in the SofaMeshCollisionConfig.cmake.in, so out-of-tree projects using sofameshcollision are throwing error while doing the cmake config. (allows to compile the plugin beamadapter out-of-tree). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2400:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2400,2,['test'],['test']
Testability,"One simple solution, it to add [Base::checkDataValidity()](url). Its call would be let to the application.; For example, runSofa would call it right before `init` and `reinit`, but a more specific application could chose not to call it not to add over-cost. Note that high level checkers could be implemented (such as `check_it_is_a_valid_vector_of_indices`, ...). The downside is how to perform the check on a single Data rather than at the component level? But maybe it would be way sufficient for what we attend to do?; To perform the test at the Data level, we need to differentiate Data modification coming from a user vs coming from a computation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603:538,test,test,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603,1,['test'],['test']
Testability,"One step towards continuous delivery in SOFA :tada: . This PR reworks/cleans CPack usage for release packaging and adds a new generator : [Qt Installer Framework](http://doc.qt.io/qtinstallerframework/ifw-overview.html). Very useful to unify packaging methods, it will be at first used to generate nice installers for Linux. This means no more .zip package for Linux binaries, unless you want to keep them?. Note: This PR also adds the opening of an URL after installation to ask the user to consider donating to the SOFA project. Do not hesitate to comment if you disagree with this idea. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/796:841,test,test,841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/796,2,['test'],['test']
Testability,One test added in the PR is failing --> to be fixed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1275837981:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1275837981,1,['test'],['test']
Testability,"One type to rule them all... ©. Bigger than expected PR; made to harmonize index type for templated Vector/Mat type.; (some had int as index type, other unsigned int, or std::size_t, etc); ~Surprisingly not very breaking with MSVC, but GCC (and clang?) does break when templates declared as int.; (flexible/compliant was a PIA to fix)~ After a fuckton of commits, I regret this sentence 🙃. MAIN BREAKING POINT: VisualModelImpl needs indices to be int and not long (like std::size_t) so it cannot take directly the topology types (Triangle, Quad, etc) for its buffers. Thats why there are now VisualEdge, VisualTriangle, VisualQuad which still takes index as int.; (main reason is that graphical systems (OpenGL, etc) only can manage integers). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1453:995,test,test,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1453,2,['test'],['test']
Testability,"One unit test failling : ; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4494/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/2/testReport/UnitTests.Sofa_Component/Topology_InciseProcessor_test/InciseTriangles/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1943419526:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1943419526,2,['test'],"['test', 'testReport']"
Testability,"One unit test is failing, but it does not seem to be related to this pull request. Could you just make sure of it?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3843#issuecomment-1543476543:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3843#issuecomment-1543476543,1,['test'],['test']
Testability,"One unit test is still failing on mac and unbutu ...👺; ```; 3271/macos_clang_options_release/src/Sofa/Component/Topology/Container/Dynamic/tests/EdgeSetTopology_test.cpp:352; Expected equality of these values:; edgeH0->getName(); Which is: ""TopologyDataHandler( VectorSpringForceField )springs""; ""TopologyDataHandler( MeshMatrixMass )edgeMass""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280904900:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1280904900,2,['test'],"['test', 'tests']"
Testability,One warning added : CommunicationSubscriber.inl:36 (-Wreorder). Two scene tests failing:; - receiverRequest.scn; - senderRequest.scn. and several others on CentOS,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-679145990:74,test,tests,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-679145990,1,['test'],['tests']
Testability,"Only ArticulatedHierarchyContainer is using BVH (file format describing articulations system); + cleanup while moving. (And BVHContainer has OpenGL code, messing with a future PR moving all OpenGL-related code from Helper to an independent package #1645 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1644:796,test,test,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1644,2,['test'],['test']
Testability,Only an optimal version based on the initial values of the; stiffness vector was implemented. Need to have updated stiffnesses. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/579:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/579,2,['test'],['test']
Testability,Only did some base classes that were generating multiple warnings.; And also the topology containers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/729:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/729,2,['test'],['test']
Testability,"Only implicit type conversions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3545:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3545,2,['test'],['test']
Testability,Only minor typos etc in investigating the collision of SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1411:312,test,test,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1411,2,['test'],['test']
Testability,"Only one component inside ... #1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1572:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1572,2,['test'],['test']
Testability,"Only relevant to Windows. TetrahedronSetTopologyContainer's stream operators and especially Factory::logFactoryRegister() were throwing `inconsistent dll linkage` warnings (confusion of dllimport/dllexport).; This PR removes them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2321:101,log,logFactoryRegister,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2321,3,"['log', 'test']","['logFactoryRegister', 'test']"
Testability,Only small bug fixes according to release notes so it should not be breaking.... source taken from: https://sourceforge.net/projects/qwt/files/qwt/6.1.4/; release notes: https://sourceforge.net/p/qwt/news/. Fix #1134; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1136:469,test,test,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1136,2,['test'],['test']
Testability,Only some cleaning in:; - Class define macro; - Data and member prefix; - Move code from header to inl or cpp files. Update several plugin demo scenes. ![SpatialGridContainer_00000001](https://user-images.githubusercontent.com/21199245/66745709-13632500-ee80-11e9-9cfe-94e1a9e4d27c.png); ![SPHFluidForceField_benchmarks_00000001](https://user-images.githubusercontent.com/21199245/66745711-13632500-ee80-11e9-8382-738a86b68c3c.png); ![SPHFluidSurfaceMapping_00000001](https://user-images.githubusercontent.com/21199245/66745713-13fbbb80-ee80-11e9-98a1-ea1386f91c19.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,2,['test'],['test']
Testability,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1840:947,test,test,947,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840,2,['test'],['test']
Testability,"Only the new callback mechanism should be used:. ```; TopologyData::setCreationCallback; TopologyData::setDestructionCallback; ```. PR #2867 and #2868 need to be merged first as they removed last uses of this old mechanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2869:763,test,test,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2869,2,['test'],['test']
Testability,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1795:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795,2,['test'],['test']
Testability,"Operator= is deprecated because it hides operations. Readers might think that = is simply an assignment, but it is more than that. As a replacement, the method `setSystemMBKMatrix` is provided. Removing calls to operator= will be done in another PR, once this one is validated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2167:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2167,2,['test'],['test']
Testability,Optimize the assembly of mapped ForceFields JtKJ by identifying the useful terms of the Jacobian matrix with regards to the K matrix shape. :arrow_right: a regression appeared on BeamFEMForceField and a scene test seems to fail SpatialGridPointModel.scn,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771:209,test,test,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771,1,['test'],['test']
Testability,Option set for Metis (which should override the metis one). Create an option instead of setting it. A test will also be done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3072#issuecomment-1169733966:102,test,test,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3072#issuecomment-1169733966,1,['test'],['test']
Testability,"Option to add the SOFA scene as a project in the build solution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2327:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2327,2,['test'],['test']
Testability,Or use a map tag -> shader stack? this way we should get O(n * log(k) ),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/292#issuecomment-306522109:63,log,log,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/292#issuecomment-306522109,1,['log'],['log']
Testability,"Originally it was to get rid of the std::cout (and its associated tests) in the partial_solve functions, but I ended up renaming the Data because it was bothering me.; (and remove one because it is not used at all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3226:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3226,3,['test'],"['test', 'tests']"
Testability,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471:1251,test,test,1251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471,2,['test'],['test']
Testability,"Otherwise the component cannot be drawn due to changes in https://github.com/sofa-framework/sofa/pull/2478. EDIT: about HexahedronFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2499:684,test,test,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2499,2,['test'],['test']
Testability,"Otherwise the parsing is dependent on the locale in use on the system which; leads to problems with decimals numbers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2200:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2200,2,['test'],['test']
Testability,"Output of the failing test on MacOS:; ```; [----------] 1 test from Batch/Python_scene_test; [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/0; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.p",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,2,['test'],['test']
Testability,"Owh, CI seems not happy.; I will make sure to fix it (coming from the recent change in testing, to be propagated in regression)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-806216521:87,test,testing,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-806216521,1,['test'],['testing']
Testability,"PR #1028 added a getter for the records of the advanced timer that automatically assigns the string version of the record's **id** to a new field called **label**. There was a small problem with this, records can have different types of ids (IdTimer, IdStep, IdVal or IdObj). Casting a record id to a wrong type causes the wrong string version of the id to be assigned to the label. This PR fixes this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1244:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1244,2,['test'],['test']
Testability,PR #139 moved licence.txt into license.LGPL.txt. This changed has not been propagated in the cpack config. I didn't create a branch as only one line is modified. Hope it doesn't break the CI... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194:419,test,test,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194,1,['test'],['test']
Testability,PR #158 broke livecoding of shader. This PR restore it. @guparan and @hugtalbot Could this PR be treated in fast-path please ? . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/415:380,test,test,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/415,2,['test'],['test']
Testability,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1805:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805,2,['test'],['test']
Testability,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2087:1302,test,test,1302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087,2,['test'],['test']
Testability,PR #213 breaks api compatibility because it misspelled MessageAsTestFailure; by MesssageAsTestFailure (with three 's'). This commit fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/269:367,test,test,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/269,1,['test'],['test']
Testability,"PR #3821 introduce new rendering features which breaks the default rendering mode of TetrahedronFEMForceField (it is rendered pure white instead of our classical bluish tetra rendering). . In current PR I restore the default rendering to use the blueish mode still preserving the features added in 3821. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3971:843,test,test,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3971,2,['test'],['test']
Testability,"PR 2419 restores the correct behavior of CGLinearSolver regarding the call-super-init; https://github.com/sofa-framework/sofa/pull/2419. But as some of its data are tagged as Required, this rise an error message when the value; is not set by the user. I'm not sure it is wise to set the required flag when data provides meaningful and usable default values. I recommand removing it and more generally keep the isRequired only for data field that really have no possibility to have a default value (eg: the filename for a loader). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2498:1071,test,test,1071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2498,2,['test'],['test']
Testability,"PR adds a first implementation of the augmented lagrangian collision (see [A Surface-to-Surface Finite Element Algorithm for Large Deformation Frictional Contact](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6056201/pdf/bio-17-1579_081013.pdf)). . To do so, because it is very close to the classical Unilateral constraint, I've tried to factorize code by adding a virtualization layer for both the constraints and the associated contact responses (see added class BaseContactLagrangianConstraint and BaseUnilateralContactResponse). It rely on a contact param template which is the only thing that differs in term of data and of course the type of ConstraintResolution used. . An example scene is introduced in the Demo folder, simply copying the falling beam example and replacing the response by the augmented lagrangian one. . There are still one todo for the future, even if this PR is already working on its own : adding the per-contact-point penalty modulation. This should be done by going back to the collision element using the DetectionOutput.elem attribute. This allows to go back to the topology. The only unknown is how to compute the element volume when the colliding topology is mapped to the simulated one. . [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/142]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5003:1845,test,test,1845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5003,2,['test'],['test']
Testability,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:488,Benchmark,Benchmarks,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,2,"['Benchmark', 'benchmark']","['Benchmarks', 'benchmarks']"
Testability,"PR on topologyGrid:. - Add new component: SphereGridTopology to create sphere topo. using grid (similar to CylinderGridTopology) with an example: SphereGridTopology.scn; - Clean the API GridTopology and its children: RegularGridTopology/SphereGridTopology/CylinderGridTopology, move several methods into mother class GridTopology.; - Add doxygen doc for the 4 classes; - Add tests for Cylinder and SphereGridTopology; - Add method addSphere/addRigidSphere in sceneCreator + tests + example. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/164:375,test,tests,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/164,3,['test'],"['test', 'tests']"
Testability,PR: first version of the integration of assimp Importer to Sofa loader structure. - Only support single mesh creation for the moment: see discussion: https://github.com/sofa-framework/sofa/issues/602; - Change all loader logs to use msg_error/warning/info; - Change in SofaKernel :; - loader that failed at init is now set to componentState Invalide.; - Add extension field in Datafilename. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:221,log,logs,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,3,"['log', 'test']","['logs', 'test']"
Testability,Paper submitted yesterday => perfect time to blow off some steam and kill some warnings. Before:; ![image](https://user-images.githubusercontent.com/6951981/75091097-02cb6580-556a-11ea-8e30-c2fe6ef641c4.png). After:; ![image](https://user-images.githubusercontent.com/6951981/75091104-0eb72780-556a-11ea-92df-437ec225f34b.png). P.S.: Let's wait for the CI before merging :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1258:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1258,2,['test'],['test']
Testability,"Parent modules must always interface the same libraries.; e.g. Sofa.Component.dll must always be the same. Thus, if some of its child modules are disabled, parent module will not generate a library. This PR creates and uses a new macro `sofa_add_subdirectory_modules`.; This macro is meant for parent modules to easily add their child modules and sets a variable with all added targets.; If a child module is missing or disabled, a message will be shown (not an error) and the library will not be created. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3225:1045,test,test,1045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3225,2,['test'],['test']
Testability,Part 1 of #629 This PR creates more Sofa Types in the PSDEFactory and uses a cpp-style typename convention . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/740:360,test,test,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/740,2,['test'],['test']
Testability,"Partial revert of #3822 where the usage of glBufferSubData is reinstated; because glMapBufferRange is a OpenGL3 function and it does not behave well with macos and ogl compat mode (reports of crashes). `1000 iterations done in 11.859 s ( 84.3241 FPS)`. A bit worse than with glMapBufferRange but still better than before #3822. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3841:867,test,test,867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3841,2,['test'],['test']
Testability,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2026:836,test,test,836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026,2,['test'],['test']
Testability,"Pass extra command-line arguments for python scenes loading in a more high-level function call. Knowing that SofaQtQuick uses a different argument parser, the underlying objective of this commit is to be able to pass command-line extra args using QCommandLineParser. This feature is ready on the side of SofaQtQuick and it works (i.e. attached patch). Note that the added input parameter 'sceneArgs' in the 'load' functions is an optional parameter. [patch_pyargs_support.txt](https://github.com/sofa-framework/sofa/files/3073394/patch_pyargs_support.txt). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992,2,['test'],['test']
Testability,PhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:1813,Benchmark,Benchmark,1813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,1,['Benchmark'],['Benchmark']
Testability,"Playing with ClangBuildAnalyzer, I noticed that BoundingBox was in the top ten of the most expensive include.; Indeed BBox was included in Base.h so everybody is including it. (and consequently Vec.h too). ```; 423823 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 511 ms), ; 362330 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 778 times, avg 465 ms),:; ```. Fortunately, It was painless to do a forward declaration with it.; After this update, BBox.h (and Vec.h) is much less expensive in the whole compilation process. ```; 84215 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/Vec.h (included 828 times, avg 101 ms),; 22233 ms: SofaKernel/modules/Sofa.Type/src/sofa/type/BoundingBox.h (included 779 times, avg 28 ms)`; ```. Weirdly, it is still included a lot (because of DataTypeInfo_BoundingBox.h) but it is nevertheless much less expensive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2728:1442,test,test,1442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2728,2,['test'],['test']
Testability,"Playing with UndefinedBehaviorSanitizer and came across UBs at the very start... This first one is triggered because of misaligned adress when reinterpret_cast a a pointer of char to a a pointer of uintr32_t. ```; Sofa/framework/Core/src/sofa/core/objectmodel/Base.cpp:149:35: runtime error: load of misaligned address 0x7f5e01822917 for type 'const uint32_t', which requires 4 byte alignment; 0x7f5e01822917: note: pointer points here; 6c 2e 68 00 64 72 61 77 00 73 68 6f 77 00 56 69 73 75 61 6c 69 7a 61 74 69 6f 6e 00 22 20 00 4c; ```. This is easily fixed by removing this `questionnable` (sic 😅) ""optimized"" test for comparing strings, and convert to a more readable (and modern) code; I dont really see the need to optimize (and in this way...) this part . For those curious about the optimization, it comes from; https://github.com/sofa-framework/sofa/blame/b3fdf7e4619536941e9cfdd6d4bc6f3e7169af0b/framework/sofa/core/objectmodel/Base.cpp#L96; and; https://learn.microsoft.com/en-us/windows/win32/directshow/fourcc-codes; apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3664:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3664,3,['test'],['test']
Testability,"Playing with [SofaBenchmarks](https://github.com/alxbilger/SofaBenchmark), stumbled on the constructor of sofa::type::vec:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.6 us 13.2 us 74667; BM_FixedArray_construct<sofatypefixedarray3f>/8192 13.0 us 14.2 us 112000; BM_FixedArray_construct<sofa::type::Vec3f>/8192 26.7 us 24.2 us 21333; ```; (trying to construct 8192 std::array<float, 3> vs sofa::fixed_array<float,3> vs sofa::type::vec3f); Unexpectedly, the vec3f is almost twice slower that the other, which is weird as type::vec3f inherits fixed_array<float,3>; By using the constructor of fixed_array (instead of calling set()), we can achieve closer results:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.9 us 12.2 us 64000; BM_FixedArray_construct<sofatypefixedarray3f>/8192 12.7 us 10.6 us 89600; BM_FixedArray_construct<sofa::type::Vec3f>/8192 15.0 us 17.4 us 42165; ```. I did my tests on Windows/MSVC2019 so maybe results are different with different compilers/systems though... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2439:896,test,tests,896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2439,3,['test'],"['test', 'tests']"
Testability,Please add unit tests based on the PR #3050,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1169721980:16,test,tests,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1169721980,1,['test'],['tests']
Testability,Please consider merging this PR soon ;-); [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/546#issuecomment-364502422:64,test,tests,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/546#issuecomment-364502422,1,['test'],['tests']
Testability,"Please gently welcome this first NG pull-request :blush: . The base idea was to remove the SofaComponent* packages from modules and to put them in their own place instead.; Doing this, I realized that SofaComponentBase contains actual components (it's not only a basic package as it should be).; Thus, it permitted me to introduce the first NG module Sofa.Component.Utils and fill it with SofaComponentBase intruders (MakeAliasComponent, MakeDataAliasComponent, MessageHandlerComponent, InfoComponent). NG architecture is based on the discussions in #543.; Transition headers are also provided (in deprecated_layout folder) to ensure old includes. I am also working with @damienmarchal on a way to cleanly automatize this kind of NG refactoring with python: see https://github.com/guparan/sofa2ng. Feedback is more than welcome!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/620:1081,test,test,1081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/620,2,['test'],['test']
Testability,Please make a separate pull request referencing #368. . I need to fix failing tests before #368 is merged though.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324897715:78,test,tests,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324897715,1,['test'],['tests']
Testability,"Please review carefully, this PR could be breaking (but should not). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/782:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/782,2,['test'],['test']
Testability,Please submit a PR with a test validating the right behavior.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-298854469:26,test,test,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-298854469,1,['test'],['test']
Testability,Please try it on the CI before merging ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/431:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/431,2,['test'],['test']
Testability,Plugin = to be loaded by PluginManager (via `<RequiredPlugin/>` or plugin_list.conf).; Classic library = does not contain any Component. sofa2ng has been modified accordingly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/872:427,test,test,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/872,2,['test'],['test']
Testability,"Plugin SofaCoreAsync; https://github.com/SofaDefrost/sofa/blob/pluginSofaCoreAsync/applications/plugins/SofaCoreAsync/Sofa/Core/Async/tests/AsyncComponentTracker_test.cpp. Associate to the component a Data<'state'>. This data state can be used to keep track of component state change and propagate lazy update so that the component that depend on other can be updated appropriately. The general design was attempting to combine both synchonous and asynchronous components in the same scene so that ""normal"" Sofa object can still interact with the one using asynchronous updates. . In the following example a change in python1,2,3 file is reloaded and the ImplicitFeldRenderer & MeshGeneration are updated, each in an asynchronous way. ; ```qml; Node : {; ImplicitField : { name : ""python1"", src : ""python1.py"" }; ImplicitField : { name : ""python2"", src : ""python2.py"" }; ImplicitField : { name : ""python3"", src : ""python3.py"" }; ; ImplicitFieldRenderer : { src : ""@python1"" }; ImplicitFieldRenderer : { src : ""@python2"" }; ImplicitFieldRenderer : { src : ""@python2"" }. TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh1"" }; SurfaceMeshGeneration : { src : ""@python2"", name = ""mesh2"" }; TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh3"" }; ; MechanicalFEM3D : { src : ""@mesh1"" }; MechanicalFEM2D : { src : ""@mesh2"" }; MechanicalFEM3D : { src : ""@mesh3"" }; }; ```. Note 1: When used in asyncrhonous mode, the current approach does not guarante that a change is propagated immediately. So one change in a component at a given IDLEEvent may be updated in this or an other IDLEEvent. It depend on ""when"" the dependencies checks the validity of their input. . Node 2: To fix that a queue may be used to keep track of what still needs to be done. Looks good on paper but this kind of implementation are often much more complex than their initial drafted idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769:134,test,tests,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769,1,['test'],['tests']
Testability,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4484:301,test,tested,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484,3,['test'],"['test', 'tested']"
Testability,"PluginFinder : https://github.com/alxbilger/PluginFinder. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2860:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2860,2,['test'],['test']
Testability,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1823:909,test,test,909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823,2,['test'],['test']
Testability,"PoC removing a piece of code which seems to be useless.. ; I guess it was aimed at supporting topo changes but in fact it isn't used!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3230:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3230,2,['test'],['test']
Testability,"PointConstraint is removed.; serr/sout/sendl are removed.; A lot of headers will now trigger the SOFA_DISABLED_HEADER error if included. Please review, I may have done bad/brutal things. [ci-depends-on https://github.com/sofa-framework/Registration/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/268]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090:869,test,test,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090,2,['test'],['test']
Testability,"PointConstraint was introduced in https://github.com/sofa-framework/sofa/commit/a30c68b77e3686fce3c4409b21600a3bc565f51e as a temporary component to be removed later.; It is redundant with FixedConstraint.; A problem with ""memory leak issue"" is mentioned. I don't know if it has been fixed.; Note that I did not find any use of this component in scene files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2268:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2268,2,['test'],['test']
Testability,"Poisson's ratio should be in [0,0.5[. This PR adds an error message if it's not the case. ; A value outside [0,0.5[ just leads to an odd behavior. . **EDIT**: a warning message (not error). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908,2,['test'],['test']
Testability,"Poke @fjourdes @bakpaul ;). TODO : ; - test with weak (spring) constraint instead of the projective one; - add clamping on eigen values in the Hessian; - investigate the failing tests (to be listed, a priori Ogden Mooney Rivlin for PK2 + Costa for the Hessian-ElasticityTensor)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2009244438:39,test,test,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2009244438,2,['test'],"['test', 'tests']"
Testability,Port the headless recoder to use helper/gl/VideoRecorderFFMPEG.h instead of its own implementation of it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/919:357,test,test,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/919,2,['test'],['test']
Testability,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4269:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269,2,['test'],['test']
Testability,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1756:991,test,test,991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756,2,['test'],['test']
Testability,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1797:1406,test,test,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797,2,['test'],['test']
Testability,"Preparation for sofang. ComponentChange does not handle the case where a component is still creatable/invokable from a (deprecated) plugin but the ""real"" component has been moved into an other plugin (typically from a current Sofa Module to a planned new SofaNG module); This PR add this case into ComponentChange. The current ""Moved"" class handles the case where a component has been *really* moved from two plugins (i.e not creatable anymore if the original plugin is still used. + some cleanups coming from suggestions from SonarLint. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2565:1077,test,test,1077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2565,2,['test'],['test']
Testability,"Prepare outsourcing of the LMConstraint plugin; New plugin is now available at :arrow_right: https://github.com/sofa-framework/LMConstraint. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2508:697,test,test,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2508,2,['test'],['test']
Testability,Previous PR #1034 deprecating the naming in scenes and in C++ of XxxxxModel into XxxxxCollisionModel for clarity. This PR fixes all generated warnings in the code related to this deprecation. All scenes in SOFA were already updated in #1292. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301:493,test,test,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301,2,['test'],['test']
Testability,"Previous version of libQGLViewer was not compatible with Qt6, but a recent update was released and should be OK. ; (at least it is with my setup, MSVC/Qt6.4.0); So I updated the version of libQGLViewer present in the source (good or bad, I dont know....); and restore the choice in the CMakeLists.txt of Sofa.Gui.Qt. I also removed the version in the folder name. Note that we cannot take the source as it is, as there is not CMakefile, and there were some errors with MSVC about std::min/std::max (need to remove std::, and seems it was already done with the source already in the repo). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3454:1128,test,test,1128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3454,2,['test'],['test']
Testability,"Previously, the default mode was NOTICE, which print the message in red. The doc says ""Important message printed to stderr to attract user's attention."". The consequence was that almost all the CMake log was written in red, and it was difficult to find the true important messages. This commit change the type of message so it is written in black. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3381:200,log,log,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3381,3,"['log', 'test']","['log', 'test']"
Testability,"Pro:; - type and signature consistancy at compile time.; - ease the refactoring as the signal/slots are noww real method; - make explicit the type conversion between different signature. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943,2,['test'],['test']
Testability,Probably because of the removal of the DataRepository intialization in https://github.com/sofa-framework/sofa/commit/5dad27f7bc374c190042959bc55367532008b25a#diff-876fc7003912f34d0dac92bb413d70a0 ; The tests are failling but as they were not in-heriting from BaseTest/SofaTest this was not reported as test failure.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440205222:202,test,tests,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440205222,2,['test'],"['test', 'tests']"
Testability,Problem (test failing) seems to be fixed with the Inherit::parse(),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2098#issuecomment-861271861:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098#issuecomment-861271861,1,['test'],['test']
Testability,Problem demonstrated in the failing tests DataFileNameVector_test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/21#issuecomment-248850189:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/21#issuecomment-248850189,1,['test'],['tests']
Testability,"Problem detected while using the install distribution. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2705:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2705,2,['test'],['test']
Testability,Problem of convergence of the StandardTetrahedralFEMForceField. Quick solution = decrease force applied and highlight the data of the new version of StaticSolver; But we should check since when / due to which commit this error occured (check #950 ). NOT to merge before answering below points; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1207:545,test,test,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1207,2,['test'],['test']
Testability,"Problem statement:; Historically a lot of tests were implemented with the assumption that warning or error messages were tests failure. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,8,['test'],"['test', 'testReport', 'testing', 'tests']"
Testability,"Problem:; It is common that people write scene in which they used components from specific plugins but forgot the corresponding ; ```xml ; <RequiredPlugin name=''>; ```; because they, in a way or an other, preload the plugin. . This is problematic because, when the environment change (you compile sofa in a different way, your preload different plugin, it is a different person on a different computer,... ) and the preload is not done anymore it makes the component/plugin tracking very hard if it is not a trivial component in a trivial plugin. . To solve this problem, I implemented a SceneCheckerVistitor that scans the scene and detects which components are from a plugin and warn the user if there is no RequiredPlugin in there scene with this component and explaine how his scene should be fixed for the good of all. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/306:1078,test,test,1078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/306,2,['test'],['test']
Testability,Problem:; MessageDispatcher is not thread safe as showned with the failing test named ; testThreading_OpenIssue. This PR:; - the MessageDispatcher is now thread safe so we can emit messages from different threads. ; - the test is not an OpenIssue anymore and its future failure should be considered as regression. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257:75,test,test,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257,3,['test'],['test']
Testability,Problem:; The implementation of getRelativePath is broken as it returns the current; value which can be either a relative or an absolute path. Solution:; The new implementation is building a real relative path against the path contained; in the DataRepository. I also added few test for DataFileName to valide the different behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/250:278,test,test,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/250,2,['test'],['test']
Testability,"Propagation of positions through mappings is required in Newton loop, otherwise the initial position (the one before the Newton loop) is used when computing forces. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2584:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2584,2,['test'],['test']
Testability,"Proper use of `msg_info`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2102:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2102,2,['test'],['test']
Testability,Python 2.7 is not compatible with C++17 and later. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284,2,['test'],['test']
Testability,"Qt6 did not handle QtCharts and QtWebEngine until 6.2 (I think). This PR restores the two features, and fix the code : some deprecated/changed functions here and there and QtCharts code is no longer in its own namespace. This PR + #3454 allow us to have the same feature between Qt5 and Qt6 (and maybe giving up on Qt5 soon). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3456:865,test,test,865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3456,2,['test'],['test']
Testability,Quick PR to fix the SofaPhysicsApi project; - Remove deprecated code regarding OpenGL tetrahedron. ; - FIX some bad path in cpack installation; - Change some class declaration to allow inheritance. . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/167:369,test,test,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/167,1,['test'],['test']
Testability,"Quick and clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1707:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1707,2,['test'],['test']
Testability,Quick and simple!; Will fix Base_test.testComponentState. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1204:38,test,testComponentState,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1204,3,['test'],"['test', 'testComponentState']"
Testability,"Quick clean based on Boost+CMake `/include` error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3067:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3067,2,['test'],['test']
Testability,"Quick clean before next work step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3250:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3250,2,['test'],['test']
Testability,Quick commit to fix [build error](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/325/console) after #370 merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/380:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/380,2,['test'],['test']
Testability,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2206:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206,2,['test'],['test']
Testability,Quick fix as glut has been removed from Sofa.; remove the glutInit which has nothing to be there. Moreover I don't think someone is using this project with useGui ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/659:417,test,test,417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/659,2,['test'],['test']
Testability,"Quick fix of compile error, quite self-explanatory I guess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/680:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/680,2,['test'],['test']
Testability,"Quick fix: to allow Regression to dump only last step as before. Right now it will always dump all dofs at each timestep. WriteState init method check if d_period is set. ; Therfor If d_period is set to 0.0 it will activate a section of the code what will overwrite the period to the current timestep. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4919:843,test,test,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4919,2,['test'],['test']
Testability,"Quick test on what could be a direction to fix issue: https://github.com/sofa-framework/SofaPython3/issues/346. I'm now wonder:; - how to generalize that find more comprehensible names for all that. ; - is there room for small refactoring in TypeInfo related to the exisitng containers. . If some of you have suggestion, it is more than welcome. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3851:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851,3,['test'],['test']
Testability,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,3,['test'],['test']
Testability,"Quick update of the MechanicalMatrixMapper so that when the user interacts on the simulated object with the mouse, the StiffSpringForceField that is dynamically added to the scene graph gets included in the forcefield link list of the MMMApper. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/772:496,test,test,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/772,2,['test'],['test']
Testability,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:439,Test,Tests,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,1,['Test'],['Tests']
Testability,"Quite intrusive in SOFA but I don't see another way to define it without an overwrite each time CMake runs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3313:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3313,2,['test'],['test']
Testability,"Quite verbose indeed (100 steps generates around 800KB of logs). May generate timeouts as well. WIP for the moment to see the difference on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4184:58,log,logs,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4184,3,"['log', 'test']","['logs', 'test']"
Testability,"R https://github.com/sofa-framework/sofa/pull/106 taking into account all the feedback and discussion in https://github.com/sofa-framework/sofa/issues/179. This PR contains: ; - a PerComponentLoggingMessageHandler to stores the messages in components in a much cleaner way compared to the existing code in Sofa.; - the old history code is removed but a compatibility layer on top of the new one is provided to ; provide backward compatibility (eg in third party code like qtSofaQuick). ; - the runSofa GUI is slighly updated and improved to make use of the new component. ; - the msg_api is extended to facilitate its use and coherency; - I fixed all around in the code base the mis-usages of printLog eg: if(f_printLog) cout << .... ; - I didn't replaced the f_printLog data field because it would have broken the API too much ; (maybe one day if someone care). Now a bried summary of the new functions in the msg_* API; ```cpp; msg_info() << ""This is a message sended by the this component"" ;; msg_info(other) << ""This is a message sended by the 'other' component"" ;; msg_info(""A String"") << ""This message is not sended by a component"";; ```; Each version also exist in a conditional form eg:; ```cpp ; msg_info_when(!file.valid()) << ""File is not valid"" ; ```. In the previous examples you can also replace 'info' with the type of message you want to emit among:; 'info', 'advice', 'deprecated', 'warning', 'error', 'fatal'. ; ; 'warning', 'error' and 'fatal' and 'deprecated' message cannot be muted with the printLog parameter while 'info','advice',' can. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:1811,test,test,1811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,1,['test'],['test']
Testability,"RS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:3273,benchmark,benchmark,3273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,4,"['benchmark', 'test']","['benchmark', 'benchmarks', 'test']"
Testability,"RayTraceDetection is deprecated. Use BruteForceBroadPhase and RayTraceNarrowPhase instead.; A message warns the user and it keeps compatibility with scenes using RayTraceDetection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2212:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2212,2,['test'],['test']
Testability,"RayTriangleIntersection is a weird class, used to only compute the intersection of a ray and a triangle (with even a version with TriangleCollisionModel?).; So ;; - I moved the useful function directly in Sofa.Geometry::Triangle (+a version w/o barycoeff ); - replace the usage where RayTriangleIntersection was used; - inline it (no compilation unit anymore for it); - and deprecate it for people still using it ; - write a small unittest as well. I took the liberty to generalize the normal() function in geometry::Triangle, as it would provoke a compilation error if used with something else than Vec3 (and extend the unittest with array type as well). Diff: https://github.com/fredroy/sofa/compare/remove_triplane_intersection_file...move_triangleoctree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2763:1298,test,test,1298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2763,2,['test'],['test']
Testability,Reactivate regression tests in CI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801,1,['test'],['tests']
Testability,"ReadState was only reading the file and making the changes after the first time step (or later). ; This PR allows to load the state at init. . Edit: I forgot to mention that it shouldn't change the behavior of existing scenes. ; The file loaded by ReadState has time values that define at which time steps of the simulation each different state should be applied. Currently T=0 is not working, this PR simply allows that. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1654:963,test,test,963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1654,2,['test'],['test']
Testability,"Reading a JPEG file is implemented by ImageQt, which obviously depends on Qt.; It means that Qt is needed to load any JPEG image (actually, also gif, and other exotic formats). 1) I think we should be able to read JPEG files without Qt ; perhaps using libjpeg ?; 2) Moreover, we need to have a Qt Gui to activate ImageQt ; then it could be an idea to move this class to a plugin ? Which will be able to read all image formats the Qt library can read ?; 3) (BUG) JPEG files read by ImageQt seem to be upside-down, if we compare it with the same image converted in the PNG format (I will write a test to confirm that)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51,1,['test'],['test']
Testability,Ready but waiting the CI to be upgraded with #2251 to be sure that all tests are OK,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240#issuecomment-880523148:71,test,tests,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240#issuecomment-880523148,1,['test'],['tests']
Testability,"Ready, merge if [ci-build][with-all-tests] agrees.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449018:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253449018,1,['test'],['tests']
Testability,"Really just for logs to understand more what is pulled. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4507:16,log,logs,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507,3,"['log', 'test']","['logs', 'test']"
Testability,Really not sure about the change in Distances. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1441:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1441,2,['test'],['test']
Testability,"Reasons for the failing tests:; - Timeout: simulations are way slower, but not necessarily different in terms of behavior; - `buildStiffnessMatrix` is not implemented: if it is not implemented, there is the backup of calling `addKToMatrix`, but it is not necessarily implemented.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010#issuecomment-1623097057,1,['test'],['tests']
Testability,Rebase on #3050 and then create a unit test on SparseLDLSolver: doAddJMInvJtLocal,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1169723258:39,test,test,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1169723258,1,['test'],['test']
Testability,Rebuild and run the scene tests :; [ci-build] [with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411#issuecomment-336932219:26,test,tests,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411#issuecomment-336932219,2,['test'],['tests']
Testability,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1889:19,test,testing,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889,3,['test'],"['test', 'testing']"
Testability,"Recently pluginized modules do not have the relocatable property set.; Here is the fix 🤫. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604,2,['test'],['test']
Testability,"Recorder feature has been disabled for at least 10y (not even sure it would compile with the current state of Qt); and the feature itself seems to be broken anyway; Apparently it was supposed to allow a user to record and play back simulations . Commit to focus on:˙https://github.com/sofa-framework/sofa/pull/4041/commits/02f9cb7f14f72b7c71a8ec686ee47213c481f429. Based on ; - #4025. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4041:924,test,test,924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4041,2,['test'],['test']
Testability,Recover a commit in is_sofa_multithreading branch (3da9e50752d6aead487f0b5f8897bfc4249f9404) to allow OdeSolver concurrent execution:. A new data<bool> is added (d_threadsafevisitor) to disable allocation and writing in the mechanical object component used by the OdeSolver ; The same change is applied to all the OdeSolver derived class and it doesn't affect the default behavior and the scenes.; EulerSolver; EulerImplicitSolver; StaticSolver; CentralDifferenceSolver; VariationalSymplecticSolver; NewmarkImplicitSolver. Task Scheduler refactoring;; - improve task stealing between worker threads.; - add worker thread name to make the debugging and profiling easier.; - group and move the initialization tasks in a dedicated file. New component and scene to show off the performance improvement of multithreading execution.; - MeanComputation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:1098,test,test,1098,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,2,['test'],['test']
Testability,"Recovering changes made by @olivier-roussel in his [patch](https://github.com/sofa-framework/conda-ci/blob/master/conda/recipes/sofa/patches/allow-compilation-out-of-SOFA.patch). To be noted @fredroy : in _Sofa/GUI/Qt/CMakeLists.txt_, Sofa.GL is only found in a QUIET way and it was not linked explicitely (no where `target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)`). Could you let me know whether the proposed change seems reasonable to you. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4844:988,test,test,988,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4844,2,['test'],['test']
Testability,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004:573,test,test,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004,2,['test'],['test']
Testability,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1990:512,log,logical,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990,3,"['log', 'test']","['logical', 'test']"
Testability,"Refactor CImg & CImgPlugin and fix the code that depend on it. . The general problem is that CImg is header only library thus the; multiple inclusion of the code in multiple dll seems to cause trouble; on the mutexes initialization causing the crash & failure when two plugins compile; with CImg & CImgPlugin are loaded (eg image, flexible). To avoid this scenario, CImg is moved into the CImgPlugin that; hold the mutex and other code needs to include #include<CImgPlugin/SOFACImg.h>; instead of the raw CImg. This PR is resulting from the split of #548 (for clearity and to ease reviewing). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,2,['test'],['test']
Testability,Refactor of DetectionOutputVector interface and its implementation TDetectionOutputVector. . The goal is to force all components to use the only functions provided by the DetectionOutputVector interface to interact with the DetectionOutput data that stores the contacts. One advantage of accessing the DetectonOutput data through an interface is to make a concurrent modification of contacts easier. The current implementation allows direct access to the DetectionOutput vector by casting the TDetectionOutputVector class to the helper::vector<DetectionOutput> Vector due to a double inheritance. ; This makes the DetectionOutputVector interface useless because easy to bypass. Current implementation of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector : public helper::vector<DetectionOutput>; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. }; ```. New implementation of of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. private:; 	helper::vector<DetectionOutput>; }. ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:1519,test,test,1519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,2,['test'],['test']
Testability,Refactor regression test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4424:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424,1,['test'],['test']
Testability,"Refactoring ObjectFactory without breaking to much SOFA is rather complex. ; To ease in the process I split the ObjectFactory class in three entity.; ; sofa::core::future::ObjectFactory and sofa::core::future::ObjectFactoryInstance are the new versions while sofa::core::ObjectFactory is a compatibility layer exposing the old API for transitionning. . For the moment, 100% of the old API is reproduced and emits deprecation warning. ; As the code change are rather important it is easier to read the source code instead of the diff. . sofa::core::future::ObjectFactory is implementing the factory mecanisme without any static in it. ; sofa::core::future::ObjectFactoryInstance is a single-instance factory accessible through static method. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712:1282,test,test,1282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712,2,['test'],['test']
Testability,"Referee: @IPeterlik . Members: @IPeterlik @remibessard @hdeling @damienmarchal @fredroy @epernod Jeremie . Main objective: provide a continuous support for validation of SOFA. Subtasks and estimated duration; - using python, based on Method for Manufactured Solutions (MMS), static linear elasticity with linear FEM in (compression and torsion with < 5% deformation); ex: TensorMassFEMForceField; - TensorMassFEMForceField : addKToMatrix, vector of E; - extend it to beams (BeamAdapter); - implement engine : plugged to compute stress data in all FEM in SOFA. Future; - write article; - contact Stefan Suwelack for integration into CAEML.org. ---. Validation solution:; - analytical; - software comparison (Abaqus); - tests; - experimental setup. cases:; - dynamic vs static; - linear elasticity with linear FEM; - metrics : displacement, stress+strain tensors",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/25:718,test,tests,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/25,1,['test'],['tests']
Testability,"References removed:; - THMPGSpatialHashing, ; - Flexible, ; - Compliant, ; - OptiTrackNatNet, ; - OpenCTMPlugin. In ref to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3960:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3960,2,['test'],['test']
Testability,"Reflect change in CMake which added a dependency on LinearSystem in #2777. It will fix out-of-tree builds based on the current master. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3840:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3840,2,['test'],['test']
Testability,Regarding last review comments (as I'm not sure to be there for the next review):. - I would like to remove those header directly... do we have to go through the 6 months of deprecated before... ?; - Do you want me to put keep empty headers with the SOFA_DEPRECATED_HEADER macro? ; - I would keep the xxxSetGeometryAlgorithms and not put everything inside xxxSetTopologyXXX because the name Geometry make sense here to indicate we depend on the type of dof (aka mechanicalObject). Tests and scenes have been updated.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1546#issuecomment-725923633:481,Test,Tests,481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1546#issuecomment-725923633,1,['Test'],['Tests']
Testability,"Regnerated using github template.; It should now properly label the repository on the top right corner and when appearing in research. ; Also it should be added as a second tab as the readme on the main page. PR Candidate for SOFA 2024 awards!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4410:784,test,test,784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4410,2,['test'],['test']
Testability,"Regression results exported with Windows make the regression tests fail on Linux and inversely. It may come from a precision problem in one component, from the amount of exported data or from the regression mechanism itself. To be investigated at STC coding sprint",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1136957490:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800#issuecomment-1136957490,1,['test'],['tests']
Testability,"Regression results exported with Windows make the regression tests fail on Linux and inversely. It may come from a precision problem in one component, from the amount of exported data or from the regression mechanism itself. To be investigated at STC coding sprint. Note for the STC, we could also add to this the fix of the timeout of ArticulatedArm.header.py",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2983:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2983,1,['test'],['tests']
Testability,Regression tests execution time after:; real 0m22.666s; user 0m0.000s; sys 0m0.015s; Reference size dir: 2.96 mo,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-499862525:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-499862525,1,['test'],['tests']
Testability,Regression tests execution time before:; real 0m41.202s; user 0m0.000s; sys 0m0.015s; Reference dir: 32 mo,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-499859915:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061#issuecomment-499859915,1,['test'],['tests']
Testability,"Related to #3967. I was not able to not unify a bit the behavior and clean some part of the code. . The non constant computation of the pressure is not valid as all the derivatives are zero in addDForce, addKtoMatrix... it is also not consistant with QuadPressureForceField. Moving to the situation with a valid non constant computation on both Triangle and Quad requires more work, so for the moment I prefer to just deprecate the non constant situation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4294:995,test,test,995,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4294,2,['test'],['test']
Testability,"Related to PR #1259 ; It appears that several ways (and API) exist to create a custom collision with discrete models (Point, Line, Sphere..). It should be restricted to one, consistent, clear, documented and logical way. This could definitely be addressed in the next STC# 9 in Lille. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1262:208,log,logical,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1262,1,['log'],['logical']
Testability,"Related to https://github.com/sofa-framework/sofa/issues/3499. Unit tests are added on empty systems. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3500:68,test,tests,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3500,3,['test'],"['test', 'tests']"
Testability,"Related to: https://github.com/sofa-framework/sofa/issues/3013; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3015:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3015,2,['test'],['test']
Testability,"Relevant for those compiling out-of-tree (e.g SofaPython3 😙); Some dependencies were missing in the *cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1679:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1679,2,['test'],['test']
Testability,"Relevant test results are correct now, ready.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1301501723:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329#issuecomment-1301501723,1,['test'],['test']
Testability,Remark : I need to fix the test on planeForceField,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/704#issuecomment-402411560:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/704#issuecomment-402411560,1,['test'],['test']
Testability,"Remove ColladaSceneLoader plugin and its embedded old version of assimp. ; - Move class, doc and examples inside SofaAssimp plugin.; - Merge the CMakeLists and update the findAssimp with a the version provided by Assimp 5.0.; - Ensure scenes of both plugins are working with up to date version of assimp. SofaAssimp plugin still need the pluginization refresh. To be done in another PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360:638,test,test,638,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375 ; Update FEM:; - FastTriangularBendingSprings; - TriangularBendingSprings; - TriangularTensorMassForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2388:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2388,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - FastTetrahedralCorotationalForceField; - QuadBendingFEMForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangularAnisotropicFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2390:888,test,test,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2390,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - HexahedralFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2384:766,test,test,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2384,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Update FEM:. - QuadularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - VectorSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2389:801,test,test,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2389,2,['test'],['test']
Testability,"Remove TopologyHandler instances in FEM and set topology callbacks directly using TopologyData thanks to PR #2375; Updated components:; - DiagonalMass; - MeshMatrixMass. Also fix DiagonalMass topological changes for Quad topology and update test which was wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2391:241,test,test,241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2391,3,['test'],['test']
Testability,"Remove a really annoying ""unused variable"" warning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1325:303,test,test,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1325,2,['test'],['test']
Testability,"Remove all CUDA plugins from default plugin list for the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5044:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5044,2,['test'],['test']
Testability,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1883:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883,2,['test'],['test']
Testability,"Remove commented code & fix trivial issues (#1691 and #1662). EDIT: this pr is part of my good resolution for 2021...make at least 1 pr a day (whatever it is). ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1693:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1693,2,['test'],['test']
Testability,"Remove damping correction to the RHS because it is already added in the computeForce. In a Euler implicit integration scheme, the right hand side expression only contains terms coming for the internal and external forces taken at the begining of the timestep, and an inertial term constituted of the stiffness matrix, but no term coming from the constitutive damping. (see [Christian Duriez HDR](https://theses.hal.science/tel-00785118) for ref). The contribution of the damping forcefield is already taken into account through the `computeForce` call line 126, so the `b` coefficient should be put to 0 here otherwise the behavior is not correct. . This can bee reproduced by launching the scene `examples/Component/SolidMechanics/FEM/DampingForceField.scn` and putting the data `implicit` of the damping forcefield to true. This data might have been introduced to fix this error, because here we are in an implicit scheme, and setting this parameter to true when the `b` coef is equal to 1 changes the behavior. . This was introduced here : https://github.com/sofa-framework/sofa/commit/fe0ee6248971383daa4e488e80f5fe480ee85988. [ci-depends-on https://github.com/sofa-framework/Regression/pull/67]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848:1740,test,test,1740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848,2,['test'],['test']
Testability,Remove deprecated updateFlags method in TriangleModelCollision; Remove deprecated sort method in CubeModelcollision. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1201:368,test,test,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1201,2,['test'],['test']
Testability,Remove duplicated constructors and commented alias. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1250:303,test,test,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1250,2,['test'],['test']
Testability,"Remove error and send warning when cxxopt is found but version mismatch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4554:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4554,2,['test'],['test']
Testability,"Remove logs/warnings in SceneCreator_test by:; - inheriting from BaseSimulationTest instead of old api: sofa_test; - Remove sceneDump in AddCube method. Also update SofaCarving_test to use the correct header path. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:7,log,logs,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,3,"['log', 'test']","['logs', 'test']"
Testability,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1787:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787,2,['test'],['test']
Testability,"Remove most of the checks: if(CHECK_TOPLOGY). This macro is automatically set to true if SOFA is compiled in debug mode. The macro has been either:; - Remove the test and the warning/info message if not relevant. For example many getter, were sending a warning message if requested element id was out of bound before returning an ```Topology::InvalidID```. For those cases, the return value should be checked and warning could be send depending on the use. But it is not the role of a getter to send the warning.; - Remove test and let warning/error message when it is useful also in release.; - Remove the tests and sometimes also some creation buffer and keep some warning message in tricky cases. . **Result: several errors and warnings hidden in scenes are going to be revealed!** . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352:162,test,test,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352,5,['test'],"['test', 'tests']"
Testability,Remove new warning in MapMapSparseMatrixEigenUtils.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/485:305,test,test,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/485,2,['test'],['test']
Testability,"Remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4785:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4785,2,['test'],['test']
Testability,"Remove some warning:; - by updating the code ; - by configure in CMakeLists.txt the library (gtest, libQGlViewer, csparse, CImg) as system library. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1343:399,test,test,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1343,2,['test'],['test']
Testability,Remove testmessagehandler,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/95:7,test,testmessagehandler,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/95,1,['test'],['testmessagehandler']
Testability,"Remove the find_package(tinyxml2 REQUIRED) because the link is private. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4555:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555,2,['test'],['test']
Testability,"Remove the mesh export to a hard-coded absolute path, which was probably used to debug the component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2420:641,test,test,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2420,2,['test'],['test']
Testability,Remove the randomness of LCPForceFeedback test to avoid having random errors.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4671:42,test,test,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4671,1,['test'],['test']
Testability,"Remove thread specific declaration for ExecParams class. accessing thread local variables is slow and if the thread-local variable is accessed very frequently, the cost may become an issue. ; https://software.intel.com/en-us/blogs/2011/05/02/the-hidden-performance-cost-of-accessing-thread-local-variables. The ExecParams global pointer is declared thread specific but it is often passed in a function call as argument.; A function executed in a second thread can receive as argument the thread local variable of the first thread and it is allowed to use it.; In this situation there is no need of use the thread local variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1129:880,test,test,880,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1129,2,['test'],['test']
Testability,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4506:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506,2,['test'],['test']
Testability,Remove unjustified Assert in getSimulation(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1082:19,Assert,Assert,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1082,1,['Assert'],['Assert']
Testability,"Remove unused Data buffer of point indices. quick way to fix #1591 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2993:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2993,2,['test'],['test']
Testability,"Remove unused Data:; - edgeInfo; - f_damping. Removes API proposing to implement damping inside the same class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2283:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2283,2,['test'],['test']
Testability,"Remove unused _assembling data in BeamFEMForceField and HexahedronFEMForceField; Also clean warning. However, @alxbilger, `_assembling_ seems to be used for both TetrahedronFEMForceField and TetrahedralCorotationalFEMForceField.. (see [for instance](https://github.com/sofa-framework/sofa/blob/master/Component/SolidMechanics/FEM/Elastic/src/sofa/component/solidmechanics/fem/elastic/TetrahedralCorotationalFEMForceField.inl#L664)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2901:972,test,test,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2901,2,['test'],['test']
Testability,Remove useless log files; Remove old example of MatrixMass (deprecated and soon removed class); Add MeshMatrixMass example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1257:15,log,log,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1257,3,"['log', 'test']","['log', 'test']"
Testability,"Remove warnings, mostly from missing override keyword.; (+ some old style C cast). And fix a (potential) crash in MechanicalMatrixMapper (uninitialized pointer) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/968:414,test,test,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/968,2,['test'],['test']
Testability,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2195:673,test,test,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195,2,['test'],['test']
Testability,Removing all highorder classes from the base topological classes of SOFA.; Created a new open repository for those classes at sofa-framework/plugin.HighOrder 👍 ( https://github.com/sofa-framework/plugin.HighOrder.git ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] updated Flexible plugin to use the new plugin. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220:445,test,test,445,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220,1,['test'],['test']
Testability,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1973:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973,2,['test'],['test']
Testability,"Rename OBJExporter into VisualModelOBJExporter to express more clearly that it only exports the VisualModels; Compatibility layer added + Alias. Fix #1783. Q: does it make sense to keep examples in the module itself?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2505:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2505,2,['test'],['test']
Testability,Rename the class and add the option to handle sparse mass matrix with Euler explicit scheme!; Useful for trainings and useful for anyone starting in SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1260:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1260,2,['test'],['test']
Testability,"Rendering using GL_DOUBLE has terrible performance on some hardware/os/drivers that are still commonly used. . Reverts #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3073:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3073,2,['test'],['test']
Testability,"Reopening of #1274. > unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer); > This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1287:540,test,test,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1287,2,['test'],['test']
Testability,"Reorder / recolor / change badges. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4417:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4417,2,['test'],['test']
Testability,"Replace SOFACUDA_ARCH containing arbitrary value with (CMake's) auto arch detection.; If needed, you can disable auto-detection with the desired arch value.; It should (not tested) also generate cuda code for multiple arch as well. Remove also warning when configuring with CMake. (about deprecated macro sofa_create_package). I guess it could break CMake CUDA config for people using the SOFACUDA_ARCH variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1336:173,test,tested,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1336,3,['test'],"['test', 'tested']"
Testability,"Replace some \#ifndef by pragma, update some namespace and remove some relatives header inclusions in:; - CudaCollision; - CudaContactMapper; - CudaIdentityMapping; - CudaSubsetMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2674:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2674,2,['test'],['test']
Testability,"Replace the bash code block by a python one-liner. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2454:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2454,2,['test'],['test']
Testability,"Replaces #3360 as the pull request is blocked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3462:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3462,2,['test'],['test']
Testability,"Replaces https://github.com/sofa-framework/sofa/pull/3806 after discussion during the dev meeting.; Fixes https://github.com/sofa-framework/sofa/discussions/3773. The includes are not exhaustive. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3865:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3865,2,['test'],['test']
Testability,"Replacing ; `std::enable_if_t<TL == 1 && TC != 1 || TC == 1 && TL != 1> >`; by; `std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)> >`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3633:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3633,2,['test'],['test']
Testability,"Replacing automatically the deprecated template at the begining of the createObject method of the factory doesn't work for CUDA implementation using Matrices when compiling sofa in Double and CUDA in Float. See #3644 for more context . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3646:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3646,2,['test'],['test']
Testability,Report from users. They tests the example and it does not work;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489637824:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489637824,1,['test'],['tests']
Testability,Reproduce work similar to what has been done for OmniEmulator. This could be used to test the plugin on the CI. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1371:85,test,test,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1371,1,['test'],['test']
Testability,Requires #814 . Renaming DataTrackerDDGNode::isDirty() to DataTrackerDDGNode::hasChanged() to reduce confusion with DDGNode::isDirty(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/820:387,test,test,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/820,2,['test'],['test']
Testability,"Requires other PRs to avoid crashes during the dump. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4818:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4818,2,['test'],['test']
Testability,RequriedPlugin does not updates when some of its data field are changed. ; This PR implement this behavior without breaking the existing one. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1458:395,test,test,395,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1458,2,['test'],['test']
Testability,"Reset button becomes Reload button (equivalent to CTRL+R); Reset remains available with ALT+R ; If this PR gets accepted I would propagate to ImGUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123,2,['test'],['test']
Testability,"Resize the force vector even when no force Data has been set. This avoids a crash later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3670:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3670,2,['test'],['test']
Testability,"RestSpringsForceField has almost two versions: one for Vec (default implementation), the other for Rigid (specialization in cpp); Problems are:; - ugly code duplication; - not possible to instantiate from somewhere else for other kind of RigidTypes (i.e for float version or CudaRigid...). so this PR unifies the code and does not rely on any specialization in the cpp. The main difference is that the ""Vector"" version was testing if the stiffness was global or for each spring (more or less), with again an other ugly code duplication.; I removed the particular case but it means there is a test of the size at each iteration (in addF(), addDF()) which I think is not very problematic but I did not do any bench to test that. 🙊; ~~I also test if the case is Rigid on the Name(), a bit ugly but does the trick for me....~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3175:423,test,testing,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3175,6,['test'],"['test', 'testing']"
Testability,Restore regression test on the topology,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/829:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/829,1,['test'],['test']
Testability,"Return type of `getRotations()` should use the `typedef` type to respect the floating point precision of the template `DataTypes`. As it is now, it causes compilation errors when using template `defaulttype::Vec3fTypes`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2235:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2235,2,['test'],['test']
Testability,"Revert ""[Benchmark] Introduce benchmark on matrix assembly""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2214:9,Benchmark,Benchmark,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2214,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"Revert #3278 remove un-inded merge. Sorry for the mess. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4068:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4068,2,['test'],['test']
Testability,Reverts sofa-framework/sofa#219 because it introduce regression on the test scene.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/256:71,test,test,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/256,1,['test'],['test']
Testability,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1734:1587,test,test,1587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734,2,['test'],['test']
Testability,Rework the PR with clean history (see previous #1238); Fix #1166 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1241:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1241,2,['test'],['test']
Testability,"Right now for a tetrahedron: [P0, P1, P2, P3] (see picture below); The 4 triangles saved in the tetrahedron are:; - T0: [P1, P3, P2]; - T1: [P2, P3, P0]; - T2: [P3, P1, P0]; - T3: [P0, P1, P2]. This means the 4 triangles are clockwised oriented and thus their normals are going inside the tetrahedron. If there is a special reason for that I couldn't find it in the doc. . ![image](https://user-images.githubusercontent.com/21199245/50616906-cf072980-0eea-11e9-8bf0-72a4d2d584d7.png). As Gmsh nice ascii picture (from gmsh full doc) and the 2nd picture suggest. I changed to have counter-clockwise orientation so triangles on borders are by default well oriented to have normals going out. Then, T0 being the 2D plan [u,v], T1 sharing vector u and then T2 and T3 to close the tetrahedron; So new triangles are:; - T0: [P0, P2, P1]; - T1: [P0, P1, P3]; - T2: [P1, P2, P3]; - T3: [P0, P3, P2]. ![image](https://user-images.githubusercontent.com/21199245/50616994-4937ae00-0eeb-11e9-9aca-87385530a7ea.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/878:1255,test,test,1255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/878,2,['test'],['test']
Testability,"Right now in SOFA we have:; - TopologySubsetData: templated but working only with ```unsigned int``` to store a list of indices following the topology. For example the ```indices``` of a FixedConstraint.; - TopologySparseData: templated on any structure (like TopologyData) but on a smaller set. This Data works with a second vector of indices as a map between the Topology buffer and this Data. This PR merge both code inside TopologySubSetData. If the second vector is not set and the TopologySubSetData is templated on ; ```unsigned int``` it will work as before. ![image](https://user-images.githubusercontent.com/21199245/121327022-5d313680-c913-11eb-99b4-3d543893ae06.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2114:1219,test,test,1219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2114,2,['test'],['test']
Testability,"Right now, if you put a BoxROI in your scene to get the edges, triangles, etc. contained inside a box, the BoxROI will gets you every elements for which its center point is inside the box. An element partially inside the box can than be flagged as inside. This PR adds an option named ""strict"" to the BoxROI which will instead test that every nodes of the elements are contained inside the box. The option is false by default so that the current behavior remains unchanged. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1127:327,test,test,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1127,3,['test'],['test']
Testability,Roll back #1321 which should have been closed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1327:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1327,2,['test'],['test']
Testability,"SOFA with OpenGL adds a X11 dependency. If we compiled SOFA without OpenGL, this dependency was still there, which caused problem when compiling for a headless system (no X11 and no GL). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1370:438,test,test,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1370,2,['test'],['test']
Testability,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1954:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954,2,['test'],['test']
Testability,SOFA_WITH_DEPRECATED_COMPONENTS option was declared after it was supposed to be used in SofaFramework's own CMakeLists. Therefore CMake was throwing an error at the first step [here](https://github.com/sofa-framework/sofa/blob/d3aee470bc79a017e4f3e04b608c49d16d5874a6/SofaKernel/SofaFramework/CMakeLists.txt#L26). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1452:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1452,2,['test'],['test']
Testability,SPHParticleSink_obstacle.scn should be ignored. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1317:299,test,test,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1317,2,['test'],['test']
Testability,"STC10 Feedback: (https://annuel2.framapad.org/p/sofang-v6). SofaFramework will be re-designed like that:; ```; * Type (Vec, Mat, Quat, Frame, BaseMatrix, BaseVector, BoundingBox, Ray, ...) ( + leurs algos); * StdType (fixed_array, vector, map, etc); * Geometry (Triangle, Tetra...); * Topology; * Mesh; * Helper; * Config; * Messaging; * Logging; * Image; * BVH; * IO; * System; * Visual; * DefaultType (VecTypes, RigidTypes, ...); * Core; * Data (#1605 #1611 .... ); * TypeInfo (TypeInfo_Vec, TypeInfo_Quat, etc); * DataTypeInfo (DataTypeInfo_Vec, DataTypeInfo_Quat). * Simulation; * Testing (to isolate the dependency gtest); * OpenGL (to isolate the dependency opengl); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1521#issuecomment-734300737:338,Log,Logging,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1521#issuecomment-734300737,2,"['Log', 'Test']","['Logging', 'Testing']"
Testability,"STLExporter had a useless dependency on VisualModelImpl.; Removing it removes the need on SofaBaseVisual for SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2039:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039,2,['test'],['test']
Testability,"Same as PR #284 but without the unwanted merge commits. Small fix related to issue #114 . Have tested the compilation without the flag SOFA_INSTALL_RESOURCES_FILES (which is set by default), Sofa.ini and installedSofa.ini, which are necessary for build and install, are well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/291:95,test,tested,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/291,3,['test'],"['test', 'tested']"
Testability,"Scene checkers were located in the SofaGraphComponent (even if they were not components themselves....); So they needed to be moved out of it.; The first idea was to move them to Sofa.Simulation as they related to the simulation itself (or rather its initialization).; But scene checking could need dependencies on components themselves (in this case, it needs the contact manager from Sofa.Component.Collision.Response.Contact, and APIVersion from Sofa.Component.SceneUtility); So finally a library was created into ~~applications/plugins, even if it is not really a plugin in the sofa-way of thinking (aka a set of components)~~ Sofa/plugins because it is not in Component or framework, but it could be placed in Sofa/ directly (where GUI is as well). As usual, a compat layer has been added to warn devs of the move. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2960:1359,test,test,1359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2960,2,['test'],['test']
Testability,Scene crashing in GUI mode only: can't make a test that fails,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/79:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/79,1,['test'],['test']
Testability,"Scene test errors ""extension (py) not handled"" should be fixed now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103683768:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1103683768,1,['test'],['test']
Testability,Scene tests are failing on Windows,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1268477561:6,test,tests,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315#issuecomment-1268477561,1,['test'],['tests']
Testability,Scene tests are failing. Back to WIP,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1253645784:6,test,tests,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1253645784,1,['test'],['tests']
Testability,"SceneChecks were isolated in a project. But we may want that plugins add their own SceneCheck. An example with MultiThreading is provided here. The class `SceneCheck` is now available in Sofa.Simulation.Core. Tools to register a SceneCheck are also available in the module. The newly introduced SceneCheck checks if there are opportunities to use a multi-threaded component. It advices the user with a message looking like:. ```; [SUGGESTION] [SceneCheckMultithreading] This scene is using components implemented sequentially while a parallel implementation is available. Using the parallel implementation may improve the performances. Here is the list of sequen; tial components in your scene and their parallel equivalent:; BVHNarrowPhase -> ParallelBVHNarrowPhase; BruteForceBroadPhase -> ParallelBruteForceBroadPhase; HexahedronFEMForceField[Vec3d] -> ParallelHexahedronFEMForceField[Vec3d]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:1440,test,test,1440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,2,['test'],['test']
Testability,"Second and last task about https://github.com/sofa-framework/sofa/issues/2483. Contains #2531. Create a new plugin SofaNewmat with ; - newmat lib itself; - NewmatMatrix and NewmatVector (and their tests); - LULinearSolver (only compatible with NewmatMatrix); ; Add a ""compatibility"" layer (tricky because SofaNewmat is optional; Update ComponentChange; Remove newmat usage in image plugin. Fix #2483 . Change the template of CGLinearSolver in the BeamLinearForceField because I dont see why we would need to run it with newmat matrices. It results with a very slight difference on the DOF positions. [ci-depends-on https://github.com/sofa-framework/Regression/pull/21]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:197,test,tests,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,3,['test'],"['test', 'tests']"
Testability,See #1180 for details. Fixes #1180; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1182:287,test,test,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1182,2,['test'],['test']
Testability,See #1271 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272:263,test,test,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272,2,['test'],['test']
Testability,"See #2641 and especially https://github.com/sofa-framework/sofa/pull/2641#issuecomment-1036695510. @EulalieCoevoet could you try this branch to make sure it fixes the error ? Thanks !. (NOTE: I did not revert the PR itself as there are some welcoming cleanings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2699:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2699,2,['test'],['test']
Testability,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533:1027,test,test,1027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533,2,['test'],['test']
Testability,"See doc https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html. It gives 3 different presets similarly to what we are used to on the CI. The idea is the same (3 different config) but it cannot mimic it perfectly. For example, the CI checks if dependencies are available before setting a variable. It is not possible with presets. An example of CMakeUserPresets.json I use: https://gist.github.com/alxbilger/bee1135fbe222943906d0f595699c1a3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3305:989,test,test,989,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3305,2,['test'],['test']
Testability,"See https://github.com/sofa-framework/LMConstraint and https://github.com/sofa-framework/sofa/pull/2508. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2828:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2828,2,['test'],['test']
Testability,"See https://json.nlohmann.me/api/basic_json/error_handler_t/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,2,['test'],['test']
Testability,See issue #784 : Quadractic complexity in BarycentricMapping ; This PR depends on PR #797: Cleaning and refactoring of BarycentricMapping. In this PR the initialization of BarycentricMapping (for topology container only) is optimized using spatial hashing. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:510,test,test,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,2,['test'],['test']
Testability,"See issue: https://github.com/sofa-framework/sofa/issues/338; The Rayleigh parameters (Rayleigh mass and stiffness) are used for numerical dumping in the simulation. However, most integration schemes (OdeSolvers) in SOFA use NON-ZERO default values. This commit fixes this.; The user must be aware of its dumping parameters, now : ; - default rayleighMass=0.0; - default rayleighStiffness=0.0. To avoid breaking all scenes, this PR also updates (where needed) the rayleighMass and; rayleighStiffness parameter (set to 0.1 like previous default values). NOTE : a script is available for updating all your own scenes if needed (script/update-scenes-rayleighcoeff.sh). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/350:917,test,test,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/350,2,['test'],['test']
Testability,"See my comment in the remarks section of #487. > I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it... which is absolutely not the case. See PR #471; > Instead having a library which depends on gtest and SofaCore which ; > - factorize some initialisation methods when they are actually required in the test `SetUp()` method; > - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; > - Mapping ; > - linearisation, ; > - applyJ applyJT equivalence ; > - ForceField; > - linearisation; > - addDForce addKToMatrix equivalence ; > - addKToMatrix must give a SPD matrix (well actually in Sofa convention I think internal forcefields actually give a SND matrix but the idea remains... > Nothing of this testing API would require the initialisation of a simulation / node. At this stage to be honest I am not even 100% sure we even need a library for that, maybe free methods are enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338631019:247,test,test,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338631019,4,['test'],"['test', 'testing']"
Testability,"See the list of commit for a description of the changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4185:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4185,2,['test'],['test']
Testability,"See: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2382/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/2/artifact/parent_dir/build/scene-tests/archive/applications/plugins/MultiThreading/examples/ParallelHexahedronFEMForceField.scn/output.txt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2409:159,test,tests,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2409,1,['test'],['tests']
Testability,"See; - #4429. (+ add registration from missing components sceneutility and engine.transform). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5055:633,test,test,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5055,2,['test'],['test']
Testability,"See; - #4429. EDIT:; Based on ; - #4863 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4858:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4858,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/143]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/458]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/305]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4976:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4976,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/306]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5033:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5033,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/462]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5052:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5052,2,['test'],['test']
Testability,"See; - #4429. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/463]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5053:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5053,2,['test'],['test']
Testability,"See; - #4429. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4930:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4930,24,['test'],['test']
Testability,"See; - #4429. some works still need to be done in the future to avoid calling a singleton for the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5098:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5098,2,['test'],['test']
Testability,Seems that this causes 1 additional unit test failing: UnitTests.SofaHaptics_test/LCPForceFeedback_test.test_SimpleCollision,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2105#issuecomment-855702940:41,test,test,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105#issuecomment-855702940,1,['test'],['test']
Testability,"Set of fixes for warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2140:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2140,2,['test'],['test']
Testability,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1997:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997,2,['test'],['test']
Testability,Setting back to WIP after a quick review; 1. absolute and relative residual are inverted in the convergence checks; 2. Missing the divergence test when the residual is growing; 3. I will add unit tests for relative norms,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-828404081:142,test,test,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050#issuecomment-828404081,2,['test'],"['test', 'tests']"
Testability,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1826:114,test,test,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826,3,['test'],['test']
Testability,"Setup for the Sofa.Type module which will contain classes like Vec, Mat, etc.; Empty for now (just an init() ) and is set as a dependency for SofaHelper. (was before in #1553 but decided to split it). Issue #1521 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1555:454,test,test,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1555,2,['test'],['test']
Testability,Several changes and fix from my master branch:; - Fix: Duplicate declaration of Data in MechanicalObject; - Fix: the graph display of topologyData.; - Replace serr by msg_error and put some methods and parameter from private to protected in SofaMeshCollision classes; - Add: missing generic methods in MeshTopology; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/953:567,test,test,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/953,2,['test'],['test']
Testability,"Several changes from my working branch:; - **TopologicalMapping**: Add method checkTopology. Can be called from outside the component. Need to be overwritten by children. Implement only the tetra2TriangleTopologicalMapping version.; - **Quad2TriangleTopologycalMapping**, **Hexa2TetraTopologicalMapping**, **Hexa2QuadTopologicalMapping**: clean component init and model check in methods.; - **MeshTopology**: reorder methods declaration in header for clarity.; - **EdgeSetTopologyContainer**, **TriangleSetTopologyContainer**, **TetrahedronSetTopologyContainer**: Improve checkTopology methods in container.; - **Mat**, **MatSym**: Improve invertMatrix error logs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/999:659,log,logs,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/999,3,"['log', 'test']","['logs', 'test']"
Testability,Several changes in PluginManager:; - Add check to avoid registering the same plugin from different paths; - Change method getPlugin to look in the map of registered plugin using the plugin name instead of using a reconstructed path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:484,test,test,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,2,['test'],['test']
Testability,Several crashes possible in Tetra2TriangleTopologicalMapping when removing tetrahedron.; - When removing the last elements; - When using noInitialTriangles or noNewTriangles options. Will fix issue #954 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/960:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/960,2,['test'],['test']
Testability,"Several fixes:; - TriangleFEMForcefield : wrong init value for strainDisplacement; - TriangularFEMForceField: strainDisplacement not updated at each timestep and using rest Triangle area like in TriangleFEMForceField; - Enable the 2 tests which same value references for TriangleFEMForcefield and TriangularFEMForceField:; checkTriangularFEMForceField_init; checkTriangularFEMForceField_values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2275:233,test,tests,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2275,3,['test'],"['test', 'tests']"
Testability,"Several improvments regarding principal stress computation in `TriangularFEMForceFieldOptim`:; - Add Data `d_computePrincipalStress` to force the computation no matter if stress vector is displayed or not.; - Move the computation out from the draw loop, in addForce if `d_computePrincipalStress` or `d_showStressVector` is true; - Store principal stress info into the TriangleInfo structure so it can be accessed outside from the component; - Update drawing to use arrow with color orientation.; - Add Data `d_showStressThreshold` to display only vectors above a threshold. ![image](https://github.com/sofa-framework/sofa/assets/21199245/9da6ebe5-38b7-4e3a-a37c-7d25fc8724f4). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4027:1216,test,test,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4027,2,['test'],['test']
Testability,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:1063,test,test,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,2,['test'],['test']
Testability,Several tests are not passing yet due to error in the code to be fixed soon.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/708#issuecomment-403002854:8,test,tests,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/708#issuecomment-403002854,1,['test'],['tests']
Testability,Several warning types:; - uint/int conversion; - bad init order; - missing break; - unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873,2,['test'],['test']
Testability,SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation; 0x7fff28599000 - 0x7,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:30952,log,loginsupport,30952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['loginsupport']
Testability,"ShewchukPCGLinearSolver is not an ODE solver. Instead, the scenes examples/Components/linearsolver/FEMBAR-ShewchukPCGLinearSolver.scn and in the folder examples/Components/linearsolver/preconditioner shows how to use this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2726:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2726,2,['test'],['test']
Testability,Short fix in main CMakeList regarding compilation with other than Win; CPackNSIS preventing from compiling. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/867:359,test,test,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/867,2,['test'],['test']
Testability,"Should be fine now; I ran some tests, looks fine to me. MeshNewProximityIntersection is rarely used.; Regarding the TriangleModel the new options seems to add some 1% slow down on a test scene I made, but it's just an option. Ready for me, I wait for a second eye :eye:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559#issuecomment-724765422:31,test,tests,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559#issuecomment-724765422,2,['test'],"['test', 'tests']"
Testability,"Should fix #2486 (at least it was working for me :p ). The InteractionPerformerFactory was instantiated in SofaUserInteraction but not exported so I suppose other dlls using this factory was created their own InteractionPerformerFactory (creating discrepancies between the various registations) ; This is valid only for Windows (Mac/Linux is not using this import/export mechanism). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2495:922,test,test,922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2495,2,['test'],['test']
Testability,"Should fix a failing unit test: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3799/testReport/UnitTests/. The [dynamic_cast](https://github.com/sofa-framework/SofaPython3/blob/05195cd49b6db0dd028f1163ac407d459f6156f6/bindings/Modules/src/SofaPython3/SofaConstraintSolver/Binding_ConstraintSolver.cpp#L69) failed in:; ```cpp; py::cast(dynamic_cast<ConstraintSolverImpl*>(object));; ```. This is due to the lack of key function in the class ConstraintSolverImpl. See ; https://github.com/android/ndk/issues/533#issuecomment-335977747. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3240:26,test,test,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3240,4,['test'],"['test', 'testReport']"
Testability,Should fix crash and error on scenes:; - SimpleBox-Method2.scn; - testOmniDriverEmu.scn; - /scene-tests/archive/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.scn. Fix unit test:; - ReadState_test.test_loadFailure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/982:66,test,testOmniDriverEmu,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/982,5,['test'],"['test', 'testOmniDriverEmu', 'tests']"
Testability,"Should fix issue #3750. In this PR : ; - minor cleaning : set the default value to `d_indexFromRoot` in init(); - checks size of `m_fromRoot` wrt to `d_indexFromRoot`, if `d_indexFromRoot` is out of bounds, uses default value instead.; - typo? : I think there was a typo at line 534, for me it should be `xfromRoot[indexFromRoot]` instead of `xto[indexFromRoot]`. It makes more sense to me. Could be double checked. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751:955,test,test,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751,2,['test'],['test']
Testability,"Should fix out-of-tree errors like https://github.com/guparan/SofaPython3/runs/7896706218?check_suite_focus=true; To be backported asap. [ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/57]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3229:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3229,2,['test'],['test']
Testability,"Should fix your infinite build issue @alxbilger :eyes: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2310:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2310,2,['test'],['test']
Testability,Should not but I will check.; Yes in fact my fix in TetrahedronFEMFF reveals that the test was doing nothing: This the log on the master branch:; ```; [ RUN ] TetrahedronDiffusionFEMForceField_test/0.extension; [ERROR] [TetrahedronFEMForceField(fem)] object must have a mesh topology. The component is inactivated. To remove this error message please add a topology component to your scene. ```; Right now it crashes... will see if I understand enough the test to fix it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302012176:86,test,test,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302012176,3,"['log', 'test']","['log', 'test']"
Testability,"Should we add a regression or a test for `ParallelCGLinearSolver.scn` to check the MT and the non-MT version, if they get both the same result ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717174394:32,test,test,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717174394,1,['test'],['test']
Testability,"Showcase of a pure cpp application with direct usage of components.; Replace glut with sofalgfw (dependency).; Can be built out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2792:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2792,2,['test'],['test']
Testability,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1882:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882,2,['test'],['test']
Testability,Signed-off-by: duriez <christian.duriez@inria.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/844:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/844,2,['test'],['test']
Testability,Significant improvement.; Just removing msg coming in the console in release due to CTRL key pressed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1130:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1130,2,['test'],['test']
Testability,"Silence the -Wattribute warning because of its verbosity g++.; It was supposed to be in pr #1643 but it appears to have been lost somehow... so this PR add it again. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1657:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1657,2,['test'],['test']
Testability,"Similar code is factorized to be reused. Also, in `AnimationLoopParallelScheduler`, I replaced the use of the class `StepTask` by a lambda function. Since it is no longer used, I deprecated the `StepTask` class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607:751,test,test,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607,2,['test'],['test']
Testability,"Similar feature is merged for the ConstantForceField in [#3924](https://github.com/sofa-framework/sofa/pull/3924). It adds separate callbacks for each data but a hacky flag allows to avoid data cross-dependency by de-activating all inputs non-set at the initialization. It could be done here as well but a more robust implementation (Data, callback) could be found. Add a unit test to make sure that no data cross-dependency is triggered. Manual test as well.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815:377,test,test,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3927#issuecomment-2034213815,4,['test'],['test']
Testability,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2208:35,benchmark,benchmark,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Similar to #2322, but in the profiler. Buttons collapse or expand the displayed tree of timers.; ![image](https://user-images.githubusercontent.com/10572752/134161374-9985c29b-d864-4900-a9ac-a5e27a59c964.png). Note that those two buttons add extra space on top of the tree widget, but not so much because there was already an empty spacer here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2351:884,test,test,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2351,2,['test'],['test']
Testability,"Similar to TetrahedronFEMForceField, compute von mises per element and add option to draw it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4945:633,test,test,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4945,2,['test'],['test']
Testability,"Similar to https://github.com/sofa-framework/sofa/pull/3650; To make it compatible with Cuda 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3868:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868,2,['test'],['test']
Testability,"Similar to https://github.com/sofa-framework/sofa/pull/4720. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4721:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4721,2,['test'],['test']
Testability,"Similar to work done for triangles. Add tests on:; - Component creation; - Component init without topology; - Component init with empty topology; - checkDefaultAttributes; - check Wrong Attributes; - Check values at init; - Check values during simulation; - Check vertex position at init and after some steps. **Not all tests are activated** for `TetrahedronFEMForceField`, `CorotationalTetrahedralForceField `and `FastTetrahedralCorotationalForceField` because some are failing for now. . This PR doesn't change the behavior of the FEM, this will be done in next PR. ; This PR add tests to ensure the current behavior won't be broken in the incoming work. . ----- . Logs at this stage for 1000 steps of an horizontal fixed beam (resolution: 8x26x8). ; Average values of 6 executions of 4 successive simulations. | **ForceField** | **timeMin** | **timeMax** | **timeMean** |; | ------------- | ------------- | ------------- | ------------- |; | `TetrahedronFEMForceField` | 8.402152 | 8.643823 | 8.491758 |; | `TetrahedralCorotationalFEMForceField` | 13.79633 | 14.15237 | 13.96938 |; | `FastTetrahedralCorotationalForceField` | 5.71298 | 5.8269 | 5.772838 |. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2842:40,test,tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2842,6,"['Log', 'test']","['Logs', 'test', 'tests']"
Testability,"Similarly to SparseLDLSolver own exporter, it is now possible to set the arithmetic precision of the matrix export. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2724:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2724,2,['test'],['test']
Testability,"Similarly to Vec implementation, add a NoInit constructor for Quat and a type QuatNoInit<Real>. Speedup is minor compare to Mat and Vec of big size but still it makes a small diff when working with several Quat in loops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3217:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3217,2,['test'],['test']
Testability,"Simple PR to clean up DeformableOnRigidFrameMapping, during DEFROST team coding friday. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/848:339,test,test,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/848,2,['test'],['test']
Testability,"Simple add to make sure the return value corresponds to the package found (qt5 or 6). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2346:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2346,2,['test'],['test']
Testability,"Simple as is the title, namely:. - MeshTopology instead of Mesh; - PointCollisionModel instead of: Point, TPointModel, PointModel, PointMesh, PointSet; - LineCollisionModel instead of: Line, TLineModel, LineMeshModel, LineSetModel, LineMesh, LineSet, LineModel; - TriangleCollisionModel instead of: Triangle, TriangleSet, TriangleMesh, TriangleSetModel, TriangleMeshModel, TriangleModel, TTriangleModel; - SphereCollisionModel instead of: Sphere, SphereModel, TSphereModel; - CapsuleCollisionModel instead of: Capsule, CapsuleModel, TCapsuleModel; - CubeCollisionModel instead of: Cube, CubeModel; - CylinderCollisionModel instead of: Cylinder, CylinderModel; - RayCollisionModel instead of: Ray, RayModel; - TetrahedronCollisionModel instead of: Tetrahedron, TetrahedronModel; - EulerExplicitSolver instead of: Euler, EulerExplicit, ExplicitEuler, EulerSolver, ExplicitEulerSolver; - CGLinearSolver instead of CGSolver, ConjugateGradient; - SparseGridTopology instead of SparseGrid; - SVDLinearSolver instead of SVD, SVDSolver; - FreeMotionAnimationLoop instead of ; - DampVelocitySolver instead of DampVelocity. just you @epernod . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1292:1385,test,test,1385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1292,2,['test'],['test']
Testability,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903,2,['test'],['test']
Testability,Simple cleaning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856:268,test,test,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856,2,['test'],['test']
Testability,"Simple fixes and improvements while wandering in SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2667:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2667,2,['test'],['test']
Testability,"Simple for a summer restart !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2294:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2294,2,['test'],['test']
Testability,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1778:569,test,test,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778,2,['test'],['test']
Testability,"Simple, fast-merge :sunglasses: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1484:285,test,test,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1484,2,['test'],['test']
Testability,"SimpleApi feature is not really related to Simulation.Graph (even if it has a dependency on it); So it was decided to make its own module for it, aka **Sofa.SimpleApi**. Actually it was already using the sofa::simpleapi namespace so this move is making the code more consistent. There is a compatibility layer but if the user was relying only on Simulation,Graph (instead of Sofa.Testing for example) to use SimpleApi, it will break. But the user will be informed on how to fix the break nevertheless. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/397]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4495:380,Test,Testing,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4495,3,"['Test', 'test']","['Testing', 'test']"
Testability,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2148:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148,2,['test'],['test']
Testability,"Simply change the keyboard shortcut associated to camera mode: M key instead of Space key, because the latter is already used to interact with the GUI buttons.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/997:412,test,test,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/997,2,['test'],['test']
Testability,Simply remove a useless if block. Related to : https://github.com/sofa-framework/sofa/issues/535; Fixes #535 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/590:362,test,test,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/590,2,['test'],['test']
Testability,"Simply remove all lines in scenes (scn) including a DefaultCollisionGroupManager. `$ find . -type f -name ""*.scn"" -exec sed -i '/DefaultCollisionGroupManager/d' {} +`. [ci-depends-on https://github.com/sofa-framework/Regression/pull/30]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3104:777,test,test,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3104,2,['test'],['test']
Testability,"SimulationCore.so(sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool)+0x111) [0x7f6588281511]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double)+0x124) [0x7f6588263ed4]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::Simulation::animate(sofa::simulation::Node*, double)+0x54) [0x7f65882c9c44]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(sofa::Python_scene_test::run(sofa::Python_test_data const&)+0x2e1) [0x7f658ebb3791]; -> ../builds/pr/all/bin/Compliant_test(sofa::Python_scene_test_sofa_python_scene_tests_Test::TestBody()+0x2e) [0x54f76e]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*)+0x33) [0x7f658ebd7223]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::Test::Run()+0xb7) [0x7f658ebca917]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestInfo::Run()+0x9e) [0x7f658ebca9be]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestCase::Run()+0xa5) [0x7f658ebcaac5]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::internal::UnitTestImpl::RunAllTests()+0x248) [0x7f658ebcd198]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::UnitTest::Run()+0x54) [0x7f658ebcd454]; -> ../builds/pr/all/bin/Compliant_test(main+0xd4) [0x4aeb84]; -> /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7f6585034f45]; -> ../builds/pr/all/bin/Compliant_test() [0x4aec6f]; bash: line 1: 11528 Terminated ../builds/pr/a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:6966,test,testing,6966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,7,"['Test', 'test']","['Test', 'testing']"
Testability,Since #638 the PR breaks some #ifdef.; Here is fix for the #inclusion problem and a pattern to avoid this kind of problem to be repeated. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/672:391,test,test,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/672,2,['test'],['test']
Testability,"Since BoxROI supports 2D and 1D data types, it can lead to undefined behavior, due to out-of-range access.; This PR fixes them.; Oriented bounding box are not supported in 2D and 1D. A future PR could add the support in 2D. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2604:763,test,test,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2604,2,['test'],['test']
Testability,"Since C++11, it is possible to declare a variable with one copy per thread with the keyword `thread_local`. The consequence is that the code in `thread_specific_ptr.h` could be deprecated as it is not used anywhere else (not in this PR). Bonus: remove a memory leak. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422:806,test,test,806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422,2,['test'],['test']
Testability,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323:352,Benchmark,Benchmark,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Since SOFA is no modeler, remove the New option form the GUI as pointed out in #4520; However, the code in RealGUI.cpp remains. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4523:667,test,test,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523,2,['test'],['test']
Testability,"Since SofaNG, cmake was again slow to configure (especially on Windows); After investigation, the previous sofa_find_package() was nulliified in #3120 , and I dont really see why. And the associated commit message is not informative https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054. Bringing it back bring the config time from ~18s to 4.5s on Windows/MSVC generator on a minimal preset (all framework + comonents+ GL + GUI); (Manjaro/ninja generator go from 4 to 2.5s); So it is quite nice all in all 🥸. Trace: (orange part is time for `find_package()`); Before: ![cmake1](https://user-images.githubusercontent.com/11028016/195506545-32c3d4db-b6b2-4500-a3fb-dce59da50c53.png); After: ![cmake2](https://user-images.githubusercontent.com/11028016/195506607-e6ede1f9-c5fd-497d-bd4f-dd4832da918a.png). Install procedure should not be impacted, as the cmake.in files are not touched. \+ this PR fixes some missing sofa_find_package() here and there. Lets see if the CI confirms if https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054 was only a mistake; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:1682,test,test,1682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,2,['test'],['test']
Testability,"Since a few updates of MSVC2019, it is not possible anymore to have at the same time a directory and a target with the same name and in the same level. ; For example, SofaBase (containing all the SofaBase targets) and SofaBase (the target). MSVC complains that it cannot create the SofaBase target and thus, it is not possible de compile it... which is a bit bothersome 🤔. So this PR moves (in an IDE-way) the target into their respective directory (SofaBase in the SofaBase directory, SofaSimulation/SofaFramework/SofaGui same). And it makes more sense to set it like that anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2239:1121,test,test,1121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2239,2,['test'],['test']
Testability,"Since beams simulation is an important feature of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4253:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4253,2,['test'],['test']
Testability,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a `dynamic_cast`.; In TriangularFEMForceFieldOptim, a mechanism were used in order to hide this cast. It used `BlocMatrixWriter`.; Since this optimization is no longer required, TriangularFEMForceFieldOptim now writes its `addKToMatrix` using the traditional way. It is supported by a [benchmark](https://github.com/alxbilger/SofaBenchmark/pull/21):. Before:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ----------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 190 ms 188 ms 4 FPS=170.667/s MBKBuild=561.555u MBKSolve=5.21104m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/64 368 ms 367 ms 2 FPS=174.298/s MBKBuild=526.034u MBKSolve=5.06889m frame=5.7373ms; BM_TriangularFEMForceFieldOptim/128 715 ms 719 ms 1 FPS=178.087/s MBKBuild=509.678u MBKSolve=4.93597m frame=5.61523ms; BM_TriangularFEMForceFieldOptim/256 1259 ms 1266 ms 1 FPS=202.272/s MBKBuild=500.564u MBKSolve=4.28127m frame=4.94385ms; ```; After. ```. ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ----------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 196 ms 195 ms 4 FPS=163.84/s MBKBuild=590.4u MBKSolve=5.34807m frame=6.10352ms; BM_TriangularFEMForceFieldOptim/64 377 ms 375 ms 2 FPS=170.667/s MBKBuild=529.309u MBKSolve=5.19836m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/128 720 ms 703 ms 1 FPS=182.044/s MBKBuild=497.814u MBKSolve=4.9813m frame=5.49316ms; BM_TriangularFEMForceFieldOptim/256 1270 ms 1266 ms 1 FPS=202.272/s MBKBuild=502.338u MBKSolve=4.3129m frame=4.94385ms; ```. _____________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2861:455,benchmark,benchmark,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2861,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a `dynamic_cast`.; This PR removes it for `StandardTetrahedralFEMForceField`. It is supported by a [benchmark](https://github.com/alxbilger/SofaBenchmark/blob/main/SofaBenchmarkScenes/src/SofaBenchmarkScenes/fem/StandardTetrahedralFEMForceField.cpp):. Before:. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 333 ms 328 ms 2 FPS=97.5238/s MBKBuild=379.033u MBKSolve=6.66173m frame=0.0102539s; BM_StandardTetrahedralFEMForceField/64 664 ms 672 ms 1 FPS=95.2558/s MBKBuild=354.073u MBKSolve=6.62915m frame=0.010498s; BM_StandardTetrahedralFEMForceField/128 1319 ms 1328 ms 1 FPS=96.3765/s MBKBuild=347.671u MBKSolve=6.58216m frame=0.010376s; BM_StandardTetrahedralFEMForceField/256 2583 ms 2578 ms 1 FPS=99.297/s MBKBuild=330.558u MBKSolve=6.43889m frame=0.0100708s; ```. After. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 321 ms 320 ms 2 FPS=99.9024/s MBKBuild=379.211u MBKSolve=6.43458m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/64 637 ms 641 ms 1 FPS=99.9024/s MBKBuild=361.311u MBKSolve=6.34991m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/128 1287 ms 1281 ms 1 FPS=99.9024/s MBKBuild=349.305u MBKSolve=6.4886m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/256 2548 ms 2547 ms 1 FPS=100.515/s MBKBuild=347.56u MBKSolve=6.35484m frame=9.94873ms; ```. ______________________________________________________. By s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2858:269,benchmark,benchmark,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2858,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a dynamic_cast.; This PR removes it for TorsionForceField. Note that there is no example for this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2859:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2859,2,['test'],['test']
Testability,"Since it has no significant added computational costs, I suggest to activate the export of lambda forces by default, i.e. set the `computeConstraintForces` data to true by default. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3857:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3857,2,['test'],['test']
Testability,"Since it is now possible to export a system matrix from any solver, the matrix export included in SparseLDLSolver is no longer required. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2725:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2725,2,['test'],['test']
Testability,"Since it's annoying every single user and developer!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3153:593,test,test,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3153,2,['test'],['test']
Testability,"Since state accessors work closely with a mstate, it seems logical that they inherit the same bbox.; Note that the mstate must be visited before the accessor in `UpdateBoundingBoxVisitor`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2780:59,log,logical,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2780,3,"['log', 'test']","['logical', 'test']"
Testability,"Since the big refactoring from Sofa NG (https://github.com/sofa-framework/sofa/wiki/SOFA-NG:-documentation-on-transition), unit tests fail when the compatibility layer is not compiled, because they rely on the old modules. An example of failure:. ```; Sofa\Component\IO\Mesh\tests\STLExporter_test.cpp(79): error: Failed; A message of type 'Error' was not expected but it was received. ; ====================== Messages =======================; [RequiredPlugin]: ; Message type : Error; Message content: Plugin not found: ""SofaLoader""; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3389:128,test,tests,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3389,2,['test'],['tests']
Testability,"Since the changes are compiled only in debug mode, it is not required to run all the tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3432#issuecomment-1293174113:85,test,tests,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3432#issuecomment-1293174113,1,['test'],['tests']
Testability,"Since the components are explicit formulations, they don't contribute into an implicit scheme.; A task from #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4000:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4000,2,['test'],['test']
Testability,"Since there is new scene, I force the execution on the CI to be sure.; [ci-build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3508#issuecomment-1332431242:93,test,tests,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3508#issuecomment-1332431242,1,['test'],['tests']
Testability,"Since users often copy paste examples, let's show good scene habits: when modeling volumetric, the MeshMatrixMass should be used instead. I guess this will trigger the regression tests (but I need to recompile regression first, so I give the CI a chance :) ). [ci-depends-on https://github.com/sofa-framework/Regression/pull/64]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4687:179,test,tests,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4687,3,['test'],"['test', 'tests']"
Testability,"Small (and first) Pullrequest to add several methods in plugin SceneCreator:. - to add basic 3D object: Cube, Cylinder, Plane. In rigid or deformable.; - also add an executable sceneCreatorExamples to run simple examples using those methods.; - Minor changes in TriangularFEM and CylindricalGrid to use those components. This PR: ; - [x] succeed on each compilation setup on the CI; - [x] does not generates new warnings or test failure; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] clean stuff; - [x] is now 1 week old and no one send a 'no go' comment. ; - [x] have tests on the introduced features.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133:424,test,test,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133,2,['test'],"['test', 'tests']"
Testability,"Small PR on GridTopology and RegularGridTopology link to issue: #163. - Allow to set RegularGridTopology in 1,2 or 3 dimension. But still check if the grid resolution is valid.; - Fix example of Tetrahedron FEM that was crashing if no tetrahedron is found in the scene.; - Add an example scene.; - Remove RegularGridTopology dependencies from MechanicalObject. CHANGELOG:; - GridTopology ; - clean the code & factor the constructor; - implement ""flat"" grids in 1 or 2 dimension by using setting grid resolution to ""1"" in the corresponding axis; - RegularGridTopology clean the constructor's code & remove NDEBUG code. ; - Adds RegularGridTopology_test; - TetrahedronFEMForceField clean code; - MechanicalObject removes code that was specific to the grid. ; - Adds new examples scenes called: ; examples/Components/topology/Hexa2TetraTopologicalMapping.scn; examples/Components/topology/RegularGridTopology_dimension.scn; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270:1146,test,test,1146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270,1,['test'],['test']
Testability,Small PR on the pickHandler class.; ADD: several tests on pointers != null before accessing them. ; ADD: default ray length parameter in the constructor.; UPDATE: replace most of the .h include in the header by forward classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/522:49,test,tests,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/522,3,['test'],"['test', 'tests']"
Testability,"Small PR to : ; - ~~remove useless header~~ (and then remove one dependency on SofaBaseTopology) (see discussion #242 ) (actually instead of removing, I used an existing #ifdef macro); - add forgotten Windows macro to export specialized functions into DLLs. This should not break any API compatibility or compilation (hopefully). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/249:555,test,test,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/249,1,['test'],['test']
Testability,Small PR to :. 1. Add more tests and error messages if **ArticulatedSystemMapping** init or bwdinit failed. ; 2. Check if **articulatedCenter** has been found in **ArticulatedHieararchyContainer**.; 3. Fix warning when drawing JointSpringFF lines and Update the warning message to be more understandable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1448:27,test,tests,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1448,3,['test'],"['test', 'tests']"
Testability,"Small PR to allow compilation of SofaCUDA plugin with SOFA_NO_OPENGL flag (i.e disabling OpenGL); Remarks:; - The components' draw() functions in SofaCUDA should share their code with their ""normal"" version.; For example, CudaUniformMass with cudarigid3f should call the draw() of UniformMass<Rigid3>; Some work has to be done further in Sofa itself, that's why I just add preprocessor tests (#ifdef SOFA_NO_OPENGL) and did not use the drawtool functions 👅 ; - Obviously, if you compile without OpenGL, you wont be able to share OpenGL buffer in CUDA. In other words it is useless to use CudaVisualModel without SOFA_NO_OPENGL.; (Actually CudaVisualModel should be renamed CudaOglModel). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1242:386,test,tests,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1242,3,['test'],"['test', 'tests']"
Testability,Small PR to fix SofaPhysicsAPI compilation broken due to changes done in sofa main API on:. - helper::io::Image; - GUIManager::RegisterGUI. Maybe this project should be added to one of the vm of the dashboard?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/549:462,test,test,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/549,2,['test'],['test']
Testability,Small PR to fix two unneeded dependencies :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/588:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/588,2,['test'],['test']
Testability,"Small batch from Sofa-NG:; - FixedConstraint ; - remove useless dep on SparseMatrix (thus on SofaBaseLinearSolver); - remove other useless includes; - ContactIdentifier ; - use C++17 static inline initialization (solve export symbol problem); - move ctor/dtor definition into the cpp . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2255:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255,2,['test'],['test']
Testability,Small changes found in my dev branch:; 1. clean various type mismatch warnings in **SofaBaseVisual** classes; 2. Clean some unnecessary/deprectated header includes in **SofaDeformable** classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449:446,test,test,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449,2,['test'],['test']
Testability,Small changes to prepare to compile with stdc++17.; * weird problem with byte keyword (introduced with std::byte); * removal of binary_function in c++17 (already deprecated in c++11 actually). Final compatibility with c++17 will need the merge of #1101 (problem with Eigen) and a small change with CMake (CMAKE_CXX_STANDARD 17); waiting for the CI to be fully compatible. EDIT: had to update googletest as well because of new STL's things.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1162:692,test,test,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1162,2,['test'],['test']
Testability,"Small cleaning, replacing sout and serr by msg_info, dmsg_info or msg_error. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1234:328,test,test,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1234,2,['test'],['test']
Testability,"Small cleanings for the BeamFEMForceField :; - Use read and write accessors; - Make the data `youngModulus`, `radius` and `radiusInner` required to explicit the fact that BFFF only focuses on circular sections. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3887:750,test,test,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3887,2,['test'],['test']
Testability,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2020:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020,2,['test'],['test']
Testability,"Small fix related to issue #114 . Have tested the compilation without the flag `SOFA_INSTALL_RESOURCES_FILES` (which is set by default), Sofa.ini which is necessary is well created. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/284:39,test,tested,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/284,3,['test'],"['test', 'tested']"
Testability,Small fix to allocate memory on cuda_device much faster for large vectors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1142:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1142,2,['test'],['test']
Testability,"Small fix, after a discussion we had Christian, Hugo, Erik and I on haptic rendering. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1537:337,test,test,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1537,2,['test'],['test']
Testability,"Small fix, correcting the check for the multiplicity between ""time"" and dt, as well as putting period to dt by default if nothing is given by the user.; Set back to the default behavior : periodic export activated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/776:466,test,test,466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/776,2,['test'],['test']
Testability,Small improvement on the view of html file associated with scenes. We can now navigate (with backward) between and starting Sofa scene directly with hyperlinks. The windows can also be hidden/displayed and its location preserved. . I cannot prevent myself to also clean small things in RealGUI and SetDirectory/FileSystem. ; But this is very minor. . I made a quick & dirty video to show the results so that you don't need to compile it: ; https://youtu.be/5uumC9f-wzo. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540,2,['test'],['test']
Testability,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2273:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273,4,"['log', 'test']","['logs', 'test', 'tests']"
Testability,Small patch to restore ambient component in fake sphere rendering. Was:; ![manyspheres_00000002](https://cloud.githubusercontent.com/assets/11028016/23556748/ef984e7c-002d-11e7-9346-c7208b12f44d.png). Now:; ![manyspheres_00000001](https://cloud.githubusercontent.com/assets/11028016/23556756/f77050b8-002d-11e7-948d-5605c6cd2825.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/192:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/192,1,['test'],['test']
Testability,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1920:668,test,test,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920,2,['test'],['test']
Testability,"Small update: seems like the recursive thing is not even the source of the problem. The following object is enough to cause the issue:. ```c++; class TestComponent : public BaseObject {; public:; SOFA_CLASS(TestComponent, BaseObject);; using DataTypes = sofa::defaulttype::Vec3Types;; using VecCoord = DataTypes::VecCoord;; TestComponent() : d_position(initData(&d_position, ""position"", ""Position vector"")){}. void init() override {; Inherit1::init();; ReadAccessor<Data<VecCoord>> a(d_position);; }; private:; Data<VecCoord> d_position;; };; ```; with ; ```python; root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1059834227:150,Test,TestComponent,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1059834227,4,['Test'],['TestComponent']
Testability,"Snap, CImg errors on Windows are fixed :tada: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/622:299,test,test,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/622,2,['test'],['test']
Testability,"So I finally used the following name; Valid cases; ```xml; <Import fromPlugin=""SofaOpenglVisual"" component=""OglModel""/>; <Import fromPlugin=""SofaOpenglVisual"" component=""OglModel"" as=""MyVisualModel""/>; <Import fromPlugin=""SofaOpenglVisual"" components=""OglModel,OglShader""/>; <Import fromPlugin=""SofaOpenglVisual"" components=""OglModel, OglShader""/>; <Import fromPlugin=""SofaOpenglVisual"" components=""*""/>; ```. Invalid cases; ``` ; <Import fromPlugin=""SofaOpenglVisual""/> ; <Import fromPlugin=""SofaOpenglVisual"" component=""OglModel"" components=""OglShader""/>; <Import fromPlugin=""SofaOpenglVisual"" components=""OglModel"" as=""VisualModel""/>; <Import fromPlugin=""SofaOpenglVisual"" components=""OglModel, OglShader"" as=""Invalid1, Invalid2""/> // Maybe this one ?; <Import fromPlugin=""SofaOpenglVisual"" components=""*"" as=""Test""/>; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-989048657:813,Test,Test,813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-989048657,1,['Test'],['Test']
Testability,"So I have tested the branch fjourdes:insimo_freemotion_integration with our plugins. Our tests and examples ran fine.; I have read the very well detailed changelog (thanks for that) and from what I know it looks fine. I didn't review the files changes, because there is too much to look at... but I would agree to merge.; Again, I'm really sorry for the late answer.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-362789780:10,test,tested,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-362789780,2,['test'],"['tested', 'tests']"
Testability,"So I think I found a clean way to run the SceneChecks by using SceneLoader::Listener.; SceneChecks are now run on every GUI (batch, classic) and every SceneLoader (XML, Python).; They are also triggered in unit tests that use loadFromMemory but that is maybe too much... What do you guys think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465596135:211,test,tests,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465596135,1,['test'],['tests']
Testability,"So I've made a benchmark on my side too, it is a rectangular beam falling on a cube. Little specs : . ![ezgif com-video-to-gif](https://github.com/sofa-framework/sofa/assets/30337881/d7a812f8-5127-4e3b-b177-ee9bee793516). Beam : ; - 625 points; - 2304 tetra. Constraints : ; - 276 constraints; - 200 CG iteration; ; -----; Synchronous inverse product; - BuildSystem step took a mean of 66.25 ms (75% of the time step); - Simulation fps : ~ 11 FPS. ----; Asynchronous inverse product; - BuildSystem step took a mean of 49.81 ms (69% of the time step); - Simulation fps : ~ 14 FPS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632643547:15,benchmark,benchmark,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632643547,1,['benchmark'],['benchmark']
Testability,So apparently SceneLoaderPY (Python scene loader) needs to call notifyLoadingScene at a specific moment because using my new `doLoad` delegate messes with the unit test SofaPython_test/python/moduleReload.py. @damienmarchal Could you tell me if you see a fix to that?. We still can stick to the old `load` override and ignore `doLoad` in SceneLoaderPY.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465612130:164,test,test,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465612130,1,['test'],['test']
Testability,"So far, we used the ""Interactions"" DisplayFlag in the GUI (actually named as ""InteractionForceFields"" in the list:; 1. it's confusing; 2. this name is :question: $ :exclamation: :boom: :bird: . Here is a new suggestion: :white_flower: ""ContactInteractions"" :white_flower: ; Obviously, compat and generalization in the code will be done if we agree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3977:888,test,test,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3977,2,['test'],['test']
Testability,So let Guillaume finish...; But is the autodump stuff useful or not ?; If Backtrace is not installed by default how a failing test will print anything ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191#issuecomment-284087037:126,test,test,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191#issuecomment-284087037,1,['test'],['test']
Testability,So now the linkage of metis is PRIVATE in `Sofa.Component.LinearSolver.Direct` and every other target requiring metis finds the package itself (e.g. SofaMatrix) . One problem is that FetchContent_MakeAvailable make the target available for the current target and its child (that is why the test in `Sofa.Component.LinearSolver.Direct` is able to link to metis without the need of finding it) but other unrelated targets cannot find it. So we cannot keep it Public because it will not be found by the other target linking to `Sofa.Component.LinearSolver.Direct` because a lot of them doesn't require metis,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1956756623:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450#issuecomment-1956756623,1,['test'],['test']
Testability,So now the object is fully valid if the transformation's data are updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1459:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1459,2,['test'],['test']
Testability,"So there is no ""no-go"" from any one. So I rebuild from recent master with testing the scene...and then...merge. ; [build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484#issuecomment-339979817:74,test,testing,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484#issuecomment-339979817,2,['test'],"['testing', 'tests']"
Testability,So this PR is merged...but the CI configuration needs to be updated to rename PLUGIN_XXX into MODULE_XXX this is the cause of the failing test on the CI.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732#issuecomment-410245860:138,test,test,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732#issuecomment-410245860,1,['test'],['test']
Testability,"So to test this scene, we have to change the LDL solver for a CG? Also, the mesh file is not provided",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051#issuecomment-1641655025:6,test,test,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051#issuecomment-1641655025,1,['test'],['test']
Testability,"So we can validate how the ObjectFactory should behave. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2696:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2696,2,['test'],['test']
Testability,Sofa is a drama in term of #include coupling which make:; - compilation time to be larger than what it should; - cost a lot in term of code maintenance. . In the future we should try to progressively improve the situation. ; This PR is a minor step toward this target. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/419:522,test,test,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/419,2,['test'],['test']
Testability,"Sofa's default CMake settings activates SofaTest, which depends on PLUGIN_SOFAPYTHON, which is not activated by default. This result in an unsuccessful generation of the project. Either SofaPython should be a default SOFA dependency, or Sofa tests using SofaPython should be separated and only activated when SofaPython plugin is too. @bcarrez @matthieu-nesme might be interested; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/239:242,test,tests,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/239,1,['test'],['tests']
Testability,"Sofa.Gui is needed for mouse interactors and was implicitly linked through Sofa.GUI.Qt . Add it by default so SofaCUDA can be compiled even if Qt is not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4312:698,test,test,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312,2,['test'],['test']
Testability,"SofaCUDA declaration is moved out of the condition on Sofa.GL.; It is moved after VolumetricRendering, because SofaCUDA has a dependency to VolumetricRendering. Therefore, VolumetricRendering must be declared first. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3514:755,test,test,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514,2,['test'],['test']
Testability,"SofaComponentAll is not deprecated but is using deprecated things.; So it is little bit confusing (especially for newcomers); This change gets all the declared modules (thanks to sofa_add_module()) ; instead of SofaCommon/SofaMisc/SofaGeneral. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1696:783,test,test,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1696,2,['test'],['test']
Testability,"SofaConstraint links with SofaImplicitOdeSolver, which links with Sofa.Component.ODESolver.Backward, which links with SofaSimulationCore. Isn't the dependencies transferred in this case?. I launch a full build, just in case.; [ci-build][force-full-build][with-all-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2640#issuecomment-1031474078:264,test,tests,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2640#issuecomment-1031474078,1,['test'],['tests']
Testability,SofaExporter was a linked to SofaPython & SofaGuiQt under the PUBLIC scope while that dependency is internal & should not be exposed publicly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/963:394,test,test,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/963,2,['test'],['test']
Testability,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2000:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000,9,"['Test', 'test']","['Testing', 'test', 'testing', 'tests']"
Testability,"SofaGLFW was throwing me error when saving a camera view while effectively writting the file....; It appeared that SaveFile return XML_SUCCESS (underlying value of 0) when successful.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4884:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4884,2,['test'],['test']
Testability,"SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. Thanks!; What I'm doing wrong?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3472,log,log,3472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,2,['log'],['log']
Testability,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,2,['test'],['test']
Testability,"SofaPython could not compile without having SofaExporter.; To solve that, bindings included in SofaPython are moved into SofaExporter. Bindings should be included into their respective modules/plugins anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1095:460,test,test,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1095,2,['test'],['test']
Testability,"SofaPython is now disabled on CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2526:573,test,test,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2526,2,['test'],['test']
Testability,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1875:54,test,test,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875,3,['test'],['test']
Testability,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1988:83,test,test,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988,4,['test'],"['test', 'tests']"
Testability,"SofaSphFluid was computing normals using an experimental parallel loop (brought by std::execution); Requires external Intel' s TBB library and does not really bring an significant speed-up.; So it is better to remove it to remove conditional code (as it was not compiled for Apple as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1684:830,test,test,830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1684,2,['test'],['test']
Testability,SofaTest<> unrelevant tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1935:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935,1,['test'],['tests']
Testability,"SofaValidation seems to be a true plugin and not a collection.; This PR does not move it from the `collection` folder. Question:; - Should the module decide by itself what type of module (plugin, collection etc) it is?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3296:759,test,test,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3296,2,['test'],['test']
Testability,"SoftRobots uses SceneCreator for its tests, but as it is built as an out-of-tree project on our CI, libSceneCreator.so can't be found. until this PR is merged at least... . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1109:37,test,tests,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1109,3,['test'],"['test', 'tests']"
Testability,Solutions could be:; - Clean all scenes in SOFA: remove all RequiredPlugin and use either Sofa.Components or (RATHER) finer lever (e.g. Sofa.Component.LinearSolver); - Test option “noautoload” on the CI to check the scenes. would you rather use :rocket: `Sofa.Components` or :tada: `Sofa.Component.LinearSolver` ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2818#issuecomment-1082783108:168,Test,Test,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2818#issuecomment-1082783108,1,['Test'],['Test']
Testability,"Solve #1331 . For multi configuration projects (e.g Visual Studio), the macro was not checking if the directory was existing, and was copying the lib as the configuration name (which is obviously wrong 🐇 ); The fix creates the directory before copying (no need to check as CMake does not do anything if it already exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,2,['test'],['test']
Testability,Solves issue #84 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/282:270,test,test,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/282,2,['test'],['test']
Testability,"Some advanced timer steps also pass the node as an ""obj"" data to the timer's record. This allows one to differentiate a timer call from another one in another node. I guess one picture is worth a lot or words here:. <img width=""675"" alt=""advanced_timer_graph"" src=""https://user-images.githubusercontent.com/6951981/74366929-3e7b6800-4dd1-11ea-82de-c4631ee7e857.png"">. This PR adds these obj ids to the timer labels. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1256:667,test,test,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1256,2,['test'],['test']
Testability,"Some benchmarks done:; (setup: whole SOFA compiled either float or double, and the scene is just an OglModel drawting the dragon from the stanford database http://graphics.stanford.edu/data/3Dscanrep/ , which has 500K vertices and 1M triangles); - SOFA with double: 105 fps; - SOFA with float: 110 fps; ; (on Windows); the small difference is within the error margin (and in a real simulation the rendering itself is negligible). <img src=""https://user-images.githubusercontent.com/11028016/166214524-85d8ae4d-0ccd-43a3-8a55-9437b12dc36e.PNG"" width=""200"" />",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1113123372:5,benchmark,benchmarks,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856#issuecomment-1113123372,1,['benchmark'],['benchmarks']
Testability,Some bug fix from my working branch. List of fix:; - **[FixedConstraint]** fix bug when several invalid indices need to be removed. Need to parse all first and remove in a second stage.; - **[SphereModel]** FIX: display of collision sphere in wireframe mode.; - **[TetrahedronSetTopologyContainer]** FIX: triangle created with bad orientation in addTetrahedronProcess method.; - **[TriangleModel]** FIX: need to check if topology has changed and update the triangles if needed before computing triangleModel BBox; - **[PointModel]** Fix pointModel crash when removing points. need to be well resized in computeboundingtree method.; - **[SofaBaseTopology]** Add a single static trianglesOrientationInTetrahedronArray in baseMeshTopology.h and remove all the different occurences (with different values) in the cpp files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/985:1071,test,test,1071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/985,2,['test'],['test']
Testability,Some changes to be able to handle tetra removal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554:300,test,test,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554,2,['test'],['test']
Testability,"Some cleaning in `CudaPointModel`, `CudaLineModel`, `CudaTriangleModel `and `CudaSphereModel`; and fix the ambiguity between Collision element model and collision element. for example:; `using CudaLine = sofa::component::collision::TLine<CudaVec3fTypes>; // collision element`; `using CudaLineCollisionModel = sofa::component::collision::LineCollisionModel<CudaVec3Types>; // collision element model`. No support of Cuda double for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2673:976,test,test,976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2673,2,['test'],['test']
Testability,"Some cmake file/macros/options references the SofaNG project (codename), which is not really good for consistency IMO.; This has been rename to SOFA, as the SOFANG was merely for dev purpose. e.g, the option to enable Sofa.Component.AnimationLoop was called:; `SOFANG_ENABLE_SOFA_COMPONENT_ANIMATIONLOOP`; now it is named:; `SOFA_ENABLE_SOFA_COMPONENT_ANIMATIONLOOP`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3102:907,test,test,907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3102,2,['test'],['test']
Testability,"Some cmake instructions became irrelevant as new requirement versions for cmake, gcc ,and clang have been defined.; So this PR merely remove the now-dead code. \+ Sofa.compat deletion from #4760 was not totally finished (add a warning at cmake configure time). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4812:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4812,2,['test'],['test']
Testability,"Some components want to compute volume in 2 (or even 1) dimensions.; Identified components:; - DiagonalMass; - MeshMatrixMass; - TetrahedronSetGeometryAlgorithms (should even not be templated in 2d...); - HexahedronSetGeometryAlgorithms (should even not be templated in 2d...). For the topology-related ones, this is easy and the template in 2D should logically be removed.; As for the mass, it would require some refactoring. A mass in 1D should not be able to compute a mass on a hexahedron.... More components could be included in this list.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2457:352,log,logically,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2457,1,['log'],['logically']
Testability,"Some computeBBox() functions were still using numeric_limits<Real>::min() instead of lowest(). numeric_limits<T>::min() returns 0 (more precisely a value very close to it) if T is a floating-point type, whereas numeric_limits<T>::lowest() returns -inf(more precisely -max of T), which is the expected behavior in computeBBox(). http://en.cppreference.com/w/cpp/types/numeric_limits/min; http://en.cppreference.com/w/cpp/types/numeric_limits/lowest. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/634:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/634,2,['test'],['test']
Testability,Some feedbacks:; I compiled with https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer and I did not get any difference in leaks while executing TorusFall.scn and caduceus.scn in batch for 100 steps unfortunately.; The output is huge (20Mo of logs) so not easy shareable (can give it on demand). Final outputs for both (PR and master branches) :; caduceus: `SUMMARY: AddressSanitizer: 10282202 byte(s) leaked in 111987 allocation(s).`; torusfall: `SUMMARY: AddressSanitizer: 6271499 byte(s) leaked in 28416 allocation(s).`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4838#issuecomment-2249517443:261,log,logs,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4838#issuecomment-2249517443,1,['log'],['logs']
Testability,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1933:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933,2,['test'],['test']
Testability,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1950:733,test,test,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950,2,['test'],['test']
Testability,"Some methods are moved into a base class. They were exactly doing the same thing in both solvers. The result is that `buildSystem` now looks very similar in both classes. It allows to better understand that both solvers do some similar things. It could be factorized again in the future. A lot of cosmetic changes. `applyCorrection` has been split into smaller functions. `build_LCP` and `build_problem_info` are factorized. `ConstraintSolver::solveConstraint` is condensed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4213:1014,test,test,1014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4213,2,['test'],['test']
Testability,Some minor warnings and ...; FIX strange double incrementation on iterator in DefaultMultiMatrixAccessor.cpp : @ChristianDuriez @courtecuisse your review would be great !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/364:423,test,test,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/364,2,['test'],['test']
Testability,"Some minus signs disappeared in #2429 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2448:579,test,test,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2448,2,['test'],['test']
Testability,"Some more info about this test... ; Fails on master since b70b477f; Error appeared in `defrost` branch between 4b1f289 and a33b4b1.; First CI build with error: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_default_amd64/546/ ; Error message: ; ```; J:\job\origin\master\modules\SofaOpenglVisual\SofaOpenglVisual_test\LightManager_test.cpp:65; Expected: (lm) != (nullptr), actual: NULL vs 8-byte object <00-00 00-00 00-00 00-00>; ```; Full output: ; ```; Running SofaOpenglVisual_test.exe; Seed Value used for the tests = 1478637948; [==========] Running 1 test from 1 test case.; [----------] Global test environment set-up.; [----------] 1 test from TestLightManager; [ RUN ] TestLightManager.checkAttributes; [ERROR] [DAGNode ""Level 1""] Object type ""MechanicalObject"" creation Failed; Emitted from 'J:\job\origin\master\SofaKernel\modu; les\SofaSimulationCommon\xml\NodeElement.cpp' line ; 92; [ERROR] [DAGNode ""Level 1""] Object type ""LightManager"" creation Failed; Emitted from 'J:\job\origin\master\SofaKernel\modu; les\SofaSimulationCommon\xml\NodeElement.cpp' line ; 92; [ERROR] [SceneLoaderXML] Node initialization failed.; Emitted from 'testscene' line 1; J:\job\origin\master\modules\SofaOpenglVisual\SofaOpenglVisual_test\LightManager_test.cpp(65): error: Expected: (lm) != (nullptr), actual: NULL vs 8-byte object <00-00 00-00 00-00 00-00>; unknown file: error: SEH exception with code 0xc0000005 thrown in the test body.; [ FAILED ] TestLightManager.checkAttributes (9 ms); [----------] 1 test from TestLightManager (9 ms total). [----------] Global test environment tear-down; [==========] 1 test from 1 test case ran. (10 ms total); [ PASSED ] 0 tests.; [ FAILED ] 1 test, listed below:; [ FAILED ] TestLightManager.checkAttributes; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263269510:26,test,test,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263269510,19,"['Test', 'test']","['TestLightManager', 'test', 'tests', 'testscene']"
Testability,Some new test in TetrahedronSetTopology_test is failing. Was it expected due to your change Erik ?; The regression tests are also crying on topo.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/985#issuecomment-481128348:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/985#issuecomment-481128348,2,['test'],"['test', 'tests']"
Testability,"Some notes:. - It was extremely hard to understand why L^T was used in the first step of the solve, and not L. I hope it's clearer now with the comment I added. Anyway, it requires to have the knowledge of the CSR and CSC formats, and how they relates to the transpose.; - I would like to use C++20 `std::span` in some functions such as `solveLowerUnitriangularSystemCSR`.; - Regression tests threshold are usually set to 1e-4. IMO it's not enough to capture errors happening on a single DOF because it's an average",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403:387,test,tests,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1653112403,1,['test'],['tests']
Testability,"Some of the PRs related to https://github.com/sofa-framework/sofa/pull/2228 were wrongly added to v21.06 changelog.; They are not in the v21.06 branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2234:691,test,test,691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2234,2,['test'],['test']
Testability,"Some overloads of the function `add` from `BaseMatrix` were hidden in derived classes (SparseMatrix, RotationMatrix, FullMatrix and DiagonalMatrix). The using-declaration asks to bring all the overloads into the scope. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2304:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2304,2,['test'],['test']
Testability,"Some pragma directive were introduced by 4548ab474f89a229f; but they work only with gcc, and generate some warnings with ; other compilers, at least msvc based on my own experience. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/447:433,test,test,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/447,2,['test'],['test']
Testability,"Some scenes crash at the end (but not related to this PR):; - [testOmniDriverEmu.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/testOmniDriverEmu.scn/output.txt); - [HexahedronForceFieldTopologyChangeHandling.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt). The Quater_test is also failing on CentOS but we think it could be related to the rand() bringing the angle too close to in the gimbal lock ToEulerVector in SOFA. If that's the issue, the fix is described here: http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/ and should be applied to Quater::toEulerVector (l. 573 in Quater.inl)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-676066963:63,test,testOmniDriverEmu,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-676066963,4,['test'],"['testOmniDriverEmu', 'tests']"
Testability,"Some scenes crash:; - [testOmniDriverEmu.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/testOmniDriverEmu.scn/output.txt); - [HexahedronForceFieldTopologyChangeHandling.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt). The Quater_test is also failing on CentOS but we think it could be related to the rand() bringing the angle too close to in the gimbal lock ToEulerVector in SOFA. If that's the issue, the fix is described here: http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/ and should be applied to Quater::toEulerVector (l. 573 in Quater.inl). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1461:23,test,testOmniDriverEmu,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1461,4,['test'],"['testOmniDriverEmu', 'tests']"
Testability,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1817:978,test,test,978,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817,2,['test'],['test']
Testability,"Some scenes where presenting strange behavior : no object moving; with specific numerical settings, and with some others it was; working fine. This was due to a threshold of CG met at first step; on denominator value. Now force at least one step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/521:498,test,test,498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/521,2,['test'],['test']
Testability,"Some small optimisation, thanks for all advices using VS Profiler and SofaBenchmarks. SofaBenchmark have been added on TetraXX FEMForcefield in https://github.com/alxbilger/SofaBenchmark/pull/23. ```; -----------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -----------------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/512 1339 ms 1344 ms 1 FPS=381.023/s frame=2.62451ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/1024 2662 ms 2656 ms 1 FPS=385.506/s frame=2.59399ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/2048 5259 ms 5266 ms 1 FPS=388.938/s frame=2.57111ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/4096 10451 ms 10453 ms 1 FPS=391.845/s frame=2.55203ms; ```. ```; -----------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -----------------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/512 982 ms 984 ms 1 FPS=520.127/s frame=1.92261ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/1024 1966 ms 1953 ms 1 FPS=524.288/s frame=1.90735ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/2048 3988 ms 3969 ms 1 FPS=516.031/s frame=1.93787ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/4096 7858 ms 7859 ms 1 FPS=521.161/s frame=1.91879ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2877:328,Benchmark,Benchmark,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2877,1,['Benchmark'],['Benchmark']
Testability,"Some test scenes must be written (Python?) for comparison and validation.; These scenes could also later on, be used for regression tests.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/233:5,test,test,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/233,2,['test'],"['test', 'tests']"
Testability,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1998:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998,5,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"Some tests are now failing, it has to be understood before merging.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-293639372:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-293639372,1,['test'],['tests']
Testability,Some tests have the mention *DISABLED_...* which makes gtest ignore it.; We should keep that in mind,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2296:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2296,1,['test'],['tests']
Testability,"Some unit tests are generating sofa errors w/o generating gtest errors (e.g. SofaBoundaryCondition_test). To detect such problems, I had added a msg handler that was returning a gtest error at each sofa error.; It was not good enough because some tests can generate sofa errors on purpose.; But the new implementation defeat the main purpose.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211:10,test,tests,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211,2,['test'],['tests']
Testability,Some various changes that shouldn't break things but ease the SOFA_FLOAT removal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/864:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/864,2,['test'],['test']
Testability,"Some vector calculus are performed on normalized orthogonal vectors, and the result is also normalized. Therefore, no need to normalize it again. The proposed change avoids 2 normalizations. To be multiplied by the number of elements. It's called in `addForce`. And I suspect this is why `addForce` is faster in https://github.com/sofa-framework/sofa/pull/2550 (the branch contains the same changes only for TetrahedronFEMForceField).; In this PR, the changes are applied on all the corotational FEM I could found. I found that the function `Decompose<Real>::getRotation` is very similar to my changes. However, the resulting rotation is the transpose of the rotation needed in the FEM. Also, I did not find any use of `Decompose<Real>::getRotation`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647:1290,test,test,1290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647,2,['test'],['test']
Testability,Some very simple clean ups while I was there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1124:297,test,test,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1124,2,['test'],['test']
Testability,"Some work on cleaning the components SparseGridTopology and SparseGridRamicficationTopology: . - Remove commented code; - Replace sout/serr by msg macro; - Remove duplicated Data in SparseGridRamicficationTopology which inherite from SparseGridTopology ; - Fix warnings (size_t, unsued variables, ...); - Fix SparseGridTopology.scn and SparseGridRamicficationTopology.scn behavior; - Add regression_test references for both scenes and add them to the list of scene to be tested. This PR replace an old one #706 instead of merging master. This PR is only a aesthetic clean before a more complex PR to clean and factorize methods inside the components as well as removing the fileMesh loaded inside the component and use topology Data buffers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/855:471,test,tested,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/855,3,['test'],"['test', 'tested']"
Testability,"Some work on cleaning, adding more check and test on sparseGridTopology component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/706:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/706,3,['test'],['test']
Testability,"Some work on dynamic topology changes:; - rewrite the TRIANGLESREMOVED case of Tetra2TriangleTopologyMapping, should bring a speedup of xN where N is the number of triangles to remove. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/788:438,test,test,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/788,2,['test'],['test']
Testability,"Something is broken here. See tests results: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1275/CI_CONFIG=ubuntu_gcc-7,CI_PLUGINS=options,CI_TYPE=release/3/testReport/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-603862893:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275#issuecomment-603862893,2,['test'],"['testReport', 'tests']"
Testability,"Something, when having multiple topologies in the same node as the input state, the barycentric mapping will get the wrong input topology since it rely only on `fromModel->getContext`. This PR fixes this by adding links for the input and output topologies. . Also some reformatting of the input topology type detection with a goto statement...a good example as to where goto can be useful :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1125:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1125,2,['test'],['test']
Testability,"Sometimes (every few thousand occurrences) the vector becomes invalid between getting its length and iterating over it. . This error was first described in https://www.sofa-framework.org/community/forum/topic/m_contactsvectorbuffer-not-valid-sometimes/. Now swapping the contents and the error does not occur anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2676:857,test,test,857,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2676,2,['test'],['test']
Testability,"Sometimes we see this kind of initialization of a Data:; ```cpp; showObjectScale(initData(&showObjectScale, 0.1f, ""showObjectScale"", ""Scale for object display. (default=0.1)"")); ```; The information on the default value is redundant and error-prone. A developer can decide to change the default value and forget to change the default value in the description. Instead, I suggest to store the default value of the Data and use it to print it in the GUI, in addition to the description. Here is the result:; ![image](https://github.com/sofa-framework/sofa/assets/10572752/eb6e238b-2b06-4d3b-bdc4-cf553d795606). We can also imagine having a small button to change the value to its default value (like in Unreal Engine). The implementation of this suggestion triggers some questions:; - I chose to store the default value only for some of the `Data<T>`, based on the type of `T`. Do we want that or do we want to store it for all types?; - I chose to store the default value of `Data<T>` as a T. But we can also consider storing its string representation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4133:1592,test,test,1592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4133,2,['test'],['test']
Testability,"Sorry I should have given more details. The move I suggest is something that was around for quite a while now. I think it was suggested by @damienmarchal first. The legacy conditionally compiled code, mainly in SofaCUDA but it applies everywhere, is a bad practice for the following reasons:; - It is nearly impossible for the user to know what components are included in the conditionally compiled module. It would require a complex documentation to inform the user, which is not done for SofaCUDA.; - Testing becomes more complex. It's challenging to ensure that all possible combinations of conditions are thoroughly tested, increasing the risk of undetected bugs. See https://github.com/sofa-framework/sofa/pull/4227 for example.; - Other plugins (for example SoftRobots) cannot add their own CUDA components into SofaCUDA. So it's not true that all components are in the same plugin. We also have the example of the GPU-based solvers. What I suggest is to keep the cpu-based plugin, and create a new plugin for the gpu-based components. It would be applied to all plugins that are a conditional dependency in SofaCUDA (so not the `Sofa.Component.*` modules), not only `VolumetricRendering`. This PR is an illustration of the move of one particular plugin, but it should be generalized. The goal of the PR is also to approve the move, but also the folder architecture. If we can agree on an architecture inside the SOFA codebase, we can also apply it in external plugins (such as SoftRobots or MOR).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395#issuecomment-1864019900:503,Test,Testing,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395#issuecomment-1864019900,2,"['Test', 'test']","['Testing', 'tested']"
Testability,"Sorry but a lot of tests are failing 😥 (either units, scenes and regression)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2391#issuecomment-945566650:19,test,tests,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2391#issuecomment-945566650,1,['test'],['tests']
Testability,Sorry the caduceus scene was also affected by #1369 ; Could anyone merge it straightaway?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1392:342,test,test,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1392,2,['test'],['test']
Testability,"Sorry to be so long to merge this PR but the CI is very slow and buggy which really breaks the workflow. . @matthieu-nesme, @maxime-tournier can you please give me your thinking about adding tests and documentations on the components introduced in this PR. . EDIT: took the checklist to add it in the PR description.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/147#issuecomment-276603951:191,test,tests,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/147#issuecomment-276603951,1,['test'],['tests']
Testability,"Sorry, I haven't done anything about this yet for SOFA. I am currently using the solver in my own project and right now I am testing it works correctly. I have some cases where the energy of the system seems to grow and I am not sure if its because of the solver or I have issues somewhere else, so I would say its not ready yet.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-895036698:125,test,testing,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2209#issuecomment-895036698,1,['test'],['testing']
Testability,"Speed up by a (huge) factor the rendering of several spheres.; This is done in 2 ways:; - optimizing with VBO for ""normal"" spheres (like before, with rings and segments parameters) ; - impostors (https://paroj.github.io/gltut/Illumination/Tutorial%2013.html). On the same computer, for 150K spheres :; - 0.8fps with previous rendering; - 22fps with VBO; - 46 fps with impostors . This task is also the beginning of optimizing draw tools, by removing deprecated glu calls and non optimized OpenGL code ; and by using VBO/IBO and shaders. (class BasicShapesGL). This PR should resolve more or less the issue #142 . ; It depends if this issue talks about spheres only or more generally speeding up rendering itself (in that case, it will need much more commits ;) ). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/170:933,test,test,933,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/170,1,['test'],['test']
Testability,Sphere drawn was actually half the size of the Sphere used.. Thank you @etagliabue for the notice !; ; Problem was:; ![](https://i.ibb.co/J5SkJ01/Sphere-ROI-00000001.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1318:423,test,test,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1318,2,['test'],['test']
Testability,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992:679,test,test,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992,2,['test'],['test']
Testability,"Split the default parameters of the FileRepository constructor into; multiple constructors to avoid ambiguous calls. Add a new constructor that allows the creation of the repository using; multiple paths. The plugin file repository is now initialized using both $SOFA_ROOT/lib; and $SOFA_ROOT/plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:841,test,test,841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,2,['test'],['test']
Testability,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1949:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949,2,['test'],['test']
Testability,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1948:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948,2,['test'],['test']
Testability,"SquareDistanceMapping test fails with the introduced test : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4897/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/testReport/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288223285:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288223285,3,['test'],"['test', 'testReport']"
Testability,"Start porting old (useful?) changes from old dev branches: https://github.com/epernod/sofa/pull/11/files. This changes allow to display the Contacts as a qt table instead of raw line data:; ![image](https://github.com/sofa-framework/sofa/assets/21199245/04a7ad35-8583-4406-82ec-526d241d02df). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4637:832,test,test,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4637,2,['test'],['test']
Testability,"Start with mappings. ![image](https://user-images.githubusercontent.com/10572752/214327429-63f4208d-a6fc-4e76-a939-5a16a14eb9e7.png). With a compatibility layer on headers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3601:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3601,2,['test'],['test']
Testability,"Start work on merging the duplicated code of the mesh loader components versus helper::io::mesh loaders. See issue #42 . Basically, all code to load a mesh file directly in the topology without using a meshLoader component. For example: `<GridTopology fileMesh=""my_mesh.msh"" /> or <OglModel filename=""my_mesh.obj"" />`; go through the class: helper::io::MeshTopologyLoader which had directly some code to load several formats or was using a helper::io::meshXX to read XX file format. All this code is duplicated with the meshLoader components and with some differences (otherwise it would not be fun...). For the moment I only updated the MeshTopologyLoader and the helper::io::mesh classes to check the tests on all plateforms. ; Changes are:; - obj -> nothing (use MeshObj class); - trian -> nothing (use MeshTrian class); - vtk -> remove code from 2009 and use MeshVTK class from 2015. Still different from meshVTKLoader.; - stl -> nothing (use MeshSTL class); - gmsh -> create a MeshGmsh class and move the code in it.; - xsp -> create MeshXsp class and move the code in it.; - cgal -> remove the methods. Assume it is deprecated.; - unknown format -> the ""else"" method when format not found return false now and is set as deprecated. - Update the helper::io::mesh class to have topology buffers in order to be similar as baseMeshLoader for future merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/661:703,test,tests,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/661,3,['test'],"['test', 'tests']"
Testability,"Started from ; - #4858 . but decided to do a separate PR to introduce the new ComponentChange for lifecycle/user management.; and applying on Animation loop components. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/296]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4863:776,test,test,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4863,2,['test'],['test']
Testability,"Started from the PR #4838 . Similar to the Thread Sanitizer.; Only for GCC/Clang and Unix (seems even GCC-win/Clang-win are not supported). This A(L)SAN adds leaks and memory detection.; More info:; - https://github.com/google/sanitizers/wiki/AddressSanitizer; - https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer (leak is included into the addresssanitizer). The `-fno-omit-frame-pointer`adds also a better reporting (nicer stack traces). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4847:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4847,2,['test'],['test']
Testability,"Started from the fact that there was an option to profile MT scheduling but the header `TaskSchedulerProfiler.h`is not available anywhere (git history, etc) so I removed the macros related to profiling. - some files did not have the SOFA licence header; - indentation was all over the place; - guidelines, etc; - clean some includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3448:873,test,test,873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3448,2,['test'],['test']
Testability,"Starting point for #2150 . Create a new module in SofaFramework called Sofa.LinearAlgebra, aiming to gather all structures related to linear algebra, i.e; stuff related to BaseMatrix & BaseVector.; To ensure maximum compatibility, this PR does not propagate the change to the whole SOFA. The downside of this is that SOFA cannot compile without the Sofa.Compat module for the moment (should be ok as the option is ON by default).; Further PRs:; - move tests as @alxbilger has well commented,; - move other *Matrix/Vector things from BTDLinear, etc; - split and create separate files for BlocFullMatrix; - and before the v21.12 release, effectively change the code base to only use sofa::linearalgebra and not the compatibility layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2314:452,test,tests,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2314,3,['test'],"['test', 'tests']"
Testability,"Starting the work of cleaning the topology in Sofa.. resting in peace since 2012... - Change those methods: now returns unsigned int instead of int: ; - getEdgeIndex(PointID v1, PointID v2);; - getTriangleIndex(PointID v1, PointID v2, PointID v3);; - getQuadIndex(PointID v1, PointID v2, PointID v3, PointID v4);; - getTetrahedronIndex(PointID v1, PointID v2, PointID v3, PointID v4);; - getHexahedronIndex(PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8);; - Now unfound ID == UINT_MAX instead of -1.; - Change several serr/sout into msg_. In this PR, 2 scene tests are now sending error due to the conversion of serr into msg_error.; This is beacuse some scene test try to do topological change on regularGrid which doesnt support that. I would like to keep those scene error and handle that in a next PR (to split PRs and simplify review process). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/866:608,test,tests,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/866,4,['test'],"['test', 'tests']"
Testability,"StateAccessor is used quite intensively so this warning is popping up everywhere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2835:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2835,2,['test'],['test']
Testability,StateMask is including Eigen/Sparse everywhere while it is not needed/used. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1505:329,test,test,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1505,2,['test'],['test']
Testability,Static access to the ConsoleMessageHandler (use case in SP3 ([PR #18](https://github.com/sofa-framework/SofaPython3/pull/18)). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1434:378,test,test,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1434,2,['test'],['test']
Testability,Static solver updated by @jnbrunet and I think @IPeterlik worked on it as well; It now includes : ; - possibility to make more than one Newton-Raphson step; - correction and residual tolerance as data; - option to stop iterations when residual is growing. Uses also #pragma; A DOC page will soon be made available specific to the static solver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950,2,['test'],['test']
Testability,"Static variable was not defined with double precision Cuda types. The CI probably does not compile SofaCUDA with double precision (off by default). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440,2,['test'],['test']
Testability,"StiffSpringForceField is basically an extension of SpringForcefield adding implicit solving. ; The only added value comes from the ability to define the springs using added data indices1, indices2 and lengths. This mechanism need to also be merged with the current one available in SpringForceField. . Related to https://github.com/sofa-framework/sofa/issues/248. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649:903,test,test,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649,2,['test'],['test']
Testability,Still a unit test failing @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1767929740:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1767929740,1,['test'],['test']
Testability,"Still not ready, tests are failing. This is weird because tests are OK on my computer, at least for VS2015. (tried 64 and 32 bits)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-292187023:17,test,tests,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-292187023,2,['test'],['tests']
Testability,Stop the search of the Container/BaseTopology when one is found (using break). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new scene test failures.; - [ ] does not generate new unit test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1176:331,test,test,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1176,2,['test'],['test']
Testability,"Strange, looking at the dashboard: 1) some timeout appeared and 2) regression tests failing; could this be related to the PR?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856#issuecomment-447794176:78,test,tests,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856#issuecomment-447794176,1,['test'],['tests']
Testability,"Stumbled on it with #1649 . DiffusionSolver was unable to find ""png.h"" when SOFA_NO_OPENGL is activated. It appears that if SOFA_NO_OPENGL is not activated, adding glew somewhat adds the dependency package directory (<sofaroot>/include) to the include_directories of SofaHelper (and the subsequent modules needing it). But if SOFA_NO_OPENGL is not activated, this directory is not added.; DiffusionSolver needs Cimg, which adds only for himself the include directory (i.e no target_include_directories).; So CImg compiles well but the modules needing it do not. That's why DiffusionSolver cannot find ""png.h"". My fix does add this include_directory to the target, but I don't know if it is the best way. Joy of CMake 🥴. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1650:1259,test,test,1259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1650,2,['test'],['test']
Testability,"Stumbled on this file while compiling on M1 Silicon (ARM). atomic.h was used to have atomic operations before the stl introduced it in c++11. 1- this utility class is not compatible with other instructions sets than i386/amd64(e.g arm); 2- the STL version is obviously much better; 3- nobody is using it in the sofa code base actually (except its own testing suite). This PR allows the compilation of SOFA on M1 (and other arm in general). I let a file in Sofa.Compat to warn the eventual user to use the STL atomic. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2160:351,test,testing,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2160,3,['test'],"['test', 'testing']"
Testability,"Suffix was missing for SceneCreator, SofaTest and SofaSimulationCore.; Fixes #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/511:335,test,test,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/511,2,['test'],['test']
Testability,"Suggestion fixes #1666 ; I would like to know if @damienmarchal or @marques-bruno (if watching) sees possible problems while using SofaQtQuick.; But relying only on the callback should be sufficient. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094,2,['test'],['test']
Testability,"Suggestion of buttons to expand all or collapse all in the scene graph view. https://user-images.githubusercontent.com/10572752/132018160-1192c958-1300-4ef3-b92a-3f0a0c10ae29.mp4. Note that the same feature already exists by right clicking on the root node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2322:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2322,2,['test'],['test']
Testability,"Summary:; - duplicate changes appeared since the Sofa-ng move (and the message from uncreatable was reporting only the first registered move, so the displayed error message itself was incorrect); - few changes were invalid (some non-BaseObject were inserted); - few components were forgotten; - removed the creatablemoved class, since the move will be reported by the SceneCheckerRequiredPlugin anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2986:942,test,test,942,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2986,2,['test'],['test']
Testability,"Summery of the problem statement:; currently in sofa there is not rules to describe colors inthe data fields. Consequently some components use Data, others rely on Data and others are using a combination of Data with private float r,g,b,a member. So there are component that accepts color by string ""blue"" or ""#aabbccdd"", other works by passing ""0 1 0 1"" while others ""0 1 2"". This lack of consistency in a problem in term of user interface design which impact XML, python scene as all as in GUIs like runSofa or qtQuickSofa. To solve that I replace the existing data fields with a dedicated type for color (see defaulttype::RGBAColor introduced in PR ##119) . The advantages are multiple:; - expose color in a consistent way to the users.; - all the components now supports the following way to set color: ""blue"", ""0 0 1 1"", ""0 0 1"", ""#0000AAAA"", ""#0000AA"", ""#00AA"", ""#00A"",; - the code to convert the string to a RGBAColor is no more duplicated in component and is now more robust and reports more errors to the users.; - the behavior of the RGBAColor public API is now tested in Color_test.cpp. The disadvantage is that despite I try not to break things (especially in scene) ... it may happens (brecause the commit is rather big & touch a lot of files). So please test it on one or two scene of your choice and report problem. This PR depends on PR #119; This PR replace PR #124 ; This PR solve the Issue #64. Checklist to be merge:. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does may break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/206:1072,test,tested,1072,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/206,3,['test'],"['test', 'tested']"
Testability,"Summery of the problem statement:; currently in sofa there is not rules to describe colors inthe data fields. Consequently some components use Data<Vec3>, others rely on Data<Vec4> and others are using a combination of Data<string> with private float r,g,b,a member. So there are component that accepts color by string ""blue"" or ""#aabbccdd"", other works by passing ""0 1 0 1"" while others ""0 1 2"". This lack of consistency in a problem in term of user interface design which impact XML, python scene as all as in GUIs like runSofa or qtQuickSofa. To solve that I replace the existing data fields with a dedicated type for color (see defaulttype::RGBAColor introduced in PR #https://github.com/sofa-framework/sofa/pull/119) . The advantages are multiple:; - expose color in a consistent way to the users.; - all the components now supports the following way to set color: ""blue"", ""0 0 1 1"", ""0 0 1"", ""#0000AAAA"", ""#0000AA"", ""#00AA"", ""#00A"", ; - the code to convert the string to a RGBAColor is no more duplicated in component and is now more robust and reports more errors to the users. ; - the behavior of the RGBAColor public API is now tested in Color_test.cpp. . The disadvantage is that despite I try not to break things (especially in scene) ... it may happens (brecause the commit is rather big & touch a lot of files). So please test it on one or two scene of your choice and report problem. This PR depends on PR #https://github.com/sofa-framework/sofa/pull/119 ; This PR solve the Issue https://github.com/sofa-framework/sofa/issues/64. Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/124:1137,test,tested,1137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/124,4,['test'],"['test', 'tested', 'tests']"
Testability,Super good initiative!. - these message handler should replace existing buffers. They should be removed because handling history with an handler is a way better idea. But the distributed gui should then use this new mechanism to print log history in the component widgets. - please stop adding Data in Base!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276614106:235,log,log,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276614106,1,['log'],['log']
Testability,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4236:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236,3,['test'],"['test', 'tests']"
Testability,"Sure, I do it right away: [ci-build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/792#issuecomment-429316737:48,test,tests,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/792#issuecomment-429316737,1,['test'],['tests']
Testability,"Sure, feel free to do it if you reviewed the latest changes.; Let's not forget the [ci-build][with-scene-tests] though :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/780#issuecomment-428888825:105,test,tests,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/780#issuecomment-428888825,1,['test'],['tests']
Testability,TEst to fix,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1283720918:0,TEst,TEst,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-1283720918,1,['TEst'],['TEst']
Testability,THIS PR HAS BEEN REPLACED WITH #377.; So i close it. . ===============; This is an attempt to fix the bug here: #375 . The only real change is in BaseLink all the other file is cosmetic cleaning. ; Currently it is breaking & a wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/376:483,test,test,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/376,2,['test'],['test']
Testability,"TItle. GCC12, and SOFA minimal build (Sofa.framework + Sofa.Component + some stuff in Sofa.GUI) does not report warnings anymore; ~~But the current warning level is quite low...~~ not really, -Wall and -Wextra only reports warnings in tinyxml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3627:783,test,test,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627,2,['test'],['test']
Testability,"TODO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3643:545,test,test,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3643,2,['test'],['test']
Testability,TODO: ; - [ ] test with SofaPython3 out-of-tree; - [x] add warnings in transitional headers,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-638100826:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-638100826,1,['test'],['test']
Testability,"TODO: Component must have an S (components), and must be tested first; Add to guidelines: vector data must include an “s” to specify that there is several info",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-994673970:57,test,tested,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-994673970,1,['test'],['tested']
Testability,TODO: add parent classes + eventually category + add a test with a template,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178070260:55,test,test,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775#issuecomment-2178070260,1,['test'],['test']
Testability,"TODO: scene tests count should be same as master before #611 merge: 612 for CentOS options, 612 for MacOS options, 620 for Ubuntu options, 612 for Windows options.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/619#issuecomment-378520483:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/619#issuecomment-378520483,1,['test'],['tests']
Testability,TODO: solve conflict and build with scene tests,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/704#issuecomment-405863496:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/704#issuecomment-405863496,1,['test'],['tests']
Testability,"TODO:; - ~~check removed functions and insure compatibility layer~~; - ~~new creation mechanism of GravityForceField~~; - ~~self, GravityForceField checks if one is already here~~; - ~~have a callback and save the norm : if 0 exit all loops~~; - ~~what happens if no mass for GFF~~; - ~~update dates in messages (v22.12 -> v23.12)~~; - ~~update PR description~~; - test when a node is added. One issue remains in my tests :; - simulation starting without gravity, and then gravity is added; - mass added using python, since no init, the link in GravityForceField to the local mass is no performed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724,2,['test'],"['test', 'tests']"
Testability,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4534:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534,2,['test'],['test']
Testability,"Tackles one point of #4221. Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; Externalize the previously embedded version of metis (5.1.0) which was statically linked. Provides a cmake module finder file (FindMetis.cmake), tested successfully with the following ways to provide the library:; - compile & install from source (v5.1.1) (warning: official repository cmakefiles are broken); - APT package libmetis-dev (v5.1.0); - conda package (v5.1.0 and v5.1.1); - vcpkg package (v2022-07-27); All on ubuntu 22.04. Not tested with conan. Some remarks to embed metis in the CI: The embedded version was compiled with GKlib using the `GKRAND` option. To the best of my knowledge, this can be provided either from compiling from source or with the conan package with a specific option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4266:271,test,tested,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4266,4,['test'],"['test', 'tested']"
Testability,"Tackles one point of #4221.; Replace embedded version of nlohmann_json library by an external one, using the modern ""find or fetch"" mechanism from CMake >=v3.24 (see https://cmake.org/cmake/help/latest/guide/using-dependencies/index.html#fetchcontent-and-find-package-integration ), similarly to what has been done in https://github.com/sofa-framework/sofa/pull/4240 for TinyXML2.; This is not required by conda-forge for the SOFA conda package as the library is header-only, only recommanded.; We also discussed to remove this dependency as only used by AdvancedTimer, but meanwhile, if not removed by the next-release, we might consider this PR or not. Let me know.; As for other dependencies that will be handled by this ""find or fetch"" mechanism, additional work needs to be done to forbid the fetch if the find package failed (also required for the next release). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4257:1408,test,test,1408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257,2,['test'],['test']
Testability,"Take a look at the removed overload. ; ```; SetDirectory::SetDirectory(const std::string& filename); {; SetDirectory(filename.c_str());; }; ``` ; is not valid object creation.; It is both wrong and unneeded. As for the link with #992, latest message mention failing tests, which are due to the aforementionned bug.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1083#issuecomment-503608712:266,test,tests,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1083#issuecomment-503608712,1,['test'],['tests']
Testability,"Takes over #2851 (a mess to merge with master, easier to reopen a new one). Remove completely when useless else, replace it using callback. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4075:679,test,test,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4075,2,['test'],['test']
Testability,Targets are built with debug version of runtime library in debug configuration; under MS Visual Studio. This is enabled with /MDd compiler flag. Missing this; flag for NVCC generated object files results in linker fails due to different; versions of runtime libraries. The problem is resolved by explicitly setting compiler options for debug build; under Windows. The solution is given only for Windows and only for MSVS because; it's the only officially supported by NVidia compiler on this platform. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/300:753,test,test,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/300,2,['test'],['test']
Testability,"Task for #4217 . As less breaking as possible, but as I did not re-implement all functions from fixed_array, it is bound to break if one used a function not present (+some technicalities like array() which was returning a ref to a c-array[], which could be implicitly casted as pointer, or some functions which was taking a fixed_array as a parameter). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4263:892,test,test,892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263,2,['test'],['test']
Testability,"TaskScheduler was doing several things:; - A base class for task schedulers; - A factory to register and create task schedulers. The factory code is extracted from the TaskScheduler class and moved into its dedicated class and file. I refactored a bit how the factory works:; Before, it was like there could be only one TaskScheduler at a time. Everytime a new TaskScheduler was created, the previous one is destroyed. It prevents the use of multiple TaskScheduler with different type (derived class). Instead, the task schedulers are now stored in a map. ; The only issue is related to the task allocator. The task allocator is used every time a task is created. The task allocator is supposed to depend on the TaskScheduler where the task will be added. But in practice, a Task is created independently from the TaskScheduler. So I kept the old system that calls a static function setting the allocator when the task scheduler is created. Some unit tests are introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3480:951,test,tests,951,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480,3,['test'],"['test', 'tests']"
Testability,"Template aliases are clarified. They were introduced for `double` and `float` because of `DataExchange`. But it is a mistake since the default behavior is not in `DataExchange`. Therefore, I restored the template name to be `double` and `float` instead of `d` and `f` only for scalars. This is to mimic the default behavior. Template aliases are removed. Fixes https://github.com/sofa-framework/sofa/issues/3450. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461:952,test,test,952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461,2,['test'],['test']
Testability,Test OK. Pushed to master.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/40#issuecomment-254783994:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/40#issuecomment-254783994,1,['Test'],['Test']
Testability,Test SceneChecker_test.checkDuplicatedNames is now working further to Damien's commit.; Merge as agreed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1080#issuecomment-504000825:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1080#issuecomment-504000825,1,['Test'],['Test']
Testability,Test and scene examples are added.; Doc is ready here: https://github.com/sofa-framework/doc/pull/38/files. Looks now fine to me.; Anyone else I merge by the end of the week.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-646594194:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-646594194,1,['Test'],['Test']
Testability,Test are still failing @alxbilger and many warnings seem to be added :drop_of_blood:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1228154634:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3151#issuecomment-1228154634,1,['Test'],['Test']
Testability,Test cmake to handle external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/342:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/342,1,['Test'],['Test']
Testability,Test failing: testOmniDriverEmu.scn + HexahedronForceFieldTopologyChangeHandling.scn,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1461:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1461,2,"['Test', 'test']","['Test', 'testOmniDriverEmu']"
Testability,Test failures are still here. Looks like CMAKE_INSTALL_DEFAULT_COMPONENT_NAME is not responsible for the failures then.; I keep this PR open to investigate...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-831802913:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2059#issuecomment-831802913,1,['Test'],['Test']
Testability,"Test if a macro would be sufficient to ensure the compatibility between the new msg API (msg_error, msg_warning etc) with the previous approach based on sout serr.; This topic would ensure a close compatibility with IS code base.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1628:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1628,1,['Test'],['Test']
Testability,"Test is failing:. ```; [ERROR] [MergeVectors(mergedPositions)] Requested template 'Data<double>' cannot be found in the list of available templates [vector<RigidCoord2d>, vector<RigidCoord3d>, vector<RigidDeriv2d>, vector<RigidDeriv3d>, vector<Vec2I>, vector<Vec2d>, vector<Vec3d>, vector<Vec4d>, vector<bool>, vector<d>, vector<i>]. Falling back to the first compatible template: 'vector<d>'.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465#issuecomment-1331830676,1,['Test'],['Test']
Testability,Test is fixed. Failure was due to the fact that test values were generated before c81e4b73f24c2272e9346be3b5c0a1756ecdca59.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323962386:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323962386,2,"['Test', 'test']","['Test', 'test']"
Testability,Test to be added for getRoot in case of diamond scenes written with SimpleAPI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3469:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3469,1,['Test'],['Test']
Testability,Test to be done on MeshSTLLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2899:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2899,1,['Test'],['Test']
Testability,Test with side effects,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5019:0,Test,Test,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5019,1,['Test'],['Test']
Testability,Tested & Approved 🤩,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1619582818:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1619582818,1,['Test'],['Tested']
Testability,"Tested & approved, -> ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4523#issuecomment-1994590127:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4523#issuecomment-1994590127,1,['Test'],['Tested']
Testability,"Tested and approved :+1: . What do you think @alxbilger about setting gravity to ""0 0 0"" as default value?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2263909359:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4876#issuecomment-2263909359,1,['Test'],['Tested']
Testability,Tested and compiled on VS22/Ubuntu22.04 and it works.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1938997587:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1938997587,1,['Test'],['Tested']
Testability,Tested and working on Linux and Windows :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820#issuecomment-784263603:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820#issuecomment-784263603,1,['Test'],['Tested']
Testability,Tested by @fredroy and ready to be merged !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749#issuecomment-2129378389:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749#issuecomment-2129378389,1,['Test'],['Tested']
Testability,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1936:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936,1,['Test'],['Tested']
Testability,"Tested on Windows, VS 16 2019, Qt 5.15.2",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2315:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2315,1,['Test'],['Tested']
Testability,Tested on classical and retina screens on os x system and classical screen on linux system. I do not know how to create a unit test for this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/311:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/311,4,"['Test', 'test']","['Tested', 'test']"
Testability,Tested on my side for #1649 (locally); it is working so I validate it 😙,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1651#issuecomment-744391099:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1651#issuecomment-744391099,1,['Test'],['Tested']
Testability,"Tested sucessfully, and needed for an incoming PR to fix the compilation out-of-tree of sofapython3 (on my setup at least ... 😅 )",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3023#issuecomment-1152000018:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3023#issuecomment-1152000018,1,['Test'],['Tested']
Testability,"Tested the scene, it ""looks"" the same; Being hard to manually assess, we could add this scene to the regression what about this ? (not blocking remark)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4301#issuecomment-1828076832:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4301#issuecomment-1828076832,1,['Test'],['Tested']
Testability,Tested with my PR #1162 and works with an additional compile flag.; Good to merge for me.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-538727046:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101#issuecomment-538727046,1,['Test'],['Tested']
Testability,Tested.. and working :).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2944#issuecomment-1125753496:0,Test,Tested,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2944#issuecomment-1125753496,1,['Test'],['Tested']
Testability,"Testing this PR coupled with #1997 on Windows/MSVC and there is no more CPU ""business"" if the simulation is stopped.; So I guess this PR is ready IMO.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-823044769:0,Test,Testing,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-823044769,1,['Test'],['Testing']
Testability,"Testing this with the Visual Studio compiler, on my (getting old) desktop (4 cores, 16GB RAM, Windows) I obtained :. ```; - MSVC/debug: 23:52; - MSVC/debug/pch: 14:50; - MSVC/debug/unity: 15:10; - MSVC/debug/pch+unity: 12:46. - MSVC/release: 34:44; - MSVC/release/pch: 23:51; - MSVC/release/unity: 28:52; - MSVC/release/pch+unity: 23:52; ```. So this gives me a 20 to 50% decrease in build time (:+1:), and I would say that performances obtained either with unity, pch, or both are comparable.; Aside from that, when using the unity build, I get only one error while compiling SofaMeshCollision (for multiply defined symbols)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404:0,Test,Testing,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404,1,['Test'],['Testing']
Testability,"Tests (2) I think are failing. We could check in other PRs if the tests failing for them as well; - constraint.FrictionContact_VelocityConstraints.scn; - examples/Components/constraint.InextensiblePendulum.scn. (see [CentOS here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1992/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-828294302:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-828294302,3,"['Test', 'test']","['Tests', 'testReport', 'tests']"
Testability,"Tests are fixed, ready then 👮",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722#issuecomment-2262233934:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722#issuecomment-2262233934,1,['Test'],['Tests']
Testability,Tests are here:; - [VS2013_options_amd64](https://ci.inria.fr/sofa-ci/job/TEST_new-dependencies_windows7_VS-2013/1/); - [VS2015_options_amd64](https://ci.inria.fr/sofa-ci/job/TEST_new-dependencies_windows7_VS-2015/3/),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289725047:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289725047,1,['Test'],['Tests']
Testability,Tests are passing ; thanks @bakpaul and @alxbilger 👍,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2332#issuecomment-916686361:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2332#issuecomment-916686361,1,['Test'],['Tests']
Testability,Tests are still failing @epernod :. - RegressionTests.Regression_test/Regression_test/TopologyRegression_test.sceneTest/AddingTriangle2EdgeProcess; - UnitTests.Sofa_Component.Topology/AddTetrahedronProcessor_test.AddTetrahedra; - UnitTests.Sofa_Component.Topology/AddTriangleProcessor_test.AddTriangles,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1228159103:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3216#issuecomment-1228159103,1,['Test'],['Tests']
Testability,Tests inheriting from SofaTest create by default several tests which have no meaning. It was the case for example for SofaMiscTopology_test:. SofaMiscTopology_test/AffinePatch_sofa_test ; SofaMiscTopology_test/LinearElasticity_test ; SofaMiscTopology_test/TopologicalChangeProcessor_test. This is not really an issue... but this means we have a bunch of fake tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1935:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"Tests ok, merging",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610#issuecomment-730252522:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610#issuecomment-730252522,1,['Test'],['Tests']
Testability,Tests on VS2013 crashing with exit code 53,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/155:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/155,1,['Test'],['Tests']
Testability,"Tests passed so, mergin' 🎵",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1519#issuecomment-705527067:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1519#issuecomment-705527067,1,['Test'],['Tests']
Testability,"Tests pulled from https://github.com/InSimo/ISSofa/blob/issofa/framework/framework_test/defaulttype/ConstraintSparseMatrix_test.cpp. Major modifications:; - bloc -> block; - some tests fixed (???); - removal of MapMapSparse tests. \+ Important fix: readLine returns a endIterator if the line index is not correct (as described by the description....). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5037:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5037,5,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,Tests: merge SofaTests with Sofa.Testing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885:0,Test,Tests,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885,2,['Test'],"['Testing', 'Tests']"
Testability,"Thank Guillaume for the effort you are doing on this hard task. . For curious people here is a small test we did on how things could look like ; on the ""pluginization"" side (the idea is to be closer to python modules): ; https://github.com/SofaDefrost/sofa/blob/addModule/applications/pluginsNG/README.md",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-351405252:101,test,test,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-351405252,1,['test'],['test']
Testability,"Thank Hadrien, the fix is fine. The m_primitiveTestCount is used only for statitistics to know how many collision tests are performed.; There should be no other crash if m_primitiveTestCount is = 0.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/961#issuecomment-472364785:114,test,tests,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/961#issuecomment-472364785,1,['test'],['tests']
Testability,Thank for adding new features to Sofa and having provided tests with it.; Seem to compile and does not turn the CI in full red.; So let's merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/402#issuecomment-331384661:58,test,tests,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/402#issuecomment-331384661,1,['test'],['tests']
Testability,"Thank you @guparan! . What I see first is:; - [ ] ~~the files modules/SofaMiscFem/HexaFEMForceField.* should be renamed with CM prefix~~; - [x] the files modules/SofaMiscMapping/BeamMapping.* should be erased (merged from another branch and unrelated to combinatorial topologies ) ; - [x] the changes to modules/SofaGeneralSimpleFem/BeamFEMForceField.* should be erased (merged from another branch, juste a wip and unrelated to combinatorial topologies); - [x] And as said by @damienmarchal, the changes related to SofaKernel/modules/SofaBaseMechanics/BarycentricMapping.* should be extracted to another branch (unrelated to combinatorial topologies) ; - [x] the modifications in the files modules/SofaGeneralSimpleFem/TetrahedralCorotationalFEMForceField.* should be erased (test work of one of our former trainee); - [x] The file modules/SofaMiscMapping/BarycentricMappingRigid.h has modifications unrelated to combinatorial topologies should be extracted to another branch too. These modifications should decrease the number of changed files a bit more",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-404480807:776,test,test,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-404480807,1,['test'],['test']
Testability,"Thank you CLion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4181:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4181,2,['test'],['test']
Testability,"Thank you a lot for the nice proposals preventing potential hacks like the ones I presented above. I just checked your pull request and I really like its simple usage - I hope it will be merged soon! . @damienmarchal : I am excited to see your solution to 3., if you would like to have further information about my approach, please let me know. To create python scenes, I am using the [scene to python transform script](https://github.com/sofa-framework/sofa/blob/master/applications/plugins/SofaPython/scn2python.py) and with the direct usage your approach works well, i.e.; `applications/plugins/SofaPython/scn2python.py examples/Demos/caduceus.scn -o caduceus2 -p`; generates the python scene `caduceus2.py` and when launching it I can retrieve all the arguments of the command line, i.e. the output of ; `runSofa caduceusPython.scn --argv test test2`; is `['caduceusPython', 'test', 'test2']`. However, by default (i.e. without -p) the scene to python transform script generates a .scn file calling a .py file - a choice made to prevent having to load the python plugin before launching python scenes. For example; `applications/plugins/SofaPython/scn2python.py examples/Demos/caduceus.scn`; outputs the caduceusPython.scn and caduceusPython.py. Now when using ; `runSofa caduceusPython.scn --argv test test2`; and running ; `print sys.argv`; only the filename can be retrieved, i.e. the output is `['caduceusPython']`. 1. Is the usage presented as second approach (i.e. using .scn and .py) still up to date/a recommended approach?; 2. If yes, is it possible to access the argv in the .py file when it is used from the .scn file? Or is it possible to improve the implementation such that it can handle it?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324056656:843,test,test,843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324056656,3,['test'],['test']
Testability,"Thank you for this work @damienmarchal. ; I agree there are some location problems with tests in SofaKernel but I'm not sure the solution you propose would be clearer at a CMake point of view.; This is what I would find consistent:; ```; SofaKernel; framework; sofa; core; core_test; defaulttype; defaulttype_test; helper; helper_test; simulation; simulation_test; ```; Is this possible? Too long to implement? Breaking too much?. I think that any *_test should be located besides the library it tests, not in a package. I would even say that we should have **nothing except CMake files in CMake packages**.; I'm afraid that your proposal will mix SofaFramework package definition and test sources. ; I know we are creating a SofaFramework_test executable and that it's obviously related to the SofaFramework package but the problem is not the test location, it's the fact that it's bubbled like a package while it should be factorized following SofaFramework's libraries. Not sure I was very clear. I may have misunderstand stuff. Please be sure I don't want to kill your work <3",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/605#issuecomment-370851122:88,test,tests,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/605#issuecomment-370851122,4,['test'],"['test', 'tests']"
Testability,"Thank you for your feedback @damienmarchal ! . I've done most of your enhancements, but I can't figure out what tests we can create for this PR. ; Do you have some suggestions ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-323296216:112,test,tests,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-323296216,1,['test'],['tests']
Testability,"Thank you for your report @louise-scherrer . This segmentation fault is indeed a bug, and should be prevented. Here is the call stack to the fault:. ```; -> return m_trianglesAroundVertex[i];; const MeshTopology::TrianglesAroundVertex& MeshTopology::getTrianglesAroundVertex(PointID i); bool LocalMinDistance::testValidity(Point &p, const Vector3 &PQ); int LocalMinDistance::computeIntersection(Point& e1, Point& e2, OutputVector* contacts); int MemberElementIntersector<Point, Point, LocalMinDistance>::intersect(core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector* contacts); void BruteForceDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void NarrowPhaseDetection::addCollisionPair(const std::pair<core::CollisionModel*, core::CollisionModel*>& cmPair); void DefaultPipeline::doCollisionDetection(const helper::vector<core::CollisionModel*>& collisionModels); void PipelineImpl::computeCollisionDetection(); ...; void CollisionAnimationLoop::computeCollision(const core::ExecParams* params); void FreeMotionAnimationLoop::step(const sofa::core::ExecParams* params, SReal dt); ```. I'll try to further look into this. We should try to find the best place to prevent this kind of fault without impacting too much the computation time.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329:310,test,testValidity,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-411679329,1,['test'],['testValidity']
Testability,"Thank you for your response. Yesterday I tried with my home PC and it occured that error. Today I'm trying with my office PC and it occurs another error but still in the same process. Here is the log:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giangnguyen/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.10"") ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topology.Mapping; Adding module Sofa.Component.Topology.Utility; Adding module Sofa.Component.Visual; Adding module Sofa.Component.LinearSolver; Adding module Sofa.Component.LinearSolver.Iterative; Adding module Sofa.Component.LinearSolver.Direct; Sofa.Component.LinearSolver.Direct: using built-in metis library; Adding m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:196,log,log,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,2,"['Test', 'log']","['Testing', 'log']"
Testability,"Thank you for your update @nhnhan92 ; I added two reviews in the code. Regarding the license, we need the SOFA header to be added in order to display the official license of the project. If this is not possible, an alternative would be to create a dedicated plugin which could have its own open-source license. Finally, a last question would be : would it be possible to have a regression test comparing your material with a analytical/manufactured solution?. Thanks again for this nice piece of work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-776748349:389,test,test,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-776748349,1,['test'],['test']
Testability,"Thank you sergeiNikolaev, for the compontent and for the tests :) . I was writing a long answer...then I looked at the BoxROI implementation and noticed it already implemented axis aligned box and oriented box with the 'orientedBox' parameter. . Maybe it does not work for you and there is bug or it doesn't match what you wanted to do in that case can you provide more details please.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357303877:57,test,tests,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357303877,1,['test'],['tests']
Testability,"Thanks @EulalieCoevoet for this nice contribution. . It is still unclear to me if instead of having the extension passed by changing the SceneChecker API it would not be a better to use Base::getInstanciationSourceFileName(). . @alxbilger, what is your opinion ? . [ci-build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1155084064:287,test,tests,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1155084064,1,['test'],['tests']
Testability,Thanks @damienmarchal . I guess you tried to run the tests on SP3 to see if your patch was fixing the original issue?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-748716799:53,test,tests,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1668#issuecomment-748716799,1,['test'],['tests']
Testability,Thanks @damienmarchal :+1: ; Could you explain how the new test `checkRigidAttribute` ends up using the `operator>>` you fixed?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/993#issuecomment-484428288:59,test,test,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/993#issuecomment-484428288,1,['test'],['test']
Testability,Thanks @jnbrunet for the interesting feedback indeed.; I can run the tests!. Agreed @damienmarchal ; What is this DISPLAY_TIME!?! wtf!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-594847317:69,test,tests,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-594847317,1,['test'],['tests']
Testability,Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; - Is any test available with these new classes?; - is there any example scene?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616496056:111,test,test,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616496056,1,['test'],['test']
Testability,Thanks @tgaugry your PR solves the issue. I tested it on my side.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/914#issuecomment-461026691:44,test,tested,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/914#issuecomment-461026691,1,['test'],['tested']
Testability,Thanks Eric for the fixes and the additional test. Your answer about GridTopology rise other questions:; - If the component is not supposed to be used without being inherited... shouldn't we remove it from the factory ?; - If a class is not a component does not mean we shouldn't test it. Actually my feeling is that base class (as they are shared) are very good entities to test :) . EDIT: Maybe these questions should be for a new Issue and not to handle in this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301445540:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301445540,3,['test'],['test']
Testability,"Thanks Guillaume for the safe-guard eyes. ; A 2 character fix later now all the tests are passing so I switched the status ""to review"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/335#issuecomment-318203462:80,test,tests,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/335#issuecomment-318203462,1,['test'],['tests']
Testability,"Thanks Jérémie,. The remaining failing tests are our classic failures so this PR seems ok to me. ; @guparan Can this one be set to the flag ready for merge ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308375664:39,test,tests,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308375664,1,['test'],['tests']
Testability,"Thanks a lot @fredroy . Can you share your test scene?. Also, what happen if the default 3x3 block sparse matrix is used with something else than 3D DOFs? For example, with rigids?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-827541222:43,test,test,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-827541222,1,['test'],['test']
Testability,Thanks a lot for your contribution @dennis2society ; Last check using the MacOS continuous integration. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198#issuecomment-1746423490:124,test,tests,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198#issuecomment-1746423490,1,['test'],['tests']
Testability,"Thanks again for this nice contribution @nhnhan92 ; Sorry I had prepared many similar feedback as @epernod so, some might be duplicated. A more general remark, could you point us out the documentation you used to write this code please?; Do you have an idea of when you would plan to consider rotations around the z axis?; I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!. If this is too much questions, we can discuss about this live if you'd like",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773359209:360,test,tests,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773359209,3,['test'],"['test', 'testing', 'tests']"
Testability,Thanks erwan for the test.; The warning is also there in release. Maybe the problem is specific to Thomas application. ; Each application has to define and set-up its way to handle the messages. Have a look in runSofa on how it is one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328104201:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328104201,1,['test'],['test']
Testability,"Thanks for replying, actually it worked, when I used the dll files of binary release of SOFA v23.06, But there was some issue when I load the demo scene of caudeus.scn, Here are the errors which were printed on the console of Unity editor:. ```; SofaContext::OnDestroy stop called.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceExcep",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:301,Log,Log,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,3,['Log'],['Log']
Testability,Thanks for reporting the issue. It should be fixed in https://github.com/sofa-framework/sofa/pull/3727. Are you able to test the branch to confirm?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468328518:120,test,test,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468328518,1,['test'],['test']
Testability,"Thanks for reporting this issue @margaretkoehler. . > GuiDataRepository.addFirstPath(Utils::getSofaPathTo(""share/sofa/gui/runSofa/resources/"").c_str()) ;. Does it fix the problem ? If yes, we need to test it on other OS. . I will investigate it tomorrow afternoon during the coding friday. Feel free to join us for helping :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/577#issuecomment-360522585:200,test,test,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/577#issuecomment-360522585,1,['test'],['test']
Testability,Thanks for the PR and sorry for the delay. FileMonitor.updateNoChange_test is failing (regression) on MacOS: https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options/4289/testReport/(root)/FileMonitor/updateNoChange_test; Do you know why?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/105#issuecomment-273787691:168,test,testReport,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/105#issuecomment-273787691,1,['test'],['testReport']
Testability,Thanks for the answer @epernod ; Others opinion? @hugtalbot @fredroy @alxbilger @damienmarchal . :arrow_right: To keep the non-CUDA scenes tested by CI: click on the :+1: below; :arrow_right: To ignore all the scenes: click on the :-1: below,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2042#issuecomment-831078438:139,test,tested,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042#issuecomment-831078438,1,['test'],['tested']
Testability,"Thanks for the changes, . @epernod, do you have time to add tests to validate the new features you introduced ? ; (I know that you made examples but examples are not as informative as tests to detect regression)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273193002:60,test,tests,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273193002,2,['test'],['tests']
Testability,Thanks for the feedback @untereiner maybe it is because in batch mode there is no opengl context. ; If I remember correctly this crash macos's tests that way. . Can you providing line/file that cause problem ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357533958:143,test,tests,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357533958,1,['test'],['tests']
Testability,"Thanks for the feedback,. I totally agree that O(log n) as well as memory/indirection optimization would be nicer but this topic should have its own issue. About the checking...I also like the idea of the Visitor and this is very consistent as we already have existing SceneCheckerVisitor.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323972382:49,log,log,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323972382,1,['log'],['log']
Testability,"Thanks for the feedbacks,. This seems related to the fact that Engines are designed to be data flow oriented and, keeping that in mind, we shouldn't break the general design of engines. But, it also appears that in several scenarios, ROIs are used to select features, eg 'position', but not necessarily at initialization time and not necessarily at rest_position and that there may not have an associated 'not changing' data field. My impression is that being able to pick a set of features from data field in a quick way, at controlled instant, is as desirable as not breaking the Engine logics. . What do you think about refactoring that and separate the two behaviors in different components. BoxROISelector and BoxROIEngine ?. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258126238:589,log,logics,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/38#issuecomment-258126238,1,['log'],['logics']
Testability,"Thanks for the review @damienmarchal . However I'm not sure what you are expecting for the tests based on BaseTest? My modification is needed for the compilation of these cpp files, I didn't go further than this.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-397580596:91,test,tests,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-397580596,1,['test'],['tests']
Testability,"Thanks for the solution @epernod. I tested, and it works well now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2147654185:36,test,tested,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2147654185,1,['test'],['tested']
Testability,Thanks for the tests...actually I was more thinking to remove the forceFloat data field that was just here for testing purpose. What is your opinion ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069#issuecomment-498195211:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069#issuecomment-498195211,2,['test'],"['testing', 'tests']"
Testability,"Thanks for the tip! It's been some time since I've used `git bisect`, so I might be mistaking, but for me the only way to judge if a commit is 'good', is to recompile and test the scene I was mentioning at each iteration of bisect, right ? In which case the process could take a bit of time... I'll keep you updated if I go through !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866:171,test,test,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3510#issuecomment-1332408866,1,['test'],['test']
Testability,"Thanks for you feedback @epernod. I think your suggestion is the more natural. Actually, I tried to set `printLog` in a log, to see if it was already working (but no). But I always feel uncomfortable when modifying such an important base class. I don't want that some classes become God classes. That's why I did not touch the Node class. But I am definitively open to discussion",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1196614783:120,log,log,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162#issuecomment-1196614783,1,['log'],['log']
Testability,"Thanks for your PR @gaurab4163 :+1: . I'm not sure about the place (file and namespace) this function should be. @damienmarchal you have a clearer vision of logging and messages in SOFA, what do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-381898967:157,log,logging,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-381898967,1,['log'],['logging']
Testability,Thanks for your commits @matthieu-nesme ; Any idea why Compliant tests are failing?. ```; [----------] 6 tests from Batch/Python_scene_test; [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/0; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:65,test,tests,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,['test'],['tests']
Testability,"Thanks for your fast answer !. I will rename the extension of the C++/shader file.; As a side note, this file is using [Raw String Litterals](https://en.wikipedia.org/wiki/C++11#New_string_literals), as it allowed me to directly copy-paste content of the shader file into a string (without escaping end-of-line, quotes, etc.); I will also remove the std::cerr/cout to use the msg_ api.; Finally, one test is failing on MacOS (only!) about filemonitor because of my commits and I dont really know why ?? (FileMonitor.updateNoChange_test)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276340122:400,test,test,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276340122,1,['test'],['test']
Testability,"Thanks for your feedback,. We need examples of use of Data & Base conversion to add in the tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307789319:91,test,tests,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307789319,1,['test'],['tests']
Testability,"Thanks for your feedbacks. . @matthieu-nesme I agree with you about adding Data to base. This was discussed in; issue https://github.com/sofa-framework/sofa/issues/44 for which there was no clear conclusion so I still have no clear idea on what to do. My current thinking is that fundamentally Data are good (among other things they are a big part of the sofa UIs as well as offer saving capabilities)...the problem is that their init cost is too high. Instead of not using them shouldn't we accelerate that ? (To restart the discussion I have added few benchmark to the issue https://github.com/sofa-framework/sofa/issues/44). . @thomas-lemaire You are totally right about the printLog. Actually this was my long term target. But as I didn't wanted to break everything I just set-up the foundation of an alternative in this PR, to have your feedbacks, try the feature on few component then do the changing and cleaning all around in a second PR. Could we pursue the discussion in a dedicated issue (https://github.com/sofa-framework/sofa/issues/160) to define how we should do the general cleaning.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276751927:554,benchmark,benchmark,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276751927,1,['benchmark'],['benchmark']
Testability,"Thanks guillaume for the investigation,; The easy solution is to use msg_warning instead (restoring the old behavior). ; But shouldn't something that prevent the component to work be reported as an error and thus we should fix the test ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331839847:231,test,test,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398#issuecomment-331839847,1,['test'],['test']
Testability,"Thanks, that's a start but not quite refactored. Here is a proposal (not tested):; ```cpp; int BatchGUI::mainLoop(); {; if (groot); { ; bool infiniteLoop = (nbIter == -1);. if (infiniteLoop); { ; msg_info(""BatchGUI"") << ""Computing "" << nbIter << "" iterations."" << msgendl;; }; else; {; msg_info(""BatchGUI"") << ""Computing infinite iterations."" << msgendl;; }. sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; msg_info(""BatchGUI"") << sofa::helper::AdvancedTimer::end(""Animate"", groot.get()) << msgendl;; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());; sofa::simulation::Visitor::ctime_t rtfreq = sofa::helper::system::thread::CTime::getRefTicksPerSec();; sofa::simulation::Visitor::ctime_t tfreq = sofa::helper::system::thread::CTime::getTicksPerSec();; sofa::simulation::Visitor::ctime_t rt = sofa::helper::system::thread::CTime::getRefTime();; sofa::simulation::Visitor::ctime_t t = sofa::helper::system::thread::CTime::getFastTime();. signed int i = 2; // one simulation step is animated above; while(infiniteLoop || i <= nbIter); {; sofa::helper::AdvancedTimer::begin(""Animate"");; sofa::simulation::getSimulation()->animate(groot.get());; //As no visualization is done by the Batch GUI, these two lines are not necessary.; sofa::simulation::getSimulation()->updateVisual(groot.get());. if(infiniteLoop && i % 1000 == 0 || i == nbIter); {; t = sofa::helper::system::thread::CTime::getFastTime()-t;; rt = sofa::helper::system::thread::CTime::getRefTime()-rt;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)t)/((double)tfreq) << "" s ( "" << (((double)tfreq)*i)/((double)t) << "" FPS)."" << msgendl;; msg_info(""BatchGUI"") << i << "" iterations done in "" << ((double)rt)/((double)rtfreq) << "" s ( "" << (((double)rtfreq)*i)/((double)rt) << "" FPS)."" << msgendl; ; ; if(infiniteLoop); {; msg_info(""BatchGUI"") << ""Press Ctrl + C (linux)/ ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175:73,test,tested,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/613#issuecomment-378645175,1,['test'],['tested']
Testability,That looks great ! I did not have the time yet to test. Maybe we could have a look at the following implementation for the test bench ? ; [HOBAK](https://github.com/theodorekim/HOBAKv1) the code repository used by the paper authors; [Libgl](https://github.com/iyht/Stable-Neo-hookean-Flesh-Simulation) implementation of Stable Neo hookean energy,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024881248:50,test,test,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024881248,2,['test'],['test']
Testability,"That script is used to parse the output of the AdvancedTimer in a Python scene to plot it. One of the function bindings has changed name, but this change was not reflected in the script. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/458:438,test,test,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/458,2,['test'],['test']
Testability,"That's an interesting explanation @fjourdes and it seems you raise an issue to solve if we need an efficient way to manage points/vertices/whatever in the MechanicalObject.; However as you say, TopologyData is actually NOT used in MechanicalObject. Therefore it is totally safe to comment/remove `#include SofaBaseTopology/TopologyData.inl` . I assume that it was forgotten when people attempted to use the new topology engine system for MechanicalObject (and unfortunately gave up). A PR should be issued with the removal, in order to be sure that everything does not change at all (I checked on my setup and the tests ran smoothly; but it would be better to test with the ""options"" configuration)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091:614,test,tests,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295322091,2,['test'],"['test', 'tests']"
Testability,"That's were it goes non-logical...; Historically, in SOFA we have:; ```; SofaFramework package; SofaCore: SofaKernel/framework/sofa/core; SofaDefaultType: SofaKernel/framework/sofa/defaulttype; SofaHelper: SofaKernel/framework/sofa/helper; SofaSimulationCore: SofaKernel/framework/sofa/simulation; SofaSimulation package; SofaSimulationCommon: SofaKernel/modules/SofaSimulation/SofaSimulationCommon; SofaSimulationGraph: SofaKernel/modules/SofaSimulation/SofaSimulationGraph; SofaSimulationTree: SofaKernel/modules/SofaSimulation/SofaSimulationTree; ```. So by just changing the install dir of SofaSimulationCore we will retrieve consistency between install architecture and CMake packages.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540495837:24,log,logical,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1180#issuecomment-540495837,1,['log'],['logical']
Testability,"The 20 new unit tests failures are still there, certainly caused by 092b19fd8e922d155a459de09f002f1815ce9a16.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355829:16,test,tests,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355829,1,['test'],['tests']
Testability,"The BIG one. based on:; - #2717 (for one file moved in core). Deprecates _SofaDeformable_, _SofaObjectInteraction_, _SofaGeneralDeformable, SofaGeneralSimpleFem, SofaMiscFem, SofaNonUniformFem_; Deprecates partially _SofaRigid, SofaSimpleFem, SofaGeneralObjectInteraction, SofaMiscForceField_. Create a meta-module **SolidMechanics**, managing mechanics for mechanical object in a scene (internal forces?); It is composed of ; - **Spring**: with spring-system related components; - **FEM**: an other meta-module containing:; - **Elastic**: elastic FEM; - **HyperElastic**: hyperelastic FEM with materials; - **NonUniform**: non-uniform FEM ; - **TensorMass**: tensormass related components . ### Remarks, questions; - One Spring component has not been included (yet?), namely BoxStiffSpringForcefield, as it is meta-component; it would add dependencies on other module (Engine); - ~~The rest of the components implementing core::ForceField are things applying ""external"" forces on it, so we may create a whole category for them (not defined in the draft)~~ -> see #2783 . ~~SofaCUDA wont compile for the moment (WIP)~~, as the compatiblity files wont work. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2759:1696,test,test,1696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2759,2,['test'],['test']
Testability,The BaseObject::draw() function should be used only for debugging purposes.; The BaseObject::draw() function is called when pass is standard and it is rendered before any VisualModel. Any overlay text rendered in BaseObject::draw() function is not visible. This line change allows every component to display overlay text (for debugging purposes) always at the top in the viewport in the draw() functon. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/929:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/929,2,['test'],['test']
Testability,The CGAL version provided in Unbuntu 18.04 LTS is 4.11 and it seems this version is now expecting that the CGAL_MESH_3_VERBOSE needs to have a value. . Otherwise it fails to compile.; The fix is minor so please consider merging it ASAP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/664:490,test,test,490,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/664,2,['test'],['test']
Testability,"The CI does not look happy, but I think it's nothing:. for Linux: some permission error at CMake phase. and Windows: ; - `139 - see BUILD_URL/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/SimpleBox-Method2.scn/output.txt`; - `3 - see BUILD_URL/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt`. + scenes not working:; HexahedronCompositeFEMMapping.scn; HexahedronCompositeFEMForceFieldAndMass.scn",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-646697637:174,test,tests,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397#issuecomment-646697637,2,['test'],['tests']
Testability,The CI finished but the dashboard is not up-to date.; The test failure are pre-existing to the PR. So I merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314#issuecomment-316832128:58,test,test,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314#issuecomment-316832128,1,['test'],['test']
Testability,"The CenterOfMassMapping, requires a Mass associated with its parent MechanicalState.; The initial code relies on a call to fromModel()->getContext()->getMass() to retrieve the associated mass, and did not propose a way to set explicitely the mass to use.; The mass was stored in a pointer during init(), and we want to use singleLinks instead, to keep track of how components interact with each other. The initial goal of this PR was to get rid of getMass in BaseContext(), but we want your opinion on how to do this, especially for the case of MultiMapping (CenterOfMassMultiMapping):. 1. add a SingleLink to the mass in the MechanicalState; 2. store a list of the masses associated to the list of models in CenterOfMassMultiMapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1184:986,test,test,986,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1184,2,['test'],['test']
Testability,"The Config.cmake.in was not consistent with the actual CMakeList.txt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3576:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3576,2,['test'],['test']
Testability,"The Data had always the prefix `(V_COORD)`. Now it really depends on the type. The bug has been introduced in https://github.com/sofa-framework/sofa/pull/2811. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2872:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2872,2,['test'],['test']
Testability,"The Data's hold their actual content within a dedicated container called DataContentValue.; Two versions of this containers exists, on holding the data using a copy-on-write mechanism while an other is using a systematic copy. . Currently the selection is based on the content of DataTypeInfo, I found it more explicit and clear to rely on type_traits to select the proper DataContentValue version. . ```console; Caduceuse, 10 000 iterations:; - master: 24.15 s; - copy on write to true: 24.2 s; - copy on write to false: 23.78 s; - copy on write to is_scalar: 25.0 s; - copy on write to !is_scalar: 23.0 s. collisionMultiple.scn, 1 000 iterations:; - master: 15.9 s; - copy on write to true: 15.9 s; - copy on write to false: 14.7 s; - copy on write to is_scalar: 16.3 s; - copy on write to !is_scalar: 14.5 s; ; beam16x16x76-hexafem-rk4-CPU.scn: 2000 iterations; - master: 1 m 30; - copy on write to true: 1 m 32; - copy on write to false: 1 m 30 ; - copy on write to is_scalar: 1 m 26; - copy on write to !is_scalar: 1 m 18; ; TorusFall: 4000 iterations; - master: 41.5 s; - copy on write to true: 43.9 s; - copy on write to false: 41.2 s ; - copy on write to is_scalar: 43.3 s ; - copy on write to !is_scalar: 42.5 s; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2285:1766,test,test,1766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285,2,['test'],['test']
Testability,"The LateSpecialization pattern, introduced in https://github.com/sofa-framework/sofa/commit/1b92a802eb69693af65f2094f02f9a734d333804, was used to avoid code duplication between float and double specialization of Rigids. However, now that there is only one specialization, it makes the code more difficult to read. Therefore, I suggest to go for a standard specialization. Note that the diff may be difficult to read, but this PR only moves code (with adaptation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126:1003,test,test,1003,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126,2,['test'],['test']
Testability,"The LinearForceField component does not contribute anything to the matrix when solving a system. Accordingly, the addKToMatrix function does nothing. However, since it is not implemented, it displays a warning when running a simulation. This PR simply adds an empty implementation of that function, which removes the warning displayed by the definition in the base class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/384:623,test,test,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/384,2,['test'],['test']
Testability,"The MechanicalMatrixMapper example scene deserved a bit of love. - Converted to Python3; - Add documentation (the concept of rigidification deserves a more detailed doc somewhere else); - It is possible to change the resolution of the grid while keeping the same behavior: 1) `indexPairs` is built algorithmically, 2) ConstantForceField is applied using a BoxROI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2361:903,test,test,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2361,2,['test'],['test']
Testability,"The MechanicalOperations (mops) already had the method `multiVector2BaseVector` that allows us to fill a BaseVector (one continuous memory vector) from a multi vector (group of vectors contained inside mechanical objects). However, the were no way to do the inverse (build a multi vector from a continuous vector) beside creating a new visitor, which is now done automatically by the mops. This PR is only adding a new method, it is non-breaking. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1248:698,test,test,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1248,2,['test'],['test']
Testability,"The Monitor test is failing, it seems it should investigated @lagarkane",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323333990:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-323333990,1,['test'],['test']
Testability,"The O(n) should be avoided even though; 1. there might already be a O(n) lookup hiding somewhere during insertion; 2. we should be fine in practice; 3. this should really be O(log n) anyways. I like the late check during `getChild/getObject`, and even more so the Visitor approach where all the checks are made in a separate pass (aside: in this spirit we could provide a `check` method just like `init` and a visitor that checks consistency so that we don't have to check stuff all the time during simulation. also: use exceptions for error handling!!). More generally, why do we have objects and children stored in a list? We just need to store pointers to the siblings directly inside nodes/components instead of the extra memory/indirections, especially if we're using lists.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428:176,log,log,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323954428,1,['log'],['log']
Testability,"The PLUGIN_SOFASPHFLUID option was not taken into account by the CUDA plugin, so it would try to link against that plugin even if it was not compiled with SOFA. There was also a file that was included twice in CMakeLists.txt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/523:477,test,test,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/523,2,['test'],['test']
Testability,"The PR https://github.com/sofa-framework/sofa/pull/2943 replaced by mistake the ""activated"" with the ""currentIndexChanged"" one. But there is a slight difference between the two as currentIndexChanged can be called with; -1 (which makes the connected slot crash). To revert back to the ""activated"" signal instead (but using the modernized syntax). This PR fix issue #3017 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3018:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3018,2,['test'],['test']
Testability,"The PR just adds the template ""Vec1,Vec3"" to the component MechanicalMatrixMapper. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1703:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1703,2,['test'],['test']
Testability,"The ReadScene_test not passing is explicitly said so in the PR description, this is a new test showing an existing wrong behavior in Sofa (i.e. not sending an error message when trying to load an invalid faile). [ci-build][with-scene-tests] will say if my last commit fixed the old scene failing",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648:90,test,test,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648,2,['test'],"['test', 'tests']"
Testability,"The SOFA version of cleaning the Augean stables... 🐴. Make it compile and run (for the quadSpring scene); And does not need the sofaOPENCL application. Compile with the SofaSphPlugin as well, but the example scene crashes somewhere in the OpenCL kernel... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1361:507,test,test,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1361,2,['test'],['test']
Testability,"The SceneCreator is now based on the plugin manager to load its dependency. ; It seems that when compiling in debug the plugin names are changed. In this PR I added to the PluginManager a way to search for ""debugging"" names when Sofa is compiled in debug. . This should fix the failling tests on options_debug on master reported in #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:287,test,tests,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,3,['test'],"['test', 'tests']"
Testability,"The SofaBaseMechanics_test were probably broken. ; They were not in-heriting from SofaTest neither BaseTest. This means that uncatched msg_error() should generate test failure while they should. . In this PR I implement the proper behavior, so now several tests are ""correctly failing"" :) ; And I fixed the tests.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832:163,test,test,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832,5,['test'],"['test', 'tests']"
Testability,The TaskScheduler keepThreadsActive virtual function can be overridden to allow to change worker threads waiting policy when there are no tasks to steal. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/934:405,test,test,405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/934,2,['test'],['test']
Testability,"The WIN32 implementation is lowering the case of the given path. This is; not consistent with other case insensitive OS like macos and is discussed in:; https://github.com/sofa-framework/sofa/pull/250. In this PR I deprecate this 'lowering' behavior, adds a dedicated message & I updated; the calling point all around Sofa. Code updated shouldn't print any message but un-touched one should continue working as usual and prints the deprecated message to indicate to user they must update. CHANGELOG:; - [SofaKernel]; - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior. ; . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/264:839,test,test,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/264,1,['test'],['test']
Testability,The [ReadState test](https://github.com/sofa-framework/sofa/blob/0da3f6e1aef69318838c4a363e017d7901f14483/modules/SofaGeneralLoader/SofaGeneralLoader_test/ReadState_test.cpp#L76) is not passing due to error not emitted. and all scenes with XspLoader are crashing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465493555:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465493555,1,['test'],['test']
Testability,"The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458:163,test,testReport,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1653274458,1,['test'],['testReport']
Testability,"The `BaseCamera` is computing the scene center point and scene radius based on the current bounding box. The `InteractiveCamera` is using these information to compute the zoom/translation speed when navigating in the scene with mouse events. . Since the `BaseCamera` was computing the scene center point and radius only when `BaseCamera::p_computeZClip` was true, when manually giving the z-clip values, the interaction was not working at all (`sceneCenter` and `sceneRadius` were 0, hence the zoom/translation speed were 0). This was only visible when using the `QtViewer` since the `QglViewer` is using its own internal camera and is ignoring the cameras added to the scene. This PR also fixes the caduceus scene as it was using a `Camera` instead of `InteractiveCamera`, which isn't listening to mouse events at all, hence navigating with the mouse wasn't possible with the QtViewer. A little bit problematic when it is the default scene of runSofa.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1377:1205,test,test,1205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1377,2,['test'],['test']
Testability,"The `LCPConstraintSolver` in its unbuilt version crashed when a contact does not have an associated constraint correction, because of a null pointer dereference. Now, the pointer is checked for null. Also, if there are only contacts without constraint correction, the algorithm stops. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2222:824,test,test,824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2222,2,['test'],['test']
Testability,"The abstract class `BaseNonLinearMapping` is introduced. All mappings from the folder, except `RigidMapping`, inherit from `BaseNonLinearMapping`. The class relies on the delegate pattern to simplify the implementation of non-linear mappings. All the affected mappings relied on the same design, so it made sense to factorize common code in a base class. Breaking because I removed some aliases, made some methods final etc. What I would like for a next work is to factorize the 3 methods `buildGeometricStiffnessMatrix`, `applyDJT` and `updateK` (if possible). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5006:1101,test,test,1101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5006,2,['test'],['test']
Testability,"The access to the pointer of data &ptr[0] have been replaced by the use of .data() in PR #279 . This generate a problem because helper::vector is specialized for cuda (thanks to the MemoryManager) in vector_device.h. This type of vector mimic a std::vector but it does not implement all the functions of the stl. If new functions are necessary they must be also implemented in this vector_device class, but the consistency of data must be CAREFULLY checked. Indeed a cudavector has data both on the CPU and the GPU and one must guarantee that the accessed data is the correct one. This PR add the missing function in vector_device to make it match the API of helper::vector. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/320:928,test,test,928,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/320,2,['test'],['test']
Testability,"The added scene is failing because CUDA scene are not tested on the CI. Add the scene to the ignore list, then rebase, then ready",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3868#issuecomment-1569702789:54,test,tested,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3868#issuecomment-1569702789,1,['test'],['tested']
Testability,"The assert triggers in the following case:; A SphereROI is defined in a Python script. In order for the outputs to be used right away, it must be initialize by the Python script, just after its definition.; But when the scene is completely defined, a visitor calls again the init method. So the assert triggers in case the addInput method is called multiple times (like in the example I gave). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2822:4,assert,assert,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2822,4,"['assert', 'test']","['assert', 'test']"
Testability,"The blinking test crash comes from Assembly_test.cpp:1051`createCompliantString( root, p0, p1, 2, 2.0, 1.0/stiffness, false, 1.0 );` (in Compliant plugin).; Could someone understanding this code investigate further?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-479873379:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-479873379,1,['test'],['test']
Testability,"The block size (2x3) did not make sense with regards to the matrix size (4x8). I changed the block size to 2x4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3832:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3832,2,['test'],['test']
Testability,The branch is already up-to-date. The failing unit tests are legit. They have to be fixed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340647498:51,test,tests,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1340647498,1,['test'],['tests']
Testability,"The broken tests are caused by new error messages introduced by converting serrs into msg_errors. the number of errors should be updated in the tests. @epernod has a waiting PR doing just that, so I suggest that we merge and wait for erik's fixes in his own PR, as he suggested himself ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-461874062,2,['test'],['tests']
Testability,"The bwdInit is used to implement a bugfix that seems to be fixed in a more approriate way elegant way in BaseMapping; ```cpp; bool BaseMapping::insertInNode( objectmodel::BaseNode* node ); {; if( isMechanical() ) node->addMechanicalMapping(this);; else node->addMapping(this);; Inherit1::insertInNode(node);; return true;; }; ```. That said, I find annoying these two approaches because they are considering a a problem to have mechanicalmapping in the two list (mechanicalmapping and mapping). If a mechanicalmapping *is a* mapping it makes sense for it to be in the two lists. I don't know what would happend if I remove this behavior... a future PR maybe) . . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3954:1202,test,test,1202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3954,2,['test'],['test']
Testability,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2298:812,test,test,812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298,2,['test'],['test']
Testability,"The case where plugin is smaller than dotExt is not handled by std::equal. See how it works: http://en.cppreference.com/w/cpp/algorithm/equal. An assert is called.; I had the case when dotExt = "".dll"" and plugin = ""PSL"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617:146,assert,assert,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617,3,"['assert', 'test']","['assert', 'test']"
Testability,The changes broke some tests (forcing the strict case).; I will have a look at it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1127#issuecomment-525818506:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1127#issuecomment-525818506,1,['test'],['tests']
Testability,"The class `Simulation` has been refactored:. - It no longer inherits from `BaseObject`; - All the non-pure virtual methods have been deprecated. Instead, their equivalent are available as free functions. Indeed, the content did not need to be in a class and `DAGSimulation` did not override them.; - `sofa::simulation::setSimulation` is deprecated. The global variable `Simulation` is set once and for all in the initialization of the `Sofa.Simulation.Graph` module. ⚠️ If `new` is used to provide a new `Simulation`, it results in a memory leak, because `setSimulation` now does nothing. In summary, the type `Simulation` is now only useful to create `Node` instantiations. This feature can be done out of the Simulation class thanks to a refactoring of modules. It will be done later in another PR. Once it is done, the type could be deprecated. In this Pull Request, it is assumed that it is not possible to create another type of Simulation than `DAGSimulation`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/350]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889:1578,test,test,1578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889,2,['test'],['test']
Testability,"The classes were used in a plugin which is no longer maintained. See https://www.sofa-framework.org/community/forum/topic/how-to-use-parallelvisitorscheduler/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3957:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3957,2,['test'],['test']
Testability,"The cmake part of our build process is very slow and is getting slower and slower the more we add plugins/modules and packages.; ; I noticed that commands like include or find_package(XXXXX) imply the search, the loading and the execution of the requested package XXXX each time. . This is very problematic as this scale in an horrible (non linear) way. . So I tried a quick and dirty fix based on inclusion gard, 'à la #ifdef MYFILE_H'. I first checked if the file are really loaded multiple times (and this was the case) and implemented a quick test to stop the loading. . The fix accelerates a lot the cmake time on my machine reducing the generation from 1min20 down to 15 sec. So I'm curious to see if such solution is reliable enough to be used (I consider that if this is not the default design of cmake package there must be a rational behind) and what are the possible drawback. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1464:547,test,test,547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1464,3,['test'],['test']
Testability,"The cmake.in file for SofaGeneralObjectInteraction was missing the two news deps on SofaEngine and SofaGeneralEngine, following the PR on #2621 . Fix #2658; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2659:696,test,test,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2659,2,['test'],['test']
Testability,"The code in `proximity.h` has several problems:. - The classes names are misleading. It makes think that it computes the distance, but it computes the closest points.; - Classes with a single function that could be static. It could be a free function.; - Difficult to find this file in Helper. To me, it makes more sense to put it in Geometry.; - Types mismatch. I separated the 3 functions in dedicated files.; I deprecated the classes and the header. Note: I don't think the LCP approach is the fastest one to compute closest points. ; Not2: `Mat_solve_LCP.h` would deserve a bit of cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3666:1134,test,test,1134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3666,2,['test'],['test']
Testability,"The code in `sofa::helper::gettypename` is similar (almost identical) to `NameDecoder::decodeTypeName`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2482:643,test,test,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2482,2,['test'],['test']
Testability,The code is compiling fine on the CI but **tests are failing** this resize was maybe propagating an info .. @epernod,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-814746750:43,test,tests,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977#issuecomment-814746750,1,['test'],['tests']
Testability,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1845:782,test,test,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845,2,['test'],['test']
Testability,"The code was duplicated 4 times. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4355:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4355,2,['test'],['test']
Testability,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1819:661,test,test,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819,2,['test'],['test']
Testability,"The collision tree were built only if the broad phase algorithm requires it. But it is also up to the narrow phase to decide. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2109:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2109,2,['test'],['test']
Testability,"The comment is wrong.; I need more investigation to be able to write a better one. Till then, I remove the comment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3582:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3582,2,['test'],['test']
Testability,The commit that fix that is ; 910d498493f13ca0c670e7df32e99b8674e7c29d; in the defrost branch. Cherry-picking it & test it is ready to go into master.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/40#issuecomment-254772225:115,test,test,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/40#issuecomment-254772225,1,['test'],['test']
Testability,The commits are touching a single file each and focus on fixing single bug or regression. Could you consider fast-merge ?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/931:374,test,test,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/931,2,['test'],['test']
Testability,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2044:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044,2,['test'],['test']
Testability,"The component FillReducingOrdering, introduced in https://github.com/sofa-framework/sofa/pull/2501, was using the METIS library to reorder the vertices. Now, it is able to use approximate minimum degree algorithm from the Eigen library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2875:776,test,test,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2875,2,['test'],['test']
Testability,"The component has been deprecated in #2777. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3919:583,test,test,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3919,2,['test'],['test']
Testability,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862:1412,test,test,1412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862,2,['test'],['test']
Testability,"The conda package of qglviewer on windows produces libraries prefixed QGLViewer2 instead of QGLViewer. This seems limited to the conda package on windows (does not appear on other OS). Also, the only other libqglviewer package I know for windows, which is vcpkg, is not affected neither (library is properly named QGLViewer). ; I think this should be corrected on conda package side, but meanwhile it ever happens one day, this would solve the problem for now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4611:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611,2,['test'],['test']
Testability,"The construction of xId caused an assert when `cParams->constOrder() == sofa::core::ConstraintOrder::VEL`. It happens only in debug, and it had no consequence because it was not used. Bug introduced in https://github.com/sofa-framework/sofa/pull/4213. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4389:34,assert,assert,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4389,3,"['assert', 'test']","['assert', 'test']"
Testability,"The crash in distanceFieldFilter.scn is no longer here. It makes sense because this PR has nothing to do with the crashing code (but we never know...). Another crash on Windows appeared, but it is also on master (https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/3949/testReport/SceneTests/). So I think this PR is ready to be reviewed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614:340,test,testReport,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1293166614,1,['test'],['testReport']
Testability,"The creation of TriangleSetAlgorithms is not linked to the creation of triangleSetTopologyContainer arrays like edgesInTriangle. what can be possible is that MeshMatrixMass access to edgesInTriangle which is not filled due to the return.; But the return is reached because the input topology is not consistent. And the choice was done to break instead of simulating potential wrong behavior. My question was, in your PR, by removing the return, how many error is dumped if you test #1243 ?. each error means an inconsistency between the Triangle, the Edge and the EdgeInTriangles structure so potentially if FEM is using edges and mass the EdgeInTriangles, you won't fill the matrix in the same order.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577251657:477,test,test,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577251657,1,['test'],['test']
Testability,"The current approach consist in recursively crawling up to the root node of; the scenegraph. Which have linear complexity in the depth of the graph. This PR implements a constant time mecanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3059:733,test,test,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3059,2,['test'],['test']
Testability,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536:1125,test,test,1125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536,2,['test'],['test']
Testability,"The current implementation is printing a deprecation message but the modified ""arg""; are also reported by caller's as error. To avoid that I don't accumulate the deprecation warning in the ""arg"" arguments; and print them immediately. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939:485,test,test,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939,2,['test'],['test']
Testability,"The current implementation of file saving in XML is in fact doing a kind of complete dumping of the state of the objects in the scene. This is bad because this produce totally unreadable scene. . The idea of this PR is to implement a much more ""user friendly"" file saving as described in this issue; https://github.com/sofa-framework/sofa/issues/41. Saving caduceus.scn with the old way look produce a 2Mb file like this: http://pastebin.com/01hfAeAT; while with the current code it is a 3.5Kb file looking like this: http://pastebin.com/K3jzVxcE. Please help to improve it by reporting any problem or patch. . Additional things to do in future PR:; - support saving of scene created from Python (I have a prototype...I'm waiting integration of this PR); - support saving scene to python (with the same readability logic); - fix the broken component that parse directly the xml attribute instead of using data. This is the case of (VisualModelImpl, CubeTopology). These component have to be fixed one by one (including test to validate that there is no regression). ; - implement a more ""dump"" like feature to save a scene that have been simulated. . Checklist to be merge: ; - [ ] succeed on each compilation setup on the CI.; - [ ] does not generates new test failure. ; - [ ] does not seems to break existing scenes. ; - [ ] does not seems to break API compatibility. ; - [ ] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116:815,log,logic,815,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116,4,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"The current implementation of the tensor product of two vectors seems incorrect since it assumes the resulting square matrix is always symmetric.; This is not true in general, for example: ; ```; tensorProduct([0 1],[1 2]) = [0 1]'*[1 2] ; = [[0,0]; [1 2]]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2787:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2787,2,['test'],['test']
Testability,"The current lifecycle mechanism when renaming the symbol of a Data object is depreciating the old data and setting the new data as a parent of the old one : ; `_oldData.setParent(d_newData)`. This is not 100% working, because a setValue on the old data will not be applied on the new one, because a child is only link to the parent by a callback (and not a _feedForward_). This means that a lot of the recent refactoring pr renaming data symbols are breaking. This pr aims at solving this, and is meant to be applied to all the recent pr to solve this issue. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4814:1100,test,test,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4814,2,['test'],['test']
Testability,"The current process of constructing object is very complex, error prone and generates a lot of duplicated code. ; To clean a bit in this PR is:; 1) moving the common code into dedicated and opaque method: ; BaseObject::IsRequiredLinkPathPointingToCompatibleObject...; BaseObject::IsRequiredComponentInContext....; BaseObject::AddObjectToContextAndParse. 2) remove the create or canCreate method that I think where doing nothing more than the default ones (please check). 3) to update to new signature It was needed to update some rare component. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3309:1087,test,test,1087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3309,2,['test'],['test']
Testability,"The data strings are replaced with Links! Finally!. It's obviously breaking but there is one important point: both ConstraintCorrection had a vector of LinearSolver\* while in fact only one was always used. It is now back only to a single pointer. Let's take time to discuss it with others!. @ziqiu-zeng . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3152:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3152,2,['test'],['test']
Testability,"The data strings are replaced with Links! Finally!; Let's take time to discuss it with others!. @ziqiu-zeng. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3155:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3155,2,['test'],['test']
Testability,The deprecated macro `sofa_generate_package` was not forwarded to the correct new macro.; Bug introduced in #1433 . EDIT: I joined a quick fix for SofaSparseSolver related to #1440. **Commits to be backported independently**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1446:477,test,test,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1446,2,['test'],['test']
Testability,"The deprecation layer did not work in some cases (see https://github.com/sofa-framework/sofa/pull/4814). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4866:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4866,2,['test'],['test']
Testability,The details to know:; - where (I vote for the 'salle du conseil' :)); - when (wednesday 4 ?); - who will attend to the coding sprint ? . My dream list:; - SofaNG (pluginizing the modules); - sofaqtquick (only if there is more than 2 QML expert); - Sofa code cleaning (as usual) :) ; - coding standard conformance; - we want more tests (they are crucial for refactoring) !!!; - remove & unify duplicated code (eg...how many fast marching algorithm do we need ?); - remove the not-needed includes. ; - Writing doc :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413#issuecomment-330845349:329,test,tests,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413#issuecomment-330845349,1,['test'],['tests']
Testability,"The directories `screenshots` and `config` are currently created in the `build` directory of SOFA. When installing the software on a machine, those can end up in a read-only directory. . To avoid this problem, this PR changes:. On Linux:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/.config/SOFA/config/` . On Windows:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/AppData/Local/.config/SOFA/config/` . On MacOS:; - `screenshots` location to: `~/Library/Application Support/SOFAData/screenshots/`; - `config` location to: `~/Library/Application Support/.config/SOFA/config/` . These changes have only been tested on Linux. I'm not familiar with MacOS so I don't know what would be the best location. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:683,test,tested,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,3,['test'],"['test', 'tested']"
Testability,"The doc/ repository is removed and it now has its own GitHub repository : https://github.com/sofa-framework/olddoc. Additionally, the useless file `sofa_include_stats.md ` is also removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2889:728,test,test,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2889,2,['test'],['test']
Testability,"The document is not maintained and obsolete. The relevant paragraphs are already in https://www.sofa-framework.org/community/doc/plugins/usual-plugins/multithreading/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3667:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3667,2,['test'],['test']
Testability,"The doxygen comments describe what the new component is. AsyncSparseLDLSolver is compatible to be used with a preconditioned CG (ShewchukPCGLinearSolver) and a WarpPreconditioner. The following scene examples are introduced:; - `examples/Components/linearsolver/FEMBAR-AsyncSparseLDLSolver.scn`: the simplest use case of AsyncSparseLDLSolver. This scene is to compare to `examples/Components/linearsolver/FEMBAR-SparseLDLSolver.scn`. The tests show a significant speed up.; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-AsyncSparseLDLSolver.scn`: AsyncSparseLDLSolver used as a preconditioner for ShewchukPCGLinearSolver; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-NoPreconditioner.scn`: ShewchukPCGLinearSolver with no preconditioner. Similar to the classical CG. Can be used for comparison.; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-WarpedAsyncSparseLDLSolver.scn`: AsyncSparseLDLSolver used as a preconditioner for ShewchukPCGLinearSolver. When the matrix has not been assembled, it is warped using a RotationFinder. This is done using an intermediate component: WarpPreconditioner. All the other scenes from the `examples/Components/linearsolver` folder have been modified so it is easy to change the resolution of the deformable beam. `totalMass` instead of `vertexMass`, and `BoxROI` instead of raw indices. In WarpPreconditioner, an additional Data is introduced to request matrix assembly at a given frequency. This is to minimize the cost of matrix assembly. Instead of assembling the matrix, the old one is used, taking into account the rotations compared to the previous time step. The same mechanism exists in ShewchukPCGLinearSolver. There are some refactoring in SparseLDLSolver to make more elegant code (without duplicated code) in AsyncSparseLDLSolver, but no changes are introduced.; ______________________________________________________. By submitting this pull req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2661:438,test,tests,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2661,1,['test'],['tests']
Testability,The error in the tests came from (applications/plugins/LMConstraint/src/LMConstraint/LMConstraintSolver.cpp) in `init`:; ```cpp; listConstraintCorrection[i]->removeConstraintSolver(this);; listConstraintCorrection[i]->addConstraintSolver(this);; ```; The first line removed the element from the list whereas the element was never added to the list (we are in the `init` method). It is added in the second line.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-940746618:17,test,tests,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364#issuecomment-940746618,1,['test'],['tests']
Testability,"The error pops up in debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1577:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1577,2,['test'],['test']
Testability,"The error was not detected on CI as nobody was using this `MatrixScale` thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2369:618,test,test,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2369,2,['test'],['test']
Testability,"The examples were about components only available into the SofaEulerianFluid plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2833:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2833,2,['test'],['test']
Testability,The existing Binding does not cover the whole feature of the c++ API.; With this PR it does.This is not breaking anything...it only add new features with their associated tests. . This allows python messages and error to be routed to the right component and have it added to its backlog and displayed in the GUIs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/335:171,test,tests,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/335,3,['test'],"['test', 'tests']"
Testability,"The existing code is falling back into the std::runtime_expection if a node's data; is modified and it is not a transformation (which actually happens a lot). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3020:698,test,test,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3020,2,['test'],['test']
Testability,"The extern template instantiations allows to include ` SofaCUDA/config.h` before `ObjectFactor.h`. That is why the module name is defined properly in this PR. The extern template instantiations don't act directly on the module name, just the order of includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4714:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4714,2,['test'],['test']
Testability,The failing test is actually showing there was a bug before :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-987947394:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-987947394,1,['test'],['test']
Testability,The failing test is under investigation but let's merge and create the release branch,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322#issuecomment-1832076559:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322#issuecomment-1832076559,1,['test'],['test']
Testability,The failing tests are now fixed... ready when the compile is over ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391701836:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391701836,1,['test'],['tests']
Testability,"The failing tests were mainly due to a unintended side effect that projective constraints were no longer applied at the end of Simulation::init(). To make sure similar issues were not hidden somewhere else, in the last commit I renamed the propagate visitor to make sure existing codes fail at compilation time. Fixing other codes in private/external repos should be easy:; - if projective constraints should not be applied, simply apply the rename to the visitor class; - if projective constraints should be applied, add a MechanicalProject???Visitor first, then rename the existing one. This information should be added to the changelog, but as far as I understood this needs to be done after the PR is merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308269542:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216#issuecomment-308269542,1,['test'],['tests']
Testability,"The fails again... the mac_clang-3.4 succeeded (I restarted but the previous build was here; https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options_pr3/25/console); And the additional failure in test scenes is because some machines still don't have the libjpeg/tiff library installed (se macos pr3 ) :) . @guparan, @hugtalbot if you are passing by please considere merging the PR because we need it monday morning for our group writing of tutorials for Sofa :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877:194,test,test,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357312877,1,['test'],['test']
Testability,"The feature was used ; removing it has already been discussed many times and refused"" but having something discussed or used (a long time ago) shouldn't be an argument not to ""refresh"" the discussion (in the last 10 years things have changed in term of hardware as well as we have now more insight on the intrusiveness of the selected approach). Having the featured re-discussed again is probably an indication that something is somehow problematic :) . As I said before there is fact two different issues...one is about mixing in the same scene object/solver with different floating point representation while the other is about having SReal mapped to float or double by default. . The current approach, despite it does not match individual preferences, makes a relative consensus: ; SReal to be switched via a define; Vec3 that is using SReal; Vec3d that is using double; Vec3f that is using float; We use vec3d or vec3f when we want to be explicit on the type or we use Vec3 if we don't. And of course life would be easier if everyone agreed to use double only code (or according to Matthieu's opinion float only) but I don't think this will happen soon ;) . To me the real problem is not there, it is in how we have implemented the mixing in the same scene object/solver with different floating point representation. Our current implement is based on instantiating templates in the factory for each types so that when the types matches the objects can work together without conversion cost. ; This design is implemented with the conditional #ifdef SOFA_FLOAT/SOFA_DOUBLE and is very intrusive (our code is harder to write/read/understand, easy to forget things and/or have 'hidden' or subtle bugs (confirmed by the quick test made by @vmagno)) while there is only very specific gain in certain limited use case. . So we are trading run-time speed for a development cost. But the use case is very rare that we may wonder if other approach shouldn't be preferable (eg: a conversion layer instead) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/495#issuecomment-342102732:1761,test,test,1761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/495#issuecomment-342102732,1,['test'],['test']
Testability,"The file `DisplayFlags.h` contained 3 classes. Now each class has its own specific file. Unit tests on DisplayFlags are added. In my previous proposition, I added an error message when a flag was unknown, and giving suggestions for closest matches. This error message was put directly when reading the flags as a string in the `FlagTreeItem` class. Now, the `FlagTreeItem` triggers the error message, but the function to trigger, including the code for the message, is now in `Data<DisplayFlags>`. Since `Data<DisplayFlags>` is a template specialization that is put in `Data[DisplayFlags].h`, you need to include `Data[DisplayFlags.h]`. If you do that, the owner of the `Data<DisplayFlags>` will know an error happened. Therefore, it will have an error icon in the GUI and the user can consult the errors in the GUI. Before, the component was not aware.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169:94,test,tests,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575#issuecomment-1385224169,1,['test'],['tests']
Testability,"The file does not seem to be used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4244:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4244,2,['test'],['test']
Testability,The file was still using the old .h location for RGBAColor. ; Replace to the new ones. ; It was also include DataFilename which was pointless. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1346:394,test,test,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1346,2,['test'],['test']
Testability,"The fix from Eigen https://gitlab.com/libeigen/eigen/-/commit/80142362ac35ca77bfc5ccf7ba49c9f034b57abc, making `SparseMatrixProduct` compile, is available starting 3.3.5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4630:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4630,2,['test'],['test']
Testability,The fix worked. Regression tests are back on CI :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1881#issuecomment-789115644:27,test,tests,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881#issuecomment-789115644,1,['test'],['tests']
Testability,"The following code create memory leaks:. ```cpp; static const BaseClass* get(); {; static TClass<T, Parents> *theClass=new TClass<T, Parents>();; return theClass;; }; ```. To remove the memory leak, it has to be replaced by:. ```cpp; static const BaseClass* get(); {; static TClass<T, Parents> theClass;; return &theClass;; }; ```. However, `Parents` can be a `std::pair`, which one of the pair type can be an abstract type. Since it is not possible to instantiate an abstract type, the compilation fails. This PR removes the use of `std::pair` to introduce a structure that does not need to instantiate the types. The compilation now succeeds. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3183:1184,test,test,1184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3183,2,['test'],['test']
Testability,The following scenes must be fixed because they show warnings or error messages. ```; [INFO] [PluginFinder] Found 6 files with advice:; examples\Benchmark\Performance\MatrixAssembly\MatrixAssembly_direct.scn; examples\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\Topologi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:145,Benchmark,Benchmark,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Benchmark'],['Benchmark']
Testability,"The following warnings appears everytime a Link is declared:. https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-1-c4305?view=msvc-170. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3763:718,test,test,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3763,2,['test'],['test']
Testability,"The function `buildDampingMatrix` was introduced in #2777. By default, if a component does not implement it, it will call the implementation from `BaseForceField` which calls `addBToMatrix` with a warning message. This is the compatibility layer.; Therefore, I implemented `buildDampingMatrix` everywhere there is no `addBToMatrix` implementation. It will avoid to display the warnings of the compatibility layer and explicit the fact that there is no damping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3948:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3948,2,['test'],['test']
Testability,"The function `sofa::helper::system::DataRepository.findFile` triggers a `msg_error` if the file is not found. In the case of `PrecomputedConstraintCorrection`, an error is not appropriate because the file can be generated. Instead I used `msg_info`. Because the log message contained trailing line breaks, I introduced a couple of utility functions to remove them. Example of output:. ```; [INFO] [PrecomputedConstraintCorrection(PrecomputedConstraintCorrection1)] File SquareCloth1-675-0.04.comp NOT FOUND in :C:/Users/Alex/Dev/sofa1/src/share:C:/Users/Alex/Dev/sofa1/src/examples:C:/Users/Alex/Dev/sofa1/builds:C:/U; sers/Alex/Dev/sofa1/builds. Compliance will be pre-computed and saved into a file; ```. It fixes a scene test from https://github.com/sofa-framework/sofa/pull/4106. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4108:262,log,log,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4108,4,"['log', 'test']","['log', 'test']"
Testability,"The function is no longer used. I think it was never used at all in the master branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4620:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4620,2,['test'],['test']
Testability,"The function is not working at all and was not tested. In this PR:; - add tests for relativePathTo, following the existing function documentation.; - fix the function. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2350:47,test,tested,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2350,4,['test'],"['test', 'tested', 'tests']"
Testability,"The function pluginIsLoaded is not behaving as it name suggest and does not detect plugin that have not been loaded using an absolute file path. . See: ; https://github.com/SofaDefrost/plugin.SofaPython3.deprecated/issues/137. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:766,test,test,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,2,['test'],['test']
Testability,The functions ParallelFor and ParallalFor2d make the for loop parallelization easier to write.; They internally used the task scheduler and automatically perform the the tasks partitioning and creation. ParallelFor is used to parallelize for loops iteration on one index.; ParallelFor2d is used to parallelize for loops iteration on two indices. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/902:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/902,2,['test'],['test']
Testability,"The goal is to comment useless warnings.; The following line was introduced to deprecate ExtVector. However, before adding this line it is necessary to remove all the use of ExtVector in the core of sofa. Indeed, the current compilation generates thousand of warnings and slow down significantly the compilation. In addition, remove the possibility to exploit other warnings since too much information is printed. . //[[deprecated(""since 19.06, ExtVector is deprecated. Use helper::vector instead. Will be removed in 19.12"")]]. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1144:779,test,test,779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1144,2,['test'],['test']
Testability,"The goal is to reduce the number of alias declarations. I propose 2 methods:. 1. using traits (for example `DataVecCoord_t<Out>`). This is illustrated in `Multi2Mapping`.; 2. ~~using a set of macros. The aliases are still declared, but it is hidden inside the macro.~~. I find the trait approach elegant (nothing is hidden and no use of macro or additional code), but too much verbose when only one template parameter is available (e.g. `TetrahedronFEMForceField`). The advantage of the macro is that it does not require changes in the code other than the alias declarations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4788:1115,test,test,1115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4788,2,['test'],['test']
Testability,"The goal was to avoid type conversions by removing explicit types. Instead I took the rigorous returned types and added static_assert when two types are interacting. Curiously, I found out that the templated code (intersection with Sphere) is not called anywhere. Let's see if a known plugin is using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3287:844,test,test,844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287,2,['test'],['test']
Testability,"The goal was to be able to set the minimal requirements to get Sofa.Component + runSofa + batch only, and not having seemingly unrelated dependency. Fixes:; - runSofa needed absolutely Sofa.Gui.Qt but not using it; - not possible to compile Sofa.Gui.Common without having to compile Sofa.Gui (which should be possible). and cmake cleanups here and there. \+ an other unrelated fix by repairing the typo for simulation core tests ; the consequence was that simulation.core.tests was always activated even if sofa_build_tests was off. This PR is a preliminary step to have SofaGui totally deprecated (and not used anymore by runSofa). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3323:423,test,tests,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3323,4,['test'],"['test', 'tests']"
Testability,"The idea is to define component Data's where they are declared, usually in the header file. See https://isocpp.org/wiki/faq/cpp11-language-classes#member-init. Pros:; - All pros described in https://isocpp.org/wiki/faq/cpp11-language-classes#member-init; - Data name, variable name and description are declared and defined at the same place. No more back and forth between the declaration and the constructor definition.; - No duplicates between Doxygen and Data description. Cons:; - A change in the definition leads to a re-compilation of the files including the header; - Does not solve https://github.com/sofa-framework/sofa/issues/274 or https://github.com/sofa-framework/sofa/issues/44. An evolution of this proof of concept will be proposed in another PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2613:1302,test,test,1302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2613,2,['test'],['test']
Testability,"The idea is to ease the understanding of what the **RestShapeSpringsForceField** does. Usually, this component is used to fix points, or follow a path, using elastic forces. That is why, a suggestion of a new name could be **SpringConstraint**. It would be a constraint based on penalties. Note that this PR requires more work for the renaming. For the moment, it is just a support for a discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3903:939,test,test,939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3903,2,['test'],['test']
Testability,"The idea is to provide tools to write multithreaded code more efficiently. The functions introduced in this pull request allow to apply a function to a range in parallel.; Unit tests are provided.; The newly added functions are used as example in two places:; - GenericConstraintSolver: the code is unique for both sequential and parallel execution; - ParallelHexahedronFEMForceField: no ambiguity: the code is only for parallel execution. But nothing prevent to have a code supporting both sequential and parallel execution. But the component is not totally ready for a merge with HexahedronFEMForceField. Note that it avoids a lot of boilerplate code, hence reducing the complexity of the file. I think this will allow us to write more multithreaded code. In the back, the parallel loop uses a task scheduler and divides the number of elements in `n` ranges, where `n` corresponds to the number of threads in the task scheduler. This is to execute exactly `n` tasks, instead of `m`, if `m` is the number of elements. It avoids the overhead of creating a task for each element. It is more efficient when the number of elements is large. Benchmarks are yet to perform. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548:177,test,tests,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548,4,"['Benchmark', 'test']","['Benchmarks', 'test', 'tests']"
Testability,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:826,test,test,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,2,['test'],['test']
Testability,"The idea of this PR is to check if some work done in 2016 in the branch ""Collodi"" has to be patched. The branch has been updated with recent version of master... probably with some conflicts resolution errors.. so it won't compile asis. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1492:488,test,test,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1492,2,['test'],['test']
Testability,"The implementation in accessor.h were deprecated with the one in Data.h. In addition, when trying to get an accessor from a data containnig an object overloading Data<>, this implemention; (the one in accessor.h) confuses the system wich mis-select to find the proper accessor implementation and fallback to the one; that is not offering the vectorized API. Removing the getReadAccess, getWriteAccess, getWriteOnlyAccess fix that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2278:970,test,test,970,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2278,2,['test'],['test']
Testability,"The implementation was not correct.; BaseData::getLinkPath() should return a string pointing to the current data not the link value; of a parented data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2354:692,test,test,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2354,2,['test'],['test']
Testability,"The implementations of `addDForce` and `addBToMatrix` were removed in https://github.com/sofa-framework/sofa/commit/044f78ad4e3931b9754a90c251360f8f1e69c902. According to the commit message, an explicit formulation of the forces gives ""the best results"". This could not be tested on the example provided with SOFA as it is too simple (particles). To me, the computations seem ok, so I am in favor to keep them. However, we can discuss about activating the implicit formulation or not (through a Data?).; The implementation of `buildDampingMatrix` has been added according to #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3999:273,test,tested,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3999,3,['test'],"['test', 'tested']"
Testability,"The implicit conversion operator returned a const value. Now, it's a const reference. Before:; ```; ------------------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------------------------------------------------; BM_Data_GetValue<int> 2.12 ns 2.15 ns 320000000; BM_Data_GetValue<sofa::type::vector<int>>/10000 2.12 ns 2.15 ns 320000000; BM_Data_GetValue<sofa::type::vector<int>>/100000 2.13 ns 2.10 ns 320000000; BM_Data_GetValue<sofa::type::vector<int>>/1000000 2.23 ns 2.20 ns 320000000; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/10000 1.92 ns 1.90 ns 344615385; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/100000 1.92 ns 1.88 ns 373333333; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/1000000 1.99 ns 1.99 ns 344615385; BM_Data_ReadAccessor_ImplicitConversion<int> 2.84 ns 2.85 ns 235789474; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/10000 802 ns 802 ns 896000; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/100000 7127 ns 7115 ns 112000; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/1000000 645701 ns 641741 ns 1120; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<sofa::type::Vec3>>/10000 13166 ns 13137 ns 49953; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<sofa::type::Vec3>>/100000 572983 ns 571987 ns 1120; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 6777096 ns 6835938 ns 112; BM_Data_ReadAccessor_ExplicitConversion<int> 2.66 ns 2.67 ns 263529412; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/10000 812 ns 802 ns 896000; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/100000 19633 ns 19496 ns 34462; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/1000000 674789 ns 683594 ns 1120; BM_D",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2583:234,Benchmark,Benchmark,234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2583,1,['Benchmark'],['Benchmark']
Testability,"The inheritance link between CollisionResetVisitor and CollisionVisitor and some other had a consequence that ProcessGeometricalData was called multiple times in the FreeMotionAnimationLoop when the free motion and the collision detection where computed in parallel. . Another issue was that we had two time the timers for the substeps of the collision detection in the case of parallel computation : IMO only the AnimationLoop should have timers for global computation made by visitors. Here I remove the one of the Pipeline. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:1068,test,test,1068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,2,['test'],['test']
Testability,"The initial objective of this Pull Request was to fix the scene crash detected in #2047 (https://www.sofa-framework.org/dash/?branch=origin/PR-2047). What this PR really does:; 1. Clean and make `DefaultCollisionGroupManager` and `DefaultContactManager` more readable; 2. Fix absence of collision response when using `DefaultCollisionGroupManager` with a stationary object. A scene test is provided; 3. Fix freeze happening in `examples/Components/collision/RayTraceCollision.scn` after some time; 4. Fix crash detected in #2047. . Everything is related to `DefaultCollisionGroupManager`. Note:; In the collision pipeline, the group manager responsibilities are:; 1. Combine `Node`s which are involved in a contact (which has been detected before). It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:382,test,test,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['test'],['test']
Testability,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1939:752,test,test,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939,2,['test'],['test']
Testability,"The intention of `CRSMultiMatrixAccessor` was to use it as a replacement of `DefaultMultiMatrixAccessor` in `MatrixLinearSolver`. The switch is done at compilation time using a macro.; However, `CRSMultiMatrixAccessor` compilation was also controlled by the same macro which is not switched everyday. In other words, `CRSMultiMatrixAccessor` was almost dead code. I extracted the `CRSMultiMatrixAccessor` class from the `DefaultMultiMatrixAccessor` file to put it in its own file.; I removed the condition on the compilation of `CRSMultiMatrixAccessor` so that this code is always compiled. Currently, I don't know if `CRSMultiMatrixAccessor` is useful. It may be removed in the future. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2220:1226,test,test,1226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2220,2,['test'],['test']
Testability,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1941:1385,test,test,1385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941,2,['test'],['test']
Testability,"The jacobian is already computed. It must be transposed and multiply by a right-hand side matrix in this overload of `applyJT`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3776:667,test,test,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3776,2,['test'],['test']
Testability,"The last parameter of getAttribute is the value returned by default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3946:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3946,2,['test'],['test']
Testability,"The line `dJ.startVec( row );` crashes in an example in the branch of #2777. I am not able to explain why, and I am not able to reproduce it in a simple example. But from what I can understand:. - Usage of `startVec` is internal to Eigen. I am not sure it is meant to be used outside of Eigen (but it's in the public API); - Manipulation of the `EigenSparseMatrix` is not consistent with the other non-linear mappings. This PR mimics the pattern from the other mappings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3803:1010,test,test,1010,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3803,2,['test'],['test']
Testability,"The line defining node gathering all the plugins was immediately closed (slash at the end); consequently, the second `</Node>` was closing the root node itself. (so the loaded scene was containing nothing). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2831:746,test,test,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2831,2,['test'],['test']
Testability,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2011:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011,2,['test'],['test']
Testability,"The link to the linear solver was always overwritten by the first linear solver in the current context. This PR adds the possibility for the user to specify which linear solver to use. This is useful when there are multiple linear solver in the current context (preconditioning methods). EDIT: about GlobalSystemMatrixExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2497:867,test,test,867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2497,2,['test'],['test']
Testability,"The merge with master is done.; If the CI does not complain, please ""review"" (maybe rather look at commits) and merge :). [ci-build][with-all-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375#issuecomment-629144002:142,test,tests,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375#issuecomment-629144002,1,['test'],['tests']
Testability,"The message was not making sense and was incorrect anyway,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4120:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4120,2,['test'],['test']
Testability,"The method `applyConstraint(sofa::core::behavior::ZeroDirichletCondition* matrix)` was not implemented. It is added in this PR. A unit test is also added, based on the tests from `PartialFixedConstraint_test`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3925:135,test,test,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3925,4,['test'],"['test', 'tests']"
Testability,"The method `umul24` disappeared fromt eh header `crt/device_functions.hpp` in cuda 12. It originally was just a wrapper for a call to `__umul24`, therefore the change. . This wrapper disappearing might indicate a deprecation, so this solution will maybe not be one with the next cuda release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4319:832,test,test,832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4319,2,['test'],['test']
Testability,The method exists in Sofa and is useful to explore the graph between components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/843:332,test,test,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/843,2,['test'],['test']
Testability,"The module name is used by the PluginManager to identify a plugin. And there seems to have a need that the plugin binary filename matches the module name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4720:694,test,test,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4720,2,['test'],['test']
Testability,The modules/SofaOpenglVisual/CMakeLists.txt has been changed because it always tried to generate the tests even if SOFAGUI_BUILD_TEST is set false. It makes the compilation fail. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1091:101,test,tests,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1091,3,['test'],"['test', 'tests']"
Testability,"The name `CollisionOBB` mismatched the module name `CollisionOBBCapsule`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3107:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3107,2,['test'],['test']
Testability,"The never-ending quest of eradicating implicit type conversion. This PR contains two things:. 1) Introduction of a user-defined literal for SReal constants.; 2) Avoid implicit conversions. **Introduction of a user-defined literal for SReal constants**. When dealing with constants that should be SReal, I saw the the following behavior in the SOFA code base:. - The `SReal` type is ignored and the constant is considered either as a double or a float, or any other primitive type. Example: `Vector3(1.f, 1.f, 1.f)`, `Vector3(1., 1., 1.)`, or `Vector3(1,1,1)`.; - The constant is C-style cast. Example: `Vector3( (SReal)1, (SReal)1, (SReal)1)`; - The constant is `static_cast`. Example: `Vector3( static_cast<SReal>(1), static_cast<SReal>(1), static_cast<SReal>(1))`. The first option is what we want to avoid. The second option has some problems that the third can solve. However, the third option is ugly, long and can be complex to read. To simplify such expressions, I introduced a user-defined literal. Example: `Vector3(1_sreal, 1_sreal, 1_sreal)`. This PR also fixes some implicit conversions that can be avoided.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3314:1660,test,test,1660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3314,2,['test'],['test']
Testability,The new SceneCreator implementation requires to load plugins to work. ; To do that it calls the PluginManager...the problem is that in debug...the plugins have are not found. https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/436/testReport/. Is this because of the _d suffix ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463:242,test,testReport,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463,1,['test'],['testReport']
Testability,The new logo(s) are bitmaps (.bmp) so I dont think it would crash in libpng.... Or something is really wrong 🤐,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-784008844:8,log,logo,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-784008844,1,['log'],['logo']
Testability,"The new major version of[ MSVC 2022 (v17.4)](https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-4/) seems to change some std header inclusions.; `SceneLoaderFactory.h` did not know `std::string` anymore. \+ SpatialGridContainer.h was not compiling anymore as well, I just removed all the shenaningans made +15years to support the at-that-time experimental `unordered_map`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3466:927,test,test,927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3466,2,['test'],['test']
Testability,"The new message is:; ```; [ERROR] [TriangleSetTopologyContainer(topo)] Cannot find edge 0 [161, 158] in triangle 0 [0 161 158] in the provided edge list (@/vtk file/topo.edges). It shows an inconsistency between the edge list (@/vtk file/topo.edges) and the triangle list (@/vtk file/topo.triangles). Either fix the topology (probably in a mesh file), or provide only the triangle list to '/vtk file/topo' and not the edges. In the latter case, the edge list will be computed from triangles.; ```. Previously it was:; ```; [ERROR] [TriangleSetTopologyContainer(topo)] Cannot find edge 0 [161, 158] in triangle 0; ```. Fixes https://github.com/sofa-framework/sofa/issues/2636. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2638:1215,test,test,1215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2638,2,['test'],['test']
Testability,The operator>> was not functionning properly as it was returning; with a failbit set because of the in.peek() on empty string. This error; was generating a warning in UniformMass. The PR:; - fix this error; - adds a test that validate that the code is correct and does not generate error anymore.; - makes some sout/serr cleaning in uniformmass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/993:216,test,test,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/993,3,['test'],['test']
Testability,"The option handleSeams was supposed to mimic the same mechanism as in the OglModel, i.e duplicated vertices when texture coordinates are present (as it is possible that one vertex has multiple texture coordinates).; This option never worked because of references errors ; this PR corrects it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/923:544,test,test,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/923,2,['test'],['test']
Testability,"The option was available only for MSVC. There is no reason no to add it for gcc/clang.; I did not tested the option myself. Fix some typos. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3922:98,test,tested,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3922,3,['test'],"['test', 'tested']"
Testability,"The orientation must be skipped. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4891:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4891,2,['test'],['test']
Testability,"The parallelized function is `SparseLDLSolver::doAddJMInvJtLocal`. # Benchmarks. I rely on the scene provided by @bakpaul with light changes: https://gist.github.com/alxbilger/1b82b1488a2741be845d7d9da18c25e5. The SOFA timer to focus on is `Get Compliance` as it is the deepest timer in the hierarchy containing the `doAddJMInvJtLocal` function. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 100 iterations done in 12.9731 s ( 7.70827 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.41 1 0.01 121.72 98.03 20.57 98.03 77.48 .....Get Compliance; ```. - This PR (without parallelization). The benchmark should be similar to the master branch. ```; 100 iterations done in 13.1572 s ( 7.6004 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 16.31 1 0.01 134.76 98.34 22.21 98.34 76.54 .....Get Compliance; ```. - This PR (with parallelization). ```; 100 iterations done in 5.94345 s ( 16.8253 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 5 15.76 1 0.01 30.62 26.85 5.55 26.85 47.91 .....Get Compliance; ```. On my machine there is a nice speedup of x3.66 on the `Get Compliance` timer, and x2.18 in terms of global FPS. # Additional Benchmarks. I wanted to make sure that the usual solve of SparseLDLSolver did not regress in terms of performances. I benchmarked `examples/Component/LinearSolver/Direct/FEMBAR_SparseLDLSolver.scn` on 10000 steps. - Master branch (commit df49f3a754264489b14db69b38862a5b45d57168). ```; 10000 iterations done in 28.2657 s ( 353.785 FPS).; ```. - This PR. ```; 10000 iterations done in 28.3223 s ( 353.078 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986:69,Benchmark,Benchmarks,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986,2,"['Benchmark', 'benchmark']","['Benchmarks', 'benchmark']"
Testability,"The parameter is not used in the function. Only its type. The parameter is here probably just for template deduction. I suggest to remove the use of a parameter. Reason in https://github.com/sofa-framework/sofa/pull/4816. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4817:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4817,2,['test'],['test']
Testability,The path to the pluginManager.cpp is incomplete in the CMakeLists. Thus prefix was always empty and nod set to _d in debug mode. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1313:380,test,test,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1313,2,['test'],['test']
Testability,"The position and edges vectors were not cleared if load() is called multiple times. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/337]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702:695,test,test,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702,2,['test'],['test']
Testability,"The preproc define SOFA_WITH_THREADING seems to not be used at all (except in a logger_test) and the cmake `SOFA_WITH_THREADING` option itself is misleading (both the name and the description); ```SOFA_WITH_THREADING ""Compile sofa with thread-safetiness support (PARTIAL/EXPERIMENTAL)``` 🤔 ?. So this PR removes everything related to this option, and as it was not used for some time, ; I did not do any compat/deprecation... EDIT:. After some investigation, it was created to let the user chose if he wants thread safety with the message dispatcher, with this commit https://github.com/sofa-framework/sofa/commit/2aebe06241c6f8b391f0cc3d32b12ed90e40ef96 (did not find the related PR) ; and it disappeared with #1799 (where the message dispatcher will always be thread-safe). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3565:1315,test,test,1315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3565,2,['test'],['test']
Testability,"The prettyfied output of the unit test:. ```; [; {; ""className"": ""DefaultAnimationLoop"",; ""creator"": {; """": {; ""class"": {; ""className"": ""DefaultAnimationLoop"",; ""namespaceName"": ""sofa::simulation"",; ""shortName"": ""defaultAnimationLoop"",; ""templateName"": """",; ""typeName"": ""DefaultAnimationLoop""; },; ""object"": {; ""data"": [; {; ""group"": """",; ""help"": ""object name"",; ""name"": ""name""; },; {; ""group"": """",; ""help"": ""if true, emits extra messages at runtime."",; ""name"": ""printLog""; },; {; ""group"": """",; ""help"": ""list of the subsets the objet belongs to"",; ""name"": ""tags""; },; {; ""group"": """",; ""help"": ""this object bounding box"",; ""name"": ""bbox""; },; {; ""group"": """",; ""help"": ""The state of the component among (Dirty, Valid, Undefined, Loading, Invalid)."",; ""name"": ""componentState""; },; {; ""group"": """",; ""help"": ""if true, handle the events, otherwise ignore the events"",; ""name"": ""listening""; },; {; ""group"": """",; ""help"": ""If true, compute the global bounding box of the scene at each time step. Used mostly for rendering."",; ""name"": ""computeBoundingBox""; },; {; ""group"": """",; ""help"": ""If true, solves all the ODEs in parallel"",; ""name"": ""parallelODESolving""; }; ],; ""link"": [; {; ""help"": ""Graph Node containing this object (or BaseContext::getDefault() if no graph is used)"",; ""name"": ""context""; },; {; ""help"": ""Sub-objects used internally by this object"",; ""name"": ""slaves""; },; {; ""help"": ""nullptr for regular objects, or master object for which this object is one sub-objects"",; ""name"": ""master""; },; {; ""help"": ""Link to the scene's node that will be processed by the loop"",; ""name"": ""targetNode""; }; ]; },; ""target"": """"; }; },; ""description"": ""foo\n""; }; ]; ```. and the templated object:. ```; [; {; ""className"": ""DummyComponent"",; ""creator"": {; ""Vec3f"": {; ""class"": {; ""categories"": [; ""_Miscellaneous""; ],; ""className"": ""DummyComponent"",; ""namespaceName"": ""sofa"",; ""parents"": [; ""BaseObject""; ],; ""shortName"": ""dummyComponent"",; ""templateName"": ""Vec3f"",; ""typeName"": ""DummyComponent\u003CStdVectorType",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775:34,test,test,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775,1,['test'],['test']
Testability,The problem the PR solve is related to how data are changed by the setValue function. When writing in data through an opaque pointer it is important to properly notify the data successors that a data has changed. This is why write access *must* be done using beginEdit/endEdit and absolutely not; by removing the const qualifier from q getValueVoidPtr using a cast (what was done in the setValue function). Doing it the wrong way break the data update mechanism. . The PR fix that.; To ease the writing of the beginEdit/endEdit pair it also add a RAII WriteAccessWithRawPtr. It is in BaseData...because it is for BaseData. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1006:876,test,test,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1006,2,['test'],['test']
Testability,The problem was that a failure to create a component due to template mismatch on a; pluginized object shows the pluginization message instead of template mismatch one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:419,test,test,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,2,['test'],['test']
Testability,"The pull-request #95 contains code that automatically install the dispatcher needed in tests. ; So normally it is not needed any more to clearHandlers (unless you really want a specific behavior). . EDIT: The Pull request #95 was not clean so I did a new one, sorry for the noise.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94#issuecomment-265592897:87,test,tests,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94#issuecomment-265592897,1,['test'],['tests']
Testability,"The purpose of this PR is to unify the mass components in SOFA (UniformMass, DiagonalMass and MeshMatrixMass):; - unify the naming of data for mass information (vertexMass, massDensity and totalMass); - unify their initialization process; - apply the coding rules (especially regarding the variable prefix d_ and m_) and use the msg API; - add the feature of dataTracker on the data for mass information; - add support for additional CUDA templates for the MeshMatrixMass (that should always be preferred as default mass). This should ease the understanding of new users at first look.; All tests and checks added should also make these codes more robust. A script is added with this PR to automatically update all your scene files (.xml and .scn). I invite to be really **prudent** before merging this PR, since it affect basically all simulations. Note: @hdeling I removed unused functions (numericalIntegrationOrder, numericalIntegrationMethod, integrationMethod) in MeshMatrixMass that I think were used before the ""plugin.HighOrder"" plugin was created. Can you confirm this?. Suggestion for future work:; - rename MeshMatrixMass into SparseMass; - move MeshMatrixMass with DiagonalMass; - make DiagonalMass depends from MeshMatrixMass (since it's a simplified -lumped- derived approach from MeshMatrixMass) : this would clearly factorize the code and make it more robust. PS : bisous. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637:591,test,tests,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637,3,['test'],"['test', 'tests']"
Testability,"The rational is that we should reduce as much as possible the interface size of an object as long as the same service can be done in our case the two variation are:; myData == value; vs; myData.getValue() == value. The second one has the advantage:; - to make explicit that there is computation/accessor. ; - the object we put in Data<> does not need anymore to have == operators. ; - as the Data interface has less functions so it is easier to learn/discover/read/remember. . EDIT: I'm not sure it is a good idea to remove the operator== directly without transition period, this is why I'm searching for some template tricks that would print the deprecation warning then stop the compilation but I didn't managed to do so. Any help appreciated.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1639:1286,test,test,1286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1639,2,['test'],['test']
Testability,"The regression test fails after #2076.; See the difference in the following picture:; ![image](https://user-images.githubusercontent.com/10572752/119788296-50075700-bed2-11eb-930e-fc67f3aba386.png); The screenshot is taken after 1200 iterations. #2076 deals with the group manager. It's probably the source of the difference.; In the scene, there is a static object (no ODE solver, and collision models define `simulated=""false""`). In #2076, there is a fix on object without any ODE solver, but where collision models don't define `simulated=""false""`. We are not in this case. The source of the difference is elsewhere.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2128:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2128,1,['test'],['test']
Testability,"The remaining `else if (typeinfo->ValidInfo())` is now reverted. About the regression test results, we needed a reference (diff base) for each example we wanted to test. We chose to run regression tests on these examples :; ```; applications/plugins/SofaTest/SofaTest_test/regression/gravity.scn; examples/Components/collision/FFDDistanceGridCollisionModel.scn; examples/Components/collision/RuleBasedContactManager.scn; examples/Components/constraint/BilateralInteractionConstraint.scn; examples/Components/constraint/FixedConstraint.scn; examples/Components/constraint/FrictionContact.scn; examples/Components/forcefield/BeamFEMForceField.scn; examples/Components/forcefield/FastTriangularBendingSprings.scn; examples/Components/forcefield/TriangularFEMForceFieldOptim.scn; examples/Components/interactionforcefield/InteractionEllipsoidForceField.scn; examples/Components/topology/Mesh2PointTopologicalMapping.scn; examples/Demos/caduceus.scn; ```; We can't use regression tests without these reference files.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171#issuecomment-283650672:86,test,test,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171#issuecomment-283650672,4,['test'],"['test', 'tests']"
Testability,"The removed code is a copy/paste of its base class. It's useless, and also triggers warning because it hides its base class implementation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2430:679,test,test,679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2430,2,['test'],['test']
Testability,"The removed line prevents referencing this plugin in another, externally built SOFA plugin.; (doing a `find_package(SofaPython)` from the CMakeLists.txt of another plugin, built as a standalone project did not work). I don't know the side-effect of simply removing this line, but I also don't see in which case this could (or should) work anyway: there is no reason to create a target during the import of a package. the targets are created at install, and loaded during the package import, not created, to my understanding. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/888:776,test,test,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/888,2,['test'],['test']
Testability,"The removed specializations were not that different from the generic `draw` method. So, I removed them. I also took the opportunity to implement bbox computation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4823:702,test,test,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4823,2,['test'],['test']
Testability,"The rigid type is registered both in applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/CapsuleModel.cpp and applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/RigidCapsuleModel.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4709:768,test,test,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4709,2,['test'],['test']
Testability,"The root tree is now displayed in the tree. Previously, only the root children were displayed. This root item provides more information about the time step: the time that has not been measured by timers (children). It's in the columns 'Self'. In the example, 3% of the step is not measured, corresponding to 1 ms. The second addition is the overhead due to timers processing. It is displayed in the left panel. Here, it takes 10 ms to process the incoming timers and update the chart. ![image](https://user-images.githubusercontent.com/10572752/151393063-10d272a0-38d9-4c64-9a76-b326fb010e15.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2643:1137,test,test,1137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2643,2,['test'],['test']
Testability,"The same code in `ForceField` and both classes of this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4779:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4779,2,['test'],['test']
Testability,"The scene `examples/Components/animationloop/FreeMotionAnimationLoop.scn` takes a lot of time to initialize. I would like to warn the user that it is normal, that SOFA did not freeze. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2470:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2470,2,['test'],['test']
Testability,"The scene checker detects when we use a plugin but forgot the ""required plugin"" tag and tells us how to add it in our scene, but without closing the tag. This PR fixes the bug in the suggestion and corrects some typos in error messages in the same file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:505,test,test,505,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,2,['test'],['test']
Testability,"The scene graph view is not updated to reflect the content of the scene changes. ; This is because a mecanism was implemented to not update the view at each simulation step to maximise performance. . This may be useful when max performance is needed but this lead to an inconsistant display. . In this PR I try to fix the situation by allowing three states:; - lock = true => changes in the scene graph are not reflected into the model but the model is flagged as dirty ; - lock = false => changes in the scene graph are imediately reflected into the model; - dirty => true => the model is not anymore synchronized with the sofa scene graph; - dirty => false => the model is showing the content of the scene graph. when going from lock=true to lock=false the model is updated if it was dirty. . To let user to control if they want the graph to be updated we add an icon to lock/unlock the model state. If the model is dirtyfied; a the icon is reflecting the change (with an highly professional icon free of copyright ;)) . Fixes #2920 . The PR also contains few fixes for the modeller (that is still broken anyway). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026:1657,test,test,1657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026,2,['test'],['test']
Testability,The script would sometimes plot completely wrong info because some numbers were treated as strings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/519:351,test,test,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/519,2,['test'],['test']
Testability,"The second parsing values were not updated because insert() of (unordered_)map does not overwrite values. This bug was actually making all the scene tests (using runSofa) successful... 🤐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3672:149,test,tests,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3672,3,['test'],"['test', 'tests']"
Testability,"The solver crash if the system is rank deficient because it read memory at indices like xxx[0]. . This PR:; - adds a conditional test prevent that. ; - adds SOFA_WITH_FLOAT, SOFA_WITH_DOUBLE to make it consistant with the rest of sofa.; - removes commented code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/655:129,test,test,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/655,3,['test'],['test']
Testability,"The solver offers two methods to solve the constraint system: `build_LCP` and `build_problem_info`. They were very similar and long functions with a lot of duplicated code. The duplicated code has been moved into small functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3474:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3474,2,['test'],['test']
Testability,"The state of vector.h and set.h is a bit messy right now. . A recent PR have added tests to vector & fix several crashes & infinite loop. It appears that the problematic code is also in set.h so a general code factoring is needed. . There is also some details on container refactoring in PR #113 ; Finally it is not very clear what should be in std:: and what should be in sofa::helper:: ...; and there is a lot of code in the .h for only two specialization I see no reason why they shouldn't be make extern and implemented in .cpp. . So this PR is a WIP in which everyone is welcome to contribute. My current todo list is:; - implement tests for set so we can refactor safely. ; - declare int & unsigned int as extern template & move specialization from .h to .cpp for vector & set; - have everything in sofa::helper for consistancy (vector, set, map, pair, list, deque); - fix the problem pointed by @maxime-tournier in #271 in the remove* functions. ; - remove the lines added by hugo ; ```cpp; /// \todo: refactoring of the containers required; /// More info PR #113: https://github.com/sofa-framework/sofa/pull/113; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/278:83,test,tests,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/278,4,['test'],"['test', 'tests']"
Testability,"The static variable is constructed as soon as the plugin is loaded. This could be a problem if the plugin initialization failed (SofaCUDA). This PR remove the variable for a static function. The code is called only when used. Note that this PR is temporary, waiting for https://github.com/sofa-framework/sofa/pull/4852 where this variable won't be necessary. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4883:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4883,2,['test'],['test']
Testability,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1957:779,test,test,779,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957,2,['test'],['test']
Testability,"The successor of sofaVerification is in SofaTest, look at ; plugins/SofaTest/SofaTest_test/Regression_test.h . I like small test scene that also serve the purpose of being didactic examples, it also ensures that examples are up to date since they are being tested . thomas . ----- Mail original -----. > De: ""erik pernod"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Envoyé: Mercredi 19 Octobre 2016 16:08:29; > Objet: [sofa-framework/sofa] Creating tests on Topological operations (#43); > ; > Hi,; > ; > several tests were already done for topological modifier, they are tested; > through scenes in examples/Components/Topology/TopologicalModifiers; > ; > They test: add/remove of topological elements; > - Is sofaVerification still used?; > - I can easily rewrite those tests in c++ using the ::Sofa_test api. Is it; > better? what is the politic between doing tests through scene or Sofa_test.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43#issuecomment-255038381:124,test,test,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43#issuecomment-255038381,8,['test'],"['test', 'tested', 'tests']"
Testability,"The template specializations that were in the cpp file are now supported in the non-specialized function in the .h file.; The changes also add support of filtering from CompressedRowSparseMatrixConstraint and any type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4442:768,test,test,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4442,2,['test'],['test']
Testability,"The test `QuaterTest::EulerAngles` randomly fails on the CI. Here is a test that fails 100% of the time. Anybody wants to fix it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4122:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122,4,['test'],['test']
Testability,"The test is failing, the good news is that this is not related to code regression. Nevertheless I suggest we merge this fix quickly as it looks harmless and remove some noise in our dashboard.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/267#issuecomment-301027658:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/267#issuecomment-301027658,1,['test'],['test']
Testability,"The test is on large displacement. . Note: As stated in the class comments, the small displacement does not give the expected result. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4781:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4781,3,['test'],['test']
Testability,The test reading a png file is crashing unexpectedly on Windows ; investigating....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-284464288:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-284464288,1,['test'],['test']
Testability,"The test timeout should be done directly in the CI bash scripts, by running the gtest executables using the command `timeout` that can even send a signal to be able to print a specific message on the dashboard.; https://www.gnu.org/software/coreutils/manual/html_node/timeout-invocation.html. Maybe it makes more sense that @guparan or @bcarrez have a look at it rather than @maxime-tournier?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289721814:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289721814,1,['test'],['test']
Testability,"The test was failing due to triangle orientation a priori, let's check the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1338:4,test,test,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1338,3,['test'],['test']
Testability,"The tests are happy, so OK for me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-829384704:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992#issuecomment-829384704,1,['test'],['tests']
Testability,"The timer ""ApplyCorrection"" is already in the mother class in applyCorrectionTask which is the method that actually call applyCorrection. ""Compute And Apply Motion Correction"" was thus redondant and the second ""ApplyCorrection"" was misleading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5045:783,test,test,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5045,2,['test'],['test']
Testability,"The timer `Accumulate Constraint` included two steps: 1) reset the constraint, 2) accumulate the constraints.; Since resetting the constraints is not negligible, I suggest that each of the step has its own timer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2469:752,test,test,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2469,2,['test'],['test']
Testability,"The title is self contained : the plugins need a way to test the scenes and/or the regression, it would be great to create an action to automatize it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4265:56,test,test,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265,1,['test'],['test']
Testability,The title says it all. . I'm confused as the windows build used to terminate correctly when the PR was merged :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/391:366,test,test,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/391,2,['test'],['test']
Testability,The title says it all. Feel free to comment if any of the removed scenes should be kept. Removed scenes:; - Components/controller/ArticulatedHierarchyBVHController.scn; - Components/controller/EdgeSetController.scn; - Components/controller/MechanicalStateController.scn; - Components/controller/NodeToggleController.scn; - Components/forcefield/BuoyantForceField.scn; - Components/forcefield/BuoyantForceField2Boxes.scn; - Components/forcefield/ForceMaskOff.scn; - Components/forcefield/WashingMachineForceField.scn; - Components/mapping/CatmullRomSplineMapping.scn; - Components/mapping/ProjectionToTargetLineMapping.scn; - Components/mapping/ProjectionToTargetPlaneMapping.scn; - Components/topology/HexaCenterPointMapping.scn; - Demos/10000.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/922:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/922,2,['test'],['test']
Testability,"The underlying idea is that we should have only one alias for code consistency and to make things clearer.; I didn't deprecates/removed the long names alias but this should be done in a future PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3299:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3299,2,['test'],['test']
Testability,"The unit test `ParallelImplementationsRegistry_test` is failing for CGLinearSolver, stating that it has no creator although it is clear that such a component has one.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4323:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323,1,['test'],['test']
Testability,"The unit test fails because `TypeInfoRegistryTu2.external_registration` has side-effects, and does not clean up. I changed the order of the files in the CMakeLists.txt. So the side-effect is a problem now...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5015#issuecomment-2371570900:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5015#issuecomment-2371570900,1,['test'],['test']
Testability,"The unit test in this PR relied on `rand()`, which was seeded by `srand(time(nullptr))`. However, it means that every time the test is executed, the generated input values are different. The test is not repeatable. And sometimes, the generated values lead to singularities, which are values not supported by the tested functions.; The changes in this PR made the random generation deterministic and portable, so that the test is repeatable. We also make sure that the generated values don't lead to singularities. For more information about the singularities, see https://github.com/sofa-framework/sofa/pull/4122. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4126:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4126,7,['test'],"['test', 'tested']"
Testability,"The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1479260603,1,['test'],['tests']
Testability,"The unit tests on the StaticSolver failed because the Metis permutation using the Eigen API did not give the same result than the Metis permutation that was implemented before. This is intriguing... But the most concerning problem is that the result of the linear solver depends on the permutation. Hopefully, it is only a problem of numerical errors. Afterall, the operations are not the same depending on the permutation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370#issuecomment-1895627928:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370#issuecomment-1895627928,1,['test'],['tests']
Testability,"The use of the macro CHECK_TOPOLOGY has been removed from the code through several PR. This one totally remove it. Remove duplicate call to createEdgeSetArray from Modifier when adding an edge to the topology. As all topology buffers are init at start, if hasEdges return 0, it means the topology is really empty not that the topology is not init.; This behavior has been set in the PR #967. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1399:643,test,test,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1399,2,['test'],['test']
Testability,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4314:36,log,logical,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314,4,"['Test', 'log', 'test']","['Tested', 'logical', 'test']"
Testability,"The user was never informed that its scene does not compute bbox.; Consequently the viewer settings based on the bbox are messed up. This PR will at least warn the user that he needs to either:; - add a component which implements computeBBox; - implement itself in its own components; - force set bbox=""minx miny minz maxx maxy maxz"" parameter in a node/component. The logic would want to set it in the root node.; This PR fixes also the fact that the bbox parameter was being ignored by the BBox computing visitors. . This PR is related to issue #29, but it does not compute BBox automatically so #29 should not be closed, in my opinion. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/524:369,log,logic,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/524,3,"['log', 'test']","['logic', 'test']"
Testability,"The usual :p, adding dependencies introduced in #2777 in the CMakeLists.txt. It will fix the out-of-tree builds based on the current master, especially for SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3846:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3846,2,['test'],['test']
Testability,"The usual cleaning:. 1- removed commented code; 2- added using; 3- sofa rules with name (m_, d_); 4- moved definitions from .h to .inl; 5- replaced old serr/sout with msg_warning, msg_error, msg_info. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/846:452,test,test,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/846,2,['test'],['test']
Testability,"The usual pattern of component classes is the following:. - A generic method is defined in the base class of the component. Since it is generic, it does not know the type of the `DataTypes` (it's not templated). Instead, it acts on `VecId`.; - In a second base class, inheriting from the first one, the `DataTypes` is known (the class is templated). Therefore, the methods can be defined to work on the right type.; - In this class, the generic method calls the template-specific one. IMO, the template-specific method should not be public. In this PR, they are moved to protected. I think also, that the generic methods can be final, but this is breaking, so I am not sure that it is a good idea to keep the final keyword. The PR starts with the `final` keyword to study the consequence on the CI. Those changes force the user to call only the generic methods. I took the opportunity to add a check on the component state in the generic methods. If the final keyword is used, it would ensure that the component state is called before each call of the public API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943:1603,test,test,1603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943,2,['test'],['test']
Testability,The virtual function BaseLinearSolver::isMultiGroup() returns always false because multi group solver is no more supported after PR #901 in all LinearSolver classes. Needs #1060 to be merged first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1063:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1063,2,['test'],['test']
Testability,"The warning message now indicates if the newly added Data/Link is used as a Data or as a Link. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2489:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2489,2,['test'],['test']
Testability,"The warning was:; ``` cmake; CMake Warning at Sofa/framework/Config/cmake/SofaMacrosInstall.cmake:1031 (message):; Deprecated macro. Use 'sofa_add_targets_to_package' instead.; Call Stack (most recent call first):; applications/plugins/image/image_gui/CMakeLists.txt:46 (sofa_install_targets); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359:838,test,test,838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359,2,['test'],['test']
Testability,"The warning/deprecation message from OptionGroup containing the string ""error-prone"" was bothering me to find the real error in compilation outputs!. I therefore worked on upgrading the SOFA codebase to remove these warnings by replacing the deprecated constructor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4064:805,test,test,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4064,2,['test'],['test']
Testability,"The website does not display the cpp code properly, so I added spaces to see if it fixes it. ![image](https://github.com/sofa-framework/sofa/assets/10572752/b80bca8b-6d79-43a5-bf23-faf675d1730a). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4695:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4695,2,['test'],['test']
Testability,"The work is done . now, testing is in progress . The label can be changed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2082774802:24,test,testing,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2082774802,1,['test'],['testing']
Testability,The workflow is really slow when changing simple values in the data inspectors ; (validating by clicking on update). In this pr we allows the user to change the numeric values; by moving the mouse left&right to decrease/increase with immediate update. I will do a small video to show the results to make that more clear. ; https://www.youtube.com/watch?v=fuWz3Dn1-oM; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/750:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/750,2,['test'],['test']
Testability,"There are a few tests/scenes throwing the new warnings (especially with the image plugin), but this was to be expected I guess.; Strangely, I would have predicted Jenkins/gtest to consider those as ""FAILED"" (and having some additional failures in the summary) but it does not. 🤔",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167:16,test,tests,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725#issuecomment-2113900167,1,['test'],['tests']
Testability,"There are still lots of references to this plugin in the rest of the SOFA code base, including bindings in the `image` and `PSL` plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855,2,['test'],['test']
Testability,There are unit tests to fix (or remove),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795#issuecomment-2194072479:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795#issuecomment-2194072479,1,['test'],['tests']
Testability,There is a conflict using MeshObjLoader for mechanical and for rendering purpose. for OglModel MeshObjLoader should have handleSeams = 1 to have multiple vertices at a same position and better handle texture seams and normals. But this option should not be used for Topology (if I well understood).; Several tests are breaking in PR #1096 where handleSeams has been set to true by default. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1100:308,test,tests,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1100,1,['test'],['tests']
Testability,"There is a patch in the daccord repository on forge. . Here are the commit messages (which contains possible interaction with other sofa part):. ```; [FIX]: Allow sofa to save in xml & pyscn the scene. This may break some scene. Once stabilized this may go to the main Sofa. Several issues needed to be adresse to make this system work. first (to try to minimize the amount of un-needed saved informations making the file unreadable) ):; - all the Data<> are now non persistent by default.; - a Data<> become persistent if:; * it is loaded from a file or from a python script.; * it is modified in the GUI. second (hacky stuff on top of old hack stuff):; during the parsing of xml some component ""converts"" XML attributes to other (and possibility none) dataField). As only the dataField can be saved...these attributes are ""lost"". ; The solution was to stop doing with a minimal number of changes the Sofa behavior. . third (quirck stuffs on pile of quirck stuffs):; some important XML attributes are interpreted on the fly and have very specific meaning but there is no associated data field. The solution was to add the corresponding datafield to allow them to be saved.; This is the case for ""src"", ""template"", ""name"", ""type"" .... Given the amount of changed on base classes logics...some scene may have problem to load or save. Please tell if this is the case.; ```. The case that probably could cause some problem is the replacement of the 'src', 'template' with real data field.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868:1279,log,logics,1279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868,1,['log'],['logics']
Testability,"There is a primary template class that can act on any type (not just Data). In this case, the class is a simple proxy.; A second implementation partially specializes the class for vector types. Again, no need to be a Data. The type needs to implement the `begin` and `end` methods, and the `[](int)` operator, to be considered a vector type.; Finally, a third implementation partially specializes the class for Data. This specialization uses one of the first two implementation: `template<class T> class ReadAccessor<Data<T> > : public ReadAccessor<T>`.; We can say that accessors are meant to be used for Data only, but they need the implementations for any type (the type that is contained by the Data). And those implementations can be tested, even if they are not used. Worth to be noted:; `std::vector` is of course considered as a vector type. If I want to use it through an accessor, it matches the partial specialization for vector types. However, accessors for vector types require the type `Size` in the vector type (there is an alias). `std::vector` has not such a type, so the compilation fails. Accessors to vector types can be used only for `sofa::type::vector` (and its derived types). Conclusion: ; 1) there is a discrepancy between the `is_vector` type trait and the requirements of the accessors.; 2) Write `ReadAccessor<std::vector<Real> >` or `ReadAccessor<Data<std::vector<Real> > >` does not compile. To fix this behavior, I'll suggest in another PR something like; ```cpp; using Size = std::conditional_t<hasSizeSize<T>::value, T::Size, T::size_type>;; ```. I think the read-only flag has nothing to do with the accessors. I think it is related to the GUI only.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278:739,test,tested,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234#issuecomment-1228215278,1,['test'],['tested']
Testability,There is a problem in how the tests are implemented in FileMonitor. ; This make the test to fail randomly on macosX because of a too long run (or too short delay). ; To fix that the delay should be replaced with the timeout parameter.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/140:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/140,2,['test'],"['test', 'tests']"
Testability,There is an error in the test because timer ids changed in this PR,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718:25,test,test,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1645543718,1,['test'],['test']
Testability,"There is duplicated code in several function of Link.h. ; I factored that. . I also removed an #ifdef MACRO that was standing there for year and no one cares. If we plan/want to refactor this part we should do that with [[deprecated]]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1704:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1704,2,['test'],['test']
Testability,There is examples which relies on SparseSolver without having the corresponding RequiredPlugin. ; This PR fix this (to make the CI happy). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/748:392,test,test,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/748,2,['test'],['test']
Testability,"There is no implementation of FileMonitor on OSX and Windows, making all the FileMonitor.* tests to fail on these platforms (7 test fails on OSX, 8 on Windows). This has to be fixed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/78:91,test,tests,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/78,2,['test'],"['test', 'tests']"
Testability,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1751:1375,test,test,1375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751,2,['test'],['test']
Testability,There is not a lot of contribution to make plugin from the old sofa modules. ; Here is one. . The general idea is that it should decrease compilation time and memory footprint of sofa. . This is my contribution to the issue stated by @hugtalbot in ; https://github.com/sofa-framework/sofa/issues/346. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/396:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/396,2,['test'],['test']
Testability,"There is one error on the dashboard:; https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3366/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/2/testReport/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/. do you think it is linked to your change or is it a blinking error on the CI?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824:163,test,testReport,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3366#issuecomment-1272895824,1,['test'],['testReport']
Testability,"There is only one ""Node"" implemenation in Sofa so there is no need to expose internal details (saying it is ""DAG"") to the UI layer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2395:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2395,2,['test'],['test']
Testability,"There is several dependencies from SofaHaptics to ""hard"" to compile code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/945:327,test,test,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/945,2,['test'],['test']
Testability,"There is severe performance issues on MacOS reported by users (@ChristianDuriez), the framerate is very slow. When we uncheck the visual model rendering (OglModel) the rendering goes much higher. . @fredroy and @bcarrez investigated the issue, the problem seems to be related to the use of GL_DOUBLE when passing data to opengl. . After some additional tests the issue also exists on Linux but is hardly noticeable on small mesh (like Caduceus) because the computation cost is dominated by simulation. But on a pure rendering test with tenth of Armadillo mesh (10*75000 triangles) there is undoubtly a performance drop. . This should be fixed before 19.06; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070:353,test,tests,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070,2,['test'],"['test', 'tests']"
Testability,There should be no more calls of OpenGL API in SofaKernel's modules.; Clean gl's related includes as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/425:358,test,test,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/425,2,['test'],['test']
Testability,"There was a flaw fixed in the tests, fixing it fixed all tests on Linux and OSx but raised errors on Windows. I switch to Redmond's OS to fix them and hopefully, it will then be ok...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/267#issuecomment-302020287:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/267#issuecomment-302020287,2,['test'],['tests']
Testability,There was a regression in the way RGBAColor are parsed by the stream operator>>.; This was the cause of Material reading was not working (issue #302). . This PR fix:; - fix the problem. ; - add new tests for RGBAColor & Material ; - Clean Material without breaking the API. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/305:198,test,tests,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/305,3,['test'],"['test', 'tests']"
Testability,"There was a segfault when opening MechanicalObject properties in runSofa at least with caduceus.scn; Thanks @remibessard for spotting it :+1: . Details:; For a reason I don't know, there is a Datafield named ""dforce(V_DERIV)"" in MechanicalObject that has **no help message**. Thus, when opening MechanicalObject properties, QDisplayDataWidget's constructor runs `data_->getHelp()` which returns nullptr provoking a segfault when used in stringstream creation right after. Bug introduced by 48395d837474beb67ca4d9721ebb8b7361089fe3. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1090:783,test,test,783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1090,2,['test'],['test']
Testability,There was also the OBBModel in SOFA for OrientedBoundingBox but I don't think there is a ROI function in it. Thank you @sergeiNikolaev . [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357225065:159,test,tests,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357225065,1,['test'],['tests']
Testability,"There was an error in the name of the (origin) directory to install. Not sure about the destination though. This fix has no impact on building Sofa, only on its installation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959:426,test,test,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959,2,['test'],['test']
Testability,"There was an unused variable in a frequently included header, and a missing override in another one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/386:352,test,test,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/386,2,['test'],['test']
Testability,"There was no example scene for the following components:; - BlockJacobiPreconditioner ; - JacobiPreconditioner ; - PrecomputedWarpPreconditioner; - SSORPreconditioner; - WarpPreconditioner. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2492:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2492,2,['test'],['test']
Testability,"There were only a few tests on NameDecoder in `SofaKernel/modules/SofaCore/SofaCore_test/objectmodel/BaseClass_test.cpp`. I created a dedicated file to test the main functions in NameDecoder. It required changes in some of the algorithms to comply with the added test:. - Support of nested classes; - Spaces are processed in the first pass of the algorithm, instead of adding a second pass just for spaces. This is also to detect when spaces must be skipped or not (always skipped before). For example, it must not be skipped in `unsigned int`.; - Returned string get a balanced number of opening chevrons and closing chevrons. Note: Anonymous namespaces are not supported (yet?).; Note 2: The algorithms in `NameDecoder` are complicated to read. It is hard to anticipate the result. IMO, it's due to the fact that it is written to be executed in a single pass. I think allowing multiple passes would help to read and debug these functions. `decodeTemplateName` was never called. I call it now in `getOverridableTemplateName()` instead of assuming there is no template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2380:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2380,5,['test'],"['test', 'tests']"
Testability,"There's a wierd issue in cmake package config that caused the paths to CImg to be inconsistent (depending on whether the build was triggered from ghprb or manually) on Defrost's CI.; It happens to be CMake's interpretation of the ""PACKAGE_"" prefix in . CImgPlugin/extlibs/CImg/CImgConfig.cmake.in that varied from one build to another.; The prefix is actually useless, since ${CIMG_INCLUDE_DIR} is already a valid and complete path, in build & install configurations. Removing the PACKAGE_ prefix solves the issue.; I flagged this PR as fast-merge since our CI @SofaDefrost does not build anything because of that.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/921:867,test,test,867,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/921,2,['test'],['test']
Testability,"These 2 classes were not compiled/used anymore for at least more than 1 year.; So I consider the ""deprecation""/""removal"" process as expired; and remove them from the SOFA codebase.; (and especially to avoid for good the confusion with helper::system::{Plugin/PluginManager}. Removed last files using these mechanism as well (some plugins); those files were not compiled so no consequence at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:935,test,test,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,2,['test'],['test']
Testability,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1767:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767,2,['test'],['test']
Testability,"These files are not in the CMakeLists of SofaGeneralEngine, and were not updated for 14mo.; And the good BoxROI is still in SofaEngine, still updated and tested. So I guess there is no problem with deleting those (and it seems this PR does it well 🐱‍🐉)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1333#issuecomment-613972165:154,test,tested,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1333#issuecomment-613972165,1,['test'],['tested']
Testability,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1842:1087,test,test,1087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842,2,['test'],['test']
Testability,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:987,test,test,987,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,2,['test'],['test']
Testability,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258:1063,test,test,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258,2,['test'],['test']
Testability,"They are not meant to be overriden because there is another mechanism to have a custom class name or template name. As stated in the removed comments, it should have been final. But they could be non-virtual because Base is the top-level base class. Note this is breaking. For example, SoftRobots is affected. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/298]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/4]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3242:992,test,test,992,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3242,2,['test'],['test']
Testability,"They were failing since the introduction of 2 warning messages if one was not explicitly defining an AnimationLoop and a VisualLoop. I've also adding some comment on a test and using a string litteral instead of the ugly stringstream when describing the scene in xml. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2326:168,test,test,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2326,3,['test'],['test']
Testability,"Thinking about it again, Intel(R) UHD Graphics is not a cuda capable device, so it will not be used for computation (rendering maybe?). What's the content of DEVICE_ID and DEVICE_NAME in the log message `CUDA: Using device DEVICE_ID : DEVICE_NAME`?; What do you use to measure the performances?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4423#issuecomment-1884754342:191,log,log,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4423#issuecomment-1884754342,1,['log'],['log']
Testability,"This ""move"" is originally done to uncouple CGAL plugin and Image. This was done by moving Image class (along with dependencies) from Image plugin (ImageTypes.h) to CImgPlugin (CImgData.h). The point is to reduce compilation time since CImg takes less time to compile than Image.; Now Image and CGAL both depend on CImgPlugin which is lighter.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1104:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1104,2,['test'],['test']
Testability,This (old) PR allows to have topological change with UniformMass and DiagonalMass. PointAdded and PointRemoved are added.; Add clean tracker function (temporary regarding Data discussion). This should fix the testIncise. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1212:209,test,testIncise,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1212,3,['test'],"['test', 'testIncise']"
Testability,"This CMake macro permits to create dependent options for tests that will automatically be hidden and set to OFF if SOFA_BUILD_TESTS is defined and FALSE.; If SOFA_BUILD_TESTS goes back to TRUE, the option is shown again with its old value. This way of adding a tests subdirectory should be propagated to all plugins. See [CMake documentation](https://cmake.org/cmake/help/v3.10/module/CMakeDependentOption.html) for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1164:57,test,tests,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1164,4,['test'],"['test', 'tests']"
Testability,This PR Do: ; [SofaGraphComponent] FIX Bug in scene checker.; [SofaGraphComponent] FIX RequiredPlugin . For more details have a look at the commit messages. ; This PR is a re-split of PR #548 to ease review & merging. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/563:471,test,test,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/563,2,['test'],['test']
Testability,This PR FIX Issue #928 and add basic tests on RestShapeSpringsForceField. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/942:37,test,tests,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/942,3,['test'],"['test', 'tests']"
Testability,"This PR add a component called TopologyChecker to be added in the scene and link to a MeshTopology / TopologyContainer in order to check the topology either on demand or every end of step. The methods used to check the topology is similar to the code inside the method xxxSetTopologyContainer::CheckTopology() ; which will be removed. **This PR use changes from PR #1593 and won't compile until the previous one is merged**. Fix #1367 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594:976,test,test,976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594,2,['test'],['test']
Testability,"This PR add a frameskip option to the headless recorder.; Previous behavior is kept for compatibility.; Frameskip option can have 4 different values : ; - noskip and simulationtime : previous behavior, now default. One frame is taken at each time step.; - realtime : Output images at rate of 1/fps; - an arbitrary float : tries to skip this much time between each frame. The order between simulation and frame saving has also been inverted : now the first frame taken is at time 0, instead of time dt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/615:753,test,test,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/615,2,['test'],['test']
Testability,"This PR add a new class to test at the same time TriangleFEMForceField and TriangularFEMForceField. Same results and value are expected in the idea of merging those 2 components in a near future. . In this PR 14 tests are added (7 on each version). 2 are failing and has been disabled: ; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_init -> inconsistency in code; [ FAILED ] TriangleFEMForceField3_test.checkTriangularFEMForceField_values -> inconsistency in code. This PR also fix the init of both component, checking the input Data value and setting them as required.; Update setter as well which should be upgraded to Data callback in a next PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2249:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249,4,['test'],"['test', 'tests']"
Testability,"This PR add a unit test that is currently failing, showing that the inertia is wrongly taken into account for rigid with different inertia along each direction. . After rotation of a rigid, the inertia matrix is not rotated accordingly. See issue https://github.com/sofa-framework/sofa/issues/4936. . We need to fix this ! . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4935:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4935,3,['test'],['test']
Testability,This PR add some facility method to convert back and forth a `MapMapSparseMatrix` type ; into an `Eigen::SparseMatrix`. # CHANGELOG ; * Added some utility methods to be able to accumulate MatrixDeriv types to parent dofs when the mapping implements its jacobian using a sparse matrix from the Eigen library.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/452:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/452,2,['test'],['test']
Testability,"This PR add:; Initialization of helper::vector using {}. Example:; helper::vector< double > vec1 = {5,4,7,1,2};; helper::vector<helper::vector< double >> vec2 = {{5,4},{7,1,2}};; ______________________________________________________. This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/252:348,test,test,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/252,1,['test'],['test']
Testability,"This PR address the problem of the uses of atoi and atof in the parse methods. . In short, ; using atof/i is flawned because:; - it does not check that the attribute is successfully parsed by atoi/atof resulting in undefined behavior when user input is invalid. ; - the components that use them also forgot to set the Local to ""C"" resulting in wrong parsing of 0.1 vs 0,1 (reported in issue https://github.com/sofa-framework/sofa/issues/151); - a failure during the parsing of the attribute does not generate a message to the user when something is wrong. . This PR add getAttributeAsFloat and getAttributeAsInt to be used in place of atof(attr->getAttribute()).; The getAttributeAs* method set the correct Local as well as generates error messages in case they are unable to parse the attribute. The PR contains new tests for the two added functions as well as a more general test in MechanicalObject.; This PR shouldn't break any API or scene or whatever. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/161:817,test,tests,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/161,3,['test'],"['test', 'tests']"
Testability,"This PR adds 2 generic tests for mappings:. - It tests `applyDJT` in two different contexts to cover both situtations; - It tests `buildGeometricStiffnessMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897,5,['test'],"['test', 'tests']"
Testability,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2169:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169,2,['test'],['test']
Testability,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4290:1165,test,test,1165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290,2,['test'],['test']
Testability,"This PR adds a RGBAColor type in defaulttype as well as dedicated tests. . There is several advantage of doing so:; - no ambiguity in the code between a rgba color and vector4.; - the code needed to build colors from their name, hexadecimal or list of float is factored in this class (while currently there is at least 8 duplications in the sofa code base); - unifying the underlying data also offer the possibility to offer consistent user interface for colors . This PR will be the ground to solve issue #https://github.com/sofa-framework/sofa/issues/64. . This PR have no impact on the sofa source code. Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/119:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/119,3,['test'],"['test', 'tests']"
Testability,"This PR adds a `isFile` function to the FileSystem component. The PluginManager will then use this new function to test whether or not the plugin path is an existent file. @guparan Concerning your question last week (what happens if the name of the plugin is passed without a path), the previous behavior was to check if the file was a valid library file (.so, etc.), and then gather the full path from the search directories. The new behavior will first check that the file is a valid file (which won't be if only the name is passed), and then try to find it in the search directories. This should not break any old behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621:115,test,test,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621,3,['test'],['test']
Testability,"This PR adds a base test for the MeshSTLLoader component, based on similar tests for the OBJ and VTK loaders. It loads and checks the composition of the 3 .stl meshes available in share/meshes. Fix #2899; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2999:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2999,4,['test'],"['test', 'tests']"
Testability,"This PR adds a callback in OglModel, to update the current visual (triggering a call to `initVisual()`), whenever the `m_positions` field is changed dynamically. The first interest of this PR is to add the possibility to change dynamically the underlying mesh of the OglModel (typically with a controller), and see the corresponding changes.; The context I'm using this feature is in a scene where I have several mesh files representing the same mesh moving along time. Loading these meshes sequentially along time, using a python controller, is equivalent to impose a displacement to the underlying mesh during the simulation. But visualising this movement requires this additional callback.; Unfortunately I can't share the data I'm referring to, and I don't have an example as striking at my disposal. There are two questions I'd like to discuss:; - Is this callback likely to cause some trouble in existing scenes ?; - Is this behaviour generally desirable ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925:1503,test,test,1503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925,2,['test'],['test']
Testability,This PR adds a few boolean Data parameters for the user to have ore control when using the component:; - stopAtNodeToParse: to avoid considering children nodes of the node to be parsed.; - skipJ1tKJ1: to avoid computing the contribution of the first object (useful when several MMMappers are used and you want to avoid to compute several time the same contribution); - skipJ2tKJ2: to avoid computing the contribution of the 2nd object. It adds also a few templates and corrects a bug (mat12.matrix->add instead of mat22.matrix->add). Enjoy!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/882:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/882,2,['test'],['test']
Testability,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1832:977,test,test,977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832,2,['test'],['test']
Testability,"This PR adds an attribute pathType (m_pathType) in DataFileName and DataFileNameVector to be able to easily identify whether a component holding a DataFileName accepts files, directories or both. This is useful to provide custom fileDialogs in user interfaces such as runSofa2, give more information about the type of values a dataFileName takes, and provide better error messages. To use it: in the ctor of the component, on a DataFileName datafield, call setPathType(<PathType>) (<PathType> being an enum value of either FILE, DIRECTORY or BOTH. Default value is FILE). The PathType of a DataFileName can be queried by calling getPathType(). In addition, checks are made within the updatePath() method of DataFileName, called when the value changes, to guarantee that the value set is consistent with the defined path type. Since the default pathtype is set to FILE, there are only few components that are directly affected by the pull request (AddResourceRepository is one of them (takes only directories), MeshExporters have a DataFileNameVector which can accept both directories and files. Those 2 components had to be modified to behave properly, and I've been able to identify them thanks to the existing unit tests & scene tests that we compile on the CI. There's no guarantee that there isn't any untested component that should be updated too, but the fix is easy (setPathType(WHATEVER) in the ctor of the component). Same goes for pluginized components of course. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407:1217,test,tests,1217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407,4,['test'],"['test', 'tests']"
Testability,"This PR adds custom RPATH to handle dependencies to relocatable targets that will be installed in the ""plugins"" directory. 3 cases are handled:; - A non-relocatable library depends on a relocatable library; - A relocatable library depends on a relocatable library; - A relocatable library depends on a non-relocatable library. WARNING: note that this is a hacky fix based on the hacky RELOCATABLE ""feature"". ; TODO: rework the CMake files to replace the relocatable mechanism by something more standard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:1043,test,test,1043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,2,['test'],['test']
Testability,"This PR adds finally hyperelasticity code in SOFA! ; Related to issue : https://github.com/sofa-framework/sofa/issues/231. Based on the work of @hdeling with @IPeterlik six new hyperelastic models (linearized or non-linear constitutive law) can now be used:; - ArrudaBoyce; - StVenant; - Mooney-Rivlin; - VerondaWestman; - Costa; - Ogden. Note that a validation of such models was done in this [paper](https://hal.inria.fr/hal-01536406/).; More about this can be found on the[ SOFA website](https://www.sofa-framework.org/about/news/validation-of-a-non-linear-model-of-the-liver/). TODO next : ; - improve how parameters are given, stored; - allow for non-homogeneous model (definition per tetra); - add associated test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/349:715,test,test,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/349,3,['test'],['test']
Testability,"This PR adds several bindings to the SOFA python's plugin that we recently needed for a project. - GUIManager: set prefix, config and screenshot directories; - RegularGrid: get the position of a given node index; - SparseGrid:; get the cube and node index in the underneath regular grid; get the position of a given node index; get the boundary cells and nodes; find the cube that enclose a given position; get the nodes indices of a given cube; - Simulation: init and unload a simulation node. Export a scene.; - SofaModule: add plugin repositories, create and set the simulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990:833,test,test,833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990,2,['test'],['test']
Testability,This PR adds some read/write access method for Data which can shorten slightly the syntax ; required when you want to construct a Read(Write)Accessor object for a Data. ; It extends the method implemented in commit 77ca6f2a7c2cf18a39cdad6a4a88f02ed6d9a9dd; for WriteOnlyAccessor to other types of Data Accessor.; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/450:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/450,2,['test'],['test']
Testability,"This PR adds the ability to autoload plugins, i.e without the need to add ""RequiredPlugin"" in each scene file.; This is especially useful for ""essential"" plugins such as SofaPython.; For now, only SofaPython is marked as ""Autoloadable"". An other future PR will activate CImgPlugin to add image loading (and remove ImagePNG/ImageBMP from SofaKernel). ""Main"" programs just needs to add the line : ; `sofa::helper::system::PluginManager::getInstance().autoloadPlugins();`. Important Changes:; * autoload API in Plugin ""interface""; * remove hard loading of SofaPython in runSofa; * add a new commandline in runSofa to disable autoloading of plugins (enable by default); * add a test; * (not really related to the PR but could be useful) add an helper function to check if a file is a symbolic link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,2,['test'],['test']
Testability,"This PR adds the cmake option ""NINJA_BUILD_POOL_FLEXIBLE"" which limits the number of CPU cores used to build the Flexible target (default value: 1). Can be easily replicated to other projects as needed. ; This is only effective when using Ninja.; This will make possible to optimize the number of build threads without hitting the RAM limit on CI, but also on workstations.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254,1,['test'],['test']
Testability,"This PR adds the possibility to add bloc matrices in a basematrix. By default this function calls the add function with a scalar but it can also be overlaoaded to reduce the number of virtual function calls. . With the combination of 1x1, 2x2 and 3x3 matrices, it covers most of needs for simulations (the other matrix dimension can be implemented as a combination of the implemented functions). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1143:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1143,2,['test'],['test']
Testability,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1733:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733,2,['test'],['test']
Testability,"This PR aims at cleaning and improving the response method available in SOFA.; Here are the changes on the user standpoint:. - default :arrow_right: PenalityContactForceField; - FrictionContact :arrow_right: FrictionContactConstraint; - ray :arrow_right: RayContact; - registration :arrow_right: RegistrationContactForceField; - stick :arrow_right: StickContactForceField; - StickContactConstraint (remains unchanged); - distanceLMConstraint (remains unchanged). Personally, I love it :heart: . - Fix #1966; - NOTE: a documentation page should soon join the PR if it pleases the reviewers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2522:1129,test,test,1129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2522,2,['test'],['test']
Testability,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4574:1161,test,test,1161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574,2,['test'],['test']
Testability,"This PR aims to improve the way we search and load plugins. It adds:; - recursive search in PluginManager::findPlugin; - finding plugin dependencies in its directory (Windows only); - (SofaPython) function to easily edit sys.path at any plugin init; - ~~new Data in RequiredPlugin to find out-of-sofa plugins: `searchPath`~~; - new component AddPluginRepository for adding a path to the pool of plugin paths; - ~~**BREAKING**~~: rename AddResourceRepository into AddDataRepository (alias added for backward compat); - new default plugins folder in build/install to allow drag&drop. The last one shall be discussed, I'm not sure it is really needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:900,test,test,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,2,['test'],['test']
Testability,"This PR allows to add aliases in C++ in DisplayFlags.; Moreover, DisplayFlags are now case insensitive but a warning is given.; The DisplayFlagsDataWidget is now fixed to correspond to the FlagTreeItem names. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/671:460,test,test,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/671,2,['test'],['test']
Testability,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861:749,test,test,749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861,2,['test'],['test']
Testability,"This PR awaits first a migration to Discord. These actions allow 4 new notifications:; - when a new release of SOFA is done; - weekly to set up the SOFA dev meeting agenda; - weekly to summarize posts on GH discussions awaiting for a reply; - notification for all GH discussions ""Announcements"" or ""Share your achievements""; - forward all GH notifications (PR, issues, stars) in a minimalist and visual way in the main channel; - rename existing actions to better identify/distinguish them all. Python API has been factorized to use mostly one script. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4445:1091,test,test,1091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4445,2,['test'],['test']
Testability,"This PR can be closed. Nevertheless, I'll check SparseLDLSolver again, and add a unit test in a future PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1709555765:86,test,test,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1709555765,1,['test'],['test']
Testability,"This PR change the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::Vec<Type> can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) need to be updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/328:955,test,test,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/328,2,['test'],['test']
Testability,"This PR changes the API of the Event class slightly so that there's no need to instantiate an Event to get its classname.; The getClassName method that was previously implemented by each of Event's subclasses is moved in the SOFA_EVENT_H macro, and a static GetClassName method becomes the one to override. This is important as Events do not have a default ctor and it is thus impossible to instantiate a dummy event to check its type without knowing the signature of the subclass's ctor. This allows me to implement better and cleaner bindings for events in SofaPython3. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1118:823,test,test,823,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1118,2,['test'],['test']
Testability,"This PR changes the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::fixed_array (and so helper::Vec<Type>) can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) is updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330:977,test,test,977,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330,2,['test'],['test']
Testability,"This PR completes #1619 by adding a recursive dependency search.; RPATH should now cover ALL dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1710:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1710,2,['test'],['test']
Testability,This PR contains a set of small changes on SofaPython that we are using in our projects. . CHANGELOG:; - [SofaHelper] add StringUtils::getStringCopy (because it was duplicated in several place of the plugin); - [SofaPython] add systematically sys.argv in PythonEnvironment; - [SofaPython] add a very general getattr function in Binding_Node (to write node1.node2.node3.obj.data); - [SofaPython] add a getTarget in BaseObject (to return the plugins that contains a component); - [SofaPython] add a getComponentsFromTarget in the Sofa module ; - [SofaPython] add some minor function in Binding_Data; - [SofaPython] add docstring support for the Sofa module; - [SofaPython] change Binding_BaseContext.getObject to return None instead of a broken exception . There is tests for all features. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656:764,test,tests,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656,3,['test'],"['test', 'tests']"
Testability,"This PR contains all the changes I did to produce SOFA releases.; Basically it is almost only CMake improvements to ease SOFA installation. Some of them may not be clean/wanted/useful, **please give feedback**. WARNING: I renamed some macros in SofaMacros.cmake so this could break your code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/635:544,test,test,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/635,2,['test'],['test']
Testability,This PR contains needed SOFA modifications for regression tests reactivation:; - Remove SofaTest_test/Regression_test (moved to https://github.com/sofa-framework/regression) and SofaVerification; - FIX DataRepository init: always load sofa.ini at construction; - FIX SofaGTestMain for out-of-sofa use; - ADD `FileSystem::findFiles` for recursive search; - FIX some scenes; - ADD `RegressionStateScenes.regression-tests` and `RegressionTopologyScenes.regression-tests` for listing tested scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830:58,test,tests,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830,6,['test'],"['test', 'tested', 'tests']"
Testability,"This PR contains small changes to runSofa. . One is to save & restore the scenegraph state in the live-coding mode. This fix avoid to constantly have to expand/collapse things to restore the view in a manageable state when we reload. . The second change is to fix a problem. When Data fields that belong in the ""Infos"" results in having to ""Infos"" panel in the object inspector. So this PR add the Data fields which are in the Info groups to the existing ""Infos"" panel instead of creating a second one with the same name. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/657:775,test,test,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/657,2,['test'],['test']
Testability,This PR contains some minor fixes and adds two new components named: UniformStiff & DiagonalStiffness. Checklist: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [x] is now 1 week old and no one send a 'no go' comment.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/147:197,test,test,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/147,2,['test'],"['test', 'tests']"
Testability,"This PR contains the code required to retrieve a component's bounding box in Python, and to manually call for a BaseObject's computeBBox method. This was necessary in my case to create a RegularGrid from a mesh, since contrary to the sparseGrid, the regularGrid does not look at the node's MechanicalObject to create the grid.; An example scene in this PR shows my specific use case. Concerning the bindings, I made the BoundingBox's minBBox and maxBBox read only since this should be computed by the component, and not set externally IMHO. Could be useful to bind the different methods of BoundingBox too, but this is not covered in this PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/736:894,test,test,894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/736,2,['test'],['test']
Testability,"This PR depends on #2374 #2375 and #2376 and should be rebased before review. - Remove old method ```handleTopologyChange```; - Turn d_indices into TopologySubsetIndices, this automatically fix the topological changes update. ; - Fix the use of subset indices combined with topology changes.; - Add callback on endingEvent to update the totalMass/vertexMass; - Fix the center of gravity display when using subset of indices. Here is an example of scenes RemovingTrianglesProcess.scn using a subset of indices (yellow points); ```<UniformMass template=""Vec3d,double"" name=""mass"" totalMass=""1.0"" handleTopologicalChanges=""1"" indices=""0 1 2 3 4 5 6 7 8 9""/>```. ![RemovingTrianglesProcess_00000001](https://user-images.githubusercontent.com/21199245/135688953-b9a8d6fa-eafc-499e-916d-8e209b227736.png). ![RemovingTrianglesProcess_00000002](https://user-images.githubusercontent.com/21199245/135688979-3e678cc4-a95b-4ff8-b685-688e761d0640.png). ______________________________; ________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2377:1482,test,test,1482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2377,2,['test'],['test']
Testability,"This PR depends on PR #2299 (should be rebased). 1. Use callback to update the list of triangles/quads and vertices when topological changes happened.; 2. Add also callback on texcoord to update texture coordinate when mesh changed. - Update of texture coordinates was buggy when removing points; <img src=""https://user-images.githubusercontent.com/21199245/129899818-50ef6454-ca73-49fa-9a1a-f3284eb4915b.png"" width=""70%"" />. - Adding new points where created with texCoord(0, 0); <img src=""https://user-images.githubusercontent.com/21199245/129899836-1a9ad38b-5359-447a-9d68-b11bb68f7813.png"" width=""70%"" />. -> Using the callback on texcoords, use ancestors and coefficient of added point to apply the good texCoords; <img src=""https://user-images.githubusercontent.com/21199245/129899846-178564ea-044d-4db8-a5fb-b4e318f0467e.png"" width=""70%"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2300:1388,test,test,1388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2300,2,['test'],['test']
Testability,This PR depends on the #1186 . Move code of ParticleSource into inl file and clean it: ; - change Data and member prefix; - remove old code and hacks; - update the scene examples. ![SPHParticleSource_00000001](https://user-images.githubusercontent.com/21199245/67021784-6f3be100-f100-11e9-89e6-98ddfd6d6393.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1190:564,test,test,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1190,2,['test'],['test']
Testability,"This PR deprecates LocalStorage and its (only) implementation CactusLocalStorage.; It seems it was planned for an eventual parallelization of the visitor traversal. Since then, it is not really relevant anymore (link, etc). Present since the beginning (16 years ago!) but it seems it was never used,; as the only implementation of LocalStorage (CactusLocalStorage) is never instanced anywhere. IMO we could even directly remove it as it is 99,99...9% sure nobody uses it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4327:1011,test,test,1011,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4327,2,['test'],['test']
Testability,"This PR diffs against the sofa-framework::issofa_constrainsolving branch until it has been merged into master. # Objectives; - Adjust FreeMotionAnimationLoop so that it is more faithful to the actual equations, most notably by ; allowing only one linearisation of the mappings within the time step. ; - Update the API in order to compute a linearised version of the constraint forces, in a similar fashion to ; what is done in the Compliant plugin. . # Requirements ; The following PR are required in order to build this ; - #484 ✔️; - #450 ✔️ ; - #452 ✔️ ; - #456 ✔️ . For testing: ; - `SOFA_USE_MASK` **must** be deactivated, otherwise derivatives quantities ( velocity at contact points for example) are not propagated at all since all dofs are ""masked"" by default. After having a rather quick look, apparently the `SOFA_USE_MASK` impose some strict (undocumented) requirements (on top of other limitations like the fact that it does not support changes in the topology) about where in the time step the ""apply"" method of mappings is called. - There is a branch on my local fork that integrates all the requirements for testing that can be found at the following location [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration). # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:574,test,testing,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['test'],['testing']
Testability,"This PR disable tests that identify known issues in SOFA.; However, failing tests prevent from an efficient review of the PR. We disable them for now, but GitHub issues should be created for each test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2290:16,test,tests,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290,5,['test'],"['test', 'tests']"
Testability,"This PR disables all freshly pluginized modules by default except for SofaMiscCollision because it contains DefaultCollisionGroupManager. It also disables PSL by default.; Tell me if these default plugins should actually be kept. To continue testing as before (and to keep our scene tests working) I manually enable all these plugins in CI at configuration step. This will fix some failing scene tests due to missing dependency (RequiredPlugin).; Actually, the scenes with missing dependencies due to disabled plugin (plugin library not found in `bin`) should not even be tested. Some scenes like `Fluid2D.scn` and `Fluid3D.scn` could even be moved to an examples folder in `plugins/SofaEulerianFluid`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575:242,test,testing,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575,6,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"This PR does what I want it to do:; - when changing a MeshLoader's filename, all buffers are properly reset in the OglModel.; - When changing the edges / triangles / position fields of the oglModel, all buffers are properly reset. Yet I don't know if I'm doing this right. @fredroy especially, I think you might have some objections with the code.; Lemme know!. (this PR follows up on #1423). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1483:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1483,2,['test'],['test']
Testability,"This PR factorizes the code of PartialFixedConstraint by inheriting for most functions (init, draw) from the FixedConstraint; FIX #440 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/718:388,test,test,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/718,2,['test'],['test']
Testability,"This PR fix UI problem:; - the icon now display the correct icon (green for info message, yellow for warning and red for error) instead of a red sign all the time; - the icon was displayed at scene loading but not updated. This happens when using controllers that emits messages at simulation time. The result was that the treeview was out-of-date misleading the users. Using the feature introduced in #2397, the state is now tracked to correctly report the message status with it is changed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398:1034,test,test,1034,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398,2,['test'],['test']
Testability,This PR fix an issue with sofa-launcher. When we are using sofa-launcher the scene we want to execute is copied in the /tmp directory. ; But because we weren't closing the current file it wasn't saved and so wasn't executed. . The fix close it.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/592:497,test,test,497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/592,2,['test'],['test']
Testability,This PR fix an issue with the BoxROI component. There was a test in the constructor of BoxROI that created an unwanted behavior.; This test was moved in reinit(); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/627:60,test,test,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/627,4,['test'],['test']
Testability,"This PR fix an issue with the WriteState component. When we are using WriteState, we indicate as an argument the period with which we want to save the states. The states will be then saved in a file when a modulo of the period is reached.; But I have observed that there is always a one step offset between reaching the time to save and the actual saving. So I naively add one dt to the time WriteState is working with. . If there is an other way to resolve this issue without hard-coding in WriteState like I have done, I will be happy implement it . Thanks in advance; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625,2,['test'],['test']
Testability,"This PR fix the opengl performance issue reported in #https://github.com/sofa-framework/sofa/issues/1070. The fix is in OglModel.cpp/OglModel.h and is very simple, when the positions and normals array are containg double precision numbers they are converted into single precision one before sending the data to OpenGL. I'm sure we can optimize further the conversion loop...but I have not time for that (volunteer needed). . Because the code in OglModel was hard to read because of the #ifdef GLEW all around I first cleaned the whole SofaOpenglVisual code, by removing the #ifdef. I also updated the call to function with name *ARB because they are now part of any baseline opengl implementation since nearly a decade. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069:973,test,test,973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069,2,['test'],['test']
Testability,This PR fixes ShewchukPCGLinearSolver member `preconditioners` initialization.; Should fix the failing scene test `FEMBAR-PCGLinearSolver.scn`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/737:109,test,test,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/737,3,['test'],['test']
Testability,"This PR fixes a bug introduced in #2225. It's basically just a revert. ; Half of my scenes were crashing :( . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265,2,['test'],['test']
Testability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; It is required that header-only embedded libraries have their license in a separate file, that can be listed then in the conda package recipe.; This PR adds a missing license file for json nlohmann library (MIT) and homogenize the license file name for the two others SOFA header-only embedded libraries (difflib and stb, both also on MIT license). ; Cxxopts, which the last header-only embedded library in SOFA, will be treated separately in another PR to handle the code fetch case through cmake FetchContent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4272:1183,test,test,1183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4272,2,['test'],['test']
Testability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4273:1326,test,test,1326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273,2,['test'],['test']
Testability,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1813:963,test,test,963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813,2,['test'],['test']
Testability,This PR fixes errors like `[FileRepository] File icons/back.png NOT FOUND` reported recently. These errors were caused by the fact that SofaGuiQt and runSofa had no idea were to find their resources (if not installed).; Adding and configuring some .ini files will fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/758:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/758,2,['test'],['test']
Testability,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2170:1306,test,test,1306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170,2,['test'],['test']
Testability,"This PR fixes exception handling in Python bindings. Mostly, the PR replaces the incorrect:; ```c++; PyErr_BadArgument();; Py_RETURN_NONE;; ```; with the correct:; ```c++; PyErr_BadArgument();; return NULL;; ```. As the [Python API](https://docs.python.org/2/c-api/exceptions.html) documentation says: . > [Python exception handling] works somewhat like the Unix errno variable: there is a global indicator (per thread) of the last error that occurred. Most functions don’t clear this on success, but will set it to indicate the cause of the error on failure.; > ; > **Most functions also return an error indicator, usually NULL if they are supposed to return a pointer, or -1 if they return an integer (exception: the PyArg_*() functions return 1 for success and 0 for failure).**. As it happened, any error triggered within the python bindings would go unnoticed until someone else would check the error flag using `PyErr_Occurred`, possibly during a python code error or by some other C extension (in my case, Numpy). . Hopefully the behaviour is now correct. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] the content of the PR is clear and that a future PR from @maxime-tournier may follow the @matthieu-nesme suggestion. ; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:1232,test,test,1232,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,1,['test'],['test']
Testability,This PR fixes install finding of Boost::program_options dependency added for the new ArgumentParser API in #513 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/618:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/618,2,['test'],['test']
Testability,"This PR fixes missing default ""plugins"" (now modules) after https://github.com/sofa-framework/sofa/pull/732. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/753:360,test,test,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/753,2,['test'],['test']
Testability,"This PR fixes most of the warnings which are not related to the lifecycle (on Ubuntu).; Summer cleaning :shower: . I did not put it as fast merge regarding the test on intersection @fredroy ; Once your reviewed this part, we could flag it :flags: . :love_letter: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4909:160,test,test,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4909,3,['test'],['test']
Testability,"This PR fixes quaternion integration so that a 1 rad.s^{-1} angular velocity integrated during 1 second results in a 1 rad angle change, as one generally expects. The original quaternion integration scheme is a [gnomonic projection](https://en.wikipedia.org/wiki/Gnomonic_projection) on the 3-sphere (or equivalently, a variant of the Cayley transform) that prevents the maximum angular change to exceed *pi* rad during one time-step, which is problematic as angular velocities get larger. Also, the angular velocity does not integrate to the corresponding rotation angle using this chart, as demonstrated in the failing test. This PR implements the [exponential map](https://en.wikipedia.org/wiki/Exponential_map_(Riemannian_geometry)) for unit quaternion integration given spatial angular velocity, which fixes both issues. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,2,['test'],['test']
Testability,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1815:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815,2,['test'],['test']
Testability,This PR fixes some of the failing unit tests in https://github.com/sofa-framework/sofa/pull/2554,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2578#issuecomment-1010909781:39,test,tests,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2578#issuecomment-1010909781,2,['test'],['tests']
Testability,"This PR fixes the `init()` of RigidRigidMapping when using `globalToLocalCoords=True` (your positions are initially expressed wrt the global frame) with `repartition` (your child's positions are mapped to the parent's positions using this description). . When we look at the code, we can see that someone already fixed the `init()` but only for one of three cases. ; This PR fixes the two forgotten cases. . **EDIT**. This PR:. RigidMapping:; - adds template <Rigid3,Rigid3> with tests ; - this change required some updates/additions in RigidCoord and RigidDeriv; - cleans variables name (d_, m_), which is **breaking** . RigidRigidMapping:; - sets the component as deprecated (with instruction to fix the scene) ; - fixes `init()` when using `globalToLocalCoords=True` with `repartition` ; - adds tests; - cleans variables name (d_, m_), which is **breaking**; - adds vectors' size checks; - adds component state checks; - removes ""fake"" vectors' size checks: if the sizes mismatch it should be detected during the initialization and the component should be in an invalid state. If the sizes change during execution, it is not enough to just check the size, the component should be in an invalid state because it impacts many other things... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680:480,test,tests,480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680,4,['test'],"['test', 'tests']"
Testability,This PR fixes the compilation of CGAL plugin with CGAL version greater than 4.10. It also enables back the CylinderMesh component for which I'm not sure why it was removed in the first place as it seems to work perfectly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/783:473,test,test,473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/783,2,['test'],['test']
Testability,This PR follows #1272 to fix a link error on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1282:305,test,test,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1282,2,['test'],['test']
Testability,"This PR follows @marques-bruno work on https://github.com/sofa-framework/sofa/pull/909. - add INCLUDE_SOURCE_DIR parameter to sofa_generate_package; - rename INCLUDE_ROOT_DIR to INCLUDE_INSTALL_DIR (avoid confusion with INCLUDE_SOURCE_DIR). The idea is to permit this:; ```; sofa_generate_package(; NAME SofaSparseSolver ; VERSION ${PROJECT_VERSION} ; TARGETS SofaSparseSolver; INCLUDE_SOURCE_DIR ""src/SofaSparseSolver""; INCLUDE_INSTALL_DIR ""SofaSparseSolver/SofaSparseSolver""; ); ```; to obtain for example an install tree like this; ```; install; include <-- include_directories here exposes ALL module headers; SofaBaseTopology; header.h; SofaSparseSolver <-- include_directories here exposes ONLY SofaSparseSolver headers; SofaSparseSolver; header.h; SofaValidation; header.h; ...; ```; which is needed if we want to cleanly separate SOFA include directories. In a future PR I'd like to rework all SOFA install tree based on this INCLUDE_SOURCE_DIR + INCLUDE_INSTALL_DIR mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/951:1237,test,test,1237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/951,2,['test'],['test']
Testability,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1880:176,test,tests,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880,3,['test'],"['test', 'tests']"
Testability,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:1254,test,test,1254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,2,['test'],['test']
Testability,"This PR hopes to solve the bug where radius option can't be used with AttachConstraint. Provided scenario will crash SOFA.; [attach_radius.txt](https://github.com/sofa-framework/sofa/files/1973782/attach_radius.txt) (Github don't let me give `*.scn` ...). This is due to a call done to early. First commit solve this specific issue.; However, if you execute the previous scenario with just the first commit, it will still not work correctly : both index 0 points will be attached to each other, and that's it. The reason is that the mechanical objects are not correctly initialized when AttachConstraint `init()` is called. Commit 2 is a hack to show how it behave if we delay the initialisation. This does not aim to stay (and likely breaks working scenarios). Is there a way to delay said initialisation ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/650:1060,test,test,1060,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/650,2,['test'],['test']
Testability,"This PR https://github.com/sofa-framework/sofa/pull/4935 adds a unit test showing that the inertia matrix in rigids is not working properly. After rotation of the rigid, the inertia matrix is not rotated accordingly. . You can try a 'hand-on' example with the following : . ```py; #Required import for python; import Sofa; import SofaRuntime; from Sofa import SofaLinearSolver; import numpy as np. # Function called when the scene graph is being created; def createScene(root):. root.gravity=[0,0,0]. root.addObject('VisualStyle', displayFlags=""showBehaviorModels showForceFields""). root.addObject(""RequiredPlugin"", pluginName=['Sofa.Component.Mass',; 'Sofa.Component.StateContainer',; 'Sofa.Component.Topology.Container.Grid',; 'Sofa.Component.Visual'; ]). root.addObject('DefaultAnimationLoop'); root.addObject('DefaultVisualManagerLoop'). root.addObject('RequiredPlugin', name='Sofa.Component.ODESolver.Backward'); root.addObject('RequiredPlugin', name='Sofa.Component.LinearSolver.Direct'); root.addObject('RequiredPlugin', name='Sofa.Component.Engine.Select'); root.addObject('RequiredPlugin', name='Sofa.Component.Constraint.Projective'); root.addObject('RequiredPlugin', name='Sofa.Component.SolidMechanics.FEM.Elastic'). root.addObject(RotatorController('RotatorController', name='matrixAccessor', root=root)). totalMass = 300; x_side = 0.15; y_side = 0.15; z_side = 0.7; volume = x_side*y_side*z_side; inertiaMatrix = [(y_side**2 + z_side**2)/12, 0.0, 0.0, 0.0, (x_side**2 + z_side**2)/12, 0.0, 0.0, 0.0, (x_side**2 + y_side**2)/12]. print([totalMass, volume, inertiaMatrix[:]]). root.addObject('EulerImplicitSolver', rayleighStiffness=""0.0"", rayleighMass=""0.0""); root.addObject('SparseLDLSolver', applyPermutation=""false"", template=""CompressedRowSparseMatrixd""). aligned = root.addChild(""Aligned""). aligned.addObject('MechanicalObject', template='Rigid3', position=[0, 0, 0, 0, 0, 0, 1], showObject=True,; showObjectScale=0.1); aligned.addObject('UniformMass', name=""mass"", vertexMass=[total",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4936:69,test,test,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4936,1,['test'],['test']
Testability,"This PR improves the `sofa_add_external_*` macros used for example by SofaHighOrder. It changes `sofa_add_external_subdirectory` behavior: instead of directly fetching/cloning the repository, it creates a CMake option which, if checked, will do the fetch (and be automatically reset to OFF aftewards). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/759:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/759,2,['test'],['test']
Testability,"This PR improves the message about missing required plugins for python users. Before it was printing lines to cut and paste in the scene (which is really nice!), but only for xml users. Now I propose to check the scene's extension and adapt the message. Here's an example for python:. ![image](https://user-images.githubusercontent.com/12150715/173034896-f7547d53-6a99-475a-892f-b481709ed0c4.png); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:939,test,test,939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,2,['test'],['test']
Testability,This PR include PR #1508 and replace last use of Qwt in QGraphDataWidget by qtCharts; Remove all cmake config of Qwt and remove the internal library. should fix #1496 or make things worst!. ![graph_cg](https://user-images.githubusercontent.com/21199245/94787278-63f5ca00-03d2-11eb-8fca-80bfcd40ba29.JPG); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1512:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1512,2,['test'],['test']
Testability,"This PR includes PR #2082 . - move topology pointer in mother class TopologyHandler instead of TopologyDataHandler; - Register TopologyHandler directly in each TopologyContainer level instead of inside a global list.; - Remove Data list of TopologyChange from each TopologyHandler and use directly the one from the TopologyContainer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2085:873,test,test,873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2085,2,['test'],['test']
Testability,"This PR includes PR #2085 and #2082; will be merge in TopologyChange Poc branch. This method is not needed anymore in the TopologyHandler mechanism. Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2086:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2086,2,['test'],['test']
Testability,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1860:916,test,test,916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860,2,['test'],['test']
Testability,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2162:908,test,test,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162,2,['test'],['test']
Testability,"This PR introduces CMake configurations for SOFA activating and deactivating sub-parts of the project given the SOFA_CONFIGURATION string : CORE/STANDARD/FULL. . The configuration can be forced using `SOFA_FORCE_CONFIGURATION` otherwise the configuration can still be tweaked using CMake option command line. . To apply those configuration I've made two main modification depending on what needed to be activated :; - For options : I've added a CMake macro `sofa_configuration_dependent_option` that allows to specify the scope of the option and force it when needed.; - For plugins : I've modified the sofa_add_subdirectory adding the possibility to specify a `CONFIGURATION` type enabling or disabling the plugin by default depending on the config type and forcing the activation when needed. These configurations have been defined regarding the last STC discussion. . PS: This PR also enables to build Sofa.GUI without Qt. ; PPS: This PR also deactivates the legacy headers by default now; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:1532,test,test,1532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,2,['test'],['test']
Testability,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4268:592,test,testable,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268,4,['test'],"['test', 'testable']"
Testability,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:28,test,test,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,8,['test'],"['test', 'tests']"
Testability,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219:899,test,test,899,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219,2,['test'],['test']
Testability,This PR is Based on #1004 . CHANGELOG:; - Cosmetic cleaning in RigidRigidMapping & replace serr with msg_error. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1005:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1005,2,['test'],['test']
Testability,"This PR is a ""all-in-one"" fix that correct all the failing test taggued ""OpenIssue"". ; To fix the issues some changes have been done but it shouldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:59,test,test,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,5,['test'],"['test', 'tests']"
Testability,This PR is a cherry pick of the changes proposed in PR #869 . Here is the initial description of the PR by @fspadoni . ---------. When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1447:1333,test,test,1333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1447,2,['test'],['test']
Testability,"This PR is a clean before introducing more work on the GeomagicDriver and a GeomagicEmulator. - Move all code related to model display from GeomagicDriver to an embedded class GeomagicVisualModel. This last class is not a component but it creates the node hierarchy to display the device.; - Various minor changes in Driver like adding a singleLink to the Forcefeedback. If needed this work would allow to use GeomagicDriver without linking to SofaOpenglVisual nor SofaLoader. (With a few changes in the cmakelists and in code). ![geomagic_demo](https://user-images.githubusercontent.com/21199245/81161088-4e978380-8f8b-11ea-9f59-bad683bc014d.JPG). - Even if this display is only for debug, my eyes were bleeding too much to let that.; Update the mesh to have cleaner normals/vertices. New mesh display:. ![Geomagic-RigidCubes_00000003](https://user-images.githubusercontent.com/21199245/81160922-06786100-8f8b-11ea-91f8-59fd904c8c2f.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1366:1191,test,test,1191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1366,2,['test'],['test']
Testability,This PR is a follow up #548 ; My last batch of changes to fix the CI. Please review :) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565,2,['test'],['test']
Testability,"This PR is a merge with #4802. ![](https://private-user-images.githubusercontent.com/30337881/337613447-0367e8be-aebb-4349-9b01-dc7f4e73ac2a.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTkzOTE1ODAsIm5iZiI6MTcxOTM5MTI4MCwicGF0aCI6Ii8zMDMzNzg4MS8zMzc2MTM0NDctMDM2N2U4YmUtYWViYi00MzQ5LTliMDEtZGM3ZjRlNzNhYzJhLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA2MjYlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjI2VDA4NDEyMFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIyN2QwNDYxMGJiM2ZkN2IwZDk1NTExNDlkOGM5NGQ5MDBhMTE2NzJiNzVlNGQ4YTZkZmUzMzg3Y2JlNjc1ZjImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.tWIepU9BfDMpqQKGDy0qE8Y1rGyyX2betzD6udxDwik). - New Changelog; - Update CMake version ; - Fix Changelog with closed PR. close #4770; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4787:1482,test,test,1482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4787,2,['test'],['test']
Testability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to Issue https://github.com/sofa-framework/sofa/issues/94). The reason is that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure. In case I'm wrong please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. Concretely by this PR:; - The class TestMessageHandler is removed; - Handler needed by ExpectMessage & MessageAsTestFailure are now installed by default for tests ( Issue https://github.com/sofa-framework/sofa/issues/94); - The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure.; - A bug in LoggingMessageHandler.h has also been corrected. Examples of use of the ExpectMessage & MessageAsTestFailure classes... To generate a test failure when an expected message have not been emitted you have to do; ```cpp; {; ExpectMessage raii(Message::Error);; ... do something that must emit a message ...; }; ```; To generate a test failure when a un-expected message have been emitted you have to do; ```cpp; {; 	MessageAsTestFailure raii(Message::Error);; ... do something that must not emit an error message ...; }; ```. The raii can be combined in the following way:; ```cpp; {; 	ExpectMessage warning(Message::Info);; 	MessageAsTestFailure raii(Message::Error);; 	MessageAsTestFailure raii(Message::Warning);; 	...; }; ```. Any suggestion on this API is more than welcome. . TODO:; 	It would be nice to be able to write; ExpectMessage warning(Message::Info & Message::Warning);,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/96:36,Test,TestMessageHandler,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/96,9,"['Log', 'Test', 'test']","['LoggingMessageHandler', 'TestMessageHandler', 'test', 'tests']"
Testability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to this https://github.com/sofa-framework/sofa/issues/94). . The thing was that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure so it make sense to remove it. Please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. The handlers needed by the ExpectMessage & MessageAsTestFailure are now installed by default. . The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure. . A bug in LoggingMessageHandler.h has also been corrected.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/95:36,Test,TestMessageHandler,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/95,5,"['Log', 'Test', 'test']","['LoggingMessageHandler', 'TestMessageHandler', 'tests']"
Testability,"This PR is a step-by-step version of the experiment done in https://github.com/sofa-framework/sofa/pull/1552. Currently this PR shouldn't breaking too much, the CI will tells us. Two test are failing...but this is on purpose to keep a track the breaking parts. ; The failure results from the unification of the naming schemes. ; Fixing the tests is easy, just replace the old string with the new one (int->i).; Nevertheless I suggest to fix that when whole refactoring will be over. Compared to #1552 ; - In this PR I'm re-organizing the existing Sofa code without touching its logic. The files in typeinfo/models/* are cut & past from DataTypeInfo.h. The files in typeinfo/TypeInfo_XXX.h are the DataTypeInfo<> specialization that also come from DataTypeInfo.h; - Some breaking changed are introduced to unify the naming scheme. The 'short' naming scheme is following the standard for python.array and was very close to what we already have in Sofa. . - In this PR I don't use at all the TypeInfoRegistry (expect in the test part), this is on purpose so a future PR will be able to emphasize the change on the Sofa code base (in Data.h). ; - In this PR I don't register typeinfo the registry (because it is not used yet), but I added the 'empty' files for that...it is in typeinfo/TypeInfo_xxxxx.cpp ; ; What will be done in a future PR:; - 1. fill the registry with types we are using and replace the use of VirtualTypeInfo<T>::get() in Data.h by TypeInfoRegistry::Get(T).; - 2. remove step by step the static type info and there related #includes files. ; - 3. rename all the method/enum in the static & dynamic system to unify with official naming convention. ; a. static function must start with an UpperCase; b. function returning boolean must start with a verb like IsValidTypeInfo() instead of ValidTypeInfo() ; c. add a getName()/GetName() to replace name().; - 4. replace the enum involved in the static type info system with constexpr. . EDIT: To satisfy popular demand here is more or less",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:183,test,test,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,3,"['log', 'test']","['logic', 'test', 'tests']"
Testability,This PR is an attempt to solve the problem pointed in Issue #193 . Problem summary: ; Currently in runSofa when reloading the scene only the ScriptController's are reloaded but not the python code imported by the controllers. . This PR:; solve the issue which avoid to restart runSofa each time an imported module used by a ScriptController is changed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198,1,['test'],['test']
Testability,"This PR is based on #1406 and #1407 and uses the callback mechanism on some SOFA components (mainly Mesh loaders); It also takes advantage of the newly added ""isDirectory"" method in DataFileName in AddResourceRepository. It also:; - Removes the isPersistent flag from datafields in MeshLoaders (because this flag should only be used to set application-specific behaviors: in runSofa2, this flag is used to determine whether the datafield should be recorded when saving the scene for instance); - takes advantage of the getAccessors introduced by @damienmarchal in #1254 ; - Clears log messages from components withing update callbacks if the componentState changes to ""Valid""; - Sets the dynamic datafields created on-the-fly in the MeshVTKLoader depending on the mesh file content as outputs of the component (to guarantee they're update when the component's inputs change; - Checks for the validity of binary STL files using `isBinarySTLValid` for better error handling (see comment in the code l.103 in MeshSTLLoader.cpp); - Removes the autoLink flag from fileMesh in VisualModelImpl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408:581,log,log,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408,3,"['log', 'test']","['log', 'test']"
Testability,This PR is based on #853 despite there is not real connection. ; I was to lazy to swtich branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/862:348,test,test,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/862,2,['test'],['test']
Testability,"This PR is based on https://github.com/sofa-framework/sofa/pull/2613 and makes sense only if https://github.com/sofa-framework/sofa/pull/2613 is accepted. A macro is introduced to simplify declaration and definition of Data's. See code comments for a description of this macro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2614:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2614,2,['test'],['test']
Testability,This PR is basically the same as #444 but this time it is against master. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/449:325,test,test,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/449,2,['test'],['test']
Testability,"This PR is big but should finally clean all licenses in SOFA. Here is what I did:; - Fix the licenseUpdater script; - Fix wrong or missing LGPL headers in modules; - Fix wrong or missing LGPL headers in SofaKernel; **WARNING**: I found a **contaminating paste of GPL code** in LCPcalc.cpp:501 (lcp_lexicolemke function). Since I didn't found any usage of this function in SOFA (including plugins), **I removed it**. ; Please **tell me if this is OK**. Otherwise, we will have to discuss about GPL contamination.; - Fix wrong or missing GPL headers in applications/projects; - ~~Fix wrong or missing LGPL headers in applications/plugins~~ (commits removed); - ~~Fix wrong or missing GPL headers in applications/plugins: OptiTrackNatNet, SofaPML and SofaVRPNClient~~ (commits removed); - ~~Fix wrong license in SofaHAPI/initSofaHAPI:58 (should be LGPL)~~ (commits removed); - Optimize organization of LICENSE files in SOFA. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139:1091,test,test,1091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139,1,['test'],['test']
Testability,"This PR is build on top of #1639. It contains: ; - using the SOFA_BEGIN_DEPRECATION_WARNING_AS_ERROR where is makes sense.; - warning fix for gcc. With modern g++ (after version 10.0) there is hundreds of thousand of warning generated by the use of the; ```cpp; __attribute__(visibility); # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); # define SOFA_IMPORT_DYNAMIC_LIBRARY; ```; I don't know if there is a fix but in the meantime I suggest to quite the warning system a little bit. . EDIT: well it seems I forogot to add the -Wattribute stuff in the PR and it was merge...I will change the title and make a new pr :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1643:1189,test,test,1189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1643,2,['test'],['test']
Testability,"This PR is certainly the biggest contribution from InSimo merge sprint. ; It will be further discussed during STC#3. ## issofa_multithreading. ### New features; - Add logGraphUpdates / logDataUpdates global variable in objectmodel to be able to debug multi-threading issue (not declared in headers, temporary until a better design is proposed); - Add a flag d_threadsafevisitor in solvers to disable writing in mechanicalstates of InteractionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change B",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:167,log,logGraphUpdates,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,2,['log'],"['logDataUpdates', 'logGraphUpdates']"
Testability,"This PR is en enhancement of the AdvancedTimer. We have added the possibility to get two different JSON ouputs. The first one represent all informations without deep limitation and the other is easier to use but does not represent all the componants tree of the simulation. You can now use the timer in C++ and in python, change dynamically the output type of each timer separately and use the output of the AdvancedTimer to create graphs and/or compare datas from two different scene timers. You can find an exemple of JSON output here : [JSON_example.txt](https://github.com/sofa-framework/sofa/files/1200444/JSON_example.txt); And an exemple of Light JSON output here : [LJSON_example.txt](https://github.com/sofa-framework/sofa/files/1200439/LJSON_example.txt). This work was done with the help of @untereiner and @chpaulus. A documentation will come at the end of my internship. suggested tag : enhancement; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360:1164,test,test,1164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360,2,['test'],['test']
Testability,"This PR is focused on cleaning the DefaultPipeline component. It contains:; - several tests with one of them is an OpenIssue (the depth parameter that is not checked nor generate warnings); - fix of the data field names that are not following the sofa guidelines, this may break code; directly using these attributes. ; - change some of the docstring to be more helpful; ; It also depend on the following other pull-requests: ; - https://github.com/sofa-framework/sofa/pull/101",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/105:86,test,tests,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/105,1,['test'],['tests']
Testability,"This PR is following PR #1605 in which we layed out a new organization for the sofa type system (i.e. the system that provide information about the content of Data fields). . PR #1605 should be merged so this one will have a quite small number of file changed and not 82. In the present PR we are:; - filling the TypeInfoRegistry with the type used but most of components. This is done in .cpp files ; - adding sofa/core/typeinfo/TypeInfo_ with the same organization as the one we have in SofaDefaultType; - replace the use of VirtualTypeInfo in Data.h so we are now using the new dynamic system. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1611:1138,test,test,1138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1611,2,['test'],['test']
Testability,This PR is for FileMonitor on Mac. ; Added a test in FileMonitor_test to improve test coverage.; Required also to update FileMonitor_test to comply with some osx limitations (ie. delay before file change can be detected by the program).,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/102:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/102,2,['test'],['test']
Testability,This PR is here to support Issue #388 . This is the beginning of a work on cleaning and modularizing the; SofaVolumetricData.; The module is splitted in two Plugins.; - SofaDistanceGrid; - SofaImplicitField. A third plugin act as a transitional package SofaVolumetricData guiding; other developpers on the change they have to do in order to have their; code compiling again. CHANGELOG.txt:; - SofaVolumetricData was strongly refactored and splitted in two plugins SofaDistanceGrid and SofaImplicitField. Please report to sofa-dev any broken behavior. A transitional plugin SofaVolumetricData is provided for one year. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389:871,test,test,871,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389,2,['test'],['test']
Testability,"This PR is just an excuse to test latest SofaPython3 PR https://github.com/sofa-framework/SofaPython3/pull/252. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/252]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905:29,test,test,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905,3,['test'],['test']
Testability,"This PR is linked to the issue #308 .; Since the modification of MechanicalObject reinit method in PR #270 ([this commit](https://github.com/sofa-framework/sofa/pull/270/commits/b6750f06ea0c5082f8c88d5aaea6bc65d8840429) ). The mechanicalObject doesn't change the value of P0. Thus, it is not necessary anymore to shift the OglModel and the Surf mechanicalObj. Several scenes were impacted but without ground truth it is hard to say if the scene is totally fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/324:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/324,2,['test'],['test']
Testability,"This PR is not about fixing the tests, it was to point they are failing since a long time and this was un-noticed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440225157:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/832#issuecomment-440225157,1,['test'],['tests']
Testability,"This PR is not ready at all, 25 unit tests are crashing 😢",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/335#issuecomment-318066743:37,test,tests,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/335#issuecomment-318066743,1,['test'],['tests']
Testability,This PR is not supposed to be breaking but one day we will totally remove the sofa::defaulttype::RGBAColor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1463:361,test,test,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1463,2,['test'],['test']
Testability,This PR is not supposed to be merged...the idea was to show on the CI in which components there is not an even number of begin/end of accessors. But the CI is not working anymore on it and has not kept the compilation log. Now after a quick reading I see several good things in this PR:; - a new fonction in BackTrace to get the trace; - a way to systematically detect components rely on an invalid behavior in begin/end pairs. But given how many componnents have problem this is far too much error messages. ; ; Maybe we could just enable the systematic test using NDEBUG and have that merged.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834:218,log,log,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1326#issuecomment-680744834,2,"['log', 'test']","['log', 'test']"
Testability,"This PR is the continuation of the refactoring of Link. . Currently there is two static function to check path that are fully implemented in Link.h. The drawback of doing is that this requires:; - more #include are needed because of the full function definition.; - the #includes propagate in all the files that includes Link.h (so nearly everywhere); - as the function are implemented on templated classes this also cause a a lot of code generation (one for each template instance). . The new implementation move the implmentation out of the .h and put that into PathResolver.h. ; Bacward compatibility is implemented and flagged as deprecated. This PR also includes #1714 (to validate that the CheckPath features are still working as they were doing in the past).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1717:1306,test,test,1306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1717,2,['test'],['test']
Testability,"This PR is the following work on Geomagic started in PR #1366 (which is included in this one). This PR:; - Totally rewrite the GeomagicDriver init. Now, the tool is directly well placed before simulation start and doesn't need 2 or 3 simulation step to be well init.; => fix #996 . - HD (openHaptics) scheduler communication has been cleaned and fired msg_error with HD error code and description in case of problems.; => fix the possibility to handle several devices. - Clean a lot of old code not anymore used. Like the denavit matrix computation as OpenHaptics is doing it internally. ; => As a consequence, 5 or 6 Data have been removed: dh_XX; - Others changes like variable names replaced to use ""device"" or ""haptic"" instead of ""omni"". And add Doxygen documentation. - Add a component GeomagicEmulator to be able to virtually recreate device motion and interaction. See #1371; => This is almost working.. just need to do some inverse kinematics to compute the good tools transform matrix from the set of arm angles. ... I beg for help here. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1378:1300,test,test,1300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1378,2,['test'],['test']
Testability,"This PR is updating the PR #1483 because I can't push on the SofaDefrost repository. I removed the callback on the topological changes which could be causing perf issue and should not be handle like this.; Keep the rest of the PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2245:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2245,2,['test'],['test']
Testability,"This PR isolates OpenGL-specific code (pickhandler, viewers, etc) of SofaGuiQt to a new library (called SofaGuiQtOpenGL), thus allowing us to implement a viewer which cannot/dont want to use OpenGL (e,g to deal with macOS in the future). . This PR prepares the ground for a SofaQt3D viewer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1121:542,test,test,542,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1121,2,['test'],['test']
Testability,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1814:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814,2,['test'],['test']
Testability,"This PR just reorder the files inside the CMakeLists but it would be a good starting point to discuss:; - how we want to reorder files in the plugin SofaCUDA. For the moment they are all in sofa/gpu/cuda/ in a big mess.; - refresh the CMakeLists for new CUDA support. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2534:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2534,2,['test'],['test']
Testability,"This PR kind of fixes #316 ; Concerning Multithreading plugin, it still would be better to get rid of Boost dependency as stated by @fjourdes in #316. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/359:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/359,2,['test'],['test']
Testability,"This PR links PythonLibs 2.7 to SofaPython ""the proper way"":. Until now, a target was created within SofaPython, in order to expose PythonLibs' leaders & libraries to linked projects. This led to issues when trying to link an external project to SofaPython, since the targets were not properly installed (see #888). Since there's not reason to create a separated target for PythonLibs anyway, I removed it, and simply linked PythonLibs as you would do for any other lib. It should not cause any issue to plugins using SofaPython, since PythonLibs' headers / lib are exposed publicly through the SofaPython target anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/891:872,test,test,872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/891,2,['test'],['test']
Testability,"This PR mainly changes SofaMacros.cmake to permit external (on another repository) projects/plugins to be automatically fetched, updated and added to SOFA. Important: this work will permit to include SofaQtQuick GUI as an external project :wink: . This is a modified version of @fredroy branch [setup_external_plugin](https://github.com/fredroy/sofa/tree/setup_external_plugin). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649,2,['test'],['test']
Testability,"This PR makes it easier & more reliable for plugins / external projects to find paths to the ""examples/"" and the ""share/"" folders in both the build directory and install directory. The current system was filling a file (sofa.ini) for this single purpose, that GUIManager was then parsing to retrieve those paths. if another project (tests for instance) would want to retrieve those paths, they would have to first locate this sofa.ini file (which can be very tricky if not part of the SOFA project tree), parse it and add it to the DataRepository. Now, preprocessor defines holds the paths and you just have to add it to the DataRepository as such:; sofa::helper::system::DataRepository.addFirstPath(SOFA_SHARE_DIR); sofa::helper::system::DataRepository.addFirstPath(SOFA_EXAMPLES_DIR). In both cases, the paths are *absolute* which is great (and what I needed) when building an external project, but generating distributable binaries with absolute paths will not work out well...; I realise this PR is not mergeable until this issue is resolved, but don't know how to change that.; With relative paths, finding the install directory from external projects is impossible, and with absolute paths, redistribution of binaries is not feasible. . Looking fwd to your inputs!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651:333,test,tests,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651,1,['test'],['tests']
Testability,"This PR makes so that the user can activate an option to look for and use CCACHE for compilation.; If the option is activated, then CMake looks for ccache. If ccache is found, it is used for compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692:455,test,test,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692,2,['test'],['test']
Testability,"This PR merge the branch topologyChanges_PoC inside master. ; This branch contains PR:; - #2082 ; - #2085 ; - #2086 ; - #2087 ; - #2114 ; - #2171 ; - (EDIT) #2162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2228:704,test,test,704,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2228,2,['test'],['test']
Testability,This PR moves required Data check from BaseObject::init() to a new SceneCheck loaded by default.; The starting problem for this work was that having the check in BaseObject::init() forces every Component that overrides init() to call the parent init(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754:504,test,test,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754,2,['test'],['test']
Testability,"This PR parallelize the assembly of the compliance matrix for the constraint resolution. It is done using a task pool.; It currently only applies to sparse linear solver (LU and Cholesky).; For this part of the code i observed a speedup of more than 2.; The SparseLDLSolver is not yet concerned. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3093:835,test,test,835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3093,2,['test'],['test']
Testability,"This PR proposes an alternative representation of the root path's name. If we consider a node named ""root"", with a child node named ""child"", a component named ""object"" and a data field named ""data"", here were the previous values returned by their `getPathName` method:. ```; root.getPathName(): """"; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): "".data""; ```. I find this naming convention misleading, as an empty string for the root path does not seem right to me, and "".data"" for the path of root.data also look wierd:. - When working with link paths, like we do all the time in Sofa, making a link between a component's data and root.value would look like this:; ```; root.createObject('MyComponent', value=""@.value""); ```. - The same way, if a component for some reason would need a take a node as an input field, passing root would look like:. ```; node.createObject(""MyComponent"", nodePath=""@"") # passing root to nodePath would lead to syntax errors during parsing.; ```. Thus I suggest that, as it is done in FTP clients for instance, or filesystem browsers in general, the root node, regardless of its name be represented as a forward slash `/`:. ```; root.getPathName(): ""/""; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): ""@/.data"" # this cas still looks a bit funny, but makes more sense IMHO. root.createObject('MyComponent', value=""@/.value""); root.createObject('MyComponent', nodePath=""@/""); ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1146:1766,test,test,1766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1146,2,['test'],['test']
Testability,"This PR proposes to remove DiagonalMass and replace with MeshMatrixMass (with lumping); Fix #2452 . One case remains to be covered: RigidTypes with non uniform vertex mass. A new PR is coming on this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3001:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3001,2,['test'],['test']
Testability,"This PR re-adds the previously removed Regression project. This time, we use our CMake ""external project"" feature to auto-fetch Regression from https://github.com/sofa-framework/regression. We are now able to build Regression_test within SOFA and to specify what version (commit) of the project shall be fetched.; To change the version that will be fetched, edit `applications/projects/Regression/ExternalProjectConfig.cmake.in`. I also removed the deprecated ci scripts from `scripts/ci`. You can find latest CI scripts in https://github.com/sofa-framework/ci. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1052:813,test,test,813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1052,2,['test'],['test']
Testability,This PR removes all occurrences and related codes for SOFA_GUI_INTERACTION. Fixes #623 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/643:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/643,2,['test'],['test']
Testability,This PR removes the COMPONENTSET mechanism from our CMakeLists.; Deprecated components are now identified by the option SOFA_WITH_DEPRECATED_COMPONENTS. I also couldn't resist to reformat a bit. Tell me if I did something wrong!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/586:481,test,test,481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/586,2,['test'],['test']
Testability,"This PR removes the dependency from SofaTest to the framework_test executable.; The reason for this is that SofaTest depends on a **lot** (if not all...) of librarires which do not reside ; in SofaKernel. So having a dependency to SofaTest somewhat defeats the whole puropose of writing; self contained fast to compile unit tests.; As a general rule, it should be a requirement that SofaKernel can compile without any dependency to ; libraries that do not reside in SofaKernel.; This PR address the problem only for framework_test, but the problem persists in SofaSimulation_test. # CHANGELOG; - Moved AdvancedTimer_test and DefaultAnimationLoop to SofaSimulation_test since they require to be able to instantiate a concrete instance of a Node; - Moved _TrackedData_test to SofaSimulation_test since it requires to be able to instantiate an AnimateBeginEvent object; - Removed dependency to SofaTest from framework_test, which implied the following; - removing calls to EXPECT_MSG_NOEMIT ( which is defined in SofaTest ); - copy pasting EXPECT_MAT_NEAR and EXPECT_MAT_DOUBLE_EQ macros from SofaTest in MatTypes_test.cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455:324,test,tests,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455,3,['test'],"['test', 'tests']"
Testability,"This PR removes warnings caused by inconsistent use of the override keyword. While it might not remove all of them (not all plugins have been checked), it allows developers to actually fix the remaining ones rather than ignoring them because it will only generate more warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423:530,test,test,530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423,2,['test'],['test']
Testability,This PR replaces #510 with a simple fix suggested by @vmagno (thank you). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/515:325,test,test,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/515,2,['test'],['test']
Testability,"This PR replaces `this->d_componentState.getValue() == ComponentState::Valid` with `this->isComponentStateValid()`; Removes location where it should managed through delegation mechanism. Closes #4921. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4995:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4995,2,['test'],['test']
Testability,"This PR restores the use of argv with runSofa. I'm sorry I've been keeping this fix for a long time now, so I cannot tell you which PR broke the feature. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2802:695,test,test,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2802,2,['test'],['test']
Testability,This PR seems to have problem on the tests.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-314187431:37,test,tests,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-314187431,1,['test'],['tests']
Testability,This PR should fix #401 bug. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/403:280,test,test,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/403,2,['test'],['test']
Testability,"This PR should fix the issue raised in #1650 by cleaning CImgPlugin to properly use targets for dependencies and thus propagate their include directories. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1651:694,test,test,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1651,2,['test'],['test']
Testability,"This PR shows how to replace sofa::type::Mat with Eigen::Matrix. The goal was to minimize the amount of code change in the code base. Several difficulties arise:; - `sofa::type::Mat` initializes the values, but `Eigen::Matrix` don't; - `sofa::type::Mat` relies on the [] operators from `fixed_array`. I tried to add the [] operators in `Eigen::Matrix`, but too much cases makes it difficult. Maybe not impossible.; - `sofa::type::Vec` must also be a `Eigen::Vector`, but `Eigen::Vector` is a `Eigen::Matrix`, so all the methods we add in `Eigen::Matrix` are also available in `Eigen::Vector`, but sometimes it does not make sense. So conditions must be added on the availability of those methods. Because of those difficulties, the replacement is not simple. This PR is not finished. It just show how (at least the first step). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4993:1367,test,test,1367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4993,2,['test'],['test']
Testability,This PR simply add a default class named NoArgument in Factory.h.; NoArgument is usefull when you try to instantiate BaseCreator or Factory without passing arguments. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/385:418,test,test,418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/385,2,['test'],['test']
Testability,"This PR simply introduces the template alias:. ```c++ ; sofa::core::sptr<T> = boost::intrusive_ptr<T>;; ```; in `<sofa/core/sptr.h>` and reflects the needed changes in the codebase. # Motivation. Most (all?) component types in SOFA come with a member typename `T::SPtr` referring to `boost::intrusive_ptr<T>`, which makes it impossible to declare a member shared pointer to another component without including the component header file. In an effort to decrease compilation times by removing unneeded include files, this PR introduces a template alias to solve this problem. It is now possible to declare member shared pointers using a forward declaration of their types only, as shown in 48f1447. # Changelog. - added `sofa::core::sptr<T>` template alias; - reflected changes in BaseClass macros, Base and Aspects; - replaced many constructors in `New` with variadic templates; - added an example include fix in `Compliant`. # Note. This PR is *not* intended to be a place for fixing every member SPtr + includes, otherwise it will never get merged. . If we can agree on the PR's philosophy and get it merged, please make separate PRs for include simplifications. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436:1416,test,test,1416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436,2,['test'],['test']
Testability,"This PR slightly improves the doc around the DataTypeInfo API according to our findings while digging in to implement the Data type binding in SofaPython3.; It also adds a specialization of the `DataTypeInfo<helper::vector<T> >` with `T=std::string`, which proves that it is possible to iterate over containers with `SimpleLayout() == true` and `BaseType()->FixedSize() == false`, which is important for SofaPython3 bindings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1113:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1113,2,['test'],['test']
Testability,This PR suggested by @alxbilger fixes build on Windows with VS2017. Error was `C2057: expected constant expression`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/630:368,test,test,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/630,2,['test'],['test']
Testability,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1735:1487,test,test,1487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735,2,['test'],['test']
Testability,This PR unify the API for DataTrackerEngine and DataCallback; so they match. The difference between the two is that in DataTrackerEngine; the callback is called when the data is needed (so the output is accessed); while in a DataCallback the update is done each time the data is changed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:539,test,test,539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,2,['test'],['test']
Testability,"This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stif",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:484,log,log,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['log'],['log']
Testability,"This PR will be further discussed during STC#3. ## issofa_topology. ### New features; - UncoupledConstraintCorrection : add option to disable handling of topological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compati",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/217:546,test,tests,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/217,1,['test'],['tests']
Testability,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2171:705,test,test,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171,2,['test'],['test']
Testability,This PR will finally add warning due to the CollisionModel.; Another PR will come to fix them in SOFA.; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1241#issuecomment-573061786:124,test,tests,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1241#issuecomment-573061786,1,['test'],['tests']
Testability,This PR will fix our last failing unit test on Unix! :tada: . CImgPlugin defines for CImg build needed to also be defined by every project using CImg.; ~~They are now exported in `CImgPlugin_CFLAGS`.~~; They are now defined PUBLIC by CImgPlugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/595:39,test,test,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/595,3,['test'],['test']
Testability,This PR will remove various warnings generated when compiling with gcc 6.3.0. Warnings coming from extlibs are not fixed.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/454:374,test,test,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/454,2,['test'],['test']
Testability,This PR won't solve any error nor warning. It will just prevent the warning parser (on Jenkins) from crashing.; About the SceneChecker raising lots of warnings: what kind of warnings does it raise? Is it normal that it is triggered for our CI batch tests?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355560915:249,test,tests,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555#issuecomment-355560915,1,['test'],['tests']
Testability,"This PR, which introduces unit tests, shows a difference is coming from the call of the METIS library: https://github.com/sofa-framework/sofa/pull/3050",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3036#issuecomment-1158800544:31,test,tests,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3036#issuecomment-1158800544,1,['test'],['tests']
Testability,This PR: ; - [ ] succeed on all compilations setup on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/122#issuecomment-273726986:104,test,test,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/122#issuecomment-273726986,1,['test'],['test']
Testability,This PR: ; - [ ] successfully compile on each configuration on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old.; - [x] has been reviewed and agreed to be transitional.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996:113,test,test,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/113#issuecomment-273725996,1,['test'],['test']
Testability,This PR: ; - [x] does not breaks compilation on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not break existing scenes.; - [x] does not break API compatibility. ; - [x] is now 1 week old. So I merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273724965:98,test,test,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273724965,1,['test'],['test']
Testability,This PR: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new warnings or test failure. ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] is now 1 week old. I would say we can merge it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/148#issuecomment-276601858:104,test,test,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/148#issuecomment-276601858,1,['test'],['test']
Testability,"This PR:; - adds the new component MechanicalMatrixMapper (formerly called MappedMatrixForceField); - suppress the Cmake option SOFA_WITH_EXPERIMENTAL_FEATURES (Was used for development and is useless now) added in https://github.com/sofa-framework/sofa/pull/276. The component MechanicalMatrixMapper allows to compute the mapped matrices computed by ForceFields under mappings, which are ignored by the SOFA animation loops.; Typical usage would be:; **Node**; MechanicalObject (MO) **q**; MechanicalMatrixMapper (NodeParsed = **MappedNode**) --> computes **J**^T.**K**.**J** and **J**^T.**M**.**J**; .....**MappedNode**; .....MappedMechanicalObject (MMO) **q_m**; .....Mapping (input = ../MO, output = MMO) -> Computes **J**.**q_m**; .....ForceField -> Computes stiffness matrix **K**; .....Mass -> Computes Mass Matrix **M**. Any comments welcome!; (Work with @VannesteFelix @ChristianDuriez ); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/721:1149,test,test,1149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/721,2,['test'],['test']
Testability,"This PR:; - remove the ""Add Node"" context menu & feature because it is not working and even if working it makes no real sense without having the hability to save the scene.; ; - remove the transform feature in QSofaListView.cpp because it is not working and makes no real sense without having the hability to save the scene. . - modernize the qt connect to use the c++11 syntax. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3025:920,test,test,920,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3025,2,['test'],['test']
Testability,This PR:; - updates the sceneCheckerAPI by setting the default leve at 19.06 and removing the warning for BoxStiffSpringFF; - set as deprecated MatrixMass for developers; - warns users about the deprecation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1107:459,test,test,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1107,2,['test'],['test']
Testability,This PRs regroups 2 works:. **1. Changes for v19.12 packaging**; - Qt deployment using windeployqt/macdeployqt and post-install scripts; - Improvement of post-install scripts (Linux and MacOS); - MacOS packaging with latest CMake; - Better param names for macros sofa_install_libraries and sofa_copy_libraries. **2. Integration of DocBrowser by Defrost**; - New Qt dependencies (required): WebEngine + WebEngineWidgets; WARNING: this will definitely break VS2015 compatibility. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275,2,['test'],['test']
Testability,"This Pull request is not supposed to be merged... it is for a demonstration for the CRIStAL seminar. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3506:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3506,2,['test'],['test']
Testability,"This Pull_request is adding three new tests:; - LocalMinDistance; - Light (the three kind of light); - AllComponent . These tests contains open issues. ; The AllComponent test will fail until all component have an associated example file, on failure it reports the number of missing examples and the component that have none)... Maybe this test should be moved as a tool and not a systematic test;. . This commit shouldn't break anything in sofa. If it does beep me.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/67:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/67,5,['test'],"['test', 'tests']"
Testability,This STC#5 sprint pull-request cleans the whole Scene Checking API.; It also adds a new SceneCheck that warns for alias uses: `SceneCheckUsingAlias`. It's a first step concerning #677 :+1: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/702:442,test,test,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/702,2,['test'],['test']
Testability,"This allows to create a vector this way:. ```cpp; CudaVector<SReal> v { {1., 2., 3., 4.} };; ```. It is required to apply the suggestion from https://github.com/sofa-framework/sofa/pull/4852#discussion_r1696348587. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4868:754,test,test,754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4868,2,['test'],['test']
Testability,"This assert is annoying:; In a better world, a singleton should never return null in the first place, so getSimulation() should create the simulation if it doesn't exist. but then in a better world, the Simulation class would not be a singleton in the first place..; Meanwhile, this assert prevents us from coding things like this:. ```cpp; if(!sofa::simulation::getSimulation()); sofa::simulation::setSimulation(new DAGSimulation());; ```; And that's a problem to initialize the Simulation singleton, because without the test, it would be recreated all the time.; So I vote for removing it entirely. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1082:5,assert,assert,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1082,5,"['assert', 'test']","['assert', 'test']"
Testability,"This branch contains the coding-sprint results & associated fixing commits. . There is the commit for the base branch, the coding sprint commit, post-sprint compilation fixes et test fixing. . CHANGELOG:; - deprecating several components (see the list in deprecatingcomponents.cpp); - the SceneCreator is base on a totally new implementation. The most notable difference is that the ; SceneCreator is no more relying on component from sofa core but use the factory to create the objects. ; The API does not change but if the factory is empty (because no plugin is loaded) then the ; components cannot be not created. So If you used SceneCreator in your test you may need to pre-load the plugin or module as done in ""sofa/SofaKernel/modules/SofaImplicitOdeSolver/SofaImplicitOdeSolver_test/loadPlugins.cpp""; - Fix FileMonitor_test that were randomly failing one MacOS; - Fix DataEngine_test that was failing on Vertex2Frame. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457:178,test,test,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457,4,['test'],['test']
Testability,"This branch is to prepare the coding sprint. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and 425 . Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429:1162,test,test,1162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429,3,['test'],['test']
Testability,"This branch's purpose is to create artificial targets when compiling to avoid the need of installing sofa to be able to use compiled sofa library in external project compilation. . This was needed by @courtecuisse in the development of external library. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4135:795,test,test,795,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4135,2,['test'],['test']
Testability,"This bug just pop up again in #967 and was referenced in issue #631 ; Several Gmsh file have non coherent topology information, for example Triangulation with edges on the border only. This mess up information feeding the topology container. If this behavior is wanted, use ``` <MeshGmshLoader createSubelements=""0"" />``` and be sure to link the different topology buffer data to the appropriate components.; For example:; ``` ; <MeshGmshLoader name=""loader"" createSubelements=""0"" />. <Node name=""triangulation"" >; <TriangleSetTopologyContainer name=""tri_topo"" triangles=""@../loader.triangles"" />; </Node>. <Node name=""border"" >; <TriangleSetTopologyContainer name=""edge_topo"" edges=""@../loader.edges"" />; </Node>; ```. fixes #631. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/986:983,test,test,983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/986,2,['test'],['test']
Testability,This bug may affect every windows VS builds.; @guparan we investigate and found than the problem come from visual studio build directory named Release/Debug. I´m testing my PR and see if everything works well. I added some specific MSVC code inside the main CMakefile to enforce VS to not create release/debug directory.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561#issuecomment-357989953:162,test,testing,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561#issuecomment-357989953,1,['test'],['testing']
Testability,"This cannot yet be tested due to the non-triggering of Actions (probably due to MacOS issue). However, I think we needed this action to daily check whether +1 year old topics where kept unanswered while having a reply from a core-dev. There it is. For the moment the action is de-activated to first test it and print as log:; ```; console.log(`Discussion Title: ${discussion.title}`);; console.log(`Discussion ID: ${discussion.id}`);; console.log(`Last Reply by ${teamName} Member: ${lastReplyUserName}`);; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4096:19,test,tested,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4096,8,"['log', 'test']","['log', 'test', 'tested']"
Testability,"This caused a compilation error since #4776 in Debug mode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4792:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4792,2,['test'],['test']
Testability,This change has been performed to make the usage of the script and the documentary clearer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/570:343,test,test,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/570,2,['test'],['test']
Testability,This change is needed before using the new dependency pack (libjpeg + libtiff) on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/566:342,test,test,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/566,2,['test'],['test']
Testability,"This code had to be removed:; ```cpp; if (this->m_separateGravity.getValue()) for ( unsigned int i=0; i<indices.size(); i++ ); {; }; ```. because it is empty, and also because the condition was already tested earlier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3593:202,test,tested,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3593,3,['test'],"['test', 'tested']"
Testability,"This commit adds a directive to instruct CMake to find/use XCode's framework lastly.; E.g if you have installed libpng with homebrew/macport, CMake will use those first instead of the Apple's (old) ones. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/720:455,test,test,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/720,2,['test'],['test']
Testability,"This commit fixes compilation of a basic configuration with the additional SOFA_NO_OPENGL flag being set, including compilation of Compliant and SofaPython plugins. Tested for runSofa -gui batch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/18:165,Test,Tested,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/18,1,['Test'],['Tested']
Testability,"This commit sets the d_totalMass as read and write in DiagonalMass.; Before set as read-only, without reason.; The commit also updates the coding rules in the Data. Tests are added to check for both hexa and tetra topologies,; the coherency between totalMass and massDensity. It also checks that; if both totalMass and massDensity are defined, totalMass predomines. WARNING: the test showed issue of casting in the EXPECT_EQ(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] breaks existing scenes.; - [x] breaks API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:165,Test,Tests,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,3,"['Test', 'test']","['Tests', 'test']"
Testability,"This component has been removed from SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4708:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4708,2,['test'],['test']
Testability,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4635:1230,test,test,1230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635,2,['test'],['test']
Testability,"This could be a step toward the removal of some visitors. The goal is to write something like the following instead of going through visitors:. ```C++; //simple counter of BaseMechanicalState; std::size_t counter {};; for (const auto* state : simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMechanicalState>(root.get())); {; ++counter;; }. // The following replaces the visitor MechanicalGetNonDiagonalMassesCountVisitor; const auto massTraversal = simulation::SceneGraphObjectTraversal<sofa::core::behavior::BaseMass>(this->getContext());; const std::size_t nbNonDiagonalMasses = std::count_if(massTraversal.begin(), massTraversal.end(), ; [](auto* mass){ return !mass->isDiagonal();});; //note that these lines don't compile yet because this->getContext() does not give a Node*; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4334:1341,test,test,1341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4334,2,['test'],['test']
Testability,This data holds the force applied to satisfy the SlidingConstraint. Rename some data with more explicit names following Sofa conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/780:389,test,test,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/780,2,['test'],['test']
Testability,"This feature is working in debug mode (just tested in windows, and it allowed me to find a bug when compiling SOFA with VS....).; But as you mentioned it won't work when you will want to load a binary not suffixed with _d and trying to runSofa in debug mode (e.g it could happen that you don't have access to the debug version of a plugin but still want to debug your application). ; Basically PluginManager, if compiled in Debug mode, wants to load ""_d"" suffixed binaries. If we want to achieve that:; - remove the forced suffix ""_d"" when loading in debug mode,; - the config file must have the ""complete"" ""binary name"" and not the target name (or just add the binary name with the target name). What do you people think ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312619038:44,test,tested,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312619038,1,['test'],['tested']
Testability,This file is needed even if SOFA_INSTALL_RESOURCES_FILES == false; Fixes #114. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/285:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/285,2,['test'],['test']
Testability,"This fix allows to select and copy parameters names in Sofa GUI interface, which is very useful when setting default values for elements in scene files. Instead of setting parameters names as titles of widgets I created QLabel objects and set them as the first row of the GridLayout manager. I know that current sofa GUI will be replaced with Qt quick GUI soon, but I guess this modification will still be useful for those who use this version of GUI. I also would to make this change for Qt quick GUI, but all parameters names in QML are covered with ""Mouse Area"" objects, which don't allow to handle mouse events for text objects under them. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369:895,test,test,895,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369,2,['test'],['test']
Testability,This fix allows to set the default filename for the Monitor class. The default name assignment is removed in 'init()' function since in constructor it doesn't work. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/500:418,test,test,418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/500,2,['test'],['test']
Testability,"This fix was already applied to examples/Components/forcefield/TriangularForceFieldComparison.scn; See 28c8b68f9d6ed4be725baf305a0957097581fb13. Sorry but I can't explain why this fix was needed in the first place. ; If someone could, that would be great :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/626:513,test,test,513,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/626,2,['test'],['test']
Testability,"This fixes a segmentation fault I had with the SofaPython3 where the valid gui name was a python string variable. Since the GUI manager was storing a raw pointer to it, and since the python variable was later destroyed, the GUI manager was seg faulting when accessing the pointer. This PR simply creates a copy of the string instead of storing a raw pointer to it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1108:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1108,2,['test'],['test']
Testability,This fixes the GuiRepository path for Windows VS compiling related to issue #577 and then a subsequent issue with QTextBrowser opening the runsofa.html file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/578:409,test,test,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/578,2,['test'],['test']
Testability,This fixes the problem of closing runSofa while window like pluginManager or VisitorWindow being open and not killed when main application stop. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1030:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1030,2,['test'],['test']
Testability,"This follows #2073 . BaseIntTool/MeshIntTool (and their friends IntrUtility stuff) was mostly created to handle OBB/Capsule.; Their design is quite weird (at least to me) and it is [based on a code copied from GeometricTools](https://github.com/sofa-framework/sofa/blob/44001a4da752dc91078b8e10ca035e07845ecb66/SofaKernel/modules/SofaBaseCollision/src/SofaBaseCollision/IntrUtility3.h#L22) (so the copyright/licensing is nebulous in the best case). This PR makes SofaBaseCollision to not rely at all on those code, mainly to revert back the code from a long time ago.; It fixes also the fact that DiscreteIntersection was using proximities for the various computeIntersection() [1st error], but not using proximities in the various testIntersection in the proximities-based Intersections [2nd error]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2081:732,test,testIntersection,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081,3,['test'],"['test', 'testIntersection']"
Testability,"This function crashed in some cases covered by the added unit tests.; I changed the behavior:; - No difference between platforms; - Check if the returned path starts with a slash or backslash and remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3693:62,test,tests,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3693,3,['test'],"['test', 'tests']"
Testability,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370:358,test,tested,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370,3,['test'],"['test', 'tested']"
Testability,"This has not been tested but should not harm anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4626:18,test,tested,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4626,3,['test'],"['test', 'tested']"
Testability,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4448:766,test,test,766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448,2,['test'],['test']
Testability,"This implementation is at the force field level because its goal is to parallelize the matrix-free CG.; Unfortunately, the benchmarks were measured with a bug. Now the bug is fixed, the performances are disappointing. It requires more investigation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415:123,benchmark,benchmarks,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415,1,['benchmark'],['benchmarks']
Testability,This include #1283.... so please let the first one merge first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1330:315,test,test,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1330,2,['test'],['test']
Testability,This include PR #1251 to make it compile in the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1253:303,test,test,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1253,2,['test'],['test']
Testability,"This include is actually required in some cases outside of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3547:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3547,2,['test'],['test']
Testability,"This is a WIP PR but need review flag for CI-driven investigation. [ci-depends-on https://github.com/sofa-framework/Regression/pull/25]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800,2,['test'],['test']
Testability,This is a WIP to support discussion about issue #362 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/371:306,test,test,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/371,2,['test'],['test']
Testability,This is a basic fix when compiling sofa with Visual Studio 2015 and using the QWT plugin; last() is replaced by back() for deque. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/935:381,test,test,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/935,2,['test'],['test']
Testability,"This is a discussion about the need for `sofa::helper::map_ptr_stable_compare`, in `NarrowPhaseDetection`, but also in Sofa in general (it is also used in `DefaultContactManager`). According to benchmarks comparing 3 different types of maps, `sofa::helper::map_ptr_stable_compare` is several orders of magnitude slower than `std::map` and `std::unordered_map`. ## `std::unordered_map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 19.8 us 19.7 us 32412; BM_NarrowPhaseDetection_getDetectionOutputs/16 42.8 us 42.8 us 16528; BM_NarrowPhaseDetection_getDetectionOutputs/32 121 us 121 us 5764; BM_NarrowPhaseDetection_getDetectionOutputs/64 401 us 401 us 1750; BM_NarrowPhaseDetection_getDetectionOutputs/128 2228 us 2228 us 316; BM_NarrowPhaseDetection_getDetectionOutputs/256 9252 us 9253 us 75; ```; ## `std::map`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 183",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:194,benchmark,benchmarks,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarks']"
Testability,"This is a first attempt to fix our GitHub actions now failing. Solution from : https://stackoverflow.com/questions/75608323/how-do-i-solve-error-externally-managed-environment-every-time-i-use-pip-3. GitHub Action errors; ```; Run pip install python-graphql-client; error: externally-managed-environment. × This environment is externally managed; ╰─> To install Python packages system-wide, try apt install; python3-xyz, where xyz is the package you are trying to; install.; ; If you wish to install a non-Debian-packaged Python package,; create a virtual environment using python3 -m venv path/to/venv.; Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make; sure you have python3-full installed.; ; If you wish to install a non-Debian packaged Python application,; it may be easiest to use pipx install xyz, which will manage a; virtual environment for you. Make sure you have pipx installed.; ; See /usr/share/doc/python3.12/README.venv for more information. note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.; hint: See PEP 668 for the detailed specification.; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5061:1793,test,test,1793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5061,2,['test'],['test']
Testability,"This is a first pass. Everything is not fixed, but it is a good start. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5064:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5064,2,['test'],['test']
Testability,"This is a fix for a very specific situation. Here is what happens:. 1. A `msg_warning` is called in a component from a thread different from the main thread. It could be also `msg_error` or `msg_info`, as long as the message count of the element changes. It could be a change of name as well.; 2. The `ObjectStateListener` associated to the component updates the associated `QTreeWidgetItem` (this class is not a `QObject`).; 3. The icon is updated, so it warns the `QTreeWidget` (this class is a QObject) through a signal.; 4. Since the call happens in a thread different from the main thread, the queued connection is used. For that, all signals/slots parameters must be known to Qt's meta-object system. This PR registers the class `QVector<int>`, so it can be used in the queued connection. It partially fixes https://github.com/sofa-framework/sofa/issues/3610. The warning is no longer triggered by Qt. Therefore, the mutex is locked only once in one thread. I say it solves partially, because any other Qt error would trigger the same crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3749:1587,test,test,1587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749,2,['test'],['test']
Testability,This is a fix to update a bound box for a hyperelastic force field. Without updating the rotation and translation of a virtual camera works incorrectly. This method is a copy of a bound box computation from TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1401:484,test,test,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1401,2,['test'],['test']
Testability,"This is a follow up #3990 but now we focus on the complex use cases of canCreate. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3992:623,test,test,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3992,2,['test'],['test']
Testability,"This is a follow-up to #326, now with green tests. TL;DR: There should be no unprotected python code in sofa except in extension code. . Any code like this:. ```c++; void my_function(...) {; // ...; PySomething_Something(...);; }; ```. Should be GIL-protected as follows:; ```c++; void my_function(...) {; // ...; // the lock runs until the end of scope; sofa::simulation::PythonEnvironment::gil lock;; PySomething_Something(...);; }; ```. Or even better yet: don't use naked python calls and use the `PythonEnvironment` API instead. You may also temporarily release the GIL while doing a costly/blocking c++ operation as follows:. ```c++; void my_function_that_already_owns_the_gil(...) {; // ...; // unlocks the GIL until the end of scope; sofa::simulation::PythonEnvironment::no_gil unlock;; // ...; }; ``` . I tried looking for all python calls in the codebase, but I may have missed some. . # Changelog. - added `PythonEnvironment::gil` RAII for scoped acquisition of the GIL; - added `PythonEnvironment::no_gil` RAII for scoped release of the GIL; - GIL-protected most (all?) python calls with the above (except in extension code); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/347:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/347,3,['test'],"['test', 'tests']"
Testability,"This is a long standing issue in Sofa about not being able to save 'usable' scene in runSofa. . This is the result of multiple problems combined together among which:; - there is keywords that are not Data field but parsing hook (eg: src, compatbility hook) and they needs to be converted into Data.; - the Data have a persistant field. But it is let to the component to specify which are or not depending on some object property but depend on their context of ""use"".; Eg:; *) a data changed in the GUI should be saved; *) a data filled with a script shouldn't; etc... To allow to control fine grain the state of a data is now set to non persitant; by default and should only be activated specifically (by the GUI, or the script); if it is needed to save it. This is what this PR do, and despiste this is a behavior change...it is on a totally broken feature. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1191:1111,test,test,1111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1191,2,['test'],['test']
Testability,This is a proposal PR following discussion on gitter to use a macro to define the extern template in the header and remove the non extern version from the cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/777:411,test,test,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/777,2,['test'],['test']
Testability,"This is a proposal for a clean and consistent SofaKernel. ; The idea is to make SofaFramework modules consistent with the rest of SOFA by moving them into `SofaKernel/modules` and reorganizing their tests. Main changes:; - `SofaKernel/framework/sofa/*` goes to `SofaKernel/modules` with consistent naming; - `SofaKernel/framework_test/*` becomes XXX_test (where XXX is a SofaFramework module); - `SofaKernel/modules/sofa/*` becomes XXX_simutest (where XXX is a SofaFramework module); - `<sofa_root>/modules/tests` goes to `<sofa_root>/tests` for better readability. This PR is heavy but non-breaking. Package, module and library names stay the same. Include directories stay the same. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1200:199,test,tests,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1200,5,['test'],"['test', 'tests']"
Testability,This is a quick redo of #1437 ; I did not see that SOFASPARSESOLVER_HAVE_METIS and SOFASPARSESOLVER_HAVE_CSPARSE are actually used in SofaSparseSolver sources :fearful: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1440:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1440,2,['test'],['test']
Testability,This is a redo and fix #919 based on current master. To be tested by @Younesssss :wink: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1396:59,test,tested,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1396,3,['test'],"['test', 'tested']"
Testability,This is a remake of #1007 . Upgrading Eigen from 3.2.7 to ~~3.3.7~~ 3.2.10; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101:327,test,test,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101,2,['test'],['test']
Testability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in Compliant plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1557:397,test,test,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1557,2,['test'],['test']
Testability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in SofaBoundaryCondition. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1558:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1558,2,['test'],['test']
Testability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in collision components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559:401,test,test,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559,2,['test'],['test']
Testability,"This is a task for the conda-forge packaging. . This pr removes the folder containing the libQGLViewer source files and instead fetch our forked version (required to add a CMakeList to the project) when the dependency is not found. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4840:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4840,2,['test'],['test']
Testability,"This is a task for the conda-forge packaging. Add QGLViewer2 name as Conda installs this name instead of QGLViewer on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4841:666,test,test,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4841,2,['test'],['test']
Testability,"This is a task for the conda-forge packaging. This PR adds an option to completely deactivate WinDepPack mechanism. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4842:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4842,2,['test'],['test']
Testability,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:1616,test,test,1616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,2,['test'],['test']
Testability,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2036:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036,3,['test'],['test']
Testability,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:150,test,test,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,12,['test'],"['test', 'testing', 'tests']"
Testability,"This is a way to explicit the narrowing conversions in SOFA. Instead of using the classic `static_cast`, this function can check if the value changed after the cast. It can happen in case of narrowing conversion, when the target type is smaller than the source type.; Since the check must be performed at run-time (affects the performances), it is enabled only in DEBUG mode. The idea is to use this cast everywhere the compiler warns about possible data loss and it's not possible to avoid a narrow conversion (e.g. by adapting both target and source types). An example is provided in this PR in `MeshGmsh`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2590:1148,test,test,1148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2590,2,['test'],['test']
Testability,"This is allowed since C++17: https://en.cppreference.com/w/cpp/language/class_template_argument_deduction. And it is, in my opinion, easier to read. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4351:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4351,2,['test'],['test']
Testability,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2155:618,test,tested,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155,5,['test'],"['test', 'tested', 'tests']"
Testability,"This is an attempt to fix the error in issue https://github.com/sofa-framework/sofa/discussions/3773 by explicitly instantiate ForceField class for cuda types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3806:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3806,2,['test'],['test']
Testability,"This is an attempt to fix the failing unit tests about the links.; Only 2 changes of behavior:. 1. The function `read` returns `false` and don't do anything in case the link has no owner.; 2. Paths not starting with '@' are not added to the list of links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2166:43,test,tests,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166,3,['test'],"['test', 'tests']"
Testability,This is an attempt to refactor from PR #332 to make it non breaking. . No need for review now this is in WIP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/596:363,test,test,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/596,2,['test'],['test']
Testability,"This is an example where a direct solver is not supported. https://user-images.githubusercontent.com/10572752/132351450-f862fa65-1821-4d2b-9c07-57bfedd5163e.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2325:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2325,2,['test'],['test']
Testability,"This is an old work that has already been merged into ng branch (see #620) but since the NG task is paused for now I think it would be appreciable to have this in master. The idea is to remove SofaComponent* from modules (because they are not modules) and put them next to SofaAllCommonComponents. Concretely, this PR does:; - Move SofaComponent* next to SofaAllCommonComponents; - Rename SofaAllCommonComponents into SofaComponentAll; - Rename ""packages"" into ""collections"" to avoid confusion with CMake packages like SofaGeneral, SofaFramework, ...; - Somes fixes in SofaPreconditioner and SofaSparseSolver completing #1137 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1155:879,test,test,879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1155,2,['test'],['test']
Testability,This is connected but as the Image_png is not inheriting from Sofa_test then no. ; Maybe #96 also fix the test but this is more a side-effect. Actually I planned to make a future pull-request in which I will unify all the *_test ; to inherits from sofa_test and removing all the clearHandler/addHandler but this ; is not done yet. But as I don't know when I will have time for that I prefer to have ; this PR merged (to remove the failing test).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92#issuecomment-265831479:106,test,test,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92#issuecomment-265831479,2,['test'],['test']
Testability,"This is exactly what I mentionned when I said ""I strongly believe that would these paths have been properly restored by f93e2b9 (**my bad**)..."" ; It should have been restored, but I did not do it properly for the **linux** plaform because it is not my main working environment ( so it is easy to slip an error here ) and also probably because I was kind of upset to have to deal with this issue on the first place... [EDIT] I did not take the time to go back enough in the log to find back the last version which had the paths properly set. [/EDIT]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342829426:474,log,log,474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342829426,1,['log'],['log']
Testability,"This is in the hope to fix the failing scene on Ubuntu gcc.; If it does fix the issue:; - [ ] Explain why the issue happened; - [ ] Study the effect on the performances. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3424:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424,2,['test'],['test']
Testability,"This is just a small test to see if an automated replacement is working ""good"" enough. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/836:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/836,3,['test'],['test']
Testability,"This is just to better display the CudaVector inside the qt gui. Before:; ![SOFA v21 12 99 - C__projects_sofa-src_applications_plugins_SofaCUDA_scenes_cpu-gpu_validation_CudaStiffSpringForceField scn 12_22_2021 4_34_15 PM](https://user-images.githubusercontent.com/21199245/147117105-858be56c-1440-4bac-bca8-020efcaa81df.png). After:; ![SOFA v21 12 99 - C__projects_sofa-src_applications_plugins_SofaCUDA_scenes_cpu-gpu_validation_CudaStiffSpringForceField scn 12_22_2021 4_33_29 PM](https://user-images.githubusercontent.com/21199245/147116953-03eda549-2825-42b0-ac81-5855e658b51b.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2558:1127,test,test,1127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2558,2,['test'],['test']
Testability,"This is mainly to differentiate two identical error messages, but with different causes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,2,['test'],['test']
Testability,This is related to the issue at: https://github.com/sofa-framework/sofa/issues/816; Fixes #816 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901:348,test,test,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901,2,['test'],['test']
Testability,This is reopening one PR that was issued from SofaDefrost/master instead of a dedicated branch. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/691:349,test,test,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/691,2,['test'],['test']
Testability,"This is required by the plugin manager when writing and reading in an ini file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2948:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2948,2,['test'],['test']
Testability,"This is required to properly define SOFA_TARGET. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4726:588,test,test,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4726,2,['test'],['test']
Testability,"This is small feature addition. Currently, LinearMovementConstraint only takes trajectories relative to the rest position of the MechanicalState. Sometimes though, the trajectory is specified in world frame coordinates, and especially with Rigid3D (i.e. orientations), conversion is not trivial for the user . This patch introduces a switch ""relativeMovements"" (default true).; When disabled, trajectories can be specified in world frame coordinates. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/394:702,test,test,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/394,2,['test'],['test']
Testability,"This is still WIP be I would be happy to have some feedback. As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopology());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). Component upgraded: ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1183:1320,test,test,1320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1183,2,['test'],['test']
Testability,This is the Defrost cleaning week29 with...as usual a lot of std:cout and dead code removal. ; Shouldn't break anything. ; In case some component are too verbose please tell us. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/370:431,test,test,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/370,2,['test'],['test']
Testability,"This is the Defrost week contribution in cleaning & testing. CHANGE for Hugo:; - [FileMonitor] fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue https://github.com/sofa-framework/sofa/issues/146; - [ConstantForceField] clean to follow sofa guideline & fix the ""visible dependencies"", ; - [ConstantForceField] replace the ""points"" attribute by ""indices"" (with backward compatibility & deprecation message); - [ConstantForceField] add test in ConstantForceField_test, some of them are OpenIssue demonstrating existing problem (as crashing sofa when using negative (or too large) values in indices). ; - [Light] clean and strenghening the interface; - [Light] add tests ; - [DefaultAnimationLoop] add tests; - [LocalMinDistance] add tests; - [RequiredPlugin] add tests; - [ClipPlane] add tests; - [DistanceGrid] add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/258:52,test,testing,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/258,9,['test'],"['test', 'testing', 'tests']"
Testability,"This is the callback system we use in our dev branch for runSofa2.; It lets you add a callback function so that outputs can be updated upon changes on their input data.; The callback function returns a component state (Valid / invalid / ...) which guarantees that the component's state is properly maintained. I kept this PR simple (only tests to show the working principle), but will make another one later on with a few components that we've updated to use this callback mechanism (AddResourceRepository, MeshLoaders (OBJ / VTK / STL ...) . This mechanism is also used in the ""nodephysics"" Links POC (https://github.com/SofaDefrost/ComponentData_POC/pull/2). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406:338,test,tests,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406,3,['test'],"['test', 'tests']"
Testability,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1858:1066,test,test,1066,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858,2,['test'],['test']
Testability,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1859:58,test,tested,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859,3,['test'],"['test', 'tested']"
Testability,"This is the first PR of a series which the goal is to improve the performances of the `MechanicalMatrixMapper`.; This PR is based on #2361. In this PR, manual timers + log are replaced in favor of `AdvancedTimers`. This PR serves also as a reference to compare the improvements of the next pull requests. Here are the timings for the `MechanicalMatrixMapper.pyscn` scene for 1000 time steps measured on my computer:. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 74.24 112.80 77.26 2.76 77260.7 100 TOTAL; ...; 4 0.80 1 41.79 62.15 44.22 1.53 44.22 57.23 ....MBKBuild; 5 0.99 1 40.91 61.06 43.32 1.47 43.32 56.07 .....MMM-addKToMatrix; 6 0.99 1 1.69 3.69 1.89 0.17 1.89 2.45 ......jacobian; 6 2.88 1 6.29 9.88 6.85 0.34 6.85 8.86 ......stiffness; 6 9.73 1 16.17 23.13 16.55 0.50 16.55 21.42 ......compressStiffnessMatrix; 6 26.28 1 2.74 4.50 2.98 0.16 2.98 3.86 ......copyKToEigen; 6 29.26 1 0.24 0.54 0.28 0.02 0.28 0.36 ......copyJ1J2ToEigen; 7 29.48 1 0.05 0.14 0.06 0.01 0.06 0.08 .......copyJ2ToEigen; 6 29.54 1 9.06 18.67 10.47 0.75 10.47 13.55 ......Multiplication; 7 29.54 1 4.59 9.56 5.44 0.36 5.44 7.04 .......J1tKJ1; 7 34.98 1 0.76 2.15 0.88 0.11 0.88 1.14 .......J2tKJ2; 7 35.86 1 2.73 5.90 3.28 0.35 3.28 4.24 .......J1tKJ2; 7 39.14 1 0.77 1.77 0.86 0.10 0.86 1.12 .......J2tKJ1; 6 40.01 1 2.62 4.70 2.78 0.19 2.78 3.59 ......J1tKJ1-copy; 6 42.79 1 0 0 0 0 0 0 ......J2tKJ2-copy; 6 42.79 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 42.80 1 0.01 0.04 0.02 0 0.02 0.03 ......J2tKJ1-copy; ```. Work on the `MechanicalMatrixMapper` has been done in collaboration with @Esther-R. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2362:168,log,log,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2362,1,['log'],['log']
Testability,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1738:1537,test,test,1537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738,2,['test'],['test']
Testability,"This is the same scene than TetrahedronHyperelasticityFEMForceField.scn but TetrahedronHyperelasticityFEMForceField has been replaced by StandardTetrahedralFEMForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2857:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2857,2,['test'],['test']
Testability,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1765:694,test,test,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765,2,['test'],['test']
Testability,"This is the the third step of my LockOut refactoring effort for Sofa. In PR#1283 we have refactored the reflection system. We can now clean the DDGNode to cut the un-needed dependencies. ; DDGNode needed to be part of reflection system because it was storing its inputs and ouputs with Links. It is unclear what the link data structure was needed for and storing the input and output with a more classical data structure (a stable_vector) remove the needs to have DDNode be part of the reflection system...so remove a lot of un-needed code. . Exemple of needed but in face un-needed code that are now removed:; ```cpp; /// This method is needed by DDGNode; const std::string& getName() const override; {; static const std::string emptyName ="""";; return emptyName;; }; /// This method is needed by DDGNode; objectmodel::Base* getOwner() const override { return nullptr; }; /// This method is needed by DDGNode; objectmodel::BaseData* getData() const override { return nullptr; }; ```; ; Some code was added in BaseData. This is because these code was in-herited from DDGNode and are now not provided anymore. The code cannot be removed because BaseData is still used in Links and thus, still required to implement the reflection system...removing that is for an incoming PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:1527,test,test,1527,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,2,['test'],['test']
Testability,"This is to avoid non-ascii characters. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4901:578,test,test,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4901,2,['test'],['test']
Testability,"This is to ease debugging by identifying threads managed by the task scheduler (Windows only).; Source: https://learn.microsoft.com/en-us/visualstudio/debugger/how-to-set-a-thread-name-in-native-code?view=vs-2022. ![image](https://user-images.githubusercontent.com/10572752/208109683-d20496a6-0d0c-4b4e-ad97-b139150d4c76.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3551:866,test,test,866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3551,2,['test'],['test']
Testability,"This is to fix SOFA configuration without Qt; Not 100% sure of the change inside the cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,2,['test'],['test']
Testability,"This is to support `root->getObjects( objects, ...)`, when `objects` is a `std::set` or a `std::unordered_set`. Otherwise, only containers with a `push_back` method could be supported.; I also moved the class definition out of the `BaseContext` class to ease the reading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3495:811,test,test,811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3495,2,['test'],['test']
Testability,"This is to take into account the geometric stiffness in non-linear mappings. It has to take into account the sum of all forces applied on a MechanicalObject. Therefore, a list of VecIds is maintained and accessed later. It fixes some of the existing scenes that were broken due to #2777. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3918:827,test,test,827,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3918,2,['test'],['test']
Testability,This is very useful to implement any kind of 3D interaction in the python controllers. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/731:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/731,2,['test'],['test']
Testability,"This is weird, this should not happen if the plugin was loaded (i.e thanks to ""-l SofaPython3""on the command line); Can you post the entire log when you execute runSofa ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1788253936:140,log,log,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1788253936,1,['log'],['log']
Testability,"This issue is connected to the discussion: ; https://github.com/sofa-framework/sofa/commit/aee0d912432d043a792f3b43160417e724b11704. This discussion was continued between I, Mathieu and Guillaume, during our weekly meeting. . Our conclusion were that: ; - in sofa::core the defaultmessagehandler should be the simplest so that people making third party applications out of Sofa are not disturbed by the new formatter. . - runSofa & Test may use the RichStyleFormater . - it would be nice to add more capability of routing the messages (explaination and details in the following). **New features:** ; Currently the _msg_* API has two class of message (Dev and Runtime). Message of class Runtime are supposed to be for ""the users"". Message of class Dev are supposed to be for developers. ; You can send message of class Runtime with _msg_info()_...and message of class Dev with _dmsg info()_. The use of macro was to allows us to totally remove the _dmsg*_ from the sofa official releases (they are totally removed from the binary and thus have a zero cost). ; ; In addition to the classes of message is the 'type' which is among: Advice, Info, Warning, Error, Deprecated, Fatal. To select the type you can use the macro _msg info_, _msg advice, _msg error_, ... or their dmsg_ equivalent. . It was suggested:; - to add one extra class of message for ""Log""; - to add a new MessageHandler that can route precisely the messages depending on the developper's need. ; (eg:; - route all the message to a FileMessageHandler but not the one of type advice); - route all the messages of class Log to a FileMessageHandler as well as the class Runtime&Error). DM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/56:432,Test,Test,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/56,3,"['Log', 'Test']","['Log', 'Test']"
Testability,"This issue is created further to #4943 . This PR proposed to define base class functions as final and override these functions (which are templated) in child classes as a protected function. These changes are breaking but could be done in several steps:; 1. set the function of the abstract class to final; 2. fix the components which were overriding this function #4982; 3. set the functions overriding the templated one as protected (for v25.06 ?); 4. rename functions with a clear delegate name `doFunctionName()` + compatibility layer; 5. tests should be fixed to use the public virtual class (access protected functions); 6. add the check on the component state:; - first check non-invalidity; - then, check the validity. This project could have several benefits:; - cleaning the API and expliciting the delegation mechanism; - allowing to introduce and generalize more easily the componentState mechanims",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5020:543,test,tests,543,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5020,1,['test'],['tests']
Testability,This issue is pending since last STC6.; Now that regression test project is tracked as a git submodule. Old historically failing refences will be accessible from git history and will now be replaced (in PR #1061) by new version with only first and last iteration dump.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828#issuecomment-499867640:60,test,test,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828#issuecomment-499867640,1,['test'],['test']
Testability,"This issue was forgotten (sorry) but we actually have the same problem on our CI.; @oalii Did you manage to find a solution?. ## My research; I created a basic python script doing; ```python; import sys. print ""Using python: "" + sys.executable; print ""**** sys.path ****""; for p in sys.path:; print p; print ""******************"". import os; try:; user_paths = os.environ['PYTHONPATH'].split(os.pathsep); except KeyError:; user_paths = []; print ""*** PYTHONPATH ***""; for p in user_paths:; print p; print ""******************"". import numpy; print ""Numpy found: "" + numpy.__file__; ```. When I run this script with default python:; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ python test.py; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; Numpy found: /usr/local/lib/python2.7/sit",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:693,test,test,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['test'],['test']
Testability,"This last parameter can be deduced from the container traits so there is no need to specify it. ; This allow to simplifying some calling point as in MechanicalVisitor & UpdateMappingVisitor.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1689:732,test,test,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1689,2,['test'],['test']
Testability,This line has been removed accidentally in PR #1428 . need to be backported?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1438:329,test,test,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1438,2,['test'],['test']
Testability,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:861,test,test,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,2,['test'],['test']
Testability,This member was an error prone copy of `PluginRepository::vpath`.; PluginManager is now always in sync with PluginRepository. AddPluginRepository component has no effect without this change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:442,test,test,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,2,['test'],['test']
Testability,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2013:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013,2,['test'],['test']
Testability,"This non-breaking PR:; - allows to set the index for input2 instead of using the last one; - allows to set the container. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2803:661,test,test,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2803,2,['test'],['test']
Testability,This one is a small PR so maybe we can merge it before the 7 days ? ; [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/669#issuecomment-393438678:92,test,tests,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/669#issuecomment-393438678,1,['test'],['tests']
Testability,This one will definitely need multiple checking and maybe local tests with your own plugins / versions of SOFA for obvious security reasons :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301#issuecomment-606568981:64,test,tests,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301#issuecomment-606568981,1,['test'],['tests']
Testability,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1952:842,test,test,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952,2,['test'],['test']
Testability,"This option was missing in the visitor to init writeState components with a period.; Teaser: it will be useful in the new version of Regression. Also rename some parameters to be more explicit. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4744:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4744,2,['test'],['test']
Testability,"This package is needed by plugins when building tests out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2511:48,test,tests,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2511,3,['test'],"['test', 'tests']"
Testability,"This part of Sofa.GUI (main codebase):; - is an option in Sofa.GUI (strongly non-recommended in Sofa nowadays); - need X11 libs (so being deprecated with the arrival of Wayland); - almost 99.9% restricted to Linux due to X11; - has replacement (https://github.com/jnbrunet/SofaOffscreenCamera among others); - is not compiling 😂. So IMO it was time to make it a plugin (as in, being in `applications/plugins`); Due to all recent implemented mechanisms, it was quite straight-forward and almost as easy as simply cut-pasting into the new folder. IMO 2, I would even directly put it into an external fetchable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4928:1155,test,test,1155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4928,2,['test'],['test']
Testability,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4227:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227,2,['test'],['test']
Testability,"This plugin allows us to load images using CImg API. For now this plugin is located in applications/plugins of Sofa, and does not supersede ImageQt/ImagePNG/ImageBMP. Tests and a simple scene to test all the supported formats are provided. An other pull-request will be done to remove ImageQt/ImagePNG/ImageBMP and their posssible dependencies in SofaKernel (e.g libpng), following further discussions. Linked to issue #51 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:167,Test,Tests,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,3,"['Test', 'test']","['Tests', 'test']"
Testability,"This pr aims at fixing the crash on exit for some python scene. It was due to the cache of the Sofa python module not being cleaned up correctly (deleted after the interpreter). This is corrected here by insuring that the interpreter is correcty released through cleanup callback (see the SofaPython3 pr for more insights) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828:864,test,test,864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828,2,['test'],['test']
Testability,"This pr clean most of warnings; The code has never been changed in terms of runtime, but sometimes one may thing that warning were here to detect potential error (passthrough in a case for instance).; The main remaining warning is the alreadydefine class but i will do that in a separate pr since I'm scared it changes behavior on other platforms. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549,2,['test'],['test']
Testability,"This pr only goal is to test the Regression [PR #68](https://github.com/sofa-framework/Regression/pull/68). [ci-depends-on https://github.com/sofa-framework/Regression/pull/68]. PR hijacking!; [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/138]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942,3,['test'],['test']
Testability,"This prevents creation of nodes / components with empty `names`, when instantiated in a ""non-conventional"" way:. ```py; py:; node.createChild(''); node.createObject('MyComponent', name=''); ```. ```xml; xml:; <Node name=""""></Node>; ```. By default, if `name` is not provided, unnamed is set in `name`. but if `name` is forcefully set to `""""`, there's currently no safeguards. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1009:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1009,2,['test'],['test']
Testability,"This pull request aims at add a new extension file (.tmg) supported by DistanceGrid. This extension file is used to represent a shape : it's a list of values corresponding to the function evaluated at each point. All the data are placed one after the other in a single column. ; It's a minor add which does not disturb anything in SOFA, so it shouldn't raise any problems. (edit - 08/08/17) The file is now able to provide the size of the grid : these 3 values (nx, ny, nz) are placed at the top of the .tmg file and are used at the DistanceGrid instaciation.; Example : . **Shape.tmg**; *Header with the grid size*; >150; 150; 150. *Values of the grid*; > 0.015; 1; 1; ... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/353:925,test,test,925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/353,2,['test'],['test']
Testability,"This pull request aims at making the gravity clearly appearing in object nodes as a GravityForceField.; Old way to define gravity still works and is not deprecated. Main changes:; - By implementing this, the Mass is not inheriting from ForceField anymore.; - The optional mechanism of a separate gravity and the **Gravity** class are also deprecated.; - Default gravity is now 0 (therefore some scenes might fail and need an update). The GravityForceField can:; - either be manually added by the user in the node; - or the gravity can still be globally defined in the root node which will create the automatic creation of a GravityForceField for each mass in the graph. Fix: #2683. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/305]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/56]; [ci-depends-on https://github.com/sofa-framework/ci/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988:1426,test,test,1426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988,2,['test'],['test']
Testability,"This pull request allows the usage of the advanced timer ; 1. In the standard way; `runSofa -c 1`; 2. Only for the init functions:; `runSofa -c 0`; 3. For the init function and for every second step:; `runSofa -c -2`. Moreover, the usage of the advanced timer in batch mode works again:; `runSofa -c -2 -g batch -n 10`. Fixes #357 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468:584,test,test,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468,2,['test'],['test']
Testability,This pull request contains few cleaning cout/print/comments. @ChristianDuriez also added the dot poduct for SofaPython Quaternion; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/404:382,test,test,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/404,2,['test'],['test']
Testability,"This pull request does not change anything to the compilation, it only affects the install phase. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:349,test,test,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,2,['test'],['test']
Testability,"This pull request enhances the Operation::createPerformer function to provide more detailed error messages when it fails to create an InteractionPerformer. The function now includes precise diagnostic messages that indicates where the failure occurred, improving the ease of debugging and maintaining the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:850,test,test,850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,2,['test'],['test']
Testability,This pull request fix the problem proposed in issue #1390 . **1. BoxROI.inl**; Move the code piece; ```; if(!d_doUpdate.getValue()){; return ;; }; ```; in front of indices clear operations. **2. RestShapeSpringsForceField.inl**; Add warning message in function recomputeIndices(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1391:532,test,test,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1391,2,['test'],['test']
Testability,"This pull request fixes issue #3510. In a nutshell: PR #3299 introduced a change of behavior in how the keyboard inputs are taken into account by the GUI during a simulation. This modification is actually a good idea (see #3384), but it was pushed in #3299 by mistake and should be introduced distinctively (as it seems to be breaking for the majority of scenes). This PR simply reverts the two lines in #3299 responsible for the change of behavior.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3562:990,test,test,990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3562,2,['test'],['test']
Testability,This pull request removes classes implementing High Order simplicial elements from SOFA.; Those classes have been moved to plugin sofaFramework/ plugin.HighOrder; Updates include . - removing topological classes for High order triangulation and tetrahedral meshes; - removing tests associated with topological classes; - removing topological and mechanical mapping between regular and highorder meshes; - update of MeshMassMatrix by removing code to compute mass of high order elements. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222:276,test,tests,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222,2,['test'],"['test', 'tests']"
Testability,This pull-request adds the following features ; - add numerical integration on tetrahedra and triangles; - add a mechanical tag on a PointSetGeometry object in order to find its associated MechanicalObject; - add the orthogonal of a 2d vector; - add support of high order elements in VTK and Gmesh mesh loaders. It also fixes some bugs ; -Quand2Triangle Topologivcal mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['test'],['test']
Testability,This removes some override warnings that were (re)introduced recently. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/520:322,test,test,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/520,2,['test'],['test']
Testability,This removes warnings that appear when running runSofa from a directory where it was installed from source. This should not affect compilation in any way (but not sure how it would affect packaging Sofa). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687,2,['test'],['test']
Testability,"This request contains: ; - Add new tests to LocalMinDistance; - Add new tests Light (the three kind of light); - Add AllComponent (this test is failling until all component have an associated example file, on failure it reports the number of missing examples); - Add new test to LightManager . The ChangeLog is updated with the content of this pull-request.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/89:35,test,tests,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/89,4,['test'],"['test', 'tests']"
Testability,This scene makes no sense since no ShapeMatchingForcefield is existing; in SOFA public. Another scene already shows ShapeMatching example; using the ShapeMatching engine:; ICPRegistration_ShapeMatching_Engine.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/331:465,test,test,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/331,2,['test'],['test']
Testability,"This scene was using a TriangleFEMForceField and exploding. This is not possible as the projectToPointConstraint is constraining several points in a single position, leading to flat triangles. ; Using a MeshSpringForceField instead. ![ProjectToPointConstraint_00000001](https://user-images.githubusercontent.com/21199245/161145056-22a75286-ccf8-4346-b10f-b7059e5738e8.png). ![ProjectToPointConstraint_00000002](https://user-images.githubusercontent.com/21199245/161145064-b0fb09f8-3235-498b-b019-12170b1ad6ef.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2827:1054,test,test,1054,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2827,2,['test'],['test']
Testability,This shoud fix #1243 and several issues pointed out on the forum. Return was preventing from recomputing topology internally. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245:377,test,test,377,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245,2,['test'],['test']
Testability,This should avoid confusion in constraint resolution when mixing integration factors.; Let's see how this affect the CI. This affects the UncoupledConstraintCorrection : the flag _useOdeSolverIntegrationFactors_ is now true by default. This enforces to respect values returned by the ODESolver. See this [forum topic](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:680,test,test,680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,2,['test'],['test']
Testability,This should avoid issue #768. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:281,test,test,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,2,['test'],['test']
Testability,This should avoid us to scroll through the entire build output searching for a crashed unit test (often due to a segfault).; It is just re-printing the output that was already printed. Some dump is still needed to debug the crash (see PR #191). This PR fixes issue #149. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/195:92,test,test,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/195,2,['test'],['test']
Testability,This should be really tested also with CUDA.; @guparan do you confirm that it is compiled and tested on CI ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1301#issuecomment-607158413:22,test,tested,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1301#issuecomment-607158413,2,['test'],['tested']
Testability,"This should fix ""a few"" failing scene tests due to ColladaSceneLoader on Windows. See the Details tab of https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64_pr1/526/warnings2Result/category.96784904/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/504:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/504,3,['test'],"['test', 'tests']"
Testability,"This should fix #5065. EDIT: `actions/setup-python` could be used to provision the Python install de Python (install provided by the OS). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5066:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5066,2,['test'],['test']
Testability,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1940:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940,2,['test'],['test']
Testability,This should fix CMake errors like `file cannot create directory: C:/softwares/sofa-soft-build/$C:/softwares/sofa-soft-install/plugins/SofaMiscCollision/lib` on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154:420,test,test,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154,2,['test'],['test']
Testability,This should fix all the scene crashing when performing topological change with some mechanicalMapping in the scene. Like for example identityMapping between the mechanicalObject and the OglModel. This is a temporary fix. Those 2 visitors will be removed as soon as all the component listed in #810 will be updated to use TopologicalData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/880:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/880,2,['test'],['test']
Testability,This should fix failing scene tests due to issofa_plugin merge ; Failures were due to wrong `plugin_list.conf` path implying no plugin loading. Added some output to understand better were this list is loaded from (especially in case of failure). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,3,['test'],"['test', 'tests']"
Testability,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1769:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769,2,['test'],['test']
Testability,"This should fix the CUDA issue on CI. Issue was due to SofaCUDA having a version number (instead of NO_VERSION) and thus not being deactivated for scene tests by CI scripts (main.sh). We chose to deactivate SofaCUDA for scene tests because VMs can't run CUDA (or can they?).; In CI, SofaCUDA is only compiled, never executed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1123:153,test,tests,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1123,4,['test'],"['test', 'tests']"
Testability,This should fix the failing ImagePng test failure. . The problem is the consequence of the use of the ExpectMessage RAII without adding a CountingMessageHandler to the MessageDispatcher. This is quick fix but more fundamentally we need an API improvement to make; that automatical/hidden. But how to do that in an efficient way is yet unclear.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92:37,test,test,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92,1,['test'],['test']
Testability,"This should fix the issues raised by @alxbilger when compiling https://github.com/sofa-framework/SofaGLFW/pull/41. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2940:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2940,2,['test'],['test']
Testability,This should fix:; regression_test issue: #801; regresison test topology: #829; failing regression test need to be discussed in next dev meeting: #828,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440233757:58,test,test,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830#issuecomment-440233757,2,['test'],['test']
Testability,This shouldn't break anything and is a first step toward the slighgly more ambitious pr #601 . CHANGELOG:; - update gtest from their master (version 1.9: sha1 447d58b4ee8ea96b4757a5bb5f0b3be75af6c2a1); - update the CMakeLists so that they correctly export the needed -D to be used as a shared library; - Fix the problem of missing GTEST_API_ operator<< gtest by implementing the function in TestMessageHandler_test instead of gtest. NB: A better FIX for the GTEST_API_ operator<< could be to make submit PR to gtest but I have no more time left. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604:799,test,test,799,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604,2,['test'],['test']
Testability,"This solves the issue : [runsofa] -a -n conflict for batch #552; In case to run infinite iterations, the command to be run in command line is: ; bin/runSofa -g batch -n -1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610:424,test,test,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610,2,['test'],['test']
Testability,"This tests may be merged before refactoring otherwise it is harder to keep track of API changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1714:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1714,3,['test'],"['test', 'tests']"
Testability,"This unit test, based on the issue #3499, crashes and waits for a fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3501:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3501,3,['test'],['test']
Testability,"This utility component takes one mechanical object and one constraint solver as input links and computes the forces induced by the constraints applied on the mechanical object. (it can also display those forces with a debug rendering). This feature seems to be quite recurrent from the discussions.; It suppose it would have been easy to do it with python bindings directly, but I did not find any mechanism to retrieve the constraint matrix (with its peculiar format) from the mechanical object. (and I prefer c++/scn anyway 🤫). https://user-images.githubusercontent.com/11028016/190094711-a9acea8b-154d-43fd-977b-c64e1f37813f.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3294:1172,test,test,1172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294,2,['test'],['test']
Testability,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1956:631,test,test,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956,2,['test'],['test']
Testability,"This version is a following the effort started in #1605 and #1611 to clean TypeInfo. . In #1611 I tried to remove the hard dependency to all typeinfo and ODR violation by using the TypeInfoRegistry to get ; the typeinfo. The missing types were detected at runtime... In this version I found what is actually a much easier solution that removes the ODR violation and removes the need to typeinforegistry. . There is also two positive sides effects I see:; - in #1611 the missing types (one not having a datatype) were detected at runtime while in this one they are detected at link time with a single message like the one:; ""; undefined reference to 'sofa::core::objectmodel::Data<sofa::helper::vector<sofa::core::topology::Topology::Pyramid>::getValueTypeInfo() ; ""; - the mechanism is combined with the systematic use of declaring extern class Data<MyType>. The TypeInfo registration/generation is done where the Data<MyType> is not declared as extern. Comments welcome,; D. ; PS: I was also playing with Data/TData but this is for another PR so you can skip that part. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1632:1610,test,test,1610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1632,2,['test'],['test']
Testability,"This was not tested on CI anymore for a long time, it should be fixed and then reactivated on CI",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3058:13,test,tested,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3058,1,['test'],['tested']
Testability,This was only needed so that Data can be used with Link. As this is now a; deprecated feature we can remove this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1541:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1541,2,['test'],['test']
Testability,"This was preliminary introduced in SofaGLFW/SofaImgui, where a new GUI is loaded at run-time; Contrary to the batch/qt/headlessrecorder GUIs which are forcefully linked at compile-time through SofaGui, which could depend (or not) on Qt, etc according to the CMake config,. SOFANG works already made all the different GUIs as independent libraries but ultimately the SofaGui was still present because of the fact that runSofa was still relying on this mechanism. Now :; - Qt/Batch/HeadLessRecorder are loadable plugins and register themselves in the GUIManager, if loaded .; - Batch is still forcefully loaded by runSofa ; otherwise it could be possible to run SOFA without any GUI (I am not against having this possibility tho); - SofaGui is officially deprecated 🎇. Remarks: ; - after this PR, I would really like to move HeadlessRecorder in applications/plugins (either that in the ""official"" SOFA trunk) as it is only supported on Linux, needs X libs dev and I dont even know if people really uses it.; - showing help will only show the help for the runSofa options not the ones introduced by the eventual plugins....; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:1661,test,test,1661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,2,['test'],['test']
Testability,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1771:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771,2,['test'],['test']
Testability,"This will avoid updating each year the header, thus polluting the history of the code.; Update list of authors of SOFA. Perl code used for additional cleaning:; ```batch; perl -0777 -i -pe ""s/((\*){78}\/\n)((\/)(.*?)(\n)|\n|(\s*?)\*(.*?)(\n))/\1/s""; ```. Following files could also be discussed:; - SofaKernel/modules/SofaBaseCollision/IntrCapsuleOBB.inl; - SofaKernel/modules/SofaHelper/src/sofa/helper/RandomGenerator.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/gl/Trackball.cpp // h ; - SofaKernel/modules/SofaHelper/src/sofa/helper/polygon_cube_intersection/fast_polygon_cube_intersection.cpp // h; - applications/projects/meshconv/meshconv.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:973,test,test,973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,2,['test'],['test']
Testability,"This will contain all the matters about testing (things in SofaHelper, gtest, tools/gtestmain) and make things clearer.; And it will be also a first step for a refactoring of all about testing (deprecated SofaTest, etc)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1827:40,test,testing,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827,2,['test'],['testing']
Testability,"This will enable creating SOFA packages on Linux when Qt is installed from the package manager instead of the Qt installer. It also fixes some missing dependencies on Linux distros other than ubuntu 18.04. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,2,['test'],['test']
Testability,This will fix the crashing DistanceGridForceField-liver.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/591:312,test,test,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/591,2,['test'],['test']
Testability,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1971:834,test,test,834,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971,2,['test'],['test']
Testability,"This work aims at having a complete Doxygen documentation of SOFA components, especially concerning their Datas. I used the shell script doxygenDataComments.sh to; 1. Force each Data to be defined on one line; 2. Add an inlined and Doxygen-formatted comment on each Data (if no comment found) copying the description used in `initData`. Obviously this has not a 100% coverage (it ""only"" affects Data<.*> written members) but it's still a very good start. PS: our nightly-generated Doxygen is ready to receive these changes: https://www.sofa-framework.org/newapi. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/546:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/546,2,['test'],['test']
Testability,"This work is initially from @Camille-K in his branch https://github.com/Camille-K/sofa/tree/dev_limited_RestShapeSpringsForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3850:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3850,2,['test'],['test']
Testability,"Those 2 components are purely based on OpenGL (opengl code in update visual and draw().; But unexpectedly, updateVisual() is called, even in batch mode; This PR simply skips the updateVisual() if the Visual params does not handle opengl (which is the case in batch). Philosophical question: should we really updateVisual if there is no visual ?. https://github.com/sofa-framework/sofa/blob/26f65f15accb058053f49fbcd862cf59dec50352/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp#L274. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4436:1042,test,test,1042,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4436,2,['test'],['test']
Testability,"Those headers are included almost everywhere so it triggers a large number of ""unused var"" warnings (~2k in a standard compilation), leading to big log files on the CI 😵. Only with clang though apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4465:148,log,log,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4465,3,"['log', 'test']","['log', 'test']"
Testability,"Those macro are needed if you are trying to enhance the gui from your plugin linking with SofaGuiQt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2555:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2555,2,['test'],['test']
Testability,Those scenes were not tested? How did you detect the error?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041:22,test,tested,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020#issuecomment-489635041,1,['test'],['tested']
Testability,"Through a blog, i tried a new way to compute the rotation of a Vec3 with a Quaternion from the famous [glm library](https://github.com/g-truc/glm); (that is to say, the method is tested thoroughly I suppose....); https://github.com/g-truc/glm/blob/cc98465e3508535ba8c7f6208df934c156a018dc/glm/detail/type_quat.inl#L347. Measured with SofaBenchmark (), MSVC/full optim enabled (LTO and full-inlining):; ```; before: BM_Quat_rotateVec/8192 46.4 us; after: BM_Quat_rotateVec/8192 33.6 us; ```; FYI, RelWithDebInfo (no inlining) ; ```; after: BM_Quat_rotateVec/8192 38.0 us; ```. GCC on Ubuntu has pretty much the same behavior. And this PR add some tests between the previous and the new implementations. Related SofaBenchmark PR : https://github.com/alxbilger/SofaBenchmark/pull/25; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3138:179,test,tested,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3138,4,['test'],"['test', 'tested', 'tests']"
Testability,"Throw an exception when denominator is zero. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2929:584,test,test,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2929,2,['test'],['test']
Testability,"Timeout on tests was disabled in 2bc5db53 with commit message ""I have the intuition that this timeout mess might be the reason why continuous builds on Windows are so long. Let's see...""; Should we re-enable this?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289726033,1,['test'],['tests']
Testability,"Timers have been transformed to `AdvancedTimer`.; `MechanicalGetConstraintInfoVisitor` has now its own file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2640:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2640,2,['test'],['test']
Testability,"Title is self-explanatory.; Follows discussion about redefining CI minimal scope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4300:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4300,2,['test'],['test']
Testability,Title says all (at least on Windows/MSVC). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1425:294,test,test,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1425,2,['test'],['test']
Testability,Title says all :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] has been reviewed and agreed to be transitional.; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/240:244,test,test,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/240,1,['test'],['test']
Testability,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1911:176,test,tested,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911,3,['test'],"['test', 'tested']"
Testability,"Title says all, this PR removes all deprecated headers, occurring since the creation of Sofa.GL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2045:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2045,2,['test'],['test']
Testability,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1983:803,test,test,803,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983,2,['test'],['test']
Testability,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2279:605,test,test,605,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279,2,['test'],['test']
Testability,"Title says all.; I am still wondering why we did not encounter the problem before 🤔 (happening while doing sofang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2247:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2247,2,['test'],['test']
Testability,"Title says all.; Not detectable on the CI unfortunately.; Thanks to @alxbilger for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2841:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2841,2,['test'],['test']
Testability,Title says it all. SofaMacros.cmake was becoming more and more messy. Nothing changes in the macros/functions (I promise :angel:). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1477:382,test,test,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1477,2,['test'],['test']
Testability,Title says it all. Sorry for the messy quick fixing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/619:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/619,2,['test'],['test']
Testability,Title speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/981:276,test,test,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/981,2,['test'],['test']
Testability,"Title. The CI should not be impacted by this PR (hopefully). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3628:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3628,2,['test'],['test']
Testability,"Title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3637:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3637,10,['test'],['test']
Testability,"To avoid NaN propagation when a wrong constraint is created using barycentricMapper and CreatePointLine. Also add a small changes in regularGrid done during debug division by 0. fix https://github.com/sofa-framework/BeamAdapter/issues/55 (does it works across repo?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3383:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3383,2,['test'],['test']
Testability,"To be discussed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3956:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3956,2,['test'],['test']
Testability,"To be merged after https://github.com/sofa-framework/sofa/pull/2588. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2597:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2597,2,['test'],['test']
Testability,To complete the new doc page on [ShewchukPCG](https://www.sofa-framework.org/community/doc/components/linearsolver/preconditioned-cg/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1420:387,test,test,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1420,2,['test'],['test']
Testability,"To experiment a new handling of sparse matrices under mappings in our plugin, a few changes are needed in the core of SOFA.; Main changes:; - Add a new function in MechanicalObject (commit 6a6fd98).; - Refactoring of MatrixDerivId: warning holonomicC() is deprecated --> replaced by constraintMatrix (commit 966f9af).; - Change allocation in createMatrix from a fullMatrix to a sparseMatrix.; Linked to #26 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276,2,['test'],['test']
Testability,"To fix rendering bug reported in https://github.com/sofa-framework/sofa/discussions/3100; Also restore the `msaa` command line option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3105:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3105,2,['test'],['test']
Testability,To fix the last test I had to be able to detect that some data are child of BaseImage. So I have added inheritance mecanism in the DataTypeInfoWrapper.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605#issuecomment-729713330:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605#issuecomment-729713330,1,['test'],['test']
Testability,"To get rid of the ""call super"" anti-pattern is very challenging, because it is used to (a) check constraints on data fields as well as to (b) initialize the internal logic of the component. The problem I see is that the two things are being interleaved in a very subtle way. And both (a) and (b) rely on the call super pattern to work.; ; That said I strongly support the idea of cleaning the data validation mechanism. . Damien,; Nota bene:; I disagree about your saying ""I think this ""true/false implying other data fields"" mechanism is a bad design and for this case no checking solution will be clean. "" . Having complex relationship between input fields is a very common situation in user interfaces and it is not restricted to""true/false implying other data fields"" but also having mutually exclusive fields and other cases. It is so common that UI frameworks have dedicated support for that (QGroupBox (http://doc.qt.io/qt-5/qtwidgets-widgets-groupbox-example.html in Qt). And from an User interface perspective not exposing such constraints to the user is actually a bad design. So, these kind of constraint are good design, the problem is on how to implement them in Sofa :) . In Sofa the current state is that:; - the constraints resulting from the type are encoded into the read method of the field (eg: RGBAColor accept inputs like #FFAABBCC or ""red"", the input validation and error message reporting is done in the 'read' field, a dynamic cast can be used to display a color selector widget instead of a text field). ; - the ""isRequired"" constraint is encoded with a boolean in the Data field and checked in BaseObject::init(); - the ""isReadOnly"" constraint is encoded with a boolean in the Data field, it is not checked in BaseObject::init() and writing to it is allowed but it used to gray out things in the GUI. ; - other constraints (including one making relation between multiple data) are encoded with if() in the overriden init() and of course these constraints are not visible in ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416637832:166,log,logic,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754#issuecomment-416637832,1,['log'],['logic']
Testability,"To identify where addDForce is called. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2213:578,test,test,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2213,2,['test'],['test']
Testability,"To make it more simple to manage deprecation and more specifically to not override the parse() method for that purpose. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3934:659,test,test,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934,2,['test'],['test']
Testability,"To me loading textures and logos is not a core functionality of a physics library, so I would vote for not putting it in SofaKernel. What is important is that this removes the dependencies to `zlib` and `libpng` from sofahelper, correct ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51#issuecomment-281631942:27,log,logos,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51#issuecomment-281631942,1,['log'],['logos']
Testability,"To move forward in order to be ready for c++20 modules we need to clean the dependency graph of SOFA. This PR is going in this direction by removing most of the dependency to BaseVector.h, BaseMatrix.h and StringUtils.h. . In SOFA we often use this pattern; ```cpp; class MyClass; {; public:; typedef int Index; ; };; ``` . Which impose a dependency to the full MyClass definition to manipulate indices. ; I design pattern avoiding this problem is used in the PR. This PR work as the following: ; ```cpp; /// Forward declaration; class MyClass;; typedef int MyClassIndex;. /// Definition ; class MyClass; {; public:; typedef MyClassIndex Index; ; };; ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509:908,test,test,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509,2,['test'],['test']
Testability,To move rmath.h from the header I had to moved the code that rely on rmath into Vec.inl so that the include is not spread all around the codebase. Now if you want to instanciate special version of the Vec templates you need to include Vec.inl either. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1543:504,test,test,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1543,2,['test'],['test']
Testability,"To please both @hugtalbot and @fredroy, I did the following:; - I added a regression test on the introduced scene, keeping only one beam; - I generated the regression reference with the single threaded version => the scene runs with the multithreaded version but compare to the single threaded one",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721274955:85,test,test,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1721274955,1,['test'],['test']
Testability,To prepare for runSofa2 i feel the need to refactor some aspects. . CHANGELOG:; - ADD a Camera object inheriting from BaseCamera so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement your own 'application specific behavior' by using an external Controller (eg: PythonScriptController).; - ADD a link in BaseCamera to a BackgroundSetting so different camera can have different background. ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object; - Update the caduceus example.; - Light object now have a drawSource so that it is possible to draw the source from without having to change the d_drawSource data field.; ; This PR replace #674 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:1032,test,test,1032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,2,['test'],['test']
Testability,"To register the data type info into the TypeInfoRegistry I used partial specialization of the Data class. ; The default implementation of AbstractTypeInfoRegistration is using the old code system (which imply a dependency to all the TypeInfo_xxxx.h). . For progressive migration to new typeinfo system, the selected typeinfo are specializating their custom AbstractTypeInfoRegistration. This custom registration is using the new system. To make sure that the partial specialization is used, the migrated types are declared as extern so we are sure there is a single registration. . An additional advantage of explicit extern declaration of Data is that this avoid bloating the compiler with all the data type to instanciate in every compilation unit. . Done:; - Data[bool]; - Data[RGBAColor] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3289:1333,test,test,1333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3289,2,['test'],['test']
Testability,To relax after discussions on DataEngines i clean that;. This one is based on stc5 branch (not master). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/818:355,test,test,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/818,2,['test'],['test']
Testability,"To reproduce the bug, simply add a `msg_error()` at the first line of `static std::string computeSofaPathPrefix()` (sofa/helper/Utils.cpp) on a mac OSX system. I believe this bug was due to an order mixup of global static initializer since this bug wasn't affecting Linux (not sure about Windows). I would need more time to prove this though. I moved the faulty global static intializer to local static initializer and that fixed the crashes. It may be a good idea in the future to minimize the uses of static objects (singletons, static global variables, etc) since they are pretty hard to debug and can cause behaviors dependent of the compiler used. @guparan could you test this in your PR #635 (by reinserting the msg_error) and make sure that the seg fault is gone?. Fixes #636 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642,3,['test'],['test']
Testability,"To review after #471 is merged (DONE) You can now review it :) . This PR includes all changes and adds of the incoming [PSL] branch that can be merged directly. It includes some Python bindings, additional tests, and various cleanings.; Hopefully, it should not break anything. in BaseContext add variants of getObjects() which ease the syntax (eg: for(auto& i : getNodeObjects()){...} + corresponding tests. . - in Node add variants of getNodeObjects() and getTreeObjects that does not force to ease the syntax+ corresponding tests. . - in BaseLink add a setFlag method and a setPersistant...this makes things more consistent with BaseData. - in Binding_Base add the methods: addNewData, addData, getData, getLink, getListOfDataFields, getListOfLinks. The function are documented with docstring and tested in test_BindingBase.py. - in Binding_Data add methods: isSet, isPersistant, setPersistant, hasParent, getParentPath, setValueString. The function are documented with docstring and tested in test_BindingData.py; ; - in Binding_Link add methods: setValueString, isPersistant, setPersistant. The function are documented with docstring and tested in test_BindingLink.py. . - in Binding_SofaModule add methods: getAliasesFor. The function are documented with docstrings & tested in test_BindingSofa.py. - in SofaPython add functions: sendMessageFromException, getSofaFormattedStringFromException. - in SofaTest/_init_.py add ASSERT_* functions that generates real gtest failure. . - in runSofa in QDataSimpleEdit & QLinkSimpleEdit correctly prevent writing when the data field is readOnly; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge la",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410:206,test,tests,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410,5,['test'],"['tested', 'tests']"
Testability,To test: multiple solvers using METIS in parallel,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3072#issuecomment-1169734002:3,test,test,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3072#issuecomment-1169734002,1,['test'],['test']
Testability,"To use a LinearForceField, we need to specify a series of key times associated with forces. However, when simulation time goes beyond the last key time, the force becomes zero instantly. This PR changes it so that it stays at the last specified force instead.; There are a few more small changes to remove some warnings and to use SOFA coding conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/525:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/525,2,['test'],['test']
Testability,Today we have TrianglePressureForceField vs SurfacePressureForceField; And create associated test (SPFF as none) + doc. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1303:93,test,test,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1303,1,['test'],['test']
Testability,"Todo en vrac:; - trier les composants à garder; - réorganiser les composants à mettre dans des plugins; - mise à jour des CMakeLists pour compiler en mode ""NG"" (par défaut) ou avec tout; - ""paquets de plugins"" pour ne pas devoir activer un par un tous les plugins. Sur les composants gardés: ; - mettre n place des tests; - faire une passe de cleaning (noms, code, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290703670:315,test,tests,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290703670,1,['test'],['tests']
Testability,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:3383,test,test,3383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,2,['test'],['test']
Testability,"TopologySubsetIndices can be initialized before their corresponding TopologyContainer is total init depending on the component graph order.; Therefor the member `m_lastElementIndex` used to store the size of the TopologyBuffer could be set to 0. Override the method `getLastElementIndex() ` in `TopologySubsetIndices` (and put it in const) to get the number of points as a TopologySubsetIndices is always used on the Point topology. This method is called before removing elements to make sure we use and up to date value of m_lastElementIndex before doing any process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3331:1108,test,test,1108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3331,2,['test'],['test']
Testability,"Towards a green dashboard. Scene was broken since the change on StaticSolver; But I am not convinced it was even working before, the simulation seems very unstable. A python script handling the incremental loading is added. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1064:475,test,test,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1064,2,['test'],['test']
Testability,"TriangleOctree is used in some case where people wants to do ray tracing on an octree structure (filled with triangles); It makes more sense to move it in helper, as it is not a component but a shared utility class potentially used by something else than ""GeneralCollisionMesh"" things (whatever that means). Based on; - #2763 ; ; Breaking 'cause I removed dependency on VisualTool (Sofa.Core) to use directly Drawtool. Still, it has a compat file to redirect deprecated usages.; Removed more useless headers...; This class would need a quite heavy facelift BTW. PS: There was a weird include of defaulttype/fwd.h in DrawTool which was undetected until now, 🤥 ??. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2805:1202,test,test,1202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2805,2,['test'],['test']
Testability,"Triangles `or `TrianglesAroundEdges `as well as `d_triangles `array inside a `TetrahedronToplogy `where empty at start and created only the first time a getter is called.; For example: `getEdgesInTriangleArray()` was calling: `if(m_edgesInTriangleArray.empty()) createEdgesInTriangleArray()` . This works but means at start component are not fully init (potential unstable behavior) and there is no warranty at which timestep buffer will be created. ; Furthermore means that getter are not const and could change the content of the container which is a bad design (in my opinion). **This PR force the computation of all buffers at component init** using a dedicated method `initTopology()` which is called in cascade -> `Tetrahedron::initTopology()` will call `Triangle::initTopology()` -> `Edge::initTopology()`; **and remove all buffer creation call from the getter.**. - Additional changes: ; - Add more check in the buffer creation methods. Potentially exit if creation is not possible (will return bool in future changes).; - Always check buffer size access in the getter. If out of bound acces, returns Invalid element and only emit a warning if CHECK_TOPOLOGY is ON, as this call could be logical and the caller should check the invalid return. ; - Update all topologicalMapping to init the target topology at end of mapping init. ; - **Add some static invalid buffers in sofa::core::topology::Topology.h -> Im not fully happy about those add. Any better suggestion is welcomed.**. fixes #746; fixes #955; fixes #956 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/967:1343,log,logical,1343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/967,3,"['log', 'test']","['logical', 'test']"
Testability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in Sofa modules see #1237 for changes in SofaKernel. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1236:531,test,test,531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1236,2,['test'],['test']
Testability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in SofaKernel. See #1236 for changes in Sofa Modules. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1237:532,test,test,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1237,2,['test'],['test']
Testability,"Tried the crashing test on MacOS VM (Assembly_test.testDecomposedString) and it passed several times, crashed one time, then passed again several times...; Can't investigate further atm.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911#issuecomment-479423080:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911#issuecomment-479423080,2,['test'],"['test', 'testDecomposedString']"
Testability,"Trivial removeal of compilation warnings. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3494:583,test,test,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3494,2,['test'],['test']
Testability,Try to fix additional warnings !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1210:285,test,test,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1210,2,['test'],['test']
Testability,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909:29,test,test,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909,3,['test'],['test']
Testability,"Trying to implement strict type for setValue() and stumbled on ClusteringEngine which was setting wrong values (copy-paste I suppose). \+ fix other strict type usages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3398:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3398,2,['test'],['test']
Testability,"Trying to include the SofaExporter module in an external project (out-of-tree build of a plugin || test) was not functional since include directories were not exposed properly. I took inspiration from CImgPlugin for this PR, which uses CMAKE_CURRENT_SOURCE_DIR to expose the target's include directory.. but I believe this is actually wrong as this corresponds to the path to the sources (`/home/bruno/dev/sofa/modules/SofaExporter/src/` in my case for instance) and not to the installed include directory, (which should be `/home/bruno/dev/sofa/build/install/include/SofaExporter/src/SofaExporter` on my machine). I took a look at other plugins & pluginized modules & they all seem to do this, so Idk if it's a mistake or done on purpose..?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975:99,test,test,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975,3,['test'],['test']
Testability,"Trying to list automatable tests we could/should implement.; Feel free to complete it!. - ProjectiveConstraint:; - ""projectResponse"" could be tested by finite differences on ""projectPosition""; - MultiMapping:; - ""getK"" (assembled API) could be compared to ""applyDJT"" (non assembled API); - ForceField:; - masks: all the non-null lines of the stiffness matrix should have an entry in the mask vector (conservative test, i.e. the mask can contain more entries); - the compliance matrix should be equal to the inverse of the stiffness matrix (maybe with a different sign); - {Multi}Mapping; - masks: all the non-null columns of the Jacobian matrices should have an entry in the parent mask vectors (conservative test, i.e. the masks can contain more entries)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/111:27,test,tests,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/111,4,['test'],"['test', 'tested', 'tests']"
Testability,Turn ForceField init method as final and internally call a delegate fonction doInit which can be overide. This is to avoid adding a call super in each forcefield as ForceField::init has to be called in the current api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506:470,test,test,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506,2,['test'],['test']
Testability,"Tutorials were not configuring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3200:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3200,2,['test'],['test']
Testability,"Two change needed by the SofaPython3 plugin. . - In BaseData Some method have two version, one without arguments the other with an ExecParm. In pybind11 we need to differentiate explicitely the two version making the code more complex. As I see no good reason why to keep the two version in Sofa I merged these two into one by using a default param = nullptr. . - I have added a join/split function in the StringUtils class. . - In SimpleAPI I found allowing BaseObjectDescription useful to create object and node. So I added new functions.; _____________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:792,test,test,792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,2,['test'],['test']
Testability,"Two events are launched during the constraint solver pipeline:; - `BuildConstraintSystemEndEvent` is launched after the constraint system has been built; - `SolveConstraintSystemEndEvent` is launched after the constraint system has been solved. This allows a Python controller to subscribe automatically to those events if the controller implements `onBuildConstraintSystemEndEvent` and `onSolveConstraintSystemEndEvent`:. ```python; class MyController(Sofa.Core.Controller):; def __init__(self, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, *kwargs); ; def onBuildConstraintSystemEndEvent(self, params):; print(""BuildConstraintSystemEndEvent event received ""+str(params)). def onSolveConstraintSystemEndEvent(self, params):; print(""SolveConstraintSystemEndEvent event received ""+str(params)); ```. In collaboration with @TanguyNav and @EtienneMenager. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3418:1408,test,test,1408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3418,2,['test'],['test']
Testability,"Two forcefields were existing and very similar:; - UniformVelocityDampingForceField : real applied similarly in a isotropic on each dofs (x, y, z); - DiagonalVelocityDampingForceField : possibly anisotropic vector of damping coefficient per node. Unify these two with the NodalLinearDampingForceField. One question : which input do we want ; - a real; - a vector of real (which not existing so far); - a vector of Deriv (allowing for anistropic damping while we do not do much anistropy in SOFA). Remaining TODO; - [ ] Update all tests; - [ ] Update all examples. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4920:530,test,tests,530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4920,3,['test'],"['test', 'tests']"
Testability,Two minor changes:; - Remove FixedConstraint redundant with LinearMovementConstraint (on same DOFs); - Improve warning comment in MeshMMass when using explicit resolution (accFromF) with non-lumped sparse matrix. NOTE: I realized no sparse MassMatrix can therefore be used in explicit formulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/983:549,test,test,549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/983,2,['test'],['test']
Testability,"Two minor cleanings:; - clean dirty codes using `NDEBUG` to avoid warning and use `SOFA_UNUSED`; - remove last occurrence of SOFA_DEBUG . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4971:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4971,2,['test'],['test']
Testability,"Two new components:; - ComplianceMatrixExporter: Exports the compliance matrix of a constraint solver into a file; - ComplianceMatrixImage: visualization of the compliance matrix in the GUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2782:730,test,test,730,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2782,2,['test'],['test']
Testability,"Two new menu entry are added in the SceneGraph view to jump to the source file location corresponding to the selected object. This PR is based on #1012 to get the file location. ; By default qtcreator will be used to open the file. ; But this can be changed by editting the config file saved by the QSetting mecanism. . NB: The ""Go To implementation"" really make sense when using STLIB as it allows ; to jump where a prefab is implemented. It would be nice if we could do the same for c++ ; but this is of lesser interest ...because we need to compile sofa to see a change :) . EDIT: small video show how it works ; [![video](http://img.youtube.com/vi/zzOY-Lt0vgM/0.jpg)](http://www.youtube.com/watch?v=zzOY-Lt0vgM); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013:968,test,test,968,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013,2,['test'],['test']
Testability,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996:584,test,test,584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996,3,['test'],['test']
Testability,"Two pendulum links by their extremities. ![image](https://user-images.githubusercontent.com/10572752/226943766-038894a0-5298-4a7e-a6c1-bd5a29d2d0a8.png). [ci-depends-on https://github.com/sofa-framework/Regression/pull/40]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3742:763,test,test,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742,2,['test'],['test']
Testability,Two regression tests are failing :; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver_diagonal. I suppose this is because you moved them into a new folder and the Regression project has not been updated accordingly.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-873010397:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-873010397,1,['test'],['tests']
Testability,"Two tests are failing, did you notice @bakpaul ; ```; UnitTests.Bindings_Modules/SofaPython3/Modules.all_tests/0_SofaDeformable_SpringForceField_test_add_many_springs	89 ms	13; UnitTests.Bindings_Modules/SofaPython3/Modules.all_tests/1_SofaDeformable_SpringForceField_test_add_one_spring; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2247110094:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2247110094,1,['test'],['tests']
Testability,Two thing:; - @epernod some of your code includes changes not merged yet on component**S**tate; - ```Sleep()``` on Linux is not working. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1393:388,test,test,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1393,2,['test'],['test']
Testability,"Two unit tests failing, probably solved in https://github.com/sofa-framework/sofa/pull/3322",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253810910:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1253810910,1,['test'],['tests']
Testability,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1951:821,test,test,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951,2,['test'],['test']
Testability,"Two variables with the same name in the same scope: declaration hides previous local declaration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2463:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2463,2,['test'],['test']
Testability,"Typo in the name of the variable in an assert, so compiled only in Debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2417:39,assert,assert,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2417,3,"['assert', 'test']","['assert', 'test']"
Testability,"UPDATE: SofaHelper compilation with msvc. libpng should not be forced; to be linked using pragma directive. The name of the library may vary,; and it the debug version may well not be available, and its; unavailability should not break the debug build. I fell in the same problem as the one mentionned in issue #443 while compiling; with msvc in debug, without having on my system a version of the libpng ; library called ""libpngd.lib"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/446:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/446,2,['test'],['test']
Testability,"Uber PR. - some instanciations were still refering to Vec3dTypes (instead of Vec3Types); - confusion between double and SReal; - Vector3 used as Vec<3. SReal> (confusion with Matrix3 for example which is effectively Mat<3,3,SReal>...); - MeshMatrixMass mixing MassType and DataTypes::Real; - Fix some double* cast to a float*...; - Fix a rounding error with float in regulargrid (**realllllllly** old bug); - short demo on godbolt: https://godbolt.org/z/no6hss6jr; ; -> massive use of auto and getAccessor(). This PR should be exactly the same if SOFA_FLOATING_POINT_TYPE is set to double (hopefully); ~The only breaking things are in MeshMatrixMass~. actually it should not be. I have ported the code from the standard set of sofa modules/plugins so plugins/tests are likely to fail (with float); CI is using double so it will only test if there is no regression. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2560:759,test,tests,759,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2560,4,['test'],"['test', 'tests']"
Testability,"Unexpectedly enabled this option in one of my build...; This class did not follow the renaming bloc to block in #2404 (#2329) . CI result is useless as the CRSMultiMatrixAccessor is not activated on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2456:742,test,test,742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2456,2,['test'],['test']
Testability,"Unfortunately Gaurab seems to be unreachable those days. As I want to use his good work, here is a quick cherry pick of his PR #639. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/669:384,test,test,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/669,2,['test'],['test']
Testability,"Unfortunately I won't have much time to dedicate to this in the foreseeable future :-/. I see at least a few options for fixing this:; - split the `SceneCreator` API across plugins so that any plugin can provide facilities for creating a scene with components in this plugin, possibly with a common API in core; - remove anything referencing modules/plugins in`SceneCreator`, and instantiate components only using `createObject` (aka. the easy way out); - deprecate SceneCreator/C++ tests altogether and do python tests only, put the effort on making python tests bullet proof and easy to use (my personal preference). I strongly favour having tests that are as frictionless as possible, otherwise people will just stop writing them. In our fork we are considering using example python scenes as tests, by adding suitable assertions and testing what's needed on the example scene.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-331550589:483,test,tests,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-331550589,7,"['assert', 'test']","['assertions', 'testing', 'tests']"
Testability,"Uniform size type to be same type as index_type; + move index_type to sofa namespace (in sofa/config.h); (was located in defaulttype before, does not really make sense). So now : ; - index_type is defined as sofa::index_type; - size_type is defined as sofa::size_type ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1515:521,test,test,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1515,2,['test'],['test']
Testability,Unit and scene tests are not happy. Setting back to WIP,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2125#issuecomment-853614523:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125#issuecomment-853614523,1,['test'],['tests']
Testability,"Unit should not be specified in the GUI, nothing tell us that seconds are used.; This PR just remove the secs from the GUI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2742:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2742,2,['test'],['test']
Testability,Unit test failing due to the increased number of visual flag @bakpaul,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1680145018:5,test,test,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048#issuecomment-1680145018,1,['test'],['test']
Testability,Unit tests added! Performances using the benchmark scenes seem similar to the current ones.; To be reviewed @sofa-framework/reviewers,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1275831031:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1275831031,2,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"Unit tests are failing, but are these maybe fixed in previous PR? @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1282850263:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369#issuecomment-1282850263,1,['test'],['tests']
Testability,"Unit tests for `IdentityMapping`.; `coordDifference` did not exist for `Rigid2` so it is also introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5094:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5094,3,['test'],"['test', 'tests']"
Testability,"Unity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualBody'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'OglModel'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContextAPI::loadScene method returns: success (bool) for scene: C:/Users/dhananjay/unity_projects/testSofa/Assets/SofaUnity/Scenes/SofaScenes/tissue.scn; UnityEngine.Debug:LogError (object); SofaUnityAPI.Sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:3156,Log,Log,3156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Log'],['Log']
Testability,"Unix timeout command is now accessible in Windows VMs (using ""Git for Windows"" Bash). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/379:337,test,test,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/379,2,['test'],['test']
Testability,"Update CONTRIBUTING.md further to 20170503 SOFA meeting. - Track the status of each pull request using labels.; - If an issue reports a bug or any abnormal behavior in SOFA, a test highlighting the issue must be written. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260:176,test,test,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260,2,['test'],['test']
Testability,Update ChangeLog to better guide users when facing issues with recent breaking PRs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1562:335,test,test,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1562,2,['test'],['test']
Testability,Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454:354,test,test,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454,2,['test'],['test']
Testability,Update further to work on the upcoming Optimus plugin:; thanks @guparan for solving the issue !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:348,test,test,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,2,['test'],['test']
Testability,"Update scene to show the different methods apply on a same beam (even if I can't see the diff...) ; Move the old TetrahedronFEMForceField.scn into TetrahedronFEMForceField_Chain.scn. TetrahedronFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedronFEMForceField scn 6_11_2021 12_12_37 PM](https://user-images.githubusercontent.com/21199245/121693178-2bfa6700-cac9-11eb-846f-6395d00a1aa0.png). TetrahedralCorotationalFEMForceField.scn; ![Sofa - C__projects_sofa-src_examples_Components_forcefield_TetrahedralCorotationalFEMForceField scn 6_10_2021 9_26_44 AM](https://user-images.githubusercontent.com/21199245/121483753-d477d080-c9ce-11eb-968a-57009c936706.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2172:1239,test,test,1239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2172,2,['test'],['test']
Testability,"Update the guidelines so that they take into account the latest discussions and conclusion regarding the policy for:; - auto,; - epsilon,; - messaging,; - getContext(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1135:420,test,test,420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1135,2,['test'],['test']
Testability,"Update the list of plugins to NOT auto-load when executing runSofa from the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3197:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3197,2,['test'],['test']
Testability,Update: . - now with a correct implementation of the timeout parameter. Tests should not fail randomly now...; - also updated the filemonitor tests to use this timeout parameter correctly,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143:72,Test,Tests,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"Updating the code so that the lifecycle of SOFA is respected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3534:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534,2,['test'],['test']
Testability,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793,2,['test'],['test']
Testability,"Use directly operator[] instead of BaseMatrix::element() (and avoid using virtual functions) which is used extensively in addConstraintDisplacement() which is called a lot through ConstraintSolvers.; I dont like the way how to detect if the vector is FullVector at run-time (using dynamic_cast) but I did not see a fast way to get this info at compile-time. Bench (3instruments_collis.scn from BeamAdapter), 5000 steps, MSVC2022:; - before: `74.5033 s ( 67.1111 FPS)`; - after: `61.728 s ( 81.0005 FPS)`. A nice 20% speedup. \+ some cleanups; - color array was too long (messing IDE); - print only in dev-mode in LCPConstraintSolver if it did not reach convergence (bothersome). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231:1218,test,test,1218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231,2,['test'],['test']
Testability,"Use of the compatibility layer becomes optional now. Useful if one needs to check if their code is fully v21.06.; ON is the default value for easy-transitioning (for now). It would be nice for one build on the CI to set the option to OFF (to detect PRs still using deprecated headers). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2216:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2216,2,['test'],['test']
Testability,"Useless:. For example, the timer in `UpdateMappingVisitor::processMechanicalMapping` does not measure anything. Annoying:. I don't think it is a good practice to add timer on individual components. In particular, the ones I removed measure neglectable durations. The fact that there is one timer for every component adds a lot of pollution in the analysis of the timings, for nothing because it is neglectable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4631:950,test,test,950,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4631,2,['test'],['test']
Testability,Using #ifdef all around is really bad and ugly. If you need the feature to be back; please make a PR with a non invasive design. If you don't understand why it is so bad to have #ifdef ; used that way please ask I will explain with more details. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1075:499,test,test,499,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1075,2,['test'],['test']
Testability,"Using `getWriteOnlyAccessor` instead of `beginEdit/endEdit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2468:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2468,2,['test'],['test']
Testability,"Using clang -ftimetrace show that BaseObject/Data/Base are taking a lot of compilation time; because of excessive inclusion and parsing time.; PCH can help to solve this issue and there is support for that in CMake.; Let's se result. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1727:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1727,2,['test'],['test']
Testability,"Using sofa::Index instead of int. \+ removing verbose types and using aggreg. contructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4279:631,test,test,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4279,2,['test'],['test']
Testability,"Using this in your scene:; ```xml; <APIVersion level=""21.06"" />; ```; gave (before this PR):; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is now valid.; ```; and now gives (with this PR);; ```; [WARNING] [APIVersion(APIVersion)] The provided level '21.06' is not valid. Allowed versions are [17.06, 17.12, 18.06, 18.12, 19.06, 19.12, 20.06, 20.12, 20.12.99].; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2103:927,test,test,927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2103,2,['test'],['test']
Testability,"Validated with the following benchmark. The benchmark `BM_BTDMatrix_addBlock` uses the new implemented accumulation function and must be compared to `BM_BTDMatrix_add`. ```; -------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------; BM_BTDMatrix_add<6, SReal>/64 6212 ns 3069 ns 224000; BM_BTDMatrix_add<6, SReal>/512 49857 ns 32087 ns 22400; BM_BTDMatrix_add<6, SReal>/1024 103536 ns 54408 ns 11200; BM_BTDMatrix_addBlock<6, SReal>/64 602 ns 391 ns 1600000; BM_BTDMatrix_addBlock<6, SReal>/512 5607 ns 3432 ns 186667; BM_BTDMatrix_addBlock<6, SReal>/1024 12176 ns 6417 ns 112000. ```. https://github.com/alxbilger/SofaBenchmark/pull/36. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248:29,benchmark,benchmark,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248,5,"['Benchmark', 'benchmark', 'test']","['Benchmark', 'benchmark', 'test']"
Testability,"Various cleanup and better checks at the init stage to make sure the topological mappings have everything they need. Only Hexa2Quad, Quad2Triangle and Tetra2Triangle for now. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1126:426,test,test,426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1126,2,['test'],['test']
Testability,Various fix from my working branch:; - FIX: wrong msg_error instead of msg_info in PrecomputedConstraintCorrection; - FIX: warnings when drawing collision interaction using UnilateralInteractionConstraint; - FIX: OglAttribute handleTopologyChange method by using a PointData for value array.; - CLEAN: some logs in PointModel; - FIX: NearestPointROI to use rest_position instead of position. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1159:307,log,logs,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1159,3,"['log', 'test']","['logs', 'test']"
Testability,"Vec, Matrices and few other types have ""short name"" version. ; I added the one corresponding to fixed_array<>. I also added a BoundingBox3D so it become consistent with the other ones. . Comment for future code evolution: ; To know when to have an extern template or a short name alias it could be interesting to see if the type is used (or a consequence of a registration) in a ""factory"" (see SimpleDataWidget, TableDataWidget, ObjectFactory, ...). ; Each type used there may be extern templated and have its alias. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3298:1058,test,test,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3298,2,['test'],['test']
Testability,"Vec1 and Vec2 were supported in CUDA but only in float and not in double. Also added support for Rigid2d, which was supported in the CPU version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3688:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3688,2,['test'],['test']
Testability,"Vector negation does not make sense for unsigned types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2589:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2589,2,['test'],['test']
Testability,"Very basic PR just to let you know that the CGAL plugin is not compatible with latest CGAL.; As is, it compiles with CGAL <= 4.9.1. CI build is unnecessary for this PR.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/510:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/510,2,['test'],['test']
Testability,Very cool ! both classes are key classes intended to enter Sofa-NG project.; Thank you guys for the tests.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/268#issuecomment-302628489:100,test,tests,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/268#issuecomment-302628489,1,['test'],['tests']
Testability,"Very cool, I just tested it. ; - But I see it is not possible to put black background?; - The fluid is not visible in front of another VisualModel, is it due to ZBuffer?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-544885851:18,test,tested,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-544885851,1,['test'],['tested']
Testability,Very nice work @fredroy :clap: :clap: :clap:. I have 2 side questions:; - shouldn't this be under applications/projects instead of applications/plugins (I would feel more logical to have it next to runSofa basically) ?; - is it planned to host the repository in sofa-framework organization ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2062#issuecomment-842943342:171,log,logical,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062#issuecomment-842943342,1,['log'],['logical']
Testability,Very simple PR to allow Windows loading MultiThreading plugin.; Will fix these errors: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64/550/warnings2Result/category.96784904/. [ci-build][with-scene-tests]; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:212,test,tests,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,3,['test'],"['test', 'tests']"
Testability,Very strange failure on macos_clang_options; [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782:65,test,tests,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3176#issuecomment-1210400782,1,['test'],['tests']
Testability,"Very useful collection of header-only utilities : https://github.com/nothings/stb. This PR uses **stb_image** and **stb_image_write** to read/write jpeg,png,etc. images directly without any reliance on libpng or libjpeg.; Practically, This PR almost depracates the use of CImgPlugin (at least as an image loader). ; The only thing stb (compared to cimg) is that it cannot load is the TIFF format... It allows us to :; - not depend on any external library anymore (libpng, libjpeg); - not need anymore to load the CimgPlugin to get images in a scene (which was a bit weird...). **stb** licence is either MIT or even public domain (!). Some questions about this PR:; - should we fetch stb at cmake configure time ? IMO no because it would mean we really need an Internet connection to compile the core of SOFA; - should we put all the files from the stb repo ? IMO no, the other files wont be used for sure. That's why the stb dir contains only the two files we want for this PR. <img src=""https://user-images.githubusercontent.com/11028016/146752568-e4f392d5-5ecd-4f32-be92-32f48b53f5ab.PNG"" width=""400"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:1646,test,test,1646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,2,['test'],['test']
Testability,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2037:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037,2,['test'],['test']
Testability,"VirtualTypeInfoA was just to allow me to test without breaking other part of Sofa by side effect. So it is clearly temporary, I have not thought about that seriously on how to proceed the transition and if we need a separated VirtualTypeInfoA",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552#issuecomment-712792606:41,test,test,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552#issuecomment-712792606,1,['test'],['test']
Testability,"Visitor and MechanicalOperations) fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node. -- Notes:. This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:727,log,log,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['log'],['log']
Testability,"VisualModelImpl inherits from State which allows it to be mapped (with Mappings) .; This State is slightly specialized for Visual thing (contains positions, normals and rest_positions(?) ). It was previously located exclusively in VisualModelImpl.h, this PR renames it and moves it into Sofa.Core.Visual.; Follows the guideline one class -> one (set of) file. Slightly breaking because some includes have been removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3782:958,test,test,958,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3782,2,['test'],['test']
Testability,VisualTransform moved from SofaBaseVisual to SofaGeneralVisual. ChangeLog:; - FIX: compilation LeapMotion plugin (issue since v16.12). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296:386,test,test,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296,2,['test'],['test']
Testability,"Voilà. Maybe @epernod a check on the SofaPhysicsSimulation with the various Fore/Background member variables. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5054:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5054,2,['test'],['test']
Testability,WAIT for #1283 (priority). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1339:278,test,test,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1339,2,['test'],['test']
Testability,"WARNING: this will break SofaPython3. I'm working on it. Before, when 2 nested packages had `RELOCATABLE ""plugins""`, the 2nd was installed in CMAKE_INSTALL_PREFIX/plugins/FirstPackage/plugins/SecondPackage. Now, the RELOCATABLE argument, if relative, will always be treated as CMAKE_INSTALL_PREFIX/<argument>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2603:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2603,2,['test'],['test']
Testability,"WIP -> rewriting history. EDIT: in the end, the only ""non logical"" rename by `git log ` is `modules/SofaPreconditioner/src/SofaPreconditioner/BlockJacobiPreconditioner.cpp => Component/Compat/src/SofaBaseLinearSolver/CGLinearSolver.h`. where BlockJacobiPreconditioner.cpp is deleted and thinks it is now the (new file but temporary) compat file for CGLinearSolver.h (whose destiny is to be deleted anyway)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2717#issuecomment-1068020496:58,log,logical,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2717#issuecomment-1068020496,2,['log'],"['log', 'logical']"
Testability,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1919:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919,2,['test'],['test']
Testability,WIP branch fixing test failures caused by warning/error/deprecated messages issued from #213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] #213 has been merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/237:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/237,2,['test'],['test']
Testability,"WIP project: Add window to display Data graph using [NodeEditor](https://github.com/paceholder/nodeeditor) library. To use it, install NodeEditor.; check option in CMake: SOFA_BUILD_NODEGRAPH; and until better setup, manually set: ; - NODEEDITOR_INCLUDE_PATH to NodeEditor-install/include; - NODEEDITOR_LIBRARY_RELEASE to NodeEditor-install/lib/nodes.lib. DataGraph can be displayed in top menu: Edit->Data Graph... ![graphData_04](https://user-images.githubusercontent.com/21199245/66931696-c2e1f800-f036-11e9-91da-3f6cebcb6880.jpg); ![graphData_03](https://user-images.githubusercontent.com/21199245/66757188-e45aac80-ee9b-11e9-8065-6f379be060b4.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1187:905,test,test,905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1187,2,['test'],['test']
Testability,"Wait for #4058 to be merged to solve the failure. [ci-depends-on https://github.com/sofa-framework/ManifoldTopologies/pull/7]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065:666,test,test,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065,2,['test'],['test']
Testability,"Wait for CI, then ready :+1:; [ci-build][with-all-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1899#issuecomment-793688900:50,test,tests,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899#issuecomment-793688900,1,['test'],['tests']
Testability,Waiting for CI but I think it's better now:; used enable_if<is_base_of> to compile or not the doUpdate / update methods in the test. should be clean enough,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-423956245:127,test,test,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-423956245,1,['test'],['test']
Testability,"Waiting for the last build to complete, but test problems look fixed since last commit. OK for me to merge as soon as the mas build is ok.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/207#issuecomment-289040858:44,test,test,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/207#issuecomment-289040858,1,['test'],['test']
Testability,"Waiting the final version of the release for merging it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3998:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3998,2,['test'],['test']
Testability,Warning EXTERMINATOR .. or almost !; I also created a dedicated issue ( #1166 ) on deprecated to remove at v19.12 release ! Get ready for the coding sprint !. Log of important changes:; - ImageTypes: update use of constant indice; - BarycentricMapper : use of new templates on friend class; - AttachConstraint : Add delegate function instead of using twice the same name. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1167:159,Log,Log,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1167,3,"['Log', 'test']","['Log', 'test']"
Testability,"Warning specific to windows fixed for function specialization (class templated, set the specialization in cpp), fix some headers (Mapping & MultiMapping). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/738:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/738,2,['test'],['test']
Testability,Warning: a bunch of unit tests are failing after merge on [ubuntu_clang-3.8_options-debug](https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/353/testReport/),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372#issuecomment-329165449:25,test,tests,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372#issuecomment-329165449,2,['test'],"['testReport', 'tests']"
Testability,Warnings flags were declared in add_definitions (instead of cxx_flags). It is messing with projects using the new CUDA language feat. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1368:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1368,2,['test'],['test']
Testability,"Warnings were added in #2076. They were not taken into account in the unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2132:75,test,tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2132,3,['test'],"['test', 'tests']"
Testability,Warnings were due to unused function and overwriting function (clang). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/229:296,test,test,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/229,1,['test'],['test']
Testability,"Warnings were triggered from the gcc flag `-Wdelete-non-abstract-non-virtual-dtor `. https://devblogs.microsoft.com/oldnewthing/20200618-00/?p=103874. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4020:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4020,2,['test'],['test']
Testability,"Warns the user when a non-symmetric matrix is produced by a non-linear mapping while a symmetric linear solver is used. The message looks like:; ```; [ERROR] [RigidMapping(RigidMapping1)] The geometric stiffness of this mapping is a non-symmetric matrix. It means a linear solver supporting non-symmetric matrices must be used, but it is not the case here. To fix your scene, you have two options: 1) Use a linear solver supporting non-symmetric matrices, 2) stabilize the geometric stiffness with the Data 'geometricStiffness' set to 'Stabilized'; ```. Note that the detection was already considered in the past through a `bool` in the `MechanicalParams`, but not used at all. Note that even if a linear system supporting non-symmetric matrices is used, the exact geometric stiffness computed in `RigidMapping` leads to large stability issues in `examples/Component/LinearSystem/MatrixLinearSystem.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3838:1444,test,test,1444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3838,2,['test'],['test']
Testability,"Warns the user when setting the `contactStiffness` data while using a Lagrange-based constraint resolution! Because it's **useless** :godmode: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3843:684,test,test,684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3843,2,['test'],['test']
Testability,"Was changed in https://github.com/sofa-framework/sofa/pull/637. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3622:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3622,2,['test'],['test']
Testability,"Was crashing when activating the boolean option ""showVonMisesStressPerNode"" while the data ""computeVonMisesStress"" was not set to 1 or 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2156:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2156,2,['test'],['test']
Testability,"We can forward extra args to the python interpreter with the option `--argv`. ; This PR allows to do: ; ```comand; runSofa myscene.py --argv arg1,arg2,arg3; ```; instead of ; ```comand; runSofa myscene.py --argv arg1 --argv arg2 --argv arg3; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4591:786,test,test,786,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4591,2,['test'],['test']
Testability,"We check the values of Young's modulus and Poisson's ratio in the base class of all elastic FEM. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4853:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4853,2,['test'],['test']
Testability,"We chould have an intermediate level in the inheritance hierarchye or we can have interfaces as well as agregation. . Here is an example with both interface & agregation approache to factor the data logics. It is a bit long because I wanted it to be self compiling. ; ```cpp; #include <iostream>; #include <vector>; class Data; {; public:; std::string name;; std::string value;; };. class BaseObject; {; public:; BaseObject() {; initData(&d_name, ""name"");; }. virtual void init() {}. void initData(Data* d, const std::string& name); {; d->name = name;; m_datas.push_back(d);; }. void dump(); {; std::cout << ""== ("" << d_name.name << "") =="" << std::endl;; for(auto& data : m_datas); std::cout << ""Data: "" << data->name << std::endl;; }. private:; std::vector<Data*> m_datas;; Data d_name;; };. class ForceField : public BaseObject; {; public:; ForceField() {; initData(&d_mstate, ""mstate"");; }; Data d_mstate;; };. //// Data related object...; class TopologicalLink; {; public:; TopologicalLink(BaseObject* self); {; self->initData(&d_topology, ""topology"");; }; Data d_topology;. private:; TopologicalLink(const TopologicalLink&) {};. };. class GroupOfRelatedData; {; public:; GroupOfRelatedData(BaseObject* self); {; self->initData(&d_a, ""a"");; self->initData(&d_b, ""b"");; self->initData(&d_c, ""c"");; }. void parse(); {. }. void init(); {; if(d_a.value == ""well"" and d_c.value == ""not so""); d_b.value = ""ok"";; }. Data d_a;; Data d_b;; Data d_c;; };. ///// Sofa components; class TetrahedronFEMForceField :; public ForceField,; public TopologicalLink; {; public:; TetrahedronFEMForceField() : TopologicalLink(this); {; initData(&d_youngModulus, ""youngModulus"");; }. Data d_youngModulus;; };. class SuperFEM :; public ForceField,; public TopologicalLink; {; public:; SuperFEM() : TopologicalLink(this), dataGroup(this); {; initData(&d_youngModulus, ""youngModulus"");; initData(&d_oldModulus, ""oldModulus"");; }. void init() override; {; dataGroup.init();; }. Data d_youngModulus;; Data d_oldModulus;. Grou",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/979#issuecomment-479885178:199,log,logics,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/979#issuecomment-479885178,1,['log'],['logics']
Testability,We definitely need to get timing and position regression feedback from (at least a few) scene tests. Already existing tools for position regressions:; - applications/plugins/SofaTest/SofaTest_test/Regression_test; - applications/projects/sofaVerification. TODO:; - [x] Choose one tool to update and reactivate; - [ ] Add execution time measure; - [x] Integrate it in CI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801:94,test,tests,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801,1,['test'],['tests']
Testability,"We got this error many times in the past, and I never had the chance to dig into the issue. There was actually two issues:. 1. SOFA was unable to find some GL extensions on Intel drivers with the Qt viewer while they were supposed to be there (they were correctly found when using the qglviewer); 2. When no extensions at all were found by Glew, SOFA tried to convert a null pointer to a std::string, which created a segmentation fault. This PR fixes both of these issues. It first make sure that the pointer returned by Glew isn't null before converting it to a std::string. It also asks Qt to enable deprecated functions, which are used by SOFA. In addition, I've removed the part of the Qt viewer that was forcing the environment variable `MESA_GL_VERSION_OVERRIDE` on Linux. I've also remove the error when this environment variable wasn't set with Intel driver (which was never the case because we were forcing it...) and added a warning instead (Qt viewer works fine on Intel drivers, maybe this was an old bug?). . Will most probably fix https://github.com/sofa-framework/sofa/issues/1567. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1690:1636,test,test,1636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1690,2,['test'],['test']
Testability,We had some errors while compiling sofa 17.06 on macos with Apple LLVM 9.0.; This was caused by two oddly inlined functions. So here's a PR removing the inline declaration.; We hope it'll be useful. Cheers.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/444:459,test,test,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/444,2,['test'],['test']
Testability,We ran into some more compile errors on windows using MSVC 2015. libQGLViewer wouldn't compile without those missing headers. Here's a quick fix but you might want to update libQGLViewer to the latest version (2.7.0). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/461:469,test,test,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/461,2,['test'],['test']
Testability,"We regularly have build slaves not responding on CentOS, Windows and MacOS. After investigations, this is always caused by zombie test processes (Compliant_test) that disturb the daily cleaning job, and therefore the whole build machine. ; The only way to fix it for a while is to kill all proccesses on the corresponding slave, wipe the work folder and restart the slave.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221:130,test,test,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221,1,['test'],['test']
Testability,We still did not test with Rigid or Vec2/6.; In my opinion we should be conservative and just let the caching optimization (and let the default template as it is for the moment); What do you think ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-857807779:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-857807779,1,['test'],['test']
Testability,"We tested this scene in debug and release, and both displays a warning message.; The warning message is consistent because it use a default template (aka double). Here is a log on debug :; ` [WARNING] [MergeVectors(merge)] Template <tartempion> incorrect, used <double>; `",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328103188:3,test,tested,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378#issuecomment-328103188,2,"['log', 'test']","['log', 'tested']"
Testability,We will also need to decide if we use assimp as an extlib or if we embedded it. Right now I use cmake to find it on the system and so I can't test the code on the dasboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369891387:142,test,test,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369891387,1,['test'],['test']
Testability,"Welcome to v22.06 development phase. ![](https://media.giphy.com/media/W9lzJDwciz6bS/giphy.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2546:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2546,2,['test'],['test']
Testability,"Well I don't really see the cleaning there just renaming to a name I find more ambiguous because EXPECT_NONFATAL_FAILURES is much less 'distinct' fom EXPECT_NONFATAL_FAILURE than the previous one... but maybe I miss-understood the commit. Anyway if you think this is better I don't really care as this is a macro to ""test"" the testing framework so of very limited usage.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370559064:317,test,test,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370559064,2,['test'],"['test', 'testing']"
Testability,"Well I found a fix, it involves `sys.excepthook` to register a toplevel handler for uncaught python errors. In this case I simply abort the test. We should be fine now, but just in case we should also:. 1. limit logging size; 2. limit simulation time for tests. I'll look into the second part. And again, my deepest apologies.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371:140,test,test,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289694371,3,"['log', 'test']","['logging', 'test', 'tests']"
Testability,"Well in this case, the bug was a wrongfully warning printed only when Sofa is built in debug. Can we create tests that are that specific?. I could try to do some regex ninja tests on the application output, but it would have to be executed on debugged configurations. Let me know if this is something you would like to see for this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329789709:108,test,tests,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329789709,2,['test'],['tests']
Testability,"Well it isn't actually a map in the code but a vector. This TopologySubsetIndices data is used in SpringForcefield to keep track of the topological changes and contains the indices on which each spring is attached. Given the fact that multiple springs can be attached to one point, then this vector may contains multiple occurrence of the same index (and it is the case for some unit tests currently). And more importantly its order is very important because it should be kept consistent with the order of the list of attached indices of the second object...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114789914:384,test,tests,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738#issuecomment-2114789914,1,['test'],['tests']
Testability,"Well spotted @courtecuisse . - This fix reminds me that some bound checks (e.g type::vector) does only check in DEBUG mode/assertion https://github.com/sofa-framework/sofa/blob/649a41bf386b78c95264d9a6fb3125f4662c5a58/Sofa/framework/Type/src/sofa/type/vector_T.h#L108; obviously for performance reason. Should we do that here ? Thing is, many people do not run in debug so.... 🤐. - I guess this is a far cry but @fjourdes you would want to get the fix ? (if you dont have it already...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659:123,assert,assertion,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659,1,['assert'],['assertion']
Testability,"Well, here is the updated log. (I also did small corrections in scene to remove warnings I know how to remove. Anyway, the issue is still there).; The scene with corrections is attached.; [test_scene.zip](https://github.com/sofa-framework/sofa/files/8573660/test_scene.zip). **Full output**. ```txt. [sergei@sergei-20hd0000fr test_scene]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/install/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so /home/sergei/Source_code/test_scene/test_scene.py ; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:26,log,log,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['log'],['log']
Testability,"Well, it's now compiling on linux since @bcarrez installed a new version of some ffmpeg libs.; The failure on the ubuntu build is due to the lack of X. @damienmarchal @guparan @hugtalbot do we need to test this ""gui"" ? I means, others gui are not tested and the problem would be the same as we encounter with the headless recorder if we consider testing it. On centos, we need to install newer version of ffmpeg libs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714:201,test,test,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360769714,3,['test'],"['test', 'tested', 'testing']"
Testability,"Well, today the long name is the returned string. And it does not depend on this PR. Look at the unit tests I added:. ```cpp; EXPECT_EQ(sofa::defaulttype::DataTypeName<float>::name(), ""f"");; const auto object = sofa::core::objectmodel::New<DefaultTemplate1<float> >();; EXPECT_EQ(object->getTemplateName(), ""float"");; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307402013:102,test,tests,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3461#issuecomment-1307402013,1,['test'],['tests']
Testability,What do I(we) do now ? Should I add other tests ? @damienmarchal @guparan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-328151492:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-328151492,1,['test'],['tests']
Testability,What is the file SofaKernel/framework/framework_test/resources/existing.txt?; Does it really need to be pushed? Could it be removed and added to .gitignore?; It seems to be modified when running the test.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/146:199,test,test,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/146,1,['test'],['test']
Testability,"What was written above (hidden by GH):. ---. TODO:; - test when a node is added. One issue remains in my tests :; - simulation starting without gravity, and then gravity is added; - mass added using python, since no init, the link in GravityForceField to the local mass is no performed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445308949:54,test,test,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445308949,2,['test'],"['test', 'tests']"
Testability,When #1080 is merged and scenes tests will be checked I will add change to remove fileMesh inside oglModel.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1081#issuecomment-501667969:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1081#issuecomment-501667969,1,['test'],['tests']
Testability,When I have free time but cannot be concentrated I do trivial 'cleaning' changes resulting in this kind of PR where I replaced the std::cout by msg_info. CHANGELOG for @hugtalbot :; Trivial replacement of std::cout by msg_info; - [SofaUserInteraction] ; - [SofaValidation]; - [SofaVolumetricData]; - [SofaOpenGl]; - [SofaNonUniformFem]; - [SofaPython]; - [SofaSparseSolver]; - [SofaSphFluid]; - [SofaTopology]; - [SofaUserInteraction]. I also replaced this code pattern:; ```cpp; #ifndef NDEBUG; std::cout << blahblah; #endif; ```. into this pattern:; ```cpp; dmsg_info() << ; ....; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255:813,test,test,813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255,1,['test'],['test']
Testability,"When a display flag is unknown, the closest existing flags are printed to help the user to fix the scene. Example:. ```; [WARNING] [DisplayFlags] Unknown token 'showForceField'. The closest existing flags are:; - showForceFields (96% match); - hideForceFields (75% match); - showInteractionForceFields (69% match); Complete list is: [""hideAdvancedRendering"", ""hideAll"", ""hideBehavior"", ""hideBehaviorModels"", ""hideBoundingCollisionModels"", ""hideCollision"", ""hideCollisionModels"", ""hideForceFields"", ""hideInteractionForceFields"", ""hideMapping"", ""hid; eMappings"", ""hideMechanicalMappings"", ""hideNormals"", ""hideOptions"", ""hideRendering"", ""hideRoot"", ""hideVisual"", ""hideVisualModels"", ""hideWireframe"", ""showAdvancedRendering"", ""showAll"", ""showBehavior"", ""showBehaviorModels"", ""showBound; ingCollisionModels"", ""showCollision"", ""showCollisionModels"", ""showForceFields"", ""showInteractionForceFields"", ""showMapping"", ""showMappings"", ""showMechanicalMappings"", ""showNormals"", ""showOptions"", ""showRendering"", ""showRoot"", ""showV; isual"", ""showVisualModels"", ""showWireframe""]; ```. For some reasons, `msg_error` does not print anything. I had to use `msg_warning`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3575:1690,test,test,1690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3575,2,['test'],['test']
Testability,When a message does not have an 'suggestion' text then sofa will; crash. Because of Index out of bound.; This PR fix that.; Fixes #491 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/479:388,test,test,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/479,2,['test'],['test']
Testability,"When a plugin is loaded, the ObjectFactory is populated of Components from this plugin. However, when this plugin is ""unloaded"", it was still possible to create a component from the plugin. This PR detects that the ObjectFactory tries to instantiate an object that is from an unloaded plugin.; It is particularly useful when the initialization of the plugin fails (SofaCUDA for example). When the initialization fails, the plugin is unloaded.; A unit test is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:451,test,test,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,3,['test'],['test']
Testability,"When a template parameter is not found in the list of the available templates:. ```; [WARNING] [CGLinearSolver(cGLinearSolver1)] Template 'CompressedRowSparseMatrix3d' cannot be found in the list of available templates [CompressedRowSparseMatrixMat2x2d, CompressedRowSparseMatrixMat3x3d, CompressedRowSparseMatrixMat4x4d, CompressedRowSparseMatrixMat6x6d, CompressedRowSparseMatrixMat8x8d, CompressedRowSparseMatrixd, FullMatrix, GraphScattered, NewMat, NewMatBand, NewMatSymmetric, NewMatSymmetricBand, SparseMatrix].; 	'GraphScattered' is used instead; ```. instead of. `[WARNING] [CGLinearSolver(cGLinearSolver1)] Template CompressedRowSparseMatrix3d incorrect, used GraphScattered`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2207:1226,test,test,1226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207,2,['test'],['test']
Testability,"When a texture cannot be loaded the OglModel will crash. This PR fix that. ; As the image loader are now ""optional"" through CImgPlugin. . NB: I cannot prevent myself to clean a bit the commented code because I; cannot do bug tracking in the middle of the mess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/474:512,test,test,512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/474,2,['test'],['test']
Testability,"When addChild, removeChild, addObject, removeObject etc. are public. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1470:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1470,2,['test'],['test']
Testability,"When applying a filter when copying from a matrix to another, the matrix size was not appropriately set. The introduced unit test would fail without the fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4063:125,test,test,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4063,3,['test'],['test']
Testability,"When compiling a project/plugin with c++17, it fails due to std::binder used in Sofa and Eigen. This functionality was depreciated in c++11 and was removed in c++17 (lambda expressions are now the cool way to do this). This PR removes the use of std::binder and, as a side effect, brings us closer to be able to compile Sofa with c++ > 11 if we wish to do some modern c++ someday :-) . Small note: The version of Eigen used in Sofa is a little bit old (2015)... Might be a good idea to add this in the Sofa's to do list. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908,2,['test'],['test']
Testability,"When compiling image, you might now have an issue when updating since DiffusionSolver has been made a separate plugin. This PR provides a warning for the users. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067:412,test,test,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067,2,['test'],['test']
Testability,When inheriting from BaseTest this automatically add to the test the adequate message handler so there is no need to add them manually. ; But refactoring these tests is out of the scope of the PR :) ; So it was more a comment for future work ;) . EDIT: Do you know why the windows build is failing ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-397590209:60,test,test,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-397590209,2,['test'],"['test', 'tests']"
Testability,"When new messages are received or the message log is clear the componentState is changed. ; This allows the GUI (or other component) to detect that the object has changed (because its message log grew up). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397:46,log,log,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397,4,"['log', 'test']","['log', 'test']"
Testability,"When reading https://github.com/sofa-framework/sofa/pull/2567, I did not understand immediately how to read:. ```cpp; typedef typename VecCoord::template rebind<TriangleInfo>::other VecTriangleInfo;; ```. I did not know this technique to rebind templates, as since C++11, it is possible to template an alias. So, instead of writing. ```cpp; template<class T2> struct rebind; {; typedef vector< T2,CPUMemoryManager<T2> > other;; };; ```; I propose to write:; ```cpp; template<class T2>; using rebind_to = vector< T2, CPUMemoryManager<T2> >;; ```. To define `VecTriangleInfo`, we would write:. ```cpp; using VecTriangleInfo = typename VecCoord::template rebind_to<TriangleInfo>;; ```. IMO, it is a bit more readable. But we can do better. I introduced convenience aliases in Rebind.h. With that, I can define `VecTriangleInfo` with:; ```cpp; using VecTriangleInfo = sofa::type::rebind_to<VecCoord, TriangleInfo>;; ```. `sofa::type::rebind_to` works with types having a `rebind_to` typedef (such that the one I introduced in vector_T.h), or on types having one template parameter. Useful links:. - https://stackoverflow.com/a/58789407; - https://rvarago.github.io/2020/10/28/rebinding-template-template-parameter.html. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2570:1755,test,test,1755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2570,2,['test'],['test']
Testability,"When removing point, mass vector was not following the vertex buffer. Which is using swap + pop_back.; This bug could create negative mass during further element deletion. The bug is easy to see with a high mass density:; ![ezgif com-gif-maker(5)](https://user-images.githubusercontent.com/21199245/121010323-917ee880-c795-11eb-9a1e-270c925d845f.gif). After fix:; ![ezgif com-gif-maker(4)](https://user-images.githubusercontent.com/21199245/121010119-4bc22000-c795-11eb-97ca-405644d13cd0.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2164:1033,test,test,1033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2164,2,['test'],['test']
Testability,"When setting a breakpoint with `pdb` in python, Sofa objects' attributes tend to arranged in a strange way. ; For instance, in the screenshot attached, I typed `obj.` + TAB to visualize the different methods/attributes available for `obj` where `obj` is a `Sofa.Node` object, and everything get mixed up in the terminal. Note: I tested with other native python classes and numpy objects, and everything is displayed fine in my terminal in those cases. <img width=""1214"" alt=""Screenshot 2020-05-08 at 12 13 39"" src=""https://user-images.githubusercontent.com/24277749/81396283-686cce00-9125-11ea-936b-34b66e67cfb2.png"">. ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1374:329,test,tested,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1374,1,['test'],['tested']
Testability,"When size mismatche. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4060:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060,2,['test'],['test']
Testability,When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/869:1203,test,test,1203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/869,2,['test'],['test']
Testability,When the Data texcoord is not set using a Mesh file or using a Data link from another component no mechanism is present in VisualModel to compute default UV texcoord leading to incompatible buffer size between vertices and texcoords. This PR add a method to compute default texcoords using a sphere projection. Not perfect but at least create texcoords for volumique mesh with surface mapping. Here are some results examples:. ![liver-tetra2triangle_00000001](https://user-images.githubusercontent.com/21199245/52704903-ed4c5480-2f81-11e9-894d-e6d2f74291eb.png); ![liver-tetra2triangle_00000002](https://user-images.githubusercontent.com/21199245/52704905-ef161800-2f81-11e9-9c5f-4eccabe53085.png). Mesh sphere projection used:; ![liver-tetra2triangle_00000003](https://user-images.githubusercontent.com/21199245/52707910-1f14e980-2f89-11e9-9de5-23d0f899f1d7.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/933:1116,test,test,1116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/933,2,['test'],['test']
Testability,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1824:1345,test,test,1345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824,2,['test'],['test']
Testability,"When the scene `GlobalSystemMatrixExporter.scn` was moved, the CI settings were not moved. Because of that, it causes a timeout on Windows on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2579:689,test,test,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2579,2,['test'],['test']
Testability,When the source path is from the root the path is empty.; This results in returning @ instead of @/; This fix it. This fix issue #375 ; This is a reviewer friendly version of #376 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/377:433,test,test,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/377,2,['test'],['test']
Testability,"When trying to compile in Debug mode:; - (GCC/Clang) a header is missing in RigidType; - (MSVC) same header is missing in two files in SofaEulerianFluid. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2223:693,test,test,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2223,2,['test'],['test']
Testability,"When trying to re-enable SofaCUDA on our Linux CI, I faced some namespace errors due to NG work.; Hope my fixes are good. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2935:661,test,test,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2935,2,['test'],['test']
Testability,"When trying to serialize / desserialize custom binary data structures (non-native / non-scalar Sofa types) as byte arrays from C++ to Python, PyString_FromStirng is called, which stops the input stream at the first \0 it encounters.; PyString_FromStringAndSize retrieves the full stream instead, which is more likely to be what we want here.; @damienmarchal could you tell me what you think of this?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/416:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/416,2,['test'],['test']
Testability,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1749:1118,test,test,1118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749,2,['test'],['test']
Testability,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961,3,['test'],"['test', 'tests']"
Testability,"While assisting people on GH Discussions noticed this issue from OglLabel . Example scene : `examples/Demos/rigidifiedSectionsInBeam.scn` ; Before fix:; ![](https://github.com/sofa-framework/sofa/assets/17544719/d903f7ee-bb9c-4225-aa8e-21c996d8e650). After fix:; ![rigidifiedSectionsInBeam_00000001](https://github.com/sofa-framework/sofa/assets/17544719/879ef541-cf58-4051-a8d2-5ec37f8d09dd). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4142:933,test,test,933,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4142,2,['test'],['test']
Testability,"While doing #3401 , I noticed that; ```; 11512 ms: std::set<sofa::core::objectmodel::Tag>::insert (688 times, avg 16 ms); ```; insert() from Tagset does not really require to be inlined, so I moved the two inline def into the associated cpp; Then:; ```; 3256 ms: std::set<sofa::core::objectmodel::Tag>::insert (209 times, avg 15 ms); ```; not extraordinary but _ca ne mange pas de pain_. Note that TagSet directly inherits from `std::set<Tag>` which is really not recommended... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3403:1018,test,test,1018,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3403,2,['test'],['test']
Testability,"While implementing a binding factory for Data types in SofaPython3, I realised there's no DataTypeName for the BoundingBox data type in Sofa... So here we have it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1086:415,test,test,415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1086,2,['test'],['test']
Testability,"While investigating the error in image/examples/distanceFieldFilter.scn (raised in #3329 for example),; Eigen3 was throwing an assertion in Debug (and surely throwing unexpected errors in Release). https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=ubuntu_clang,CI_PLUGINS=options,CI_TYPE=debug/3967/testReport/SceneTests/applications_plugins_image_examples/MeshToImageMultipleRoi_scn/; for an example of the dump on the CI. The problem was that if one wants to compute matrices ThinU & ThinV for Eigen::SVD, the given matrices need to be set with a dynamic size.; -> https://gitlab.com/libeigen/eigen/-/blob/3.4/Eigen/src/SVD/JacobiSVD.h#L640. So the solution are either:; - compute full V and full U and keep fixed size matrices; - or set the matrices dynamic and resize to 3x3. It appeared that this combination EigenSVD, ThinU/V and fixed-size matrices was used in PlasticMaterial (FEM.HyperElastic), TriangularFEMForceField (FEM.Elastic) and SVDLinearSolver (LinearSolver.Direct). \+ the use of SVD in MeshToImage was a little weird (doing it on matrix filled of Zeros). It appears that the code fillling the matrix did disappear while the code was converted from NewMat to Eigen3, so I restored it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3452:127,assert,assertion,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3452,4,"['assert', 'test']","['assertion', 'test', 'testReport']"
Testability,"While making out-of-tree builds with SofaGLFW, which entrypoint is a a cmakelists with two add_sofa_something(), cmake is throwing this kind of error while reading the second project:; ```cmake; CMake Error at C:/Work/sofa/install/master_fredroy/lib/cmake/Sofa.DefaultType/Sofa.DefaultTypeConfig.cmake:44 (set_target_properties):; Attempt to promote imported target ""Sofa.DefaultType"" to global scope (by; setting IMPORTED_GLOBAL) which is not built in this directory.; ```; which appears (after some headaches) to be linked with the fact that the Sofa.DefaultTypeConfig is read twice and cmake tries to set a flag (imported global) on something which has already the flag, and more generally to do twice the job of aliasing. So this PR adds a test on the four ""legacy"" SofaFramework targets to only make aliases if it was not done before.; ; And for good measure, update the date for the removal of the aliases to v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2566:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2566,3,['test'],['test']
Testability,"While refactoring a bit, I also stumbled upon the `typedef` plugin, which automatically couples every potential test file with every single include file through `<typedef/Sofa_typedef.h>`. Why is there such a plugin? Why not simply have plugins define their own `typedef.h`? . And more importantly why are we aggregating typedefs *across* modules boundaries? This completely defeats modularity which in turn complicates refactoring quite a lot!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-340416172:112,test,test,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-340416172,1,['test'],['test']
Testability,"While starting the lifecycle for v24.06, found some minor fixes of warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4529:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4529,2,['test'],['test']
Testability,While working in interactive mode the scenechecker is executed each time the file is reloaded. This is ; not really convenient.. Thus this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/547:395,test,test,395,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/547,2,['test'],['test']
Testability,Why LightManager test fails ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54,1,['test'],['test']
Testability,"Why back ""to review"" @epernod? ; The failing tests are still here :cry:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988074827:45,test,tests,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988074827,1,['test'],['tests']
Testability,Why this is one not yet merge ? ; :) [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1831#issuecomment-783467227:57,test,tests,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831#issuecomment-783467227,1,['test'],['tests']
Testability,"Widget.h DataWidget.h ModifyObject.h (1915 ms); MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h ModifyObject.h (1504 ms); moc_QDisplayDataWidget.cpp.o QDisplayDataWidget.h DataWidget.h ModifyObject.h (1473 ms); WDoubleLineEdit.cpp.o (1407 ms); DisplayFlagsDataWidget.cpp.o DisplayFlagsDataWidget.h DataWidget.h ModifyObject.h (1379 ms); QRGBAColorPicker.cpp.o QRGBAColorPicker.h DataWidget.h ModifyObject.h (1375 ms); ... 22925 ms: sofa/SofaKernel/modules/SofaCore/src/sofa/core/ObjectFactory.h (included 440 times, avg 52 ms), included via:; initOpenGLVisual.cpp.o (192 ms); PointSetTopologyAlgorithms.cpp.o (191 ms); initValidation.cpp.o (187 ms); DataDisplay.cpp.o (186 ms); DifferenceEngine.cpp.o (178 ms); MeshObjLoader.cpp.o (177 ms); ... 21119 ms: sofa/extlibs/gtest/include/gtest/internal/gtest-port.h (included 176 times, avg 119 ms), included via:; gtest-typed-test.cc.o gtest-typed-test.h (796 ms); gtest-port.cc.o (666 ms); gtest-death-test.cc.o gtest-death-test.h gtest-death-test-internal.h gtest-internal.h (650 ms); gtest-test-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:35318,test,test-internal,35318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['test'],['test-internal']
Testability,Windows CI does not seem to execute bindings unit tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3899:50,test,tests,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3899,1,['test'],['tests']
Testability,"With SofaNG now, the mandatory libs are neither plugin nor the deprecated ""module"" notion,. So while trying to configure SOFA for a minimum build (i.e no plugin) and without the compat layer (so no module), I stumbled in this error which was trying to generate the list of plugins/modules. ; There was no check on the list itself (as the empty modules/plugins could never have been empty before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:936,test,test,936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,2,['test'],['test']
