quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,". TVirtualGLManip. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualGLManip. class TVirtualGLManip. TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGLManip(); static TClass*Class(); virtual TClass*IsA() const; TVirtualGLManip&operator=(const TVirtualGLManip&); virtual Bool_tSelect(const TGLCamera& camera, const TGLRect& rect, const TGLBoundingBox& sceneBox); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TVirtualGLManip(); TVirtualGLManip(const TVirtualGLManip&). Class Charts. Inheritance Chart:. TVirtualGLManip. ←. TGLManip; ←. TGLRotateManip. TGLScaleManip. TGLTransManip. Function documentation; virtual ~TVirtualGLManip(); {}. Bool_t Select(const TGLCamera& camera, const TGLRect& rect, const TGLBoundingBox& sceneBox). » Author: Valery Fine(fine@vxcern.cern.ch) 05/03/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualGLManip.html:121,inherit,inheritance,121,root/html602/TVirtualGLManip.html,https://root.cern,https://root.cern/root/html602/TVirtualGLManip.html,1,['inherit'],['inheritance']
Modifiability,". TVirtualGLPainter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualGLPainter. class TVirtualGLPainter. TVirtualGL. The TVirtualGL class is an abstract base class defining the; OpenGL interface protocol. All interactions with OpenGL should be; done via the global pointer gVirtualGL. If the OpenGL library is; available this pointer is pointing to an instance of the TGLKernel; class which provides the actual interface to OpenGL. Using this; scheme of ABC we can use OpenGL in other parts of the framework; without having to link with the OpenGL library in case we don't; use the classes using OpenGL. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGLPainter(); static TClass*Class(); virtual char*GetPlotInfo(Int_t px, Int_t py); virtual TClass*IsA() const; TVirtualGLPainter&operator=(const TVirtualGLPainter&); virtual voidPaint(); virtual voidPan(Int_t px, Int_t py); virtual Bool_tPlotSelected(Int_t px, Int_t py); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TVirtualGLPainter(); TVirtualGLPainter(const TVirtualGLPainter&). Class Charts. Inheritance Chart:. TVirtualGLPainter. ←. TGLPlotPainter; ←. TGLBoxPainter. TGLH2PolyPainter. TGLIsoPainter. TGLLegoPainter. TGLParametricPlot. TGLSurfacePainter. TGLTF3Painter. TGLTH3CompositionPainter. TGLVoxelPainter.  [more...]. Function documentation; virtual ~TVirtualGLPainter(); {}. void Paint(). void Pan(Int_t px, Int_t py). Bool_t PlotSelected(Int_t px, Int_t py); Used by status bar in a canvas. char * GetPlotInfo(Int_t px, Int_t py). » Author: Valery Fine(fine@vxcern.cern.ch) 05/03/97 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualGLPainter.html:123,inherit,inheritance,123,root/html602/TVirtualGLPainter.html,https://root.cern,https://root.cern/root/html602/TVirtualGLPainter.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualGeoPainter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GEOM; » GEOM; » TVirtualGeoPainter. class TVirtualGeoPainter: public TObject. TVirtualGeoPainter. ABC for geometry painters. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGeoPainter(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddSize3D(Int_t numpoints, Int_t numsegs, Int_t numpolys); virtual TVirtualGeoTrack*AddTrack(Int_t id, Int_t pdgcode, TObject* particle); virtual voidAddTrackPoint(Double_t* point, Double_t* box, Bool_t reset = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBombTranslation(const Double_t* tr, Double_t* bombtr); virtual voidTObject::Browse(TBrowser* b); virtual voidCheckBoundaryErrors(Int_t ntracks = 1000000, Double_t radius = -1.); virtual voidCheckBoundaryReference(Int_t icheck = -1); virtual voidCheckGeometry(Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const; virtual voidCheckGeometryFull(Bool_t checkoverlaps = kTRUE, Bool_t checkcrossings = kTRUE, Int_t nrays = 10000, const Double_t* vertex = __null); virtual voidCheckOverlaps(const TGeoVolume* vol, Double_t ovlp = 0.10000000000000001, Option_t* option = """") const; virtual voidCheckPoint(Double_t x = 0, Double_t y = 0, Double_t z = 0, Option_t* option = """"); virtual voidCheckShape(TGeoShape* shape, Int_t testNo, Int_t nsamples, Option_t* option); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualGeoPainter.html:124,inherit,inheritance,124,root/html602/TVirtualGeoPainter.html,https://root.cern,https://root.cern/root/html602/TVirtualGeoPainter.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualGeoTrack. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GEOM; » GEOM; » TVirtualGeoTrack. class TVirtualGeoTrack: public TObject, public TGeoAtt, public TAttLine, public TAttMarker. TVirtualGeoTrack - Base class for user-defined tracks attached to a geometry.; Tracks are 3D objects made of points and they store a; pointer to a TParticle. The geometry manager holds a list; of all tracks that will be deleted on destruction of; gGeoManager. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGeoTrack(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tAddDaughter(TVirtualGeoTrack* other); virtual TVirtualGeoTrack*AddDaughter(Int_t id, Int_t pdgcode, TObject* particle = 0); virtual voidAddPoint(Double_t x, Double_t y, Double_t z, Double_t t); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualGeoTrack.html:122,inherit,inheritance,122,root/html602/TVirtualGeoTrack.html,https://root.cern,https://root.cern/root/html602/TVirtualGeoTrack.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualGraphPainter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TVirtualGraphPainter. class TVirtualGraphPainter: public TObject. TVirtualGraphPainter is an abstract interface to a histogram painter. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualGraphPainter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual Int_tDistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawPanelHelper(TGraph* theGraph); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::Fin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualGraphPainter.html:126,inherit,inheritance,126,root/html602/TVirtualGraphPainter.html,https://root.cern,https://root.cern/root/html602/TVirtualGraphPainter.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualHistPainter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TVirtualHistPainter. class TVirtualHistPainter: public TObject. TVirtualHistPainter is an abstract interface to a histogram painter. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualHistPainter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawPanel(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TList*GetContourList(Double_t contour) const; virtual Option_t*TObject::GetDrawOption() const; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualHistPainter.html:125,inherit,inheritance,125,root/html602/TVirtualHistPainter.html,https://root.cern,https://root.cern/root/html602/TVirtualHistPainter.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualIndex. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TVirtualIndex. class TVirtualIndex: public TNamed. Abstract interface for Tree Index. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualIndex(); voidTObject::AbstractMethod(const char* method) const; virtual voidAppend(const TVirtualIndex*, Bool_t delaySort = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualIndex.html:119,inherit,inheritance,119,root/html602/TVirtualIndex.html,https://root.cern,https://root.cern/root/html602/TVirtualIndex.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualIsAProxy. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TVirtualIsAProxy. class TVirtualIsAProxy. TClass. Virtual IsAProxy base class. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualIsAProxy(); virtual TClass*operator()(const void* obj); TVirtualIsAProxy&operator=(const TVirtualIsAProxy&); virtual voidSetClass(TClass* cl); TVirtualIsAProxy(); TVirtualIsAProxy(const TVirtualIsAProxy&). Class Charts. Inheritance Chart:. TVirtualIsAProxy. ←. TIsAProxy. Function documentation; virtual ~TVirtualIsAProxy(); { }. void SetClass(TClass* cl). TClass* operator()(const void* obj). » Author: Markus Frank 20/05/2005 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualIsAProxy.html:111,inherit,inheritance,111,root/html602/TVirtualIsAProxy.html,https://root.cern,https://root.cern/root/html602/TVirtualIsAProxy.html,1,['inherit'],['inheritance']
Modifiability,". TVirtualMC. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MONTECARLO; » VMC; » TVirtualMC. class TVirtualMC: public TNamed. Virtual MC provides a virtual interface to Monte Carlo.; It enables the user to build a virtual Monte Carlo application; independent of any actual underlying Monte Carlo implementation itself. A user will have to implement a class derived from the abstract; Monte Carlo application class, and provide functions like; ConstructGeometry(), BeginEvent(), FinishEvent(), ... .; The concrete Monte Carlo (Geant3, Geant4) is selected at run time -; when processing a ROOT macro where the concrete Monte Carlo is instantiated. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMC(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidBuildPhysics(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tCurrentBoundaryNormal(Double_t& x, Double_t& y, Double_t& z) const; virtual Int_tCurrentEvent() const; virtual Int_tCurrentMaterial(Float_t& a, Float_t& z, Float_t& dens, Float_t& radl, Float_t& absl) const; virtual Int_tCurrentMedium() const; virtual Int_tCurrentVolID(Int_t& copyNo) const; virtual const char*CurrentVolName() const; virtual Int_tCurrentVolOffID(Int_t off, Int_t& copyNo) const; virtual const char*CurrentVolOffName(Int_t off) const; virtual const char*CurrentVolPath(); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMC.html:116,inherit,inheritance,116,root/html602/TVirtualMC.html,https://root.cern,https://root.cern/root/html602/TVirtualMC.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMCApplication. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MONTECARLO; » VMC; » TVirtualMCApplication. class TVirtualMCApplication: public TNamed. Interface to a user Monte Carlo application. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMCApplication(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddIons(); virtual voidAddParticles(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBeginEvent(); virtual voidBeginPrimary(); virtual voidBeginWorkerRun() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TVirtualMCApplication*CloneForWorker() const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidConstructGeometry(); virtual voidConstructOpGeometry(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCApplication.html:127,inherit,inheritance,127,root/html602/TVirtualMCApplication.html,https://root.cern,https://root.cern/root/html602/TVirtualMCApplication.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMCDecayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MONTECARLO; » EG; » TVirtualMCDecayer. class TVirtualMCDecayer: public TObject. Abstract base class for particle decays.; Clients are the transport code and the primary particle generators; This is an abstract base class !. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMCDecayer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDecay(Int_t idpart, TLorentzVector* p); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCDecayer.html:123,inherit,inheritance,123,root/html602/TVirtualMCDecayer.html,https://root.cern,https://root.cern/root/html602/TVirtualMCDecayer.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMCGeometry. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MONTECARLO; » VMC; » TVirtualMCGeometry. class TVirtualMCGeometry: public TNamed. Virtual MCGeometry provides a virtual interface to Monte Carlo; geometry construction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMCGeometry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCGeometry.html:124,inherit,inheritance,124,root/html602/TVirtualMCGeometry.html,https://root.cern,https://root.cern/root/html602/TVirtualMCGeometry.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMCStack. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MONTECARLO; » VMC; » TVirtualMCStack. class TVirtualMCStack: public TObject. Interface to a user defined particles stack. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMCStack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetCurrentParentTrackNumber() const; virtual TParticle*GetCurrentTrack() const; virtual Int_tGetCurrentTrackNumber() const; virtual Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCStack.html:121,inherit,inheritance,121,root/html602/TVirtualMCStack.html,https://root.cern,https://root.cern/root/html602/TVirtualMCStack.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMagField. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GEOM; » GEOM; » TVirtualMagField. class TVirtualMagField: public TNamed. TVirtualMagField - ABC for magnetic field. Derived classes are encouraged to; use the TVirtualMagField named constructor and must implement the method:; Field(const Double_t *x, Double_t *B). A field object can be made global via:; TGlobalMagField::Instance()->SetField(field) [1]; A field which is made global is owned by the field manager. The used is not; allowed to delete it directly anymore (otherwise a Fatal() is issued). Global; field can be deleted by calling [1] with a different argument (which can be; NULL). Otherwise the global field is deleted together with the field manager. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMagField(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMagField.html:122,inherit,inheritance,122,root/html602/TVirtualMagField.html,https://root.cern,https://root.cern/root/html602/TVirtualMagField.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMonitoringReader. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualMonitoringReader. class TVirtualMonitoringReader: public TNamed. TVirtualMonitoring. Provides the interface for externel Monitoring. Function Members (Methods); public:. virtual~TVirtualMonitoringReader(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteMap(TMap*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidDumpResult(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMonitoringReader.html:130,inherit,inheritance,130,root/html602/TVirtualMonitoringReader.html,https://root.cern,https://root.cern/root/html602/TVirtualMonitoringReader.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMonitoringWriter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualMonitoringWriter. class TVirtualMonitoringWriter: public TNamed. TVirtualMonitoring. Provides the interface for externel Monitoring. Function Members (Methods); public:. virtual~TVirtualMonitoringWriter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMonitoringWriter.html:130,inherit,inheritance,130,root/html602/TVirtualMonitoringWriter.html,https://root.cern,https://root.cern/root/html602/TVirtualMonitoringWriter.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualMutex. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualMutex. class TVirtualMutex: public TObject. TVirtualMutex. This class implements a mutex interface. The actual work is done via; TMutex which is available as soon as the thread library is loaded. and. TLockGuard. This class provides mutex resource management in a guaranteed and; exception safe way. Use like this:; {; TLockGuard guard(mutex);; ... // do something; }; when guard goes out of scope the mutex is unlocked in the TLockGuard; destructor. The exception mechanism takes care of calling the dtors; of local objects so it is exception safe. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualMutex(); voidTObject::AbstractMethod(const char* method) const; Int_tAcquire(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual Int_tCleanUp(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMutex.html:119,inherit,inheritance,119,root/html602/TVirtualMutex.html,https://root.cern,https://root.cern/root/html602/TVirtualMutex.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualObject. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » IO; » IO; » TVirtualObject. class TVirtualObject. TVirtualObject. Wrapper around an object and giving indirect access to its content; even if the object is not of a class in the Cint/Reflex dictionary. Function Members (Methods); public:. ~TVirtualObject(); TClass*GetClass() const; void*GetObject() const; TVirtualObject(TClass* cl). private:. TVirtualObject&operator=(const TVirtualObject&); TVirtualObject(const TVirtualObject&). Data Members; public:. TClassReffClass; void*fObject. Class Charts. Inheritance Chart:. TVirtualObject. Function documentation; TVirtualObject(const TVirtualObject& ). TVirtualObject & operator=(const TVirtualObject& ). TVirtualObject(TClass* cl); { }. ~TVirtualObject(); { if (fClass) fClass->Destructor(fObject); }. TClass * GetClass() const; { return fClass; }. void * GetObject() const; { return fObject; }. » Author: Philippe Canal July, 2008 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualObject.html:109,inherit,inheritance,109,root/html602/TVirtualObject.html,https://root.cern,https://root.cern/root/html602/TVirtualObject.html,1,['inherit'],['inheritance']
Modifiability,". TVirtualPS. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualPS. class TVirtualPS: public TNamed, public TAttLine, public TAttFill, public TAttMarker, public TAttText. TVirtualPS is an abstract interface to a Postscript, PDF and SVG drivers. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualPS(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidCellArrayBegin(Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2); virtual voidCellArrayEnd(); virtual voidCellArrayFill(Int_t r, Int_t g, Int_t b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidClose(Option_t* opt = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidDrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); virtual voidDrawPolyMarker(Int_t n, Float_t* x, Float_t* y); virtual voidDrawPolyMarker(Int_t n, Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPS.html:116,inherit,inheritance,116,root/html602/TVirtualPS.html,https://root.cern,https://root.cern/root/html602/TVirtualPS.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualPacketizer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFPLAYER; » TVirtualPacketizer. class TVirtualPacketizer: public TObject. TVirtualPacketizer. The packetizer is a load balancing object created for each query.; It generates packets to be processed on PROOF worker servers.; A packet is an event range (begin entry and number of entries) or; object range (first object and number of objects) in a TTree; (entries) or a directory (objects) in a file.; Packets are generated taking into account the performance of the; remote machine, the time it took to process a previous packet on; the remote machine, the locality of the database files, etc. TVirtualPacketizer includes common parts of PROOF packetizers.; Look in subclasses for details.; The default packetizer is TPacketizerAdaptive.; To use an alternative one, for instance - the TPacketizer, call:; proof->SetParameter(""PROOF_Packetizer"", ""TPacketizer"");. Function Members (Methods); public:. virtual~TVirtualPacketizer(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tAddProcessed(TSlave*, TProofProgressStatus*, Double_t, TList**); virtual Int_tAddWorkers(TList* workers); virtual voidTObject::AppendPad(Option_t* option = """"); virtual Int_tAssignWork(TDSet*, Long64_t, Long64_t); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPacketizer.html:124,inherit,inheritance,124,root/html602/TVirtualPacketizer.html,https://root.cern,https://root.cern/root/html602/TVirtualPacketizer.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualPad. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualPad. class TVirtualPad: public TObject, public TAttLine, public TAttFill, public TAttPad, public TQObject. TVirtualPad is an abstract base class for the Pad and Canvas classes. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualPad(); virtual voidAbsCoordinates(Bool_t set); virtual Double_tAbsPixeltoX(Int_t px); virtual Double_tAbsPixeltoY(Int_t py); voidTObject::AbstractMethod(const char* method) const; virtual voidAddExec(const char* name, const char* command); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual TLegend*BuildLegend(Double_t x1 = 0.5, Double_t y1 = 0.67000000000000004, Double_t x2 = 0.88, Double_t y2 = 0.88, const char* title = """"); virtual TVirtualPad*cd(Int_t subpadnumber = 0); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidClose(Option_t* option = """"); virtual voidCloseToolTip(TObject* tip); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPad.html:117,inherit,inheritance,117,root/html602/TVirtualPad.html,https://root.cern,https://root.cern/root/html602/TVirtualPad.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualPadEditor. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualPadEditor. class TVirtualPadEditor. TVirtualPadEditor. Abstract base class used by ROOT graphics editor. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualPadEditor(); virtual voidBuild(); static TClass*Class(); virtual voidDeleteEditors(); virtual voidDrawLine(Double_t, Double_t, Double_t, Double_t); virtual voidDrawLineNDC(Double_t, Double_t, Double_t, Double_t); virtual voidDrawText(Double_t, Double_t, const char*); virtual voidDrawTextNDC(Double_t, Double_t, const char*); virtual voidFillAttributes(Int_t, Int_t); virtual TCanvas*GetCanvas() const; static const char*GetEditorName(); static TVirtualPadEditor*GetPadEditor(Bool_t load = kTRUE); virtual voidHide(); static voidHideEditor(); virtual TClass*IsA() const; virtual Bool_tIsGlobal() const; virtual voidLineAttributes(Int_t, Int_t, Int_t); static TVirtualPadEditor*LoadEditor(); virtual voidMarkerAttributes(Int_t, Int_t, Float_t); TVirtualPadEditor&operator=(const TVirtualPadEditor&); virtual voidSetGlobal(Bool_t); static voidSetPadEditorName(const char* name); virtual voidShow(); static voidShowEditor(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static voidTerminate(); virtual voidTextAttributes(Int_t, Float_t, Int_t, Int_t, Float_t); TVirtualPadEditor(); TVirtualPadEditor(const TVirtualPadEditor&); static voidUpdateFillAttributes(Int_t col, Int_t sty); static voidUpdateLineAttributes(Int_t col, Int_t sty, Int_t width); static voidUpdateMarkerAttributes(Int_t col, Int_t sty, Float_t msiz); static v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPadEditor.html:123,inherit,inheritance,123,root/html602/TVirtualPadEditor.html,https://root.cern,https://root.cern/root/html602/TVirtualPadEditor.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualPadPainter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualPadPainter. class TVirtualPadPainter. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualPadPainter(); static TClass*Class(); virtual voidClearDrawable(); virtual voidCopyDrawable(Int_t device, Int_t px, Int_t py); virtual Int_tCreateDrawable(UInt_t w, UInt_t h); virtual voidDestroyDrawable(); virtual voidDrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2, TVirtualPadPainter::EBoxMode mode); virtual voidDrawFillArea(Int_t n, const Double_t* x, const Double_t* y); virtual voidDrawFillArea(Int_t n, const Float_t* x, const Float_t* y); virtual voidDrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidDrawLineNDC(Double_t u1, Double_t v1, Double_t u2, Double_t v2); virtual voidDrawPixels(const unsigned char* pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending); virtual voidDrawPolyLine(Int_t n, const Double_t* x, const Double_t* y); virtual voidDrawPolyLine(Int_t n, const Float_t* x, const Float_t* y); virtual voidDrawPolyLineNDC(Int_t n, const Double_t* u, const Double_t* v); virtual voidDrawPolyMarker(Int_t n, const Double_t* x, const Double_t* y); virtual voidDrawPolyMarker(Int_t n, const Float_t* x, const Float_t* y); virtual voidDrawText(Double_t x, Double_t y, const char* text, TVirtualPadPainter::ETextMode mode); virtual voidDrawText(Double_t x, Double_t y, const wchar_t* text, TVirtualPadPainter::ETextMode mode); virtual voidDrawTextNDC(Double_t u, Double_t v, const char* text, TVirtualPadPainter::ETextMode mode); virtual voidDrawTextNDC(Double_t u, Double_t v, const wchar_t* text, TVirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPadPainter.html:124,inherit,inheritance,124,root/html602/TVirtualPadPainter.html,https://root.cern,https://root.cern/root/html602/TVirtualPadPainter.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualPerfStats. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualPerfStats. class TVirtualPerfStats: public TObject. TVirtualPerfStats. Provides the interface for the PROOF internal performance measurment; and event tracing. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualPerfStats(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TVirtualPerfStats*&CurrentPerfStats(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static const char*EventType(TVirtualPerfStats::EEventType type); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFileEvent(const char* slave, const char* slavename, const char* nodename, const char* f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPerfStats.html:123,inherit,inheritance,123,root/html602/TVirtualPerfStats.html,https://root.cern,https://root.cern/root/html602/TVirtualPerfStats.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualProofPlayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOF; » TVirtualProofPlayer. class TVirtualProofPlayer: public TObject, public TQObject. TVirtualProofPlayer. Abstract interface for the PROOF player.; See the concrete implementations under 'proofplayer' for details. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualProofPlayer(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddEventsProcessed(Long64_t ev); virtual voidAddInput(TObject* inp); virtual voidAddOutput(TList* out); virtual Int_tAddOutputObject(TObject* obj); virtual voidAddQueryResult(TQueryResult* q); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidClearInput(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualProofPlayer.html:125,inherit,inheritance,125,root/html602/TVirtualProofPlayer.html,https://root.cern,https://root.cern/root/html602/TVirtualProofPlayer.html,1,['inherit'],['inheritance']
Modifiability,". TVirtualStreamerInfo. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » META; » TVirtualStreamerInfo. class TVirtualStreamerInfo: public TNamed. TVirtualStreamerInfo Abstract Interface class. Abstract Interface describing Streamer information for one class. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualStreamerInfo(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidBuild(); virtual voidBuildCheck(TFile* file = 0); virtual voidBuildEmulated(TFile* file); virtual Bool_tBuildFor(const TClass* cl); virtual voidBuildOld(); virtual voidCallShowMembers(const void* obj, TMemberInspector& insp, Bool_t isTransient) const; static Bool_tCanDelete(); static Bool_tCanOptimize(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t*); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Bool_tCompareContent(TClass* cl, TVirtualStreamerInfo* info, Bool_t warn, Bool_t complete, TFile* file); virtual voidCompile(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteArray(void* p, Bool_t dtorOnly = kFALSE); virtual voidDestructor(void* p, Bool_t dtorOnly = kFALSE); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualStreamerInfo.html:126,inherit,inheritance,126,root/html602/TVirtualStreamerInfo.html,https://root.cern,https://root.cern/root/html602/TVirtualStreamerInfo.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualTableInterface. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualTableInterface. class TVirtualTableInterface. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualTableInterface(); static TClass*Class(); virtual const char*GetColumnHeader(UInt_t column); virtual UInt_tGetNColumns(); virtual UInt_tGetNRows(); virtual const char*GetRowHeader(UInt_t row); virtual Double_tGetValue(UInt_t row, UInt_t column); virtual const char*GetValueAsString(UInt_t row, UInt_t column); virtual TClass*IsA() const; TVirtualTableInterface&operator=(const TVirtualTableInterface&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TVirtualTableInterface(); TVirtualTableInterface(const TVirtualTableInterface&). Class Charts. Inheritance Chart:. TVirtualTableInterface. ←. TGSimpleTableInterface. TTreeTableInterface. Function documentation; TVirtualTableInterface(); {;}. virtual ~TVirtualTableInterface(); {;}. Double_t GetValue(UInt_t row, UInt_t column). const char * GetValueAsString(UInt_t row, UInt_t column). const char * GetRowHeader(UInt_t row). const char * GetColumnHeader(UInt_t column). UInt_t GetNRows(). UInt_t GetNColumns(). » Author: Roel Aaij 21/07/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 30 15:32:41 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualTableInterface.html:117,inherit,inheritance,117,root/html602/TVirtualTableInterface.html,https://root.cern,https://root.cern/root/html602/TVirtualTableInterface.html,1,['inherit'],['inheritance']
Modifiability,". TVirtualTreePlayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TVirtualTreePlayer. class TVirtualTreePlayer: public TObject. TVirtualTreePlayer. Abstract base class defining the interface for the plugins that; implement Draw, Scan, Process, MakeProxy, etc. for a TTree object.; See the individual documentations in TTree. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualTreePlayer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual TVirtualIndex*BuildIndex(const TTree* T, const char* majorname, const char* minorname); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TTree*CopyTree(const char* selection, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Long64_tDrawScript(const char* wrapperPrefix, const char* macrofilename, const char* cutfilename, Option_t* option, Long64_t nentries, Long64_t firstentry); virtual Long64_tDrawSelect(const char* varexp, const char* selection, Option_t* option, Long64_t nentries, Long64_t firstentry); virtual voidTObject::Dump() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualTreePlayer.html:124,inherit,inheritance,124,root/html602/TVirtualTreePlayer.html,https://root.cern,https://root.cern/root/html602/TVirtualTreePlayer.html,4,"['inherit', 'plugin']","['inheritance', 'plugins']"
Modifiability,". TVirtualTreePlayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TREE; » TREE; » TVirtualTreePlayer. class TVirtualTreePlayer: public TObject. TVirtualTreePlayer. Abstract base class defining the interface for the plugins that; implement Draw, Scan, Process, MakeProxy, etc. for a TTree object.; See the individual documentations in TTree. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TVirtualTreePlayer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual TVirtualIndex*BuildIndex(const TTree* T, const char* majorname, const char* minorname); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TTree*CopyTree(const char* selection, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Long64_tDrawScript(const char* wrapperPrefix, const char* macrofilename, const char* cutfilename, Option_t* option, Long64_t nentries, Long64_t firstentry); virtual Long64_tDrawSelect(const char* varexp, const char* selection, Option_t* option, Long64_t nentries, Long64_t firstentry); virtual voidTObject::Dump() constMENU ; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualTreePlayer.html:386,plugin,plugins,386,root/html528/TVirtualTreePlayer.html,https://root.cern,https://root.cern/root/html528/TVirtualTreePlayer.html,4,['plugin'],['plugins']
Modifiability,". TVirtualViewer3D. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualViewer3D. class TVirtualViewer3D: public TObject. TVirtualViewer3D. Abstract 3D shapes viewer. The concrete implementations are:. TViewerX3D : X3d viewer; TGLViewer : OpenGL viewer. ; 3D Viewer Infrastructure Overview; The 3D Viewer infrastructure consists of:. TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently.; Publishing to a viewer consists of the following steps:. Create / obtain viewer handle; Begin scene on viewer; Fill mandatory parts of TBuffer3D describing object; Add to viewer; Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5; as required; End scene on viewer. Creating / Obtaining Viewer; Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned.; Begi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualViewer3D.html:122,inherit,inheritance,122,root/html602/TVirtualViewer3D.html,https://root.cern,https://root.cern/root/html602/TVirtualViewer3D.html,2,['inherit'],['inheritance']
Modifiability,". TVirtualX. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » TVirtualX. class TVirtualX: public TNamed, public TAttLine, public TAttFill, public TAttText, public TAttMarker. TVirtualX. Semi-Abstract base class defining a generic interface to the; underlying, low level, graphics system (X11, Win32, MacOS).; An instance of TVirtualX itself defines a batch interface to the; graphics system. Function Members (Methods); public:. virtual~TVirtualX(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tAddPixmap(ULong_t pixid, UInt_t w, UInt_t h); virtual Int_tAddWindow(ULong_t qwid, UInt_t w, UInt_t h); virtual Bool_tAllocColor(Colormap_t cmap, ColorStruct_t& color); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBeginModalSessionFor(Window_t window); virtual voidBell(Int_t percent); virtual voidTObject::Browse(TBrowser* b); virtual voidChangeActivePointerGrab(Window_t, UInt_t, Cursor_t); virtual voidChangeGC(GContext_t gc, GCValues_t* gval); virtual voidChangeProperties(Window_t id, Atom_t property, Atom_t type, Int_t format, UChar_t* data, Int_t len); virtual voidChangeProperty(Window_t id, Atom_t property, Atom_t type, UChar_t* data, Int_t len); virtual voidChangeWindowAttributes(Window_t id, SetWindowAttributes_t* attr); virtual Bool_tCheckEvent(Window_t id, EGEventType type, Event_t& ev); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidClearArea(Window_t id, Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidClearWindow(); virtual voidClearWindow(Window_t id); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidCloseDisplay(); virtual voidClosePixmap(); virtual voidCloseWindow(); virtual Int_tTNamed::Compare(const TObject* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualX.html:115,inherit,inheritance,115,root/html602/TVirtualX.html,https://root.cern,https://root.cern/root/html602/TVirtualX.html,2,['inherit'],['inheritance']
Modifiability,". TVolume. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MISC; » TABLE; » TVolume. class TVolume: public TObjectSet, public TAttLine, public TAttFill, public TAtt3D. T V O L U M E description *-; *-* ==========================; -; *-* A TVolume object is used to build the geometry hierarchy.; *-* Since TVolume is derived from TDataSet class it may contain other volumes.; -; *-* A geometry volume has attributes:; *-* - name and title; *-* - pointer to the referenced shape (see TShape).; *-* - list of TVolumePosition object defining the position of the nested volumes; *-* with respect to the mother node.; -; -; *-* A volume can be drawn.; -; *. Function Members (Methods); public:. virtual~TVolume(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TShape* shape, Bool_t IsMaster = kFALSE); virtual TVolumePosition*Add(TVolume* node, Double_t x = 0, Double_t y = 0, Double_t z = 0, TRotMatrix* matrix = 0, UInt_t id = 0, Option_t* option = """"); virtual TVolumePosition*Add(TVolume* node, Double_t x, Double_t y, Double_t z, const char* matrixname, UInt_t id = 0, Option_t* option = """"); virtual voidTDataSet::AddAt(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual TObject*TObjectSet::AddObject(TObject* obj, Bool_t makeOwner = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); TDataSet*TDataSet::At(Int_t idx) const; virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TDataSet::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVolume.html:113,inherit,inheritance,113,root/html602/TVolume.html,https://root.cern,https://root.cern/root/html602/TVolume.html,2,['inherit'],['inheritance']
Modifiability,". TVolumePosition. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MISC; » TABLE; » TVolumePosition. class TVolumePosition: public TObject. *-*-*-*-*-*-*-*-* S T N O D E P O S I T I O N description *-*-*-*-*-*-*-*-*-; *-* ===========================; -; *-* A TVolumePosition object is used to build the geometry hierarchy (see TGeometry).; *-* A node may contain other nodes.; -; *-* A geometry node has attributes:; *-* - name and title; *-* - pointer to the referenced shape (see TShape).; *-* - x,y,z offset with respect to the mother node.; *-* - pointer to the rotation matrix (see TRotMatrix).; -; *-* A node can be drawn.; -; *. Function Members (Methods); public:. virtual~TVolumePosition(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual Double_t*Cormx2Local(const Double_t* masterCorr, Double_t* localCorr) const; virtual Float_t*Cormx2Local(const Float_t* masterCorr, Float_t* localCorr) const; virtual Double_t*Cormx2Master(const Double_t* localCorr, Double_t* masterCorr) const; virtual Float_t*Cormx2Master(const Float_t* localCorr, Float_t* masterCorr) const; virtual TDataSet*DefineSet(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* depth = ""3"")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVolumePosition.html:121,inherit,inheritance,121,root/html602/TVolumePosition.html,https://root.cern,https://root.cern/root/html602/TVolumePosition.html,2,['inherit'],['inheritance']
Modifiability,". TVolumeView. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MISC; » TABLE; » TVolumeView. class TVolumeView: public TObjectSet, public TAtt3D. TVolumeView. TVolumeView class is a special kind of TDataSet with one extra; pointer to wrap any TObject onto TDataSet object. BE CAREFUL !!!; One has to use it carefully no control over that extra object; is performed. This means: the object m_Obj data-member points to can; be destroyed with no this kbject notifying.; There is no tool /protection to check whether m_Obj is till alive.; It is one's code responsilitiy. Function Members (Methods); public:. virtual~TVolumeView(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TDataSet* dataset); virtual voidAdd(TVolumeView* node); virtual voidAdd(TShape* shape, Bool_t IsMaster = kFALSE); virtual voidTDataSet::AddAt(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual TVolume*AddNode(TVolume* node); virtual TObject*TObjectSet::AddObject(TObject* obj, Bool_t makeOwner = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); TDataSet*TDataSet::At(Int_t idx) const; virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TDataSet::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObjectSet::Delete(Option_t* opt = """"); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tTObjectSet::DoOwner(Bool_t done = kTRUE); virtual voidDraw(Option_t* depth = ""3"")MENU ; virtual voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVolumeView.html:117,inherit,inheritance,117,root/html602/TVolumeView.html,https://root.cern,https://root.cern/root/html602/TVolumeView.html,2,['inherit'],['inheritance']
Modifiability,". TVolumeViewIter. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MISC; » TABLE; » TVolumeViewIter. class TVolumeViewIter: public TDataSetIter. TVolumeViewIter is a special class-iterator to; iterate over GEANT geometry dataset TVolumeView.; Class should provide a ""standard"" well-known; ""TDataSetIter"" interface to navigate and access; the geometry information supplied by Tgeant_Maker; as the TVolume object. Apart of the the base; TDataSetIter this special class may supply; not only pointer to the selected dataset but some; ""position"" information (like translate vectors and; rotation matrice). Function Members (Methods); public:. virtual~TVolumeViewIter(); voidTObject::AbstractMethod(const char* method) const; virtual TDataSet*TDataSetIter::Add(TDataSet* set); virtual TDataSet*TDataSetIter::Add(TDataSet* set, const Char_t* path); virtual TDataSet*TDataSetIter::Add(TDataSet* set, TDataSet* dataset); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual TDataSet*TDataSetIter::Cd(const Char_t* dirname); virtual TDataSet*TDataSetIter::Cd(TDataSet* ds); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TDataSet*TDataSetIter::Cwd() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTDataSetIter::Df() const; virtual TDataSet*TDataSetIter::Dir(Char_t* dirname); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVolumeViewIter.html:121,inherit,inheritance,121,root/html602/TVolumeViewIter.html,https://root.cern,https://root.cern/root/html602/TVolumeViewIter.html,2,['inherit'],['inheritance']
Modifiability,". TWbox. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF2D; » GRAF; » TWbox. class TWbox: public TBox. a TWbox is a TBox with a bordersize and a bordermode. /*. */. Function Members (Methods); public:. virtual~TWbox(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& wbox) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTBox::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawWbox(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color = 33, Short_t bordersize = 5, Short_t bordermode = -1); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TWbox.html:111,inherit,inheritance,111,root/html602/TWbox.html,https://root.cern,https://root.cern/root/html602/TWbox.html,2,['inherit'],['inheritance']
Modifiability,". TWebFile. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » NET; » NET; » TWebFile. class TWebFile: public TFile. TWebFile. A TWebFile is like a normal TFile except that it reads its data; via a standard apache web server. A TWebFile is a read-only file. Function Members (Methods); public:. virtual~TWebFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDirectoryFile::Add(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidTDirectoryFile::Append(TObject* obj, Bool_t replace = kFALSE); virtual Int_tTDirectoryFile::AppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); static TFileOpenHandle*TFile::AsyncOpen(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); virtual voidTDirectoryFile::Browse(TBrowser* b); virtual voidTDirectoryFile::Build(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tTDirectoryFile::cd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*TDirectoryFile::CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidTFile::Close(Option_t* option = """")MENU ; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTFile::Copy(TObject&) const; virtual Bool_tTFile::Cp(const char* dst, Bool_t progressbar = kTRUE, UInt_t buffersize = 1000000); static Bool_tTFile::Cp(const char* src, const char* dst, Bool_t progressbar = kTRUE, UInt_t buffersize = 1000000); virtual TKey*TFile::CreateKey(TDirectory* mother, const TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TWebFile.html:114,inherit,inheritance,114,root/html602/TWebFile.html,https://root.cern,https://root.cern/root/html602/TWebFile.html,2,['inherit'],['inheritance']
Modifiability,". TWebSystem. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » NET; » NET; » TWebSystem. class TWebSystem: public TSystem. TWebFile. A TWebFile is like a normal TFile except that it reads its data; via a standard apache web server. A TWebFile is a read-only file. Function Members (Methods); public:. virtual~TWebSystem(); virtual voidTSystem::Abort(int code = 0); voidTObject::AbstractMethod(const char* method) const; virtual intTSystem::AcceptConnection(int sock); virtual Bool_tAccessPathName(const char* path, EAccessMode mode); virtual voidTSystem::AddDynamicPath(const char* pathname); virtual voidTSystem::AddFileHandler(TFileHandler* fh); virtual voidTSystem::AddIncludePath(const char* includePath); virtual voidTSystem::AddLinkedLibs(const char* linkedLib); virtual voidTSystem::AddSignalHandler(TSignalHandler* sh); virtual voidTSystem::AddStdExceptionHandler(TStdExceptionHandler* eh); virtual voidTSystem::AddTimer(TTimer* t); virtual intTSystem::AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize = -1); virtual intTSystem::AnnounceUdpService(int port, int backlog); virtual intTSystem::AnnounceUnixService(int port, int backlog); virtual intTSystem::AnnounceUnixService(const char* sockpath, int backlog); virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TSystem::BaseName(const char* pathname); voidTSystem::Beep(Int_t freq = -1, Int_t duration = -1, Bool_t setDefault = kFALSE); virtual voidTObject::Browse(TBrowser* b); Bool_tTSystem::cd(const char* path); virtual Bool_tTSystem::ChangeDirectory(const char* path); virtual intTSystem::Chmod(const char* file, UInt_t mode); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTSystem::CleanCompiledMacros(); virtual voidTNamed::Clear(Option_t* option = """"); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TWebSystem.html:116,inherit,inheritance,116,root/html602/TWebSystem.html,https://root.cern,https://root.cern/root/html602/TWebSystem.html,1,['inherit'],['inheritance']
Modifiability,". TX11GLManager. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » GL; » TX11GLManager. class TX11GLManager: public TGLManager. TX11GLManager. The TX11GLManager is X11 implementation of TGLManager. Function Members (Methods); public:. virtual~TX11GLManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tAttachOffScreenDevice(Int_t ctxInd, Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tCreateGLContext(Int_t winInd); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteGLContext(Int_t devInd); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExtractViewport(Int_t devInd, Int_t* vp); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TX11GLManager.html:119,inherit,inheritance,119,root/html602/TX11GLManager.html,https://root.cern,https://root.cern/root/html602/TX11GLManager.html,2,['inherit'],['inheritance']
Modifiability,". TXHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXHandler. class TXHandler. TXHandler. Handler of asynchronous events for xproofd sockets.; Classes needing this should inherit from this and overload the; relevant methods. Function Members (Methods); public:. virtual~TXHandler(); static TClass*Class(); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual TClass*IsA() const; TXHandler&operator=(const TXHandler&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TXHandler(); TXHandler(const TXHandler&). Class Charts. Inheritance Chart:. TXHandler. ←. TXProofMgr. TXProofServ. TXSlave. Function documentation; Bool_t HandleInput(const void* in = 0); Handler of asynchronous input events. Bool_t HandleError(const void* in = 0); Handler of asynchronous error events. TXHandler(); { }. virtual ~TXHandler(); { }. » Author: G. Ganis Mar 2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id$ » Last generated: 2015-06-02 16:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TXHandler.html:115,inherit,inheritance,115,root/html604/TXHandler.html,https://root.cern,https://root.cern/root/html604/TXHandler.html,2,['inherit'],"['inherit', 'inheritance']"
Modifiability,". TXHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXHandler. class TXHandler. TXHandler. Handler of asynchronous events for xproofd sockets.; Classes needing this should inherit from this and overload the; relevant methods. Function Members (Methods); public:. virtual~TXHandler(); static TClass*Class(); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual TClass*IsA() const; TXHandler&operator=(const TXHandler&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TXHandler(); TXHandler(const TXHandler&). Class Charts. Inheritance Chart:. TXHandler. ←. TXProofMgr. TXProofServ. TXSlave. Function documentation; Bool_t HandleInput(const void* in = 0); Handler of asynchronous input events. Bool_t HandleError(const void* in = 0); Handler of asynchronous error events. TXHandler(); { }. virtual ~TXHandler(); { }. » Author: G. Ganis Mar 2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXHandler.html:115,inherit,inheritance,115,root/html602/TXHandler.html,https://root.cern,https://root.cern/root/html602/TXHandler.html,2,['inherit'],"['inherit', 'inheritance']"
Modifiability,". TXHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXHandler. class TXHandler. TXHandler. Handler of asynchronous events for xproofd sockets.; Classes needing this should inherit from this and overload the; relevant methods. Function Members (Methods); public:. TXHandler(); TXHandler(const TXHandler&); virtual~TXHandler(); static TClass*Class(); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual TClass*IsA() const; TXHandler&operator=(const TXHandler&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleInput(const void* in = 0); Handler of asynchronous input events. Bool_t HandleError(const void* in = 0); Handler of asynchronous error events. TXHandler(); { }. virtual ~TXHandler(); { }. » Author: G. Ganis Mar 2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id: TXHandler.h 30815 2009-10-20 13:49:22Z rdm $ » Last generated: 2010-09-23 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXHandler.html:367,inherit,inherit,367,root/html528/TXHandler.html,https://root.cern,https://root.cern/root/html528/TXHandler.html,1,['inherit'],['inherit']
Modifiability,". TXHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXHandler. class TXHandler. TXHandler. Handler of asynchronous events for xproofd sockets.; Classes needing this should inherit from this and overload the; relevant methods. Function Members (Methods); public:. TXHandler(); TXHandler(const TXHandler&); virtual~TXHandler(); static TClass*Class(); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual TClass*IsA() const; TXHandler&operator=(const TXHandler&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleInput(const void* in = 0); Handler of asynchronous input events. Bool_t HandleError(const void* in = 0); Handler of asynchronous error events. TXHandler(); { }. virtual ~TXHandler(); { }. » Author: G. Ganis Mar 2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id: TXHandler.h 30815 2009-10-20 13:49:22Z rdm $ » Last generated: 2011-07-04 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXHandler.html:367,inherit,inherit,367,root/html530/TXHandler.html,https://root.cern,https://root.cern/root/html530/TXHandler.html,1,['inherit'],['inherit']
Modifiability,". TXHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXHandler. class TXHandler. TXHandler. Handler of asynchronous events for xproofd sockets.; Classes needing this should inherit from this and overload the; relevant methods. Function Members (Methods); public:. TXHandler(); TXHandler(const TXHandler&); virtual~TXHandler(); static TClass*Class(); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual TClass*IsA() const; TXHandler&operator=(const TXHandler&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleInput(const void* in = 0); Handler of asynchronous input events. Bool_t HandleError(const void* in = 0); Handler of asynchronous error events. TXHandler(); { }. virtual ~TXHandler(); { }. » Author: G. Ganis Mar 2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id: TXHandler.h 30815 2009-10-20 13:49:22Z rdm $ » Last generated: 2011-12-02 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXHandler.html:367,inherit,inherit,367,root/html532/TXHandler.html,https://root.cern,https://root.cern/root/html532/TXHandler.html,1,['inherit'],['inherit']
Modifiability,". TXHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXHandler. class TXHandler. TXHandler. Handler of asynchronous events for xproofd sockets.; Classes needing this should inherit from this and overload the; relevant methods. Function Members (Methods); public:. TXHandler(); TXHandler(const TXHandler&); virtual~TXHandler(); static TClass*Class(); virtual Bool_tHandleError(const void* in = 0); virtual Bool_tHandleInput(const void* in = 0); virtual TClass*IsA() const; TXHandler&operator=(const TXHandler&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t HandleInput(const void* in = 0); Handler of asynchronous input events. Bool_t HandleError(const void* in = 0); Handler of asynchronous error events. TXHandler(); { }. virtual ~TXHandler(); { }. » Author: G. Ganis Mar 2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id$ » Last generated: 2015-03-15 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXHandler.html:367,inherit,inherit,367,root/html534/TXHandler.html,https://root.cern,https://root.cern/root/html534/TXHandler.html,1,['inherit'],['inherit']
Modifiability,". TXMLAttr. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TXMLAttr. class TXMLAttr: public TObject. TXMLAttr. TXMLAttribute is the attribute of an Element. It contains the name; and the value of the attribute. Function Members (Methods); public:. virtual~TXMLAttr(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLAttr.html:114,inherit,inheritance,114,root/html602/TXMLAttr.html,https://root.cern,https://root.cern/root/html602/TXMLAttr.html,2,['inherit'],['inheritance']
Modifiability,". TXMLDocument. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TXMLDocument. class TXMLDocument: public TObject. TXMLDocument. TXMLDocument contains a pointer to an xmlDoc structure, after the; parser returns a tree built during the document analysis. Function Members (Methods); public:. virtual~TXMLDocument(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; const char*Encoding() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLDocument.html:118,inherit,inheritance,118,root/html602/TXMLDocument.html,https://root.cern,https://root.cern/root/html602/TXMLDocument.html,2,['inherit'],['inheritance']
Modifiability,". TXMLEngine. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XML; » TXMLEngine. class TXMLEngine: public TObject. TXMLEngine class is used to write and read ROOT XML files - TXMLFile.; It does not conform to complete xml standard and cannot be used; as parser for arbitrary XML files. For such cases TXMLParser should; be used. This class was introduced to exclude dependency from; external libraries (like libxml2) and improve speed / memory consumption. Function Members (Methods); public:. virtual~TXMLEngine(); voidTObject::AbstractMethod(const char* method) const; voidAddChild(XMLNodePointer_t parent, XMLNodePointer_t child); voidAddChildFirst(XMLNodePointer_t parent, XMLNodePointer_t child); Bool_tAddComment(XMLNodePointer_t parent, const char* comment); Bool_tAddDocComment(XMLDocPointer_t xmldoc, const char* comment); Bool_tAddDocRawLine(XMLDocPointer_t xmldoc, const char* line); Bool_tAddDocStyleSheet(XMLDocPointer_t xmldoc, const char* href, const char* type = ""text/css"", const char* title = 0, int alternate = -1, const char* media = 0, const char* charset = 0); voidAddNodeContent(XMLNodePointer_t xmlnode, const char* content, Int_t len = 0); Bool_tAddRawLine(XMLNodePointer_t parent, const char* line); Bool_tAddStyleSheet(XMLNodePointer_t parent, const char* href, const char* type = ""text/css"", const char* title = 0, int alternate = -1, const char* media = 0, const char* charset = 0); virtual voidTObject::AppendPad(Option_t* option = """"); voidAssignDtd(XMLDocPointer_t xmldoc, const char* dtdname, const char* rootname); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; voidCleanNode(XMLNodePointer_t xmlnode); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLEngine.html:116,inherit,inheritance,116,root/html602/TXMLEngine.html,https://root.cern,https://root.cern/root/html602/TXMLEngine.html,2,['inherit'],['inheritance']
Modifiability,". TXMLFile. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XML; » TXMLFile. class TXMLFile: public TFile, public TXMLSetup. The main motivation for the XML format is to facilitate the; communication with other non ROOT applications. Currently; writing and reading XML files is limited to ROOT applications.; It is our intention to develop a simple reader independent; of the ROOT libraries that could be used as an example for; real applications. One of possible approach with code generation; is implemented in TXMLPlayer class. The XML format should be used only for small data volumes,; typically histogram files, pictures, geometries, calibrations.; The XML file is built in memory before being dumped to disk. Like for normal ROOT files, XML files use the same I/O mechanism; exploiting the ROOT/CINT dictionary. Any class having a dictionary; can be saved in XML format. This first implementation does not support subdirectories; or Trees. The shared library libRXML.so may be loaded dynamically; via gSystem->Load(""libRXML""). This library is automatically; loaded by the plugin manager as soon as a XML file is created; via, eg; TFile::Open(""file.xml"",""recreate"");; TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; one can use the normal TObject::Write to write an object in the file.; Alternatively one can use the new functions TDirectoryFile::WriteObject and; TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; from TObject. example of a session saving a histogram to a XML file. TFile *f = TFile::Open(""Example.xml"",""recreate"");; TH1F *h = new TH1F(""h"",""test"",1000,-2,2);; h->FillRandom(""gaus"");; h->Write();; delete f;. example of a session reading the histogram from the file. TFile *f = TFile::Open(""Example.xml"");; TH1F *h = (TH1F*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLFile.html:114,inherit,inheritance,114,root/html602/TXMLFile.html,https://root.cern,https://root.cern/root/html602/TXMLFile.html,2,['inherit'],['inheritance']
Modifiability,". TXMLNode. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TXMLNode. class TXMLNode: public TObject. TXMLNode. TXMLNode contains a pointer to xmlNode, which is a node under the; DOM tree. A node can be an Element, an Attribute, a Text Node; or a Comment Node.; One can navigate the DOM tree by accessing the siblings and; parent or child nodes. Also retriving the Attribute or the Text in; an Element node. Function Members (Methods); public:. virtual~TXMLNode(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TList*GetAttributes(); TXMLNode*GetChildren(); const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLNode.html:114,inherit,inheritance,114,root/html602/TXMLNode.html,https://root.cern,https://root.cern/root/html602/TXMLNode.html,2,['inherit'],['inheritance']
Modifiability,". TXMLParser. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XMLPARSER; » TXMLParser. class TXMLParser: public TObject, public TQObject. TXMLParser. TXMLParser is an abstract class which interfaces with Libxml2.; Libxml2 is the XML C parser and toolkit developed for the Gnome; project. The libxml library provides two interfaces to the parser, a DOM; style tree interface and a SAX style event based interface. TXMLParser is parent class of TSAXParser and TDOMParser, which are; a SAX interface and DOM interface of libxml. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TXMLParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:116,inherit,inheritance,116,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,2,['inherit'],['inheritance']
Modifiability,". TXMLPlayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XML; » TXMLPlayer. class TXMLPlayer: public TObject. Class for xml code generation; It should be used for generation of xml steramers, which could be used outside root; environment. This means, that with help of such streamers user can read and write; objects from/to xml file, which later can be accepted by ROOT. At the moment supported only classes, which are not inherited from TObject; and which not contains any TObject members. To generate xml code:. 1. ROOT library with required classes should be created.; In general, without such library non of user objects can be stored and; retrived from any ROOT file. 2. Generate xml streamers by root script like:. void generate() {; gSystem->Load(""libRXML.so""); // load ROOT xml library; gSystem->Load(""libuser.so""); // load user ROOT library. TList lst;; lst.Add(TClass::GetClass(""TUserClass1""));; lst.Add(TClass::GetClass(""TUserClass2""));. TXMLPlayer player;; player.ProduceCode(&lst, ""streamers""); // create xml streamers; }. 3. Copy ""streamers.h"", ""streamers.cxx"", ""TXmlFile.h"", ""TXmlFile.cxx"" files; to user project and compile them. TXmlFile class implementation can be taken; from http://www-linux.gsi.de/~linev/xmlfile.tar.gz. TXMLPlayer class generates one function per class, which called class streamer.; Name of such function for class TExample will be TExample_streamer. Following data members for streamed classes are supported:; - simple data types (int, double, float); - array of simple types (int[5], double[5][6]); - dynamic array of simple types (int* with comment field // [fSize]); - const char*; - object of any nonROOT class; - pointer on object; - array of objects; - array of pointers on objects; - stl string; - stl vector, list, deque, set, multiset, map, multima",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLPlayer.html:116,inherit,inheritance,116,root/html602/TXMLPlayer.html,https://root.cern,https://root.cern/root/html602/TXMLPlayer.html,4,['inherit'],"['inheritance', 'inherited']"
Modifiability,". TXMLPlayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XML; » TXMLPlayer. class TXMLPlayer: public TObject. Class for xml code generation; It should be used for generation of xml steramers, which could be used outside root; enviroment. This means, that with help of such streamers user can read and write; objects from/to xml file, which later can be accepted by ROOT. At the moment supported only classes, which are not inherited from TObject; and which not contains any TObject members. To generate xml code:. 1. ROOT library with required classes should be created.; In general, without such library non of user objects can be stored and; retrived from any ROOT file. 2. Generate xml streamers by root script like:. void generate() {; gSystem->Load(""libRXML.so""); // load ROOT xml library; gSystem->Load(""libuser.so""); // load user ROOT library. TList lst;; lst.Add(TClass::GetClass(""TUserClass1""));; lst.Add(TClass::GetClass(""TUserClass2""));. TXMLPlayer player;; player.ProduceCode(&lst, ""streamers""); // create xml streamers; }. 3. Copy ""streamers.h"", ""streamers.cxx"", ""TXmlFile.h"", ""TXmlFile.cxx"" files; to user project and compile them. TXmlFile class implementation can be taken; from http://www-linux.gsi.de/~linev/xmlfile.tar.gz. TXMLPlayer class generates one function per class, which called class streamer.; Name of such function for class TExample will be TExample_streamer. Following data members for streamed classes are supported:; - simple data types (int, double, float); - array of simple types (int[5], double[5][6]); - dynamic array of simple types (int* with comment field // [fSize]); - const char*; - object of any nonROOT class; - pointer on object; - array of objects; - array of pointers on objects; - stl string; - stl vector, list, deque, set, multiset, map, multimap; - allowed arguments fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXMLPlayer.html:601,inherit,inherited,601,root/html528/TXMLPlayer.html,https://root.cern,https://root.cern/root/html528/TXMLPlayer.html,3,['inherit'],['inherited']
Modifiability,". TXMLPlayer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XML; » TXMLPlayer. class TXMLPlayer: public TObject. Class for xml code generation; It should be used for generation of xml steramers, which could be used outside root; environment. This means, that with help of such streamers user can read and write; objects from/to xml file, which later can be accepted by ROOT. At the moment supported only classes, which are not inherited from TObject; and which not contains any TObject members. To generate xml code:. 1. ROOT library with required classes should be created.; In general, without such library non of user objects can be stored and; retrived from any ROOT file. 2. Generate xml streamers by root script like:. void generate() {; gSystem->Load(""libRXML.so""); // load ROOT xml library; gSystem->Load(""libuser.so""); // load user ROOT library. TList lst;; lst.Add(TClass::GetClass(""TUserClass1""));; lst.Add(TClass::GetClass(""TUserClass2""));. TXMLPlayer player;; player.ProduceCode(&lst, ""streamers""); // create xml streamers; }. 3. Copy ""streamers.h"", ""streamers.cxx"", ""TXmlFile.h"", ""TXmlFile.cxx"" files; to user project and compile them. TXmlFile class implementation can be taken; from http://www-linux.gsi.de/~linev/xmlfile.tar.gz. TXMLPlayer class generates one function per class, which called class streamer.; Name of such function for class TExample will be TExample_streamer. Following data members for streamed classes are supported:; - simple data types (int, double, float); - array of simple types (int[5], double[5][6]); - dynamic array of simple types (int* with comment field // [fSize]); - const char*; - object of any nonROOT class; - pointer on object; - array of objects; - array of pointers on objects; - stl string; - stl vector, list, deque, set, multiset, map, multimap; - allowed arguments f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXMLPlayer.html:602,inherit,inherited,602,root/html534/TXMLPlayer.html,https://root.cern,https://root.cern/root/html534/TXMLPlayer.html,1,['inherit'],['inherited']
Modifiability,". TXMLSetup. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » XML; » TXMLSetup. class TXMLSetup. Class TXMLSetup is used as storage of xml file settings; This class is used in TXMLFile and in TXmlBuffer classes.; Xml settings can be codded via a string in following format. ""2xoo""; ||| \ .; || \ usage of name spaces.; | \ usage of DTD;; \ storage of TStreamerInfo objects in file;; layout of xml file (= 2 - specialized (default), = 3 - generic). For last three boolean parameters ""x"" means true, ""o"" - false. Such string can be set as argument of TXMLFile constructor. In that; case new TXMLFile with such parameters will be created.; These settings automatically stored in xml file. Function Members (Methods); public:. virtual~TXMLSetup(); static TClass*Class(); static TStringDefaultXmlSetup(); Int_tGetNextRefCounter(); TStringGetSetupAsString(); TXMLSetup::EXMLLayoutGetXmlLayout() const; virtual TClass*IsA() const; Bool_tIsStoreStreamerInfos() const; Bool_tIsUseDtd() const; Bool_tIsUseNamespaces() const; TXMLSetup&operator=(const TXMLSetup&); voidPrintSetup(); static voidSetNameSpaceBase(const char* namespacebase); virtual voidSetStoreStreamerInfos(Bool_t iConvert = kTRUE); virtual voidSetUsedDtd(Bool_t use = kTRUE); virtual voidSetUseNamespaces(Bool_t iUseNamespaces = kTRUE); virtual voidSetXmlLayout(TXMLSetup::EXMLLayout layout); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TXMLSetup(); TXMLSetup(const char* opt); TXMLSetup(const TXMLSetup& src); const char*XmlClassNameSpaceRef(const TClass* cl); const char*XmlConvertClassName(const char* name); const char*XmlGetElementName(const TStreamerElement* el). protected:. Int_tAtoI(const char* sbuf, Int_t def = 0, const char* errinfo =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLSetup.html:115,inherit,inheritance,115,root/html602/TXMLSetup.html,https://root.cern,https://root.cern/root/html602/TXMLSetup.html,2,['inherit'],['inheritance']
Modifiability,". TXNetFile. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » NET; » NETX; » TXNetFile. class TXNetFile: public TNetFile. TXNetFile. Authors: Alvise Dorigo, Fabrizio Furano; INFN Padova, 2003; Interfaced to the standalone client (XrdClient): G. Ganis, CERN. TXNetFile is an extension of TNetFile able to deal with new xrootd; server. Its new features are:; - Automatic server kind recognition (xrootd load balancer, xrootd; data server, old rootd); - Backward compatibility with old rootd server (acts as an old; TNetFile); - Fault tolerance for read/write operations (read/write timeouts; and retry); - Internal connection timeout (tunable indipendently from the OS; one) handled by threads; - handling of redirections from server; - Single TCP physical channel for multiple TXNetFile's instances; inside the same application; So, each TXNetFile object client must send messages containing; its ID (streamid). The server, of course, will respond with; messages containing the client's ID, in order to make the client; able to recognize its message by matching its streamid with that; one contained in the server's response.; - Tunable log verbosity level (0 = nothing, 3 = dump read/write; buffers too!); - Many parameters configurable via TEnv facility (see SetParm(); methods). Function Members (Methods); public:. virtual~TXNetFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDirectoryFile::Add(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidTDirectoryFile::Append(TObject* obj, Bool_t replace = kFALSE); virtual Int_tTDirectoryFile::AppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); static TFileOpenHandle*TFile::AsyncOpen(const char* name, Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXNetFile.html:115,inherit,inheritance,115,root/html602/TXNetFile.html,https://root.cern,https://root.cern/root/html602/TXNetFile.html,1,['inherit'],['inheritance']
Modifiability,". TXNetFileStager. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » NET; » NETX; » TXNetFileStager. class TXNetFileStager: public TFileStager. TXNetFileStager. Interface to the 'XRD' staging capabilities. Function Members (Methods); public:. virtual~TXNetFileStager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXNetFileStager.html:121,inherit,inheritance,121,root/html602/TXNetFileStager.html,https://root.cern,https://root.cern/root/html602/TXNetFileStager.html,1,['inherit'],['inheritance']
Modifiability,". TXNetSystem. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » NET; » NETX; » TXNetSystem. class TXNetSystem: public TNetSystem. TXNetSystem. Authors: Frank Winklmeier, Fabrizio Furano; INFN Padova, 2005. TXNetSystem is an extension of TNetSystem able to deal with new; xrootd servers. The class detects the nature of the server and; redirects the calls to TNetSystem in case of a rootd server. Function Members (Methods); public:. virtual~TXNetSystem(); virtual voidTSystem::Abort(int code = 0); voidTObject::AbstractMethod(const char* method) const; virtual intTSystem::AcceptConnection(int sock); virtual Bool_tAccessPathName(const char* path, EAccessMode mode); virtual voidTSystem::AddDynamicPath(const char* pathname); virtual voidTSystem::AddFileHandler(TFileHandler* fh); virtual voidTSystem::AddIncludePath(const char* includePath); virtual voidTSystem::AddLinkedLibs(const char* linkedLib); virtual voidTSystem::AddSignalHandler(TSignalHandler* sh); virtual voidTSystem::AddStdExceptionHandler(TStdExceptionHandler* eh); virtual voidTSystem::AddTimer(TTimer* t); virtual intTSystem::AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize = -1); virtual intTSystem::AnnounceUdpService(int port, int backlog); virtual intTSystem::AnnounceUnixService(int port, int backlog); virtual intTSystem::AnnounceUnixService(const char* sockpath, int backlog); virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TSystem::BaseName(const char* pathname); voidTSystem::Beep(Int_t freq = -1, Int_t duration = -1, Bool_t setDefault = kFALSE); virtual voidTObject::Browse(TBrowser* b); Bool_tTSystem::cd(const char* path); virtual Bool_tTSystem::ChangeDirectory(const char* path); virtual intTSystem::Chmod(const char* file, UInt_t mode); static TClass*Class(); virtual const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXNetSystem.html:117,inherit,inheritance,117,root/html602/TXNetSystem.html,https://root.cern,https://root.cern/root/html602/TXNetSystem.html,2,['inherit'],['inheritance']
Modifiability,". TXProofMgr. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXProofMgr. class TXProofMgr: public TProofMgr, public TXHandler. TXProofMgr. The PROOF manager interacts with the PROOF server coordinator to; create or destroy a PROOF session, attach to or detach from; existing one, and to monitor any client activity on the cluster.; At most one manager instance per server is allowed. Function Members (Methods); public:. virtual~TXProofMgr(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual TProof*AttachSession(Int_t id, Bool_t gui = kFALSE); virtual TProof*AttachSession(TProofDesc* d, Bool_t gui = kFALSE); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; voidTProofMgr::Close(); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tCp(const char* src, const char* dst = 0, const char* opts = 0); static TProofMgr*TProofMgr::Create(const char* url, Int_t loglevel = -1, const char* alias = 0, Bool_t xpd = kTRUE); virtual TProof*TProofMgr::CreateSession(const char* = 0, const char* = 0, Int_t = -1); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDetachSession(Int_t, Option_t* = """"); virtual voidDetachSession(TProof*, Option_t* = """"); virtual voidTProofMgr::DiscardSession(TProof* p); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXProofMgr.html:116,inherit,inheritance,116,root/html602/TXProofMgr.html,https://root.cern,https://root.cern/root/html602/TXProofMgr.html,2,['inherit'],['inheritance']
Modifiability,". TXProofServ. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXProofServ. class TXProofServ: public TProofServ, public TXHandler. TXProofServ. TXProofServ is the XRD version of the PROOF server. It differs from; TXProofServ only for the underlying connection technology. Function Members (Methods); public:. virtual~TXProofServ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TApplication::ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; Int_tTProofServ::CopyFromCache(const char* name, Bool_t cpbin); Int_tTProofServ::Copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXProofServ.html:117,inherit,inheritance,117,root/html602/TXProofServ.html,https://root.cern,https://root.cern/root/html602/TXProofServ.html,2,['inherit'],['inheritance']
Modifiability,". TXSlave. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXSlave. class TXSlave: public TSlave, public TXHandler. TXSlave. This is the version of TSlave for slave servers based on XRD.; See TSlave for details. Function Members (Methods); public:. virtual~TXSlave(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidClose(Option_t* opt = """"); virtual Int_tTSlave::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TSlave::GetArchCompiler() const; Long64_tTSlave::GetBytesRead() const; Float_tTSlave::GetCpuTime() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSlave.html:113,inherit,inheritance,113,root/html602/TXSlave.html,https://root.cern,https://root.cern/root/html602/TXSlave.html,2,['inherit'],['inheritance']
Modifiability,". TXSocket. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXSocket. class TXSocket: public TSocket, public XrdClientAbsUnsolMsgHandler. TXSocket. High level handler of connections to xproofd. Function Members (Methods); public:. virtual~TXSocket(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidClose(Option_t* opt = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; Bool_tCreate(Bool_t attach = kFALSE); static TSocket*TSocket::CreateAuthSocket(const char* url, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); static TSocket*TSocket::CreateAuthSocket(const char* user, const char* host, Int_t port, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); voidCtrlC(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisableTimeout(); voidDisconnectSession(Int_t id, Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEnableTimeout(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* meth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSocket.html:114,inherit,inheritance,114,root/html602/TXSocket.html,https://root.cern,https://root.cern/root/html602/TXSocket.html,1,['inherit'],['inheritance']
Modifiability,". TXSocketHandler. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXSocketHandler. class TXSocketHandler: public TFileHandler. TXSocketHandler. Input handler for xproofd sockets. These sockets cannot be directly; monitored on their descriptor, because the reading activity goes via; the reader thread. This class allows to handle this problem. Function Members (Methods); public:. virtual~TXSocketHandler(); voidTObject::AbstractMethod(const char* method) const; voidTSysEvtHandler::Activate(); virtual voidTSysEvtHandler::Activated()SIGNAL ; virtual voidTFileHandler::Add(); virtual voidTSysEvtHandler::Added()SIGNAL ; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; voidTSysEvtHandler::DeActivate(); virtual voidTSysEvtHandl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSocketHandler.html:121,inherit,inheritance,121,root/html602/TXSocketHandler.html,https://root.cern,https://root.cern/root/html602/TXSocketHandler.html,2,['inherit'],['inheritance']
Modifiability,". TXTRU. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » G3D; » TXTRU. class TXTRU: public TShape. . XTRU is an poly-extrusion with fixed outline shape in x-y,; a sequence of z extents (segments) and two end faces perpendicular; to the z axis. The x-y outline is defined by an ordered list of; points; the overall scale of the outline scales linearly between; z points and the center can have an x-y offset specified; at each segment end. A TXTRU has the following parameters:. - name name of the shape; - title shape's title; - material (see TMaterial); - nxy number of x-y vertex points constituting the outline --; this number should be at least 3; - nz number of planes perpendicular to the z axis where; the scaling dimension of the section is given --; this number should be at least 2; - Xvtx array [nxy] of X coordinates of vertices; - Yvtx array [nxy] of Y coordinates of vertices; - z array [nz] of z plane positions; - scale array [nz] of scale factors; - x0 array [nz] of x offsets; - y0 array [nz] of y offsets. Author: R. Hatcher 2000.04.21. All XTRU shapes are correctly rendered in wire mode but can encounter; difficulty when rendered as a solid with hidden surfaces. These; exceptions occur if the outline shape is not a convex polygon.; Both the X3D and OpenGL renderers expect polygons to be convex.; The OpenGL spec specifies that points defining a polygon using the; GL_POLYGON primitive may be rendered as the convex hull of that set. Solid rendering under X3D can also give unexpected artifacts if; the combination of x-y-z offsets and scales for the segments are; chosen in such a manner that they represent a concave shape when; sliced along a plane parallel to the z axis. Choosing sets of point that represent a malformed polygon is; not supported, but testing for such a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXTRU.html:111,inherit,inheritance,111,root/html602/TXTRU.html,https://root.cern,https://root.cern/root/html602/TXTRU.html,2,['inherit'],['inheritance']
Modifiability,". TXUnixSocket. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » PROOF; » PROOFX; » TXUnixSocket. class TXUnixSocket: public TXSocket. TXUnixSocket. Implementation of TXSocket using PF_UNIX sockets.; Used for the internal connection between coordinator and proofserv. Function Members (Methods); public:. virtual~TXUnixSocket(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTXSocket::Close(Option_t* opt = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; Bool_tTXSocket::Create(Bool_t attach = kFALSE); static TSocket*TSocket::CreateAuthSocket(const char* url, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); static TSocket*TSocket::CreateAuthSocket(const char* user, const char* host, Int_t port, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); voidTXSocket::CtrlC(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTXSocket::DisableTimeout(); voidTXSocket::DisconnectSession(Int_t id, Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTXSocket::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTXSocket::EnableTimeout(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXUnixSocket.html:118,inherit,inheritance,118,root/html602/TXUnixSocket.html,https://root.cern,https://root.cern/root/html602/TXUnixSocket.html,2,['inherit'],['inheritance']
Modifiability,". TZIPFile. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » IO; » TZIPFile. class TZIPFile: public TArchiveFile. TZIPFile. This class describes a ZIP archive file containing multiple; sub-files. Typically the sub-files are ROOT files. Notice that; the ROOT files should not be compressed when being added to the; ZIP file, since ROOT files are normally already compressed.; Such a ZIP file should be created like:. zip -n root multi file1.root file2.root. which creates a ZIP file multi.zip. A ZIP archive consists of files compressed with the popular ZLIB; compression algorithm. The archive format is used among others by; PKZip and Info-ZIP. The compression algorithm is also used by; GZIP and the PNG graphics standard. The format of the archives is; explained briefly below. This class provides an interface to read; such archives. A ZIP archive contains a prefix, series of archive members; (sub-files), and a central directory. In theory the archive could; span multiple disks (or files) with the central directory of the; whole archive on the last disk, but this class does not support; such multi-part archives. The prefix is only used in self-extracting; executable archive files. The members are stored in the archive sequentially, each with a; local header followed by the (optionally) compressed data; the local; header describes the member, including its file name and compressed; and real sizes. The central directory includes the member details; again, plus allows an extra member comment to be added. The last; member in the central directory is an end marker that can contain; a comment for the whole archive. Both the local header and the; central directory can also carry extra member-specific data; the; data in the local and global parts can be different.; The fact that the archive",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TZIPFile.html:114,inherit,inheritance,114,root/html602/TZIPFile.html,https://root.cern,https://root.cern/root/html602/TZIPFile.html,2,['inherit'],['inheritance']
Modifiability,". TZIPMember. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » IO; » IO; » TZIPMember. class TZIPMember: public TArchiveMember. TZIPFile. This class describes a ZIP archive file containing multiple; sub-files. Typically the sub-files are ROOT files. Notice that; the ROOT files should not be compressed when being added to the; ZIP file, since ROOT files are normally already compressed.; Such a ZIP file should be created like:. zip -n root multi file1.root file2.root. which creates a ZIP file multi.zip. A ZIP archive consists of files compressed with the popular ZLIB; compression algorithm. The archive format is used among others by; PKZip and Info-ZIP. The compression algorithm is also used by; GZIP and the PNG graphics standard. The format of the archives is; explained briefly below. This class provides an interface to read; such archives. A ZIP archive contains a prefix, series of archive members; (sub-files), and a central directory. In theory the archive could; span multiple disks (or files) with the central directory of the; whole archive on the last disk, but this class does not support; such multi-part archives. The prefix is only used in self-extracting; executable archive files. The members are stored in the archive sequentially, each with a; local header followed by the (optionally) compressed data; the local; header describes the member, including its file name and compressed; and real sizes. The central directory includes the member details; again, plus allows an extra member comment to be added. The last; member in the central directory is an end marker that can contain; a comment for the whole archive. Both the local header and the; central directory can also carry extra member-specific data; the; data in the local and global parts can be different.; The fact that the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TZIPMember.html:116,inherit,inheritance,116,root/html602/TZIPMember.html,https://root.cern,https://root.cern/root/html602/TZIPMember.html,2,['inherit'],['inheritance']
Modifiability,". Taligent's Guide to Designing Programs - Name conventions. Name conventions; Select C++ identifiers (including types, functions, and classes) carefully. When a programmer sees a name, it might be out of context; choose names to enhance readability and comprehension. A name that seems cute or easy to type can cause trouble to someone trying to decipher code. Remember, code is read many more times than it is written; err on the side of long, readable names. Internal code names should not appear anywhere in the interfaces to the system. Even inside your implementation, it's better to use the prosaic form if there is one.; To make the scope of names explicit, Taligent uses the following conventions. Name conventions. Identifier. Convention. Example. Types. Begin with a capital letter. Boolean. Base classes. Begin with T. TContainerView. Mixin classes. Begin with M; ; see ""Multiple inheritance"" on page 44. MPrintable. Enumeration types. Begin with E. EFreezeLevel. Raw C types. Avoid using C types; see ""Avoid raw C types with dimensions"" on page 66. Virtual base classes. Begin with V, rather than T or M. VBaseClass. Members. Begin with f for field1; ; functions begin with a capital letter. fViewList, DrawSelf(). Static variables. Begin with g; applies to static variables in functions and global variables (excluding static data members of a class). gDeviceList. Static data members. Begin with fg; includes class globals. TView::fgTokenClient. Locals and parameters. Begin with a word whose initial letter is lowercase; local automatic variables only, treat statics like globals. seed, port, ; theCurrentArea. Constants. Begin with k; including names of enumeration constants and constant statics. kMenuCommand. Acronyms. All uppercase. TNBPName, not TNbpName. Template arguments. Begin with A. AType. Getters and setters. Begin with Set..., Get..., or Is... (Boolean); use sparingly (see ""Structification"" on page 50). SetLast(), GetNext(), IsDone(). Allocator and adopters. Begin wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html:230,enhance,enhance,230,TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html,https://root.cern,https://root.cern/TaligentDocs/TaligentOnline/DocumentRoot/1.0/Docs/books/WM/WM_63.html,2,"['enhance', 'inherit']","['enhance', 'inheritance']"
Modifiability,". The $ROOTSYS/etc/plugins is the default top plugin directory; specified in $ROOTSYS/etc/system.rootrc. The macros must have names; like <BaseClass>/PX0_<PluginClass>.C, e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a namespace; the directory must have the name NameSpace@@BaseClass as : is a reserved; pathname character on some operating systems. Macros not beginning with; 'P' and ending with "".C"" are ignored. If base is specified only plugin; macros for that base class are loaded. The macros typically; should look like:; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; }; In general these macros should not cause side effects, by changing global; ROOT state via, e.g. gSystem calls, etc. However, in specific cases; this might be useful, e.g. adding a library search path, adding a specific; dependency, check on some OS or ROOT capability or downloading; of the plugin. void AddHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor = 0, const char* origin = 0); Add plugin handler to the list of handlers. If there is already a; handler defined for the same base and regexp it will be replaced. void RemoveHandler(const char* base, const char* regexp = 0); Remove handler for the specified base class and the specified; regexp. If regexp=0 remove all handlers for the specified base. TPluginHandler * FindHandler(const char* base, const char* uri = 0); Returns the handler if there exists a handler for the specified URI.; The uri can be 0 in which case the first matching plugin handler; will be returned. Returns 0 in case handler is not found. void Print(Option_t* opt = """") const; Print list of registered plugin handlers. If option is ""a"" print; also the ctor's that will be used. Int_t WritePluginMacros(const char* dir, const char* plugin = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:10707,plugin,plugin,10707,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,6,['plugin'],['plugin']
Modifiability,. The list of externals depends on the build options that have been enabled. CMake will look for these third party products at a number of standard places in your system but the user can influence the search by setting some environment variables before invoking the CMake command or by setting package specific CMake variables to their exact location.; The actual cached values used by CMake for the exact location of libraries and include files of the used external libraries can be inspected and modified using the ccmake utility. Package Name; Variable; Type; Description. AfterImage; AFTERIMAGE_CONFIG_EXECUTABLE; PATH; Full path to afterimage-config program. Alien; ALIEN_DIR; PATH; Directory where Alien is installed (-DALIEN_DIR=$ALIEN_DIR/api). Bonjour; BONJOUR_INCLUDE_DIR; PATH; Directory where to find dns_sd.h. AVAHI_INCLUDE_DIR; PATH; Directory where avahi-client/client.h (Linux). AVAHI_client_LIBRARY; PATH; Full path to libavahi-client.so library. CASTOR; CASTOR_DIR; PATH; Environment variable to the Castor installation. CASTOR_INCLUDE_DIR; PATH; Path to rfio_api.h file. CASTOR_shift_LIBRARY; PATH; Full path to shift library. CFITSIO; CFITSIO; PATH; Installation of CFITSIO. CFITSIO_INCLUDE_DIR; PATH; Directory where to find fitsio.h. CFITSIO_LIBRARIES; PATH; Full path to cfitsio library. FFTW; FFTW_DIR; PATH; Installation of FFTW. FFTW_INCLUDE_DIR; PATH; Directory where to find fftw3.h. FFTW_LIBRARY; PATH; Full path to fftw3 library. GraphViz; GRAPHVIZ_DIR; PATH; Installation of GraphViz. GRAPHVIZ_INCLUDE_DIR; PATH; Directory where to find graphviz/graph.h. GRAPHVIZ_CDT_LIBRARY; PATH; Full path to cdt library. GRAPHVIZ_GVC_LIBRARY; PATH; Full path to gvc library. GRAPHVIZ_GRAPH_LIBRARY; PATH; Full path to graph library. GRAPHVIZ_PATHPLAN_LIBRARY; PATH; Full path to pathplan library. GSL; GSL_ROOT_DIR; PATH; Environment variable to the GSL installation. GSL_CONFIG_EXECUTABLE; PATH; Full path to gsl-config program. Kerberos 5; KRB5_DIR; PATH; Installation of Kerberos,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/building-root.html:18330,variab,variable,18330,d/building-root.html,https://root.cern,https://root.cern/d/building-root.html,1,['variab'],['variable']
Modifiability,". The number of elements per entry is saved in fLen.; a dynamic number of primitives. The number of objects in each entry is saved in the fLeafCount branch. Note options (2) and (3) can combined - if fLeafCount says an entry has 3 elements and fLen is 2, then there will be 6 objects in that entry.; Additionally, fNdata is transient and generated on read to determine the necessary size of a buffer to hold event data; depending on the call-site, it may be sized larger than the number of elements ; Definition at line 57 of file TLeaf.h. Classes; struct  GetValueHelper;  ; struct  GetValueHelper< Long64_t >;  ; struct  GetValueHelper< LongDouble_t >;  ; struct  GetValueHelper< ULong64_t >;  ; struct  LeafCountValues;  . Public Types; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual bool CanGenerateOffsetArray ();  ; virtual void Export (TClonesArray *, Int_t);  ; virtual void FillBasket (TBuffer &b);  Pack leaf elements in Basket output b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeaf.html:1794,inherit,inherited,1794,doc/master/classTLeaf.html,https://root.cern,https://root.cern/doc/master/classTLeaf.html,1,['inherit'],['inherited']
Modifiability,". The purpose of SavePrimitve is to save a primitive as a C++ statement(s). Most ROOT classes implement the SavePrimitive method. It is recommended that the SavePrimitive is implemented in user defined classes if it is to be drawn on a canvas. Such that the command TCanvas::SaveAs(Canvas.C) will preserve the user-class object in the resulting script.; 15.1.8 GetObjectInfo; This method is called when displaying the event status in a canvas. To show the event status window, select the Options menu and the EventStatus item. This method returns a string of information about the object at position (x, y). Every time the cursor moves, the object under the cursor executes the GetObjectInfo method. The string is then shown in the status bar. There is a default implementation in TObject, but it is typically overridden for classes that can report peculiarities for different cursor positions (for example the bin contents in a TH1).; 15.1.9 IsFolder; By default an object inheriting from TObject is not brows-able, because TObject::IsFolder() returns kFALSE. To make a class browse-able, the IsFolder method needs to be overridden to return kTRUE. In general, this method returns kTRUE if the object contains browse-able objects (like containers or lists of other objects).; 15.1.10 Bit Masks and Unique ID; A TObject descendent inherits two data members: fBits and fUniqueID. fBitsis 32-bit data member used with a bit mask to get object information. Bits 0 - 13 are reserved as global bits, bits 14 - 23 can be used in different class hierarchies.; enum EObjBits {; kCanDelete = BIT(0), // if can be deleted; kMustCleanup = BIT(3), // if destructor must call RecursiveRemove(); kObjInCanvas = BIT(3), // for backward compatibility only; kIsReferenced = BIT(4), // if referenced by TRef or TRefArray; kHasUUID = BIT(5), // if has a TUUID, fUniqueID=UUIDNumber; kCannotPick = BIT(6), // if cannot be picked in a pad; kNoContextMenu = BIT(8), // if does not want a context menu; kInvalidObject = BIT(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:809326,inherit,inheriting,809326,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inheriting']
Modifiability,". This allows the user to call the editor from the command line. This particular function will start the VI editor if the environment variable EDITOR is not set.; root[0] edit(""c1.C""); For more details, see $ROOTSYS/tutorials/rootalias.C.; 2.7.2 History File; You can use the up and down arrow at the command line, to access the previous and next command. The commands are recorded in the history file $HOME/.root_hist. It is a text file, and you can edit, cut, and paste from it. You can specify the history file in the system.rootrc file, by setting the Rint.Historyoption. You can also turn off the command logging in the system.rootrc file with the option: Rint.History: -; The number of history lines to be kept can be set also in .rootrc by:; Rint.HistSize: 500; Rint.HistSave: 400; The first value defines the maximum of lines kept; once it is reached all, the last HistSave lines will be removed. One can set HistSize to 0 to disable history line management. There is also implemented an environment variable called ROOT_HIST. By setting ROOT_HIST=300:200 the above values can be overriden - the first value corresponds to HistSize, the (optional) second one to HistSave. You can set ROOT_HIST=0 to disable the history.; 2.7.3 Tracking Memory Leaks; You can track memory usage and detect leaks by monitoring the number of objects that are created and deleted (see TObjectTable). To use this facility, edit the file $ROOTSYS/etc/system.rootrc or .rootrc if you have this file and add the two following lines:; Root.ObjectStat: 1; In your code or on the command line you can type the line:; gObjectTable->Print();; This line will print the list of all active classes and the number of instances for each class. By comparing consecutive print outs, you can see objects that you forgot to delete. Note that this method cannot show leaks coming from the allocation of non-objects or classes unknown to ROOT.; 2.8 Converting from PAW to ROOT; The web page at: http://root.cern.ch/root/HowtoConvertF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:66122,variab,variable,66122,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['variab'],['variable']
Modifiability,". This method check for treat the case where expression contains $Atl and load up both fAliases and fExpr. ; We return:; -1 in case of failure; 0 in case we did not find $Alt; the action number in case of success. . Definition at line 657 of file TTreeFormula.cxx. ◆ DefineDimensions(). void TTreeFormula::DefineDimensions ; (; Int_t ; code, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; info, . Int_t & ; virt_dim . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 356 of file TTreeFormula.cxx. ◆ DefinedVariable(). Int_t TTreeFormula::DefinedVariable ; (; TString & ; name, . Int_t & ; action . ). overridevirtual . Check if name is in the list of Tree/Branch leaves. ; This member function redefines the function in ROOT::v5::TFormula If a leaf has a name corresponding to the argument name, then returns a new code.; A TTreeFormula may contain more than one variable. For each variable referenced, the pointers to the corresponding branch and leaf is stored in the object arrays fBranches and fLeaves.; name can be :; Leaf_Name (simple variable or data member of a ClonesArray); Branch_Name.Leaf_Name; Branch_Name.Method_Name; Leaf_Name[index]; Branch_Name.Leaf_Name[index]; Branch_Name.Leaf_Name[index1]; Branch_Name.Leaf_Name[][index2]; Branch_Name.Leaf_Name[index1][index2]. New additions:; Branch_Name.Leaf_Name[OtherLeaf_Name]; Branch_Name.Datamember_Name; '.' can be replaced by '->'; and. Branch_Name[index1].Leaf_Name[index2]; Leaf_name[index].Action().OtherAction(param); Leaf_name[index].Action()[val].OtherAction(param). The expected returned values are; -2 : the name has been recognized but won't be usable; -1 : the name has not been recognized, or is too long, or tree does not exist.; >=0 : the name has been recognized, return the internal code for this name. . Reimplemented from ROOT::v5::TFormula.; Definition at line 2698 of file TTreeFormula.cxx. ◆ EvalClass() [1/2]. TClass * TTreeFormula::EvalClass ; (; ); con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:35607,variab,variable,35607,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variable']
Modifiability,". This method is obsolete, use Process(). See WARNING below about entry.; void TSelector::SlaveTerminate(). This method is called at the end of the loop on all PROOF worker nodes. In local mode this method is called on the client too.; void TSelector::Terminate(). This method is called at the end of the loop on all entries. When using PROOF Terminate() is call on the client only. Typically one performs the fits on the produced histograms or write the histograms to file in this method. WARNING when a selector is used with a TChain:; in the Process, ProcessCut, ProcessFill function, you must use the pointer to the current Tree to call GetEntry(entry). entry is always the local entry number in the current tree. Assuming that fChain is the pointer to the TChain being processed, use fChain->GetTree()->GetEntry(entry); ; Definition at line 31 of file TSelector.h. Public Types; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual void Begin (TTree *);  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelector.html:3083,inherit,inherited,3083,doc/master/classTSelector.html,https://root.cern,https://root.cern/doc/master/classTSelector.html,1,['inherit'],['inherited']
Modifiability,". ToolBarData_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » ToolBarData_t. class ToolBarData_t. TGToolBar. A toolbar is a composite frame that contains TGPictureButtons.; Often used in combination with a TGHorizontal3DLine. Function Members (Methods); public:. ~ToolBarData_t(); ToolBarData_t&operator=(const ToolBarData_t&); ToolBarData_t&operator=(ToolBarData_t&&); ToolBarData_t(); ToolBarData_t(const ToolBarData_t&); ToolBarData_t(ToolBarData_t&&). Data Members; public:. TGButton*fButton; Int_tfId; const char*fPixmap; Bool_tfStayDown; const char*fTipText. Class Charts. Inheritance Chart:. ToolBarData_t. Function documentation; TGToolBar& operator=(const TGToolBar&). » Author: Fons Rademakers 25/02/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ToolBarData_t.html:119,inherit,inheritance,119,root/html602/ToolBarData_t.html,https://root.cern,https://root.cern/root/html602/ToolBarData_t.html,1,['inherit'],['inheritance']
Modifiability,. True if macro should be interrupted. ; Definition at line 134 of file TROOT.h. ◆ fIsWebDisplay. Bool_t TROOT::fIsWebDisplay. protected . True if session uses web widgets. ; Definition at line 128 of file TROOT.h. ◆ fIsWebDisplayBatch. Bool_t TROOT::fIsWebDisplayBatch. protected . True if web widgets are not displayed. ; Definition at line 129 of file TROOT.h. ◆ fLineIsProcessing. Int_t TROOT::fLineIsProcessing. private . To synchronize multi-threads. ; Definition at line 100 of file TROOT.h. ◆ fMappedFiles. TSeqCollection* TROOT::fMappedFiles. protected . List of memory mapped files. ; Definition at line 147 of file TROOT.h. ◆ fMessageHandlers. TSeqCollection* TROOT::fMessageHandlers. protected . List of message handlers. ; Definition at line 158 of file TROOT.h. ◆ fMustClean. Bool_t TROOT::fMustClean. protected . True if object destructor scans canvases. ; Definition at line 132 of file TROOT.h. ◆ fPluginManager. TPluginManager* TROOT::fPluginManager. protected . Keeps track of plugin library handlers. ; Definition at line 169 of file TROOT.h. ◆ fPrimitive. const TObject* TROOT::fPrimitive. protected . Currently selected primitive. ; Definition at line 138 of file TROOT.h. ◆ fProofs. TSeqCollection* TROOT::fProofs. protected . List of proof sessions. ; Definition at line 162 of file TROOT.h. ◆ fRootFolder. TFolder* TROOT::fRootFolder. protected . top level folder //root ; Definition at line 167 of file TROOT.h. ◆ fSecContexts. TSeqCollection* TROOT::fSecContexts. protected . List of security contexts (TSecContext) ; Definition at line 161 of file TROOT.h. ◆ fSelectPad. TVirtualPad* TROOT::fSelectPad. protected . Currently selected pad. ; Definition at line 139 of file TROOT.h. ◆ fSockets. TSeqCollection* TROOT::fSockets. protected . List of network sockets. ; Definition at line 148 of file TROOT.h. ◆ fSpecials. TSeqCollection* TROOT::fSpecials. protected . List of special objects. ; Definition at line 156 of file TROOT.h. ◆ fStreamerInfo. TSeqCollection* TROOT::f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:86087,plugin,plugin,86087,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['plugin'],['plugin']
Modifiability,". UserGroup_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » UserGroup_t. class UserGroup_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. ~UserGroup_t(); UserGroup_t&operator=(UserGroup_t&&); UserGroup_t&operator=(const UserGroup_t&); UserGroup_t(); UserGroup_t(UserGroup_t&&); UserGroup_t(const UserGroup_t&). Data Members; public:. Int_tfGidgroup id; TStringfGroupgroup name; TStringfPasswdpassword; TStringfRealNameuser full name; TStringfShelluser preferred shell; Int_tfUiduser id; TStringfUseruser name. Class Charts. Inheritance Chart:. UserGroup_t. Function documentation; UserGroup_t(); { }. TSystem& operator=(const TSystem&). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/UserGroup_t.html:117,inherit,inheritance,117,root/html602/UserGroup_t.html,https://root.cern,https://root.cern/root/html602/UserGroup_t.html,1,['inherit'],['inheritance']
Modifiability,". WindowAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » WindowAttributes_t. class WindowAttributes_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~WindowAttributes_t(); WindowAttributes_t&operator=(const WindowAttributes_t&); WindowAttributes_t&operator=(WindowAttributes_t&&); WindowAttributes_t(); WindowAttributes_t(const WindowAttributes_t&); WindowAttributes_t(WindowAttributes_t&&). Data Members; public:. Long_tfAllEventMasksset of events all people have interest in; ULong_tfBackingPixelvalue to be used when restoring planes; ULong_tfBackingPlanesplanes to be preserved if possible; Int_tfBackingStorekNotUseful, kWhenMapped, kAlways; Int_tfBitGravityone of bit gravity values; Int_tfBorderWidthborder width of window; Int_tfClasskInputOutput, kInputOnly; Colormap_tfColormapcolor map to be associated with window; Int_tfDepthdepth of window; Long_tfDoNotPropagateMaskset of events that should not propagate; Int_tfHeightwidth and height of window; Bool_tfMapInstalledboolean, is color map currently installed; Int_tfMapStatekIsUnmapped, kIsUnviewable, kIsViewable; Bool_tfOverrideRedirectboolean value for override-redirect; Window_tfRootroot of screen containing window; Bool_tfSaveUnderboolean, should bits under be saved?; void*fScreenback pointer to correct screen; void*fVisualthe associated visual structure; Int_tfWidthwidth and height of window; Int_tfWinGravityone of the window gravity values; Int_tfXlocation of window; Int_tfYlocation of window; Long_tfYourEventMaskmy event mask. Class Charts. Inheritance Chart:. WindowAttributes_t. Function documentation. » Last changed: Tue Jun 30 15:32:59 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/WindowAttributes_t.html:113,inherit,inheritance,113,root/html602/WindowAttributes_t.html,https://root.cern,https://root.cern/root/html602/WindowAttributes_t.html,1,['inherit'],['inheritance']
Modifiability,". You can add a friend to a chain with the TChain::AddFriend method, and you can retrieve the list of friends with TChain::GetListOfFriends. This example has four chains each has 20 ROOT trees from 20 ROOT files. TChain ch(""t""); // a chain with 20 trees from 20 files; TChain ch1(""t1"");; TChain ch2(""t2"");; TChain ch3(""t3"");; Now we can add the friends to the first chain. ch.AddFriend(""t1""); ch.AddFriend(""t2""); ch.AddFriend(""t3""); . The parameter is the name of friend chain (the name of a chain is always the name of the tree from which it was created). The original chain has access to all variable in its friends. We can use the TChain::Draw method as if the values in the friends were in the original chain. To specify the chain to use in the Draw method, use the syntax: <chainname>.<branchname>.<varname>; If the variable name is enough to uniquely identify the variable, you can leave out the chain and/or branch name. For example, this generates a 3-d scatter plot of variable ""var"" in the TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2. ch.Draw(""var:t1.v1:t2.v2"");; When a TChain::Draw is executed, an automatic call to TTree::AddFriend connects the trees in the chain. When a chain is deleted, its friend elements are also deleted.; The number of entries in the friend must be equal or greater to the number of entries of the original chain. If the friend has fewer entries a warning is given and the resulting histogram will have missing entries. For additional information see TTree::AddFriend. ; Reimplemented from TTree.; Definition at line 656 of file TChain.cxx. ◆ AddFriend() [2/3]. TFriendElement * TChain::AddFriend ; (; const char * ; chainname, . TFile * ; dummy . ). overridevirtual . Add the whole chain or tree as a friend of this chain. ; Reimplemented from TTree.; Definition at line 685 of file TChain.cxx. ◆ AddFriend() [3/3]. TFriendElement * TChain::AddFriend ; (; TTree * ; chain, . const char * ; alias = """", . bool ; warn = false . ). over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:65039,variab,variable,65039,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,3,['variab'],['variable']
Modifiability,". You can add a friend to a chain with the TChain::AddFriend method, and you can retrieve the list of friends with TChain::GetListOfFriends. This example has four chains each has 20 ROOT trees from 20 ROOT files. TChain ch(""t""); // a chain with 20 trees from 20 files; TChain ch1(""t1"");; TChain ch2(""t2"");; TChain ch3(""t3"");; Now we can add the friends to the first chain. ch.AddFriend(""t1""); ch.AddFriend(""t2""); ch.AddFriend(""t3""); . The parameter is the name of friend chain (the name of a chain is always the name of the tree from which it was created). The original chain has access to all variable in its friends. We can use the TChain::Draw method as if the values in the friends were in the original chain. To specify the chain to use in the Draw method, use the syntax: <chainname>.<branchname>.<varname>; If the variable name is enough to uniquely identify the variable, you can leave out the chain and/or branch name. For example, this generates a 3-d scatter plot of variable ""var"" in the TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2. ch.Draw(""var:t1.v1:t2.v2"");; When a TChain::Draw is executed, an automatic call to TTree::AddFriend connects the trees in the chain. When a chain is deleted, its friend elements are also deleted.; The number of entries in the friend must be equal or greater to the number of entries of the original chain. If the friend has fewer entries a warning is given and the resulting histogram will have missing entries. For additional information see TTree::AddFriend. ; Reimplemented from TTree.; Definition at line 682 of file TChain.cxx. ◆ AddFriend() [2/3]. TFriendElement * TChain::AddFriend ; (; const char * ; chainname, . TFile * ; dummy . ). overridevirtual . Add the whole chain or tree as a friend of this chain. ; Reimplemented from TTree.; Definition at line 711 of file TChain.cxx. ◆ AddFriend() [3/3]. TFriendElement * TChain::AddFriend ; (; TTree * ; chain, . const char * ; alias = """", . bool ; warn = false . ). over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain.html:65448,variab,variable,65448,doc/master/classTChain.html,https://root.cern,https://root.cern/doc/master/classTChain.html,3,['variab'],['variable']
Modifiability,. _root_std_complex<double>. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » METAUTILS; » _root_std_complex<double>. class _root_std_complex<double>. Function Members (Methods); public:. ~_root_std_complex<double>(); _root_std_complex<double>(); _root_std_complex<double>(const _root_std_complex<double>&); _root_std_complex<double>(_root_std_complex<double>&&); _root_std_complex<double>&operator=(const _root_std_complex<double>&); _root_std_complex<double>&operator=(_root_std_complex<double>&&). Data Members; private:. double_imag; double_real. Class Charts. Inheritance Chart:. _root_std_complex<double>. Function documentation. » Last changed: Tue Jun 30 15:32:59 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/_root_std_complex_double_.html:120,inherit,inheritance,120,root/html602/_root_std_complex_double_.html,https://root.cern,https://root.cern/root/html602/_root_std_complex_double_.html,1,['inherit'],['inheritance']
Modifiability,. _root_std_complex<float>. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » METAUTILS; » _root_std_complex<float>. class _root_std_complex<float>. Function Members (Methods); public:. ~_root_std_complex<float>(); _root_std_complex<float>(); _root_std_complex<float>(const _root_std_complex<float>&); _root_std_complex<float>(_root_std_complex<float>&&); _root_std_complex<float>&operator=(const _root_std_complex<float>&); _root_std_complex<float>&operator=(_root_std_complex<float>&&). Data Members; private:. float_imag; float_real. Class Charts. Inheritance Chart:. _root_std_complex<float>. Function documentation. » Last changed: Tue Jun 30 15:32:59 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/_root_std_complex_float_.html:119,inherit,inheritance,119,root/html602/_root_std_complex_float_.html,https://root.cern,https://root.cern/root/html602/_root_std_complex_float_.html,1,['inherit'],['inheritance']
Modifiability,. _root_std_complex<int>. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » METAUTILS; » _root_std_complex<int>. class _root_std_complex<int>. Function Members (Methods); public:. ~_root_std_complex<int>(); _root_std_complex<int>(); _root_std_complex<int>(const _root_std_complex<int>&); _root_std_complex<int>(_root_std_complex<int>&&); _root_std_complex<int>&operator=(const _root_std_complex<int>&); _root_std_complex<int>&operator=(_root_std_complex<int>&&). Data Members; private:. int_imag; int_real. Class Charts. Inheritance Chart:. _root_std_complex<int>. Function documentation. » Last changed: Tue Jun 30 15:32:59 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/_root_std_complex_int_.html:117,inherit,inheritance,117,root/html602/_root_std_complex_int_.html,https://root.cern,https://root.cern/root/html602/_root_std_complex_int_.html,1,['inherit'],['inheritance']
Modifiability,. _root_std_complex<long>. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » METAUTILS; » _root_std_complex<long>. class _root_std_complex<long>. Function Members (Methods); public:. ~_root_std_complex<long>(); _root_std_complex<long>(); _root_std_complex<long>(const _root_std_complex<long>&); _root_std_complex<long>(_root_std_complex<long>&&); _root_std_complex<long>&operator=(const _root_std_complex<long>&); _root_std_complex<long>&operator=(_root_std_complex<long>&&). Data Members; private:. long_imag; long_real. Class Charts. Inheritance Chart:. _root_std_complex<long>. Function documentation. » Last changed: Tue Jun 30 15:32:59 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/_root_std_complex_long_.html:118,inherit,inheritance,118,root/html602/_root_std_complex_long_.html,https://root.cern,https://root.cern/root/html602/_root_std_complex_long_.html,1,['inherit'],['inheritance']
Modifiability,". binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< Int_t > _catRef;  Reference values for categories. ;  ; RooListProxy _catSet;  List of categories to check. ;  ; bool _checkVal = false;  Check contents as well if true. ;  ; bool _init = false;  ; std::vector< double > _realRef;  Reference values for reals. ;  ; RooListProxy _realSet;  List of reals to track. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChangeTracker.html:55564,inherit,inherited,55564,doc/master/classRooChangeTracker.html,https://root.cern,https://root.cern/doc/master/classRooChangeTracker.html,1,['inherit'],['inherited']
Modifiability,". bool ; verbose . ). protected . Back-end implementation of the p.d.f building functionality. ; Definition at line 406 of file RooCustomizer.cxx. ◆ initialize(). void RooCustomizer::initialize ; (; ). protected . Initialize the customizer. ; Definition at line 267 of file RooCustomizer.cxx. ◆ operator=() [1/2]. RooCustomizer & RooCustomizer::operator= ; (; const RooCustomizer & ; ). delete . ◆ operator=() [2/2]. RooCustomizer & RooCustomizer::operator= ; (; RooCustomizer && ; ). delete . ◆ pdf(). RooAbsPdf const & RooCustomizer::pdf ; (; ); const. Definition at line 647 of file RooCustomizer.cxx. ◆ printArgs(). void RooCustomizer::printArgs ; (; std::ostream & ; os); const. Print arguments of customizer, i.e. input p.d.f and input master category (if any) ; Definition at line 596 of file RooCustomizer.cxx. ◆ printMultiline(). void RooCustomizer::printMultiline ; (; std::ostream & ; os, . Int_t ; content, . bool ; verbose = false, . TString ; indent = """" . ); const. Print customizer configuration details. ; Definition at line 610 of file RooCustomizer.cxx. ◆ replaceArg(). void RooCustomizer::replaceArg ; (; const RooAbsArg & ; orig, . const RooAbsArg & ; subst . ). Replace any occurrence of arg 'orig' with arg 'subst'. ; Definition at line 327 of file RooCustomizer.cxx. ◆ setCloneBranchSet(). void RooCustomizer::setCloneBranchSet ; (; RooArgSet & ; cloneBranchSet). Releases ownership of list of cloned branch nodes. ; Install the input RooArgSet as container in which all cloned branches will be stored. ; Definition at line 640 of file RooCustomizer.cxx. ◆ setOwning(). void RooCustomizer::setOwning ; (; bool ; flag). inline . If flag is true, make customizer own all created components. ; Definition at line 45 of file RooCustomizer.h. ◆ splitArg(). void RooCustomizer::splitArg ; (; const RooAbsArg & ; arg, . const RooAbsCategory & ; splitCat . ). Split all argument 'arg' into individualized clones for each defined state of 'splitCat'. ; The 'splitCats' category must be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCustomizer.html:14950,config,configuration,14950,doc/master/classRooCustomizer.html,https://root.cern,https://root.cern/doc/master/classRooCustomizer.html,1,['config'],['configuration']
Modifiability,". const char * UnixPathName(const char* unixpathname); Convert from a Unix pathname to a local pathname. E.g. from /user/root to \user\root. char * ConcatFileName(const char* dir, const char* name); Concatenate a directory and a file name. User must delete returned string. const char * PrependPathName(const char* dir, TString& name); Concatenate a directory and a file name. const char * ExpandFileName(const char* fname); Expand a pathname getting rid of special shell characters like ~.$, etc.; For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; environment variables in a pathname. If compatibility is not an issue; you can use on Unix directly $XXX. This is a protected function called; from the OS specific system classes, like TUnixSystem and TWinNTSystem.; Returns the expanded filename or 0 in case of error. Bool_t ExpandPathName(TString& path); Expand a pathname getting rid of special shell characaters like ~.$, etc.; For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; environment variables in a pathname. If compatibility is not an issue; you can use on Unix directly $XXX. char * ExpandPathName(const char* path); Expand a pathname getting rid of special shell characaters like ~.$, etc.; For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; environment variables in a pathname. If compatibility is not an issue; you can use on Unix directly $XXX. The user must delete returned string. Bool_t AccessPathName(const char* path, EAccessMode mode = kFileExists); Returns FALSE if one can access a file using the specified access mode.; The file name must not contain any special shell characters line ~ or $,; in those cases first call ExpandPathName().; Attention, bizarre convention of return value!!. Bool_t IsPathLocal(const char* path); Returns TRUE if the url in 'path' points to the local file system.; This is used to avoid going through the NIC card for local operations. int CopyFile(const char* from, const char* to, Bool_t over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:25498,variab,variables,25498,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,6,['variab'],['variables']
Modifiability,". const char * ; subExpression, . bool ; final, . UInt_t ; paran_level, . TObjArray & ; castqueue, . bool ; useLeafCollectionObject, . const char * ; fullExpression . ). protected . Decompose 'expression' as pointing to something inside the leaf Returns: . -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value returns is the action code. . Definition at line 764 of file TTreeFormula.cxx. ◆ PrintValue() [1/2]. char * TTreeFormula::PrintValue ; (; Int_t ; mode, . Int_t ; instance, . const char * ; decform = ""9.9"" . ); const. virtual . Return value of variable as a string. . mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values; decform contains the requested format (with the same convention as printf). . Definition at line 4840 of file TTreeFormula.cxx. ◆ PrintValue() [2/2]. char * TTreeFormula::PrintValue ; (; Int_t ; mode = 0); const. virtual . Return value of variable as a string. . mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values . Definition at line 4826 of file TTreeFormula.cxx. ◆ RegisterDimensions() [1/5]. Int_t TTreeFormula::RegisterDimensions ; (; const char * ; size, . Int_t ; code . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 402 of file TTreeFormula.cxx. ◆ RegisterDimensions() [2/5]. Int_t TTreeFormula::RegisterDimensions ; (; Int_t ; code, . Int_t ; size, . TFormLeafInfoMultiVarDim * ; multidim = nullptr . ). protected . This method stores the dimension information for later usage. ; Definition at line 439 of file TTreeFormula.cxx. ◆ RegisterDimensions() [3/5]. Int_t TTreeFormula::RegisterDimensions ; (; Int_t ; code, . TBranchElement * ; branch . ). protected . This method is used internally to decode the dimensions of the variables. ; Definition at line 555 of file TTreeFormula.cxx. ◆ RegisterDimensions() [4/5]. Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:46839,variab,variable,46839,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variable']
Modifiability,". const std::string & ; ModuleMapName = ""module.modulemap"" . ); const. finalvirtual . Returnstrue if the module map was loaded, false on error or if the map was already loaded. ; Implements TInterpreter.; Definition at line 1906 of file TCling.cxx. ◆ RegisterRdictForLoadPCM(). void TCling::RegisterRdictForLoadPCM ; (; const std::string & ; pcmFileNameFullPath, . llvm::StringRef * ; pcmContent . ). private . Register Rdict data for future loading by LoadPCM;. ; Definition at line 1678 of file TCling.cxx. ◆ RegisterTClassUpdate(). void TCling::RegisterTClassUpdate ; (; TClass * ; oldcl, . DictFuncPtr_t ; dict . ). finalvirtual . Register classes that already existed prior to their dictionary loading and that already had a ClassInfo (and thus would not be refresh via UpdateClassInfo. ; Implements TInterpreter.; Definition at line 2384 of file TCling.cxx. ◆ RegisterTemporary() [1/2]. void TCling::RegisterTemporary ; (; const cling::Value & ; value). Register value as a temporary, extending its lifetime to that of the interpreter. ; This is needed for TCling's compatibility interfaces returning long - the address of the temporary objects. As such, ""simple"" types don't need to be stored; they are returned by value; only pointers / references / objects need to be stored. ; Definition at line 7701 of file TCling.cxx. ◆ RegisterTemporary() [2/2]. void TCling::RegisterTemporary ; (; const TInterpreterValue & ; value). Definition at line 7687 of file TCling.cxx. ◆ ReloadAllSharedLibraryMaps(). Int_t TCling::ReloadAllSharedLibraryMaps ; (; ). finalvirtual . Reload the library map entries coming from all the loaded shared libraries, after first unloading the current ones. ; In case of error -1 is returned, 0 otherwise. ; Implements TInterpreter.; Definition at line 5937 of file TCling.cxx. ◆ RemoveAndInvalidateObject(). template<typename List , typename Object > . static void TCling::RemoveAndInvalidateObject ; (; List & ; L, . Object * ; O . ). inlinestaticprivate . Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:126472,extend,extending,126472,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['extend'],['extending']
Modifiability,". derived classes might need to re-define completly the class. {}. virtual ~GSLSimAnFunc(); virtual distructor (no operations). { }. GSLSimAnFunc & FastCopy(const ROOT::Math::GSLSimAnFunc& f). fast copy method called by GSL simuated annealing internally; copy only the things which have been changed; must be re-implemented by derived classes if needed. GSLSimAnFunc * Clone() const. clone method. Needs to be re-implemented by the derived classes for deep copying. return new GSLSimAnFunc(const ROOT::Math::GSLSimAnFunc& ). double Energy() const. evaluate the energy ( objective function value); re-implement by derived classes if needed to be modified. void Step(const ROOT::Math::GSLRandomEngine& r, double maxstep). change the x[i] value using a random value urndm generated between [0,1]; up to a maximum value maxstep; re-implement by derived classes if needed to be modified. double Distance(const ROOT::Math::GSLSimAnFunc& func) const. calculate the distance (metric) between this one and another configuration; Presently a cartesian metric is used.; re-implement by derived classes if needed to be modified. void Print(). print the position in the standard output ostream; GSL prints in addition n iteration, n function calls, temperature and energy; re-implement by derived classes if necessary. void SetX(const double* x). change the x values (used by sim annealing to take a step). void SetX(unsigned int i, double x). unsigned int NDim() const; { return fX.size(); }. double X(unsigned int i) const; { return fX[i]; }. const std::vector<double> & X() const; { return fX; }. double Scale(unsigned int i) const; { return fScale[i]; }. » Author: L. Moneta Thu Jan 25 11:13:48 2007 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnnealing.h 21553 2007-12-21 10:55:46Z moneta $ » Last generated: 2009-12-07 13:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLSimAnFunc.html:3276,config,configuration,3276,root/html526/ROOT__Math__GSLSimAnFunc.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLSimAnFunc.html,1,['config'],['configuration']
Modifiability,". derived classes might need to re-define completly the class. {}. virtual ~GSLSimAnFunc(); virtual distructor (no operations). { }. GSLSimAnFunc & FastCopy(const ROOT::Math::GSLSimAnFunc& f). fast copy method called by GSL simuated annealing internally; copy only the things which have been changed; must be re-implemented by derived classes if needed. GSLSimAnFunc * Clone() const. clone method. Needs to be re-implemented by the derived classes for deep copying. return new GSLSimAnFunc(const ROOT::Math::GSLSimAnFunc& ). double Energy() const. evaluate the energy ( objective function value); re-implement by derived classes if needed to be modified. void Step(const ROOT::Math::GSLRandomEngine& r, double maxstep). change the x[i] value using a random value urndm generated between [0,1]; up to a maximum value maxstep; re-implement by derived classes if needed to be modified. double Distance(const ROOT::Math::GSLSimAnFunc& func) const. calculate the distance (metric) between this one and another configuration; Presently a cartesian metric is used.; re-implement by derived classes if needed to be modified. void Print(). print the position in the standard output ostream; GSL prints in addition n iteration, n function calls, temperature and energy; re-implement by derived classes if necessary. void SetX(const double* x). change the x values (used by sim annealing to take a step). void SetX(unsigned int i, double x). unsigned int NDim() const; { return fX.size(); }. double X(unsigned int i) const; { return fX[i]; }. const std::vector<double> & X() const; { return fX; }. double Scale(unsigned int i) const; { return fScale[i]; }. » Author: L. Moneta Thu Jan 25 11:13:48 2007 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnnealing.h 21553 2007-12-21 10:55:46Z moneta $ » Last generated: 2010-09-23 19:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLSimAnFunc.html:3276,config,configuration,3276,root/html528/ROOT__Math__GSLSimAnFunc.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLSimAnFunc.html,1,['config'],['configuration']
Modifiability,". derived classes might need to re-define completly the class. {}. virtual ~GSLSimAnFunc(); virtual distructor (no operations). { }. GSLSimAnFunc & FastCopy(const ROOT::Math::GSLSimAnFunc& f). fast copy method called by GSL simuated annealing internally; copy only the things which have been changed; must be re-implemented by derived classes if needed. GSLSimAnFunc * Clone() const. clone method. Needs to be re-implemented by the derived classes for deep copying. return new GSLSimAnFunc(const ROOT::Math::GSLSimAnFunc& ). double Energy() const. evaluate the energy ( objective function value); re-implement by derived classes if needed to be modified. void Step(const ROOT::Math::GSLRandomEngine& r, double maxstep). change the x[i] value using a random value urndm generated between [0,1]; up to a maximum value maxstep; re-implement by derived classes if needed to be modified. double Distance(const ROOT::Math::GSLSimAnFunc& func) const. calculate the distance (metric) between this one and another configuration; Presently a cartesian metric is used.; re-implement by derived classes if needed to be modified. void Print(). print the position in the standard output ostream; GSL prints in addition n iteration, n function calls, temperature and energy; re-implement by derived classes if necessary. void SetX(const double* x). change the x values (used by sim annealing to take a step). void SetX(unsigned int i, double x). unsigned int NDim() const; { return fX.size(); }. double X(unsigned int i) const; { return fX[i]; }. const std::vector<double> & X() const; { return fX; }. double Scale(unsigned int i) const; { return fScale[i]; }. » Author: L. Moneta Thu Jan 25 11:13:48 2007 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnnealing.h 21553 2007-12-21 10:55:46Z moneta $ » Last generated: 2011-07-04 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__GSLSimAnFunc.html:3278,config,configuration,3278,root/html530/ROOT__Math__GSLSimAnFunc.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__GSLSimAnFunc.html,1,['config'],['configuration']
Modifiability,". derived classes might need to re-define completly the class. {}. virtual ~GSLSimAnFunc(); virtual distructor (no operations). { }. GSLSimAnFunc & FastCopy(const ROOT::Math::GSLSimAnFunc& f). fast copy method called by GSL simuated annealing internally; copy only the things which have been changed; must be re-implemented by derived classes if needed. GSLSimAnFunc * Clone() const. clone method. Needs to be re-implemented by the derived classes for deep copying. return new GSLSimAnFunc(const ROOT::Math::GSLSimAnFunc& ). double Energy() const. evaluate the energy ( objective function value); re-implement by derived classes if needed to be modified. void Step(const ROOT::Math::GSLRandomEngine& r, double maxstep). change the x[i] value using a random value urndm generated between [0,1]; up to a maximum value maxstep; re-implement by derived classes if needed to be modified. double Distance(const ROOT::Math::GSLSimAnFunc& func) const. calculate the distance (metric) between this one and another configuration; Presently a cartesian metric is used.; re-implement by derived classes if needed to be modified. void Print(). print the position in the standard output ostream; GSL prints in addition n iteration, n function calls, temperature and energy; re-implement by derived classes if necessary. void SetX(const double* x). change the x values (used by sim annealing to take a step). void SetX(unsigned int i, double x). unsigned int NDim() const; { return fX.size(); }. double X(unsigned int i) const; { return fX[i]; }. const std::vector<double> & X() const; { return fX; }. double Scale(unsigned int i) const; { return fScale[i]; }. » Author: L. Moneta Thu Jan 25 11:13:48 2007 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLSimAnnealing.h 21553 2007-12-21 10:55:46Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLSimAnFunc.html:3278,config,configuration,3278,root/html532/ROOT__Math__GSLSimAnFunc.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLSimAnFunc.html,1,['config'],['configuration']
Modifiability,". double ;  . ). inlinevirtual . set the initial range of an existing variable ; Definition at line 208 of file Minimizer.h. ◆ SetVariableLimits(). virtual bool ROOT::Math::Minimizer::SetVariableLimits ; (; unsigned int ; ivar, . double ; lower, . double ; upper . ). inlinevirtual . set the limits of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 199 of file Minimizer.h. ◆ SetVariableLowerLimit(). bool ROOT::Math::Minimizer::SetVariableLowerLimit ; (; unsigned int ; ivar, . double ; lower . ). virtual . set the lower-limit of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 70 of file Minimizer.cxx. ◆ SetVariables(). template<class VariableIterator > . int ROOT::Math::Minimizer::SetVariables ; (; const VariableIterator & ; begin, . const VariableIterator & ; end . ). inline . add variables . Return number of variables successfully added ; Definition at line 146 of file Minimizer.h. ◆ SetVariableStepSize(). bool ROOT::Math::Minimizer::SetVariableStepSize ; (; unsigned int ; ivar, . double ; value . ). virtual . set the step size of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 62 of file Minimizer.cxx. ◆ SetVariableUpperLimit(). bool ROOT::Math::Minimizer::SetVariableUpperLimit ; (; unsigned int ; ivar, . double ; upper . ). virtual . set the upper-limit of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 78 of file Minimizer.cxx. ◆ SetVariableValue(). bool ROOT::Math::Minimizer::SetVariableValue ; (; unsigned int ; ivar, . double ; value . ). virtual . set the value of an already existing variable ; Reimplemented in TFumiliMinimizer, ROOT::Math::BasicMinimizer,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:33623,variab,variables,33623,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variables']
Modifiability,. enum TSelectorDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTSelectorDraw::fAction! Action type; Bool_tTSelectorDraw::fCleanElisttrue if original Tree elist must be saved; TEvePointSelectorConsumer*fConsumer; Long64_tTSelectorDraw::fCurrentSubEntryCurrent subentry when fSelectMultiple is true. Used to fill TEntryListArray; Int_tTSelectorDraw::fDimensionDimension of the current expression; Long64_tTSelectorDraw::fDraw! Last entry loop number when object was drawn; Int_tTSelectorDraw::fForceReadForce Read flag; TListfInput; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TSelectorDraw::fManagerPointer to the formula manager; Int_tTSelectorDraw::fMultiplicityIndicator of the variability of the size of entries; Int_t*TSelectorDraw::fNbins![fDimension] Number of bins per dimension; Int_tTSelectorDraw::fNfill! Total number of histogram fills; Bool_tTSelectorDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); Long64_tTSelectorDraw::fOldEstimatevalue of Tree fEstimate when selector is called; TH1*TSelectorDraw::fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TSelectorDraw::fSelectPointer to selection formula; Bool_tTSelectorDraw::fSelectMultipletrue if selection has a variable index; Long64_tTSelectorDraw::fSelectedRowsNumber of selected entries; TStringfSelection; Long64_tTSelector::fStatusSelector status; TStringfSubIdExp; Int_tfSubIdN,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEvePointSelector.html:9464,variab,variability,9464,root/html534/TEvePointSelector.html,https://root.cern,https://root.cern/root/html534/TEvePointSelector.html,1,['variab'],['variability']
Modifiability,. enum TSelectorDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTSelectorDraw::fAction! Action type; Bool_tTSelectorDraw::fCleanElisttrue if original Tree elist must be saved; TEvePointSelectorConsumer*fConsumer; Long64_tTSelectorDraw::fCurrentSubEntryCurrent subentry when fSelectMultiple is true. Used to fill TEntryListArray; Int_tTSelectorDraw::fDimensionDimension of the current expression; Long64_tTSelectorDraw::fDraw! Last entry loop number when object was drawn; Int_tTSelectorDraw::fForceReadForce Read flag; TListfInput; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TSelectorDraw::fManagerPointer to the formula manager; Int_tTSelectorDraw::fMultiplicityIndicator of the variability of the size of entries; Int_t*TSelectorDraw::fNbins![fDimension] Number of bins per dimension; Int_tTSelectorDraw::fNfill! Total number of histogram fills; Bool_tTSelectorDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); Long64_tTSelectorDraw::fOldEstimatevalue of Tree fEstimate when selector is called; TH1*TSelectorDraw::fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TSelectorDraw::fSelectPointer to selection formula; Bool_tTSelectorDraw::fSelectMultipletrue if selection has a variable index; Long64_tTSelectorDraw::fSelectedRowsNumber of selected entries; TStringfSelection; Long64_tTSelector::fStatusselector status; TStringfSubIdExp; Int_tfSubIdNum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEvePointSelector.html:9398,variab,variability,9398,root/html532/TEvePointSelector.html,https://root.cern,https://root.cern/root/html532/TEvePointSelector.html,1,['variab'],['variability']
Modifiability,". find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1148 of file Minuit2Minimizer.cxx. ◆ Correlation(). double ROOT::Minuit2::Minuit2Minimizer::Correlation ; (; unsigned int ; i, . unsigned int ; j . ); const. overridevirtual . return correlation coefficient between variable i and j. ; If the variable is fixed or const the return value is zero ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 815 of file Minuit2Minimizer.cxx. ◆ CovMatrix(). double ROOT::Minuit2::Minuit2Minimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. overridevirtual . return covariance matrix elements if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ; This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 739 of file Minuit2Minimizer.cxx. ◆ CovMatrixStatus(). int ROOT::Minuit2::Minuit2Minimizer::CovMatrixStatus ; (; ); const. overridevirtual . return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defined status = 1 : covariance only approximate status = 2 : full matrix but forced pos def status = 3 : full accurate matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1298 of file Minuit2Minimizer.cxx. ◆ Edm(). double ROOT::Minuit2::Minuit2Minimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 140 of file Minuit2Minimizer.h. ◆ Errors(). const double * ROOT::Minuit2::Minuit2Minimizer::Errors ; (; ); const. overridevirtual . return errors at the minimum ; Reimplemente",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:14583,variab,variable,14583,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variable']
Modifiability,". inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:15828,variab,variable,15828,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['variab'],['variable']
Modifiability,". master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineJames< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineJames< p >; Definition at line 61 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineJames (uint64_t seed=314159265);  ;  ~RanluxppCompatEngineJames () override;  ; uint64_t IntRndm ();  Generate a random integer value with 24 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 24 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 24, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineJames< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineJames< p >::ImplType = RanluxppEngineImpl<24, p>. private . Definition at line 64 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineJames(). template<int p> . ROOT::Math::RanluxppCompatEngineJames< p >::RanluxppCompatEngineJames ; (; uint64_t ; seed = 314159265). Definition at line 445 of file RanluxppEngineImpl.cxx. ◆ ~RanluxppCompatEngineJames(). template<int p> . ROOT::Math::RanluxppCompatEn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineJames.html:1067,inherit,inherited,1067,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineJames.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineJames.html,1,['inherit'],['inherited']
Modifiability,". master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMixture Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; Manages a detector mixture. ; See class TGeometry. ; Definition at line 27 of file TMixture.h. Public Member Functions;  TMixture ();  Mixture default constructor. ;  ;  TMixture (const char *name, const char *title, Int_t nmixt);  Mixture normal constructor. ;  ;  ~TMixture () override;  Mixture default destructor. ;  ; virtual void DefineElement (Int_t n, Float_t a, Float_t z, Float_t w);  Define one mixture element. ;  ; Float_t * GetAmixt () const;  ; Int_t GetNmixt () const;  ; Float_t * GetWmixt () const;  ; Float_t * GetZmixt () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMaterial;  TMaterial ();  Material default constructor. ;  ;  TMaterial (const char *name, const char *title, Float_t a, Float_t z, Float_t density);  Material normal constructor. ;  ;  TMaterial (const char *name, const char *title, Float_t a, Float_t z, Float_t density, Float_t radl, Float_t inter);  Material normal constructor. ;  ;  ~TMaterial () override;  Material default destructor. ;  ; virtual Float_t GetA () const;  ; virtual Float_t GetDensity () const;  ; virtual Float_t GetInterLength () const;  ; virtual Int_t GetNumber () const;  ; virtual Float_t GetRadLength () const;  ; virtual Float_t GetZ () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMixture.html:1057,inherit,inherited,1057,doc/master/classTMixture.html,https://root.cern,https://root.cern/doc/master/classTMixture.html,1,['inherit'],['inherited']
Modifiability,". master. Reference Guide ; .  . Loading...; Searching...; No Matches. exec1.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Echo object at mouse position. ; Example of macro called when a pad is redrawn one must create a TExec object in the following way gPad->AddExec(""ex1"", "".x exec1.C"");; gPad#define gPadDefinition TVirtualPad.h:308; this macro prints the bin number and the bin content when one clicks on the histogram contour of any histogram in a pad; ; ; void exec1(); {; if (!gPad) {; Error(""exec1"", ""gPad is null, you are not supposed to run this macro"");; return;; }; ; Int_t event = gPad->GetEvent();; int px = gPad->GetEventX();; TObject *select = gPad->GetSelected();; ; if (select && select->InheritsFrom(TH1::Class())) {; TH1 *h = (TH1*)select;; Float_t xx = gPad->AbsPixeltoX(px);; Float_t x = gPad->PadtoX(xx);; Int_t binx = h->GetXaxis()->FindBin(x);; printf(""event=%d, hist:%s, bin=%d, content=%f\n"", event, h->GetName(), binx, h->GetBinContent(binx));; }; }; ; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; TAxis::FindBinvirtual Int_t FindBin(Double_t x)Find bin number corresponding to abscissa x.Definition TAxis.cxx:293; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::Classstatic TClass * Class(); TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; xDouble_t x[n]Definition legend1.C:17; AuthorsRene Brun, Sergey Linev ; Definition in file exec1.C. tutorialshistexec1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exec1_8C.html:1771,inherit,inherits,1771,doc/master/exec1_8C.html,https://root.cern,https://root.cern/doc/master/exec1_8C.html,1,['inherit'],['inherits']
Modifiability,". overridevirtual . Reimplemented from RooAbsPdf.; Definition at line 1208 of file RooSimultaneous.cxx. ◆ DeclFileName(). static const char * RooSimultaneous::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 147 of file RooSimultaneous.h. ◆ evaluate(). double RooSimultaneous::evaluate ; (; ); const. overridevirtual . Return the current value: the value of the PDF associated with the current index category state. ; Implements RooAbsReal.; Definition at line 474 of file RooSimultaneous.cxx. ◆ expectedEvents(). double RooSimultaneous::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the number of expected events: If the index is in nset, then return the sum of the expected events of all components, otherwise return the number of expected events of the PDF associated with the current index category state. ; Reimplemented from RooAbsPdf.; Definition at line 506 of file RooSimultaneous.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooSimultaneous::extendMode ; (; ); const. overridevirtual . Examine the pdf components and check if one of them can be extended or must be extended. ; It is enough to have one component that can be extended or must be extended to return the flag in the total simultaneous pdf. ; Reimplemented from RooAbsPdf.; Definition at line 434 of file RooSimultaneous.cxx. ◆ fillDataHist(). RooDataHist * RooSimultaneous::fillDataHist ; (; RooDataHist * ; hist, . const RooArgSet * ; nset, . double ; scaleFactor, . bool ; correctForBinVolume = false, . bool ; showProgress = false . ); const. virtual . Definition at line 1025 of file RooSimultaneous.cxx. ◆ flattenedCatList(). RooArgSet const & RooSimultaneous::flattenedCatList ; (; ); const. protected . Internal utility function to get a list of all category components for this RooSimultaneous. ; The output contains only the index category if it is a RooCategory, or the list of all category components if it is a RooSuper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:84464,extend,extendMode,84464,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['extend'],['extendMode']
Modifiability,". overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooLognormal::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file RooLognormal.h. ◆ translate(). void RooLognormal::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 85 of file RooLognormal.cxx. ◆ useStandardParametrization(). bool RooLognormal::useStandardParametrization ; (; ); const. inline . Definition at line 44 of file RooLognormal.h. Member Data Documentation. ◆ _useStandardParametrization. bool RooLognormal::_useStandardParametrization = false. protected . Definition at line 50 of file RooLognormal.h. ◆ k. RooRealProxy RooLognormal::k. protected . the shape parameter, exp(sigma) ; Definition at line 49 of file RooLognormal.h. ◆ m0. RooRealProxy RooLognormal::m0. protected . the median, exp(mu) ; Definition at line 48 of file RooLognormal.h. ◆ x. RooRealProxy RooLognormal::x. protected . the variable ; Definition at line 47 of file RooLognormal.h. Libraries for RooLognormal:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooLognormal.h; roofit/roofit/src/RooLognormal.cxx. RooLognormal. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:81703,variab,variable,81703,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,1,['variab'],['variable']
Modifiability,". overridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 654 of file TMinuitMinimizer.cxx. ◆ Errors(). const double * TMinuitMinimizer::Errors ; (; ); const. inlineoverridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 140 of file TMinuitMinimizer.h. ◆ Fcn(). void TMinuitMinimizer::Fcn ; (; int & ; , . double * ; , . double & ; f, . double * ; x, . int ;  . ). staticprotected . implementation of FCN for Minuit ; Definition at line 224 of file TMinuitMinimizer.cxx. ◆ FcnGrad(). void TMinuitMinimizer::FcnGrad ; (; int & ; , . double * ; g, . double & ; f, . double * ; x, . int ; iflag . ). staticprotected . implementation of FCN for Minuit when user provided gradient is used ; Definition at line 230 of file TMinuitMinimizer.cxx. ◆ FixVariable(). bool TMinuitMinimizer::FixVariable ; (; unsigned int ; ivar). overridevirtual . fix an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 388 of file TMinuitMinimizer.cxx. ◆ GetCovMatrix(). bool TMinuitMinimizer::GetCovMatrix ; (; double * ; cov); const. overridevirtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 670 of file TMinuitMinimizer.cxx. ◆ GetHessianMatrix(). bool TMinuitMinimizer::GetHessianMatrix ; (; double * ; h); const. overridevirtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:16186,variab,variable,16186,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,". private . compute square-root matrices for signal and background ; Definition at line 244 of file VariableDecorrTransform.cxx. ◆ Class(). static TClass * TMVA::VariableDecorrTransform::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::VariableDecorrTransform::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::VariableDecorrTransform::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file VariableDecorrTransform.h. ◆ DeclFileName(). static const char * TMVA::VariableDecorrTransform::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file VariableDecorrTransform.h. ◆ GetTransformationStrings(). std::vector< TString > * TMVA::VariableDecorrTransform::GetTransformationStrings ; (; Int_t ; cls); const. virtual . creates string with variable transformations applied ; Reimplemented from TMVA::VariableTransformBase.; Definition at line 114 of file VariableDecorrTransform.cxx. ◆ Initialize(). void TMVA::VariableDecorrTransform::Initialize ; (; ). virtual . initialisation ; Implements TMVA::VariableTransformBase.; Definition at line 75 of file VariableDecorrTransform.cxx. ◆ InverseTransform(). const TMVA::Event * TMVA::VariableDecorrTransform::InverseTransform ; (; const Event * const ; , . Int_t ; cls . ); const. virtual . apply the inverse decorrelation transformation ... TODO : ... build the inverse transformation ; Implements TMVA::VariableTransformBase.; Definition at line 233 of file VariableDecorrTransform.cxx. ◆ IsA(). virtual TClass * TMVA::VariableDecorrTransform::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::VariableTransformBase.; Definition at line 85 of file VariableDecorrTransform.h. ◆ MakeFunction(). void TMVA::VariableDecorrTransform::MakeFunction ; (; std::ostream & ; fout, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html:17154,variab,variable,17154,doc/master/classTMVA_1_1VariableDecorrTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html,1,['variab'],['variable']
Modifiability,". protected . ! True if we executed one boolean optimization since the last time instance number 0 was evaluated ; Definition at line 123 of file TTreeFormula.h. ◆ fDimensionSetup. TList* TTreeFormula::fDimensionSetup. protected . ! list of dimension setups, for delayed creation of the dimension information. ; Definition at line 127 of file TTreeFormula.h. ◆ fExternalCuts. TObjArray TTreeFormula::fExternalCuts. protected . ! List of TCutG and TEntryList used in the formula ; Definition at line 106 of file TTreeFormula.h. ◆ fFixedSizes. Int_t TTreeFormula::fFixedSizes[kMAXCODES][kMAXFORMDIM]. protected . Physical sizes of lower dimensions for each leaf. ; Definition at line 114 of file TTreeFormula.h. ◆ fHasCast. bool TTreeFormula::fHasCast. protected . Record whether the formula contain a cast operation or not. ; Definition at line 99 of file TTreeFormula.h. ◆ fHasMultipleVarDim. UChar_t TTreeFormula::fHasMultipleVarDim[kMAXCODES]. protected . True if the corresponding variable is an array with more than one variable dimension. ; Definition at line 115 of file TTreeFormula.h. ◆ fIndexes. Int_t TTreeFormula::fIndexes[kMAXCODES][kMAXFORMDIM]. protected . Index of array selected by user for each leaf. ; Definition at line 119 of file TTreeFormula.h. ◆ fLeafNames. TObjArray TTreeFormula::fLeafNames. protected . List of TNamed describing leaves. ; Definition at line 108 of file TTreeFormula.h. ◆ fLeaves. TObjArray TTreeFormula::fLeaves. protected . ! List of leaf used in this formula. ; Definition at line 103 of file TTreeFormula.h. ◆ fLookupType. Int_t* TTreeFormula::fLookupType. protected . [fNindex] Array indicating how each leaf should be looked-up ; Definition at line 102 of file TTreeFormula.h. ◆ fManager. TTreeFormulaManager* TTreeFormula::fManager. protected . ! The dimension coordinator. ; Definition at line 124 of file TTreeFormula.h. ◆ fMethods. TObjArray TTreeFormula::fMethods. protected . ! List of leaf method calls ; Definition at line 105 of file TTreeForm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:53487,variab,variable,53487,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,2,['variab'],['variable']
Modifiability,. protected . Default minimum for Yaxis (as calculated from contents) ; Definition at line 249 of file RooPlot.h. ◆ _dir. TDirectory* RooPlot::_dir = nullptr. protected . ! non-persistent ; Definition at line 252 of file RooPlot.h. ◆ _hist. TH1* RooPlot::_hist = nullptr. protected . Histogram that we uses as basis for drawing the content. ; Definition at line 238 of file RooPlot.h. ◆ _items. Items RooPlot::_items. protected . A list of the items we contain. ; Definition at line 239 of file RooPlot.h. ◆ _normBinWidth. double RooPlot::_normBinWidth = 0. protected . Histogram bin width (for normalization) ; Definition at line 247 of file RooPlot.h. ◆ _normNumEvts. double RooPlot::_normNumEvts = 0. protected . Number of events in histogram (for normalization) ; Definition at line 246 of file RooPlot.h. ◆ _normObj. const RooPlotable* RooPlot::_normObj = nullptr. protected . ! Pointer to normalization object ; ; Definition at line 245 of file RooPlot.h. ◆ _normVars. RooArgSet* RooPlot::_normVars = nullptr. protected . Variables that PDF plots should be normalized over. ; Definition at line 243 of file RooPlot.h. ◆ _padFactor. double RooPlot::_padFactor. protected . Scale our y-axis to _padFactor of our maximum contents. ; Definition at line 240 of file RooPlot.h. ◆ _plotVar. RooAbsRealLValue* RooPlot::_plotVar = nullptr. protected . The variable we are plotting. ; Definition at line 241 of file RooPlot.h. ◆ _plotVarSet. RooArgSet* RooPlot::_plotVarSet = nullptr. protected . A list owning the cloned tree nodes of the plotVarClone. ; Definition at line 242 of file RooPlot.h. ◆ title. Use the constructor that doesn t take the name and RooPlot::title. Definition at line 51 of file RooPlot.h. Libraries for RooPlot:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooPlot.h; roofit/roofitcore/src/RooPlot.cxx. RooPlot. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:04 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:57571,variab,variable,57571,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variable']
Modifiability,". protected . This function calculates 2D Haar and Walsh transforms Function parameters: . working_matrix-pointer to matrix of transformed data; working_vector-pointer to vector where the data are processed; numx,numy-lengths of processed data; direction-forward or inverse; type-type of transform (see manual) . Definition at line 685 of file TSpectrum2Transform.cxx. ◆ IsA(). TClass * TSpectrum2Transform::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 73 of file TSpectrum2Transform.h. ◆ SetDirection(). void TSpectrum2Transform::SetDirection ; (; Int_t ; direction). This function sets the direction of the transform: . direction (forward or inverse) . Definition at line 2762 of file TSpectrum2Transform.cxx. ◆ SetEnhanceCoeff(). void TSpectrum2Transform::SetEnhanceCoeff ; (; Double_t ; enhanceCoeff). This function sets the enhancement coefficient: . enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation. . Definition at line 2784 of file TSpectrum2Transform.cxx. ◆ SetFilterCoeff(). void TSpectrum2Transform::SetFilterCoeff ; (; Double_t ; filterCoeff). This function sets the filter coefficient: . filterCoeff - after the transform the filtered region (xmin, xmax, ymin, ymax) is replaced by this coefficient. Applies only for filtereng operation. . Definition at line 2775 of file TSpectrum2Transform.cxx. ◆ SetRegion(). void TSpectrum2Transform::SetRegion ; (; Int_t ; xmin, . Int_t ; xmax, . Int_t ; ymin, . Int_t ; ymax . ). This function sets the filtering or enhancement region: . xmin, xmax, ymin, ymax . Definition at line 2742 of file TSpectrum2Transform.cxx. ◆ SetTransformType(). void TSpectrum2Transform::SetTransformType ; (; Int_t ; transType, . Int_t ; degree . ). This function sets the following parameters for transform: . transType - type of transform (Haar, Walsh, Cosine, Sine, Fourie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:28303,enhance,enhanceCoeff,28303,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,2,['enhance'],"['enhanceCoeff', 'enhanced']"
Modifiability,". pt is in the friend tree.; t3->Draw(""pz"",""pt>3"");; }. // This is executed when typing .x tree3.C; void tree3() {; tree3w();; tree3r();; }; 12.17 Example 4: A Tree with an Event Class; This example is a simplified version of $ROOTSYS/test/MainEvent.cxx and where Event objects are saved in a tree. The full definition of Event is in $ROOTSYS/test/Event.h. To execute this macro, you will need the library $ROOTSYS/test/libEvent.so. If it does not exist you can build the test directory applications by following the instruction in the $ROOTSYS/test/README file.; In this example we will show. the difference in splitting or not splitting a branch; how to read selected branches of the tree,; how to print a selected entry. 12.17.1 The Event Class; Event is a descendent of TObject. As such it inherits the data members of TObject and its methods such as Dump() and Inspect()andWrite(). In addition, because it inherits from TObject it can be a member of a collection. To summarize, the advantages of inheriting from a TObject are:. Inherit the Write, Inspect, and Dump methods; Enables a class to be a member of a ROOT collection; Enables RTTI. Below is the list of the Event data members. It contains a character array, several integers, a floating-point number, and an EventHeader object. The EventHeader class is described in the following paragraph. Event also has two pointers, one to a TClonesArray of tracks and one to a histogram. The string “->” in the comment field of the members *fTracks and *fH instructs the automatic Streamer to assume that the objects *fTracks and *fH are never null pointers and that fTracks->Streamer can be used instead of the more time consuming form R__b << fTracks.; class Event : public TObject {; private:; char fType[20];; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Float_t fTemperature;; EventHeader fEvtHdr;; TClonesArray *fTracks; //->; TH1F *fH; //->; Int_t fMeasures[10];; Float_t fMatrix[4][4];; Float_t *fClosestDistance; //[fNvert",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:575530,inherit,inheriting,575530,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inheriting']
Modifiability,". static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling the function with a negative argument (e.g., ""NoMsg( -1 )"") resets gErrorIgnoreLevel to its previous value. ; Definition at line 1108 of file TTabCom.cxx. ◆ operator=(). TTabCom & TTabCom::operator= ; (; const TTabCom & ; ). privatedelete . ◆ ParseReverse(). int TTabCom::ParseReverse ; (; const char * ; var_str, . int ; start . ). private . Returns the place in the string where to put the \0, starting the search from ""start"". ; Definition at line 2565 of file TTabCom.cxx. ◆ PathIsSpecifiedInFileName(). Bool_t TTabCom::PathIsSpecifiedInFileName ; (; const TString & ; fileName). static . [static utility function]///////////////////////////// ; true if ""fileName""; is an absolute path (""/tmp/a""); is a relative path (""../whatever"", ""./test""); starts with user name (""~/mail""); starts with an environment variable (""$ROOTSYS/bin"") . Definition at line 1088 of file TTabCom.cxx. ◆ RehashAll(). void TTabCom::RehashAll ; (; ). clears and then rebuilds all lists except for user names and system include files. ; Definition at line 415 of file TTabCom.cxx. ◆ RehashClasses(). void TTabCom::RehashClasses ; (; ). Do the class rehash. ; Definition at line 335 of file TTabCom.cxx. ◆ RehashCppDirectives(). void TTabCom::RehashCppDirectives ; (; ). Cpp rehashing. ; Definition at line 344 of file TTabCom.cxx. ◆ RehashEnvVars(). void TTabCom::RehashEnvVars ; (; ). Environemnt variables rehashing. ; Definition at line 353 of file TTabCom.cxx. ◆ RehashFiles(). void TTabCom::RehashFiles ; (; ). Close files. ; Definition at line 362 of file TTabCom.cxx. ◆ RehashGlobalFunctions(). void TTabCom::RehashGlobalFunctions ; (; ). Reload global functions. ; Definition at line 370 of file TTabCom.cxx. ◆ RehashGlobals(). void TTabCom::RehashGlobals ; (; ). Reload globals. ; Definition at line 37",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:17543,variab,variable,17543,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['variab'],['variable']
Modifiability,". static . when this static function is called, it sets the flag whether events with negative event weight should be ignored in the training, or not. ; Definition at line 399 of file Event.cxx. ◆ SetSpectator(). void TMVA::Event::SetSpectator ; (; UInt_t ; ivar, . Float_t ; value . ). set spectator value (dimension ivar) to value ; Definition at line 376 of file Event.cxx. ◆ SetSpectatorTypes(). void TMVA::Event::SetSpectatorTypes ; (; const std::vector< char > & ; types). inline . Definition at line 119 of file Event.h. ◆ SetTarget(). void TMVA::Event::SetTarget ; (; UInt_t ; itgt, . Float_t ; value . ). set the target value (dimension itgt) to value ; Definition at line 367 of file Event.cxx. ◆ SetVal(). void TMVA::Event::SetVal ; (; UInt_t ; ivar, . Float_t ; val . ). set variable ivar to val ; Definition at line 348 of file Event.cxx. ◆ SetVariableArrangement(). void TMVA::Event::SetVariableArrangement ; (; std::vector< UInt_t > *const ; m); const. set the variable arrangement ; Definition at line 191 of file Event.cxx. ◆ SetWeight(). void TMVA::Event::SetWeight ; (; Double_t ; w). inline . Definition at line 110 of file Event.h. ◆ Streamer(). virtual void TMVA::Event::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TMVA::Event::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 153 of file Event.h. Friends And Related Symbol Documentation. ◆ operator<<. std::ostream & operator<< ; (; std::ostream & ; os, . const Event & ; event . ). friend . Member Data Documentation. ◆ fBoostWeight. Double_t TMVA::Event::fBoostWeight. mutableprivate . internal weight to be set by boosting algorithm ; Definition at line 148 of file Event.h. ◆ fClass. UInt_t TMVA::Event::fClass. private . class number ; Definition at line 146 of file Event.h. ◆ fDoNotBoost. Bool_t TMVA::Event::fDoNotBoost. mutableprivate . mark event as not to be boosted (used to compens",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Event.html:21696,variab,variable,21696,doc/master/classTMVA_1_1Event.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Event.html,1,['variab'],['variable']
Modifiability,. static const TGPicture*fgListTreeIcons[9]; static const TGPicture*fgRnrIcons[4]; static TEveElement::EChangeBitskCBColorSelection; static TEveElement::EChangeBitskCBObjProps; static TEveElement::EChangeBitskCBTransBBox; static TEveElement::EChangeBitskCBVisibility. protected:. UChar_tfCSCBits; Bool_tfCanEditMainColorAllow editing of main color.; Bool_tfCanEditMainTransAllow editing of main transformation.; Bool_tfCanEditMainTransparencyAllow editing of main transparency.; UChar_tfChangeBits!; TEveElement::List_tfChildrenList of children.; TEveCompound*fCompoundCompound this object belongs to.; Int_tfDenyDestroy! Deny-destroy count.; Bool_tfDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tfDestructing!; Bool_tfHighlighted!; Short_tfImpliedHighlighted!; Short_tfImpliedSelected!; TEveElement::sLTI_tfItems! Set of list-tree-items.; Color_t*fMainColorPtrPointer to main-color variable.; TEveTrans*fMainTransPointer to main transformation matrix.; Char_tfMainTransparencyMain-transparency variable.; Int_tfNumChildren!; Int_tfParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tfParentsList of parents.; Bool_tfPickable; Bool_tfRnrChildrenRender children of this element.; Bool_tfRnrSelfRender this element.; Bool_tfSelected!; TReffSourceExternal object that is represented by this element.; Int_tfTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*fUserData! Externally assigned and controlled user data.; TEveElement*fVizModel! Element used as model from VizDB.; TStringfVizTagTag used to query VizDB for model element.; static TEveElement::EDestructkAnnihilate; static TEveElement::ECompoundSelectionColorBitskCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitskCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitskCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitskCSCBApplyMainTransparenc,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveElement.html:9860,variab,variable,9860,root/html602/TEveElement.html,https://root.cern,https://root.cern/root/html602/TEveElement.html,2,['variab'],['variable']
Modifiability,. tableDescriptor_st. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; inheritance tree (.pdf) viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MISC; » TABLE; » tableDescriptor_st. class tableDescriptor_st. Function Members (Methods); public:. ~tableDescriptor_st(); tableDescriptor_st&operator=(const tableDescriptor_st&); tableDescriptor_st&operator=(tableDescriptor_st&&); tableDescriptor_st(); tableDescriptor_st(const tableDescriptor_st&); tableDescriptor_st(tableDescriptor_st&&). Data Members; public:. charfColumnName[32]The name of this data-member: see dstype.h for dsl compatible mode */; unsigned intfDimensionsThe number of the dimensions for array */; unsigned intfIndexArray[3]The array of the sizes for each dimensions fIndexArray[fDimensions]*/; unsigned intfOffsetThe first byte in the row of this column */; unsigned intfSizeThe full size of the selected column in bytes */; intfTypeThe data type of the selected column */; unsigned intfTypeSizeThe type size of the selected column in bytes */. Class Charts. Inheritance Chart:. tableDescriptor_st. Function documentation. » Last changed: Tue Jun 30 15:32:59 2015 » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/tableDescriptor_st.html:113,inherit,inheritance,113,root/html602/tableDescriptor_st.html,https://root.cern,https://root.cern/root/html602/tableDescriptor_st.html,1,['inherit'],['inheritance']
Modifiability,". the result of the classification if; the event for this decision tree. Double_t SamplePurity(TMVA::DecisionTree::EventList eventSample); calculates the purity S/(S+B) of a given event sample. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); returns the relative improtance of variable ivar. DecisionTreeNode* GetRoot() const; Retrieves the address of the root node. { return dynamic_cast<TMVA::DecisionTreeNode*>(fRoot); }. DecisionTreeNode * CreateNode(UInt_t ) const; { return new DecisionTreeNode(); }. BinaryTree* CreateTree() const; { return new DecisionTree(); }. const char* ClassName() const; { return ""DecisionTree""; }. Double_t TrainNode(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); determine the way how a node is split (which variable, which cut value). { return TrainNodeFast( eventSample, node ); }. void SetPruneMethod(TMVA::DecisionTree::EPruneMethod m = kCostComplexityPruning); { fPruneMethod = m; }. void SetPruneStrength(Double_t p); manage the pruning strength parameter (iff < 0 -> automate the pruning process). { fPruneStrength = p; }. Double_t GetPruneStrength() const; { return fPruneStrength; }. void SetNodePurityLimit(Double_t p); { fNodePurityLimit = p; }. Double_t GetNodePurityLimit() const; { return fNodePurityLimit; }. void SetTreeID(Int_t treeID); {fTreeID = treeID;}. Int_t GetTreeID(); {return fTreeID;}. Bool_t DoRegression() const; { return fAnalysisType == Types::kRegression; }. void SetAnalysisType(TMVA::Types::EAnalysisType t); { fAnalysisType = t;}. Types::EAnalysisType GetAnalysisType( void ); { return fAnalysisType;}. void SetUseFisherCuts(Bool_t t = kTRUE); { fUseFisherCuts = t;}. void SetMinLinCorrForFisher(Double_t min); {fM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__DecisionTree.html:15210,variab,variable,15210,root/html528/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html528/TMVA__DecisionTree.html,3,['variab'],['variable']
Modifiability,". timespec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » timespec. class timespec. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; struct timespec; {; time_t tv_sec; /* seconds *; long tv_nsec; /* nanoseconds *; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC. No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; Jan 18, 19:14:07, 2038.; If this experiment is still going when it becomes significant; someone will have to deal with it. This class is also known as (typedefs to this class)timespec_t. Function Members (Methods); public:. timespec(); timespec(const timespec&); ~timespec(); timespec&operator=(const timespec&). Data Members; public:. longtv_nsecnanoseconds; time_ttv_secseconds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Author: R. Hatcher 30/9/2001 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TTimeStamp.h 32404 2010-02-25 12:06:10Z rdm $ » Last generated: 2010-09-23 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/timespec.html:304,extend,extends,304,root/html528/timespec.html,https://root.cern,https://root.cern/root/html528/timespec.html,1,['extend'],['extends']
Modifiability,". timespec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » timespec. class timespec. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; struct timespec; {; time_t tv_sec; /* seconds *; long tv_nsec; /* nanoseconds *; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC. No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; Jan 18, 19:14:07, 2038.; If this experiment is still going when it becomes significant; someone will have to deal with it. This class is also known as (typedefs to this class)timespec_t. Function Members (Methods); public:. timespec(); timespec(const timespec&); ~timespec(); timespec&operator=(const timespec&). Data Members; public:. longtv_nsecnanoseconds; time_ttv_secseconds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Author: R. Hatcher 30/9/2001 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/timespec.html:306,extend,extends,306,root/html534/timespec.html,https://root.cern,https://root.cern/root/html534/timespec.html,1,['extend'],['extends']
Modifiability,". timespec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » timespec. class timespec. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; struct timespec; {; time_t tv_sec; /* seconds *; long tv_nsec; /* nanoseconds *; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC. No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; Jan 18, 19:14:07, 2038.; If this experiment is still going when it becomes significant; someone will have to deal with it. This class is also known as (typedefs to this class)timespec_t. Function Members (Methods); public:. timespec(); timespec(const timespec&); ~timespec(); timespec&operator=(const timespec&). Data Members; public:. longtv_nsecnanoseconds; time_ttv_secseconds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Author: R. Hatcher 30/9/2001 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TTimeStamp.h 32404 2010-02-25 12:06:10Z rdm $ » Last generated: 2011-07-04 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/timespec.html:306,extend,extends,306,root/html530/timespec.html,https://root.cern,https://root.cern/root/html530/timespec.html,1,['extend'],['extends']
Modifiability,". timespec. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » timespec. class timespec. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; struct timespec; {; time_t tv_sec; /* seconds *; long tv_nsec; /* nanoseconds *; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC. No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; Jan 18, 19:14:07, 2038.; If this experiment is still going when it becomes significant; someone will have to deal with it. This class is also known as (typedefs to this class)timespec_t. Function Members (Methods); public:. timespec(); timespec(const timespec&); ~timespec(); timespec&operator=(const timespec&). Data Members; public:. longtv_nsecnanoseconds; time_ttv_secseconds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Author: R. Hatcher 30/9/2001 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TTimeStamp.h 32404 2010-02-25 12:06:10Z rdm $ » Last generated: 2011-11-03 20:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/timespec.html:306,extend,extends,306,root/html532/timespec.html,https://root.cern,https://root.cern/root/html532/timespec.html,1,['extend'],['extends']
Modifiability,". virtual void TParallelCoord::SetCurveDisplay ; (; bool ; curve = true). inlinevirtual . Definition at line 114 of file TParallelCoord.h. ◆ SetDotsSpacing(). void TParallelCoord::SetDotsSpacing ; (; Int_t ; s = 0). Set dots spacing. ; Modify the line style 11. If the canvas support transparency dot spacing is ignored. ; Definition at line 1114 of file TParallelCoord.cxx. ◆ SetEntryList(). void TParallelCoord::SetEntryList ; (; TParallelCoord * ; para, . TEntryList * ; enlist . ). static . Set the entry lists of ""para"". ; Definition at line 1125 of file TParallelCoord.cxx. ◆ SetGlobalLogScale(). void TParallelCoord::SetGlobalLogScale ; (; bool ; lt). All axes in log scale. ; Definition at line 971 of file TParallelCoord.cxx. ◆ SetGlobalMax(). void TParallelCoord::SetGlobalMax ; (; Double_t ; max). Force all variables to adopt the same max. ; Definition at line 1134 of file TParallelCoord.cxx. ◆ SetGlobalMin(). void TParallelCoord::SetGlobalMin ; (; Double_t ; min). Force all variables to adopt the same min. ; Definition at line 1146 of file TParallelCoord.cxx. ◆ SetGlobalScale(). void TParallelCoord::SetGlobalScale ; (; bool ; gl). Constraint all axes to the same scale. ; Definition at line 984 of file TParallelCoord.cxx. ◆ SetInitEntries(). void TParallelCoord::SetInitEntries ; (; TEntryList * ; entries). inline . Definition at line 126 of file TParallelCoord.h. ◆ SetLineColor(). void TParallelCoord::SetLineColor ; (; Color_t ; col). inline . Definition at line 127 of file TParallelCoord.h. ◆ SetLineWidth(). void TParallelCoord::SetLineWidth ; (; Width_t ; wid). inline . Definition at line 128 of file TParallelCoord.h. ◆ SetLiveRangesUpdate(). void TParallelCoord::SetLiveRangesUpdate ; (; bool ; on). If true, the pad is updated while the motion of a dragged range. ; Definition at line 1158 of file TParallelCoord.cxx. ◆ SetNentries(). void TParallelCoord::SetNentries ; (; Long64_t ; n). inline . Definition at line 130 of file TParallelCoord.h. ◆ SetTree(). void TPara",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:35074,variab,variables,35074,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variables']
Modifiability,". void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 206 of file TStreamerInfoActions.cxx. ◆ ReadBasicType< BitsMarker >(). template<> . Int_t TStreamerInfoActions::ReadBasicType< BitsMarker > ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 235 of file TStreamerInfoActions.cxx. ◆ ReadBasicType_NoFactor(). template<typename T > . Int_t TStreamerInfoActions::ReadBasicType_NoFactor ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 919 of file TStreamerInfoActions.cxx. ◆ ReadBasicType_WithFactor(). template<typename T > . Int_t TStreamerInfoActions::ReadBasicType_WithFactor ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 900 of file TStreamerInfoActions.cxx. ◆ ReadLoopInvalid(). Int_t TStreamerInfoActions::ReadLoopInvalid ; (; TBuffer & ; , . void * ; , . const void * ; , . const TConfiguration * ; config . ). Definition at line 1685 of file TStreamerInfoActions.cxx. ◆ ReadSTL(). template<void(*)(TBuffer &, void *, const TConfiguration *, Version_t) memberwise, void(*)(TBuffer &, void *, const TConfiguration *, Version_t, UInt_t) objectwise> . Int_t TStreamerInfoActions::ReadSTL ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; conf . ). inline . Definition at line 1399 of file TStreamerInfoActions.cxx. ◆ ReadSTLMemberWiseChangedClass(). void TStreamerInfoActions::ReadSTLMemberWiseChangedClass ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; conf, . Version_t ; vers . ). inline . Definition at line 1266 of file TStreamerInfoActions.cxx. ◆ ReadSTLMemberWiseSameClass(). void TStreamerInfoActions::ReadSTLMemberWiseSameClass ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; conf, . Version_t ; vers . ). inline . Definition at line 1122 of file TStreamerInfoActions.cxx. ◆ ReadSTLObjectWiseFastArray(). void TStreamerInfoActions:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:12364,config,config,12364,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,". void SetCurrentStreamerInfo(TVirtualStreamerInfo* info); Set pointer to current TVirtualStreamerInfo. Int_t Size() const; Return size of object of this class. TClass * Load(TBuffer& b); Load class description from I/O buffer and return class object. void Store(TBuffer& b) const; Store class description on I/O buffer. Bool_t IsLoaded() const; Return true if the shared library of this class is currently in the a; process's memory. Return false, after the shared library has been; unloaded or if this is an 'emulated' class created from a file's StreamerInfo. Bool_t IsStartingWithTObject() const; Returns true if this class inherits from TObject and if the start of; the TObject parts is at the very beginning of the objects.; Concretly this means that the following code is proper for this class:; ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from; TObject. Bool_t IsTObject() const; Return kTRUE is the class inherits from TObject. Bool_t IsForeign() const; Return kTRUE is the class is Foreign (the class does not have a Streamer method). void PostLoadCheck(); Do the initialization that can only be done after the CINT dictionary has; been fully populated and can not be delayed efficiently. Long_t Property() const; Set TObject::fBits and fStreamerType to cache information about the; class. The bits are; kIsTObject : the class inherits from TObject; kStartWithTObject: TObject is the left-most class in the inheritance tree; kIsForeign : the class doe not have a Streamer method; The value of fStreamerType are; kTObject : the class inherits from TObject; kForeign : the class does not have a Streamer method; kInstrumented: the class does have a Streamer method; kExternal: the class has a free standing way of streaming itself; kEmulated: the class is missing its shared library. void SetCollectionProxy(const ROOT::TCollectionProxyInfo& ); Create the collection proxy object (and the st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:34227,inherit,inherits,34227,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,5,['inherit'],['inherits']
Modifiability,". void WriteClass(const TClass* cl); Write class description to I/O buffer. void SkipVersion(const TClass* cl = 0); Skip class version from I/O buffer. Version_t ReadVersion(UInt_t* start = 0, UInt_t* bcnt = 0, const TClass* cl = 0); Read class version from I/O buffer. UInt_t WriteVersion(const TClass* cl, Bool_t useBcnt = kFALSE); Write class version to I/O buffer. UInt_t WriteVersionMemberWise(const TClass* cl, Bool_t useBcnt = kFALSE); Write class version to I/O buffer after setting the kStreamedMemberWise; bit in the version number. void StreamObject(void* obj, const type_info& typeinfo, const TClass* onFileClass = 0); Stream an object given its C++ typeinfo information. void StreamObject(void* obj, const char* className, const TClass* onFileClass = 0); Stream an object given the name of its actual class. void StreamObject(void* obj, const TClass* cl, const TClass* onFileClass = 0); Stream an object given a pointer to its actual class. void StreamObject(TObject* obj); Stream an object inheriting from TObject using its streamer. void CheckCount(UInt_t offset); Check if offset is not too large (< kMaxMapCount) when writing. UInt_t CheckObject(UInt_t offset, const TClass* cl, Bool_t readClass = kFALSE); Check for object in the read map. If the object is 0 it still has to be; read. Try to read it from the buffer starting at location offset. If the; object is -1 then it really does not exist and we return 0. If the object; exists just return the offset. Bool_t CheckObject(const TObject* obj); Check if the specified object is already in the buffer.; Returns kTRUE if object already in the buffer, kFALSE otherwise; (also if obj is 0 or TBuffer not in writing mode). Bool_t CheckObject(const void* obj, const TClass* ptrClass); Check if the specified object of the specified class is already in; the buffer. Returns kTRUE if object already in the buffer,; kFALSE otherwise (also if obj is 0 ). void SetPidOffset(UShort_t offset); This offset is used when a key (or basket) is t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBufferFile.html:38296,inherit,inheriting,38296,root/html528/TBufferFile.html,https://root.cern,https://root.cern/root/html528/TBufferFile.html,1,['inherit'],['inheriting']
Modifiability,". with neg. and pos. weights in node and don't boost them; Bool_tfPruneBeforeBoostflag to prune before boosting; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; Bool_tfRenormByClassindividually re-normalize each event class to the original size after boosting; map<TMVA::Event*,std::vector<double> >fResidualsindividual event residuals for gradient boost; Double_tfSampleFractionfraction of events used for bagged grad boost; Double_tfSampleSizeFractionrelative size of bagged event sample to original sample size; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; Double_tfShrinkagelearning rate for gradient boost;; vector<TMVA::Event*>fSubSamplesubsample for bagged grad boost; Double_tfSumOfWeightssum of all event weights; Bool_tfTrainWithNegWeightsyes there are negative event weights and we don't ignore them; Double_tfTransitionPointbreak-down point for gradient regression; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; UInt_tfUseNTrainEventsnumber of randomly picked training events used in randomised (and bagged) trees; UInt_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseWeightedTreesuse average classification from the trees, or have the individual trees trees in the forest weighted (e.g. log(boostweight) from AdaBoost; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<TMVA::Event*>fValidationSamplethe ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBDT.html:23335,variab,variables,23335,root/html530/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBDT.html,6,['variab'],['variables']
Modifiability,". write options and weights to file note that each one text file for the main configuration information and one ROOT file for ROOT objects are created ; Definition at line 1404 of file MethodBase.cxx. ◆ WriteStateToStream(). void TMVA::MethodBase::WriteStateToStream ; (; std::ostream & ; tf); const. private . general method used in writing the header of the weight files where the used variables, variable transformation type etc. ; is specified ; Definition at line 1267 of file MethodBase.cxx. ◆ WriteStateToXML(). void TMVA::MethodBase::WriteStateToXML ; (; void * ; parent); const. private . general method used in writing the header of the weight files where the used variables, variable transformation type etc. ; is specified ; Definition at line 1331 of file MethodBase.cxx. ◆ WriteVarsToStream(). void TMVA::MethodBase::WriteVarsToStream ; (; std::ostream & ; tf, . const TString & ; prefix = """" . ); const. private . write the list of variables (name, min, max) for a given data transformation method to the stream ; Definition at line 1710 of file MethodBase.cxx. Friends And Related Symbol Documentation. ◆ CrossValidation. friend class CrossValidation. friend . Definition at line 113 of file MethodBase.h. ◆ Experimental::Classification. friend class Experimental::Classification. friend . Definition at line 118 of file MethodBase.h. ◆ Factory. friend class Factory. friend . Definition at line 114 of file MethodBase.h. ◆ MethodBoost. friend class MethodBoost. friend . Definition at line 116 of file MethodBase.h. ◆ MethodCategory. friend class MethodCategory. friend . Definition at line 269 of file MethodBase.h. ◆ MethodCompositeBase. friend class MethodCompositeBase. friend . Definition at line 270 of file MethodBase.h. ◆ MethodCrossValidation. friend class MethodCrossValidation. friend . Definition at line 117 of file MethodBase.h. ◆ MethodCuts. friend class MethodCuts. friend . Definition at line 603 of file MethodBase.h. ◆ RootFinder. friend class RootFinder. friend .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBase.html:79919,variab,variables,79919,doc/master/classTMVA_1_1MethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBase.html,1,['variab'],['variables']
Modifiability,". {return kFALSE;}. void AddWeightsXMLTo(void* parent) const; the actual ""weights"". void ReadWeightsFromXML(void* wghtnode). void ReadWeightsFromStream(istream& ). void ReadWeightsFromStream(TFile& ); {}. const TString& GetJobName() const; ---------- public accessors -----------------------------------------------; classifier naming (a lot of names ... aren't they ;-). { return fJobName; }. const TString& GetMethodName() const; { return fMethodName; }. TString GetMethodTypeName() const; { return Types::Instance().GetMethodName(fMethodType); }. Types::EMVA GetMethodType() const; { return fMethodType; }. const char* GetName() const; { return fMethodName.Data(); }. const TString& GetTestvarName() const; { return fTestvar; }. const TString GetProbaName() const; { return fTestvar + ""_Proba""; }. void SetTestvarName(const TString& v = """"); build classifier name in Test tree; MVA prefix (e.g., ""TMVA_""). { fTestvar = (v=="""") ? (""MVA_"" + GetMethodName()) : v; }. UInt_t GetNvar() const; number of input variable used by classifier. { return DataInfo().GetNVariables(); }. UInt_t GetNVariables() const; { return DataInfo().GetNVariables(); }. UInt_t GetNTargets() const; { return DataInfo().GetNTargets(); }. const TString& GetInputVar(Int_t i) const; internal names and expressions of input variables. { return DataInfo().GetVariableInfo(i).GetInternalName(); }. const TString& GetInputLabel(Int_t i) const; { return DataInfo().GetVariableInfo(i).GetLabel(); }. const TString& GetInputTitle(Int_t i) const; { return DataInfo().GetVariableInfo(i).GetTitle(); }. Double_t GetMean(Int_t ivar) const; normalisation and limit accessors. { return GetTransformationHandler().GetMean(ivar); }. Double_t GetRMS(Int_t ivar) const; { return GetTransformationHandler().GetRMS(ivar); }. Double_t GetXmin(Int_t ivar) const; { return GetTransformationHandler().GetMin(ivar); }. Double_t GetXmax(Int_t ivar) const; { return GetTransformationHandler().GetMax(ivar); }. Double_t GetSignalReferenceCut() const; sets ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:30871,variab,variable,30871,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,3,['variab'],['variable']
Modifiability,". };  ; enum  State { Initialize; , Client; , Server; , Inline; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void constOptimizeTestStatistic (ConstOpCode opcode, bool doAlsoTracking=true) override;  Intercept call to optimize constant term in test statistics and forward it to object on server side. ;  ; void doApplyNLLW2 (bool flag);  ; double evaluate () const override;  Send message to server process to retrieve output value If error were logged use logEvalError() on remote side transfer those errors to the local eval error queue. ;  ; virtual double getCarry () const;  ; void initialize ();  Initialize the remote process and message passing pipes between current process and remote process. ;  ; void initVars ();  Initialize list of variables of front-end argument 'arg'. ;  ; void serverLoop ();  Server loop of remote processes. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:47605,inherit,inherited,47605,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['inherit'],['inherited']
Modifiability,".  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSemaphore Class Reference. . Definition at line 29 of file TSemaphore.h. Public Member Functions;  TSemaphore (Int_t initial=1);  Create counting semaphore. ;  ; virtual ~TSemaphore ();  ; TClass * IsA () const override;  ; Int_t Post ();  Increment the value of the semaphore. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TryWait ();  If the semaphore value is > 0 then decrement it and return 0. ;  ; Int_t Wait ();  If the semaphore value is > 0 then decrement it and carry on, else block, waiting on the condition until it is signaled. ;  ; Int_t Wait (Int_t millisec);  If the semaphore value is > 0 then decrement it and carry on, else block. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSemaphore.html:1061,inherit,inherited,1061,doc/master/classTSemaphore.html,https://root.cern,https://root.cern/doc/master/classTSemaphore.html,1,['inherit'],['inherited']
Modifiability,".  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSplinePoly3 Class ReferenceHistogram Library. ; Class for TSpline3 knot. ; Definition at line 104 of file TSpline.h. Public Member Functions;  TSplinePoly3 ();  ;  TSplinePoly3 (Double_t x, Double_t y, Double_t b, Double_t c, Double_t d);  ;  TSplinePoly3 (TSplinePoly3 const &other);  ; Double_t & B ();  ; Double_t & C ();  ; Double_t & D ();  ; Double_t Derivative (Double_t x) const;  ; Double_t Eval (Double_t x) const override;  ; TClass * IsA () const override;  ; TSplinePoly3 & operator= (TSplinePoly3 const &other);  Assignment operator. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSplinePoly;  TSplinePoly ();  ;  TSplinePoly (Double_t x, Double_t y);  ;  TSplinePoly (TSplinePoly const &other);  ; void GetKnot (Double_t &x, Double_t &y) const;  ; TSplinePoly & operator= (TSplinePoly const &other);  Assignment operator. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & X ();  ; Double_t & Y ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly3.html:996,inherit,inherited,996,doc/master/classTSplinePoly3.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly3.html,1,['inherit'],['inherited']
Modifiability,".  . Loading...; Searching...; No Matches. tree1.C File ReferenceTutorials » Tree tutorials. Detailed Description; This example is a variant of hsimple.C but using a TTree instead of a TNtuple. ; It shows:; how to fill a Tree with a few simple variables.; how to read this Tree; how to browse and analyze the Tree via the TBrowser and TTreeViewer This example can be run in many different ways:. Using the Cling interpreter .x tree1.C. Using the automatic compiler interface .x tree1.C++. .L tree1.C or .L tree1.C++; tree1(); One can also run the write and read parts in two separate sessions. For example following one of the sessions above, one can start the session: .L tree1.C; tree1r();; ; #include ""TROOT.h""; #include ""TFile.h""; #include ""TTree.h""; #include ""TBrowser.h""; #include ""TH2.h""; #include ""TRandom.h""; ; void tree1w(); {; //create a Tree file tree1.root; ; //create the file, the Tree and a few branches; TFile f(""tree1.root"",""recreate"");; TTree t1(""t1"",""a simple Tree with simple variables"");; Float_t px, py, pz;; Double_t random;; Int_t ev;; t1.Branch(""px"",&px,""px/F"");; t1.Branch(""py"",&py,""py/F"");; t1.Branch(""pz"",&pz,""pz/F"");; t1.Branch(""random"",&random,""random/D"");; t1.Branch(""ev"",&ev,""ev/I"");; ; //fill the tree; for (Int_t i=0;i<10000;i++) {; gRandom->Rannor(px,py);; pz = px*px + py*py;; random = gRandom->Rndm();; ev = i;; t1.Fill();; }; ; //save the Tree header. The file will be automatically closed; //when going out of the function scope; t1.Write();; }; ; void tree1r(); {; //read the Tree generated by tree1w and fill two histograms; ; //note that we use ""new"" to create the TFile and TTree objects !; //because we want to keep these objects alive when we leave this function.; TFile *f = new TFile(""tree1.root"");; TTree *t1 = (TTree*)f->Get(""t1"");; Float_t px, py, pz;; Double_t random;; Int_t ev;; t1->SetBranchAddress(""px"",&px);; t1->SetBranchAddress(""py"",&py);; t1->SetBranchAddress(""pz"",&pz);; t1->SetBranchAddress(""random"",&random);; t1->SetBranchAddress(""ev"",&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tree1_8C.html:1082,variab,variables,1082,doc/master/tree1_8C.html,https://root.cern,https://root.cern/doc/master/tree1_8C.html,1,['variab'],['variables']
Modifiability,".  ; Function:; Int_t TSpectrum3::SearchHighRes; (const float; ***fSource,float; ***fDest, int; fSizex, int; fSizey, int; fSizez, float; fSigma, double; fThreshold, bool; fBackgroundRemove,int; fDeconIterations, bool; fMarkov, int; fAverWindow) ��;  ; This function searches for peaks; in source spectrum. It is based on deconvolution method. First the background; is removed (if desired), then Markov smoothed spectrum is calculated (if; desired), then the response function is generated according to given sigma and; deconvolution is carried out. On success it returns number of found peaks.;  ; Parameters:; ������� fSource-pointer to; the matrix of source spectrum����������������� ; ������� fDest-resulting; spectrum after deconvolution; � ������fSizex, fSizey, fSizez; -lengths of the source and destination spectra��������������� ; ������� fSigma-sigma of; searched peaks; fThreshold-; threshold value in % for selected peaks, peaks with amplitude less than; threshold*highest_peak/100 are ignored; fBackgroundRemove-; background_remove-logical variable, true if the removal of background before; deconvolution is desired� ; fDeconIterations-number; of iterations in deconvolution operation; fMarkov-logical; variable, if it is true, first the source spectrum is replaced by new spectrum; calculated using Markov chains method ; fAverWindow-width of averaging smoothing window ;  ; References:; [1] M.A. Mariscotti: A method for; identification of peaks in the presence of background and its application to; spectrum analysis. NIM 50 (1967), 309-320.; [2] �M.; Morh�č, J. Kliman, V. Matou�ek, M. Veselsk�, I. Turzo.:Identification; of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); 108-125.; [3] Z.K. Silagadze, A new; algorithm for automatic photopeak searches. NIM A 376 (1996), 451.;  ; Example of peak searching method;  ; SearchHighRes function provides users with the possibility; to vary the input parameters and with the access to the output deconvolved data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum3.html:33108,variab,variable,33108,root/html528/TSpectrum3.html,https://root.cern,https://root.cern/root/html528/TSpectrum3.html,8,['variab'],['variable']
Modifiability,". ◆ Class(). static TClass * TProofDrawHist::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofDrawHist::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofDrawHist::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 120 of file TProofDraw.h. ◆ DeclFileName(). static const char * TProofDrawHist::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 120 of file TProofDraw.h. ◆ DefVar(). void TProofDrawHist::DefVar ; (; ). overrideprotectedvirtual . Define variables according to arguments. ; Implements TProofDraw.; Definition at line 702 of file TProofDraw.cxx. ◆ DefVar1D(). void TProofDrawHist::DefVar1D ; (; ). private . Define vars for 1D Histogram. ; Definition at line 563 of file TProofDraw.cxx. ◆ DefVar2D(). void TProofDrawHist::DefVar2D ; (; ). private . Define variables for 2D histogram. ; Definition at line 598 of file TProofDraw.cxx. ◆ DefVar3D(). void TProofDrawHist::DefVar3D ; (; ). private . Define variables for 3D histogram. ; Definition at line 644 of file TProofDraw.cxx. ◆ DoFill(). void TProofDrawHist::DoFill ; (; Long64_t ; entry, . Double_t ; w, . const Double_t * ; v . ). overrideprotectedvirtual . Fills the histgram with given values. ; Implements TProofDraw.; Definition at line 853 of file TProofDraw.cxx. ◆ Init(). void TProofDrawHist::Init ; (; TTree * ; tree). overridevirtual . See TProofDraw::Init(). ; Reimplemented from TProofDraw.; Definition at line 740 of file TProofDraw.cxx. ◆ IsA(). TClass * TProofDrawHist::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofDraw.; Definition at line 120 of file TProofDraw.h. ◆ SlaveBegin(). void TProofDrawHist::SlaveBegin ; (; TTree * ; tree). overridevirtual . See TProofDraw::SlaveBegin(). ; Reimplemented from TProofDraw.; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawHist.html:16809,variab,variables,16809,doc/master/classTProofDrawHist.html,https://root.cern,https://root.cern/doc/master/classTProofDrawHist.html,1,['variab'],['variables']
Modifiability,". ◆ ComputeBBox(). void TEvePolygonSetProjected::ComputeBBox ; (; ). overridevirtual . Override of virtual method from TAttBBox. ; Implements TAttBBox.; Definition at line 70 of file TEvePolygonSetProjected.cxx. ◆ DeclFileName(). static const char * TEvePolygonSetProjected::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 93 of file TEvePolygonSetProjected.h. ◆ DumpBuffer3D(). void TEvePolygonSetProjected::DumpBuffer3D ; (; ). Dump information about currently projected buffer. ; Definition at line 472 of file TEvePolygonSetProjected.cxx. ◆ DumpPolys(). void TEvePolygonSetProjected::DumpPolys ; (; ); const. virtual . Dump information about built polygons. ; Definition at line 453 of file TEvePolygonSetProjected.cxx. ◆ GetProjectedAsElement(). TEveElement * TEvePolygonSetProjected::GetProjectedAsElement ; (; ). inlineoverridevirtual . Returns this projected dynamic-casted to TEveElement. ; This is needed as class TEveProjected is used as secondary inheritance. ; Reimplemented from TEveProjected.; Definition at line 86 of file TEvePolygonSetProjected.h. ◆ IsA(). TClass * TEvePolygonSetProjected::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveElementList.; Definition at line 93 of file TEvePolygonSetProjected.h. ◆ IsFirstIdxHead(). Bool_t TEvePolygonSetProjected::IsFirstIdxHead ; (; Int_t ; s0, . Int_t ; s1 . ). private . Compare the two segments and check if the first index of first segment is starting. ; Definition at line 120 of file TEvePolygonSetProjected.cxx. ◆ MakePolygonsFromBP(). Float_t TEvePolygonSetProjected::MakePolygonsFromBP ; (; Int_t * ; idxMap). private . Build polygons from list of buffer polygons. ; Definition at line 264 of file TEvePolygonSetProjected.cxx. ◆ MakePolygonsFromBS(). Float_t TEvePolygonSetProjected::MakePolygonsFromBS ; (; Int_t * ; idxMap). private . Build polygons from the set of buffer segments. ; First creat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePolygonSetProjected.html:43359,inherit,inheritance,43359,doc/master/classTEvePolygonSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePolygonSetProjected.html,1,['inherit'],['inheritance']
Modifiability,". ◆ IsLoaded(). Bool_t TClass::IsLoaded ; (; ); const. Return true if the shared library of this class is currently in the a process's memory. ; Return false, after the shared library has been unloaded or if this is an 'emulated' class created from a file's StreamerInfo. ; Definition at line 5912 of file TClass.cxx. ◆ IsStartingWithTObject(). Bool_t TClass::IsStartingWithTObject ; (; ); const. Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ; Concretely this means that the following code is proper for this class: ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from TObject. ; Definition at line 5929 of file TClass.cxx. ◆ IsSyntheticPair(). Bool_t TClass::IsSyntheticPair ; (; ); const. inline . Definition at line 521 of file TClass.h. ◆ IsTObject(). Bool_t TClass::IsTObject ; (; ); const. Return kTRUE is the class inherits from TObject. ; Definition at line 5938 of file TClass.cxx. ◆ IsVersioned(). Bool_t TClass::IsVersioned ; (; ); const. inline . Definition at line 522 of file TClass.h. ◆ Load(). TClass * TClass::Load ; (; TBuffer & ; b). static . Load class description from I/O buffer and return class object. ; Definition at line 5715 of file TClass.cxx. ◆ LoadClass(). TClass * TClass::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent . ). static . Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is 'true', do not warn about missing dictionary for the class. (typically used for class that are used only for transient members); The 'requestedname' is expected to be already normalized. ; Definition at line 5749 of file TClass.cxx. ◆ LoadClassCustom(). TClass * TClass::LoadClassCustom ; (; const char * ; requestedname, . Bool_t ; silent . ). staticprivate ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:101206,inherit,inherits,101206,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inherits']
Modifiability,". ◆ IsLoaded(). Bool_t TClass::IsLoaded ; (; ); const. Return true if the shared library of this class is currently in the a process's memory. ; Return false, after the shared library has been unloaded or if this is an 'emulated' class created from a file's StreamerInfo. ; Definition at line 5979 of file TClass.cxx. ◆ IsStartingWithTObject(). Bool_t TClass::IsStartingWithTObject ; (; ); const. Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ; Concretely this means that the following code is proper for this class: ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from TObject. ; Definition at line 5996 of file TClass.cxx. ◆ IsSyntheticPair(). Bool_t TClass::IsSyntheticPair ; (; ); const. inline . Definition at line 521 of file TClass.h. ◆ IsTObject(). Bool_t TClass::IsTObject ; (; ); const. Return kTRUE is the class inherits from TObject. ; Definition at line 6005 of file TClass.cxx. ◆ IsVersioned(). Bool_t TClass::IsVersioned ; (; ); const. inline . Definition at line 522 of file TClass.h. ◆ Load(). TClass * TClass::Load ; (; TBuffer & ; b). static . Load class description from I/O buffer and return class object. ; Definition at line 5782 of file TClass.cxx. ◆ LoadClass(). TClass * TClass::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent . ). static . Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is 'true', do not warn about missing dictionary for the class. (typically used for class that are used only for transient members); The 'requestedname' is expected to be already normalized. ; Definition at line 5816 of file TClass.cxx. ◆ LoadClassCustom(). TClass * TClass::LoadClassCustom ; (; const char * ; requestedname, . Bool_t ; silent . ). staticprivate ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:101207,inherit,inherits,101207,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inherits']
Modifiability,". ◆ Print(). void TPluginManager::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print list of registered plugin handlers. ; If option is ""a"" print also the ctor's that will be used. ; Reimplemented from TObject.; Definition at line 637 of file TPluginManager.cxx. ◆ RemoveHandler(). void TPluginManager::RemoveHandler ; (; const char * ; base, . const char * ; regexp = nullptr . ). Remove handler for the specified base class and the specified regexp. ; If regexp=0 remove all handlers for the specified base. ; Definition at line 588 of file TPluginManager.cxx. ◆ Streamer(). void TPluginManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TPluginManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 286 of file TPluginManager.h. ◆ WritePluginMacros(). Int_t TPluginManager::WritePluginMacros ; (; const char * ; dir, . const char * ; plugin = nullptr . ); const. Write in the specified directory the plugin macros. ; If plugin is specified and if it is a base class all macros for that base will be written. If it is a plugin class name, only that one macro will be written. If plugin is 0 all macros are written. Returns -1 if dir does not exist, 0 otherwise. ; Definition at line 665 of file TPluginManager.cxx. ◆ WritePluginRecords(). Int_t TPluginManager::WritePluginRecords ; (; const char * ; envFile, . const char * ; plugin = nullptr . ); const. Write in the specified environment config file the plugin records. ; If plugin is specified and if it is a base class all records for that base will be written. If it is a plugin class name, only that one record will be written. If plugin is 0 all macros are written. If envFile is 0 or """" the records are written to stdout. Returns -1 if envFile cannot be created or opened, 0 otherwise. ; Definition at line 747 of file TPluginManager.cxx. Member Data Documentation. ◆ fBasesLoad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:20402,plugin,plugin,20402,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,1,['plugin'],['plugin']
Modifiability,". ◆ TLinearMinimizer() [2/2]. TLinearMinimizer::TLinearMinimizer ; (; const char * ; type). Constructor from a char * (used by PM) ; Definition at line 82 of file TLinearMinimizer.cxx. ◆ ~TLinearMinimizer(). TLinearMinimizer::~TLinearMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 100 of file TLinearMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TLinearMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLinearMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLinearMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 126 of file TLinearMinimizer.h. ◆ CovMatrix(). double TLinearMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 95 of file TLinearMinimizer.h. ◆ CovMatrixStatus(). int TLinearMinimizer::CovMatrixStatus ; (; ); const. inlineoverridevirtual . return covariance matrix status ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 100 of file TLinearMinimizer.h. ◆ DeclFileName(). static const char * TLinearMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 126 of file TLinearMinimizer.h. ◆ Edm(). double TLinearMinimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 66 of file TLinearMinimizer.h. ◆ Errors(). const double * TLinearMinimizer::Errors ; (; ); const. inlineoverridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 89 of file TLinearMinimiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:12578,variab,variable,12578,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ◆ doEval(). void RooNormalizedPdf::doEval ; (; RooFit::EvalContext & ; ctx); const. overrideprotectedvirtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 25 of file RooNormalizedPdf.cxx. ◆ evaluate(). double RooNormalizedPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 73 of file RooNormalizedPdf.h. ◆ expectedEvents(). double RooNormalizedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooAbsPdf.; Definition at line 60 of file RooNormalizedPdf.h. ◆ extendMode(). ExtendMode RooNormalizedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 59 of file RooNormalizedPdf.h. ◆ forceAnalyticalInt(). bool RooNormalizedPdf::forceAnalyticalInt ; (; const RooAbsArg & ; ); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 46 of file RooNormalizedPdf.h. ◆ getAnalyticalIntegralWN(). Int_t RooNormalizedPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; , . const char * ; rangeName = nullptr . ); const. inlineoverridevirtual . Forward determination of analytical integration capabilities to input p.d.f. ; Reimplemented from RooAbsReal.; Definition at line 48 of file RooNormalizedPdf.h. ◆ getValV(). double RooNormalizedPdf::getValV ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNormalizedPdf.html:75764,extend,extendMode,75764,doc/master/classRooNormalizedPdf.html,https://root.cern,https://root.cern/doc/master/classRooNormalizedPdf.html,1,['extend'],['extendMode']
Modifiability,". ◆ fMax. std::vector<Float_t> TMVA::BinarySearchTree::fMax[2]. private . RMS for signal and background for each variable. ; Definition at line 163 of file BinarySearchTree.h. ◆ fMeans. std::vector<Float_t> TMVA::BinarySearchTree::fMeans[2]. private . mean for signal and background for each variable ; Definition at line 160 of file BinarySearchTree.h. ◆ fMin. std::vector<Float_t> TMVA::BinarySearchTree::fMin[2]. private . RMS for signal and background for each variable. ; Definition at line 162 of file BinarySearchTree.h. ◆ fNEventsW. Double_t TMVA::BinarySearchTree::fNEventsW[2]. private . Number of events per class, taking into account event weights. ; Definition at line 166 of file BinarySearchTree.h. ◆ fNormalizeTreeTable. std::vector< std::pair<Double_t,const TMVA::Event*> > TMVA::BinarySearchTree::fNormalizeTreeTable. private . Definition at line 171 of file BinarySearchTree.h. ◆ fPeriod. UInt_t TMVA::BinarySearchTree::fPeriod. private . periode (number of event variables) ; Definition at line 156 of file BinarySearchTree.h. ◆ fRMS. std::vector<Float_t> TMVA::BinarySearchTree::fRMS[2]. private . RMS for signal and background for each variable. ; Definition at line 161 of file BinarySearchTree.h. ◆ fStatisticsIsValid. Bool_t TMVA::BinarySearchTree::fStatisticsIsValid. private . flag if last stat calculation is still valid, set to false if new node is insert ; Definition at line 158 of file BinarySearchTree.h. ◆ fSum. std::vector<Double_t> TMVA::BinarySearchTree::fSum[2]. private . Sum for signal and background for each variable. ; Definition at line 164 of file BinarySearchTree.h. ◆ fSumOfWeights. Double_t TMVA::BinarySearchTree::fSumOfWeights. private . Total number of events (weighted) counted during filling should be the same as fNEventsW[0]+fNEventsW[1]. ; . used as a check ; Definition at line 167 of file BinarySearchTree.h. ◆ fSumSq. std::vector<Double_t> TMVA::BinarySearchTree::fSumSq[2]. private . Squared Sum for signal and background for each variable. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:17417,variab,variables,17417,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,1,['variab'],['variables']
Modifiability,". ◆ printTitle(). void RooFormula::printTitle ; (; std::ostream & ; os); const. overridevirtual . Print title of formula. ; Reimplemented from RooPrintable.; Definition at line 462 of file RooFormula.cxx. ◆ printValue(). void RooFormula::printValue ; (; std::ostream & ; os); const. overridevirtual . Print value of formula. ; Reimplemented from RooPrintable.; Definition at line 444 of file RooFormula.cxx. ◆ processFormula(). std::string RooFormula::processFormula ; (; std::string ; formula); const. private . Process given formula by replacing all ordinal and name references by x[i], where i matches the position of the argument in _origList. ; Further, references to category states such as leptonMulti:one are replaced by the category index. ; Definition at line 226 of file RooFormula.cxx. ◆ reconstructFormula(). std::string RooFormula::reconstructFormula ; (; std::string ; internalRepr); const. private . From the internal representation, construct a formula by replacing all index place holders with the names of the variables that are being used to evaluate it. ; Definition at line 318 of file RooFormula.cxx. ◆ usedVariables(). RooArgList RooFormula::usedVariables ; (; ); const. private . Analyse internal formula to find out which variables are actually in use. ; Definition at line 288 of file RooFormula.cxx. Member Data Documentation. ◆ _isCategory. std::vector<bool> RooFormula::_isCategory. private . ! Whether an element of the _origList is a category. ; Definition at line 81 of file RooFormula.h. ◆ _origList. RooArgList RooFormula::_origList. private . ! Original list of dependents ; Definition at line 80 of file RooFormula.h. ◆ _tFormula. std::unique_ptr<TFormula> RooFormula::_tFormula. private . ! The formula used to compute values ; Definition at line 82 of file RooFormula.h. roofit/roofitcore/src/RooFormula.h; roofit/roofitcore/src/RooFormula.cxx. RooFormula. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:53 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormula.html:23921,variab,variables,23921,doc/master/classRooFormula.html,https://root.cern,https://root.cern/doc/master/classRooFormula.html,1,['variab'],['variables']
Modifiability,". ◆ writeToStream(). void RooRealVar::writeToStream ; (; std::ostream & ; os, . bool ; compact . ); const. overridevirtual . Write object contents to given stream. ; Reimplemented from RooAbsRealLValue.; Definition at line 700 of file RooRealVar.cxx. Member Data Documentation. ◆ _altNonSharedBinning. std::unordered_map<std::string,std::unique_ptr<RooAbsBinning> > RooRealVar::_altNonSharedBinning. protected . ! Non-shareable alternative binnings ; Definition at line 157 of file RooRealVar.h. ◆ _asymErrHi. double RooRealVar::_asymErrHi. protected . High side of asymmetric error associated with current value. ; Definition at line 155 of file RooRealVar.h. ◆ _asymErrLo. double RooRealVar::_asymErrLo. protected . Low side of asymmetric error associated with current value. ; Definition at line 154 of file RooRealVar.h. ◆ _binning. std::unique_ptr<RooAbsBinning> RooRealVar::_binning. protected . Definition at line 156 of file RooRealVar.h. ◆ _error. double RooRealVar::_error. protected . Symmetric error associated with current value. ; Definition at line 153 of file RooRealVar.h. ◆ _printScientific. bool RooRealVar::_printScientific. staticprotected . Definition at line 139 of file RooRealVar.h. ◆ _printSigDigits. Int_t RooRealVar::_printSigDigits. staticprotected . Definition at line 140 of file RooRealVar.h. ◆ _sharedProp. std::shared_ptr<RooRealVarSharedProperties> RooRealVar::_sharedProp. protected . ! Shared binnings associated with this instance ; Definition at line 169 of file RooRealVar.h. ◆ _valueResetCounter. std::size_t RooRealVar::_valueResetCounter = 0. protected . ! How many times the value of this variable was reset ; Definition at line 171 of file RooRealVar.h. Libraries for RooRealVar:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooRealVar.h; roofit/roofitcore/src/RooRealVar.cxx. RooRealVar. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:93887,variab,variable,93887,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,".) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  . Static Protected Member Functions; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataBase.html:10686,inherit,inherited,10686,doc/master/classTQpDataBase.html,https://root.cern,https://root.cern/doc/master/classTQpDataBase.html,1,['inherit'],['inherited']
Modifiability,".). Practical information about the service can be found here. The purpose of this page is to document the different existing procedures for the ROOT project and basic interaction with them to obtain most of the information.; SFT Jenkins Service; Access and accounts; Everybody with a CERN account has automatically read access to Jenkins service instance. For write access (e.g. to be able to stop and launch new jobs) please send a request to Patricia Mendez to obtain an account.; ROOT jobs; Each project in the SFT Jenkins has a specific 'tab' for the defined project jobs. The ROOT tab contains all the defined jobs for ROOT. They are organized as follow:. nightly builds: The jobs are named root-nightly-<version> and they are implemented as multi-configuration project. They are run once a day (around after midnight CET) but they can be started by hand at any time of the day (see later) and select for what configurations to run.; incremental builds: The jobs are named root-incremental-<version> and they are implemented as multi-configuration project. They are run as soon new commits appear in the ROOT git repository and the builds are incremental by default. A full re-build can be triggered by checking the option EMPTY_BINARY.; documentation generation. The jobs are named root-makedoc-<version>. They are started automatically once a day during the day.; testing installations. The job is named root-install and builds ROOT for a number of platforms, produces the installation tar-file or installation kit, installs it in a different place nd runs the tests against the installation (needed to delete the build and source area).; building releases. The job is named root-release-<version> and is multi-configuration job. It builds ROOT for a given 'tagged' version using the source distribution tar-file and produces binaries for a number of configurations, which are installed automatically in the download ROOT server.; other procedures. cling-periodic; cling-clone-repo; cling-rep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-use-root-jenkins.html:3112,config,configuration,3112,d/how-use-root-jenkins.html,https://root.cern,https://root.cern/d/how-use-root-jenkins.html,1,['config'],['configuration']
Modifiability,"... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html:2856,inherit,inherited,2856,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,4,['inherit'],['inherited']
Modifiability,"...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooBMixDecay Class ReferenceRooFit » RooFit. ; Class RooBMixDecay is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the effects of B0/B0bar mixing. ; This function can be analytically convolved with any RooResolutionModel implementation ; Definition at line 23 of file RooBMixDecay.h. Public Types; enum  DecayType { SingleSided; , DoubleSided; , Flipped; };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:670,inherit,inherited,670,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,4,['inherit'],['inherited']
Modifiability,"...Definition RooFitResult.cxx:1124; RooFitResult::floatParsFinalconst RooArgList & floatParsFinal() constReturn list of floating parameters after fit.Definition RooFitResult.h:111; RooFitResult::createHessePdfRooAbsPdf * createHessePdf(const RooArgSet &params) constReturn a p.d.f that represents the fit result as a multi-variate probability densisty function on the...Definition RooFitResult.cxx:1260; RooFit::Detail::CodeSquashContextA class to maintain the context for squashing of RooFit models into code.Definition CodeSquashContext.h:42; RooFit::EvalContextDefinition EvalContext.h:84; RooFit::EvalContext::atstd::span< const double > at(RooAbsArg const *arg, RooAbsArg const *caller=nullptr)Definition EvalContext.cxx:35; RooFit::EvalContext::outputstd::span< double > output()Definition EvalContext.h:112; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooFunctorLightweight interface adaptor that exports a RooAbsPdf as a functor.Definition RooFunctor.h:25; RooHistGraphical representation of binned data based on the TGraphAsymmErrors class.Definition RooHist.h:29; RooLinkedListCollection class for internal use, storing a collection of RooAbsArg pointers in a doubly linked list...Definition RooLinkedList.h:44; RooLinkedList::Deletevoid Delete(Option_t *o=nullptr) overrideRemove all elements in collection and delete all elements NB: Collection does not own elements,...Definition RooLinkedList.cxx:578; RooLinkedList::Addvirtual void Add(TObject *arg)Definition RooLinkedList.h:73; RooLinkedList::beginRooLinkedListIterImpl begin() constDefinition RooLinkedList.cxx:761; RooLinkedList::FindObjectTObject * FindObject(const char *name) const overrideReturn pointer to object with given name.Definition RooLinkedList.cxx:534; RooMomentDefinition RooMoment.h:26; RooMsgService::instancestatic RooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:243723,adapt,adaptor,243723,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['adapt'],['adaptor']
Modifiability,"...Definition TFile.h:53; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TSpiderSpider class.Definition TSpider.h:40; TSpider::Drawvoid Draw(Option_t *options="""") overrideDraw the spider.Definition TSpider.cxx:454; TSpider::TSpiderTSpider()Default constructor.Definition TSpider.cxx:76; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; c1return c1Definition legend1.C:41. Definition at line 40 of file TSpider.h. Public Member Functions;  TSpider ();  Default constructor. ;  ;  TSpider (TTree *tree, const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=0, Long64_t firstentry=0);  Normal constructor. ;  ;  ~TSpider () override;  Destructor. ;  ; void AddSuperposed (TSpider *sp);  Allow to superpose several spider views. ;  ; void AddVariable (const char *varexp);  Add a variable to the plot from its expression. ;  ; void DeleteVariable (const char *varexp);  Delete a variable from its expression. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance to the spider. ;  ; void Draw (Option_t *options="""") override;  Draw the spider. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute the corresponding event. ;  ; Color_t GetAverageFillColor () const;  Get the Fill Color of the average. ;  ; Style_t GetAverageFillStyle () const;  Get the FillStyle of the average. ;  ; Color_t GetAverageLineColor () const;  Get the LineColor of the average. ;  ; Style_t GetAverageLineStyle () const;  Get the LineStyle of the average. ;  ; Width_t GetAverageLineWidth () const;  Get the LineWidth of the average. ;  ; Long64_t GetCurrentEntry () const;  ; bool GetDisplayAverage () const;  ; Long64_t GetEntriesToProcess (Long64_t firstentry, Long64_t nentries) const;  return the number of entries to be processed this function checks that nentries is not bigger than the number of entries in the Tree or in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:2721,variab,variable,2721,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variable']
Modifiability,"..; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TGInputDialog Class ReferenceGUI » Low level GUI widgets. ; Input Dialog Widget. ; An Input dialog box ; Definition at line 22 of file TGInputDialog.h. Public Member Functions;  TGInputDialog (const TGWindow *p=nullptr, const TGWindow *main=nullptr, const char *prompt=nullptr, const char *defval=nullptr, char *retstr=nullptr, UInt_t options=kVerticalFrame);  Create simple input dialog. ;  ;  ~TGInputDialog () override;  Cleanup dialog. ;  ; TClass * IsA () const override;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t) override;  Handle button and text enter events. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGInputDialog.html:1042,inherit,inherited,1042,doc/master/classTGInputDialog.html,https://root.cern,https://root.cern/doc/master/classTGInputDialog.html,1,['inherit'],['inherited']
Modifiability,"..; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; RooRealVar Class ReferenceRooFit » RooFit Core. ; Variable that can be changed from the outside. ; For example by the user or a fitter.; It can be written into datasets, can hold a (possibly asymmetric) error, and can have several ranges. These can be accessed with names, to e.g. limit fits or integrals to sub ranges. The range without any name is used as default range. ; Definition at line 37 of file RooRealVar.h. Public Member Functions;  RooRealVar ();  Default constructor. ;  ;  RooRealVar (const char *name, const char *title, double minValue, double maxValue, const char *unit="""");  Create a variable allowed to float in the given range. ;  ;  RooRealVar (const char *name, const char *title, double value, const char *unit="""");  Create a constant variable with a value and optional unit. ;  ;  RooRealVar (const char *name, const char *title, double value, double minValue, double maxValue, const char *unit="""");  Create a variable with the given starting value. ;  ;  RooRealVar (const RooRealVar &other, const char *name=nullptr);  Copy Constructor. ;  ;  ~RooRealVar () override;  Destructor. ;  ; TObject * clone (const char *newname) const override;  ; void copyCacheFast (const RooRealVar &other, bool setValDirty=true);  ; Int_t defaultPrintContents (Option_t *opt) const override;  Mapping of Print() option string to RooPrintable contents specifications. ;  ; void deleteSharedProperties ();  Stop sharing properties. ;  ; RooErrorVar * errorVar () const;  Return a RooAbsRealLValue representing the error associated with this variable. ;  ; TString * format (const RooCmdArg &formatArg) const;  Format contents of RooRealVar for pretty printing on RooPlot parameter boxes. ;  ; TString * format (Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:1123,variab,variable,1123,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"..Definition Factory.cxx:1271; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::GeneticFitterFitter using a Genetic Algorithm.Definition GeneticFitter.h:44; TMVA::IFitterTargetInterface for a fitter 'target'.Definition IFitterTarget.h:44; TMVA::IntervalThe TMVA::Interval Class.Definition Interval.h:61; TMVA::ReaderThe Reader class serves to use the MVAs in a specific analysis context.Definition Reader.h:64; TMVA::Reader::EvaluateMVADouble_t EvaluateMVA(const std::vector< Float_t > &, const TString &methodTag, Double_t aux=0)Evaluate a std::vector<float> of input data for a given method The parameter aux is obligatory for th...Definition Reader.cxx:468; TMVA::Reader::BookMVAIMethod * BookMVA(const TString &methodTag, const TString &weightfile)read method name from weight fileDefinition Reader.cxx:368; TMVA::Reader::AddVariablevoid AddVariable(const TString &expression, Float_t *)Add a float variable or expression to the reader.Definition Reader.cxx:303; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TStopwatchStopwatch class.Definition TStopwatch.h:28; TStopwatch::Startvoid Start(Bool_t reset=kTRUE)Start the stopwatch.Definition TStopwatch.cxx:58; TStopwatch::Stopvoid Stop()Stop the stopwatch.Definition TStopwatch.cxx:77; TStopwatch::Printvoid Print(Option_t *option="""") const overridePrint the real and cpu time passed between the start and stop events.Definition TStopwatch.cxx:219; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::Fillvirtual Int_t Fill()Fill all branches.Definition TTree.cxx:4603; TTree::GetEntryvirtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:51453,variab,variable,51453,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,1,['variab'],['variable']
Modifiability,.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:105951,config,configuration,105951,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error found - save the configuration ; : 983 | 3.37896 4.59559 0.0201715 0.00182642 43608.5 0; : 984 Minimum Test error found - save the configuration ; : 984 | 3.36213 4.34126 0.0202597 0.00185498 43467.1 0; : 985 | 3.39032 4.51659 0.0201503 0.00185184 43719.5 1; : 986 | 3.5234 4.95577 0.0201762 0.0017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error found - save the configuration ; : 999 | 3.31412 4.14973 0.0202938 0.00187677 43438 0; : 1000 | 3.20867 4.17264 0.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:112161,config,configuration,112161,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:98762,config,configuration,98762,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,".070; --- Created root file: ""TMVApp.root"" containing the MVA output histograms; ==> TMVAClassificationApplication is done!; ; ; ; #include <cstdlib>; #include <vector>; #include <iostream>; #include <map>; #include <string>; ; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include ""TSystem.h""; #include ""TROOT.h""; #include ""TH1F.h""; #include ""TStopwatch.h""; ; #include ""TMVA/Tools.h""; #include ""TMVA/Reader.h""; #include ""TMVA/MethodCuts.h""; ; // two types of category methods are implemented; Bool_t UseOffsetMethod = kTRUE;; ; void TMVAClassificationCategoryApplication(); {; // ---------------------------------------------------------------; // default MVA methods to be trained + tested; std::map<std::string,int> Use;; //; Use[""LikelihoodCat""] = 1;; Use[""FisherCat""] = 1;; // ---------------------------------------------------------------; ; std::cout << std::endl; << ""==> Start TMVAClassificationCategoryApplication"" << std::endl;; ; // Create the Reader object; ; TMVA::Reader *reader = new TMVA::Reader( ""!Color:!Silent"" );; ; // Create a set of variables and spectators and declare them to the reader; // - the variable names MUST corresponds in name and type to those given in the weight file(s) used; Float_t var1, var2, var3, var4, eta;; reader->AddVariable( ""var1"", &var1 );; reader->AddVariable( ""var2"", &var2 );; reader->AddVariable( ""var3"", &var3 );; reader->AddVariable( ""var4"", &var4 );; ; reader->AddSpectator( ""eta"", &eta );; ; // Book the MVA methods; ; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; if (it->second) {; TString methodName = it->first + "" method"";; TString weightfile = ""dataset/weights/TMVAClassificationCategory_"" + TString(it->first) + "".weights.xml"";; reader->BookMVA( methodName, weightfile );; }; }; ; // Book output histograms; UInt_t nbin = 100;; std::map<std::string,TH1*> hist;; hist[""LikelihoodCat""] = new TH1F( ""MVA_LikelihoodCat"", ""MVA_LikelihoodCat"", nbin, -1, 0.9999 );; hist[""FisherCat""] =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategoryApplication_8C.html:3285,variab,variables,3285,doc/master/TMVAClassificationCategoryApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategoryApplication_8C.html,2,['variab'],"['variable', 'variables']"
Modifiability,.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83520,config,configuration,83520,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.37748 4.22044 0.0208054 0.00183497 42170.8 4; : 1020 | 3.48034 4.07947 0.020447 0.00177824 42852.4 5; : 1021 | 3.50059 4.11275 0.020219 0.00176964 43361.9 6; : 1022 | 3.15174 3.86168 0.0203283 0.00176093 43086.3 7; : 1023 | 3.4694 4.52782 0.0204007 0.00179059 42987.4 8; : 1024 Minimum Test error found - save the configuration ; : 1024 | 3.57333 3.68346 0.0207199 0.00186469 42428.5 0; : 1025 | 3.1448 3.86932 0.020257 0.0018083 43363.6 1; : 1026 | 3.14966 3.71614 0.0204412 0.00177219 42851.8 2; : 1027 Minimum Test error found - save the configuration ; : 1027 | 3.06278 3.47888 0.0204485 0.00186251 43043.1 0; : 1028 | 3.22518 4.06346 0.0201016 0.00179042 43689.3 1; : 1029 | 3.47015 5.10048 0.0212551 0.0017691 41055.1 2; : 1030 | 3.28552 3.92634 0.0200717 0.0017618 43692.2 3; : 1031 | 3.09879 3.64842 0.0200603 0.0017557 43704.9 4; : 1032 | 3.23242 4.45782 0.0201318 0.0017893 43614.6 5; : 1033 Minimum Test error found - save the configuration ; : 1033 | 3.57665 3.43738 0.0206178 0.00193324 42816.1 0; : 1034 | 3.26951 3.4755 0.0201231 0.00175901 43563.3 1; : 1035 | 3.0748 4.32816 0.0202002 0.00180771 43496 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:115380,config,configuration,115380,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,".15);; frame4->GetYaxis()->SetTitleOffset(1.6);; frame4->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kGray@ kGrayDefinition Rtypes.h:65; kRed@ kRedDefinition Rtypes.h:66; kOrange@ kOrangeDefinition Rtypes.h:67; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsData::None@ NoneDefinition RooAbsData.h:108; RooAbsData::SumW2@ SumW2Definition RooAbsData.h:108; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf107_plotstylesDefinition rf107_plotstyles.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coeffi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf107__plotstyles_8C.html:3874,variab,variable,3874,doc/master/rf107__plotstyles_8C.html,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html,1,['variab'],['variable']
Modifiability,.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83406,config,configuration,83406,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.37748 4.22044 0.0208054 0.00183497 42170.8 4; : 1020 | 3.48034 4.07947 0.020447 0.00177824 42852.4 5; : 1021 | 3.50059 4.11275 0.020219 0.00176964 43361.9 6; : 1022 | 3.15174 3.86168 0.0203283 0.00176093 43086.3 7; : 1023 | 3.4694 4.52782 0.0204007 0.00179059 42987.4 8; : 1024 Minimum Test error found - save the configuration ; : 1024 | 3.57333 3.68346 0.0207199 0.00186469 42428.5 0; : 1025 | 3.1448 3.86932 0.020257 0.0018083 43363.6 1; : 1026 | 3.14966 3.71614 0.0204412 0.00177219 42851.8 2; : 1027 Minimum Test error found - save the configuration ; : 1027 | 3.06278 3.47888 0.0204485 0.00186251 43043.1 0; : 1028 | 3.22518 4.06346 0.0201016 0.00179042 43689.3 1; : 1029 | 3.47015 5.10048 0.0212551 0.0017691 41055.1 2; : 1030 | 3.28552 3.92634 0.0200717 0.0017618 43692.2 3; : 1031 | 3.09879 3.64842 0.0200603 0.0017557 43704.9 4; : 1032 | 3.23242 4.45782 0.0201318 0.0017893 43614.6 5; : 1033 Minimum Test error found - save the configuration ; : 1033 | 3.57665 3.43738 0.0206178 0.00193324 42816.1 0; : 1034 | 3.26951 3.4755 0.0201231 0.00175901 43563.3 1; : 1035 | 3.0748 4.32816 0.0202002 0.00180771 43496 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:114983,config,configuration,114983,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,".26, both in real and CPU time! See e.g. this blog entry.; We have been comparing the performance of ROOT I/O with competitors like Google ProtoBuf; we know exactly where we spend extra time and why, e.g. for schema evolution, proper C++ type support, introspection, pointers.; On the other hand, are you sure you make use of all the performance features ROOT offers? Did you enable the tree cache (on by default for PROOF and one tree per file, off - for now, still - otherwise)? Do you only read the branches you need? I am working on a new TTree read access class that should simplify all of that considerably (and is type safe - no more void*&!); maybe I should take your comment as an invitation to speed up :-); Cheers, Axel. Submitted by Anonymous (not verified) on Thu, 07/23/2015 - 21:51 Permalink . Re: Interpreters . Hi ROOT user,; Thanks for your comments - they are excellent!; Your scenario would probably work - but we decided against it, and I believe that we have good reasons for that :-); GCCXML's future is limited; there is a re-write based on GCC's plugin mechanism, but both suffer from the same problems: we cannot influence what the GCC parser does. And reading headers, writing XML, parsing XML, writing (huge files of) C++, compiling, linking, loading - that's really, really inefficient and error prone.; Python is much simpler than C++. But it's still a horrible language in our environment, unless it's used as bash++. Not a single algorithm should be written in Python: it's terribly hard to convert it into C++, and it's incredibly slow in Python (ask the Google developers about youtube).; So C++ is not a good interpreted language, mainly due to its syntactic verbosity and its lack of dynamic interfaces and reflection capabilities - think; const std::type_info& ti = std::type_info::lookup(""MyClass"");; MyBase* ptr = ti.default_construct();; And Python is not appropriate for many use cases due to its lack of type safety and speed, and its lack of native binding t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html:16514,plugin,plugin,16514,d/blog/do-we-need-yet-another-custom-c-interpreter.html,https://root.cern,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html,1,['plugin'],['plugin']
Modifiability,".393 (0.402) 0.657 (0.681); : dataset PyKeras : 0.138 (0.111) 0.408 (0.410) 0.656 (0.661); : dataset Likelihood : 0.085 (0.082) 0.355 (0.363) 0.580 (0.596); : dataset Fisher : 0.015 (0.015) 0.121 (0.131) 0.487 (0.506); : -------------------------------------------------------------------------------------------------------------------; : ; Dataset:dataset : Created tree 'TestTree' with 6000 events; : ; Dataset:dataset : Created tree 'TrainTree' with 14000 events; : ; Factory : ␛[1mThank you for using TMVA!␛[0m; : ␛[1mFor citation information, please visit: http://tmva.sf.net/citeTMVA.html␛[0m; ; ## Declare Factory; ; ; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ; ## - The second argument is the output file for the training results; ; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string; ; import ROOT; import os; ; TMVA = ROOT.TMVA; TFile = ROOT.TFile; ; TMVA.Tools.Instance(); ; # options to control used methods; useLikelihood = True # likelihood based discriminant; useLikelihoodKDE = False # likelihood based discriminant; useFischer = True # Fischer discriminant; useMLP = False # Multi Layer Perceptron (old TMVA NN implementation); useBDT = True # Boosted Decision Tree; useDL = True # TMVA Deep learning ( CPU or GPU); useKeras = True # Use Keras Deep Learning via PyMVA; ; if ROOT.gSystem.GetFromPipe(""root-config --has-tmva-pymva"") == ""yes"":; TMVA.PyMethodBase.PyInitialize(); else:; useKeras = False # cannot use Keras if PYMVA is not available; ; if use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:57099,config,configuration,57099,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['config'],['configuration']
Modifiability,.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.10,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83973,config,configuration,83973,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:87599,config,configuration,87599,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80464,config,configuration,80464,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,".5*dy;; 1539 } else ysep = y1;; 1540 ; 1541 // Draw Member Functions; 1542 Int_t fcount = 0;; 1543 i = 0;; 1544 x = 0.03;; 1545 y = ysep + 0.5*dy;; 1546 TMethod *m;; 1547 TIter nextm(cl->GetListOfMethods());; 1548 while ((m = (TMethod *) nextm())) {; 1549 if (; 1550 !strcmp( m->GetName(), ""Dictionary"" ) ||; 1551 !strcmp( m->GetName(), ""Class_Version"" ) ||; 1552 !strcmp( m->GetName(), ""DeclFileName"" ) ||; 1553 !strcmp( m->GetName(), ""DeclFileLine"" ) ||; 1554 !strcmp( m->GetName(), ""ImplFileName"" ) ||; 1555 !strcmp( m->GetName(), ""ImplFileLine"" ); 1556 ) continue;; 1557 fcount++;; 1558 if (fcount > nf) break;; 1559 if (i >= nkf) { i = 1; y = ysep - 0.5*dy; x += 1/Double_t(nc); }; 1560 else { i++; y -= dy; }; 1561 ; 1562 ptext = pt->AddText(x,(y-v1)/dv,m->GetName());; 1563 // Check if method is overloaded in a derived class; 1564 // If yes, Change the color of the text to blue; 1565 for (j=ilevel-1;j>=0;j--) {; 1566 if (cl == clevel[ilevel]) {; 1567 if (clevel[j]->GetMethodAny((char*)m->GetName())) {; 1568 ptext->SetTextColor(15);; 1569 break;; 1570 }; 1571 }; 1572 }; 1573 }; 1574 ; 1575 // Draw second inheritance classes for this class; 1576 cll = nullptr;; 1577 if (cinherit) {; 1578 cinherit = (TBaseClass*)lbase->After(cinherit);; 1579 if (cinherit) {; 1580 cl = cinherit->GetClassPointer();; 1581 cll = cl;; 1582 v2 = v1 -0.4;; 1583 dy = 0.35;; 1584 }; 1585 }; 1586 } while (cll);; 1587 }; 1588 Update();; 1589}; 1590 ; 1591////////////////////////////////////////////////////////////////////////////////; 1592/// Function called to draw a crosshair in the canvas; 1593///; 1594/// Example:; 1595/// ~~~ {.cpp}; 1596/// Root > TFile f(""hsimple.root"");; 1597/// Root > hpxpy.Draw();; 1598/// Root > c1.SetCrosshair();; 1599/// ~~~; 1600/// When moving the mouse in the canvas, a crosshair is drawn; 1601///; 1602/// - if the canvas fCrosshair = 1 , the crosshair spans the full canvas; 1603/// - if the canvas fCrosshair > 1 , the crosshair spans only the pad; 1604 ; 1605void TPad:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:49375,inherit,inheritance,49375,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93183,config,configuration,93183,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75653,config,configuration,75653,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88220,config,configuration,88220,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93297,config,configuration,93297,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.64,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89013,config,configuration,89013,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,.; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : -----------------------------------; : Rank : Variable : Separation; : -----------------------------------; : 1 : Variable 2 : 3.993e-01; : 2 : Variable 4 : 2.811e-01; : 3 : Variable 3 : 2.659e-01; : 4 : Variable 1 : 1.571e-01; : -----------------------------------; <HEADER> Factory : Train method: BDTG for Classification; : ; <HEADER> BDTG : #events: (reweighted) sig: 100 bkg: 100; : #events: (unweighted) sig: 100 bkg: 100; : Training 1000 Decision Trees ... patience please; : Elapsed time for training with 200 events: 0.101 sec ; <HEADER> BDTG : [datasetBkg2] : Evaluation of BDTG on training sample (200 events); : Elapsed time for evaluation of 200 events: 0.0159 sec ; : Creating xml weight file: datasetBkg2/weights/TMVAMultiBkg2_BDTG.weights.xml; : Creating standalone class: datasetBkg2/weights/TMVAMultiBkg2_BDTG.class.C; : TMVASignalBackground2.root:/datasetBkg2/Method_BDT/BDTG; <HEADER> Factory : Training finished; : ; : Ranking input variables (method specific)...; <HEADER> BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.842e-01; : 2 : var1 : 2.630e-01; : 3 : var2 : 2.360e-01; : 4 : var3 : 2.168e-01; : --------------------------------------; <HEADER> Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: datasetBkg2/weights/TMVAMultiBkg2_BDTG.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG for Classification performance; : ; <HEADER> BDTG : [datasetBkg2] : Evaluation of BDTG on testing sample (200 events); : Elapsed time for evaluation of 200 events: 0.0111 sec ; <HEADER> Factory : Evaluate all methods; <HEADER> Factory : Evaluate classifier: BDTG; : ; <HEADER> BDTG : [datasetBkg2] : Loop over test events and fill histograms with classifier response..,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:25961,variab,variables,25961,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,1,['variab'],['variables']
Modifiability,.; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : -----------------------------------; : Rank : Variable : Separation; : -----------------------------------; : 1 : Variable 4 : 4.418e-01; : 2 : Variable 3 : 3.388e-01; : 3 : Variable 2 : 2.147e-01; : 4 : Variable 1 : 1.485e-01; : -----------------------------------; <HEADER> Factory : Train method: BDTG for Classification; : ; <HEADER> BDTG : #events: (reweighted) sig: 100 bkg: 100; : #events: (unweighted) sig: 100 bkg: 100; : Training 1000 Decision Trees ... patience please; : Elapsed time for training with 200 events: 0.106 sec ; <HEADER> BDTG : [datasetBkg0] : Evaluation of BDTG on training sample (200 events); : Elapsed time for evaluation of 200 events: 0.0159 sec ; : Creating xml weight file: datasetBkg0/weights/TMVAMultiBkg0_BDTG.weights.xml; : Creating standalone class: datasetBkg0/weights/TMVAMultiBkg0_BDTG.class.C; : TMVASignalBackground0.root:/datasetBkg0/Method_BDT/BDTG; <HEADER> Factory : Training finished; : ; : Ranking input variables (method specific)...; <HEADER> BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var1 : 2.673e-01; : 2 : var2 : 2.603e-01; : 3 : var3 : 2.490e-01; : 4 : var4 : 2.234e-01; : --------------------------------------; <HEADER> Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: datasetBkg0/weights/TMVAMultiBkg0_BDTG.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG for Classification performance; : ; <HEADER> BDTG : [datasetBkg0] : Evaluation of BDTG on testing sample (200 events); : Elapsed time for evaluation of 200 events: 0.0119 sec ; <HEADER> Factory : Evaluate all methods; <HEADER> Factory : Evaluate classifier: BDTG; : ; <HEADER> BDTG : [datasetBkg0] : Loop over test events and fill histograms with classifier response..,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:7812,variab,variables,7812,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,1,['variab'],['variables']
Modifiability,".; Definition at line 83 of file TLinearMinimizer.h. ◆ ProvidesError(). bool TLinearMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 86 of file TLinearMinimizer.h. ◆ SetFixedVariable(). bool TLinearMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; , . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 190 of file TLinearMinimizer.cxx. ◆ SetFunction(). void TLinearMinimizer::SetFunction ; (; const ROOT::Math::IMultiGenFunction & ; func). overridevirtual . set the fit model function ; Implements ROOT::Math::Minimizer.; Definition at line 106 of file TLinearMinimizer.cxx. ◆ SetVariable(). bool TLinearMinimizer::SetVariable ; (; unsigned int ; , . const std::string & ; , . double ; , . double ;  . ). inlineoverridevirtual . set free variable (dummy impl. since there is no need to set variables in the Linear Fitter) ; Implements ROOT::Math::Minimizer.; Definition at line 54 of file TLinearMinimizer.h. ◆ Streamer(). virtual void TLinearMinimizer::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TLinearMinimizer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 126 of file TLinearMinimizer.h. ◆ X(). const double * TLinearMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 69 of file TLinearMinimizer.h. Member Data Documentation. ◆ fCovar. std::vector<double> TLinearMinimizer::fCovar. private . Definition at line 121 of file TLinearMinimizer.h. ◆ fDim. unsigned int TLinearMinimizer::fDim. private . Definition at line 116 of file TLinearMinimizer.h. ◆ fErrors. std::vector<double> TLinearMinimizer::fErrors. private . Definition at line 120 of file TLinearMinimizer.h. ◆ f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:16172,variab,variable,16172,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,1,['variab'],['variable']
Modifiability,".; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*fNewBaseClass!pointer to new base class if renamed; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; ClassStreamerFunc_tfStreamerFunc!Pointer to a wrapper around a custom streamer member function.; TVirtualStreamerInfo*fStreamerInfo!Pointer to the current StreamerInfo for the baset class.; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerBase. Function documentation; TStreamerBase(); Abuse TStreamerElement data member that is not used by TStreamerBase; Default ctor. TStreamerBase(const char* name, const char* title, Int_t offset); Abuse TStreamerElement data member that is not used by TStreamerBase; Create a TStreamerBase object. ~TStreamerBase(); TStreamerBase dtor. TClass * GetClassPointer() const; Returns a pointer to the TClass of this element. Int_t GetSize() const; Returns size of baseclass in bytes. void Init(TObject* obj = 0); Setup the element. void InitStreaming(); Setup the fStreamerFunc and fStreamerinfo. Bool_t IsBase() const; Return kTRUE if the element represent a base class. const char * GetInclude() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerBase.html:10913,inherit,inherits,10913,root/html602/TStreamerBase.html,https://root.cern,https://root.cern/root/html602/TStreamerBase.html,2,['inherit'],['inherits']
Modifiability,".; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*fNewBaseClass!pointer to new base class if renamed; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; ClassStreamerFunc_tfStreamerFunc!Pointer to a wrapper around a custom streamer member function.; TVirtualStreamerInfo*fStreamerInfo!Pointer to the current StreamerInfo for the baset class.; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStreamerBase(); Abuse TStreamerElement data member that is not used by TStreamerBase; Default ctor. TStreamerBase(const char* name, const char* title, Int_t offset); Abuse TStreamerElement data member that is not used by TStreamerBase; Create a TStreamerBase object. ~TStreamerBase(); TStreamerBase dtor. TClass * GetClassPointer() const; Returns a pointer to the TClass of this element. Int_t GetSize() const; Returns size of baseclass in bytes. void Init(TObject* obj = 0); Setup the element. void InitStreaming(); Setup the fStreamerFunc and fStreamerinfo. Bool_t IsBase() const; Return kTRUE if the element represent a base class. const char * GetInclude() const; Return the proper incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerBase.html:9448,inherit,inherits,9448,root/html534/TStreamerBase.html,https://root.cern,https://root.cern/root/html534/TStreamerBase.html,1,['inherit'],['inherits']
Modifiability,".; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are two cuts (see TTreeFormula) defining events to be used during the neural net training and testing.; Example: ""Entry$%2"", ""(Entry$+1)%2"".; Both the TTree and the cut can be defined in the constructor, or later with the suited setter method. ; Definition at line 446 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [3/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . const char * ; weight, . TTree * ; data = nullptr, . const char * ; training = ""Entry$%2==0"", . const char * ; test = """", . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ; Hidden layers are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are two cuts (see TTreeFormula) defining events to be used during the neural net training and testing.; Example: ""Entry$%2"", ""(Entry$+1)%2"".; Both the TTree and the cut can be defined in the constructor, or later with the suited setter method. ; Definition at line 524 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [4/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . TTree * ; data, . TEventList * ; training, . TEventList * ; test, . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:30538,layers,layers,30538,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['layers'],['layers']
Modifiability,".; If cluster is ""lite://"" we start a PROOF-lite session.; If cluster is """" (empty string) then we connect to the cluster specified; by 'Proof.LocalDefault', defaulting to ""lite://"".; If cluster is ""pod://"" (case insensitive), then we connect to a PROOF cluster; managed by PROOF on Demand (PoD, http://pod.gsi.de ).; Via conffile a specific PROOF config file in the confir directory can be specified.; Use loglevel to set the default loging level for debugging.; The appropriate instance of TProofMgr is created, if not; yet existing. The instantiated TProof object is returned.; Use TProof::cd() to switch between PROOF sessions.; For more info on PROOF see the TProof ctor. TProofMgr * Mgr(const char* url); Get instance of the effective manager for 'url'; Return 0 on failure. void Reset(const char* url, Bool_t hard = kFALSE); Wrapper around TProofMgr::Reset(...). const TList * GetEnvVars(); Get environemnt variables. void AddEnvVar(const char* name, const char* value); Add an variable to the list of environment variables passed to proofserv; on the master and slaves. void DelEnvVar(const char* name); Remove an variable from the list of environment variables passed to proofserv; on the master and slaves. void ResetEnvVars(); Clear the list of environment variables passed to proofserv; on the master and slaves. void SaveWorkerInfo(); Save information about the worker set in the file .workers in the working; dir. Called each time there is a change in the worker setup, e.g. by; TProof::MarkBad(). Int_t GetParameter(TCollection* c, const char* par, TString& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type does not match), 0 otherwise. Int_t GetParameter(TCollection* c, const char* par, Int_t& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type doe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:98889,variab,variable,98889,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,6,['variab'],"['variable', 'variables']"
Modifiability,".; If cluster is ""lite://"" we start a PROOF-lite session.; If cluster is """" (empty string) then we connect to the cluster specified; by 'Proof.LocalDefault', defaulting to ""lite://"".; If cluster is ""pod://"" (case insensitive), then we connect to a PROOF cluster; managed by PROOF on Demand (PoD, http://pod.gsi.de ).; Via conffile a specific PROOF config file in the confir directory can be specified.; Use loglevel to set the default loging level for debugging.; The appropriate instance of TProofMgr is created, if not; yet existing. The instantiated TProof object is returned.; Use TProof::cd() to switch between PROOF sessions.; For more info on PROOF see the TProof ctor. TProofMgr * Mgr(const char* url); Get instance of the effective manager for 'url'; Return 0 on failure. void Reset(const char* url, Bool_t hard = kFALSE); Wrapper around TProofMgr::Reset(...). const TList * GetEnvVars(); Get environemnt variables. void AddEnvVar(const char* name, const char* value); Add an variable to the list of environment variables passed to proofserv; on the master and slaves. void DelEnvVar(const char* name); Remove an variable from the list of environment variables passed to proofserv; on the master and slaves. void ResetEnvVars(); Clear the list of environment variables passed to proofserv; on the master and slaves. void SaveWorkerInfo(); Save informations about the worker set in the file .workers in the working; dir. Called each time there is a change in the worker setup, e.g. by; TProof::MarkBad(). Int_t GetParameter(TCollection* c, const char* par, TString& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type does not match), 0 otherwise. Int_t GetParameter(TCollection* c, const char* par, Int_t& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProof.html:87099,variab,variable,87099,root/html530/TProof.html,https://root.cern,https://root.cern/root/html530/TProof.html,4,['variab'],"['variable', 'variables']"
Modifiability,".; Max$(formula): return the maximum (within one TTree entry) of the value of the; elements of the formula given as a parameter.; MinIf$(formula,condition); MaxIf$(formula,condition): return the minimum (maximum) (within one TTree entry); of the value of the elements of the formula given as a parameter; if they match the condition. If not element match the condition, the result is zero. To avoid the; the result is zero. To avoid the consequent peak a zero, use the; pattern:; tree->Draw(""MinIf$(formula,condition)"",""condition"");; which will avoid calculation MinIf$ for the entries that have no match; for the condition. Alt$(primary,alternate) : return the value of ""primary"" if it is available; for the current iteration otherwise return the value of ""alternate"".; For example, with arr1[3] and arr2[2]; tree->Draw(""arr1+Alt$(arr2,0)"");; will draw arr[0]+arr2[0] ; arr[1]+arr2[1] and arr[1]+0; Or with a variable size array arr3; tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); As a comparison; tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; will draw the sum arr3 for the index 0 to 2 only if the; actual_size_of_arr3 is greater or equal to 3.; Note that the array in 'primary' is flattened/linearized thus using; Alt$ with multi-dimensional arrays of different dimensions in unlikely; to yield the expected results. To visualize a bit more what elements; would be matched by TTree::Draw, TTree::Scan can be used:; tree->Scan(""arr1:Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be; matched by; tree->Draw(""arr1-Alt$(arr2,0)"");. Drawing a user function accessing the TTree data directly. If the formula contains a file name, TTree::MakeProxy will be used; to load and execute this file. In particular it will draw the; result of a function with the same name as the file. The function; will be executed in a context where the name of the branches can; be used as a C++ variable.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:30563,variab,variable,30563,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['variab'],['variable']
Modifiability,".; TASImage; A left click on a image produced a one pixel zoom.; TCreatePrimitives; The ending of a polyline creation is based on the closeness of the two last entered points. The previous algorithm was based on user coordinates. It is now based on pixel to avoid the problem reported here.; TCanvas; When the first canvas created by ROOT was in batch mode, it was note possible to come back in interactive mode for the next canvases. this problem was reported here.; Cocoa Backend; Sometimes the mouse cursor did not change back to the window manager arrow when exiting a TCanvas.; freetype library; Updates builtin_freetype to 2.6.1 (current upstream version), which can detect PPC64LE machine. This was compiled and tested on SLC6 + ICC + x86_64, F21 + GCC + ppc64le, MacOSX 10.11.1 + Xcode 7.1 and Windows (ROOT 5.34). $ROOTSYS/graf2d/freetype/src/README was removed, because no issues were noticed with ICC compiler and -Wall -pedantic -ansi flags. Additionally --with-png=no --with-bzip2=no flags are passed to freetype configuration script. Default values for these options are auto. freetype finds libpng and libbzip2 on the system and builds extra modules. Then attempting to link against freetype one would need to link -lpng -lbzip2 explicitly otherwise linking will returns in undefined references. Otherwise we would need to check for libpng and libbzip2 on the system and adjust FREETYPE_LIBRARIES to include -lpng and -lbzip2. The current solution goes for the minimal configuration. The original request for this update was posted here.; 3D Graphics Libraries; Geometry Libraries; Database Libraries; Networking Libraries; THttpServer; Support of POST HTTP requests. For example, ROOT objects can be send with POST request and used as arguments of objects method execution in exe.bin and exe.json requests. Request and response HTTP headers are now directly accessible in THttpCallArg class; When command is registered with THttpServer::RegisterCommand() method, one could configure a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v606/release-notes.html:17581,config,configuration,17581,doc/v606/release-notes.html,https://root.cern,https://root.cern/doc/v606/release-notes.html,1,['config'],['configuration']
Modifiability,.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independant format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with external hash; TExMapIter TExMap iterator; TExec To execute a CINT command; TF1 The Parametric 1-D function; TF12 Projection of a TF2 along x or y; TF1Editor user interface for TF1 objects; T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:69157,inherit,inheritance,69157,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,3,['inherit'],['inheritance']
Modifiability,.; TEveTransEditor Editor for TEveTrans class.; TEveTransSubEditor Sub-editor for TEveTrans class.; TEveTriangleSet Generic mesh or soup of triangles with per-triangle normals and colors.; TEveTriangleSetEditor Editor for TEveTriangleSet class.; TEveTriangleSetGL GL-renderer for TEveTriangleSet class.; TEveUtil Standard utility functions for Reve.; TEveVSD Visualization Summary Data - a collection of trees holding standard event data in experiment independent format.; TEveVector2T<double> // A two-vector template without TObject inheritance and virtual functions.; TEveVector2T<float> // A two-vector template without TObject inheritance and virtual functions.; TEveVector4T<double> A four-vector template without TObject inheritance and virtual functions.; TEveVector4T<float> A four-vector template without TObject inheritance and virtual functions.; TEveVectorT<double> A three-vector template without TObject inheritance and virtual functions.; TEveVectorT<float> A three-vector template without TObject inheritance and virtual functions.; TEveViewer Reve representation of TGLViewer.; TEveViewerList List of Viewers providing common operations on TEveViewer collections.; TEveViewerListEditor GUI editor for TEveViewerList.; TEveWindow Abstract base-class for eve-windows.; TEveWindowEditor GUI editor for TEveWindow.; TEveWindowFrame Eve-window containing any TGFrame.; TEveWindowManager Manager for EVE windows.; TEveWindowPack Eve-window containing a TGPack.; TEveWindowSlot An unoccupied eve-window slot.; TEveWindowTab Eve-window containing a TGTab.; TEventIter Event iterator used by TProofPlayer's; TEventIterObj Event iterator for objects; TEventIterTree Event iterator for Trees; TEventIterUnit Event iterator for objects; TEventList A list of selected entries in a TTree.; TExMap Map with external hash; TExMapIter TExMap iterator; TExec To execute a CINT command; TF1 The Parametric 1-D function; TF12 Projection of a TF2 along x or y; TF1Editor user interface for TF1 objects; T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:73067,inherit,inheritance,73067,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,1,['inherit'],['inheritance']
Modifiability,".; The code is based on `‘SPlot: A statistical tool to unfold data distributions,’' Nucl. Instrum. Meth. A 555, 356 (2005) [arXiv:physics/0402083]. Creating an SPlot; To use this class, you first must have a pdf that includes yield parameters for (possibly several) different species, for example a signal and background yield. Those yields must be of type RooRealVar / RooLinearVar (or anything that derives from RooAbsRealLValue). This is necessary because RooStats needs to be able to set the yields to 0 and 1 to probe the PDF. After constructing the s weights, the yields will be restored to their original values.; To create an instance of the SPlot, supply a data set, the pdf to analyse, and a list which parameters of the pdf are yields. The SPlot will calculate SWeights, and include these as columns in the RooDataSet. The dataset will have two additional columns for every yield with name ""`<varname>`"":; L_<varname> is the likelihood for each event, i.e., the pdf evaluated for the given value of the variable ""varname"".; <varname>_sw is the value of the sWeight for the variable ""varname"" for each event. In SPlot::SPlot(), one can choose whether columns should be added to an existing dataset or whether a copy of the dataset should be created. Plotting s-weighted data; After computing the s weights, create a new dataset that uses the s weights of the variable of interest for weighting. If the yield parameter for signal was e.g. ""signalYield"", the dataset can be constructed as follows: RooDataSet data_signal(""<name>"", ""<title>"", <dataWithSWeights>, <variables>, 0, ""signalYield_sw"");; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; A complete tutorial with an extensive model is rs301_splot.C; Using ratios as yield parameters; As mentioned, RooStats needs to be able to modify the yield parameters. That means that they have to be a RooRealVar of a RooLinearVar. This allows using ratio parameters as in the following example: RooRealVar x(""x"", ""obs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SPlot.html:2171,variab,variable,2171,doc/master/classRooStats_1_1SPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SPlot.html,1,['variab'],['variable']
Modifiability,".; in toy MC studies, it is more efficient to use the prepareMultiGen()/generate() combination than calling the standard generate() multiple times as initialization overhead is only incurred once. ; Definition at line 1348 of file RooAbsPdf.cxx. ◆ generate() [6/6]. std::unique_ptr< RooDataSet > RooAbsPdf::generate ; (; RooAbsGenContext & ; context, . const RooArgSet & ; whatVars, . const RooDataSet * ; prototype, . double ; nEvents, . bool ; verbose, . bool ; randProtoOrder, . bool ; resampleProto, . bool ; skipInit = false, . bool ; extended = false . ); const. private . Internal method. ; Definition at line 1413 of file RooAbsPdf.cxx. ◆ generateBinned() [1/3]. RooAbsPdf::generateBinned ; (; const RooArgSet & ; whatVars, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {} . ); const. virtual . Generate a new dataset containing the specified variables with events sampled from our distribution. ; Parameters. [in]whatVarsChoose variables in which to generate events. Variables not listed here will remain constant and not be used for event generation ; [in]arg1,arg2,arg3,arg4,arg5,arg6Optional RooCmdArg to change behaviour of generateBinned() . ReturnsRooDataHist *, to be managed by caller.; Generate the specified number of events or expectedEvents() if not specified.; Any variables of this PDF that are not in whatVars will use their current values and be treated as fixed parameters. Returns zero in case of an error. The caller takes ownership of the returned dataset.; The following named arguments are supported . Type of CmdArg Effect on generation . Name(const char* name) Name of the output dataset . Verbose(bool flag) Print informational messages during event generation . NumEvents(int nevt) Generate specified number of events . Extended() The actual number of events generated will be sampled from a Poisson distribution with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:121202,variab,variables,121202,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,".; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsHighlighted; vector<TEveCaloData::CellId_t,allocator<TEveCaloData::CellId_t> >TEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; list<TEveElement*>TEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; Float_tfEtaMax; Float_tfEtaMin; vector<TEveCaloData::CellGeom_t,allocator<TEveCaloData::CellGeom_t> >fGeomVec; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Float_tfPhiMax; Float_tfPhiMin; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; vector<TEveCaloData::SliceInfo_t,allocator<TEveCaloData::SliceInfo_t> >TEveCaloData::fSliceInfos; vector<vector<float>,allocator<vector<float> > >fSliceVec; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopIte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloDataVec.html:19705,variab,variable,19705,root/html528/TEveCaloDataVec.html,https://root.cern,https://root.cern/root/html528/TEveCaloDataVec.html,4,['variab'],['variable']
Modifiability,".C', which; draws all PDEFoam cells with little boxes. The latter are; filled with colors according to the target value stored in the; cell. Also the cell number is drawn. TFile file(""foam.root"");; TMVA::PDEFoam *foam = (TMVA::PDEFoam*) gDirectory->Get(""MonoTargetRegressionFoam"");; foam->RootPlot2dim(""output.C"",""cell_value,cellnumber"");; gROOT->Macro(""output.C"");. void FillBinarySearchTree(const TMVA::Event* ev, Bool_t NoNegWeights = kFALSE); Insert event to internal foam density PDEFoamDistr. void DeleteBinarySearchTree(); Delete the fDistr object, which contains the binary search tree. void Init(); Initialize binary search tree, stored in object of type; PDEFoamDistr. void SetFoamType(TMVA::EFoamType ft); Set the foam type. This determinates the method of the; calculation of the density during the foam build-up. void ReadStream(istream& ); Read PDEFoam variables from stream 'istr'. void PrintStream(ostream& ) const; Write PDEFoam variables to stream 'os'. void AddXMLTo(void* parent); write foam variables to xml. void ReadXML(void* parent). Float_t VarTransform(Int_t idim, Float_t x) const. std::vector<Float_t> VarTransform(vector<Float_t>& invec) const. Float_t VarTransformInvers(Int_t idim, Float_t x) const. std::vector<Float_t> VarTransformInvers(vector<Float_t>& invec) const. PDEFoamDistr* GetDistr() const; { assert(fDistr); return fDistr; }. void SetnCells(Long_t nCells); {fNCells =nCells;}. void SetnSampl(Long_t nSampl); {fNSampl =nSampl;}. void SetnBin(Int_t nBin); {fNBin = nBin;}. void SetEvPerBin(Int_t EvPerBin); {fEvPerBin =EvPerBin;}. void SetNElements(UInt_t numb); {fNElements = numb;}. void SetVolumeFraction(Float_t vfr); {fVolFrac = vfr;}. void SetFillFoamWithOrigWeights(Bool_t new_val); {fFillFoamWithOrigWeights=new_val;}. void SetDTSeparation(TMVA::EDTSeparation new_val); {fDTSeparation=new_val;}. void SetPeekMax(Bool_t new_val); { fPeekMax = new_val; }. Int_t GetTotDim() const; coverity[ -tainted_data_return ]. {return fDim; }. TString GetFoamName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDEFoam.html:28533,variab,variables,28533,root/html528/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html528/TMVA__PDEFoam.html,1,['variab'],['variables']
Modifiability,".Definition TGeoCompositeShape.cxx:429; TGeoHMatrixMatrix class used for computing global transformations Should NOT be used for node definition.Definition TGeoMatrix.h:458; TGeoHMatrix::Clearvoid Clear(Option_t *option="""") overrideclear the data for this matrixDefinition TGeoMatrix.cxx:2512; TGeoIteratorPlugin::SetIteratorvoid SetIterator(const TGeoIterator *iter)Definition TGeoNode.h:237; TGeoIteratorPlugin::ProcessNodevirtual void ProcessNode()=0; TGeoIteratorA geometry iterator.Definition TGeoNode.h:248; TGeoIterator::GetCurrentMatrixconst TGeoMatrix * GetCurrentMatrix() constReturns global matrix for current node.Definition TGeoNode.cxx:1163; TGeoIterator::SetTopNamevoid SetTopName(const char *name)Set the top name for path.Definition TGeoNode.cxx:1234; TGeoIterator::GetLevelInt_t GetLevel() constDefinition TGeoNode.h:294; TGeoIterator::GetPathvoid GetPath(TString &path) constReturns the path for the current node.Definition TGeoNode.cxx:1193; TGeoIterator::SetUserPluginvoid SetUserPlugin(TGeoIteratorPlugin *plugin)Set a plugin.Definition TGeoNode.cxx:1282; TGeoIterator::Skipvoid Skip()Stop iterating the current branch.Definition TGeoNode.cxx:1243; TGeoManagerThe manager class for any TGeo geometry.Definition TGeoManager.h:44; TGeoManager::GetMotherTGeoNode * GetMother(Int_t up=1) constDefinition TGeoManager.h:493; TGeoManager::FindNormalFastDouble_t * FindNormalFast()Computes fast normal to next crossed boundary, assuming that the current point is close enough to the...Definition TGeoManager.cxx:2799; TGeoManager::DoRestoreStatevoid DoRestoreState()Restore a backed-up state without affecting the cache stack.Definition TGeoManager.cxx:1106; TGeoManager::GetCurrentDirectionconst Double_t * GetCurrentDirection() constDefinition TGeoManager.h:502; TGeoManager::CdUpvoid CdUp()Go one level up in geometry.Definition TGeoManager.cxx:1681; TGeoManager::DoBackupStatevoid DoBackupState()Backup the current state without affecting the cache stack.Definition TGeoManager.cxx:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:86628,plugin,plugin,86628,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,2,['plugin'],['plugin']
Modifiability,".Definition TObject.cxx:444; TObject::Browsevirtual void Browse(TBrowser *b)Browse object. May be overridden for another default action.Definition TObject.cxx:204; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::Clonevirtual TObject * Clone(const char *newname="""") constMake a clone of an object using the Streamer facility.Definition TObject.cxx:229; TObject::Streamervirtual void Streamer(TBuffer &)Stream an object of class TObject.Definition TObject.cxx:894; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Definition TObject.cxx:488; TObject::Printvirtual void Print(Option_t *option="""") constThis method must be overridden when a class wants to print itself.Definition TObject.cxx:642; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TPRegexpDefinition TPRegexp.h:36; TPRegexp::MatchBBool_t MatchB(const TString &s, const TString &mods="""", Int_t start=0, Int_t nMaxMatch=10)Definition TPRegexp.h:78; TROOT::IncreaseDirLevelstatic Int_t IncreaseDirLevel()Increase the indentation level for ls().Definition TROOT.cxx:2887; TROOT::IndentLevelstatic void IndentLevel()Functions used by ls() to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:38549,inherit,inherits,38549,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,".DrawDerivative(option);. The resulting graph will be drawn into the current pad.; If this function is used via the context menu, it recommended; to create a new canvas/pad before invoking this function. TObject * DrawIntegral(Option_t* option = ""al""); Draw integral of this function. An intermediate TGraph object is built and drawn with option.; The function returns a pointer to the TGraph object. Do:; TGraph *g = (TGraph*)myfunc.DrawIntegral(option);. The resulting graph will be drawn into the current pad.; If this function is used via the context menu, it recommended; to create a new canvas/pad before invoking this function. void DrawF1(const char* formula, Double_t xmin, Double_t xmax, Option_t* option = """"); Draw formula between xmin and xmax. Double_t Eval(Double_t x, Double_t y = 0, Double_t z = 0, Double_t t = 0) const; Evaluate this formula. Computes the value of this function (general case for a 3-d function); at point x,y,z.; For a 1-d function give y=0 and z=0; The current value of variables x,y,z is passed through x, y and z.; The parameters used will be the ones in the array params if params is given; otherwise parameters will be taken from the stored data members fParams. Double_t EvalPar(const Double_t* x, const Double_t* params = 0); Evaluate function with given coordinates and parameters. Compute the value of this function at point defined by array x; and current values of parameters in array params.; If argument params is omitted or equal 0, the internal values; of parameters (array fParams) will be used instead.; For a 1-D function only x[0] must be given.; In case of a multi-dimemsional function, the arrays x must be; filled with the corresponding number of dimensions. WARNING. In case of an interpreted function (fType=2), it is the; user's responsability to initialize the parameters via InitArgs; before calling this function.; InitArgs should be called at least once to specify the addresses; of the arguments x and params.; InitArgs should be call",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:37534,variab,variables,37534,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,5,['variab'],['variables']
Modifiability,".Index(funName, funPos + 1);; 1248 continue;; 1249 } else {; 1250 counter =; 1251 TString(formula(openingParenthesisPos + 1, formula.Index(')', funPos) - openingParenthesisPos - 1)); 1252 .Atoi();; 1253 }; 1254 }; 1255 // std::cout << ""openingParenthesisPos "" << openingParenthesisPos << "" counter is "" << counter << std::endl;; 1256 ; 1257 TString body = (isNormalized ? it->second.second : it->second.first);; 1258 if (isNormalized && body == """") {; 1259 Error(""PreprocessFormula"", ""%d dimension function %s has no normalized form."", it->first.second,; 1260 funName.Data());; 1261 break;; 1262 }; 1263 for (int i = 0; i < body.Length(); ++i) {; 1264 if (body[i] == '{') {; 1265 // replace {Vn} with variable names; 1266 i += 2; // skip '{' and 'V'; 1267 Int_t num = TString(body(i, body.Index('}', i) - i)).Atoi();; 1268 TString variable = variables[num];; 1269 TString pattern = TString::Format(""{V%d}"", num);; 1270 i -= 2; // restore original position; 1271 body.Replace(i, pattern.Length(), variable, variable.Length());; 1272 i += variable.Length() - 1; // update i to reflect change in body string; 1273 } else if (body[i] == '[') {; 1274 // update parameter counters in case of many functions (e.g. gaus(0)+gaus(3) ); 1275 Int_t tmp = i;; 1276 while (tmp < body.Length() && body[tmp] != ']') {; 1277 tmp++;; 1278 }; 1279 Int_t num = TString(body(i + 1, tmp - 1 - i)).Atoi();; 1280 num += counter;; 1281 TString replacement = TString::Format(""%d"", num);; 1282 ; 1283 body.Replace(i + 1, tmp - 1 - i, replacement, replacement.Length());; 1284 i += replacement.Length() + 1;; 1285 }; 1286 }; 1287 TString pattern;; 1288 if (defaultCounter && defaultVariables) {; 1289 pattern = TString::Format(""%s%s"", funName.Data(), (isNormalized ? ""n"" : """"));; 1290 }; 1291 if (!defaultCounter && defaultVariables) {; 1292 pattern = TString::Format(""%s%s(%d)"", funName.Data(), (isNormalized ? ""n"" : """"), counter);; 1293 }; 1294 if (defaultCounter && !defaultVariables) {; 1295 pattern = TString::Format(""%s%s[%",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:48042,variab,variable,48042,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,2,['variab'],['variable']
Modifiability,".MakeAll(); // generate documentation for all changed classes. or to run on just a few classes:. root[] THtml html; // create a THtml object; root[] html.MakeIndex(); // create auxilliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only. To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:. root[] html.Convert( ""hsimple.C"", ""Histogram example"" ). II. Configuration; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc.; II.1 Input files; In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: TEnv); of the classes you want to document, or call THtml::SetInputDir(); Example:; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html; II.2 Output directory; The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist THtml; will create it.; Example:; Root.Html.OutputDir: htmldoc; II.3 Linking other documentation; When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; Root.Html.LibName, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().; Example:; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains; Root.Html.MyLib: ../mylib/; THtml will create a link to ""../mylib/MyClass.html"".; The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is; $ rlibmap -f -r rootmap -l mylib/libMyLib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:2509,config,configuration,2509,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,6,"['config', 'variab']","['configuration', 'variable']"
Modifiability,".MyStruct(); ds.SetBranchAddress('structb', ms). Definition at line 79 of file TTree.h. Classes; class  TClusterIterator;  Helper class to iterate over cluster of baskets. More...;  ; class  TFriendLock;  Helper class to prevent infinite recursion in the usage of TTree Friends. More...;  . Public Types; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:19039,inherit,inherited,19039,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['inherit'],['inherited']
Modifiability,".RooAcceptReject,; # a plain accept/reject sampling algorithm [ ROOT.RooFit default before; # ROOT 5.23/04 ]; ROOT.RooAbsPdf.defaultGeneratorConfig().method1D(False, False).setLabel(""RooAcceptReject""); ; # Generate 10Kevt using ROOT.RooAcceptReject; data_ar = model.generate({x}, 10000, Verbose=True); data_ar.Print(); ; # Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; ; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far; model.specialGeneratorConfig(True).method1D(False, False).setLabel(""RooFoamGenerator""); ; # Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; ; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration; ROOT.RooAbsPdf.defaultGeneratorConfig().getConfigSection(""RooAcceptReject"").setRealValue(""nTrial1D"", 2000); ; # Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options); model.specialGeneratorConfig().getConfigSection(""RooFoamGenerator"").setRealValue(""chatLevel"", 1); ; # Generate 10Kevt using ROOT.RooFoamGenerator (FOAM verbosity increased; # with above chatLevel adjustment for illustration purposes); data_foam = model.generate({x}, 10000, Verbose=True); data_foam.Print(); [#0] ERROR:InputArguments -- Trying to set invalid state label 'RooAcceptReject' for category method1D; --- RooGenContext --- ; Using PDF RooChebychev::model[ x=x coefList=(0,0.5,-0.1) ]; Use PDF generator for (); Use MC sampling generator RooFoamGenerator for (x); RooDataSet::modelData[x] = 10000 entries; FFFFFFFFFF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf902__numgenconfig_8py.html:1906,config,configuration,1906,doc/master/rf902__numgenconfig_8py.html,https://root.cern,https://root.cern/doc/master/rf902__numgenconfig_8py.html,1,['config'],['configuration']
Modifiability,".SetOffset(b.GetOffset()-4); // rewind to the start of the int; 487 // if (R__n) continue;; 488 contp[j] = cle->New();; 489 cont = contp[j];; 490 }; 491 cle->Streamer(cont, buf);; 492 }; 493 // }; 494 } else {; 495 (*pstreamer)(buf, (char *)addr + ioffset, config->fCompInfo->fLength);; 496 }; 497 buf.CheckByteCount(start, count, aElement->GetFullName());; 498 ; 499 return 0;; 500 }; 501 ; 502 /** Direct copy of code from TStreamerInfo::WriteBufferAux,; 503 * potentially can be used later for non-text streaming */; 504 template<bool kIsTextT>; 505 INLINE_TEMPLATE_ARGS Int_t WriteStreamerLoop(TBuffer &buf, void *addr, const TConfiguration *config); 506 {; 507 UInt_t eoffset = 0; // extra parameter of TStreamerInfo::WriteBufferAux, 0 for all kind of objects writing; 508 UInt_t ioffset = eoffset + config->fOffset;; 509 ; 510 if (!kIsTextT && config->fCompInfo->fStreamer) {; 511 // Get any private streamer which was set for the data member.; 512 TMemberStreamer* pstreamer = config->fCompInfo->fStreamer;; 513 // -- We have a private streamer.; 514 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 515 // Loop over the entries in the clones array or the STL container.; 516 //for (int k = 0; k < narr; ++k) {; 517 // Get a pointer to the counter for the varying length array.; 518 Int_t* counter = (Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/);; 519 ; 520 // And call the private streamer, passing it the buffer, the object, and the counter.; 521 (*pstreamer)(buf, (char *) addr /*entry pointer*/ + ioffset /*object offset*/, *counter);; 522 //} for k; 523 buf.SetByteCount(pos, kTRUE);; 524 // We are done, next streamer element.; 525 return 0;; 526 }; 527 ; 528 // Get the class of the data member.; 529 TClass* cl = config->fCompInfo->fClass;; 530 // Which are we, an array of objects or an array of pointers to objects?; 531 Bool_t isPtrPtr = (strstr(config->fCompInfo->fElem->GetTypeName(), ""**"") != 0);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:19930,config,config,19930,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,".ain/file.root. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can be specified as (in sh, or equivalent csh): export http_proxy=http://pcsalo.cern.ch:3128 The proxy can also be specified via the static method TWebFile::SetProxy(). Basic authentication (AuthType Basic) is supported. The user name and passwd can be specified in the url like this: http://username:mypasswd@pcsalo.cern.ch/files/aap.root If the file specified in the URL does not exist or is not accessible the kZombie bit will be set in the TWebFile object. Use IsZombie() to see if the file is accessible. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 146 of file TWebFile.cxx. ◆ TWebFile() [3/3]. TWebFile::TWebFile ; (; TUrl ; url, . Option_t * ; opt = """" . ). Create a Web file object. ; A web file is the same as a read-only TFile except that it is being read via a HTTP server. Make sure url is a valid TUrl object. The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell variable. The proxy can be specified as (in sh, or equivalent csh): export http_proxy=http://pcsalo.cern.ch:3128 The proxy can also be specified via the static method TWebFile::SetProxy(). Basic authentication (AuthType Basic) is supported. The user name and passwd can be specified in the url like this: http://username:mypasswd@pcsalo.cern.ch/files/aap.root If the file specified in the URL does not exist or is not accessible the kZombie bit will be set in the TWebFile object. Use IsZombie() to see if the file is accessible. ; Definition at line 181 of file TWebFile.cxx. ◆ ~TWebFile(). TWebFile::~TWebFile ; (; ). virtual . Cleanup. ; Definition at line 199 of file TWebFile.cxx. Member Function Documentation. ◆ BasicAuthentication(). TString TWebFile::BasicAuthentication ; (; ). protectedvirtual . Return basic authentication scheme, to be added to the request. ; Definition at line 1385 of file TWebFile.cxx. ◆ CheckProxy(). void TWebFile::CheckProxy ; (; ). prot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:44970,variab,variable,44970,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['variab'],['variable']
Modifiability,".begin(); it != Use.end(); it++) it->second = 0;; 85 ; 86 std::vector<TString> mlist = gTools().SplitString( myMethodList, ',' );; 87 for (UInt_t i=0; i<mlist.size(); i++) {; 88 std::string regMethod(mlist[i]);; 89 ; 90 if (Use.find(regMethod) == Use.end()) {; 91 std::cout << ""Method \"""" << regMethod << ""\"" not known in TMVA under this name. Choose among the following:"" << std::endl;; 92 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) std::cout << it->first << "" "";; 93 std::cout << std::endl;; 94 return;; 95 }; 96 Use[regMethod] = 1;; 97 }; 98 }; 99 ; 100 // --------------------------------------------------------------------------------------------------; 101 ; 102 // --- Create the Reader object; 103 ; 104 TMVA::Reader *reader = new TMVA::Reader( ""!Color:!Silent"" );; 105 ; 106 // Create a set of variables and declare them to the reader; 107 // - the variable names MUST corresponds in name and type to those given in the weight file(s) used; 108 Float_t var1, var2;; 109 reader->AddVariable( ""var1"", &var1 );; 110 reader->AddVariable( ""var2"", &var2 );; 111 ; 112 // Spectator variables declared in the training have to be added to the reader, too; 113 Float_t spec1,spec2;; 114 reader->AddSpectator( ""spec1:=var1*2"", &spec1 );; 115 reader->AddSpectator( ""spec2:=var1*3"", &spec2 );; 116 ; 117 // --- Book the MVA methods; 118 ; 119 TString dir = ""datasetreg/weights/"";; 120 TString prefix = ""TMVARegression"";; 121 ; 122 // Book method(s); 123 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; 124 if (it->second) {; 125 TString methodName = it->first + "" method"";; 126 TString weightfile = dir + prefix + ""_"" + TString(it->first) + "".weights.xml"";; 127 reader->BookMVA( methodName, weightfile );; 128 }; 129 }; 130 ; 131 // Book output histograms; 132 TH1* hists[100];; 133 Int_t nhists = -1;; 134 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; 135 TH1* h = new TH1F( it->first.c_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegressionApplication_8C_source.html:3215,variab,variables,3215,doc/master/TMVARegressionApplication_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVARegressionApplication_8C_source.html,3,['variab'],"['variable', 'variables']"
Modifiability,".begin(); it<gvec.end(); it++ ){; std::cout << ""FACTOR "" << n << "" : "" << (*it) << std::endl;; n++;; }; }; ; ; int main( int argc, char** argv ); {; TMVAGAexample();; }; GeneticAlgorithm.h; GeneticFitter.h; IFitterTarget.h; mainint main()Definition Prototype.cxx:12; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; targetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t targetDefinition TGWin32VirtualXProxy.cxx:247; TMVA::GeneticAlgorithmBase definition for genetic algorithm.Definition GeneticAlgorithm.h:50; TMVA::GeneticGenesCut optimisation interface class for genetic algorithm.Definition GeneticGenes.h:41; TMVA::GeneticGenes::GetFactorsstd::vector< Double_t > & GetFactors()Definition GeneticGenes.h:49; TMVA::IFitterTargetInterface for a fitter 'target'.Definition IFitterTarget.h:44; TMVA::IntervalThe TMVA::Interval Class.Definition Interval.h:61; nconst Int_t nDefinition legend1.C:16; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; AuthorAndreas Hoecker ; Definition in file TMVAGAexample.C. tutorialstmvaTMVAGAexample.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAGAexample_8C.html:8704,variab,variable,8704,doc/master/TMVAGAexample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAGAexample_8C.html,1,['variab'],['variable']
Modifiability,".cxx. ◆ BuildPDF(). void TMVA::PDF::BuildPDF ; (; const TH1 * ; theHist). Definition at line 260 of file PDF.cxx. ◆ BuildSplinePDF(). void TMVA::PDF::BuildSplinePDF ; (; ). private . build the PDF from the original histograms ; Definition at line 321 of file PDF.cxx. ◆ CheckHist(). void TMVA::PDF::CheckHist ; (; ); const. private . sanity check: compare PDF with original histogram ; Definition at line 553 of file PDF.cxx. ◆ Class(). static TClass * TMVA::PDF::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::PDF::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::PDF::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 211 of file PDF.h. ◆ DeclareOptions(). void TMVA::PDF::DeclareOptions ; (; ). define the options (their key words) that can be set in the option string ; know options:; PDFInterpol[ivar] <string> Spline0, Spline1, Spline2 <default>, Spline3, Spline5, KDE used to interpolate reference histograms if no variable index is given, it is valid for ALL the variables. NSmooth <int> how often the input histos are smoothed; MinNSmooth <int> min number of smoothing iterations, for bins with most data; MaxNSmooth <int> max number of smoothing iterations, for bins with least data; NAvEvtPerBin <int> minimum average number of events per PDF bin; TransformOutput <bool> transform (often strongly peaked) likelihood output through sigmoid inversion; fKDEtype <KernelType> type of the Kernel to use (1 is Gaussian); fKDEiter <KerneIter> number of iterations (1 --> ""static KDE"", 2 --> ""adaptive KDE""); fBorderMethod <KernelBorder> the method to take care about ""border"" effects (1=no treatment , 2=kernel renormalization, 3=sample mirroring) . Definition at line 820 of file PDF.cxx. ◆ DeclFileName(). static const char * TMVA::PDF::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDF.html:21744,variab,variable,21744,doc/master/classTMVA_1_1PDF.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDF.html,2,['variab'],"['variable', 'variables']"
Modifiability,".cxx. ◆ Exit(). void TUnixSystem::Exit ; (; int ; code, . Bool_t ; mode = kTRUE . ). overridevirtual . Exit the application. ; Reimplemented from TSystem.; Definition at line 2187 of file TUnixSystem.cxx. ◆ ExpandPathName() [1/2]. char * TUnixSystem::ExpandPathName ; (; const char * ; path). overridevirtual . Expand a pathname getting rid of special shell characaters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. The user must delete returned string. Returns the expanded pathname or 0 in case of error. The user must delete returned string (delete []). ; Reimplemented from TSystem.; Definition at line 1882 of file TUnixSystem.cxx. ◆ ExpandPathName() [2/2]. Bool_t TUnixSystem::ExpandPathName ; (; TString & ; path). overridevirtual . Expand a pathname getting rid of special shell characters like ~. ; $, etc. For Unix/Win32 compatibility use instead of $XXX when using environment variables in a pathname. If compatibility is not an issue you can use on Unix directly $XXX. Returns kFALSE in case of success or kTRUE in case of error. ; Reimplemented from TSystem.; Definition at line 1749 of file TUnixSystem.cxx. ◆ FillWithCwd(). void TUnixSystem::FillWithCwd ; (; char * ; cwd); const. private . Fill buffer with current working directory. ; Definition at line 1473 of file TUnixSystem.cxx. ◆ FindDynamicLibrary(). const char * TUnixSystem::FindDynamicLibrary ; (; TString & ; sLib, . Bool_t ; quiet = kFALSE . ). overridevirtual . Returns the path of a shared library (searches for library in the shared library search path). ; If no file name extension is provided it first tries .so, .sl, .dl and then .a (for AIX). ; Reimplemented from TSystem.; Definition at line 4761 of file TUnixSystem.cxx. ◆ FindFile(). const char * TUnixSystem::FindFile ; (; const char * ; search, . TString & ; wfil, . EAccessMode ; mode = kFileExists . ). overridevirtual . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:46458,variab,variables,46458,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['variab'],['variables']
Modifiability,".cxx. ◆ RedirectWorker(). void TProof::RedirectWorker ; (; TSocket * ; s, . TSlave * ; sl, . Int_t ; output_size . ). private . Redirect output of worker sl to some merger. ; Definition at line 4258 of file TProof.cxx. ◆ RegisterDataSet(). Bool_t TProof::RegisterDataSet ; (; const char * ; dataSetName, . TFileCollection * ; dataSet, . const char * ; optStr = """" . ). virtual . Register the 'dataSet' on the cluster under the current user, group and the given 'dataSetName'. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). If 'opts' contains 'S' validation would be run serially (meaningful only if validation is required). Returns kTRUE on success. ; Reimplemented in TProofLite.; Definition at line 10707 of file TProof.cxx. ◆ ReleaseMonitor(). void TProof::ReleaseMonitor ; (; TMonitor * ; mon). private . Release the used monitor to be used, making sure to delete newly created monitors. ; Definition at line 2654 of file TProof.cxx. ◆ Remove() [1/2]. Int_t TProof::Remove ; (; const char * ; ref, . Bool_t ; all = kFALSE . ). Send remove request for the query specified by ref. ; If all = TRUE remove also local copies of the query, if any. Generic method working for all queries known by the server. This method can be also used to reset the list of queries waiting to be processed: for that purpose use ref == ""cleanupqueue"". ; Definition at line 6034 of file TProof.cxx. ◆ Remove() [2/2]. Int_t TProof::Remove ; (; Int_t ; query, . Bool_t ; all = kFALSE . ). Send remove request for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:130828,config,configured,130828,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['config'],['configured']
Modifiability,".cxx. ◆ RooCachedPdf() [4/4]. RooCachedPdf::RooCachedPdf ; (; const RooCachedPdf & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 79 of file RooCachedPdf.cxx. Member Function Documentation. ◆ actualObservables(). RooFit::OwningPtr< RooArgSet > RooCachedPdf::actualObservables ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ; If this p.d.f is operated without a fixed set of cache observables, return the actual observables of the external input p.d.f given the choice of observables defined in nset ; Implements RooAbsCachedPdf.; Definition at line 129 of file RooCachedPdf.cxx. ◆ actualParameters(). RooFit::OwningPtr< RooArgSet > RooCachedPdf::actualParameters ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ; If this p.d.f is operated in automatic mode, return the parameters of the external input p.d.f ; Implements RooAbsCachedPdf.; Definition at line 146 of file RooCachedPdf.cxx. ◆ Class(). static TClass * RooCachedPdf::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooCachedPdf::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooCachedPdf::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 51 of file RooCachedPdf.h. ◆ clone(). TObject * RooCachedPdf::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 26 of file RooCachedPdf.h. ◆ DeclFileName(). static const char * RooCachedPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 51",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:79732,variab,variables,79732,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,1,['variab'],['variables']
Modifiability,".cxx. ◆ SearchHighRes(). Int_t TSpectrum3::SearchHighRes ; (; const Double_t *** ; source, . Double_t *** ; dest, . Int_t ; ssizex, . Int_t ; ssizey, . Int_t ; ssizez, . Double_t ; sigma, . Double_t ; threshold, . Bool_t ; backgroundRemove, . Int_t ; deconIterations, . Bool_t ; markov, . Int_t ; averWindow . ). This function searches for peaks in source spectrum It is based on deconvolution method. ; First the background is removed (if desired), then Markov spectrum is calculated (if desired), then the response function is generated according to given sigma and deconvolution is carried out. It returns number of found peaks.; Function parameters:; source-pointer to the matrix of source spectrum; dest-pointer to the matrix of resulting deconvolved spectrum; ssizex-x length of source spectrum; ssizey-y length of source spectrum; ssizez-z length of source spectrum; sigma-sigma of searched peaks, for details we refer to manual; threshold-threshold value in % for selected peaks, peaks with amplitude less than threshold*highest_peak/100 are ignored, see manual; backgroundRemove-logical variable, set if the removal of background before deconvolution is desired; deconIterations-number of iterations in deconvolution operation; markov-logical variable, if it is true, first the source spectrum is replaced by new spectrum calculated using Markov chains method.; averWindow-averaging window of searched peaks, for details we refer to manual (applies only for Markov method). Peaks searching; Goal: to identify automatically the peaks in spectrum with the presence of the continuous background, one- and two-fold coincidences (ridges) and statistical fluctuations - noise.; The common problems connected with correct peak identification in three-dimensional coincidence spectra are. non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; non-sensitivity of the algorithm to continuous background; non-sensitivity to one-fold coincidences (coincidences peak - p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum3.html:35625,variab,variable,35625,doc/master/classTSpectrum3.html,https://root.cern,https://root.cern/doc/master/classTSpectrum3.html,2,['variab'],['variable']
Modifiability,.cxx. ◆ Streamer(). virtual void TMinuitMinimizer::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TMinuitMinimizer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 272 of file TMinuitMinimizer.h. ◆ SuppressMinuitWarnings(). void TMinuitMinimizer::SuppressMinuitWarnings ; (; bool ; nowarn = true). suppress the minuit warnings (if called with false will enable them) By default they are suppressed only when the printlevel is <= 0 ; Definition at line 873 of file TMinuitMinimizer.cxx. ◆ UseStaticMinuit(). bool TMinuitMinimizer::UseStaticMinuit ; (; bool ; on = true). static . static function to switch on/off usage of static global TMinuit instance (gMinuit) By default it is used (i.e. ; is on). Method returns the previous state ; Definition at line 110 of file TMinuitMinimizer.cxx. ◆ VariableIndex(). int TMinuitMinimizer::VariableIndex ; (; const std::string & ; name); const. overridevirtual . get index of variable given a variable given a name return always -1 . ; (It is Not implemented) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 434 of file TMinuitMinimizer.cxx. ◆ VariableName(). std::string TMinuitMinimizer::VariableName ; (; unsigned int ; ivar); const. overridevirtual . return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const; ; get name of variables (override if minimizer support storing of variable names) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 427 of file TMinuitMinimizer.cxx. ◆ X(). const double * TMinuitMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 120 of file TMinuitMinimizer.h. Member Data Documentation. ◆ fCovar. std::vector<double> TMinuitMinimizer::fCovar. private . Definition at line 262 of file TMinuitMinimizer.h. ◆ fDim. unsigned int TMinuitMinimizer::fDim. private . Definition at line 258 of file TMin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:27004,variab,variable,27004,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,2,['variab'],['variable']
Modifiability,".cxx. ◆ translateImpl(). std::string RooRealSumPdf::translateImpl ; (; RooFit::Detail::CodeSquashContext & ; ctx, . RooAbsArg const * ; klass, . RooArgList const & ; funcList, . RooArgList const & ; coefList, . bool ; normalize = false . ). staticprivate . Definition at line 300 of file RooRealSumPdf.cxx. Friends And Related Symbol Documentation. ◆ RooAddition. friend class RooAddition. friend . Definition at line 99 of file RooRealSumPdf.h. ◆ RooAddPdf. friend class RooAddPdf. friend . Definition at line 98 of file RooRealSumPdf.h. ◆ RooRealSumFunc. friend class RooRealSumFunc. friend . Definition at line 100 of file RooRealSumPdf.h. Member Data Documentation. ◆ _coefList. RooListProxy RooRealSumPdf::_coefList. protected . List of coefficients. ; Definition at line 89 of file RooRealSumPdf.h. ◆ _doFloor. bool RooRealSumPdf::_doFloor = false. protected . Introduce floor at zero in pdf. ; Definition at line 92 of file RooRealSumPdf.h. ◆ _doFloorGlobal. bool RooRealSumPdf::_doFloorGlobal = false. staticprotected . Global flag for introducing floor at zero in pdf. ; Definition at line 94 of file RooRealSumPdf.h. ◆ _extended. bool RooRealSumPdf::_extended. protected . Allow use as extended p.d.f. ; Definition at line 90 of file RooRealSumPdf.h. ◆ _funcList. RooListProxy RooRealSumPdf::_funcList. protected . List of component FUNCs. ; Definition at line 88 of file RooRealSumPdf.h. ◆ _haveWarned. bool RooRealSumPdf::_haveWarned {false}. mutableprotected . ! ; Definition at line 93 of file RooRealSumPdf.h. ◆ _normIntMgr. RooObjCacheManager RooRealSumPdf::_normIntMgr. mutableprotected . ! The integration cache manager ; Definition at line 85 of file RooRealSumPdf.h. Libraries for RooRealSumPdf:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooRealSumPdf.h; roofit/roofitcore/src/RooRealSumPdf.cxx. RooRealSumPdf. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:92769,extend,extended,92769,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,1,['extend'],['extended']
Modifiability,".cxx:110; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; Creates a Tree with name and title.; Various kinds of branches can be added to a tree:; Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran structures.; Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures. It is strongly recommended to persistify those as objects rather than lists of leaves.; auto branch = tree.Branch(branchname, address, leaflist, bufsize). address is the address of the first item of a structure; leaflist is the concatenation of all the variable names and types separated by a colon character : The variable name and the variable type are separated by a slash (/). The variable type must be 1 character. (Characters after the first are legal and will be appended to the visible name of the leaf, but have no effect.) If no type is given, the type of the variable is assumed to be the same as the previous variable. If the first variable does not have a type, it is assumed of type F by default. The list of currently supported types is given below:; C : a character string terminated by the 0 character; B : an 8 bit signed integer (Char_t); Treated as a character when in an array.; b : an 8 bit unsigned integer (UChar_t); S : a 16 bit signed integer (Short_t); s : a 16 bit unsigned integer (UShort_t); I : a 32 bit signed integer (Int_t); i : a 32 bit unsigned integer (UInt_t); F : a 32 bit floating point (Float_t); f : a 24 bit floating point with truncated mantissa (Float16_t); D : a 64 bit floating point (Double_t); d : a 24 bit truncated floating point (Double32_t); L : a 64 bit signed integer (Long64_t); l : a 64 bit unsigned integer (ULong64_t); G : a long signed inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:2783,variab,variable,2783,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variable']
Modifiability,.cxx:3052; TROOT::TROOTTROOT(const TROOT &)=delete; TROOT::GetNclassesInt_t GetNclasses() constGet number of classes.Definition TROOT.cxx:1876; TROOT::GetExtraInterpreterArgsstatic const char **& GetExtraInterpreterArgs()INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer.Definition TROOT.cxx:2962; TROOT::SetMacroPathstatic void SetMacroPath(const char *newpath)Set or extend the macro search path.Definition TROOT.cxx:2788; TROOT::SetSelectedPadvoid SetSelectedPad(TVirtualPad *pad)Definition TROOT.h:333; TROOT::InitThreadsvoid InitThreads()Initialize threads library.Definition TROOT.cxx:2053; TROOT::fUUIDsTProcessUUID * fUUIDsPointer to TProcessID managing TUUIDs.Definition TROOT.h:166; TROOT::fConfigFeaturesTString fConfigFeaturesROOT ./configure detected build features.Definition TROOT.h:112; TROOT::GetFunctionTemplateTFunctionTemplate * GetFunctionTemplate(const char *name)Definition TROOT.cxx:1618; TROOT::fPluginManagerTPluginManager * fPluginManagerKeeps track of plugin library handlers.Definition TROOT.h:169; TROOT::GetGeometryTObject * GetGeometry(const char *name) constReturn pointer to Geometry with name.Definition TROOT.cxx:1747; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498; TROOT::fExecutingMacroBool_t fExecutingMacroTrue while executing a TMacro.Definition TROOT.h:136; TROOT::GetListOfBrowsablesTList * GetListOfBrowsables() constDefinition TROOT.h:258; TROOT::fBuiltDateInt_t fBuiltDateDate of ROOT built.Definition TROOT.h:118; TROOT::fIsWebDisplayBatchBool_t fIsWebDisplayBatchTrue if web widgets are not displayed.Definition TROOT.h:129; TROOT::GetSharedLibDirstatic const TString & GetSharedLibDir()Get the shared libraries directory in the installation. Static utility function.Definition TROOT.cxx:3031; TROOT::SetEscapevoid SetEscape(Bool_t flag=kTRUE)Definition TROOT.h:327; TROOT::GetVersionCodeInt_t GetVersion,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8h_source.html:46899,plugin,plugin,46899,doc/v632/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8h_source.html,1,['plugin'],['plugin']
Modifiability,.cxx:3056; TROOT::TROOTTROOT(const TROOT &)=delete; TROOT::GetNclassesInt_t GetNclasses() constGet number of classes.Definition TROOT.cxx:1876; TROOT::GetExtraInterpreterArgsstatic const char **& GetExtraInterpreterArgs()INTERNAL function! Used by rootcling to inject interpreter arguments through a C-interface layer.Definition TROOT.cxx:2966; TROOT::SetMacroPathstatic void SetMacroPath(const char *newpath)Set or extend the macro search path.Definition TROOT.cxx:2788; TROOT::SetSelectedPadvoid SetSelectedPad(TVirtualPad *pad)Definition TROOT.h:333; TROOT::InitThreadsvoid InitThreads()Initialize threads library.Definition TROOT.cxx:2053; TROOT::fUUIDsTProcessUUID * fUUIDsPointer to TProcessID managing TUUIDs.Definition TROOT.h:166; TROOT::fConfigFeaturesTString fConfigFeaturesROOT ./configure detected build features.Definition TROOT.h:112; TROOT::GetFunctionTemplateTFunctionTemplate * GetFunctionTemplate(const char *name)Definition TROOT.cxx:1618; TROOT::fPluginManagerTPluginManager * fPluginManagerKeeps track of plugin library handlers.Definition TROOT.h:169; TROOT::GetGeometryTObject * GetGeometry(const char *name) constReturn pointer to Geometry with name.Definition TROOT.cxx:1747; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498; TROOT::fExecutingMacroBool_t fExecutingMacroTrue while executing a TMacro.Definition TROOT.h:136; TROOT::GetListOfBrowsablesTList * GetListOfBrowsables() constDefinition TROOT.h:258; TROOT::fBuiltDateInt_t fBuiltDateDate of ROOT built.Definition TROOT.h:118; TROOT::fIsWebDisplayBatchBool_t fIsWebDisplayBatchTrue if web widgets are not displayed.Definition TROOT.h:129; TROOT::GetSharedLibDirstatic const TString & GetSharedLibDir()Get the shared libraries directory in the installation. Static utility function.Definition TROOT.cxx:3035; TROOT::SetEscapevoid SetEscape(Bool_t flag=kTRUE)Definition TROOT.h:327; TROOT::GetVersionCodeInt_t GetVersion,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:46898,plugin,plugin,46898,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,1,['plugin'],['plugin']
Modifiability,".cxx:401; TMVA::TransformationHandlerClass that contains all the data information.Definition TransformationHandler.h:56; TMVA::TransformationHandler::AddTransformationVariableTransformBase * AddTransformation(VariableTransformBase *, Int_t cls)Definition TransformationHandler.cxx:105; TMVA::VariableDecorrTransformLinear interpolation class.Definition VariableDecorrTransform.h:49; TMVA::VariableGaussTransformGaussian Transformation of input variables.Definition VariableGaussTransform.h:72; TMVA::VariableIdentityTransformLinear interpolation class.Definition VariableIdentityTransform.h:45; TMVA::VariableNormalizeTransformLinear interpolation class.Definition VariableNormalizeTransform.h:48; TMVA::VariablePCATransformLinear interpolation class.Definition VariablePCATransform.h:48; TMVA::VariableTransformBaseLinear interpolation class.Definition VariableTransformBase.h:54; TMVA::VariableTransformBase::SelectInputvirtual void SelectInput(const TString &inputVariables, Bool_t putIntoVariables=kFALSE)select the variables/targets/spectators which serve as input to the transformationDefinition VariableTransformBase.cxx:110; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TObjStringCollectable string class.Definition TObjString.h:28; TStringBasic string class.Definition TString.h:139; TString::ReplaceTString & Replace(Ssiz_t pos, Ssiz_t n, const char *s)Definition TString.h:694; TString::RemoveTString & Remove(Ssiz_t pos)Definition TString.h:685; TString::Sizeofvirtual Int_t Sizeof() constReturns size string will occupy on I/O buffer.Definition TString.cxx:1401; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp=kExact) constDefinition TString.h:632; TString::IndexSsiz_t Index(const char *pat, Ssiz_t i=0, ECaseCompare cmp=kExact) constDefinition TString.h:651; int; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::gToolsTools & gTools(); TMVA::CreateVariableTransformsvoid CreateVariabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:10204,variab,variables,10204,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['variab'],['variables']
Modifiability,.cxx:470; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::DrawOptionRooCmdArg DrawOption(const char *opt)Definition RooGlobalFunc.cxx:130; RooFit::XErrorSizeRooCmdArg XErrorSize(double width)Definition RooGlobalFunc.cxx:364; RooFit::MarkerSizeRooCmdArg MarkerSize(Size_t size)Definition RooGlobalFunc.cxx:348; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; c1return c1Definition legend1.C:41; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf711_lagrangianmorphDefinition rf711_lagrangianmorph.py:1; xmlio::Nameconst char * NameDefinition TXMLSetup.cxx:67; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RooLagrangianMorphFunc::ConfigDefinition RooLagrangianMorphFunc.h:85; RooLagrangianMorphFunc::Config::couplingsRooArgList couplingsDefinition RooLagrangianMorphFunc.h:92; RooLagrangianMorphFunc::Config::observableNamestd::string observableNameDefinition RooLagrangianMorphFunc.h:86; RooLagrangianMorphFunc::Config::fileNamestd::string fileNameDefinition RooLagrangianMorphFunc.h:88; RooLagrangianMorphFunc::Config::folderNamesstd::vector< std::string > folderNamesDefinition RooLagrangianMorphFunc.h:91; ; [#0] PROGRESS:InputArguments -- initializing physics inputs from file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/roofit/input_histos_rf_lagrangianmorph.root with object name(s) 'pTV'; [#0] PROGRESS:Caching -- creating cache from getCache function for 0x7ffccdd4a418; [#0] PROGRESS:Caching -- current storage has size 3; [#0] PROGRESS:ObjectHandling -- observable: pTV; [#0] PROGRESS:ObjectHandling -- binWidth: binWidth_pTV; [#1] INFO:DataHandling -- RooDataHist::adjustBinning(morph_dh_cHq3=0.01): fit range of variable pTV expanded to nearest bin boundaries: ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html:12743,coupling,couplingsRooArgList,12743,doc/master/rf711__lagrangianmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html,2,['coupling'],"['couplingsDefinition', 'couplingsRooArgList']"
Modifiability,".d.f value with normalization set nset and integrated over iset in range 'rangeName'. ;  ; void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ;  ; void updateCoefficients (AddCacheElem &cache, const RooArgSet *nset) const;  Update the coefficient values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply the various range and dimensional corrections needed in the current use context. ;  ;  Protected Member Functions inherited from RooResolutionModel; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:63644,inherit,inherited,63644,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,".d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:15474,extend,extended,15474,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,2,['extend'],['extended']
Modifiability,".dat; // this file has 3 columns of float data; TString dir = gROOT->GetTutorialDir();; dir.Append(""/tree/"");; dir.ReplaceAll(""/./"",""/"");; ifstream in;; in.open(Form(""%sbasic.dat"",dir.Data()));; ; Float_t x,y,z;; Int_t nlines = 0;; auto f = TFile::Open(""basic.root"",""RECREATE"");; TH1F h1(""h1"",""x distribution"",100,-4,4);; TNtuple ntuple(""ntuple"",""data from ascii file"",""x:y:z"");; ; while (1) {; in >> x >> y >> z;; if (!in.good()) break;; if (nlines < 5) printf(""x=%8f, y=%8f, z=%8f\n"",x,y,z);; h1.Fill(x);; ntuple.Fill(x,y,z);; nlines++;; }; printf("" found %d points\n"",nlines);; ; in.close();; ; f->Write();; }; f#define f(i)Definition RSha256.hxx:104; Riostream.h; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; gROOT#define gROOTDefinition TROOT.h:406; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::AppendTString & Append(const char *cs)Definition TString.h:572; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; h1TH1F * h1Definition legend1.C:5; AuthorRene Brun ; Definition in file basic.C. tutorialstreebasic.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/basic_8C.html:1796,variab,variables,1796,doc/master/basic_8C.html,https://root.cern,https://root.cern/doc/master/basic_8C.html,1,['variab'],['variables']
Modifiability,".f = integrated observables + any extra specified by user; 3870 RooArgSet finalNset(nset) ;; 3871 finalNset.add(cloneList,true) ;; 3872 std::unique_ptr<RooAbsReal> cdf{tmp->createIntegral(cloneList,finalNset,""CDF"")};; 3873 ; 3874 // Transfer ownership of cloned items to top-level c.d.f object; 3875 cdf->addOwnedComponents(*tmp) ;; 3876 cdf->addOwnedComponents(cloneList) ;; 3877 cdf->addOwnedComponents(loList) ;; 3878 ; 3879 return RooFit::makeOwningPtr(std::move(cdf));; 3880}; 3881 ; 3882 ; 3883////////////////////////////////////////////////////////////////////////////////; 3884/// Return a RooFunctor object bound to this RooAbsReal with given definition of observables; 3885/// and parameters; 3886 ; 3887RooFunctor* RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars, const RooArgSet& nset) const; 3888{; 3889 RooArgSet realObs;; 3890 getObservables(&obs, realObs);; 3891 if (realObs.size() != obs.size()) {; 3892 coutE(InputArguments) << ""RooAbsReal::functor("" << GetName() << "") ERROR: one or more specified observables are not variables of this p.d.f"" << std::endl ;; 3893 return nullptr;; 3894 }; 3895 RooArgSet realPars;; 3896 getObservables(&pars, realPars);; 3897 if (realPars.size() != pars.size()) {; 3898 coutE(InputArguments) << ""RooAbsReal::functor("" << GetName() << "") ERROR: one or more specified parameters are not variables of this p.d.f"" << std::endl ;; 3899 return nullptr;; 3900 }; 3901 ; 3902 return new RooFunctor(*this,obs,pars,nset) ;; 3903}; 3904 ; 3905 ; 3906 ; 3907////////////////////////////////////////////////////////////////////////////////; 3908/// Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables; 3909/// and parameters; 3910 ; 3911TF1* RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars, const RooArgSet& nset) const; 3912{; 3913 // Check that specified input are indeed variables of this function; 3914 RooArgSet realObs;; 3915 getObservables(&obs, realObs) ;; 3916 if (realObs.size()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:167568,variab,variables,167568,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,".f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset) const; Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return generator context optimized for generating events from product p.d.f.s. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Query internal generation capabilities of component p.d.f.s and aggregate capabilities; into master configuration passed to the generator context. void initGenerator(Int_t code); Forward one-time initialization call to component generation initialization; methods. void generateEvent(Int_t code); Generate a single event with configuration specified by 'code'; Defer internal generation to components as encoded in the _genCode; registry for given generator code. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Forward determination of safety of internal generator code to; component p.d.f that would generate the given observable. RooArgSet* findPdfNSet(RooAbsPdf& pdf) const; Look up user specified normalization set for given input PDF component. RooArgSet* getConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected) const; Return all parameter constraint p.d.f.s on parameters listed in constrainedParams; The observables set is required to distinguish unambiguously p.d.f in terms; of observables and parameters, which are not constraints, and p.d.fs in terms; of parameters only, which can serve as constraints p.d.f.s. RooArgSet* getConnectedParameters(const RooArgSet& observables) const; Return all parameter constraint p.d.f.s on parameters listed in constrainedParams; The observables set is required to di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProdPdf.html:55537,config,configuration,55537,root/html532/RooProdPdf.html,https://root.cern,https://root.cern/root/html532/RooProdPdf.html,4,['config'],['configuration']
Modifiability,".f return the extension abilities of; that p.d.f, otherwise return CanNotBeExtended. Double_t expectedEvents(const RooArgSet* nset) const; Return the expected number of events associated with the extentable input p.d.f; in the product. If there is no extendable term, return zero and issue and error. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return generator context optimized for generating events from product p.d.f.s. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Query internal generation capabilities of component p.d.f.s and aggregate capabilities; into master configuration passed to the generator context. void initGenerator(Int_t code); Forward one-time initialization call to component generation initialization; methods. void generateEvent(Int_t code); Generate a single event with configuration specified by 'code'; Defer internal generation to components as encoded in the _genCode; registry for given generator code. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Forward determination of safety of internal generator code to; component p.d.f that would generate the given observable. RooArgSet* findPdfNSet(RooAbsPdf& pdf) const; Look up user specified normalization set for given input PDF component. RooArgSet* getConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected) const; Return all parameter constraint p.d.f.s on parameters listed in constrainedParams; The observables set is required to distinguish unambiguously p.d.f in terms; of observables and parameters, which are not constraints, and p.d.fs in terms; of parameters only, which can serve as constraints p.d.f.s. void getParametersHook(const RooArgSet* , RooArgSet* , Bool_t stripDisconnected) const. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface function use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooProdPdf.html:53874,config,configuration,53874,root/html528/RooProdPdf.html,https://root.cern,https://root.cern/root/html528/RooProdPdf.html,2,['config'],['configuration']
Modifiability,".f. ;  ; std::unique_ptr< RooArgSet > _vars;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddGenContext.html:16950,inherit,inherited,16950,doc/master/classRooAddGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAddGenContext.html,2,['inherit'],['inherited']
Modifiability,".fPoints[2] - fTracks[4].fVertex[2]; // with fTracks[4].fNpoint==3. tree->Draw(""fValid&0x1"",""(fNvertex>10) && (fNseg<=6000)""). You can use bit patterns (&,|,<<) or Boolean operation. tree->Draw(""fPx"",""(fBx>.4) || (fBy<=-.4)"");; tree->Draw(""fPx"",""fBx*fBx*(fBx>.4) + fBy*fBy*(fBy<=-.4)"");. The selection argument is used as a weight. The expression returns a multiplier and in case of a Boolean the multiplier is either 0 (for false) or 1 (for true). The first command draws fPx for the range between with conditions on fBx and fBy, the second command draws fPx for the same conditions, but adds a weight using the result of the second expression. tree->Draw(""fVertex"",""fVertex>10""). When using arrays in the selection and the expression, the selection is applied to each element of the array.; if (fVertex[0]>10) fVertex[0]; if (fVertex[1]>10) fVertex[1]; if (fVertex[2]>10) fVertex[2]. tree->Draw(""fPx[600]""); tree->Draw(""fPx[600]"",""fNtrack > 600""). When using a specific element for a variable length array the entries with fewer elements are ignored. Thus these two commands are equivalent. tree->Draw(""Nation""). Nation is a char* branch. When drawing a char* it will plot an alphanumeric histogram, of the different value of the string Nation. The axis will have the Nation values. See “Histograms”. tree->Draw(""MyChar +0""). If you want to plot a char* variable as a byte rather than a string, you can use the syntax above. tree->Draw(""fTracks.fTriggerBits""). fTriggerBits is a data member of TTrack of type TBits. Objects of class TBits can be drawn directly. This command will create a 1D histogram from 0 to nbits which is filled for each non-null bit-number. tree->Draw(""fMatrix-Alt$(fClosestDistance,0)""). Alt$(primary,alternate) returns the value of “primary” if it is available for the current iteration; otherwise return the value of “alternate”. Assuming that fClosestDistance is a smaller array than fMatrix. This example will draw fMatrix[i]+fClosestDistance[i] for i less than the size ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:605506,variab,variable,605506,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['variab'],['variable']
Modifiability,".fPx[2];; 6694/// ~~~; 6695/// is executed by one of the method of the skeleton,; 6696/// somePx will updated with the current value of fPx of the 3rd track.; 6697///; 6698/// Both macrofilename and the optional cutfilename are expected to be; 6699/// the name of source files which contain at least a free standing; 6700/// function with the signature:; 6701/// ~~~ {.cpp}; 6702/// x_t macrofilename(); // i.e function with the same name as the file; 6703/// ~~~; 6704/// and; 6705/// ~~~ {.cpp}; 6706/// y_t cutfilename(); // i.e function with the same name as the file; 6707/// ~~~; 6708/// x_t and y_t needs to be types that can convert respectively to a double; 6709/// and a bool (because the skeleton uses:; 6710///; 6711/// if (cutfilename()) htemp->Fill(macrofilename());; 6712///; 6713/// These two functions are run in a context such that the branch names are; 6714/// available as local variables of the correct (read-only) type.; 6715///; 6716/// Note that if you use the same 'variable' twice, it is more efficient; 6717/// to 'cache' the value. For example:; 6718/// ~~~ {.cpp}; 6719/// Int_t n = fEventNumber; // Read fEventNumber; 6720/// if (n<10 || n>10) { ... }; 6721/// ~~~; 6722/// is more efficient than; 6723/// ~~~ {.cpp}; 6724/// if (fEventNumber<10 || fEventNumber>10); 6725/// ~~~; 6726/// Also, optionally, the generated selector will also call methods named; 6727/// macrofilename_methodname in each of 6 main selector methods if the method; 6728/// macrofilename_methodname exist (Where macrofilename is stripped of its; 6729/// extension).; 6730///; 6731/// Concretely, with the script named h1analysisProxy.C,; 6732///; 6733/// - The method calls the method (if it exist); 6734/// - Begin -> void h1analysisProxy_Begin(TTree*);; 6735/// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; 6736/// - Notify -> bool h1analysisProxy_Notify();; 6737/// - Process -> bool h1analysisProxy_Process(Long64_t);; 6738/// - SlaveTerminate -> void h1analysisProxy_SlaveTerm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:262485,variab,variable,262485,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,".g. for STL classes like std::list, a TVirtualBranchBrowsable object is created instead. The methods' names will have a ""@"" prepended, to distinguish them from the contained elements' methods.; This browser helper object is not part of the default list of registered generators (see TVirtualBranchBrowsable::RegisterDefaultGenerators()). If you want to use it, you should call TCollectionMethodBrowsable::Register(); As it extends the functionality of TVirtualBranchBrowsable, one might want to unregister the generator of the ""@size()"" method by calling TCollectionPropertyBrowsable::Unregister(); ; Definition at line 178 of file TBranchBrowsable.h. Public Member Functions;  ~TCollectionMethodBrowsable () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMethodBrowsable;  ~TMethodBrowsable () override;  ; const char * GetIconName () const override;  return our special icons ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualBranchBrowsable;  ~TVirtualBranchBrowsable () override;  Destructor. Delete our leaves. ;  ; void Browse (TBrowser *b) override;  Calls TTree::Draw on the method if return type is not a class; otherwise expands returned object's ""folder"". ;  ; const TBranch * GetBranch () const;  return the parent branch (might be many levels up) ;  ; TClass * GetClassType () const;  return the type of this browsable object ;  ; const char * GetIconName () const override;  return icon shown when browsing a TVirtualBranchBrowsable ;  ; TList * GetLeaves () const;  Return list of leaves. If not set up yet we'll create them. ;  ; const TVirtualBranchBrowsable * GetParent () const;  return the parent TVirtualBranchBrowsa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollectionMethodBrowsable.html:1391,inherit,inherited,1391,doc/master/classTCollectionMethodBrowsable.html,https://root.cern,https://root.cern/doc/master/classTCollectionMethodBrowsable.html,1,['inherit'],['inherited']
Modifiability,".getVal(); print("" [2] int_dx landau(x) = "", val2); ; # Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; ; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'; landau.setIntegratorConfig(customConfig); ; # Calculate integral over landau custom numeric integrator specified as; # object default; intLandau3 = landau.createIntegral({x}); val3 = intLandau3.getVal(); print("" [3] int_dx landau(x) = "", val3); ; # Another possibility: Change global default for 1D numeric integration; # strategy on finite domains; if not integratorGKNotExisting:; ROOT.RooAbsReal.defaultIntegratorConfig().method1D().setLabel(""RooAdaptiveGaussKronrodIntegrator1D""); ; # Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; ; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration; ROOT.RooAbsReal.defaultIntegratorConfig().getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30); ; # Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options); customConfig.getConfigSection(""RooAdaptiveGaussKronrodIntegrator1D"").setRealValue(""maxSeg"", 50); customConfig.getConfigSection(""RooAdaptiveGaussKronrodIntegrator1D"").setCatLabel(""method"", ""15Points""); ; # Example of how to print set of possible values for ""method"" category; customConfig.getConfigSection(""RooAdaptiveGaussKronrodIntegrator1D"").find(""method"").Print(""v""); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; Requested precision: 1e-07 absolute, 1e-07 relative; ; 1-D integration method: RooIntegrator1D (RooImproperIntegrator1D if open-ended); 2-D integration method: Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf901__numintconfig_8py.html:3862,config,configuration,3862,doc/master/rf901__numintconfig_8py.html,https://root.cern,https://root.cern/doc/master/rf901__numintconfig_8py.html,1,['config'],['configuration']
Modifiability,".h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::mutex fMutex;  size of thread-specific array ;  ; Int_t fNvert;  ; Int_t fNz;  ; Double_t * fScale;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Navigation data per thread. ;  ; Double_t * fX;  ; Double_t * fX0;  ; Double_t * fY;  ; Double_t * fY0;  ; Double_t * fZ;  ; Double_t fZcurrent;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 ));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoXtru.html:20800,inherit,inherited,20800,doc/master/classTGeoXtru.html,https://root.cern,https://root.cern/doc/master/classTGeoXtru.html,3,['inherit'],['inherited']
Modifiability,".h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf707_kernelestimation(); {; // C r e a t e l o w s t a t s 1 - D d a t a s e t; // -------------------------------------------------------; ; // Create a toy pdf for sampling; RooRealVar x(""x"", ""x"", 0, 20);; RooPolynomial p(""p"", ""p"", x, RooArgList(0.01, -0.01, 0.0004));; ; // Sample 500 events from p; std::unique_ptr<RooDataSet> data1{p.generate(x, 200)};; ; // C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; ; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges; RooKeysPdf kest1(""kest1"", ""kest1"", x, *data1, RooKeysPdf::MirrorBoth);; ; // An adaptive kernel estimation pdf on the same data without mirroring option; // for comparison; RooKeysPdf kest2(""kest2"", ""kest2"", x, *data1, RooKeysPdf::NoMirror);; ; // Adaptive kernel estimation pdf with increased bandwidth scale factor; // (promotes smoothness over detail preservation); RooKeysPdf kest3(""kest1"", ""kest1"", x, *data1, RooKeysPdf::MirrorBoth, 2);; ; // Plot kernel estimation pdfs with and without mirroring over data; RooPlot *frame = x.frame(Title(""Adaptive kernel estimation pdf with and w/o mirroring""), Bins(20));; data1->plotOn(frame);; kest1.plotOn(frame);; kest2.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // Plot kernel estimation pdfs with regular and increased bandwidth; RooPlot *frame2 = x.frame(Title(""Adaptive kernel estimation pdf with regular, increased bandwidth""));; kest1.plotOn(frame2);; kest3.plotOn(frame2, LineColor(kMagenta));; ; // C r e a t e l o w s t a t s 2 - D d a t a s e t; // -------------------------------------------------------; ; // Construct a 2D toy pdf for sampling; RooRealVar y(""y"", ""y"", 0, 20);; RooPolynomial py(""py"", ""py"", y, RooAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf707__kernelestimation_8C.html:1158,config,configuration,1158,doc/master/rf707__kernelestimation_8C.html,https://root.cern,https://root.cern/doc/master/rf707__kernelestimation_8C.html,2,"['adapt', 'config']","['adaptive', 'configuration']"
Modifiability,".h. Constructor & Destructor Documentation. ◆ RooNumIntFactory() [1/2]. RooNumIntFactory::RooNumIntFactory ; (; const RooNumIntFactory & ; other). delete . ◆ RooNumIntFactory() [2/2]. RooNumIntFactory::RooNumIntFactory ; (; ). inlineprivate . Definition at line 70 of file RooNumIntFactory.h. Member Function Documentation. ◆ Class(). static TClass * RooNumIntFactory::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooNumIntFactory::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooNumIntFactory::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file RooNumIntFactory.h. ◆ createIntegrator(). std::unique_ptr< RooAbsIntegrator > RooNumIntFactory::createIntegrator ; (; RooAbsFunc & ; func, . const RooNumIntConfig & ; config, . int ; ndimPreset = 0, . bool ; isBinned = false . ); const. Construct a numeric integrator instance that operates on function 'func' and is configured with 'config'. ; If ndimPreset is greater than zero that number is taken as the dimensionality of the integration, otherwise it is queried from 'func'. This function iterators over list of available prototype integrators and returns an clone attached to the given function of the first class that matches the specifications of the requested integration considering the number of dimensions, the nature of the limits (open ended vs closed) and the user preference stated in 'config' ; Definition at line 183 of file RooNumIntFactory.cxx. ◆ DeclFileName(). static const char * RooNumIntFactory::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file RooNumIntFactory.h. ◆ getIntegratorName(). std::string RooNumIntFactory::getIntegratorName ; (; RooAbsFunc & ; func, . const RooNumIntConfig & ; config, . int ; ndim = 0, . bool ; isBinned = false . ); const. Definition at line 129 of file Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntFactory.html:13202,config,configured,13202,doc/master/classRooNumIntFactory.html,https://root.cern,https://root.cern/doc/master/classRooNumIntFactory.html,2,['config'],"['config', 'configured']"
Modifiability,".h. ◆ Get() [1/2]. TObject * TDirectory::Get ; (; const char * ; namecycle). virtual . Return pointer to object identified by namecycle. ; namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. examples:; foo : get object named foo in memory if object is not in memory, try with highest cycle from file; foo;1 : get cycle 1 of foo on file. The retrieved object should in principle derive from TObject. If not, the function TDirectory::GetObject should be called. However, this function will still work for a non-TObject, providing that the calling application cast the return type to the correct type (which is the actual type of the object).; NOTE:; The method GetObject offer better protection and avoid the need for any cast: MyClass *obj;; directory->GetObject(""some object"",obj);; if (obj) { ... the object exist and inherits from MyClass ... }; VERY IMPORTANT NOTE:; In case the class of this object derives from TObject but not as a first inheritance, one must use dynamic_cast<>(). Example 1: Normal case:; class MyClass : public TObject, public AnotherClass; TObjectMother of all ROOT objects.Definition TObject.h:41; then on return, one can do: MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");; Example 2: Special case:; class MyClass : public AnotherClass, public TObject; then on return, one must do: MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; Of course, dynamic_cast<> can also be used in the example 1. ; Reimplemented in TDirectoryFile, and TDirectoryFile.; Definition at line 866 of file TDirectory.cxx. ◆ Get() [2/2]. template<class T > . T * TDirectory::Get ; (; const char * ; namecycle). inline . See documentation of TDirectoryFile::Get(const char *namecycle) ; Definition at line 205 of file TDirectory.h. ◆ GetBufferSize(). virtual Int_t TDirectory::GetBufferSize ; (; ); const. inlinevirtual . Reimplemented in TDirectoryFile.; Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:34198,inherit,inheritance,34198,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inheritance']
Modifiability,".h. ◆ TestPrunedTreeQuality(). Double_t TMVA::DecisionTree::TestPrunedTreeQuality ; (; const DecisionTreeNode * ; dt = nullptr, . Int_t ; mode = 0 . ); const. return the misclassification rate of a pruned tree a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at any node, hence this tree quality testing will stop there, hence test the pruned tree (while the full tree is still in place for normal/later use) ; Definition at line 1043 of file DecisionTree.cxx. ◆ TrainNode(). Double_t TMVA::DecisionTree::TrainNode ; (; const EventConstList & ; eventSample, . DecisionTreeNode * ; node . ). inline . Definition at line 108 of file DecisionTree.h. ◆ TrainNodeFast(). Double_t TMVA::DecisionTree::TrainNodeFast ; (; const EventConstList & ; eventSample, . TMVA::DecisionTreeNode * ; node . ). Decide how to split a node using one of the variables that gives the best separation of signal/background. ; In order to do this, for each variable a scan of the different cut values in a grid (grid = fNCuts) is performed and the resulting separation gains are compared. in addition to the individual variables, one can also ask for a fisher discriminant being built out of (some) of the variables and used as a possible multivariate split. ; Definition at line 1374 of file DecisionTree.cxx. ◆ TrainNodeFull(). Double_t TMVA::DecisionTree::TrainNodeFull ; (; const EventConstList & ; eventSample, . TMVA::DecisionTreeNode * ; node . ). train a node by finding the single optimal cut for a single variable that best separates signal and background (maximizes the separation gain) ; Definition at line 2536 of file DecisionTree.cxx. Member Data Documentation. ◆ fAnalysisType. Types::EAnalysisType TMVA::DecisionTree::fAnalysisType. private . kClassification(=0=false) or kRegression(=1=true) ; Definition at line 239 of file DecisionTree.h. ◆ fDataSetInfo. DataSetInfo* TMVA::DecisionTree::fDataSetInfo. private . Definition at line 241 of file DecisionTree.h. ◆ fgDebugLevel. const Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:26631,variab,variable,26631,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,".h. ◆ createIntegral() [3/6]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooArgSet & ; nset, . const RooNumIntConfig & ; cfg, . const char * ; rangeName = nullptr . ); const. inline . Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while using specified configuration for any numeric integration. ; Definition at line 216 of file RooAbsReal.h. ◆ createIntegral() [4/6]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooArgSet * ; nset = nullptr, . const RooNumIntConfig * ; cfg = nullptr, . const char * ; rangeName = nullptr . ); const. virtual . Create an object that represents the integral of the function over one or more observables listed in iset. ; The actual integration calculation is only performed when the return object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over. If nset is specified the integrand is request to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified the integral is performed over the named range, otherwise it is performed over the domain of each integrated observable. If cfg is specified it will be used to configure any numeric integration aspect of the integral. It will not force the integral to be performed numerically, which is decided automatically by RooRealIntegral. ; Reimplemented in RooAbsRealLValue, RooBinSamplingPdf, and RooRealIntegral.; Definition at line 551 of file RooAbsReal.cxx. ◆ createIntegral() [5/6]. RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:88447,variab,variables,88447,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,".h. ◆ createIntegral() [3/6]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooArgSet & ; nset, . const RooNumIntConfig & ; cfg, . const char * ; rangeName = nullptr . ); const. inline . Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while using specified configuration for any numeric integration. ; Definition at line 216 of file RooAbsReal.h. ◆ createIntegral() [4/6]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooArgSet * ; nset = nullptr, . const RooNumIntConfig * ; cfg = nullptr, . const char * ; rangeName = nullptr . ); const. virtual . Create an object that represents the integral of the function over one or more observables listed in iset. ; The actual integration calculation is only performed when the return object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over. If nset is specified the integrand is request to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified the integral is performed over the named range, otherwise it is performed over the domain of each integrated observable. If cfg is specified it will be used to configure any numeric integration aspect of the integral. It will not force the integral to be performed numerically, which is decided automatically by RooRealIntegral. ; Reimplemented in RooAbsRealLValue, RooBinSamplingPdf, and RooRealIntegral.; Definition at line 553 of file RooAbsReal.cxx. ◆ createIntegral() [5/6]. RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:87179,variab,variables,87179,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,".h:23; TPadThe most important graphics class in the ROOT system.Definition TPad.h:28; TPad::cdTVirtualPad * cd(Int_t subpadnumber=0) overrideSet Current pad.Definition TPad.cxx:693; TPad::Drawvoid Draw(Option_t *option="""") overrideDraw Pad in Current pad (re-parent pad if necessary).Definition TPad.cxx:1364; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definition TPaveText.cxx:242; TPolyLine3DA 3-dimensional polyline.Definition TPolyLine3D.h:33; TPolyLine3D::SetPointvirtual void SetPoint(Int_t point, Double_t x, Double_t y, Double_t z)Set point n to x, y, z.Definition TPolyLine3D.cxx:595; TPolyLine3D::Drawvoid Draw(Option_t *option="""") overrideDraw this 3-D polyline with its current attributes.Definition TPolyLine3D.cxx:298; TPolyMarker3DA 3D polymarker.Definition TPolyMarker3D.h:33; TPolyMarker3D::SetPointvoid SetPoint(Int_t n, Double_t x, Double_t y, Double_t z)Set point n to x, y, z.Definition TPolyMarker3D.cxx:535; TPolyMarker3D::Drawvoid Draw(Option_t *option="""") overrideDraws 3-D polymarker with its current attributes.Definition TPolyMarker3D.cxx:242; TTextBase class for several text objects.Definition TText.h:22; TViewSee TView3D.Definition TView.h:25; TView::CreateViewstatic TView * CreateView(Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr)Create a concrete default 3-d view via the plug-in manager.Definition TView.cxx:27; TView::SetRangevirtual void SetRange(const Double_t *min, const Double_t *max)=0; c1return c1Definition legend1.C:41; AuthorRene Brun ; Definition in file basic3d.C. tutorialsgraphicsbasic3d.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/basic3d_8C.html:5146,plug-in,plug-in,5146,doc/master/basic3d_8C.html,https://root.cern,https://root.cern/doc/master/basic3d_8C.html,1,['plug-in'],['plug-in']
Modifiability,".h:33; ROOT::kSTLmultimap@ kSTLmultimapDefinition ESTLType.h:34; ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; ROOT::ToHumanReadableSizevoid ToHumanReadableSize(value_type bytes, Bool_t si, Double_t *coeff, const char **units)Return the size expressed in 'human readable' format.Definition StringConv.hxx:38; ROOT::FromHumanReadableSizeEFromHumanReadableSize FromHumanReadableSize(std::string_view str, T &value)Convert strings like the following into byte counts 5MB, 5 MB, 5M, 3.7GB, 123b, 456kB,...Definition StringConv.hxx:86; ROOT::EFromHumanReadableSize::kParseFail@ kParseFail; ROOT::EFromHumanReadableSize::kOverflow@ kOverflow; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::MedianDouble_t Median(Long64_t n, const T *a, const Double_t *w=nullptr, Long64_t *work=nullptr)Same as RMS.Definition TMath.h:1272; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; TMath::BinarySearchLong64_t BinarySearch(Long64_t n, const T *array, T value)Binary search in an array of n values to locate value.Definition TMathBase.h:347; slashTCanvas * slash()Definition slash.C:1; ROOT::RCompressionSetting::EAlgorithm::kUseGlobal@ kUseGlobalUse the global compression algorithm.Definition Compression.h:93; ROOT::RCompressionSetting::EAlgorithm::kInherit@ kInheritSome objects use this value to denote that the compression algorithm should be inherited from the par...Definition Compression.h:91; ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault@ kUseCompiledDefaultUse the compile-time default setting.Definition Compression.h:53; Drawth1 Draw(); mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4. treetreesrcTTree.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:05 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:474292,inherit,inherited,474292,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['inherit'],['inherited']
Modifiability,".h:39; RooCurve::Extended@ ExtendedDefinition RooCurve.h:39; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDerivativeRepresents the first, second, or third order derivative of any RooAbsReal as calculated (numerically)...Definition RooDerivative.h:30; RooFitResultRooFitResult is a container class to hold the input and output of a PDF fit to a dataset.Definition RooFitResult.h:40; RooFit::Detail::CodeSquashContextA class to maintain the context for squashing of RooFit models into code.Definition CodeSquashContext.h:42; RooFit::EvalContextDefinition EvalContext.h:84; RooFunctorLightweight interface adaptor that exports a RooAbsPdf as a functor.Definition RooFunctor.h:25; RooLinkedListCollection class for internal use, storing a collection of RooAbsArg pointers in a doubly linked list...Definition RooLinkedList.h:44; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooRealBindingLightweight interface adaptor that binds a RooAbsReal object to a subset of its servers and present i...Definition RooRealBinding.h:30; RooRealSumFuncDefinition RooRealSumFunc.h:26; RooRealSumPdfImplements a PDF constructed from a sum of functions:Definition RooRealSumPdf.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooStringViewThe RooStringView is a wrapper around a C-style string that can also be constructed from a std::strin...Definition RooStringView.h:27; RooVectorDataStoreUses std::vector to store data columns.Definition RooVectorDataStore.h:41; TF11-Dim function classDefinition TF1.h:233; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:56534,config,configuration,56534,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['config'],['configuration']
Modifiability,".h:61; ROOT::Math::GeneticMinimizer::Xconst double * X() const overridereturn pointer to X values at the minimumDefinition GeneticMinimizer.cxx:336; ROOT::Math::GeneticMinimizer::fMinValuedouble fMinValueDefinition GeneticMinimizer.h:108; ROOT::Math::GeneticMinimizer::MinimizerParametersconst GeneticMinimizerParameters & MinimizerParameters() constDefinition GeneticMinimizer.h:96; ROOT::Math::GeneticMinimizer::NDimunsigned int NDim() const overridethis is <= Function().NDim() which is the total number of variables (free+ constrained ones)Definition GeneticMinimizer.cxx:348; ROOT::Math::GeneticMinimizer::CovMatrixdouble CovMatrix(unsigned int i, unsigned int j) const overridereturn covariance matrices element for variables ivar,jvar if the variable is fixed the return value ...Definition GeneticMinimizer.cxx:368; ROOT::Math::GeneticMinimizer::SetRandomSeedvoid SetRandomSeed(int seed)Definition GeneticMinimizer.h:94; ROOT::Math::GeneticMinimizer::NFreeunsigned int NFree() const overridenumber of free variables (real dimension of the problem) this is <= Function().NDim() which is the to...Definition GeneticMinimizer.cxx:355; ROOT::Math::GeneticMinimizer::SetLimitedVariablebool SetLimitedVariable(unsigned int, const std::string &, double, double, double, double) overrideset a new upper/lower limited variable (override if minimizer supports them ) otherwise as default se...Definition GeneticMinimizer.cxx:146; ROOT::Math::GeneticMinimizer::SetOptionsvirtual void SetOptions(const ROOT::Math::MinimizerOptions &opt)Definition GeneticMinimizer.cxx:217; ROOT::Math::GeneticMinimizer::MinValuedouble MinValue() const overridereturn minimum function valueDefinition GeneticMinimizer.cxx:331; ROOT::Math::GeneticMinimizer::Errorsconst double * Errors() const overridereturn errors at the minimumDefinition GeneticMinimizer.cxx:366; ROOT::Math::GeneticMinimizer::NCallsunsigned int NCalls() const overridenumber of function calls to reach the minimumDefinition GeneticMinimizer.cxx:340; ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GeneticMinimizer_8h_source.html:4619,variab,variables,4619,doc/master/GeneticMinimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/GeneticMinimizer_8h_source.html,1,['variab'],['variables']
Modifiability,.h;  RotationZ.h;  RotationZYX.h;  Transform3D.h;  Translation3D.h;  Vector2D.h;  Vector2Dfwd.h;  Vector3D.h;  Vector3Dfwd.h;  Vector4D.h;  Vector4Dfwd.h;  VectorUtil.h;  ► src;  3DConversions.cxx;  3DDistances.cxx;  AxisAngle.cxx;  AxisAngleXother.cxx;  BitReproducible.cxx;  Boost.cxx;  BoostX.cxx;  BoostY.cxx;  BoostZ.cxx;  EulerAngles.cxx;  LorentzRotation.cxx;  Quaternion.cxx;  QuaternionXaxial.cxx;  Rotation3D.cxx;  Rotation3DxAxial.cxx;  RotationZYX.cxx;  VectorUtil.cxx;  ► mathcore;  doc;  ► inc;  ► Fit;  BasicFCN.h;  BinData.h;  Chi2FCN.h;  DataOptions.h;  DataRange.h;  FcnAdapter.h;  FitConfig.h;  FitData.h;  FitExecutionPolicy.h;  FitResult.h;  Fitter.h;  FitUtil.h;  LogLikelihoodFCN.h;  ParameterSettings.h;  PoissonLikelihoodFCN.h;  SparseData.h;  UnBinData.h;  ► Math;  AdaptiveIntegratorMultiDim.h;  AllIntegrationTypes.h;  BasicMinimizer.h;  BrentMethods.h;  BrentMinimizer1D.h;  BrentRootFinder.h;  ChebyshevPol.h;  CladDerivator.hThe file is a bridge between ROOT and clad automatic differentiation plugin ;  Delaunay2D.h;  DistFunc.h;  DistFuncMathCore.h;  DistSampler.h;  DistSamplerOptions.h;  Error.h;  Factory.h;  FitMethodFunction.h;  Functor.h;  GaussIntegrator.h;  GaussLegendreIntegrator.h;  GenAlgoOptions.h;  GoFTest.h;  IFunction.h;  IFunctionfwd.h;  IMinimizer1D.h;  Integrator.h;  IntegratorMultiDim.h;  IntegratorOptions.h;  IOptions.h;  IParamFunction.h;  IParamFunctionfwd.h;  IRootFinderMethod.h;  KDTree.h;  KDTree.icc;  LCGEngine.h;  Math.h;  MersenneTwisterEngine.h;  Minimizer.h;  MinimizerOptions.h;  MinimizerVariableTransformation.h;  MinimTransformFunction.h;  MinimTransformVariable.h;  MixMaxEngine.h;  MixMaxEngine.icc;  MultiDimParamFunctionAdapter.h;  OneDimFunctionAdapter.h;  ParamFunctor.h;  PdfFunc.h;  PdfFuncMathCore.h;  ProbFunc.h;  ProbFuncMathCore.h;  QuantFunc.h;  QuantFuncMathCore.h;  Random.h;  RandomFunctions.h;  RichardsonDerivator.h;  RootFinder.h;  SpecFunc.h;  SpecFuncMathCore.h;  StdEngine.h;  TDataPoint.h;  TDataPoint.icc,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/files.html:43601,plugin,plugin,43601,doc/v616/files.html,https://root.cern,https://root.cern/doc/v616/files.html,1,['plugin'],['plugin']
Modifiability,".hxx. ◆ GetSearchJson(). std::string ROOT::RGeomDescription::GetSearchJson ; (; ); const. inline . Definition at line 386 of file RGeomData.hxx. ◆ GetSelectedStack(). const std::vector< int > & ROOT::RGeomDescription::GetSelectedStack ; (; ); const. inline . Get top node path. ; Definition at line 364 of file RGeomData.hxx. ◆ GetTopVisible(). bool ROOT::RGeomDescription::GetTopVisible ; (; ); const. inline . Returns draw options, used for JSROOT TGeoPainter. ; Definition at line 334 of file RGeomData.hxx. ◆ GetUsedNSegments(). int RGeomDescription::GetUsedNSegments ; (; int ; min = 20). private . Returns really used number of cylindrical segments. ; Definition at line 922 of file RGeomData.cxx. ◆ GetVisLevel(). int ROOT::RGeomDescription::GetVisLevel ; (; ); const. inline . Returns maximal visible level. ; Definition at line 329 of file RGeomData.hxx. ◆ GetVolume(). TGeoVolume * RGeomDescription::GetVolume ; (; int ; nodeid). private . Get volume for specified nodeid If specific volume was configured, it will be returned for nodeid==0. ; Definition at line 583 of file RGeomData.cxx. ◆ HasDrawData(). bool RGeomDescription::HasDrawData ; (; ); const. Check if there is draw data available. ; Definition at line 1331 of file RGeomData.cxx. ◆ IsBuild(). bool ROOT::RGeomDescription::IsBuild ; (; ); const. inline . Definition at line 373 of file RGeomData.hxx. ◆ IsBuildShapes(). int ROOT::RGeomDescription::IsBuildShapes ; (; ); const. inline . Returns true if binary 3D model build already by C++ server (default) ; Definition at line 339 of file RGeomData.hxx. ◆ IsPhysNodeVisible(). int RGeomDescription::IsPhysNodeVisible ; (; const std::vector< int > & ; stack). private . Check if there special settings for specified physical node returns -1 if nothing is found. ; Definition at line 2043 of file RGeomData.cxx. ◆ IsPreferredOffline(). bool ROOT::RGeomDescription::IsPreferredOffline ; (; ); const. inline . Is offline operations preferred. ; After get full description, client ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomDescription.html:17604,config,configured,17604,doc/master/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomDescription.html,1,['config'],['configured']
Modifiability,".pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » SPECTRUM; » TSpectrumTransform. class TSpectrumTransform: public TNamed. THIS CLASS CONTAINS ORTHOGONAL TRANSFORM FUNCTIONS. These functions were written by:; Miroslav Morhac; Institute of Physics; Slovak Academy of Sciences; Dubravska cesta 9, 842 28 BRATISLAVA; SLOVAKIA. email:fyzimiro@savba.sk, fax:+421 7 54772479. The original code in C has been repackaged as a C++ class by R.Brun. The algorithms in this class have been published in the following; references:. [1] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; [2] Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; [3] Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; [4] Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307. Function Members (Methods); public:. virtual~TSpectrumTransform(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:1123,adapt,adaptive,1123,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,2,['adapt'],['adaptive']
Modifiability,".s with categories; static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumGenConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumGenConfig(); Constructor. ~RooNumGenConfig(); Destructor. RooNumGenConfig(const RooNumGenConfig& other); Copy constructor. RooNumGenConfig& operator=(const RooNumGenConfig& other); Assignment operator from other RooNumGenConfig. RooCategory& method1D(Bool_t cond, Bool_t cat). RooCategory& method2D(Bool_t cond, Bool_t cat). RooCategory& methodND(Bool_t cond, Bool_t cat). const RooCategory& method1D(Bool_t cond, Bool_t cat) const. const RooCategory& method2D(Bool_t cond, Bool_t cat) const. const RooCategory& methodND(Bool_t cond, Bool_t cat) const. Bool_t addConfigSection(const RooAbsNumGenerator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. void Print(Option_t* options = 0) const. » Last changed: Mon Jul 4 15:23:34 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNumGenConfig.html:9226,config,configuration,9226,root/html530/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html530/RooNumGenConfig.html,4,['config'],['configuration']
Modifiability,".s with categories; static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumGenConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumGenConfig(); Constructor. ~RooNumGenConfig(); Destructor. RooNumGenConfig(const RooNumGenConfig& other); Copy constructor. RooNumGenConfig& operator=(const RooNumGenConfig& other); Assignment operator from other RooNumGenConfig. RooCategory& method1D(Bool_t cond, Bool_t cat). RooCategory& method2D(Bool_t cond, Bool_t cat). RooCategory& methodND(Bool_t cond, Bool_t cat). const RooCategory& method1D(Bool_t cond, Bool_t cat) const. const RooCategory& method2D(Bool_t cond, Bool_t cat) const. const RooCategory& methodND(Bool_t cond, Bool_t cat) const. Bool_t addConfigSection(const RooAbsNumGenerator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. void Print(Option_t* options = 0) const. » Last changed: Thu Nov 3 20:08:51 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumGenConfig.html:9226,config,configuration,9226,root/html532/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html532/RooNumGenConfig.html,4,['config'],['configuration']
Modifiability,".s with categories; static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumGenConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumGenConfig(); Constructor. ~RooNumGenConfig(); Destructor. RooNumGenConfig(const RooNumGenConfig& other); Copy constructor. RooNumGenConfig& operator=(const RooNumGenConfig& other); Assignment operator from other RooNumGenConfig. RooCategory& method1D(Bool_t cond, Bool_t cat). RooCategory& method2D(Bool_t cond, Bool_t cat). RooCategory& methodND(Bool_t cond, Bool_t cat). const RooCategory& method1D(Bool_t cond, Bool_t cat) const. const RooCategory& method2D(Bool_t cond, Bool_t cat) const. const RooCategory& methodND(Bool_t cond, Bool_t cat) const. Bool_t addConfigSection(const RooAbsNumGenerator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. void Print(Option_t* options = 0) const. » Last changed: Tue Jun 2 15:32:42 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooNumGenConfig.html:10251,config,configuration,10251,root/html604/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html604/RooNumGenConfig.html,4,['config'],['configuration']
Modifiability,".stability; TMatrixDSymfDesignTemp2!; TMatrixDSymfDesignTemp3!; TVectorDfEthe errors if they are known; TBitsfFitsampleindices of points, used in the robust fit; Bool_t*fFixedParams[fNfixed] array of fixed/released params; char*fFormulathe formula; Int_tfFormulaSizelength of the formula; TObjArrayfFunctionsarray of basis functions; Int_tfHnumber of good points in robust fit; TFormula*fInputFunctionthe function being fit; Bool_tfIsSetHas the formula been set?; Int_tfNdimnumber of dimensions in the formula; Int_tfNfixednumber of fixed parameters; Int_tfNfunctionsnumber of basis functions; Int_tfNpointsnumber of points; TMatrixDSymfParCovarmatrix of parameters' covariances; TVectorDfParSignsignificance levels of parameters; TVectorDfParamsvector of parameters; Bool_tfRobusttrue when performing a robust fit; Int_tfSpecial=100+n if fitting a polynomial of deg.n; Bool_tfStoreDataIs the data stored?; TVectorDfTValuesT-Values of parameters; Double_tfVal[1000]! temporary; TMatrixDfXvalues of x; TVectorDfYthe values being fit; Double_tfY2sum of square of y, used for chisquare; Double_tfY2Temp! temporary variable used for num.stability. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLinearFitter(); default c-tor, input data is stored; If you don't want to store the input data,; run the function StoreData(kFALSE) after constructor. TLinearFitter(Int_t ndim); The parameter stands for number of dimensions in the fitting formula; The input data is stored. If you don't want to store the input data,; run the function StoreData(kFALSE) after constructor. TLinearFitter(Int_t ndim, const char* formula, Option_t* opt = ""D""); First parameter stands for number of dimensions in the fitting formula; Second parameter is the fitting formula: see class description for formula syntax; Options:; The option is to store or not to store the data; If you don't want to store the data, choose """" for the option, or run; StoreData(kFalse) member function afte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLinearFitter.html:19599,variab,variable,19599,root/html528/TLinearFitter.html,https://root.cern,https://root.cern/root/html528/TLinearFitter.html,5,['variab'],['variable']
Modifiability,".stability; TMatrixDSymfDesignTemp2!; TMatrixDSymfDesignTemp3!; TVectorDfEthe errors if they are known; TBitsfFitsampleindices of points, used in the robust fit; Bool_t*fFixedParams[fNfixed] array of fixed/released params; char*fFormulathe formula; Int_tfFormulaSizelength of the formula; TObjArrayfFunctionsarray of basis functions; Int_tfHnumber of good points in robust fit; TFormula*fInputFunctionthe function being fit; Bool_tfIsSetHas the formula been set?; Int_tfNdimnumber of dimensions in the formula; Int_tfNfixednumber of fixed parameters; Int_tfNfunctionsnumber of basis functions; Int_tfNpointsnumber of points; TMatrixDSymfParCovarmatrix of parameters' covariances; TVectorDfParSignsignificance levels of parameters; TVectorDfParamsvector of parameters; Bool_tfRobusttrue when performing a robust fit; Int_tfSpecial=100+n if fitting a polynomial of deg.n; Bool_tfStoreDataIs the data stored?; TVectorDfTValuesT-Values of parameters; Double_tfVal[1000]! temporary; TMatrixDfXvalues of x; TVectorDfYthe values being fit; Double_tfY2sum of square of y, used for chisquare; Double_tfY2Temp! temporary variable used for num.stability; static map<TString,TFormula*>fgFormulaMap! map of basis functions and formula. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLinearFitter(); default c-tor, input data is stored; If you don't want to store the input data,; run the function StoreData(kFALSE) after constructor. TLinearFitter(Int_t ndim); The parameter stands for number of dimensions in the fitting formula; The input data is stored. If you don't want to store the input data,; run the function StoreData(kFALSE) after constructor. TLinearFitter(Int_t ndim, const char* formula, Option_t* opt = ""D""); First parameter stands for number of dimensions in the fitting formula; Second parameter is the fitting formula: see class description for formula syntax; Options:; The option is to store or not to store the data; If you don't want to store the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TLinearFitter.html:20236,variab,variable,20236,root/html604/TLinearFitter.html,https://root.cern,https://root.cern/root/html604/TLinearFitter.html,1,['variab'],['variable']
Modifiability,".x portfolio.C+; or; gSystem->Load(""libQuadp"");; .L portFolio.C+; portfolio(); gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TSystem::Loadvirtual int Load(const char *module, const char *entry="""", Bool_t system=kFALSE)Load a shared library.Definition TSystem.cxx:1857; Let's first review what we exactly mean by ""quadratic programming"" :; We want to minimize the following objective function :; \( c^T x + ( 1/2 ) x^T Q x \) wrt. the vector \( x \); \( c \) is a vector and \( Q \) a symmetric positive definite matrix; You might wonder what is so special about this objective which is quadratic in the unknowns, that can not be done by Minuit/Fumili . Well, we have in addition the following boundary conditions on \( x \):. \[; A x = b \\; clo \le C x \le cup \\; xlo \le x \le xup; \]. where A and C are arbitrary matrices and the rest are vectors; Not all these constraints have to be defined . Our example will only use \( xlo \), \( A \) and \( b \) Still, this could be handled by a general non-linear minimizer like Minuit by introducing so-called ""slack"" variables . However, quadp is tailored to objective functions not more complex than being quadratic . This allows usage of solving techniques which are even stable for problems involving for instance 500 variables, 100 inequality conditions and 50 equality conditions .; Enough said about quadratic programming, let's return to our example . Suppose, after a long day of doing physics, you have a look at your investments and realize that an early retirement is not possible, given the returns of your stocks . So what now ? ROOT to the rescue ...; In 1990 Harry Markowitz was awarded the Nobel prize for economics: "" his work provided new tools; for weighing the risks and rewards of different investments and for valuing corporate stocks and bonds"" . In plain English, he developed the tools to balance greed and fear, we want the maximum return with the minimum amount of risk. Our stock portfolio should be at the ""Effi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/portfolio_8C.html:1406,variab,variables,1406,doc/master/portfolio_8C.html,https://root.cern,https://root.cern/doc/master/portfolio_8C.html,1,['variab'],['variables']
Modifiability,". ; args . ). Set a list of parameters. ; The order is by default the alphabetic order given to the parameters, apart if the users has defined explicitly the parameter names. NaN values will be skipped, meaning that the corresponding parameters will not be changed. ; Definition at line 299 of file TFormula.h. ◆ SetParName(). void TFormula::SetParName ; (; Int_t ; ipar, . const char * ; name . ). Definition at line 2990 of file TFormula.cxx. ◆ SetParNames(). template<typename... Args> . void TFormula::SetParNames ; (; Args &&... ; args). Set parameter names. ; Empty strings will be skipped, meaning that the corresponding name will not be changed. ; Definition at line 311 of file TFormula.h. ◆ SetPredefinedParamNames(). void TFormula::SetPredefinedParamNames ; (; ). protected . Set parameter names only in case of pre-defined functions. ; Definition at line 2471 of file TFormula.cxx. ◆ SetVariable(). void TFormula::SetVariable ; (; const TString & ; name, . Double_t ; value . ). Sets variable value. ; Definition at line 2728 of file TFormula.cxx. ◆ SetVariables(). void TFormula::SetVariables ; (; const std::pair< TString, Double_t > * ; vars, . const Int_t ; size . ). Sets multiple variables. ; First argument is an array of pairs<TString,Double>, where first argument is name of variable, second argument represents value. size - number of variables passed in first argument ; Definition at line 2669 of file TFormula.cxx. ◆ SetVectorized(). void TFormula::SetVectorized ; (; Bool_t ; vectorized). Definition at line 3046 of file TFormula.cxx. ◆ Streamer(). void TFormula::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Definition at line 3679 of file TFormula.cxx. ◆ StreamerNVirtual(). void TFormula::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 289 of file TFormula.h. Member Data Documentation. ◆ fAllParametersSetted. Bool_t TFormula::fAllParametersSetted. private . Flag to co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:50146,variab,variable,50146,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"/ 'bottom' define the WORLD coordinates which; corresepond with the left/right/top/bottom positions on the GL viewer viewport; E.g. for kCameraOrthoXOY camera left/right are X world coords,; top/bottom are Y world coords; As this is an orthographic camera the other axis (in eye direction) is; no relevant. The near/far clip planes are set automatically based in scene; contents. void SetPerspectiveCamera(TGLViewer::ECameraType camera, Double_t fov, Double_t dolly, Double_t[3] center, Double_t hRotate, Double_t vRotate); Set a perspective camera to supplied configuration - note this; does not need to be the current camera - though you will not see; the effect if it is not. 'camera' defines the persp camera - one of kCameraPerspXOZ, kCameraPerspYOZ, kCameraPerspXOY; 'fov' - field of view (lens angle) in degrees (clamped to 0.1 - 170.0); 'dolly' - distance from 'center'; 'center' - world position from which dolly/hRotate/vRotate are measured; camera rotates round this, always facing in (in center of viewport); 'hRotate' - horizontal rotation from initial configuration in degrees; 'hRotate' - vertical rotation from initial configuration in degrees. void ReinitializeCurrentCamera(const TGLVector3& hAxis, const TGLVector3& vAxis, Bool_t redraw = kTRUE); Change base-vectors defining the camera-base transformation of current; camera. hAxis and vAxis are the default directions for forward; (inverted) and upwards. TGLAutoRotator* GetAutoRotator(); Get the auto-rotator for this viewer. void SetAutoRotator(TGLAutoRotator* ar); Set the auto-rotator for this viewer. The old rotator is deleted. void GetGuideState(Int_t& axesType, Bool_t& axesDepthTest, Bool_t& referenceOn, Double_t* referencePos) const; Fetch the state of guides (axes & reference markers) into arguments. void SetGuideState(Int_t axesType, Bool_t axesDepthTest, Bool_t referenceOn, const Double_t* referencePos); Set the state of guides (axes & reference markers) from arguments. void SetDrawCameraCenter(Bool_t x); Draw ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLViewer.html:34350,config,configuration,34350,root/html602/TGLViewer.html,https://root.cern,https://root.cern/root/html602/TGLViewer.html,2,['config'],['configuration']
Modifiability,"/ 'bottom' define the WORLD coordinates which; corresepond with the left/right/top/bottom positions on the GL viewer viewport; E.g. for kCameraOrthoXOY camera left/right are X world coords,; top/bottom are Y world coords; As this is an orthographic camera the other axis (in eye direction) is; no relevant. The near/far clip planes are set automatically based in scene; contents. void SetPerspectiveCamera(TGLViewer::ECameraType camera, Double_t fov, Double_t dolly, Double_t[3] center, Double_t hRotate, Double_t vRotate); Set a perspective camera to supplied configuration - note this; does not need to be the current camera - though you will not see; the effect if it is not. 'camera' defines the persp camera - one of kCameraPerspXOZ, kCameraPerspYOZ, kCameraPerspXOY; 'fov' - field of view (lens angle) in degrees (clamped to 0.1 - 170.0); 'dolly' - distance from 'center'; 'center' - world position from which dolly/hRotate/vRotate are measured; camera rotates round this, always facing in (in center of viewport); 'hRotate' - horizontal rotation from initial configuration in degrees; 'hRotate' - vertical rotation from initial configuration in degrees. void ReinitializeCurrentCamera(const TGLVector3& hAxis, const TGLVector3& vAxis, Bool_t redraw = kTRUE); Change base-vectors defining the camera-base transformation of current; camera. hAxis and vAxis are the default directions for forward; (inverted) and upwards. TGLAutoRotator* GetAutoRotator(); Get the auto-rotator for this viewer. void SetAutoRotator(TGLAutoRotator* ar); Set the auto-rotator for this viewer. The old rotator is deleted. void SetStereo(Bool_t stereo, Bool_t quad_buf = kTRUE); Enable stereo rendering.; If quad_buf is true rendering is done into separate left and right GL; buffers. This requires hardware support. Otherwise left and right images; get rendered into left and right half of the window.; Note that mouse highlighting and selection will not work exactly right; as image for each eye gets slightly shifted",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLViewer.html:34470,config,configuration,34470,root/html604/TGLViewer.html,https://root.cern,https://root.cern/root/html604/TGLViewer.html,2,['config'],['configuration']
Modifiability,"/ (8 * x0) * (15 * A0 - 7 * x0 * S1 + x0 * x0 * A2);; 304 double b = 1. / (8 * x0 * x0) * (-24 + 24 * S0 - 9 * x0 * A1 + x0 * x0 * S2);; 305 double c = 1. / (4 * std::pow(x0, 3)) * (-5 * A0 + 5 * x0 * S1 - x0 * x0 * A2);; 306 double d = 1. / (4 * std::pow(x0, 4)) * (12 - 12 * S0 + 7 * x0 * A1 - x0 * x0 * S2);; 307 double e = 1. / (8 * std::pow(x0, 5)) * (+3 * A0 - 3 * x0 * S1 + x0 * x0 * A2);; 308 double f = 1. / (8 * std::pow(x0, 6)) * (-8 + 8 * S0 - 5 * x0 * A1 + x0 * x0 * S2);; 309 ; 310 // evaluate the 6-th degree polynomial using Horner's method; 311 double value = 1. + x * (a + x * (b + x * (c + x * (d + x * (e + x * f)))));; 312 mod = value;; 313 }; 314 return res * (mod - 1.0);; 315 }; 316 ; 317 return 0.0;; 318}; 319 ; 320inline double flexibleInterp(unsigned int code, double const *params, unsigned int n, double const *low,; 321 double const *high, double boundary, double nominal, int doCutoff); 322{; 323 double total = nominal;; 324 for (std::size_t i = 0; i < n; ++i) {; 325 total += flexibleInterpSingle(code, low[i], high[i], boundary, nominal, params[i], total);; 326 }; 327 ; 328 return doCutoff && total <= 0 ? TMath::Limits<double>::Min() : total;; 329}; 330 ; 331inline double landau(double x, double mu, double sigma); 332{; 333 if (sigma <= 0.); 334 return 0.;; 335 return ROOT::Math::landau_pdf((x - mu) / sigma);; 336}; 337 ; 338inline double logNormal(double x, double k, double m0); 339{; 340 return ROOT::Math::lognormal_pdf(x, std::log(m0), std::abs(std::log(k)));; 341}; 342 ; 343inline double logNormalStandard(double x, double sigma, double mu); 344{; 345 return ROOT::Math::lognormal_pdf(x, mu, std::abs(sigma));; 346}; 347 ; 348inline double effProd(double eff, double pdf); 349{; 350 return eff * pdf;; 351}; 352 ; 353inline double nll(double pdf, double weight, int binnedL, int doBinOffset); 354{; 355 if (binnedL) {; 356 // Special handling of this case since std::log(Poisson(0,0)=0 but can't be; 357 // calculated with usual log-formula since std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:10071,flexible,flexibleInterp,10071,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,2,['flexible'],"['flexibleInterp', 'flexibleInterpSingle']"
Modifiability,"/ Germany; 20// E-mail: T.Glebe@mpi-hd.mpg.de; 21//; 22// Description: Matrix inversion; 23// Code was taken from CERNLIB::kernlib dfinv function, translated; 24// from FORTRAN to C++ and optimized.; 25//; 26// changes:; 27// 03 Apr 2001 (TG) creation; 28//; 29// ********************************************************************; 30 ; 31 ; 32namespace ROOT {; 33 ; 34 namespace Math {; 35 ; 36 ; 37 ; 38 ; 39/** Dfinv.; 40 Function to compute the inverse of a square matrix (\f$A^{-1}\f$) of; 41 dimension \f$idim\f$ and order \f$n\f$. The routine Dfactir must be called; 42 before Dfinv!; 43 ; 44 @author T. Glebe; 45*/; 46template <class Matrix, unsigned int n, unsigned int idim>; 47bool Dfinv(Matrix& rhs, unsigned int* ir) {; 48#ifdef XXX; 49 if (idim < n || n <= 0 || n==1) {; 50 return false;; 51 }; 52#endif; 53 ; 54 typename Matrix::value_type* a = rhs.Array();; 55 ; 56 /* Local variables */; 57 unsigned int nxch, i, j, k, m, ij;; 58 unsigned int im2, nm1, nmi;; 59 typename Matrix::value_type s31, s34, ti;; 60 ; 61 /* Parameter adjustments */; 62 a -= idim + 1;; 63 --ir;; 64 ; 65 /* Function Body */; 66 ; 67 /* finv.inc */; 68 ; 69 a[idim + 2] = -a[(idim << 1) + 2] * (a[idim + 1] * a[idim + 2]);; 70 a[(idim << 1) + 1] = -a[(idim << 1) + 1];; 71 ; 72 if (n != 2) {; 73 for (i = 3; i <= n; ++i) {; 74 const unsigned int ii = i * idim;; 75 const unsigned int iii = i + ii;; 76 const unsigned int imi = ii - idim;; 77 const unsigned int iimi = i + imi;; 78 im2 = i - 2;; 79 for (j = 1; j <= im2; ++j) {; 80 const unsigned int ji = j * idim;; 81 const unsigned int jii = j + ii;; 82 s31 = 0.;; 83 for (k = j; k <= im2; ++k) {; 84 s31 += a[k + ji] * a[i + k * idim];; 85 a[jii] += a[j + (k + 1) * idim] * a[k + 1 + ii];; 86 } // for k; 87 a[i + ji] = -a[iii] * (a[i - 1 + ji] * a[iimi] + s31);; 88 a[jii] *= -1;; 89 } // for j; 90 a[iimi] = -a[iii] * (a[i - 1 + imi] * a[iimi]);; 91 a[i - 1 + ii] *= -1;; 92 } // for i; 93 } // if n!=2; 94 ; 95 nm1 = n - 1;; 96 for (i = 1; i <= nm1; ++",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Dfinv_8h_source.html:1503,variab,variables,1503,doc/master/Dfinv_8h_source.html,https://root.cern,https://root.cern/doc/master/Dfinv_8h_source.html,1,['variab'],['variables']
Modifiability,"/ If this function is used via the context menu, it recommended; 1405/// to create a new canvas/pad before invoking this function.; 1406 ; 1407TObject *TF1::DrawIntegral(Option_t *option); 1408{; 1409 TVirtualPad::TContext ctxt(gROOT->GetSelectedPad(), true, true);; 1410 ; 1411 TGraph *gr = new TGraph(this, ""i"");; 1412 gr->Draw(option);; 1413 return gr;; 1414}; 1415 ; 1416 ; 1417////////////////////////////////////////////////////////////////////////////////; 1418/// Draw function between xmin and xmax.; 1419 ; 1420void TF1::DrawF1(Double_t xmin, Double_t xmax, Option_t *option); 1421{; 1422// //if(Compile(formula)) return ;; 1423 SetRange(xmin, xmax);; 1424 ; 1425 Draw(option);; 1426}; 1427 ; 1428 ; 1429////////////////////////////////////////////////////////////////////////////////; 1430/// Evaluate this function.; 1431///; 1432/// Computes the value of this function (general case for a 3-d function); 1433/// at point x,y,z.; 1434/// For a 1-d function give y=0 and z=0; 1435/// The current value of variables x,y,z is passed through x, y and z.; 1436/// The parameters used will be the ones in the array params if params is given; 1437/// otherwise parameters will be taken from the stored data members fParams; 1438 ; 1439Double_t TF1::Eval(Double_t x, Double_t y, Double_t z, Double_t t) const; 1440{; 1441 if (fType == EFType::kFormula) return fFormula->Eval(x, y, z, t);; 1442 ; 1443 Double_t xx[4] = {x, y, z, t};; 1444 Double_t *pp = (Double_t *)fParams->GetParameters();; 1445 // if (fType == EFType::kInterpreted)((TF1 *)this)->InitArgs(xx, pp);; 1446 return ((TF1 *)this)->EvalPar(xx, pp);; 1447}; 1448 ; 1449 ; 1450////////////////////////////////////////////////////////////////////////////////; 1451/// Evaluate function with given coordinates and parameters.; 1452///; 1453/// Compute the value of this function at point defined by array x; 1454/// and current values of parameters in array params.; 1455/// If argument params is omitted or equal 0, the internal values; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:51591,variab,variables,51591,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/ Mean from training sample; Double_t <classname>::fgXMin[]; // Min from training sample; Double_t <classname>::fgXMax[]; // Max from training sample; Double_t <classname>::fgCoefficient[]; // Coefficients; Int_t <classname>::fgPower[]; // Function powers; ; Double_t Eval(Double_t *x);; };; TMultiDimFit::Evalvirtual Double_t Eval(const Double_t *x, const Double_t *coeff=nullptr) constEvaluate parameterization at point x.Definition TMultiDimFit.cxx:876; double; xDouble_t x[n]Definition legend1.C:17; Whether the method <classname>::Eval should be static or not, is up to the user. ; Definition at line 1744 of file TMultiDimFit.cxx. ◆ MakeNormalized(). void TMultiDimFit::MakeNormalized ; (; ). protectedvirtual . PRIVATE METHOD: Normalize data to the interval [-1;1]. ; This is needed for the classes method to work. ; Definition at line 1756 of file TMultiDimFit.cxx. ◆ MakeParameterization(). void TMultiDimFit::MakeParameterization ; (; ). protectedvirtual . PRIVATE METHOD: Find the parameterization over the training sample. ; A full account of the algorithm is given in the class description ; Definition at line 1810 of file TMultiDimFit.cxx. ◆ MakeRealCode(). void TMultiDimFit::MakeRealCode ; (; const char * ; filename, . const char * ; classname, . Option_t * ; option = """" . ). protectedvirtual . PRIVATE METHOD: This is the method that actually generates the code for the evaluation the parameterization on some point. ; It's called by TMultiDimFit::MakeCode and TMultiDimFit::MakeMethod.; The options are: NONE so far ; Definition at line 1963 of file TMultiDimFit.cxx. ◆ Print(). void TMultiDimFit::Print ; (; Option_t * ; option = ""ps""); const. overridevirtual . Print statistics etc. ; Options are P Parameters S Statistics C Coefficients R Result of parameterisation F Result of fit K Correlation Matrix M Pretty print formula ; Reimplemented from TObject.; Definition at line 2158 of file TMultiDimFit.cxx. ◆ Select(). Bool_t TMultiDimFit::Select ; (; const Int_t * ; iv). pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:56058,parameteriz,parameterization,56058,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['parameteriz'],['parameterization']
Modifiability,"/ Undeclare obj called name.; 3796/// Returns 1 in case of success, 0 for failure.; 3797 ; 3798Int_t TCling::DeleteVariable(const char* name); 3799{; 3800#if defined(R__MUST_REVISIT); 3801#if R__MUST_REVISIT(6,2); 3802 Warning(""DeleteVariable"",""should do more that just reseting the value to zero"");; 3803#endif; 3804#endif; 3805 ; 3806 R__LOCKGUARD(gInterpreterMutex);; 3807 llvm::StringRef srName(name);; 3808 const char* unscopedName = name;; 3809 llvm::StringRef::size_type posScope = srName.rfind(""::"");; 3810 const clang::DeclContext* declCtx = nullptr;; 3811 if (posScope != llvm::StringRef::npos) {; 3812 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; 3813 const clang::Decl* scopeDecl; 3814 = lh.findScope(srName.substr(0, posScope),; 3815 cling::LookupHelper::WithDiagnostics);; 3816 if (!scopeDecl) {; 3817 Error(""DeleteVariable"", ""Cannot find enclosing scope for variable %s"",; 3818 name);; 3819 return 0;; 3820 }; 3821 declCtx = llvm::dyn_cast<clang::DeclContext>(scopeDecl);; 3822 if (!declCtx) {; 3823 Error(""DeleteVariable"",; 3824 ""Enclosing scope for variable %s is not a declaration context"",; 3825 name);; 3826 return 0;; 3827 }; 3828 unscopedName += posScope + 2;; 3829 }; 3830 // Could trigger deserialization of decls.; 3831 cling::Interpreter::PushTransactionRAII RAII(GetInterpreterImpl());; 3832 clang::NamedDecl* nVarDecl; 3833 = cling::utils::Lookup::Named(&fInterpreter->getSema(), unscopedName, declCtx);; 3834 if (!nVarDecl) {; 3835 Error(""DeleteVariable"", ""Unknown variable %s"", name);; 3836 return 0;; 3837 }; 3838 clang::VarDecl* varDecl = llvm::dyn_cast<clang::VarDecl>(nVarDecl);; 3839 if (!varDecl) {; 3840 Error(""DeleteVariable"", ""Entity %s is not a variable"", name);; 3841 return 0;; 3842 }; 3843 ; 3844 clang::QualType qType = varDecl->getType();; 3845 const clang::Type* type = qType->getUnqualifiedDesugaredType();; 3846 // Cannot set a reference's address to nullptr; the JIT can place it; 3847 // into read-only memory (ROOT-7100).; 3848 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:148124,variab,variable,148124,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['variab'],['variable']
Modifiability,"/ Which are we, an array of objects or an array of pointers to objects?; 531 Bool_t isPtrPtr = (strstr(config->fCompInfo->fElem->GetTypeName(), ""**"") != 0);; 532 ; 533 // By default assume the file version is the newest.; 534 Int_t fileVersion = kMaxInt;; 535 ; 536 if (!kIsTextT) {; 537 // At this point we do *not* have a private streamer.; 538 // Get the version of the file we are writing to.; 539 TFile* file = (TFile*) buf.GetParent();; 540 if (file) {; 541 fileVersion = file->GetVersion();; 542 }; 543 }; 544 // Write the class version to the buffer.; 545 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 546 if (fileVersion > 51508) {; 547 // -- Newer versions allow polymorphic pointers to objects.; 548 // Loop over the entries in the clones array or the STL container.; 549 //for (int k = 0; k < narr; ++k) {; 550 // Get the counter for the varying length array.; 551 Int_t vlen = *((Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/));; 552 ; 553 //b << vlen;; 554 if (vlen) {; 555 // Get a pointer to the array of pointers.; 556 char** pp = (char**) ((char *) addr /*entry pointer*/ + ioffset /*object offset*/);; 557 // Loop over each element of the array of pointers to varying-length arrays.; 558 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx) {; 559 if (!pp[ndx]) {; 560 // -- We do not have a pointer to a varying-length array.; 561 // Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; 562 // ::ErrorHandler(kError, ""::WriteStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));; 563 printf(""WriteStreamerLoop - The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:21769,config,config,21769,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"/ and parameters; 3886 ; 3887RooFunctor* RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars, const RooArgSet& nset) const; 3888{; 3889 RooArgSet realObs;; 3890 getObservables(&obs, realObs);; 3891 if (realObs.size() != obs.size()) {; 3892 coutE(InputArguments) << ""RooAbsReal::functor("" << GetName() << "") ERROR: one or more specified observables are not variables of this p.d.f"" << std::endl ;; 3893 return nullptr;; 3894 }; 3895 RooArgSet realPars;; 3896 getObservables(&pars, realPars);; 3897 if (realPars.size() != pars.size()) {; 3898 coutE(InputArguments) << ""RooAbsReal::functor("" << GetName() << "") ERROR: one or more specified parameters are not variables of this p.d.f"" << std::endl ;; 3899 return nullptr;; 3900 }; 3901 ; 3902 return new RooFunctor(*this,obs,pars,nset) ;; 3903}; 3904 ; 3905 ; 3906 ; 3907////////////////////////////////////////////////////////////////////////////////; 3908/// Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables; 3909/// and parameters; 3910 ; 3911TF1* RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars, const RooArgSet& nset) const; 3912{; 3913 // Check that specified input are indeed variables of this function; 3914 RooArgSet realObs;; 3915 getObservables(&obs, realObs) ;; 3916 if (realObs.size() != obs.size()) {; 3917 coutE(InputArguments) << ""RooAbsReal::functor("" << GetName() << "") ERROR: one or more specified observables are not variables of this p.d.f"" << std::endl ;; 3918 return nullptr ;; 3919 }; 3920 RooArgSet realPars;; 3921 getObservables(&pars, realPars) ;; 3922 if (realPars.size() != pars.size()) {; 3923 coutE(InputArguments) << ""RooAbsReal::functor("" << GetName() << "") ERROR: one or more specified parameters are not variables of this p.d.f"" << std::endl ;; 3924 return nullptr ;; 3925 }; 3926 ; 3927 // Check that all obs and par are of type RooRealVar; 3928 for (std::size_t i=0 ; i<obs.size() ; i++) {; 3929 if (dynamic_cast<RooRealVar*>(obs.at(i))==nullptr)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:168398,variab,variables,168398,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/ cleaning information; 2458 TMVA::MethodBase *ssmethod = dynamic_cast<TMVA::MethodBase *>(fMethodsMap[ybitset.to_string().c_str()][0][0]);; 2459 TMVA::ResultsClassification *ssresults = (TMVA::ResultsClassification *)ssmethod->Data()->GetResults(; 2460 ssmethod->GetMethodName(), Types::kTesting, Types::kClassification);; 2461 delete ssresults;; 2462 delete subseedloader;; 2463 this->DeleteAllMethods();; 2464 fMethodsMap.clear();; 2465 }; 2466 }; 2467 std::cout << ""--- Variable Importance Results (Short)"" << std::endl;; 2468 return GetImportance(nbits, importances, varNames);; 2469}; 2470 ; 2471////////////////////////////////////////////////////////////////////////////////; 2472 ; 2473TH1F *TMVA::Factory::EvaluateImportanceRandom(DataLoader *loader, UInt_t nseeds, Types::EMVA theMethod,; 2474 TString methodTitle, const char *theOption); 2475{; 2476 TRandom3 *rangen = new TRandom3(0); // Random Gen.; 2477 ; 2478 uint64_t x = 0;; 2479 uint64_t y = 0;; 2480 ; 2481 // getting number of variables and variable names from loader; 2482 const int nbits = loader->GetDataSetInfo().GetNVariables();; 2483 std::vector<TString> varNames = loader->GetDataSetInfo().GetListOfVariables();; 2484 ; 2485 long int range = pow(2, nbits);; 2486 ; 2487 // vector to save importances; 2488 std::vector<Double_t> importances(nbits);; 2489 for (int i = 0; i < nbits; i++); 2490 importances[i] = 0;; 2491 ; 2492 Double_t SROC, SSROC; // computed ROC value; 2493 for (UInt_t n = 0; n < nseeds; n++) {; 2494 x = rangen->Integer(range);; 2495 ; 2496 std::bitset<32> xbitset(x);; 2497 if (x == 0); 2498 continue; // data loader need at least one variable; 2499 ; 2500 // creating loader for seed; 2501 TMVA::DataLoader *seedloader = new TMVA::DataLoader(xbitset.to_string());; 2502 ; 2503 // adding variables from seed; 2504 for (int index = 0; index < nbits; index++) {; 2505 if (xbitset[index]); 2506 seedloader->AddVariable(varNames[index], 'F');; 2507 }; 2508 ; 2509 // Loading Dataset; 2510 DataLoaderCopy(se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:103056,variab,variables,103056,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"/ constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 34 of file RooExtendPdf.h. ◆ expectedEvents(). double RooExtendPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the number of expected events over the full range of all variables. ; norm, the variable set as normalisation constant in the constructor, will yield the number of events in the range set in the constructor. That is, the function returns ; \[; N = \mathrm{norm} \; \cdot \; \frac{\int_{(x_F,y_F)} \mathrm{pdf}(x,y) }{\int_{(x_C,y_F)} \mathrm{pdf}(x,y)}; \]. Where \( x \) is the set of dependents with a restricted range (defined by rangeName in the constructor), and \( y \) are the other dependents. \( x_C \) is the integration of \( x \) over the restricted range, and \( x_F \) is the integration of \( x \) over the full range. norm is the number of events given as parameter to the constructor.; If the nested PDF can be extended, \( N \) is further scaled by its expected number of events. ; Reimplemented from RooAbsPdf.; Definition at line 108 of file RooExtendPdf.cxx. ◆ extendMode(). ExtendMode RooExtendPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 47 of file RooExtendPdf.h. ◆ forceAnalyticalInt(). bool RooExtendPdf::forceAnalyticalInt ; (; const RooAbsArg & ; ); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 36 of file RooExtendPdf.h. ◆ getAnalyticalIntegralWN(). Int_t RooExtendPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; normSet, . const char * ; rangeName = nullptr . ); const. inlineoverridevirtual . Forward determination of analytical integration capabilities to input p.d.f. ; Reim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:78227,extend,extended,78227,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['extend'],['extended']
Modifiability,"/ m o r p h i n g f u n c t i o n; // ---------------------------------------------; ; std::string observablename = ""pTV"";; ; // Setup observable that is morphed; RooRealVar obsvar(observablename.c_str(), ""p_{T}^{V}"", 10, 600);; ; // Setup two couplings that enters the morphing function; // kSM -> SM coupling set to constant (1); // cHq3 -> EFT parameter with NewPhysics attribute set to true; RooRealVar kSM(""kSM"", ""sm modifier"", 1.0);; RooRealVar cHq3(""cHq3"", ""EFT modifier"", 0.0, 1.0);; cHq3.setAttribute(""NewPhysics"", true);; ; // I n p u t s n e e d e d f o r c o n f i g; // ---------------------------------------------; std::string infilename = std::string(gROOT->GetTutorialDir()) + ""/roofit/input_histos_rf_lagrangianmorph.root"";; std::vector<std::string> samplelist = {""SM_NPsq0"", ""cHq3_NPsq1"", ""cHq3_NPsq2""};; ; // S e t u p C o n f i g; // ---------------------------------------------; RooLagrangianMorphFunc::Config config;; config.fileName = infilename;; config.observableName = observablename;; config.folderNames = samplelist;; config.couplings.add(cHq3);; config.couplings.add(kSM);; ; // C r e a t e m o r p h i n g f u n c t i o n; // ---------------------------------------------; RooLagrangianMorphFunc morphfunc(""morphfunc"", ""morphed dist. of pTV"", config);; ; // G e t m o r p h e d d i s t r i b u t i o n f o r; // d i f f e r e n t c H q 3; // ---------------------------------------------; morphfunc.setParameter(""cHq3"", 0.01);; auto morph_hist_0p01 = morphfunc.createTH1(""morph_cHq3=0.01"");; morphfunc.setParameter(""cHq3"", 0.25);; auto morph_hist_0p25 = morphfunc.createTH1(""morph_cHq3=0.25"");; morphfunc.setParameter(""cHq3"", 0.5);; auto morph_hist_0p5 = morphfunc.createTH1(""morph_cHq3=0.5"");; RooDataHist morph_datahist_0p01(""morph_dh_cHq3=0.01"", """", {obsvar}, morph_hist_0p01);; RooDataHist morph_datahist_0p25(""morph_dh_cHq3=0.25"", """", {obsvar}, morph_hist_0p25);; RooDataHist morph_datahist_0p5(""morph_dh_cHq3=0.5"", """", {obsvar}, morph_hist_0p5);; ; // E x t r a c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html:1884,config,config,1884,doc/master/rf711__lagrangianmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html,1,['config'],['config']
Modifiability,"/* Step 3: Check if it is a websocket request, and modify the document; 7478 * root if required */; 7479#if defined(USE_WEBSOCKET); 7480 *is_websocket_request = (conn->protocol_type == PROTOCOL_TYPE_WEBSOCKET);; 7481#if !defined(NO_FILES); 7482 if (*is_websocket_request && conn->dom_ctx->config[WEBSOCKET_ROOT]) {; 7483 root = conn->dom_ctx->config[WEBSOCKET_ROOT];; 7484 }; 7485#endif /* !NO_FILES */; 7486#else /* USE_WEBSOCKET */; 7487 *is_websocket_request = 0;; 7488#endif /* USE_WEBSOCKET */; 7489 ; 7490 /* Step 4: Check if gzip encoded response is allowed */; 7491 conn->accept_gzip = 0;; 7492 if ((accept_encoding = mg_get_header(conn, ""Accept-Encoding"")) != NULL) {; 7493 if (strstr(accept_encoding, ""gzip"") != NULL) {; 7494 conn->accept_gzip = 1;; 7495 }; 7496 }; 7497 ; 7498#if !defined(NO_FILES); 7499 /* Step 5: If there is no root directory, don't look for files. */; 7500 /* Note that root == NULL is a regular use case here. This occurs,; 7501 * if all requests are handled by callbacks, so the WEBSOCKET_ROOT; 7502 * config is not required. */; 7503 if (root == NULL) {; 7504 /* all file related outputs have already been set to 0, just return; 7505 */; 7506 return;; 7507 }; 7508 ; 7509 /* Step 6: Determine the local file path from the root path and the; 7510 * request uri. */; 7511 /* Using filename_buf_len - 1 because memmove() for PATH_INFO may shift; 7512 * part of the path one byte on the right. */; 7513 truncated = 0;; 7514 mg_snprintf(; 7515 conn, &truncated, filename, filename_buf_len - 1, ""%s%s"", root, uri);; 7516 ; 7517 if (truncated) {; 7518 goto interpret_cleanup;; 7519 }; 7520 ; 7521 /* Step 7: URI rewriting */; 7522 rewrite = conn->dom_ctx->config[URL_REWRITE_PATTERN];; 7523 while ((rewrite = next_option(rewrite, &a, &b)) != NULL) {; 7524 if ((match_len = match_prefix(a.ptr, a.len, uri)) > 0) {; 7525 mg_snprintf(conn,; 7526 &truncated,; 7527 filename,; 7528 filename_buf_len - 1,; 7529 ""%.*s%s"",; 7530 (int)b.len,; 7531 b.ptr,; 7532 uri + match_len);; 75",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:215832,config,config,215832,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"/* Step 3: Check if it is a websocket request, and modify the document; 7479 * root if required */; 7480#if defined(USE_WEBSOCKET); 7481 *is_websocket_request = (conn->protocol_type == PROTOCOL_TYPE_WEBSOCKET);; 7482#if !defined(NO_FILES); 7483 if (*is_websocket_request && conn->dom_ctx->config[WEBSOCKET_ROOT]) {; 7484 root = conn->dom_ctx->config[WEBSOCKET_ROOT];; 7485 }; 7486#endif /* !NO_FILES */; 7487#else /* USE_WEBSOCKET */; 7488 *is_websocket_request = 0;; 7489#endif /* USE_WEBSOCKET */; 7490 ; 7491 /* Step 4: Check if gzip encoded response is allowed */; 7492 conn->accept_gzip = 0;; 7493 if ((accept_encoding = mg_get_header(conn, ""Accept-Encoding"")) != NULL) {; 7494 if (strstr(accept_encoding, ""gzip"") != NULL) {; 7495 conn->accept_gzip = 1;; 7496 }; 7497 }; 7498 ; 7499#if !defined(NO_FILES); 7500 /* Step 5: If there is no root directory, don't look for files. */; 7501 /* Note that root == NULL is a regular use case here. This occurs,; 7502 * if all requests are handled by callbacks, so the WEBSOCKET_ROOT; 7503 * config is not required. */; 7504 if (root == NULL) {; 7505 /* all file related outputs have already been set to 0, just return; 7506 */; 7507 return;; 7508 }; 7509 ; 7510 /* Step 6: Determine the local file path from the root path and the; 7511 * request uri. */; 7512 /* Using filename_buf_len - 1 because memmove() for PATH_INFO may shift; 7513 * part of the path one byte on the right. */; 7514 truncated = 0;; 7515 mg_snprintf(; 7516 conn, &truncated, filename, filename_buf_len - 1, ""%s%s"", root, uri);; 7517 ; 7518 if (truncated) {; 7519 goto interpret_cleanup;; 7520 }; 7521 ; 7522 /* Step 7: URI rewriting */; 7523 rewrite = conn->dom_ctx->config[URL_REWRITE_PATTERN];; 7524 while ((rewrite = next_option(rewrite, &a, &b)) != NULL) {; 7525 if ((match_len = match_prefix(a.ptr, a.len, uri)) > 0) {; 7526 mg_snprintf(conn,; 7527 &truncated,; 7528 filename,; 7529 filename_buf_len - 1,; 7530 ""%.*s%s"",; 7531 (int)b.len,; 7532 b.ptr,; 7533 uri + match_len);; 75",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:215864,config,config,215864,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"/, double /* maxinitial */) {; 209 return false;; 210 }; 211 ; 212 /// method to perform the minimization; 213 virtual bool Minimize() = 0;; 214 ; 215 /// return minimum function value; 216 virtual double MinValue() const = 0;; 217 ; 218 /// return pointer to X values at the minimum; 219 virtual const double * X() const = 0;; 220 ; 221 /// return expected distance reached from the minimum (re-implement if minimizer provides it; 222 virtual double Edm() const { return -1; }; 223 ; 224 /// return pointer to gradient values at the minimum; 225 virtual const double * MinGradient() const { return nullptr; }; 226 ; 227 /// number of function calls to reach the minimum; 228 virtual unsigned int NCalls() const { return 0; }; 229 ; 230 /// number of iterations to reach the minimum; 231 virtual unsigned int NIterations() const { return NCalls(); }; 232 ; 233 /// this is <= Function().NDim() which is the total; 234 /// number of variables (free+ constrained ones); 235 virtual unsigned int NDim() const = 0;; 236 ; 237 /// number of free variables (real dimension of the problem); 238 /// this is <= Function().NDim() which is the total; 239 /// (re-implement if minimizer supports bounded parameters); 240 virtual unsigned int NFree() const { return NDim(); }; 241 ; 242 /// minimizer provides error and error matrix; 243 virtual bool ProvidesError() const { return false; }; 244 ; 245 /// return errors at the minimum; 246 virtual const double * Errors() const { return nullptr; }; 247 ; 248 virtual double CovMatrix(unsigned int ivar , unsigned int jvar ) const;; 249 virtual bool GetCovMatrix(double * covMat) const;; 250 virtual bool GetHessianMatrix(double * hMat) const;; 251 ; 252 ; 253 ///return status of covariance matrix; 254 /// using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; 255 /// Minimizer who implements covariance matrix calculation will re-implement the method; 256 virtual int CovMatrixStatus() const {; 257 return 0;; 258 }; 259 ; 260 /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:10775,variab,variables,10775,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,2,['variab'],['variables']
Modifiability,"// - If varexp is 0 (or """") then print only first 8 columns.; 8091/// - If varexp = ""*"" print all columns.; 8092///; 8093/// Otherwise a columns selection can be made using ""var1:var2:var3"".; 8094///; 8095/// \param firstentry first entry to scan; 8096/// \param nentries total number of entries to scan (starting from firstentry). Defaults to all entries.; 8097/// \see TTree::SetScanField to control how many lines are printed between pagination breaks (Use 0 to disable pagination); 8098/// \see TTreePlayer::Scan for more information; 8099 ; 8100Long64_t TTree::Scan(const char* varexp, const char* selection, Option_t* option, Long64_t nentries, Long64_t firstentry); 8101{; 8102 GetPlayer();; 8103 if (fPlayer) {; 8104 return fPlayer->Scan(varexp, selection, option, nentries, firstentry);; 8105 }; 8106 return -1;; 8107}; 8108 ; 8109////////////////////////////////////////////////////////////////////////////////; 8110/// Set a tree variable alias.; 8111///; 8112/// Set an alias for an expression/formula based on the tree 'variables'.; 8113///; 8114/// The content of 'aliasName' can be used in TTreeFormula (i.e. TTree::Draw,; 8115/// TTree::Scan, TTreeViewer) and will be evaluated as the content of; 8116/// 'aliasFormula'.; 8117///; 8118/// If the content of 'aliasFormula' only contains symbol names, periods and; 8119/// array index specification (for example event.fTracks[3]), then; 8120/// the content of 'aliasName' can be used as the start of symbol.; 8121///; 8122/// If the alias 'aliasName' already existed, it is replaced by the new; 8123/// value.; 8124///; 8125/// When being used, the alias can be preceded by an eventual 'Friend Alias'; 8126/// (see TTree::GetFriendAlias); 8127///; 8128/// Return true if it was added properly.; 8129///; 8130/// For example:; 8131/// ~~~ {.cpp}; 8132/// tree->SetAlias(""x1"",""(tdc1[1]-tdc1[0])/49"");; 8133/// tree->SetAlias(""y1"",""(tdc1[3]-tdc1[2])/47"");; 8134/// tree->SetAlias(""x2"",""(tdc2[1]-tdc2[0])/49"");; 8135/// tree->SetAlias(""y2"",",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:315269,variab,variables,315269,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"// - \f$ W_\mathrm{expect} = N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective expected entries; 710/// - \f$ W_\mathrm{observed} = \sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective observed entries; 711///; 712/// The extended term for the likelihood weighted by the square of the weight will be then:; 713///; 714/// \f$ \left(\sum w_{i}^2 / \sum w_{i}\right)^2 \cdot W_\mathrm{expect} - (\sum w_{i}^2 / \sum w_{i})^2 \cdot W_\mathrm{observed} \cdot \log{W_\mathrm{expect}} \f$; 715///; 716/// aund this is using the previous expressions for \f$ W_\mathrm{expect} \f$ and \f$ W_\mathrm{observed} \f$:; 717///; 718/// \f$ \sum w_{i}^2 / \sum w_{i} \cdot N_\mathrm{expect} - \sum w_{i}^2 \cdot \log{W_\mathrm{expect}} \f$; 719///; 720/// Since the weights are constants in the likelihood we can use \f$\log{N_\mathrm{expect}}\f$ instead of \f$\log{W_\mathrm{expect}}\f$.; 721///; 722/// See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset),; 723/// which takes a dataset to extract \f$N_\mathrm{observed}\f$ and the; 724/// normalization set.; 725double RooAbsPdf::extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW2, bool doOffset) const; 726{; 727 return extendedTerm(sumEntries, expectedEvents(nset), sumEntriesW2, doOffset);; 728}; 729 ; 730double RooAbsPdf::extendedTerm(double sumEntries, double expected, double sumEntriesW2, bool doOffset) const; 731{; 732 // check if this PDF supports extended maximum likelihood fits; 733 if(!canBeExtended()) {; 734 coutE(InputArguments) << GetName() << "": this PDF does not support extended maximum likelihood""; 735 << std::endl;; 736 return 0.0;; 737 }; 738 ; 739 if(expected < 0.0) {; 740 coutE(InputArguments) << GetName() << "": calculated negative expected events: "" << expected; 741 << std::endl;; 742 logEvalError(""extendedTerm #expected events is <0 return a NaN"");; 743 return TMath::QuietNaN();; 744 }; 745 ; 746 ; 747 // Explicitly handle case Nobs=Nexp=0; 7",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:28717,extend,extendedTerm,28717,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extendedTerm']
Modifiability,"// - `x/D:y:z` (all variables are of type ""D""); 7538/// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); 7539///; 7540/// delimiter allows for the use of another delimiter besides whitespace.; 7541/// This provides support for direct import of common data file formats; 7542/// like csv. If delimiter != ' ' and branchDescriptor == """", then the; 7543/// branch description is taken from the first line in the file, but; 7544/// delimiter is used for the branch names tokenization rather than ':'.; 7545/// Note however that if the values in the first line do not use the; 7546/// /[type] syntax, all variables are assumed to be of type ""F"".; 7547/// If the filename ends with extensions .csv or .CSV and a delimiter is; 7548/// not specified (besides ' '), the delimiter is automatically set to ','.; 7549///; 7550/// Lines in the input file starting with ""#"" are ignored. Leading whitespace; 7551/// for each column data is skipped. Empty lines are skipped.; 7552///; 7553/// A TBranch object is created for each variable in the expression.; 7554/// The total number of rows read from the file is returned.; 7555///; 7556/// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; 7557///; 7558/// To fill a TTree with multiple input text files, proceed as indicated above; 7559/// for the first input file and omit the second argument for subsequent calls; 7560/// ~~~ {.cpp}; 7561/// T.ReadFile(""file1.dat"",""branch descriptor"");; 7562/// T.ReadFile(""file2.dat"");; 7563/// ~~~; 7564 ; 7565Long64_t TTree::ReadFile(const char* filename, const char* branchDescriptor, char delimiter); 7566{; 7567 if (!filename || !*filename) {; 7568 Error(""ReadFile"",""File name not specified"");; 7569 return 0;; 7570 }; 7571 ; 7572 std::ifstream in;; 7573 in.open(filename);; 7574 if (!in.good()) {; 7575 Error(""ReadFile"",""Cannot open file: %s"",filename);; 7576 return 0;; 7577 }; 7578 const char* ext = strrchr(filename, '.');; 7579 if(ext && ((strcmp(ext, "".csv"") == 0) || (strcmp(ext, "".CSV"") == 0)) && delimiter == ' ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:297612,variab,variable,297612,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"// The function returns the corresponding global bin number which has its content; 474/// incremented by w; 475 ; 476Int_t TH3::Fill(const char *namex, const char *namey, const char *namez, Double_t w); 477{; 478 Int_t binx, biny, binz, bin;; 479 fEntries++;; 480 binx = fXaxis.FindBin(namex);; 481 biny = fYaxis.FindBin(namey);; 482 binz = fZaxis.FindBin(namez);; 483 if (binx <0 || biny <0 || binz<0) return -1;; 484 bin = binx + (fXaxis.GetNbins()+2)*(biny + (fYaxis.GetNbins()+2)*binz);; 485 if (!fSumw2.fN && w != 1.0 && !TestBit(TH1::kIsNotW)) Sumw2(); // must be called before AddBinContent; 486 if (fSumw2.fN) fSumw2.fArray[bin] += w*w;; 487 AddBinContent(bin,w);; 488 if (binx == 0 || binx > fXaxis.GetNbins()) return -1;; 489 if (biny == 0 || biny > fYaxis.GetNbins()) return -1;; 490 if (binz == 0 || binz > fZaxis.GetNbins()) return -1;; 491 ; 492 Double_t v = w;; 493 fTsumw += v;; 494 fTsumw2 += v*v;; 495 // skip computation of the statistics along axis that have labels (can be extended and are aphanumeric); 496 UInt_t labelBitMask = GetAxisLabelStatus();; 497 if (labelBitMask != TH1::kAllAxes) {; 498 Double_t x = (labelBitMask & TH1::kXaxis) ? 0 : fXaxis.GetBinCenter(binx);; 499 Double_t y = (labelBitMask & TH1::kYaxis) ? 0 : fYaxis.GetBinCenter(biny);; 500 Double_t z = (labelBitMask & TH1::kZaxis) ? 0 : fZaxis.GetBinCenter(binz);; 501 fTsumwx += v * x;; 502 fTsumwx2 += v * x * x;; 503 fTsumwy += v * y;; 504 fTsumwy2 += v * y * y;; 505 fTsumwxy += v * x * y;; 506 fTsumwz += v * z;; 507 fTsumwz2 += v * z * z;; 508 fTsumwxz += v * x * z;; 509 fTsumwyz += v * y * z;; 510 }; 511 return bin;; 512}; 513 ; 514 ; 515////////////////////////////////////////////////////////////////////////////////; 516/// Increment cell defined by namex,y,namez by a weight w; 517///; 518/// If the weight is not equal to 1, the storage of the sum of squares of; 519/// weights is automatically triggered and the sum of the squares of weights is incremented; 520/// by w^2 in the corresponding ce",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:18861,extend,extended,18861,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['extend'],['extended']
Modifiability,"// \tparam FirstColumn The type of the first column used by this action. Inferred together with OtherColumns if not present.; 2925 /// \tparam OtherColumns A list of the types of the other columns used by this action; 2926 /// \tparam Helper The type of the user-defined helper. See below for the required interface it should expose.; 2927 /// \param[in] helper The Action Helper to be scheduled.; 2928 /// \param[in] columns The names of the columns on which the helper acts.; 2929 /// \return the result of the helper wrapped in a RResultPtr.; 2930 ///; 2931 /// This method books a custom action for execution. The behavior of the action is completely dependent on the; 2932 /// Helper object provided by the caller. The required interface for the helper is described below (more; 2933 /// methods that the ones required can be present, e.g. a constructor that takes the number of worker threads is usually useful):; 2934 ///; 2935 /// ### Mandatory interface; 2936 ///; 2937 /// * `Helper` must publicly inherit from `ROOT::Detail::RDF::RActionImpl<Helper>`; 2938 /// * `Helper::Result_t`: public alias for the type of the result of this action helper. `Result_t` must be default-constructible.; 2939 /// * `Helper(Helper &&)`: a move-constructor is required. Copy-constructors are discouraged.; 2940 /// * `std::shared_ptr<Result_t> GetResultPtr() const`: return a shared_ptr to the result of this action (of type; 2941 /// Result_t). The RResultPtr returned by Book will point to this object. Note that this method can be called; 2942 /// _before_ Initialize(), because the RResultPtr is constructed before the event loop is started.; 2943 /// * `void Initialize()`: this method is called once before starting the event-loop. Useful for setup operations.; 2944 /// It must reset the state of the helper to the expected state at the beginning of the event loop: the same helper,; 2945 /// or copies of it, might be used for multiple event loops (e.g. in the presence of systematic variations).; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:165394,inherit,inherit,165394,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['inherit'],['inherit']
Modifiability,"// auto xaxis = htemp->GetXaxis();; 4074/// ~~~; 4075///; 4076/// When the option `""A""` is used (with TGraph painting option) to draw a 2D; 4077/// distribution:; 4078/// ~~~ {.cpp}; 4079/// tree.Draw(""e1:e2"","""",""A*"");; 4080/// ~~~; 4081/// a scatter plot is produced (with stars in that case) but the axis creation is; 4082/// delegated to TGraph and `htemp` is not created.; 4083///; 4084/// ### Saving the result of Draw to a histogram; 4085///; 4086/// If `varexp` contains `>>hnew` (following the variable(s) name(s)),; 4087/// the new histogram called `hnew` is created and it is kept in the current; 4088/// directory (and also the current pad). This works for all dimensions.; 4089///; 4090/// Example:; 4091/// ~~~ {.cpp}; 4092/// tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); 4093/// ~~~; 4094/// will draw `sqrt(x)` and save the histogram as ""hsqrt"" in the current; 4095/// directory. To retrieve it do:; 4096/// ~~~ {.cpp}; 4097/// TH1F *hsqrt = (TH1F*)gDirectory->Get(""hsqrt"");; 4098/// ~~~; 4099/// The binning information is taken from the environment variables; 4100/// ~~~ {.cpp}; 4101/// Hist.Binning.?D.?; 4102/// ~~~; 4103/// In addition, the name of the histogram can be followed by up to 9; 4104/// numbers between '(' and ')', where the numbers describe the; 4105/// following:; 4106///; 4107/// - 1 - bins in x-direction; 4108/// - 2 - lower limit in x-direction; 4109/// - 3 - upper limit in x-direction; 4110/// - 4-6 same for y-direction; 4111/// - 7-9 same for z-direction; 4112///; 4113/// When a new binning is used the new value will become the default.; 4114/// Values can be skipped.; 4115///; 4116/// Example:; 4117/// ~~~ {.cpp}; 4118/// tree.Draw(""sqrt(x)>>hsqrt(500,10,20)""); 4119/// // plot sqrt(x) between 10 and 20 using 500 bins; 4120/// tree.Draw(""sqrt(x):sin(y)>>hsqrt(100,10,60,50,.1,.5)""); 4121/// // plot sqrt(x) against sin(y); 4122/// // 100 bins in x-direction; lower limit on x-axis is 10; upper limit is 60; 4123/// // 50 bins in y-direction; lower limit on y-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:163830,variab,variables,163830,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"// c.Add(""myfile.root/treename"");; // DO THIS INSTEAD; c.Add(""myfile.root?#treename"");; c#define c(i)Definition RSha256.hxx:101; TChain::Addvirtual Int_t Add(TChain *chain)Add all files referenced by the passed chain to this chain.Definition TChain.cxx:219. Wildcard treatment is triggered by any of the special characters: []*? which may be used in the file name or subdirectory name, eg. specifying ""xxx*.root"" adds all files starting with xxx in the current file system directory and ""*&zwj;/*.root"" adds all the files in the current subdirectories (but not in the subsubdirectories). The second format accepted for name may have the form of a URL, e.g.:; root://machine/path/file_name[?[query][#tree_name]]; or root://machine/path/file_name; or root://machine/path/file_name.root[.oext]/tree_name; or root://machine/path/file_name.root[.oext]/tree_name?query; Note the following:; The optional ""query"" token is to be interpreted by the remote server.; Wildcards may be supported in URLs, depending on the protocol plugin and the remote server.; http or https URLs can contain a query identifier without tree_name, but generally URLs can not be written with them because of ambiguity with the wildcard character. (Also see the documentation for TChain::AddFile, which does not support wildcards but allows the URL name to contain a query).; The rules for tagging the name of the tree in the file are the same as in the format above. Details of the nentries parameter; Depending on the value of the parameter, the number of entries in the file is retrieved differently:; If nentries <= 0, the file is connected and the tree header read in memory to get the number of entries.; If nentries > 0, the file is not connected, nentries is assumed to be the number of entries in the file. In this case, no check is made that the file exists and that the corresponding tree exists as well. This second mode is interesting in case the number of entries in the file is already stored in a run data base for ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:57962,plugin,plugin,57962,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,2,['plugin'],['plugin']
Modifiability,"// combo box widget; TGComboBox *fCombo = new TGComboBox(parent,100);; for (i = 0; i < 10; i++) {; sprintf(tmp, ""Entry%i"", i+1);; fCombo->AddEntry(tmp, i+1);; }; fCombo->Resize(150, 20);; // Entry3 is selected as current; fCombo->Select(2);; parent->AddFrame(fCombo, fLcombo);; You have the same flexibility to add, insert or remove entries. As with list boxes you can retrieve the information for currently selected item via GetSelected or GetSelectedEntry methods. The first one returns the entry ID, the second - the current entry pointer (TGLBEntry *).; 25.8.8 Sliders; A slider is a scale with an indicator (slider) that you can drag to choose a value from a predefined range. It may be oriented horizontally or vertically. In both cases it provides an excellent indication of where a value exists within a range of values. The class TGHSlider represents the horizontal slider; TGVSlider - the vertical one. Both inherit from the base class TGSlider that creates the main slider parameters: the range of values within a value can be selected; the indicator type; the tick mark scale. Using its methods SetRange, SetPosition and SetScale you can set these parameters. To retrieve the set slider value you can call GetPosition method.; Next sample code creates a horizontal slider hslider with a tick mark of type kSlider1. Its width is 150 pixels, and its scale is placed down (kScaleDownRight). The last parameter in the TGHSlider constructor is the slider ID. It will be used for event processing. The methods SetRange and SetPosition set the range and the current tick mark position of the slider.; hslider = new TGHSlider(parent,150,kSlider1|kScaleDownRight,sID);; hslider->SetRange(0,50);; hslider->SetPosition(39);; Slider values can be set by using the mouse to drag the slider across the scale until the desired value is reached. Another way is to click in the slider trough instead of dragging.; 25.8.8.1 Double Slider; Double slider widgets allow easy selection of a min and a max value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1204692,inherit,inherit,1204692,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inherit']
Modifiability,"// correct dimensions:; 4338/// Sumw2 just makes sure the errors will be computed properly; 4339/// when we form sums and ratios below.; 4340 ; 4341TH1 *TH1::GetAsymmetry(TH1* h2, Double_t c2, Double_t dc2); 4342{; 4343 TH1 *h1 = this;; 4344 TString name = TString::Format(""Asymmetry_%s-%s"",h1->GetName(),h2->GetName() );; 4345 TH1 *asym = (TH1*)Clone(name);; 4346 ; 4347 // set also the title; 4348 TString title = TString::Format(""(%s - %s)/(%s+%s)"",h1->GetName(),h2->GetName(),h1->GetName(),h2->GetName() );; 4349 asym->SetTitle(title);; 4350 ; 4351 asym->Sumw2();; 4352 Bool_t addStatus = TH1::AddDirectoryStatus();; 4353 TH1::AddDirectory(kFALSE);; 4354 TH1 *top = (TH1*)asym->Clone();; 4355 TH1 *bottom = (TH1*)asym->Clone();; 4356 TH1::AddDirectory(addStatus);; 4357 ; 4358 // form the top and bottom of the asymmetry, and then divide:; 4359 top->Add(h1,h2,1,-c2);; 4360 bottom->Add(h1,h2,1,c2);; 4361 asym->Divide(top,bottom);; 4362 ; 4363 Int_t xmax = asym->GetNbinsX();; 4364 Int_t ymax = asym->GetNbinsY();; 4365 Int_t zmax = asym->GetNbinsZ();; 4366 ; 4367 if (h1->fBuffer) h1->BufferEmpty(1);; 4368 if (h2->fBuffer) h2->BufferEmpty(1);; 4369 if (bottom->fBuffer) bottom->BufferEmpty(1);; 4370 ; 4371 // now loop over bins to calculate the correct errors; 4372 // the reason this error calculation looks complex is because of c2; 4373 for(Int_t i=1; i<= xmax; i++){; 4374 for(Int_t j=1; j<= ymax; j++){; 4375 for(Int_t k=1; k<= zmax; k++){; 4376 Int_t bin = GetBin(i, j, k);; 4377 // here some bin contents are written into variables to make the error; 4378 // calculation a little more legible:; 4379 Double_t a = h1->RetrieveBinContent(bin);; 4380 Double_t b = h2->RetrieveBinContent(bin);; 4381 Double_t bot = bottom->RetrieveBinContent(bin);; 4382 ; 4383 // make sure there are some events, if not, then the errors are set = 0; 4384 // automatically.; 4385 //if(bot < 1){} was changed to the next line from recommendation of Jason Seely (28 Nov 2005); 4386 if(bot < 1e-6){}; 4387 else{",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:180930,variab,variables,180930,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variables']
Modifiability,"// does not affect the number of threads ROOT will use anymore. tbb::global_control c(tbb::global_control::max_allowed_parallelism, 2);; ROOT::TThreadExecutor p1; // will use 2 threads; ROOT::TThreadExecutor p2(/*nThreads=*/8); // will still use 2 threads; Note that the preferred way to steer ROOT’s concurrency level is still through ROOT::EnableImplicitMT or by passing the appropriate parameter to executors’ constructors, as in TThreadExecutor::TThreadExecutor.; See the discussion at ROOT-11014 for more context.; Dynamic Path: ROOT_LIBRARY_PATH; A new way to set ROOT’s “Dynamic Path” was added: the environment variable ROOT_LIBRARY_PATH. On Unix it should contain a colon separated list of paths, on Windows a semicolon separated list. It is intended to be cross platform and to be specific to ROOT (and thus not interfere with the system’s shared linker). The final “Dynamic Path” is now composed of these sources in order:. ROOT_LIBRARY_PATH environment variable; System specific shared linker environment variables like LD_LIBRARY_PATH, LIBPATH, or PATH.; Setting from rootrc; ROOT’s builtin library directory. Interpreter. cling’s LLVM is upgraded to version 9.0; New interface to enable/disable optional cling features. Currently, it can be used to enable/disable support for redefinitions. See this issue for more information. Multithreading. Fix an uninitialized variable in global read-write lock which could have caused deadlocks or crashes in some rare cases.; Default global read-write lock transitioned to new implementation based on TBB thread local storage when TBB is available on supported platforms (all except Windows). This gives an O(10%) performance improvement for some typical RDataFrame scenarios with 256 threads due to reduced lock contention. I/O Libraries. Exclusive use of the global lock is reduced or migrated to finer grained read and write locks in a few hotspots that occur during file opening/closing or task initialization in RDataFrame. This can lead to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:4640,variab,variable,4640,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,2,['variab'],"['variable', 'variables']"
Modifiability,"// list of the unresolved symbols. So if the loading of the created shared; 2803/// library fails, we will try to build a executable that contains the; 2804/// script. The linker should then output a list of missing symbols.; 2805///; 2806/// To support this we provide a TSystem::SetMakeExe() function, that sets the; 2807/// directive telling how to create an executable. The loader will need; 2808/// to be informed of all the libraries available. The information about; 2809/// the libraries that has been loaded by .L and TSystem::Load() is accessible; 2810/// to the script compiler. However, the information about; 2811/// the libraries that have been selected at link time by the application; 2812/// builder (like the root libraries for root.exe) are not available and need; 2813/// to be explicitly listed in fLinkedLibs (either by default or by a call to; 2814/// TSystem::SetLinkedLibs()).; 2815///; 2816/// To simplify customization we could also add to the .rootrc support for the; 2817/// variables; 2818/// ~~~ {.cpp}; 2819/// Unix.*.Root.IncludePath: -I$ROOTSYS/include; 2820/// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; 2821///; 2822/// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; 2823/// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; 2824/// ~~~; 2825/// And also support for MakeSharedLibs() and MakeExe().; 2826///; 2827/// (the ... have to be replaced by the actual values and are here only to; 2828/// shorten this comment).; 2829///; 2830/// Note that the default behavior is to remove libraries when closing ROOT,; 2831/// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; 2832/// The default behavior of .L script.C+ is the opposite one, leaving things; 2833/// after closing, without removing. In other words, .L always passes the 'k'; 2834/// option behind the scenes.; 2835 ; 2836int TSystem::CompileMacro(const char *filename, Option_t *opt,; 2837 const char *library_specified,; 2838 const char *build_dir,; 2839 UInt_t d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:93150,variab,variables,93150,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,"// parameter values if Print Flag value is high enough.; 971 ; 972void TMinuit::mnamin(); 973{; 974 /* Local variables */; 975 Double_t fnew;; 976 Int_t nparx;; 977 ; 978 nparx = fNpar;; 979 if (fISW[4] >= 1) {; 980 Printf("" FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4."");; 981 }; 982 mnexin(fX);; 983 Eval(nparx, fGin, fnew, fU, 4); ++fNfcn;; 984 fAmin = fnew;; 985 fEDM = fBigedm;; 986}; 987 ; 988////////////////////////////////////////////////////////////////////////////////; 989/// Compute reasonable histogram intervals; 990///; 991/// Function TO DETERMINE REASONABLE HISTOGRAM INTERVALS; 992/// GIVEN ABSOLUTE UPPER AND LOWER BOUNDS A1 AND A2; 993/// AND DESIRED MAXIMUM NUMBER OF BINS NAA; 994/// PROGRAM MAKES REASONABLE BINNING FROM BL TO BH OF WIDTH BWID; 995/// F. JAMES, AUGUST, 1974 , stolen for Minuit, 1988; 996 ; 997void TMinuit::mnbins(Double_t a1, Double_t a2, Int_t naa, Double_t &bl, Double_t &bh, Int_t &nb, Double_t &bwid); 998{; 999 /* Local variables */; 1000 Double_t awid,ah, al, sigfig, sigrnd, alb;; 1001 Int_t kwid, lwid, na=0, log_;; 1002 ; 1003 al = TMath::Min(a1,a2);; 1004 ah = TMath::Max(a1,a2);; 1005 if (al == ah) ah = al + 1;; 1006 ; 1007// IF NAA .EQ. -1 , PROGRAM USES BWID INPUT FROM CALLING ROUTINE; 1008 if (naa == -1) goto L150;; 1009L10:; 1010 na = naa - 1;; 1011 if (na < 1) na = 1;; 1012 ; 1013// GET NOMINAL BIN WIDTH IN EXPON FORM; 1014L20:; 1015 awid = (ah-al) / Double_t(na);; 1016 log_ = Int_t(TMath::Log10(awid));; 1017 if (awid <= 1) --log_;; 1018 sigfig = awid*TMath::Power(10, -log_);; 1019// ROUND MANTISSA UP TO 2, 2.5, 5, OR 10; 1020 if (sigfig > 2) goto L40;; 1021 sigrnd = 2;; 1022 goto L100;; 1023L40:; 1024 if (sigfig > 2.5) goto L50;; 1025 sigrnd = 2.5;; 1026 goto L100;; 1027L50:; 1028 if (sigfig > 5) goto L60;; 1029 sigrnd = 5;; 1030 goto L100;; 1031L60:; 1032 sigrnd = 1;; 1033 ++log_;; 1034L100:; 1035 bwid = sigrnd*TMath::Power(10, log_);; 1036 goto L200;; 1037// GET NEW BOUNDS FROM NEW WIDTH BWID; 1038L150:; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:36122,variab,variables,36122,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"// set a new lower limit variable (override if minimizer supports them ); 175 virtual bool SetLowerLimitedVariable(unsigned int ivar , const std::string & name , double val , double step , double lower ) {; 176 return SetLimitedVariable(ivar, name, val, step, lower, std::numeric_limits<double>::infinity() );; 177 }; 178 /// set a new upper limit variable (override if minimizer supports them ); 179 virtual bool SetUpperLimitedVariable(unsigned int ivar , const std::string & name , double val , double step , double upper ) {; 180 return SetLimitedVariable(ivar, name, val, step, - std::numeric_limits<double>::infinity(), upper );; 181 }; 182 virtual bool SetLimitedVariable(unsigned int ivar , const std::string & name , double val , double step ,; 183 double lower , double upper );; 184 virtual bool SetFixedVariable(unsigned int ivar , const std::string & name , double val );; 185 virtual bool SetVariableValue(unsigned int ivar , double value);; 186 /// set the values of all existing variables (array must be dimensioned to the size of the existing parameters); 187 virtual bool SetVariableValues(const double * x) {; 188 bool ret = true;; 189 unsigned int i = 0;; 190 while ( i <= NDim() && ret) {; 191 ret &= SetVariableValue(i,x[i] ); i++;; 192 }; 193 return ret;; 194 }; 195 virtual bool SetVariableStepSize(unsigned int ivar, double value );; 196 virtual bool SetVariableLowerLimit(unsigned int ivar, double lower);; 197 virtual bool SetVariableUpperLimit(unsigned int ivar, double upper);; 198 /// set the limits of an already existing variable; 199 virtual bool SetVariableLimits(unsigned int ivar, double lower, double upper) {; 200 return SetVariableLowerLimit(ivar,lower) && SetVariableUpperLimit(ivar,upper);; 201 }; 202 virtual bool FixVariable(unsigned int ivar);; 203 virtual bool ReleaseVariable(unsigned int ivar);; 204 virtual bool IsFixedVariable(unsigned int ivar) const;; 205 virtual bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings & pars) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:8685,variab,variables,8685,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variables']
Modifiability,"// ~~~ {.cpp}; 7529/// A/D:Table[2]/F:Ntracks/I:astring/C; 7530/// ~~~; 7531/// otherwise branchDescriptor must be specified with the above syntax.; 7532///; 7533/// - If the type of the first variable is not specified, it is assumed to be ""/F""; 7534/// - If the type of any other variable is not specified, the type of the previous; 7535/// variable is assumed. eg; 7536/// - `x:y:z` (all variables are assumed of type ""F""); 7537/// - `x/D:y:z` (all variables are of type ""D""); 7538/// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); 7539///; 7540/// delimiter allows for the use of another delimiter besides whitespace.; 7541/// This provides support for direct import of common data file formats; 7542/// like csv. If delimiter != ' ' and branchDescriptor == """", then the; 7543/// branch description is taken from the first line in the file, but; 7544/// delimiter is used for the branch names tokenization rather than ':'.; 7545/// Note however that if the values in the first line do not use the; 7546/// /[type] syntax, all variables are assumed to be of type ""F"".; 7547/// If the filename ends with extensions .csv or .CSV and a delimiter is; 7548/// not specified (besides ' '), the delimiter is automatically set to ','.; 7549///; 7550/// Lines in the input file starting with ""#"" are ignored. Leading whitespace; 7551/// for each column data is skipped. Empty lines are skipped.; 7552///; 7553/// A TBranch object is created for each variable in the expression.; 7554/// The total number of rows read from the file is returned.; 7555///; 7556/// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; 7557///; 7558/// To fill a TTree with multiple input text files, proceed as indicated above; 7559/// for the first input file and omit the second argument for subsequent calls; 7560/// ~~~ {.cpp}; 7561/// T.ReadFile(""file1.dat"",""branch descriptor"");; 7562/// T.ReadFile(""file2.dat"");; 7563/// ~~~; 7564 ; 7565Long64_t TTree::ReadFile(const char* filename, const char* branchDescriptor, char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:297198,variab,variables,297198,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/// Transpose quadratic histogram; 656 ; 657TH2F* TMVA::Tools::TransposeHist( const TH2F& h ); 658{; 659 // sanity check; 660 if (h.GetNbinsX() != h.GetNbinsY()) {; 661 Log() << kFATAL << ""<TransposeHist> cannot transpose non-quadratic histogram"" << Endl;; 662 }; 663 ; 664 TH2F *transposedHisto = new TH2F( h );; 665 for (Int_t ix=1; ix <= h.GetNbinsX(); ix++){; 666 for (Int_t iy=1; iy <= h.GetNbinsY(); iy++){; 667 transposedHisto->SetBinContent(iy,ix,h.GetBinContent(ix,iy));; 668 }; 669 }; 670 ; 671 // copy stats (thanks to Swagato Banerjee for pointing out the missing stats information); 672 Double_t stats_old[7];; 673 Double_t stats_new[7];; 674 ; 675 h.GetStats(stats_old);; 676 stats_new[0] = stats_old[0];; 677 stats_new[1] = stats_old[1];; 678 stats_new[2] = stats_old[4];; 679 stats_new[3] = stats_old[5];; 680 stats_new[4] = stats_old[2];; 681 stats_new[5] = stats_old[3];; 682 stats_new[6] = stats_old[6];; 683 transposedHisto->PutStats(stats_new);; 684 ; 685 return transposedHisto; // ownership returned; 686}; 687 ; 688////////////////////////////////////////////////////////////////////////////////; 689/// check for ""silence"" option in configuration option string; 690 ; 691Bool_t TMVA::Tools::CheckForSilentOption( const TString& cs ) const; 692{; 693 Bool_t isSilent = kFALSE;; 694 ; 695 TString s( cs );; 696 s.ToLower();; 697 s.ReplaceAll("" "","""");; 698 if (s.Contains(""silent"") && !s.Contains(""silent=f"")) {; 699 if (!s.Contains(""!silent"") || s.Contains(""silent=t"")) isSilent = kTRUE;; 700 }; 701 ; 702 return isSilent;; 703}; 704 ; 705////////////////////////////////////////////////////////////////////////////////; 706/// check if verbosity ""V"" set in option; 707 ; 708Bool_t TMVA::Tools::CheckForVerboseOption( const TString& cs ) const; 709{; 710 Bool_t isVerbose = kFALSE;; 711 ; 712 TString s( cs );; 713 s.ToLower();; 714 s.ReplaceAll("" "","""");; 715 std::vector<TString> v = SplitString( s, ':' );; 716 for (std::vector<TString>::iterator it = v.begin(); it != v.end(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:23895,config,configuration,23895,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['config'],['configuration']
Modifiability,"/// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; 703/// (the effective weight of the Poisson term),; 704/// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; 705/// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; 706/// weighted by the effective weight \f$ \sum w_{i}^2 / \sum w_{i} \f$ in the likelihood.; 707/// Since here we compute the likelihood with the weight square, we need to multiply by the; 708/// square of the effective weight:; 709/// - \f$ W_\mathrm{expect} = N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective expected entries; 710/// - \f$ W_\mathrm{observed} = \sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective observed entries; 711///; 712/// The extended term for the likelihood weighted by the square of the weight will be then:; 713///; 714/// \f$ \left(\sum w_{i}^2 / \sum w_{i}\right)^2 \cdot W_\mathrm{expect} - (\sum w_{i}^2 / \sum w_{i})^2 \cdot W_\mathrm{observed} \cdot \log{W_\mathrm{expect}} \f$; 715///; 716/// aund this is using the previous expressions for \f$ W_\mathrm{expect} \f$ and \f$ W_\mathrm{observed} \f$:; 717///; 718/// \f$ \sum w_{i}^2 / \sum w_{i} \cdot N_\mathrm{expect} - \sum w_{i}^2 \cdot \log{W_\mathrm{expect}} \f$; 719///; 720/// Since the weights are constants in the likelihood we can use \f$\log{N_\mathrm{expect}}\f$ instead of \f$\log{W_\mathrm{expect}}\f$.; 721///; 722/// See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset),; 723/// which takes a dataset to extract \f$N_\mathrm{observed}\f$ and the; 724/// normalization set.; 725double RooAbsPdf::extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW2, bool doOffset) const; 726{; 727 return extendedTerm(sumEntries, expectedEvents(nset), sumEntriesW2, doOffset);; 728}; 729 ; 730double RooAbsPdf::extendedTerm(double sumEntr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:28029,extend,extended,28029,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"/// by TNamed::Clone. TNamed::Clone uses the optional argument newname to set; 380/// a new name to the newly created object.; 381///; 382/// If autoadd is true and if the object class has a; 383/// DirectoryAutoAdd function, it will be called at the end of the; 384/// function with the parameter gDirectory. This usually means that; 385/// the object will be appended to the current ROOT directory.; 386 ; 387TObject *TDirectoryFile::CloneObject(const TObject *obj, Bool_t autoadd /* = kTRUE */); 388{; 389 // if no default ctor return immediately (error issued by New()); 390 char *pobj = (char*)obj->IsA()->New();; 391 if (!pobj) return nullptr;; 392 ; 393 Int_t baseOffset = obj->IsA()->GetBaseClassOffset(TObject::Class());; 394 if (baseOffset==-1) {; 395 // cl does not inherit from TObject.; 396 // Since this is not supported in this function, the only reason we could reach this code; 397 // is because something is screwed up in the ROOT code.; 398 Fatal(""CloneObject"",""Incorrect detection of the inheritance from TObject for class %s.\n"",; 399 obj->IsA()->GetName());; 400 }; 401 TObject *newobj = (TObject*)(pobj+baseOffset);; 402 ; 403 //create a buffer where the object will be streamed; 404 {; 405 // NOTE: do we still need to make this change to gFile?; 406 // NOTE: This can not be 'gDirectory=0' as at least roofit expect gDirectory to not be null; 407 // during the streaming ....; 408 TFile *filsav = gFile;; 409 gFile = nullptr;; 410 const Int_t bufsize = 10000;; 411 TBufferFile buffer(TBuffer::kWrite,bufsize);; 412 buffer.MapObject(obj); //register obj in map to handle self reference; 413 {; 414 Bool_t isRef = obj->TestBit(kIsReferenced);; 415 ((TObject*)obj)->ResetBit(kIsReferenced);; 416 ; 417 ((TObject*)obj)->Streamer(buffer);; 418 ; 419 if (isRef) ((TObject*)obj)->SetBit(kIsReferenced);; 420 }; 421 ; 422 // read new object from buffer; 423 buffer.SetReadMode();; 424 buffer.ResetMap();; 425 buffer.SetBufferOffset(0);; 426 buffer.MapObject(newobj); //register obj i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:13111,inherit,inheritance,13111,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"/// number of currently loaded methods use:; 4571/// cl->GetListOfMethods(false)->GetSize();; 4572 ; 4573Int_t TClass::GetNmethods(); 4574{; 4575 if (!HasInterpreterInfo()) return 0;; 4576 ; 4577 TList *lm = GetListOfMethods();; 4578 if (lm); 4579 return lm->GetSize();; 4580 else; 4581 return 0;; 4582}; 4583 ; 4584////////////////////////////////////////////////////////////////////////////////; 4585/// returns a pointer to the TVirtualStreamerInfo object for version; 4586/// If the object does not exist, it is created; 4587///; 4588/// Note: There are two special version numbers:; 4589///; 4590/// - 0: Use the class version from the currently loaded class library.; 4591/// - -1: Assume no class library loaded (emulated class).; 4592///; 4593/// Warning: If we create a new streamer info, whether or not the build; 4594/// optimizes is controlled externally to us by a global variable!; 4595/// Don't call us unless you have set that variable properly; 4596/// with TStreamer::Optimize()!; 4597///; 4598 ; 4599TVirtualStreamerInfo* TClass::GetStreamerInfo(Int_t version /* = 0 */, Bool_t isTransient /* = false */) const; 4600{; 4601 TVirtualStreamerInfo *sinfo = fLastReadInfo;; 4602 ; 4603 // Version 0 is special, it means the currently loaded version.; 4604 // We need to set it at the beginning to be able to guess it correctly.; 4605 ; 4606 if (version == 0); 4607 version = fClassVersion;; 4608 ; 4609 // If the StreamerInfo is assigned to the fLastReadInfo, we are; 4610 // guaranteed it was built and compiled.; 4611 if (sinfo && sinfo->GetClassVersion() == version); 4612 return sinfo;; 4613 ; 4614 // Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; 4615 // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; 4616 // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; 4617 // However, direct access to fClassVersion should be replaced",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:173562,variab,variable,173562,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,2,['variab'],['variable']
Modifiability,"/// number of currently loaded methods use:; 4638/// cl->GetListOfMethods(false)->GetSize();; 4639 ; 4640Int_t TClass::GetNmethods(); 4641{; 4642 if (!HasInterpreterInfo()) return 0;; 4643 ; 4644 TList *lm = GetListOfMethods();; 4645 if (lm); 4646 return lm->GetSize();; 4647 else; 4648 return 0;; 4649}; 4650 ; 4651////////////////////////////////////////////////////////////////////////////////; 4652/// returns a pointer to the TVirtualStreamerInfo object for version; 4653/// If the object does not exist, it is created; 4654///; 4655/// Note: There are two special version numbers:; 4656///; 4657/// - 0: Use the class version from the currently loaded class library.; 4658/// - -1: Assume no class library loaded (emulated class).; 4659///; 4660/// Warning: If we create a new streamer info, whether or not the build; 4661/// optimizes is controlled externally to us by a global variable!; 4662/// Don't call us unless you have set that variable properly; 4663/// with TStreamer::Optimize()!; 4664///; 4665 ; 4666TVirtualStreamerInfo* TClass::GetStreamerInfo(Int_t version /* = 0 */, Bool_t isTransient /* = false */) const; 4667{; 4668 TVirtualStreamerInfo *sinfo = fLastReadInfo;; 4669 ; 4670 // Version 0 is special, it means the currently loaded version.; 4671 // We need to set it at the beginning to be able to guess it correctly.; 4672 ; 4673 if (version == 0); 4674 version = fClassVersion;; 4675 ; 4676 // If the StreamerInfo is assigned to the fLastReadInfo, we are; 4677 // guaranteed it was built and compiled.; 4678 if (sinfo && sinfo->GetClassVersion() == version); 4679 return sinfo;; 4680 ; 4681 // Note that the access to fClassVersion above is technically not thread-safe with a low probably of problems.; 4682 // fClassVersion is not an atomic and is modified TClass::SetClassVersion (called from RootClassVersion via; 4683 // ROOT::ResetClassVersion) and is 'somewhat' protected by the atomic fVersionUsed.; 4684 // However, direct access to fClassVersion should be replaced",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:176313,variab,variable,176313,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,2,['variab'],['variable']
Modifiability,"/// tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); 4133/// ~~~; 4134/// will not reset `hsqrt`, but will continue filling. This works for 1-D, 2-D; 4135/// and 3-D histograms.; 4136///; 4137/// ### Accessing collection objects; 4138///; 4139/// TTree::Draw default's handling of collections is to assume that any; 4140/// request on a collection pertain to it content. For example, if fTracks; 4141/// is a collection of Track objects, the following:; 4142/// ~~~ {.cpp}; 4143/// tree->Draw(""event.fTracks.fPx"");; 4144/// ~~~; 4145/// will plot the value of fPx for each Track objects inside the collection.; 4146/// Also; 4147/// ~~~ {.cpp}; 4148/// tree->Draw(""event.fTracks.size()"");; 4149/// ~~~; 4150/// would plot the result of the member function Track::size() for each; 4151/// Track object inside the collection.; 4152/// To access information about the collection itself, TTree::Draw support; 4153/// the '@' notation. If a variable which points to a collection is prefixed; 4154/// or postfixed with '@', the next part of the expression will pertain to; 4155/// the collection object. For example:; 4156/// ~~~ {.cpp}; 4157/// tree->Draw(""event.@fTracks.size()"");; 4158/// ~~~; 4159/// will plot the size of the collection referred to by `fTracks` (i.e the number; 4160/// of Track objects).; 4161///; 4162/// ### Drawing 'objects'; 4163///; 4164/// When a class has a member function named AsDouble or AsString, requesting; 4165/// to directly draw the object will imply a call to one of the 2 functions.; 4166/// If both AsDouble and AsString are present, AsDouble will be used.; 4167/// AsString can return either a char*, a std::string or a TString.s; 4168/// For example, the following; 4169/// ~~~ {.cpp}; 4170/// tree->Draw(""event.myTTimeStamp"");; 4171/// ~~~; 4172/// will draw the same histogram as; 4173/// ~~~ {.cpp}; 4174/// tree->Draw(""event.myTTimeStamp.AsDouble()"");; 4175/// ~~~; 4176/// In addition, when the object is a type TString or std::string, TTree::Draw; 4177/// will call res",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:166096,variab,variable,166096,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; 2896/// Utility function for plotOn() that constructs the set of; 2897/// observables to project when plotting ourselves as function of; 2898/// 'plotVar'. 'allVars' is the list of variables that must be; 2899/// projected, but may contain variables that we do not depend on. If; 2900/// 'silent' is cleared, warnings about inconsistent input parameters; 2901/// will be printed.; 2902 ; 2903void RooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars,; 2904 RooArgSet& projectedVars, bool silent) const; 2905{; 2906 cxcoutD(Plotting) << ""RooAbsReal::makeProjectionSet("" << GetName() << "") plotVar = "" << plotVar->GetName(); 2907 << "" allVars = "" << (allVars?(*allVars):RooArgSet()) << std::endl ;; 2908 ; 2909 projectedVars.removeAll() ;; 2910 if (!allVars) return ;; 2911 ; 2912 // Start out with suggested list of variables; 2913 projectedVars.add(*allVars) ;; 2914 ; 2915 // Take out plot variable; 2916 RooAbsArg *found= projectedVars.find(plotVar->GetName());; 2917 if(found) {; 2918 projectedVars.remove(*found);; 2919 ; 2920 // Take out eventual servers of plotVar; 2921 std::unique_ptr<RooArgSet> plotServers{plotVar->getObservables(&projectedVars)};; 2922 for(RooAbsArg * ps : *plotServers) {; 2923 RooAbsArg* tmp = projectedVars.find(ps->GetName()) ;; 2924 if (tmp) {; 2925 cxcoutD(Plotting) << ""RooAbsReal::makeProjectionSet("" << GetName() << "") removing "" << tmp->GetName(); 2926 << "" from projection set because it a server of "" << plotVar->GetName() << std::endl ;; 2927 projectedVars.remove(*tmp) ;; 2928 }; 2929 }; 2930 ; 2931 if (!silent) {; 2932 coutW(Plotting) << ""RooAbsReal::plotOn("" << GetName(); 2933 << "") WARNING: cannot project out frame variable (""; 2934 << found->GetName() << ""), ignoring"" << std::endl ;; 2935 }; 2936 }; 2937 ; 2938 // Take out all non-dependents of function; 2939 for(RooAbsArg * arg : *allVars) {; 2940 if (!dependsOnValue(*arg)) {; 2941 projec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:126981,variab,variable,126981,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"/////////////////////////////////////////////////////////////////////////////; 4692/// For the case where the requestor class is emulated and this class is abstract,; 4693/// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; 4694/// representation whether or not the class is loaded.; 4695///; 4696/// If the object does not exist, it is created; 4697///; 4698/// Note: There are two special version numbers:; 4699///; 4700/// - 0: Use the class version from the currently loaded class library.; 4701/// - -1: Assume no class library loaded (emulated class).; 4702///; 4703/// Warning: If we create a new streamer info, whether or not the build; 4704/// optimizes is controlled externally to us by a global variable!; 4705/// Don't call us unless you have set that variable properly; 4706/// with TStreamer::Optimize()!; 4707///; 4708 ; 4709TVirtualStreamerInfo* TClass::GetStreamerInfoAbstractEmulated(Int_t version /* = 0 */) const; 4710{; 4711 TVirtualStreamerInfo *sinfo = nullptr;; 4712 ; 4713 TString newname(GetName());; 4714 newname += ""@@emulated"";; 4715 ; 4716 R__LOCKGUARD(gInterpreterMutex);; 4717 ; 4718 TClass *emulated = TClass::GetClass(newname);; 4719 ; 4720 if (emulated); 4721 sinfo = emulated->GetStreamerInfo(version);; 4722 ; 4723 if (!sinfo) {; 4724 // The emulated version of the streamerInfo is explicitly requested and has; 4725 // not been built yet.; 4726 ; 4727 sinfo = (TVirtualStreamerInfo*) fStreamerInfo->At(version);; 4728 ; 4729 if (!sinfo && (version != fClassVersion)) {; 4730 // When the requested version does not exist we return; 4731 // the TVirtualStreamerInfo for the currently loaded class version.; 4732 // FIXME: This arguably makes no sense, we should warn and return nothing instead.; 4733 sinfo = (TVirtualStreamerInfo*) fStreamerInfo->At(fClassVersion);; 4734 }; 4735 ; 4736 if (!sinfo) {; 4737 // Let's take the first available StreamerInfo as a start; 4738 Int_t ninfos = fStreamerInfo->GetEntriesFast() - 1;; 4739 f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:178737,variab,variable,178737,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,2,['variab'],['variable']
Modifiability,"/////////////////////////////////////////////////////////////////////////////; 4759/// For the case where the requestor class is emulated and this class is abstract,; 4760/// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; 4761/// representation whether or not the class is loaded.; 4762///; 4763/// If the object does not exist, it is created; 4764///; 4765/// Note: There are two special version numbers:; 4766///; 4767/// - 0: Use the class version from the currently loaded class library.; 4768/// - -1: Assume no class library loaded (emulated class).; 4769///; 4770/// Warning: If we create a new streamer info, whether or not the build; 4771/// optimizes is controlled externally to us by a global variable!; 4772/// Don't call us unless you have set that variable properly; 4773/// with TStreamer::Optimize()!; 4774///; 4775 ; 4776TVirtualStreamerInfo* TClass::GetStreamerInfoAbstractEmulated(Int_t version /* = 0 */) const; 4777{; 4778 TVirtualStreamerInfo *sinfo = nullptr;; 4779 ; 4780 TString newname(GetName());; 4781 newname += ""@@emulated"";; 4782 ; 4783 R__LOCKGUARD(gInterpreterMutex);; 4784 ; 4785 TClass *emulated = TClass::GetClass(newname);; 4786 ; 4787 if (emulated); 4788 sinfo = emulated->GetStreamerInfo(version);; 4789 ; 4790 if (!sinfo) {; 4791 // The emulated version of the streamerInfo is explicitly requested and has; 4792 // not been built yet.; 4793 ; 4794 sinfo = (TVirtualStreamerInfo*) fStreamerInfo->At(version);; 4795 ; 4796 if (!sinfo && (version != fClassVersion)) {; 4797 // When the requested version does not exist we return; 4798 // the TVirtualStreamerInfo for the currently loaded class version.; 4799 // FIXME: This arguably makes no sense, we should warn and return nothing instead.; 4800 sinfo = (TVirtualStreamerInfo*) fStreamerInfo->At(fClassVersion);; 4801 }; 4802 ; 4803 if (!sinfo) {; 4804 // Let's take the first available StreamerInfo as a start; 4805 Int_t ninfos = fStreamerInfo->GetEntriesFast() - 1;; 4806 f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:181488,variab,variable,181488,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,2,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////////; 4366/// Remove the shared libs produced by the CompileMacro() function, together; 4367/// with their rootmaps, linkdefs, and pcms (and some more on Windows).; 4368 ; 4369void TSystem::CleanCompiledMacros(); 4370{; 4371 TIter next(fCompiled);; 4372 TNamed *lib;; 4373 const char *extensions[] = {"".lib"", "".exp"", "".d"", "".def"", "".rootmap"", ""_ACLiC_linkdef.h"", ""_ACLiC_dict_rdict.pcm""};; 4374 while ((lib = (TNamed*)next())) {; 4375 if (lib->TestBit(kMustCleanup)) {; 4376 TString libname = lib->GetTitle();; 4377#ifdef WIN32; 4378 // On Windows, we need to unload the dll before deleting it; 4379 if (gInterpreter->IsLibraryLoaded(libname)); 4380 ::FreeLibrary(::GetModuleHandle(libname));; 4381#endif; 4382 Unlink(libname);; 4383 TString target, soExt = ""."" + fSoExt;; 4384 libname.ReplaceAll(soExt, """");; 4385 for (const char *ext : extensions) {; 4386 target = libname + ext;; 4387 Unlink(target);; 4388 }; 4389 }; 4390 }; 4391}; 4392 ; 4393////////////////////////////////////////////////////////////////////////////////; 4394/// Register version of plugin library.; 4395 ; 4396TVersionCheck::TVersionCheck(int versionCode); 4397{; 4398 if (versionCode != TROOT::RootVersionCode() && gLibraryVersion); 4399 gLibraryVersion[gLibraryVersionIdx] = versionCode;; 4400}; FoundationUtils.hxxThe file contains utilities which are foundational and could be used across the core component of ROO...; SafeDelete#define SafeDelete(p)Definition RConfig.hxx:525; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; h#define h(i)Definition RSha256.hxx:106; e#define e(i)Definition RSha256.hxx:103; ROOT_RELEASE#define ROOT_RELEASEDefinition RVersion.hxx:29; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:150491,plugin,plugin,150491,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['plugin'],['plugin']
Modifiability,"///////////////////////////////////////////////////////////////////////////; 668/// It returns the error along Y at point `i`. For TGraphErrors this method is; 669/// the same as GetErrorY.; 670 ; 671Double_t TGraphErrors::GetErrorYlow(Int_t i) const; 672{; 673 if (i < 0 || i >= fNpoints) return -1;; 674 if (fEY) return fEY[i];; 675 return -1;; 676}; 677 ; 678////////////////////////////////////////////////////////////////////////////////; 679/// Adds all graphs with errors from the collection to this graph.; 680/// Returns the total number of points in the result or -1 in case of an error.; 681 ; 682Int_t TGraphErrors::Merge(TCollection* li); 683{; 684 TIter next(li);; 685 while (TObject* o = next()) {; 686 TGraph *g = dynamic_cast<TGraph*>(o);; 687 if (!g) {; 688 Error(""Merge"",; 689 ""Cannot merge - an object which doesn't inherit from TGraph found in the list"");; 690 return -1;; 691 }; 692 int n0 = GetN();; 693 int n1 = n0+g->GetN();; 694 Set(n1);; 695 Double_t * x = g->GetX();; 696 Double_t * y = g->GetY();; 697 Double_t * ex = g->GetEX();; 698 Double_t * ey = g->GetEY();; 699 for (Int_t i = 0 ; i < g->GetN(); i++) {; 700 SetPoint(n0+i, x[i], y[i]);; 701 if (ex) fEX[n0+i] = ex[i];; 702 if (ey) fEY[n0+i] = ey[i];; 703 }; 704 }; 705 return GetN();; 706}; 707 ; 708////////////////////////////////////////////////////////////////////////////////; 709/// Print graph and errors values.; 710 ; 711void TGraphErrors::Print(Option_t *) const; 712{; 713 for (Int_t i = 0; i < fNpoints; i++) {; 714 printf(""x[%d]=%g, y[%d]=%g, ex[%d]=%g, ey[%d]=%g\n"", i, fX[i], i, fY[i], i, fEX[i], i, fEY[i]);; 715 }; 716}; 717 ; 718 ; 719////////////////////////////////////////////////////////////////////////////////; 720/// Save primitive as a C++ statement(s) on output stream out; 721 ; 722void TGraphErrors::SavePrimitive(std::ostream &out, Option_t *option /*= """"*/); 723{; 724 out << "" "" << std::endl;; 725 static Int_t frameNumber = 1000;; 726 frameNumber++;; 727 ; 728 auto fXName = SaveArra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:22102,inherit,inherit,22102,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['inherit'],['inherit']
Modifiability,"/////////////////////////////////////////////////////////////////////////; 2661/// Set the given configuration as default numeric MC generator; 2662/// configuration for this object; 2663 ; 2664void RooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); 2665{; 2666 _specGeneratorConfig = std::make_unique<RooNumGenConfig>(config);; 2667}; 2668 ; 2669 ; 2670 ; 2671////////////////////////////////////////////////////////////////////////////////; 2672/// Remove the specialized numeric MC generator configuration associated; 2673/// with this object; 2674 ; 2675void RooAbsPdf::setGeneratorConfig(); 2676{; 2677 _specGeneratorConfig.reset();; 2678}; 2679 ; 2680RooAbsPdf::GenSpec::~GenSpec() = default;; 2681 ; 2682 ; 2683////////////////////////////////////////////////////////////////////////////////; 2684 ; 2685RooAbsPdf::GenSpec::GenSpec(RooAbsGenContext* context, const RooArgSet& whatVars, RooDataSet* protoData, Int_t nGen,; 2686 bool extended, bool randProto, bool resampleProto, TString dsetName, bool init) :; 2687 _genContext(context), _whatVars(whatVars), _protoData(protoData), _nGen(nGen), _extended(extended),; 2688 _randProto(randProto), _resampleProto(resampleProto), _dsetName(dsetName), _init(init); 2689{; 2690}; 2691 ; 2692 ; 2693namespace {; 2694 ; 2695void sterilizeClientCaches(RooAbsArg & arg) {; 2696 auto const& clients = arg.clients();; 2697 for(std::size_t iClient = 0; iClient < clients.size(); ++iClient) {; 2698 ; 2699 const std::size_t oldClientsSize = clients.size();; 2700 RooAbsArg* client = clients[iClient];; 2701 ; 2702 for(int iCache = 0; iCache < client->numCaches(); ++iCache) {; 2703 if(auto cacheMgr = dynamic_cast<RooObjCacheManager*>(client->getCache(iCache))) {; 2704 cacheMgr->sterilize();; 2705 }; 2706 }; 2707 ; 2708 // It can happen that the objects cached by the client are also clients of; 2709 // the arg itself! In that case, the position of the client in the client; 2710 // list might have changed, and we need to find the new index.; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:127894,extend,extended,127894,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,2,['extend'],['extended']
Modifiability,"///////////////////////////////////////////////////////////////////////; 1434/// Scan the memory lists of all files for an object with name; 1435 ; 1436TObject *TROOT::FindObjectAnyFile(const char *name) const; 1437{; 1438 R__LOCKGUARD(gROOTMutex);; 1439 TDirectory *d;; 1440 TIter next(GetListOfFiles());; 1441 while ((d = (TDirectory*)next())) {; 1442 // Call explicitly TDirectory::FindObject to restrict the search to the; 1443 // already in memory object.; 1444 TObject *obj = d->TDirectory::FindObject(name);; 1445 if (obj) return obj;; 1446 }; 1447 return nullptr;; 1448}; 1449 ; 1450////////////////////////////////////////////////////////////////////////////////; 1451/// Returns class name of a ROOT object including CINT globals.; 1452 ; 1453const char *TROOT::FindObjectClassName(const char *name) const; 1454{; 1455 // Search first in the list of ""standard"" objects; 1456 TObject *obj = FindObject(name);; 1457 if (obj) return obj->ClassName();; 1458 ; 1459 // Is it a global variable?; 1460 TGlobal *g = GetGlobal(name);; 1461 if (g) return g->GetTypeName();; 1462 ; 1463 return nullptr;; 1464}; 1465 ; 1466////////////////////////////////////////////////////////////////////////////////; 1467/// Return path name of obj somewhere in the //root/... path.; 1468/// The function returns the first occurence of the object in the list; 1469/// of folders. The returned string points to a static char array in TROOT.; 1470/// If this function is called in a loop or recursively, it is the; 1471/// user's responsibility to copy this string in their area.; 1472 ; 1473const char *TROOT::FindObjectPathName(const TObject *) const; 1474{; 1475 Error(""FindObjectPathName"",""Not yet implemented"");; 1476 return ""??"";; 1477}; 1478 ; 1479////////////////////////////////////////////////////////////////////////////////; 1480/// return a TClass object corresponding to 'name' assuming it is an STL container.; 1481/// In particular we looking for possible alternative name (default template; 1482/// ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:56201,variab,variable,56201,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////; 298/// Default destructor.; 299 ; 300TLegend::~TLegend(); 301{; 302 if (fPrimitives); 303 fPrimitives->Delete();; 304 delete fPrimitives;; 305 fPrimitives = nullptr;; 306}; 307 ; 308////////////////////////////////////////////////////////////////////////////////; 309/// Add a new entry to this legend. ""obj"" is the object to be represented.; 310/// ""label"" is the text you wish to associate with obj in the legend.; 311/// If ""label"" is null or empty, the title of the object will be used.; 312///; 313/// Options are:; 314///; 315/// - L: draw line associated with TAttLine if obj inherits from TAttLine; 316/// - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; 317/// - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; 318/// - E: draw vertical error bar if option ""L"" is also specified; 319 ; 320TLegendEntry *TLegend::AddEntry(const TObject *obj, const char *label, Option_t *option); 321{; 322 const char *lab = label;; 323 ; 324 if (obj && (!label || strlen(label)==0)) lab = obj->GetTitle();; 325 TLegendEntry *newentry = new TLegendEntry( obj, lab, option );; 326 if ( !fPrimitives ) fPrimitives = new TList;; 327 fPrimitives->Add(newentry);; 328 return newentry;; 329}; 330 ; 331////////////////////////////////////////////////////////////////////////////////; 332/// Add a new entry to this legend. ""name"" is the name of an object in the pad to; 333/// be represented label is the text you wish to associate with obj in the legend; 334/// if label is null or empty, the title of the object will be used.; 335///; 336/// Options are:; 337///; 338/// - L: draw line associated with TAttLine if obj inherits from TAttLine; 339/// - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; 340/// - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; 341/// - E: draw vertical error bar if option ""L"" is also specified; 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:11210,inherit,inherits,11210,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,3,['inherit'],['inherits']
Modifiability,"/////////////////////////////////////////////////////////////////////; 504/// Return hash value for this object.; 505///; 506/// Note: If this routine is overloaded in a derived class, this derived class; 507/// should also add; 508/// ~~~ {.cpp}; 509/// ROOT::CallRecursiveRemoveIfNeeded(*this); 510/// ~~~; 511/// Otherwise, when RecursiveRemove is called (by ~TObject or example) for this; 512/// type of object, the transversal of THashList and THashTable containers will; 513/// will have to be done without call Hash (and hence be linear rather than; 514/// logarithmic complexity). You will also see warnings like; 515/// ~~~; 516/// Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; 517/// ~~~; 518///; 519 ; 520ULong_t TObject::Hash() const; 521{; 522 //return (ULong_t) this >> 2;; 523 const void *ptr = this;; 524 return TString::Hash(&ptr, sizeof(void*));; 525}; 526 ; 527////////////////////////////////////////////////////////////////////////////////; 528/// Returns kTRUE if object inherits from class ""classname"".; 529 ; 530Bool_t TObject::InheritsFrom(const char *classname) const; 531{; 532 return IsA()->InheritsFrom(classname);; 533}; 534 ; 535////////////////////////////////////////////////////////////////////////////////; 536/// Returns kTRUE if object inherits from TClass cl.; 537 ; 538Bool_t TObject::InheritsFrom(const TClass *cl) const; 539{; 540 return IsA()->InheritsFrom(cl);; 541}; 542 ; 543////////////////////////////////////////////////////////////////////////////////; 544/// Dump contents of this object in a graphics canvas.; 545/// Same action as Dump but in a graphical form.; 546/// In addition pointers to other objects can be followed.; 547///; 548/// The following picture is the Inspect of a histogram object:; 549/// \image html base_inspect.png; 550 ; 551void TObject::Inspect() const; 552{; 553 gGuiFactory->Cr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:18612,inherit,inherits,18612,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////; 1924/// Create a new TTree Branch.; 1925///; 1926/// This Branch constructor is provided to support non-objects in; 1927/// a Tree. The variables described in leaflist may be simple; 1928/// variables or structures. // See the two following; 1929/// constructors for writing objects in a Tree.; 1930///; 1931/// By default the branch buffers are stored in the same file as the Tree.; 1932/// use TBranch::SetFile to specify a different file; 1933///; 1934/// * address is the address of the first item of a structure.; 1935/// * leaflist is the concatenation of all the variable names and types; 1936/// separated by a colon character :; 1937/// The variable name and the variable type are separated by a slash (/).; 1938/// The variable type may be 0,1 or 2 characters. If no type is given,; 1939/// the type of the variable is assumed to be the same as the previous; 1940/// variable. If the first variable does not have a type, it is assumed; 1941/// of type F by default. The list of currently supported types is given below:; 1942/// - `C` : a character string terminated by the 0 character; 1943/// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; 1944/// - `b` : an 8 bit unsigned integer (`UChar_t`); 1945/// - `S` : a 16 bit signed integer (`Short_t`); 1946/// - `s` : a 16 bit unsigned integer (`UShort_t`); 1947/// - `I` : a 32 bit signed integer (`Int_t`); 1948/// - `i` : a 32 bit unsigned integer (`UInt_t`); 1949/// - `F` : a 32 bit floating point (`Float_t`); 1950/// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); 1951/// - `D` : a 64 bit floating point (`Double_t`); 1952/// - `d` : a 24 bit truncated floating point (`Double32_t`); 1953/// - `L` : a 64 bit signed integer (`Long64_t`); 1954/// - `l` : a 64 bit unsigned integer (`ULong64_t`); 1955/// - `G` : a long signed integer, stored as 64 bit (`Long_t`); 1956/// - `g` : a long unsigned integer,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:75844,variab,variable,75844,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////; 18/** \class RooAbsPdf; 19 \ingroup Roofitcore; 20 \brief Abstract interface for all probability density functions.; 21 ; 22## RooAbsPdf, the base class of all PDFs; 23 ; 24RooAbsPdf is the base class for all probability density; 25functions (PDFs). The class provides hybrid analytical/numerical; 26normalization for its implementations, error tracing, and a Monte Carlo; 27generator interface.; 28 ; 29### A Minimal PDF Implementation; 30 ; 31A minimal implementation of a PDF class derived from RooAbsPdf; 32should override the `evaluate()` function. This function should; 33return the PDF's value (which does not need to be normalised).; 34 ; 35 ; 36#### Normalization/Integration; 37 ; 38Although the normalization of a PDF is an integral part of a; 39probability density function, normalization is treated separately; 40in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; 41PDF: it can be a building block for a more complex composite PDF; 42if any of its variables are functions instead of variables. In; 43such cases, the normalization of the composite PDF may not simply be; 44integral over the dependents of the top-level PDF: these are; 45functions with potentially non-trivial Jacobian terms themselves.; 46\note Therefore, no explicit attempt should be made to normalize the; 47function output in evaluate(). In particular, normalisation constants; 48can be omitted to speed up the function evaluations, and included later; 49in the integration of the PDF (see below), which is rarely called in; 50comparison to the `evaluate()` function.; 51 ; 52In addition, RooAbsPdf objects do not have a static concept of what; 53variables are parameters, and what variables are dependents (which; 54need to be integrated over for a correct PDF normalization).; 55Instead, the choice of normalization is always specified each time a; 56normalized value is requested from the PDF via the getVal(); 57method.; 58 ; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:1986,variab,variables,1986,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,2,['variab'],['variables']
Modifiability,"///////////////////////////////////////////////////////////////////; 2595/// Computes density function for Student's t- distribution; 2596/// (the probability function (integral of density) is computed in StudentI).; 2597///; 2598/// First parameter stands for x - the actual variable of the; 2599/// density function p(x) and the point at which the density is calculated.; 2600/// Second parameter stands for number of degrees of freedom.; 2601///; 2602/// About Student distribution:; 2603/// Student's t-distribution is used for many significance tests, for example,; 2604/// for the Student's t-tests for the statistical significance of difference; 2605/// between two sample means and for confidence intervals for the difference; 2606/// between two population means.; 2607///; 2608/// Example: suppose we have a random sample of size n drawn from normal; 2609/// distribution with mean Mu and st.deviation Sigma. Then the variable; 2610///; 2611/// t = (sample_mean - Mu)/(sample_deviation / sqrt(n)); 2612///; 2613/// has Student's t-distribution with n-1 degrees of freedom.; 2614///; 2615/// NOTE that this function's second argument is number of degrees of freedom,; 2616/// not the sample size.; 2617///; 2618/// As the number of degrees of freedom grows, t-distribution approaches; 2619/// Normal(0,1) distribution.; 2620///; 2621/// \author Anna Kreshuk; 2622 ; 2623Double_t TMath::Student(Double_t T, Double_t ndf); 2624{; 2625 if (ndf < 1) {; 2626 return 0;; 2627 }; 2628 ; 2629 Double_t r = ndf;; 2630 Double_t rh = 0.5*r;; 2631 Double_t rh1 = rh + 0.5;; 2632 Double_t denom = TMath::Sqrt(r*TMath::Pi())*TMath::Gamma(rh)*TMath::Power(1+T*T/r, rh1);; 2633 return TMath::Gamma(rh1)/denom;; 2634}; 2635 ; 2636////////////////////////////////////////////////////////////////////////////////; 2637/// Calculates the cumulative distribution function of Student's; 2638/// t-distribution second parameter stands for number of degrees of freedom,; 2639/// not for the number of samples; 2640/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:89546,variab,variable,89546,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////; 684/// Constructor for fix bin size histograms.; 685/// Creates the main histogram structure.; 686///; 687/// \param[in] name name of histogram (avoid blanks); 688/// \param[in] title histogram title.; 689/// If title is of the form `stringt;stringx;stringy;stringz`,; 690/// the histogram title is set to `stringt`,; 691/// the x axis title to `stringx`, the y axis title to `stringy`, etc.; 692/// \param[in] nbins number of bins; 693/// \param[in] xlow low edge of first bin; 694/// \param[in] xup upper edge of last bin (not included in last bin); 695 ; 696 ; 697TH1::TH1(const char *name,const char *title,Int_t nbins,Double_t xlow,Double_t xup); 698 :TNamed(name,title); 699{; 700 Build();; 701 if (nbins <= 0) {Warning(""TH1"",""nbins is <=0 - set to nbins = 1""); nbins = 1; }; 702 fXaxis.Set(nbins,xlow,xup);; 703 fNcells = fXaxis.GetNbins()+2;; 704}; 705 ; 706////////////////////////////////////////////////////////////////////////////////; 707/// Constructor for variable bin size histograms using an input array of type float.; 708/// Creates the main histogram structure.; 709///; 710/// \param[in] name name of histogram (avoid blanks); 711/// \param[in] title histogram title.; 712/// If title is of the form `stringt;stringx;stringy;stringz`; 713/// the histogram title is set to `stringt`,; 714/// the x axis title to `stringx`, the y axis title to `stringy`, etc.; 715/// \param[in] nbins number of bins; 716/// \param[in] xbins array of low-edges for each bin.; 717/// This is an array of type float and size nbins+1; 718 ; 719TH1::TH1(const char *name,const char *title,Int_t nbins,const Float_t *xbins); 720 :TNamed(name,title); 721{; 722 Build();; 723 if (nbins <= 0) {Warning(""TH1"",""nbins is <=0 - set to nbins = 1""); nbins = 1; }; 724 if (xbins) fXaxis.Set(nbins,xbins);; 725 else fXaxis.Set(nbins,0,1);; 726 fNcells = fXaxis.GetNbins()+2;; 727}; 728 ; 729///////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:29256,variab,variable,29256,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////; 10221/// Constructor.; 10222 ; 10223TH1F::TH1F(); 10224{; 10225 fDimension = 1;; 10226 SetBinsLength(3);; 10227 if (fgDefaultSumw2) Sumw2();; 10228}; 10229 ; 10230////////////////////////////////////////////////////////////////////////////////; 10231/// Create a 1-Dim histogram with fix bins of type float; 10232/// (see TH1::TH1 for explanation of parameters); 10233 ; 10234TH1F::TH1F(const char *name,const char *title,Int_t nbins,Double_t xlow,Double_t xup); 10235: TH1(name,title,nbins,xlow,xup); 10236{; 10237 fDimension = 1;; 10238 TArrayF::Set(fNcells);; 10239 ; 10240 if (xlow >= xup) SetBuffer(fgBufferSize);; 10241 if (fgDefaultSumw2) Sumw2();; 10242}; 10243 ; 10244////////////////////////////////////////////////////////////////////////////////; 10245/// Create a 1-Dim histogram with variable bins of type float; 10246/// (see TH1::TH1 for explanation of parameters); 10247 ; 10248TH1F::TH1F(const char *name,const char *title,Int_t nbins,const Float_t *xbins); 10249: TH1(name,title,nbins,xbins); 10250{; 10251 fDimension = 1;; 10252 TArrayF::Set(fNcells);; 10253 if (fgDefaultSumw2) Sumw2();; 10254}; 10255 ; 10256////////////////////////////////////////////////////////////////////////////////; 10257/// Create a 1-Dim histogram with variable bins of type float; 10258/// (see TH1::TH1 for explanation of parameters); 10259 ; 10260TH1F::TH1F(const char *name,const char *title,Int_t nbins,const Double_t *xbins); 10261: TH1(name,title,nbins,xbins); 10262{; 10263 fDimension = 1;; 10264 TArrayF::Set(fNcells);; 10265 if (fgDefaultSumw2) Sumw2();; 10266}; 10267 ; 10268////////////////////////////////////////////////////////////////////////////////; 10269/// Create a histogram from a TVectorF; 10270/// by default the histogram name is ""TVectorF"" and title = """"; 10271 ; 10272TH1F::TH1F(const TVectorF &v); 10273: TH1(""TVectorF"","""",v.GetNrows(),0,v.GetNrows()); 10274{; 10275 TArrayF::Set(fNcells);; 10276 fDimension = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:393438,variab,variable,393438,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////; 1425 /// \brief Save selected columns in memory.; 1426 /// \tparam ColumnTypes variadic list of branch/column types.; 1427 /// \param[in] columnList columns to be cached in memory.; 1428 /// \return a `RDataFrame` that wraps the cached dataset.; 1429 ///; 1430 /// This action returns a new `RDataFrame` object, completely detached from; 1431 /// the originating `RDataFrame`. The new dataframe only contains the cached; 1432 /// columns and stores their content in memory for fast, zero-copy subsequent access.; 1433 ///; 1434 /// Use `Cache` if you know you will only need a subset of the (`Filter`ed) data that; 1435 /// fits in memory and that will be accessed many times.; 1436 ///; 1437 /// \note Cache will refuse to process columns with names of the form `#columnname`. These are special columns; 1438 /// made available by some data sources (e.g. RNTupleDS) that represent the size of column `columnname`, and are; 1439 /// not meant to be written out with that name (which is not a valid C++ variable name). Instead, go through an; 1440 /// Alias(): `df.Alias(""nbar"", ""#bar"").Cache<std::size_t>(..., {""nbar""})`.; 1441 ///; 1442 /// ### Example usage:; 1443 ///; 1444 /// **Types and columns specified:**; 1445 /// ~~~{.cpp}; 1446 /// auto cache_some_cols_df = df.Cache<double, MyClass, int>({""col0"", ""col1"", ""col2""});; 1447 /// ~~~; 1448 ///; 1449 /// **Types inferred and columns specified (this invocation relies on jitting):**; 1450 /// ~~~{.cpp}; 1451 /// auto cache_some_cols_df = df.Cache({""col0"", ""col1"", ""col2""});; 1452 /// ~~~; 1453 ///; 1454 /// **Types inferred and columns selected with a regexp (this invocation relies on jitting):**; 1455 /// ~~~{.cpp}; 1456 /// auto cache_all_cols_df = df.Cache(myRegexp);; 1457 /// ~~~; 1458 template <typename... ColumnTypes>; 1459 RInterface<RLoopManager> Cache(const ColumnNames_t &columnList); 1460 {; 1461 auto staticSeq = std::make_index_sequence<sizeof...(ColumnTypes)>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:80601,variab,variable,80601,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,"/////////////////////////////////////////////////////////////; 10402/// Constructor.; 10403 ; 10404TH1D::TH1D(); 10405{; 10406 fDimension = 1;; 10407 SetBinsLength(3);; 10408 if (fgDefaultSumw2) Sumw2();; 10409}; 10410 ; 10411////////////////////////////////////////////////////////////////////////////////; 10412/// Create a 1-Dim histogram with fix bins of type double; 10413/// (see TH1::TH1 for explanation of parameters); 10414 ; 10415TH1D::TH1D(const char *name,const char *title,Int_t nbins,Double_t xlow,Double_t xup); 10416: TH1(name,title,nbins,xlow,xup); 10417{; 10418 fDimension = 1;; 10419 TArrayD::Set(fNcells);; 10420 ; 10421 if (xlow >= xup) SetBuffer(fgBufferSize);; 10422 if (fgDefaultSumw2) Sumw2();; 10423}; 10424 ; 10425////////////////////////////////////////////////////////////////////////////////; 10426/// Create a 1-Dim histogram with variable bins of type double; 10427/// (see TH1::TH1 for explanation of parameters); 10428 ; 10429TH1D::TH1D(const char *name,const char *title,Int_t nbins,const Float_t *xbins); 10430: TH1(name,title,nbins,xbins); 10431{; 10432 fDimension = 1;; 10433 TArrayD::Set(fNcells);; 10434 if (fgDefaultSumw2) Sumw2();; 10435}; 10436 ; 10437////////////////////////////////////////////////////////////////////////////////; 10438/// Create a 1-Dim histogram with variable bins of type double; 10439/// (see TH1::TH1 for explanation of parameters); 10440 ; 10441TH1D::TH1D(const char *name,const char *title,Int_t nbins,const Double_t *xbins); 10442: TH1(name,title,nbins,xbins); 10443{; 10444 fDimension = 1;; 10445 TArrayD::Set(fNcells);; 10446 if (fgDefaultSumw2) Sumw2();; 10447}; 10448 ; 10449////////////////////////////////////////////////////////////////////////////////; 10450/// Create a histogram from a TVectorD; 10451/// by default the histogram name is ""TVectorD"" and title = """"; 10452 ; 10453TH1D::TH1D(const TVectorD &v); 10454: TH1(""TVectorD"","""",v.GetNrows(),0,v.GetNrows()); 10455{; 10456 TArrayD::Set(fNcells);; 10457 fDimension =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:399035,variab,variable,399035,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////; 387/// Allow geting the tree from the context menu.; 388 ; 389void TTreeViewer::AppendTree(TTree *tree); 390{; 391 if (!tree) return;; 392 TTree *ftree;; 393 if (fTreeList) {; 394 if (fTreeList->FindObject(tree)) {; 395 printf(""Tree found\n"");; 396 TIter next(fTreeList);; 397 Int_t index = 0;; 398 while ((ftree = (TTree*)next())) {; 399 if (ftree==tree) {printf(""found at index %i\n"", index);break;}; 400 index++;; 401 }; 402 SwitchTree(index);; 403 if (fTree != fMappedTree) {; 404 // switch also the global ""tree"" variable; 405 fLVContainer->RemoveNonStatic();; 406 // map it on the right panel; 407 MapTree(fTree);; 408 fListView->Layout();; 409 TGListTreeItem *base = nullptr;; 410 TGListTreeItem *parent = fLt->FindChildByName(base, ""TreeList"");; 411 TGListTreeItem *item = fLt->FindChildByName(parent, fTree->GetName());; 412 fLt->ClearHighlighted();; 413 fLt->HighlightItem(item);; 414 fClient->NeedRedraw(fLt);; 415 }; 416 return;; 417 }; 418 }; 419 if (fTree != tree) {; 420 fTree = tree;; 421 // load the tree via the interpreter; 422 char command[100];; 423 command[0] = 0;; 424 // define a global ""tree"" variable for the same tree; 425 snprintf(command,100, ""tv__tree = (TTree *)0x%zx;"", (size_t)tree);; 426 ExecuteCommand(command);; 427 }; 428 //--- add the tree to the list if it is not already in; 429 if (fTreeList) fTreeList->Add(fTree);; 430 ExecuteCommand(""tv__tree_list->Add(tv__tree);"");; 431 //--- map this tree; 432 TGListTreeItem *base = nullptr;; 433 TGListTreeItem *parent = fLt->FindChildByName(base, ""TreeList"");; 434 if (!parent) parent = fLt->AddItem(base, ""TreeList"", new ULong_t(kLTNoType));; 435 ULong_t *itemType = new ULong_t((fTreeIndex << 8) | kLTTreeType);; 436 fTreeIndex++;; 437 TGListTreeItem *lTreeItem = fLt->AddItem(parent, tree->GetName(), itemType,; 438 gClient->GetPicture(""tree_t.xpm""), gClient->GetPicture(""tree_t.xpm""));; 439 MapTree(fTree, lTreeItem, false);; 440 fLt->OpenItem(parent);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8cxx_source.html:14870,variab,variable,14870,doc/master/TTreeViewer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8cxx_source.html,2,['variab'],['variable']
Modifiability,"/////////////////////////////////////////////////////////; 497/// Create an object that represents the integral of the function over one or more observables listed in `iset`.; 498/// The actual integration calculation is only performed when the returned object is evaluated. The name; 499/// of the integral object is automatically constructed from the name of the input function, the variables; 500/// it integrates and the range integrates over.; 501///; 502/// \note The integral over a PDF is usually not normalised (*i.e.*, it is usually not; 503/// 1 when integrating the PDF over the full range). In fact, this integral is used *to compute*; 504/// the normalisation of each PDF. See the [rf110 tutorial](group__tutorial__roofit.html); 505/// for details on PDF normalisation.; 506///; 507/// The following named arguments are accepted; 508/// | | Effect on integral creation; 509/// |--|-------------------------------; 510/// | `NormSet(const RooArgSet&)` | Specify normalization set, mostly useful when working with PDFs; 511/// | `NumIntConfig(const RooNumIntConfig&)` | Use given configuration for any numeric integration, if necessary; 512/// | `Range(const char* name)` | Integrate only over given range. Multiple ranges may be specified by passing multiple Range() arguments; 513 ; 514RooFit::OwningPtr<RooAbsReal> RooAbsReal::createIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2,; 515 const RooCmdArg& arg3, const RooCmdArg& arg4, const RooCmdArg& arg5,; 516 const RooCmdArg& arg6, const RooCmdArg& arg7, const RooCmdArg& arg8) const; 517{; 518 // Define configuration for this method; 519 RooCmdConfig pc(""RooAbsReal::createIntegral("" + std::string(GetName()) + "")"");; 520 pc.defineString(""rangeName"",""RangeWithName"",0,"""",true) ;; 521 pc.defineSet(""normSet"",""NormSet"",0,nullptr) ;; 522 pc.defineObject(""numIntConfig"",""NumIntConfig"",0,nullptr) ;; 523 ; 524 // Process & check varargs; 525 pc.process(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8) ;; 526 if (!pc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:18203,config,configuration,18203,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"/////////////////////////////////////////////////////////; 6636/// Returns true if all axes are extendable.; 6637 ; 6638Bool_t TH1::CanExtendAllAxes() const; 6639{; 6640 Bool_t canExtend = fXaxis.CanExtend();; 6641 if (GetDimension() > 1) canExtend &= fYaxis.CanExtend();; 6642 if (GetDimension() > 2) canExtend &= fZaxis.CanExtend();; 6643 ; 6644 return canExtend;; 6645}; 6646 ; 6647////////////////////////////////////////////////////////////////////////////////; 6648/// Make the histogram axes extendable / not extendable according to the bit mask; 6649/// returns the previous bit mask specifying which axes are extendable; 6650 ; 6651UInt_t TH1::SetCanExtend(UInt_t extendBitMask); 6652{; 6653 UInt_t oldExtendBitMask = kNoAxis;; 6654 ; 6655 if (fXaxis.CanExtend()) oldExtendBitMask |= kXaxis;; 6656 if (extendBitMask & kXaxis) fXaxis.SetCanExtend(kTRUE);; 6657 else fXaxis.SetCanExtend(kFALSE);; 6658 ; 6659 if (GetDimension() > 1) {; 6660 if (fYaxis.CanExtend()) oldExtendBitMask |= kYaxis;; 6661 if (extendBitMask & kYaxis) fYaxis.SetCanExtend(kTRUE);; 6662 else fYaxis.SetCanExtend(kFALSE);; 6663 }; 6664 ; 6665 if (GetDimension() > 2) {; 6666 if (fZaxis.CanExtend()) oldExtendBitMask |= kZaxis;; 6667 if (extendBitMask & kZaxis) fZaxis.SetCanExtend(kTRUE);; 6668 else fZaxis.SetCanExtend(kFALSE);; 6669 }; 6670 ; 6671 return oldExtendBitMask;; 6672}; 6673 ; 6674///////////////////////////////////////////////////////////////////////////////; 6675/// Internal function used in TH1::Fill to see which axis is full alphanumeric,; 6676/// i.e. can be extended and is alphanumeric; 6677UInt_t TH1::GetAxisLabelStatus() const; 6678{; 6679 UInt_t bitMask = kNoAxis;; 6680 if (fXaxis.CanExtend() && fXaxis.IsAlphanumeric() ) bitMask |= kXaxis;; 6681 if (GetDimension() > 1 && fYaxis.CanExtend() && fYaxis.IsAlphanumeric()); 6682 bitMask |= kYaxis;; 6683 if (GetDimension() > 2 && fZaxis.CanExtend() && fZaxis.IsAlphanumeric()); 6684 bitMask |= kZaxis;; 6685 ; 6686 return bitMask;; 6687}; 6688 ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:262394,extend,extendBitMask,262394,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extendBitMask']
Modifiability,"////////////////////////////////////////////////////////; 4501/// Transforms from internal coordinates (PINT) to external (U); 4502///; 4503/// The minimising routines which work in; 4504/// internal coordinates call this routine before calling FCN.; 4505 ; 4506void TMinuit::mninex(Double_t *pint); 4507{; 4508 Int_t i, j;; 4509 ; 4510 for (j = 0; j < fNpar; ++j) {; 4511 i = fNexofi[j]-1;; 4512 if (fNvarl[i] == 1) {; 4513 fU[i] = pint[j];; 4514 } else {; 4515 fU[i] = fAlim[i] + (TMath::Sin(pint[j]) + 1)*.5*(fBlim[i] - fAlim[i]);; 4516 }; 4517 }; 4518}; 4519 ; 4520////////////////////////////////////////////////////////////////////////////////; 4521/// Main initialization member function for MINUIT; 4522///; 4523/// It initializes some constants; 4524/// (including the logical I/O unit nos.),; 4525 ; 4526void TMinuit::mninit(Int_t i1, Int_t i2, Int_t i3); 4527{; 4528 /* Local variables */; 4529 volatile Double_t epsp1;; 4530 Double_t piby2, epstry, epsbak, distnn;; 4531 Int_t i, idb;; 4532 ; 4533// I/O unit numbers; 4534 fIsysrd = i1;; 4535 fIsyswr = i2;; 4536 fIstkwr[0] = fIsyswr;; 4537 fNstkwr = 1;; 4538 fIsyssa = i3;; 4539 fNstkrd = 0;; 4540// version identifier; 4541 fCvrsn = ""95.03++ "";; 4542// some CONSTANT; 4543 fMaxint = fMaxpar;; 4544 fMaxext = 2*fMaxpar;; 4545 fUndefi = -54321;; 4546 fBigedm = 123456;; 4547 fCundef = "")UNDEFINED"";; 4548 fCovmes[0] = ""NO ERROR MATRIX "";; 4549 fCovmes[1] = ""ERR MATRIX APPROXIMATE"";; 4550 fCovmes[2] = ""ERR MATRIX NOT POS-DEF"";; 4551 fCovmes[3] = ""ERROR MATRIX ACCURATE "";; 4552// some starting values; 4553 fNblock = 0;; 4554 fIcomnd = 0;; 4555 fCtitl = fCundef;; 4556 fCfrom = ""INPUT "";; 4557 fNfcn = 0;; 4558 fNfcnfr = fNfcn;; 4559 fCstatu = ""INITIALIZE"";; 4560 fISW[2] = 0;; 4561 fISW[3] = 0;; 4562 fISW[4] = 1;; 4563// fISW[5]=0 for batch jobs, =1 for interactive jobs; 4564// =-1 for originally interactive temporarily batch; 4565 ; 4566 fISW[5] = 0;; 4567// if (intrac(&dummy)) fISW[5] = 1;; 4568// DEBUG options set to default val",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:150765,variab,variables,150765,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"///////////////////////////////////////////////////////; 106/// Print the TFitResultPtr by printing its TFitResult.; 107 ; 108std::string cling::printValue(const TFitResultPtr* val) {; 109 if (TFitResult* fr = val->Get()); 110 return printValue(fr);; 111 return ""<nullptr TFitResult>"";; 112}; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TError.h; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; TFitResultPtr.h; TFitResult.h; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TFitResultPtrProvides an indirection to the TFitResult class and with a semantics identical to a TFitResult pointe...Definition TFitResultPtr.h:32; TFitResultPtr::~TFitResultPtrvirtual ~TFitResultPtr()Destructor.Definition TFitResultPtr.cxx:55; TFitResultPtr::GetTFitResult * Get() constReturn contained pointer.Definition TFitResultPtr.cxx:86; TFitResultPtr::fPointerstd::shared_ptr< TFitResult > fPointer! Smart Pointer to TFitResult classDefinition TFitResultPtr.h:58; TFitResultPtr::fStatusint fStatusfit status codeDefinition TFitResultPtr.h:57; TFitResultPtr::operator*TFitResult & operator*() constImplement the de-reference operator to make the class acts as a pointer to a TFitResult assert in cas...Definition TFitResultPtr.cxx:63; TFitResultPtr::operator->TFitResult * operator->() constImplement the -> operator to make the class acts as a pointer to a TFitResult.Definition TFitResultPtr.cxx:75; TFitResultPtr::operator=TFitResultPtr & operator=(const TFitResultPtr &rhs)Assignment operator.Definition TFitResultPtr.cxx:94; TFitResultPtr::TFitResultPtrTFitResultPtr(int status=-1)Definition TFitResultPtr.h:35; TFitResultExtends the ROOT::Fit::Result class with a TNamed inheritance providing easy possibility for I/O.Definition TFitResult.h:34. histhistsrcTFitResultPtr.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResultPtr_8cxx_source.html:5573,inherit,inheritance,5573,doc/master/TFitResultPtr_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFitResultPtr_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"/////////////////////////////////////////////////////; 792/// Initialize axis with fix bins; 793 ; 794void TAxis::Set(Int_t nbins, Double_t xlow, Double_t xup); 795{; 796 fNbins = nbins;; 797 fXmin = xlow;; 798 fXmax = xup;; 799 if (!fParent) SetDefaults();; 800 if (fXbins.fN > 0) fXbins.Set(0);; 801}; 802 ; 803////////////////////////////////////////////////////////////////////////////////; 804/// Initialize axis with variable bins; 805 ; 806void TAxis::Set(Int_t nbins, const Float_t *xbins); 807{; 808 Int_t bin;; 809 fNbins = nbins;; 810 fXbins.Set(fNbins+1);; 811 for (bin=0; bin<= fNbins; bin++); 812 fXbins.fArray[bin] = xbins[bin];; 813 for (bin=1; bin<= fNbins; bin++); 814 if (fXbins.fArray[bin] < fXbins.fArray[bin-1]); 815 Error(""TAxis::Set"", ""bins must be in increasing order"");; 816 fXmin = fXbins.fArray[0];; 817 fXmax = fXbins.fArray[fNbins];; 818 if (!fParent) SetDefaults();; 819}; 820 ; 821////////////////////////////////////////////////////////////////////////////////; 822/// Initialize axis with variable bins; 823 ; 824void TAxis::Set(Int_t nbins, const Double_t *xbins); 825{; 826 Int_t bin;; 827 fNbins = nbins;; 828 fXbins.Set(fNbins+1);; 829 for (bin=0; bin<= fNbins; bin++); 830 fXbins.fArray[bin] = xbins[bin];; 831 for (bin=1; bin<= fNbins; bin++); 832 if (fXbins.fArray[bin] < fXbins.fArray[bin-1]); 833 Error(""TAxis::Set"", ""bins must be in increasing order"");; 834 fXmin = fXbins.fArray[0];; 835 fXmax = fXbins.fArray[fNbins];; 836 if (!fParent) SetDefaults();; 837}; 838 ; 839////////////////////////////////////////////////////////////////////////////////; 840/// Set axis alphanumeric; 841 ; 842void TAxis::SetAlphanumeric(Bool_t alphanumeric); 843{; 844 if (alphanumeric) fBits2 |= kAlphanumeric;; 845 else fBits2 &= ~kAlphanumeric;; 846 ; 847 // clear underflow and overflow (in an alphanumeric situation they do not make sense); 848 // NOTE: using AddBinContent instead of SetBinContent in order to not change; 849 // the number of entries; 850 //((TH1 *)fPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:27379,variab,variable,27379,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////; 4047/// Destructor.; 4048 ; 4049TH3I::~TH3I(); 4050{; 4051}; 4052 ; 4053 ; 4054////////////////////////////////////////////////////////////////////////////////; 4055/// Constructor for fix bin size 3-D histograms; 4056/// (see TH3::TH3 for explanation of parameters); 4057 ; 4058TH3I::TH3I(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 4059 ,Int_t nbinsy,Double_t ylow,Double_t yup; 4060 ,Int_t nbinsz,Double_t zlow,Double_t zup); 4061 :TH3(name,title,nbinsx,xlow,xup,nbinsy,ylow,yup,nbinsz,zlow,zup); 4062{; 4063 TH3I::Set(fNcells);; 4064 if (fgDefaultSumw2) Sumw2();; 4065 ; 4066 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 4067}; 4068 ; 4069 ; 4070////////////////////////////////////////////////////////////////////////////////; 4071/// Constructor for variable bin size 3-D histograms; 4072/// (see TH3::TH3 for explanation of parameters); 4073 ; 4074TH3I::TH3I(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 4075 ,Int_t nbinsy,const Float_t *ybins; 4076 ,Int_t nbinsz,const Float_t *zbins); 4077 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4078{; 4079 TArrayI::Set(fNcells);; 4080 if (fgDefaultSumw2) Sumw2();; 4081}; 4082 ; 4083 ; 4084////////////////////////////////////////////////////////////////////////////////; 4085/// Constructor for variable bin size 3-D histograms; 4086/// (see TH3::TH3 for explanation of parameters); 4087 ; 4088TH3I::TH3I(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 4089 ,Int_t nbinsy,const Double_t *ybins; 4090 ,Int_t nbinsz,const Double_t *zbins); 4091 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4092{; 4093 TArrayI::Set(fNcells);; 4094 if (fgDefaultSumw2) Sumw2();; 4095}; 4096 ; 4097 ; 4098////////////////////////////////////////////////////////////////////////////////; 4099/// Copy constructor.; 4100/// The list of functions is not copied. (Use Clone() if needed); 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:155235,variab,variable,155235,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,2,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////; 538/// Specify the path for this node.; 539 ; 540Bool_t TGeoPhysicalNode::SetPath(const char *path); 541{; 542 if (!gGeoManager->cd(path)) {; 543 Error(""SetPath"", ""wrong path -> maybe RestoreMasterVolume"");; 544 return kFALSE;; 545 }; 546 SetBranchAsState();; 547 return kTRUE;; 548}; 549 ; 550////////////////////////////////////////////////////////////////////////////////; 551/// Checks if a given navigator state matches this physical node; 552 ; 553Bool_t TGeoPhysicalNode::IsMatchingState(TGeoNavigator *nav) const; 554{; 555 TGeoNodeCache *cache = nav->GetCache();; 556 if (!cache) {; 557 Fatal(""SetBranchAsState"", ""no state available"");; 558 return kFALSE;; 559 }; 560 // the first condition is that the levels of navigator and this physical node must match; 561 if (cache->GetLevel() != fLevel) {; 562 return kFALSE;; 563 }; 564 // now we compare the nodes at each level; 565 // starting backwards since that enhances the probability of an early return; 566 TGeoNode **branch = (TGeoNode **)cache->GetBranch();; 567 for (Int_t i = fLevel; i >= 1; --i); 568 if (fNodes->At(i) != branch[i]); 569 return kFALSE;; 570 return kTRUE;; 571}; 572 ; 573ClassImp(TGeoPNEntry);; 574 ; 575////////////////////////////////////////////////////////////////////////////////; 576/// Default constructor; 577 ; 578TGeoPNEntry::TGeoPNEntry(); 579{; 580 fNode = nullptr;; 581 fMatrix = nullptr;; 582 fGlobalOrig = nullptr;; 583}; 584 ; 585////////////////////////////////////////////////////////////////////////////////; 586/// Default constructor; 587 ; 588TGeoPNEntry::TGeoPNEntry(const char *name, const char *path) : TNamed(name, path); 589{; 590 if (!gGeoManager || !gGeoManager->IsClosed() || !gGeoManager->CheckPath(path)) {; 591 TString errmsg(""Cannot define a physical node link without a closed geometry and a valid path !"");; 592 Error(""ctor"", ""%s"", errmsg.Data());; 593 throw errmsg;; 594 return;; 595 }; 596 gGeoManager->PushPath();; 597 gGeoMana",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html:19059,enhance,enhances,19059,doc/master/TGeoPhysicalNode_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html,1,['enhance'],['enhances']
Modifiability,"//////////////////////////////////////////////////; 4254/// Destructor.; 4255 ; 4256TH3L::~TH3L(); 4257{; 4258}; 4259 ; 4260 ; 4261////////////////////////////////////////////////////////////////////////////////; 4262/// Constructor for fix bin size 3-D histograms; 4263/// (see TH3::TH3 for explanation of parameters); 4264 ; 4265TH3L::TH3L(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 4266 ,Int_t nbinsy,Double_t ylow,Double_t yup; 4267 ,Int_t nbinsz,Double_t zlow,Double_t zup); 4268 :TH3(name,title,nbinsx,xlow,xup,nbinsy,ylow,yup,nbinsz,zlow,zup); 4269{; 4270 TH3L::Set(fNcells);; 4271 if (fgDefaultSumw2) Sumw2();; 4272 ; 4273 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 4274}; 4275 ; 4276 ; 4277////////////////////////////////////////////////////////////////////////////////; 4278/// Constructor for variable bin size 3-D histograms; 4279/// (see TH3::TH3 for explanation of parameters); 4280 ; 4281TH3L::TH3L(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 4282 ,Int_t nbinsy,const Float_t *ybins; 4283 ,Int_t nbinsz,const Float_t *zbins); 4284 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4285{; 4286 TArrayL64::Set(fNcells);; 4287 if (fgDefaultSumw2) Sumw2();; 4288}; 4289 ; 4290 ; 4291////////////////////////////////////////////////////////////////////////////////; 4292/// Constructor for variable bin size 3-D histograms; 4293/// (see TH3::TH3 for explanation of parameters); 4294 ; 4295TH3L::TH3L(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 4296 ,Int_t nbinsy,const Double_t *ybins; 4297 ,Int_t nbinsz,const Double_t *zbins); 4298 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4299{; 4300 TArrayL64::Set(fNcells);; 4301 if (fgDefaultSumw2) Sumw2();; 4302}; 4303 ; 4304 ; 4305////////////////////////////////////////////////////////////////////////////////; 4306/// Copy constructor.; 4307/// The list of functions is not copied. (Use Clone() if needed);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:161507,variab,variable,161507,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,2,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////; 4461/// Destructor.; 4462 ; 4463TH3F::~TH3F(); 4464{; 4465}; 4466 ; 4467 ; 4468////////////////////////////////////////////////////////////////////////////////; 4469/// Constructor for fix bin size 3-D histograms; 4470/// (see TH3::TH3 for explanation of parameters); 4471 ; 4472TH3F::TH3F(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 4473 ,Int_t nbinsy,Double_t ylow,Double_t yup; 4474 ,Int_t nbinsz,Double_t zlow,Double_t zup); 4475 :TH3(name,title,nbinsx,xlow,xup,nbinsy,ylow,yup,nbinsz,zlow,zup); 4476{; 4477 TArrayF::Set(fNcells);; 4478 if (fgDefaultSumw2) Sumw2();; 4479 ; 4480 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 4481}; 4482 ; 4483 ; 4484////////////////////////////////////////////////////////////////////////////////; 4485/// Constructor for variable bin size 3-D histograms; 4486/// (see TH3::TH3 for explanation of parameters); 4487 ; 4488TH3F::TH3F(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 4489 ,Int_t nbinsy,const Float_t *ybins; 4490 ,Int_t nbinsz,const Float_t *zbins); 4491 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4492{; 4493 TArrayF::Set(fNcells);; 4494 if (fgDefaultSumw2) Sumw2();; 4495}; 4496 ; 4497 ; 4498////////////////////////////////////////////////////////////////////////////////; 4499/// Constructor for variable bin size 3-D histograms; 4500/// (see TH3::TH3 for explanation of parameters); 4501 ; 4502TH3F::TH3F(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 4503 ,Int_t nbinsy,const Double_t *ybins; 4504 ,Int_t nbinsz,const Double_t *zbins); 4505 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4506{; 4507 TArrayF::Set(fNcells);; 4508 if (fgDefaultSumw2) Sumw2();; 4509}; 4510 ; 4511 ; 4512////////////////////////////////////////////////////////////////////////////////; 4513/// Copy constructor.; 4514/// The list of functions is not copied. (Use Clone() if needed);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:167867,variab,variable,167867,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,2,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////; 4677/// Destructor.; 4678 ; 4679TH3D::~TH3D(); 4680{; 4681}; 4682 ; 4683 ; 4684////////////////////////////////////////////////////////////////////////////////; 4685/// Constructor for fix bin size 3-D histograms; 4686/// (see TH3::TH3 for explanation of parameters); 4687 ; 4688TH3D::TH3D(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 4689 ,Int_t nbinsy,Double_t ylow,Double_t yup; 4690 ,Int_t nbinsz,Double_t zlow,Double_t zup); 4691 :TH3(name,title,nbinsx,xlow,xup,nbinsy,ylow,yup,nbinsz,zlow,zup); 4692{; 4693 TArrayD::Set(fNcells);; 4694 if (fgDefaultSumw2) Sumw2();; 4695 ; 4696 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 4697}; 4698 ; 4699 ; 4700////////////////////////////////////////////////////////////////////////////////; 4701/// Constructor for variable bin size 3-D histograms; 4702/// (see TH3::TH3 for explanation of parameters); 4703 ; 4704TH3D::TH3D(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 4705 ,Int_t nbinsy,const Float_t *ybins; 4706 ,Int_t nbinsz,const Float_t *zbins); 4707 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4708{; 4709 TArrayD::Set(fNcells);; 4710 if (fgDefaultSumw2) Sumw2();; 4711}; 4712 ; 4713 ; 4714////////////////////////////////////////////////////////////////////////////////; 4715/// Constructor for variable bin size 3-D histograms; 4716/// (see TH3::TH3 for explanation of parameters); 4717 ; 4718TH3D::TH3D(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 4719 ,Int_t nbinsy,const Double_t *ybins; 4720 ,Int_t nbinsz,const Double_t *zbins); 4721 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4722{; 4723 TArrayD::Set(fNcells);; 4724 if (fgDefaultSumw2) Sumw2();; 4725}; 4726 ; 4727 ; 4728////////////////////////////////////////////////////////////////////////////////; 4729/// Copy constructor.; 4730/// The list of functions is not copied. (Use Clone() if needed);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:174286,variab,variable,174286,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,2,['variab'],['variable']
Modifiability,"/////////////////////////////////////////////////; 184/// TNamed destructor.; 185 ; 186TCollection::~TCollection(); 187{; 188 // Required since we overload TObject::Hash.; 189 ROOT::CallRecursiveRemoveIfNeeded(*this);; 190}; 191 ; 192////////////////////////////////////////////////////////////////////////////////; 193/// Add all objects from collection col to this collection.; 194 ; 195void TCollection::AddAll(const TCollection *col); 196{; 197 TIter next(col);; 198 TObject *obj;; 199 ; 200 while ((obj = next())); 201 Add(obj);; 202}; 203 ; 204////////////////////////////////////////////////////////////////////////////////; 205/// Add all arguments to the collection. The list of objects must be; 206/// terminated by 0, e.g.: l.AddVector(o1, o2, o3, o4, 0);; 207 ; 208void TCollection::AddVector(TObject *va_(obj1), ...); 209{; 210 va_list ap;; 211 va_start(ap, va_(obj1));; 212 TObject *obj;; 213 ; 214 Add(va_(obj1));; 215 while ((obj = va_arg(ap, TObject *))); 216 Add(obj);; 217 va_end(ap);; 218}; 219 ; 220////////////////////////////////////////////////////////////////////////////////; 221/// Make sure all objects in this collection inherit from class cl.; 222 ; 223Bool_t TCollection::AssertClass(TClass *cl) const; 224{; 225 TObject *obj;; 226 TIter next(this);; 227 Bool_t error = kFALSE;; 228 ; 229 if (!cl) {; 230 Error(""AssertClass"", ""class == 0"");; 231 return kTRUE;; 232 }; 233 ; 234 for (int i = 0; (obj = next()); i++); 235 if (!obj->InheritsFrom(cl)) {; 236 Error(""AssertClass"", ""element %d is not an instance of class %s (%s)"",; 237 i, cl->GetName(), obj->ClassName());; 238 error = kTRUE;; 239 }; 240 return error;; 241}; 242 ; 243////////////////////////////////////////////////////////////////////////////////; 244/// Browse this collection (called by TBrowser).; 245/// If b=0, there is no Browse call TObject::Browse(0) instead.; 246/// This means TObject::Inspect() will be invoked indirectly; 247 ; 248void TCollection::Browse(TBrowser *b); 249{; 250 TIter next(th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:8184,inherit,inherit,8184,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['inherit'],['inherit']
Modifiability,/////////////////////////////////////////////////; 5376/// Return status of branch with name branchname.; 5377///; 5378/// - 0 if branch is not activated; 5379/// - 1 if branch is activated; 5380 ; 5381bool TTree::GetBranchStatus(const char* branchname) const; 5382{; 5383 TBranch* br = const_cast<TTree*>(this)->GetBranch(branchname);; 5384 if (br) {; 5385 return br->TestBit(kDoNotProcess) == 0;; 5386 }; 5387 return false;; 5388}; 5389 ; 5390////////////////////////////////////////////////////////////////////////////////; 5391/// Static function returning the current branch style.; 5392///; 5393/// - style = 0 old Branch; 5394/// - style = 1 new Bronch; 5395 ; 5396Int_t TTree::GetBranchStyle(); 5397{; 5398 return fgBranchStyle;; 5399}; 5400 ; 5401////////////////////////////////////////////////////////////////////////////////; 5402/// Used for automatic sizing of the cache.; 5403///; 5404/// Estimates a suitable size for the tree cache based on AutoFlush.; 5405/// A cache sizing factor is taken from the configuration. If this yields zero; 5406/// and withDefault is true the historical algorithm for default size is used.; 5407 ; 5408Long64_t TTree::GetCacheAutoSize(bool withDefault /* = false */ ); 5409{; 5410 auto calculateCacheSize = [this](Double_t cacheFactor); 5411 {; 5412 Long64_t cacheSize = 0;; 5413 if (fAutoFlush < 0) {; 5414 cacheSize = Long64_t(-cacheFactor * fAutoFlush);; 5415 } else if (fAutoFlush == 0) {; 5416 const auto medianClusterSize = GetMedianClusterSize();; 5417 if (medianClusterSize > 0); 5418 cacheSize = Long64_t(cacheFactor * 1.5 * medianClusterSize * GetZipBytes() / (fEntries + 1));; 5419 else; 5420 cacheSize = Long64_t(cacheFactor * 1.5 * 30000000); // use the default value of fAutoFlush; 5421 } else {; 5422 cacheSize = Long64_t(cacheFactor * 1.5 * fAutoFlush * GetZipBytes() / (fEntries + 1));; 5423 }; 5424 if (cacheSize >= (INT_MAX / 4)) {; 5425 cacheSize = INT_MAX / 4;; 5426 }; 5427 return cacheSize;; 5428 };; 5429 ; 5430 const char *stcs;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:214247,config,configuration,214247,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////; 1155/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1156/// Generate the specified number of events or expectedEvents() if not specified.; 1157/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1158/// constant and not be used for event generation.; 1159/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; 1160/// \return RooDataSet *, owned by caller.; 1161///; 1162/// Any variables of this PDF that are not in whatVars will use their; 1163/// current values and be treated as fixed parameters. Returns zero; 1164/// in case of an error.; 1165///; 1166/// <table>; 1167/// <tr><th> Type of CmdArg <th> Effect on generate; 1168/// <tr><td> `Name(const char* name)` <td> Name of the output dataset; 1169/// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; 1170/// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; 1171/// <tr><td> `Extended()` <td> If no number of events to be generated is given,; 1172/// use expected number of events from extended likelihood term.; 1173/// This evidently only works for extended PDFs.; 1174/// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; 1175/// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; 1176/// RooHistPdfs etc); 1177/// \note Datasets that are generated in binned mode are returned as weighted unbinned datasets. This means that; 1178/// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; 1179///; 1180///; 1181/// <tr><td> `AllBinned()` <td> As above, but for all components.; 1182/// \note The notion of components is only meanin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:57474,extend,extended,57474,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////; 1367/// Generate a new dataset containing the specified variables with; 1368/// events sampled from our distribution.; 1369///; 1370/// \param[in] whatVars Generate a dataset with the variables (and categories) in this set.; 1371/// Any variables of this PDF that are not in `whatVars` will use their; 1372/// current values and be treated as fixed parameters.; 1373/// \param[in] nEvents Generate the specified number of events or else try to use; 1374/// expectedEvents() if nEvents <= 0 (default).; 1375/// \param[in] verbose Show which generator strategies are being used.; 1376/// \param[in] autoBinned If original distribution is binned, return bin centers and randomise weights; 1377/// instead of generating single events.; 1378/// \param[in] binnedTag; 1379/// \param[in] expectedData Call setExpectedData on the genContext.; 1380/// \param[in] extended Randomise number of events generated according to Poisson(nEvents). Only useful; 1381/// if PDF is extended.; 1382/// \return New dataset. Returns zero in case of an error. The caller takes ownership of the returned; 1383/// dataset.; 1384 ; 1385RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(const RooArgSet &whatVars, double nEvents, bool verbose, bool autoBinned, const char* binnedTag, bool expectedData, bool extended) const; 1386{; 1387 if (nEvents==0 && extendMode()==CanNotBeExtended) {; 1388 return RooFit::makeOwningPtr(std::make_unique<RooDataSet>(""emptyData"",""emptyData"",whatVars));; 1389 }; 1390 ; 1391 // Request for binned generation; 1392 std::unique_ptr<RooAbsGenContext> context{autoGenContext(whatVars,nullptr,nullptr,verbose,autoBinned,binnedTag)};; 1393 if (expectedData) {; 1394 context->setExpectedData(true) ;; 1395 }; 1396 ; 1397 std::unique_ptr<RooDataSet> generated;; 1398 if(nullptr != context && context->isValid()) {; 1399 generated = std::unique_ptr<RooDataSet>{context->generate(nEvents, false, extended)};; 1400 }; 1401 else {; 1402 coutE(Generation) <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:68210,extend,extended,68210,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////; 164/// Fill a Ntuple with current values in fArgs.; 165///; 166/// Note that this function is protected.; 167/// Currently called only by TChain::Merge; 168 ; 169Int_t TNtuple::Fill(); 170{; 171 return TTree::Fill();; 172}; 173 ; 174////////////////////////////////////////////////////////////////////////////////; 175/// Fill a Ntuple with an array of floats; 176 ; 177Int_t TNtuple::Fill(const Float_t *x); 178{; 179 ; 180 // Store array x into buffer; 181 for (Int_t i=0;i<fNvar;i++) {; 182 fArgs[i] = x[i];; 183 }; 184 ; 185 return TTree::Fill();; 186}; 187 ; 188////////////////////////////////////////////////////////////////////////////////; 189/// Fill a Ntuple: Each Ntuple item is an argument; 190 ; 191Int_t TNtuple::Fill(Float_t x0,Float_t x1,Float_t x2,Float_t x3,Float_t x4; 192 ,Float_t x5,Float_t x6,Float_t x7,Float_t x8,Float_t x9; 193 ,Float_t x10,Float_t x11,Float_t x12,Float_t x13,Float_t x14); 194{; 195 if (fNvar > 0) fArgs[0] = x0;; 196 if (fNvar > 1) fArgs[1] = x1;; 197 if (fNvar > 2) fArgs[2] = x2;; 198 if (fNvar > 3) fArgs[3] = x3;; 199 if (fNvar > 4) fArgs[4] = x4;; 200 if (fNvar > 5) fArgs[5] = x5;; 201 if (fNvar > 6) fArgs[6] = x6;; 202 if (fNvar > 7) fArgs[7] = x7;; 203 if (fNvar > 8) fArgs[8] = x8;; 204 if (fNvar > 9) fArgs[9] = x9;; 205 if (fNvar > 10) fArgs[10] = x10;; 206 if (fNvar > 11) fArgs[11] = x11;; 207 if (fNvar > 12) fArgs[12] = x12;; 208 if (fNvar > 13) fArgs[13] = x13;; 209 if (fNvar > 14) fArgs[14] = x14;; 210 ; 211 return TTree::Fill();; 212}; 213 ; 214////////////////////////////////////////////////////////////////////////////////; 215/// Read from filename as many columns as variables in the ntuple; 216/// the function returns the number of rows found in the file; 217/// The second argument ""branchDescriptor"" is currently not used.; 218/// Lines in the input file starting with ""#"" are ignored.; 219 ; 220Long64_t TNtuple::ReadStream(std::istream &inputStream, const char * /*branchDes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:6565,variab,variables,6565,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,1,['variab'],['variables']
Modifiability,"///////////////////////////////////////////////; 3815/// Constructor for fix bin size 3-D histograms.; 3816/// (see TH3::TH3 for explanation of parameters); 3817 ; 3818TH3S::TH3S(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 3819 ,Int_t nbinsy,Double_t ylow,Double_t yup; 3820 ,Int_t nbinsz,Double_t zlow,Double_t zup); 3821 :TH3(name,title,nbinsx,xlow,xup,nbinsy,ylow,yup,nbinsz,zlow,zup); 3822{; 3823 TH3S::Set(fNcells);; 3824 if (fgDefaultSumw2) Sumw2();; 3825 ; 3826 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 3827}; 3828 ; 3829 ; 3830////////////////////////////////////////////////////////////////////////////////; 3831/// Constructor for variable bin size 3-D histograms.; 3832/// (see TH3::TH3 for explanation of parameters); 3833 ; 3834TH3S::TH3S(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 3835 ,Int_t nbinsy,const Float_t *ybins; 3836 ,Int_t nbinsz,const Float_t *zbins); 3837 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 3838{; 3839 TH3S::Set(fNcells);; 3840 if (fgDefaultSumw2) Sumw2();; 3841}; 3842 ; 3843 ; 3844////////////////////////////////////////////////////////////////////////////////; 3845/// Constructor for variable bin size 3-D histograms.; 3846/// (see TH3::TH3 for explanation of parameters); 3847 ; 3848TH3S::TH3S(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 3849 ,Int_t nbinsy,const Double_t *ybins; 3850 ,Int_t nbinsz,const Double_t *zbins); 3851 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 3852{; 3853 TH3S::Set(fNcells);; 3854 if (fgDefaultSumw2) Sumw2();; 3855}; 3856 ; 3857 ; 3858////////////////////////////////////////////////////////////////////////////////; 3859/// Copy Constructor.; 3860/// The list of functions is not copied. (Use Clone() if needed); 3861 ; 3862TH3S::TH3S(const TH3S &h3s) : TH3(), TArrayS(); 3863{; 3864 h3s.TH3S::Copy(*this);; 3865}; 3866 ; 3867 ; 3868//////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:148536,variab,variable,148536,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////; 3354/// Interprets the SET GRAD command; 3355///; 3356/// - Called from MNSET; 3357/// - Interprets the SET GRAD command, which informs MINUIT whether; 3358/// - the first derivatives of FCN will be calculated by the user; 3359/// - inside FCN. It can check the user derivative calculation; 3360/// - by comparing it with a finite difference approximation.; 3361 ; 3362void TMinuit::mngrad(); 3363{; 3364 /* Local variables */; 3365 Double_t fzero, err;; 3366 Int_t i, nparx, lc, istsav;; 3367 Bool_t lnone;; 3368 ; 3369 fISW[2] = 1;; 3370 nparx = fNpar;; 3371 if (fWord7[0] > 0) goto L2000;; 3372 ; 3373// get user-calculated first derivatives from FCN; 3374 for (i = 1; i <= fNu; ++i) { fGin[i-1] = fUndefi; }; 3375 mninex(fX);; 3376 Eval(nparx, fGin, fzero, fU, 2); ++fNfcn;; 3377 mnderi();; 3378 for (i = 1; i <= fNpar; ++i) { fGRADgf[i-1] = fGrd[i-1]; }; 3379// get MINUIT-calculated first derivatives; 3380 fISW[2] = 0;; 3381 istsav = fIstrat;; 3382 fIstrat = 2;; 3383 mnhes1();; 3384 fIstrat = istsav;; 3385 Printf("" CHECK OF GRADIENT CALCULATION IN FCN"");; 3386 Printf("" PARAMETER G(IN FCN) G(MINUIT) DG(MINUIT) AGREEMENT"");; 3387 fISW[2] = 1;; 3388 lnone = kFALSE;; 3389 for (lc = 1; lc <= fNpar; ++lc) {; 3390 i = fNexofi[lc-1];; 3391 const char *cwd = ""GOOD"";; 3392 err = fDgrd[lc-1];; 3393 if (TMath::Abs(fGRADgf[lc-1] - fGrd[lc-1]) > err) {; 3394 cwd = "" BAD"";; 3395 fISW[2] = 0;; 3396 }; 3397 if (fGin[i-1] == fUndefi) {; 3398 cwd = ""NONE"";; 3399 lnone = kTRUE;; 3400 fGRADgf[lc-1] = 0;; 3401 fISW[2] = 0;; 3402 }; 3403 Printf("" %5d %10s%12.4e%12.4e%12.4e %s"",i; 3404 ,(const char*)fCpnam[i-1]; 3405 ,fGRADgf[lc-1],fGrd[lc-1],err,cwd);; 3406 }; 3407 if (lnone) {; 3408 Printf("" AGREEMENT=NONE MEANS FCN DID NOT CALCULATE THE DERIVATIVE"");; 3409 }; 3410 if (fISW[2] == 0) {; 3411 Printf("" MINUIT DOES NOT ACCEPT DERIVATIVE CALCULATIONS BY FCN"");; 3412 Printf("" TO FORCE ACCEPTANCE, ENTER *SET GRAD 1*"");; 3413 }; 3414 ; 3415L2000:; 3416 return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:105657,variab,variables,105657,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"///////////////////////////////////////////; 3546/// Constructor for fix bin size 3-D histograms; 3547/// (see TH3::TH3 for explanation of parameters); 3548 ; 3549TH3C::TH3C(const char *name,const char *title,Int_t nbinsx,Double_t xlow,Double_t xup; 3550 ,Int_t nbinsy,Double_t ylow,Double_t yup; 3551 ,Int_t nbinsz,Double_t zlow,Double_t zup); 3552 :TH3(name,title,nbinsx,xlow,xup,nbinsy,ylow,yup,nbinsz,zlow,zup); 3553{; 3554 TArrayC::Set(fNcells);; 3555 if (fgDefaultSumw2) Sumw2();; 3556 ; 3557 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 3558}; 3559 ; 3560 ; 3561////////////////////////////////////////////////////////////////////////////////; 3562/// Constructor for variable bin size 3-D histograms.; 3563/// (see TH3::TH3 for explanation of parameters); 3564 ; 3565TH3C::TH3C(const char *name,const char *title,Int_t nbinsx,const Float_t *xbins; 3566 ,Int_t nbinsy,const Float_t *ybins; 3567 ,Int_t nbinsz,const Float_t *zbins); 3568 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 3569{; 3570 TArrayC::Set(fNcells);; 3571 if (fgDefaultSumw2) Sumw2();; 3572}; 3573 ; 3574 ; 3575////////////////////////////////////////////////////////////////////////////////; 3576/// Constructor for variable bin size 3-D histograms.; 3577/// (see TH3::TH3 for explanation of parameters); 3578 ; 3579TH3C::TH3C(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 3580 ,Int_t nbinsy,const Double_t *ybins; 3581 ,Int_t nbinsz,const Double_t *zbins); 3582 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 3583{; 3584 TArrayC::Set(fNcells);; 3585 if (fgDefaultSumw2) Sumw2();; 3586}; 3587 ; 3588 ; 3589////////////////////////////////////////////////////////////////////////////////; 3590/// Copy constructor.; 3591/// The list of functions is not copied. (Use Clone() if needed); 3592 ; 3593TH3C::TH3C(const TH3C &h3c) : TH3(), TArrayC(); 3594{; 3595 h3c.TH3C::Copy(*this);; 3596}; 3597 ; 3598 ; 3599/////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:139730,variab,variable,139730,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////; 636/// Add a TFriendElement to the list of friends of this chain.; 637///; 638/// A TChain has a list of friends similar to a tree (see TTree::AddFriend).; 639/// You can add a friend to a chain with the TChain::AddFriend method, and you; 640/// can retrieve the list of friends with TChain::GetListOfFriends.; 641/// This example has four chains each has 20 ROOT trees from 20 ROOT files.; 642/// ~~~ {.cpp}; 643/// TChain ch(""t""); // a chain with 20 trees from 20 files; 644/// TChain ch1(""t1"");; 645/// TChain ch2(""t2"");; 646/// TChain ch3(""t3"");; 647/// ~~~; 648/// Now we can add the friends to the first chain.; 649/// ~~~ {.cpp}; 650/// ch.AddFriend(""t1""); 651/// ch.AddFriend(""t2""); 652/// ch.AddFriend(""t3""); 653/// ~~~; 654/// \image html tchain_friend.png; 655///; 656///; 657/// The parameter is the name of friend chain (the name of a chain is always; 658/// the name of the tree from which it was created).; 659/// The original chain has access to all variable in its friends.; 660/// We can use the TChain::Draw method as if the values in the friends were; 661/// in the original chain.; 662/// To specify the chain to use in the Draw method, use the syntax:; 663/// ~~~ {.cpp}; 664/// <chainname>.<branchname>.<varname>; 665/// ~~~; 666/// If the variable name is enough to uniquely identify the variable, you can; 667/// leave out the chain and/or branch name.; 668/// For example, this generates a 3-d scatter plot of variable ""var"" in the; 669/// TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2.; 670/// ~~~ {.cpp}; 671/// ch.Draw(""var:t1.v1:t2.v2"");; 672/// ~~~; 673/// When a TChain::Draw is executed, an automatic call to TTree::AddFriend; 674/// connects the trees in the chain. When a chain is deleted, its friend; 675/// elements are also deleted.; 676///; 677/// The number of entries in the friend must be equal or greater to the number; 678/// of entries of the original chain. If the friend has fewer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:25447,variab,variable,25447,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////; 128/// Evaluate Python code; 129///; 130/// \param[in] code Python code as string; 131/// \return Python object from evaluation of code line; 132///; 133/// Take a Python code as input and evaluate it in the local namespace. Then,; 134/// return the result as Python object.; 135 ; 136PyObject *PyMethodBase::Eval(TString code); 137{; 138 if(!PyIsInitialized()) PyInitialize();; 139 PyObject *pycode = Py_BuildValue(""(sOO)"", code.Data(), fGlobalNS, fLocalNS);; 140 PyObject *result = PyObject_CallObject(fEval, pycode);; 141 Py_DECREF(pycode);; 142 return result;; 143}; 144 ; 145///////////////////////////////////////////////////////////////////////////////; 146/// Initialize Python interpreter; 147///; 148/// NOTE: We introduce a shared global namespace `fGlobalNS`, but using; 149/// a private local namespace `fLocalNS`. This prohibits the interference; 150/// of instances of the same method with the same factory, e.g., by overriding; 151/// variables in the same local namespace.; 152 ; 153void PyMethodBase::PyInitialize(); 154{; 155 TMVA::MsgLogger Log;; 156 ; 157 bool pyIsInitialized = PyIsInitialized();; 158 if (!pyIsInitialized) {; 159 Py_Initialize();; 160 }; 161 ; 162 TMVA::Internal::PyGILRAII raii;; 163 if (!pyIsInitialized) {; 164 _import_array();; 165 }; 166 ; 167 // note fMain is a borrowed reference; 168 fMain = PyImport_AddModule(""__main__"");; 169 if (!fMain) {; 170 Log << kFATAL << ""Can't import __main__"" << Endl;; 171 Log << Endl;; 172 }; 173 Py_INCREF(fMain);; 174 ; 175 fGlobalNS = PyModule_GetDict(fMain);; 176 if (!fGlobalNS) {; 177 Log << kFATAL << ""Can't init global namespace"" << Endl;; 178 Log << Endl;; 179 }; 180 Py_INCREF(fGlobalNS);; 181 ; 182 #if PY_MAJOR_VERSION < 3; 183 //preparing objects for eval; 184 PyObject *bName = PyUnicode_FromString(""__builtin__"");; 185 // Import the file as a Python module.; 186 // returns a new reference; 187 fModuleBuiltin = PyImport_Import(bName);; 188 if (!fModuleBuiltin) {;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PyMethodBase_8cxx_source.html:5281,variab,variables,5281,doc/master/PyMethodBase_8cxx_source.html,https://root.cern,https://root.cern/doc/master/PyMethodBase_8cxx_source.html,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////; 425/// parse option string for ANN methods; 426/// default settings (should be defined in theOption string); 427///; 428/// format and syntax of option string: ""3000:N:N+2:N-3:6""; 429///; 430/// where:; 431/// - 3000 - number of training cycles (epochs); 432/// - N - number of nodes in first hidden layer, where N is the number; 433/// of discriminating variables used (note that the first ANN; 434/// layer necessarily has N nodes, and hence is not given).; 435/// - N+2 - number of nodes in 2nd hidden layer (2 nodes more than; 436/// number of variables); 437/// - N-3 - number of nodes in 3rd hidden layer (3 nodes less than; 438/// number of variables); 439/// - 6 - 6 nodes in last (4th) hidden layer (note that the last ANN; 440/// layer in MVA has 2 nodes, each one for signal and background; 441/// classes); 442 ; 443vector<Int_t>* TMVA::Tools::ParseANNOptionString( TString theOptions, Int_t nvar,; 444 vector<Int_t>* nodes ); 445{; 446 TList* list = TMVA::Tools::ParseFormatLine( theOptions, "":"" );; 447 ; 448 ; 449 // sanity check; 450 if (list->GetSize() < 1) {; 451 Log() << kFATAL << ""<ParseANNOptionString> unrecognized option string: "" << theOptions << Endl;; 452 }; 453 ; 454 // add number of cycles; 455 nodes->push_back( atoi( ((TObjString*)list->At(0))->GetString() ) );; 456 ; 457 Int_t a;; 458 if (list->GetSize() > 1) {; 459 for (Int_t i=1; i<list->GetSize(); i++) {; 460 TString s = ((TObjString*)list->At(i))->GetString();; 461 s.ToUpper();; 462 if (s(0) == 'N') {; 463 if (s.Length() > 1) nodes->push_back( nvar + atoi(&s[1]) );; 464 else nodes->push_back( nvar );; 465 }; 466 else if ((a = atoi( s )) > 0) nodes->push_back( atoi(s ) );; 467 else {; 468 Log() << kFATAL << ""<ParseANNOptionString> unrecognized option string: "" << theOptions << Endl;; 469 }; 470 }; 471 }; 472 ; 473 return nodes;; 474}; 475 ; 476////////////////////////////////////////////////////////////////////////////////; 477/// check quality of splining by",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:15110,variab,variables,15110,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,2,['variab'],['variables']
Modifiability,"///////////////////////////////////////; 2655/// Adds all graphs from the collection to this graph.; 2656/// Returns the total number of points in the result or -1 in case of an error.; 2657 ; 2658Int_t TGraph::Merge(TCollection* li); 2659{; 2660 TIter next(li);; 2661 while (TObject* o = next()) {; 2662 TGraph *g = dynamic_cast<TGraph*>(o);; 2663 if (!g) {; 2664 Error(""Merge"",; 2665 ""Cannot merge - an object which doesn't inherit from TGraph found in the list"");; 2666 return -1;; 2667 }; 2668 DoMerge(g);; 2669 }; 2670 return GetN();; 2671}; 2672 ; 2673////////////////////////////////////////////////////////////////////////////////; 2674/// protected function to perform the merge operation of a graph; 2675 ; 2676Bool_t TGraph::DoMerge(const TGraph* g); 2677{; 2678 Double_t x = 0, y = 0;; 2679 for (Int_t i = 0 ; i < g->GetN(); i++) {; 2680 g->GetPoint(i, x, y);; 2681 SetPoint(GetN(), x, y);; 2682 }; 2683 return kTRUE;; 2684}; 2685 ; 2686////////////////////////////////////////////////////////////////////////////////; 2687/// Move all graph points on specified values dx,dy; 2688/// If log argument specified, calculation done in logarithmic scale like:; 2689/// new_value = exp( log(old_value) + delta );; 2690 ; 2691void TGraph::MovePoints(Double_t dx, Double_t dy, Bool_t logx, Bool_t logy); 2692{; 2693 Double_t x = 0, y = 0;; 2694 for (Int_t i = 0 ; i < GetN(); i++) {; 2695 GetPoint(i, x, y);; 2696 if (!logx) {; 2697 x += dx;; 2698 } else if (x > 0) {; 2699 x = TMath::Exp(TMath::Log(x) + dx);; 2700 }; 2701 if (!logy) {; 2702 y += dy;; 2703 } else if (y > 0) {; 2704 y = TMath::Exp(TMath::Log(y) + dy);; 2705 }; 2706 SetPoint(i, x, y);; 2707 }; 2708}; 2709 ; 2710 ; 2711////////////////////////////////////////////////////////////////////////////////; 2712/// Find zero of a continuous function.; 2713/// This function finds a real zero of the continuous real; 2714/// function Y(X) in a given interval (A,B). See accompanying; 2715/// notes for details of the argument list and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:95392,inherit,inherit,95392,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['inherit'],['inherit']
Modifiability,"///////////////////////////////////////; 276 /// returns configured window width (0 - default); 277 /// actual window width can be different; 278 unsigned GetWidth() const { return fWidth; }; 279 ; 280 /////////////////////////////////////////////////////////////////////////; 281 /// returns configured window height (0 - default); 282 unsigned GetHeight() const { return fHeight; }; 283 ; 284 /////////////////////////////////////////////////////////////////////////; 285 /// returns configured window X position (-1 - default); 286 int GetX() const { return fX; }; 287 ; 288 /////////////////////////////////////////////////////////////////////////; 289 /// returns configured window Y position (-1 - default); 290 int GetY() const { return fY; }; 291 ; 292 void SetConnLimit(unsigned lmt = 0);; 293 ; 294 unsigned GetConnLimit() const;; 295 ; 296 void SetConnToken(const std::string &token = """");; 297 ; 298 /////////////////////////////////////////////////////////////////////////; 299 /// configures maximal queue length of data which can be held by window; 300 void SetMaxQueueLength(unsigned len = 10) { fMaxQueueLength = len; }; 301 ; 302 /////////////////////////////////////////////////////////////////////////; 303 /// Return maximal queue length of data which can be held by window; 304 unsigned GetMaxQueueLength() const { return fMaxQueueLength; }; 305 ; 306 /////////////////////////////////////////////////////////////////////////; 307 /// configures that only native (own-created) connections are allowed; 308 void SetNativeOnlyConn(bool on = true) { fNativeOnlyConn = on; }; 309 ; 310 /////////////////////////////////////////////////////////////////////////; 311 /// returns true if only native (own-created) connections are allowed; 312 bool IsNativeOnlyConn() const { return fNativeOnlyConn; }; 313 ; 314 /////////////////////////////////////////////////////////////////////////; 315 /// Configure if authentication key in connection string is required; 316 void SetRequireAuthKe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:13870,config,configures,13870,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,1,['config'],['configures']
Modifiability,"///////////////////////////////////////; 279 /// returns configured window width (0 - default); 280 /// actual window width can be different; 281 unsigned GetWidth() const { return fWidth; }; 282 ; 283 /////////////////////////////////////////////////////////////////////////; 284 /// returns configured window height (0 - default); 285 unsigned GetHeight() const { return fHeight; }; 286 ; 287 /////////////////////////////////////////////////////////////////////////; 288 /// returns configured window X position (-1 - default); 289 int GetX() const { return fX; }; 290 ; 291 /////////////////////////////////////////////////////////////////////////; 292 /// returns configured window Y position (-1 - default); 293 int GetY() const { return fY; }; 294 ; 295 void SetConnLimit(unsigned lmt = 0);; 296 ; 297 unsigned GetConnLimit() const;; 298 ; 299 void SetConnToken(const std::string &token = """");; 300 ; 301 /////////////////////////////////////////////////////////////////////////; 302 /// configures maximal queue length of data which can be held by window; 303 void SetMaxQueueLength(unsigned len = 10) { fMaxQueueLength = len; }; 304 ; 305 /////////////////////////////////////////////////////////////////////////; 306 /// Return maximal queue length of data which can be held by window; 307 unsigned GetMaxQueueLength() const { return fMaxQueueLength; }; 308 ; 309 /////////////////////////////////////////////////////////////////////////; 310 /// configures that only native (own-created) connections are allowed; 311 void SetNativeOnlyConn(bool on = true) { fNativeOnlyConn = on; }; 312 ; 313 /////////////////////////////////////////////////////////////////////////; 314 /// returns true if only native (own-created) connections are allowed; 315 bool IsNativeOnlyConn() const { return fNativeOnlyConn; }; 316 ; 317 /////////////////////////////////////////////////////////////////////////; 318 /// Configure if authentication key in connection string is required; 319 void SetRequireAuthKe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindow_8hxx_source.html:14021,config,configures,14021,doc/master/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindow_8hxx_source.html,1,['config'],['configures']
Modifiability,"//////////////////////////////////; 1099/// Resets the parameter list to UNDEFINED; 1100///; 1101/// Called from MINUIT and by option from MNEXCM; 1102 ; 1103void TMinuit::mncler(); 1104{; 1105 Int_t i;; 1106 ; 1107 fNpfix = 0;; 1108 fNu = 0;; 1109 fNpar = 0;; 1110 fNfcn = 0;; 1111 fNwrmes[0] = 0;; 1112 fNwrmes[1] = 0;; 1113 for (i = 1; i <= fMaxext; ++i) {; 1114 fU[i-1] = 0;; 1115 fCpnam[i-1] = fCundef;; 1116 fNvarl[i-1] = -1;; 1117 fNiofex[i-1] = 0;; 1118 }; 1119 mnrset(1);; 1120 fCfrom = ""CLEAR "";; 1121 fNfcnfr = fNfcn;; 1122 fCstatu = ""UNDEFINED "";; 1123 fLnolim = kTRUE;; 1124 fLphead = kTRUE;; 1125}; 1126 ; 1127////////////////////////////////////////////////////////////////////////////////; 1128/// Print function contours in two variables, on line printer; 1129///; 1130/// input arguments: parx, pary, devs, ngrid; 1131 ; 1132void TMinuit::mncntr(Int_t ike1, Int_t ike2, Int_t &ierrf); 1133{; 1134 static const char *const clabel = ""0123456789ABCDEFGHIJ"";; 1135 ; 1136 /* Local variables */; 1137 Double_t d__1, d__2;; 1138 Double_t fcna[115], fcnb[115], contur[20];; 1139 Double_t ylabel, fmn, fmx, xlo, ylo, xup, yup;; 1140 Double_t devs, xsav, ysav, bwidx, bwidy, unext, ff, xb4;; 1141 Int_t i, ngrid, ixmid, nparx, ix, nx, ny, ki1, ki2, ixzero, iy, ics;; 1142 TString chmid, chln, chzero;; 1143 ; 1144 Int_t ke1 = ike1+1;; 1145 Int_t ke2 = ike2+1;; 1146 if (ke1 <= 0 || ke2 <= 0) goto L1350;; 1147 if (ke1 > fNu || ke2 > fNu) goto L1350;; 1148 ki1 = fNiofex[ke1-1];; 1149 ki2 = fNiofex[ke2-1];; 1150 if (ki1 <= 0 || ki2 <= 0) goto L1350;; 1151 if (ki1 == ki2) goto L1350;; 1152 ; 1153 if (fISW[1] < 1) {; 1154 mnhess();; 1155 mnwerr();; 1156 }; 1157 nparx = fNpar;; 1158 xsav = fU[ke1-1];; 1159 ysav = fU[ke2-1];; 1160 devs = fWord7[2];; 1161 if (devs <= 0) devs = 2;; 1162 xlo = fU[ke1-1] - devs*fWerr[ki1-1];; 1163 xup = fU[ke1-1] + devs*fWerr[ki1-1];; 1164 ylo = fU[ke2-1] - devs*fWerr[ki2-1];; 1165 yup = fU[ke2-1] + devs*fWerr[ki2-1];; 1166 ngrid = Int_t(fWord7[3]);; 1167 i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:39827,variab,variables,39827,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/////////////////////////////////; 7512/// Loop over entries and return a TSQLResult object containing entries following selection.; 7513 ; 7514TSQLResult* TTree::Query(const char* varexp, const char* selection, Option_t* option, Long64_t nentries, Long64_t firstentry); 7515{; 7516 GetPlayer();; 7517 if (fPlayer) {; 7518 return fPlayer->Query(varexp, selection, option, nentries, firstentry);; 7519 }; 7520 return nullptr;; 7521}; 7522 ; 7523////////////////////////////////////////////////////////////////////////////////; 7524/// Create or simply read branches from filename.; 7525///; 7526/// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; 7527/// is given in the first line of the file with a syntax like; 7528/// ~~~ {.cpp}; 7529/// A/D:Table[2]/F:Ntracks/I:astring/C; 7530/// ~~~; 7531/// otherwise branchDescriptor must be specified with the above syntax.; 7532///; 7533/// - If the type of the first variable is not specified, it is assumed to be ""/F""; 7534/// - If the type of any other variable is not specified, the type of the previous; 7535/// variable is assumed. eg; 7536/// - `x:y:z` (all variables are assumed of type ""F""); 7537/// - `x/D:y:z` (all variables are of type ""D""); 7538/// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); 7539///; 7540/// delimiter allows for the use of another delimiter besides whitespace.; 7541/// This provides support for direct import of common data file formats; 7542/// like csv. If delimiter != ' ' and branchDescriptor == """", then the; 7543/// branch description is taken from the first line in the file, but; 7544/// delimiter is used for the branch names tokenization rather than ':'.; 7545/// Note however that if the values in the first line do not use the; 7546/// /[type] syntax, all variables are assumed to be of type ""F"".; 7547/// If the filename ends with extensions .csv or .CSV and a delimiter is; 7548/// not specified (besides ' '), the delimiter is automatically set to ','.; 7549///; 7550/// Lines",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:296359,variab,variable,296359,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,3,['variab'],['variable']
Modifiability,"////////////////////////////////; 1263/// Add a TFriendElement to the list of friends.; 1264///; 1265/// This function:; 1266/// - opens a file if filename is specified; 1267/// - reads a Tree with name treename from the file (current directory); 1268/// - adds the Tree to the list of friends; 1269/// see other AddFriend functions; 1270///; 1271/// A TFriendElement TF describes a TTree object TF in a file.; 1272/// When a TFriendElement TF is added to the list of friends of an; 1273/// existing TTree T, any variable from TF can be referenced in a query; 1274/// to T.; 1275///; 1276/// A tree keeps a list of friends. In the context of a tree (or a chain),; 1277/// friendship means unrestricted access to the friends data. In this way; 1278/// it is much like adding another branch to the tree without taking the risk; 1279/// of damaging it. To add a friend to the list, you can use the TTree::AddFriend; 1280/// method. The tree in the diagram below has two friends (friend_tree1 and; 1281/// friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m.; 1282///; 1283/// \image html ttree_friend1.png; 1284///; 1285/// The AddFriend method has two parameters, the first is the tree name and the; 1286/// second is the name of the ROOT file where the friend tree is saved.; 1287/// AddFriend automatically opens the friend file. If no file name is given,; 1288/// the tree called ft1 is assumed to be in the same file as the original tree.; 1289///; 1290/// tree.AddFriend(""ft1"",""friendfile1.root"");; 1291/// If the friend tree has the same name as the original tree, you can give it; 1292/// an alias in the context of the friendship:; 1293///; 1294/// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; 1295/// Once the tree has friends, we can use TTree::Draw as if the friend's; 1296/// variables were in the original tree. To specify which tree to use in; 1297/// the Draw method, use the syntax:; 1298/// ~~~ {.cpp}; 1299/// <treeName>.<branchname>.<varname>; 1300/// ~~~; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:46053,variab,variables,46053,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"////////////////////////////////; 463/// print cuts; 464 ; 465void TMVA::MethodCuts::PrintCuts( Double_t effS ) const; 466{; 467 std::vector<Double_t> cutsMin;; 468 std::vector<Double_t> cutsMax;; 469 Int_t ibin = fEffBvsSLocal->FindBin( effS );; 470 ; 471 Double_t trueEffS = GetCuts( effS, cutsMin, cutsMax );; 472 ; 473 // retrieve variable expressions (could be transformations); 474 std::vector<TString>* varVec = 0;; 475 if (GetTransformationHandler().GetNumOfTransformations() == 0) {; 476 // no transformation applied, replace by current variables; 477 varVec = new std::vector<TString>;; 478 for (UInt_t ivar=0; ivar<cutsMin.size(); ivar++) {; 479 varVec->push_back( DataInfo().GetVariableInfo(ivar).GetLabel() );; 480 }; 481 }; 482 else if (GetTransformationHandler().GetNumOfTransformations() == 1) {; 483 // get transformation string; 484 varVec = GetTransformationHandler().GetTransformationStringsOfLastTransform();; 485 }; 486 else {; 487 // replace transformation print by current variables and indicated incompleteness; 488 varVec = new std::vector<TString>;; 489 for (UInt_t ivar=0; ivar<cutsMin.size(); ivar++) {; 490 varVec->push_back( DataInfo().GetVariableInfo(ivar).GetLabel() + "" [transformed]"" );; 491 }; 492 }; 493 ; 494 UInt_t maxL = 0;; 495 for (UInt_t ivar=0; ivar<cutsMin.size(); ivar++) {; 496 if ((UInt_t)(*varVec)[ivar].Length() > maxL) maxL = (*varVec)[ivar].Length();; 497 }; 498 UInt_t maxLine = 20+maxL+16;; 499 ; 500 for (UInt_t i=0; i<maxLine; i++) Log() << ""-"";; 501 Log() << Endl;; 502 Log() << kHEADER << ""Cut values for requested signal efficiency: "" << trueEffS << Endl;; 503 Log() << kINFO << ""Corresponding background efficiency : "" << fEffBvsSLocal->GetBinContent( ibin ) << Endl;; 504 if (GetTransformationHandler().GetNumOfTransformations() == 1) {; 505 Log() << kINFO << ""Transformation applied to input variables : \""""; 506 << GetTransformationHandler().GetNameOfLastTransform() << ""\"""" << Endl;; 507 }; 508 else if (GetTransformationHandler().GetNum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:18119,variab,variables,18119,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['variab'],['variables']
Modifiability,"///////////////////////////////; 694/// Utility function for createIntObj() that aids in the construct of recursive integrals; 695/// over functions with multiple observables with parameterized ranges. This function; 696/// finds in a given set allObs over which integration is requested the largeset subset; 697/// of observables that can be integrated simultaneously. This subset consists of; 698/// observables with fixed ranges and observables with parameterized ranges whose; 699/// parameterization does not depend on any observable that is also integrated.; 700 ; 701void RooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; 702{; 703 // Make lists of; 704 // a) integrated observables with fixed ranges,; 705 // b) integrated observables with parameterized ranges depending on other integrated observables; 706 // c) integrated observables used in definition of any parameterized ranges of integrated observables; 707 RooArgSet obsWithFixedRange(allObs) ;; 708 RooArgSet obsWithParamRange ;; 709 RooArgSet obsServingAsRangeParams ;; 710 ; 711 // Loop over all integrated observables; 712 for (const auto aarg : allObs) {; 713 // Check if observable is real-valued lvalue; 714 if (auto arglv = dynamic_cast<RooAbsRealLValue*>(aarg)) {; 715 ; 716 // Check if range is parameterized; 717 RooAbsBinning& binning = arglv->getBinning(rangeName,false,true) ;; 718 if (binning.isParameterized()) {; 719 RooArgSet loBoundObs;; 720 RooArgSet hiBoundObs;; 721 binning.lowBoundFunc()->getObservables(&allObs, loBoundObs) ;; 722 binning.highBoundFunc()->getObservables(&allObs, hiBoundObs) ;; 723 ; 724 // Check if range parameterization depends on other integrated observables; 725 if (loBoundObs.overlaps(allObs) || hiBoundObs.overlaps(allObs)) {; 726 obsWithParamRange.add(*aarg) ;; 727 obsWithFixedRange.remove(*aarg) ;; 728 obsServingAsRangeParams.add(loBoundObs,false) ;; 729 obsServingAsRangeParams.add(hiBoundObs,false) ;; 730 }; 731 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:27580,parameteriz,parameterized,27580,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,3,['parameteriz'],['parameterized']
Modifiability,"//////////////////////////////; 1469 ; 1470void TMVA::MethodDNN::MakeClassSpecific( std::ostream& /*fout*/,; 1471 const TString& /*className*/ ) const; 1472{; 1473}; 1474 ; 1475////////////////////////////////////////////////////////////////////////////////; 1476 ; 1477void TMVA::MethodDNN::GetHelpMessage() const; 1478{; 1479 // get help message text; 1480 //; 1481 // typical length of text line:; 1482 // ""|--------------------------------------------------------------|""; 1483 TString col = gConfig().WriteOptionsReference() ? TString() : gTools().Color(""bold"");; 1484 TString colres = gConfig().WriteOptionsReference() ? TString() : gTools().Color(""reset"");; 1485 ; 1486 Log() << Endl;; 1487 Log() << col << ""--- Short description:"" << colres << Endl;; 1488 Log() << Endl;; 1489 Log() << ""The DNN neural network is a feedforward"" << Endl;; 1490 Log() << ""multilayer perceptron implementation. The DNN has a user-"" << Endl;; 1491 Log() << ""defined hidden layer architecture, where the number of input (output)"" << Endl;; 1492 Log() << ""nodes is determined by the input variables (output classes, i.e., "" << Endl;; 1493 Log() << ""signal and one background, regression or multiclass). "" << Endl;; 1494 Log() << Endl;; 1495 Log() << col << ""--- Performance optimisation:"" << colres << Endl;; 1496 Log() << Endl;; 1497 ; 1498 const char* txt = ""The DNN supports various options to improve performance in terms of training speed and \n \; 1499reduction of overfitting: \n \; 1500\n \; 1501 - different training settings can be stacked. Such that the initial training \n\; 1502 is done with a large learning rate and a large drop out fraction whilst \n \; 1503 in a later stage learning rate and drop out can be reduced. \n \; 1504 - drop out \n \; 1505 [recommended: \n \; 1506 initial training stage: 0.0 for the first layer, 0.5 for later layers. \n \; 1507 later training stage: 0.1 or 0.0 for all layers \n \; 1508 final training stage: 0.0] \n \; 1509 Drop out is a technique where a at each trai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:54144,variab,variables,54144,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['variab'],['variables']
Modifiability,"//////////////////////////////; 8869/// Redefine x, y and z axis parameters.; 8870///; 8871/// The X, Y and Z axis parameters are modified.; 8872/// The bins content array is resized; 8873/// if errors (Sumw2) the errors array is resized; 8874/// The previous bin contents are lost; 8875/// To change only the axis limits, see TAxis::SetRange; 8876 ; 8877void TH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); 8878{; 8879 if (GetDimension() != 3) {; 8880 Error(""SetBins"",""Operation only valid for 3-D histograms"");; 8881 return;; 8882 }; 8883 fXaxis.SetRange(0,0);; 8884 fYaxis.SetRange(0,0);; 8885 fZaxis.SetRange(0,0);; 8886 fXaxis.Set(nx,xmin,xmax);; 8887 fYaxis.Set(ny,ymin,ymax);; 8888 fZaxis.Set(nz,zmin,zmax);; 8889 fNcells = (nx+2)*(ny+2)*(nz+2);; 8890 SetBinsLength(fNcells);; 8891 if (fSumw2.fN) {; 8892 fSumw2.Set(fNcells);; 8893 }; 8894}; 8895 ; 8896////////////////////////////////////////////////////////////////////////////////; 8897/// Redefine x, y and z axis parameters with variable bin sizes.; 8898///; 8899/// The X, Y and Z axis parameters are modified.; 8900/// The bins content array is resized; 8901/// if errors (Sumw2) the errors array is resized; 8902/// The previous bin contents are lost; 8903/// To change only the axis limits, see TAxis::SetRange; 8904/// xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1,; 8905/// zBins is supposed to be of length nz+1; 8906 ; 8907void TH1::SetBins(Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins); 8908{; 8909 if (GetDimension() != 3) {; 8910 Error(""SetBins"",""Operation only valid for 3-D histograms"");; 8911 return;; 8912 }; 8913 fXaxis.SetRange(0,0);; 8914 fYaxis.SetRange(0,0);; 8915 fZaxis.SetRange(0,0);; 8916 fXaxis.Set(nx,xBins);; 8917 fYaxis.Set(ny,yBins);; 8918 fZaxis.Set(nz,zBins);; 8919 fNcells = (nx+2)*(ny+2)*(nz+2);; 8920 SetBinsLength(fNcells);; 8921 if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:347406,variab,variable,347406,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"//////////////////////////; 678/// evaluates the multiclass MVA; 679 ; 680Float_t TMVA::Reader::EvaluateMulticlass( UInt_t clsNumber, const TString& methodTag, Double_t aux ); 681{; 682 try {; 683 return EvaluateMulticlass(methodTag, aux).at(clsNumber);; 684 }; 685 catch (std::out_of_range &) {; 686 Log() << kWARNING << ""Multiclass could not be evaluated for class-number "" << clsNumber << Endl;; 687 return 0;; 688 }; 689}; 690 ; 691 ; 692////////////////////////////////////////////////////////////////////////////////; 693/// return pointer to method with tag ""methodTag""; 694 ; 695TMVA::IMethod* TMVA::Reader::FindMVA( const TString& methodTag ); 696{; 697 std::map<TString, IMethod*>::iterator it = fMethodMap.find( methodTag );; 698 if (it != fMethodMap.end()) return it->second;; 699 Log() << kERROR << ""Method "" << methodTag << "" not found!"" << Endl;; 700 return 0;; 701}; 702 ; 703////////////////////////////////////////////////////////////////////////////////; 704/// evaluates probability of MVA for given set of input variables; 705 ; 706Double_t TMVA::Reader::GetProba( const TString& methodTag, Double_t ap_sig, Double_t mvaVal ); 707{; 708 IMethod* method = 0;; 709 std::map<TString, IMethod*>::iterator it = fMethodMap.find( methodTag );; 710 if (it == fMethodMap.end()) {; 711 for (it = fMethodMap.begin(); it!=fMethodMap.end(); ++it) Log() << ""M"" << it->first << Endl;; 712 Log() << kFATAL << ""<EvaluateMVA> unknown classifier in map: "" << method << ""; ""; 713 << ""you looked for "" << methodTag<< "" while the available methods are : "" << Endl;; 714 }; 715 else method = it->second;; 716 ; 717 MethodBase* kl = dynamic_cast<MethodBase*>(method);; 718 if(kl==0) return -1;; 719 // check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; 720 // it is not again checked in each of these subsequent calls..; 721 const Event* ev = kl->GetEvent();; 722 for (UInt_t i=0; i<ev->GetNVariables(); i++){; 723 if (TMath::IsNaN(ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:27538,variab,variables,27538,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/////////////////////////; 136 ; 137TMVA::DataSetInfo& TMVA::DataLoader::GetDataSetInfo(); 138{; 139 return DefaultDataSetInfo(); // DSMTEST; 140}; 141 ; 142////////////////////////////////////////////////////////////////////////////////; 143/// Transforms the variables and return a new DataLoader with the transformed; 144/// variables; 145 ; 146TMVA::DataLoader* TMVA::DataLoader::VarTransform(TString trafoDefinition); 147{; 148 TString trOptions = ""0"";; 149 TString trName = ""None"";; 150 if (trafoDefinition.Contains(""("")) {; 151 ; 152 // contains transformation parameters; 153 Ssiz_t parStart = trafoDefinition.Index( ""("" );; 154 Ssiz_t parLen = trafoDefinition.Index( "")"", parStart )-parStart+1;; 155 ; 156 trName = trafoDefinition(0,parStart);; 157 trOptions = trafoDefinition(parStart,parLen);; 158 trOptions.Remove(parLen-1,1);; 159 trOptions.Remove(0,1);; 160 }; 161 else; 162 trName = trafoDefinition;; 163 ; 164 VarTransformHandler* handler = new VarTransformHandler(this);; 165 // variance threshold variable transformation; 166 if (trName == ""VT"") {; 167 ; 168 // find threshold value from given input; 169 Double_t threshold = 0.0;; 170 if (!trOptions.IsFloat()){; 171 Log() << kFATAL << "" VT transformation must be passed a floating threshold value"" << Endl;; 172 delete handler;; 173 return this;; 174 }; 175 else; 176 threshold = trOptions.Atof();; 177 TMVA::DataLoader *transformedLoader = handler->VarianceThreshold(threshold);; 178 delete handler;; 179 return transformedLoader;; 180 }; 181 else {; 182 delete handler;; 183 Log() << kFATAL << ""Incorrect transformation string provided, please check"" << Endl;; 184 }; 185 Log() << kINFO << ""No transformation applied, returning original loader"" << Endl;; 186 return this;; 187}; 188 ; 189////////////////////////////////////////////////////////////////////////////////; 190// the next functions are to assign events directly; 191 ; 192////////////////////////////////////////////////////////////////////////////////; 193/// crea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:5960,variab,variable,5960,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,1,['variab'],['variable']
Modifiability,"////////////////////; 5895/// Static method returning the defConstructor flag passed to TClass::New().; 5896/// New type is either:; 5897/// - TClass::kRealNew - when called via plain new; 5898/// - TClass::kClassNew - when called via TClass::New(); 5899/// - TClass::kDummyNew - when called via TClass::New() but object is a dummy,; 5900/// in which case the object ctor might take short cuts; 5901 ; 5902TClass::ENewType TClass::IsCallingNew(); 5903{; 5904 return TClass__GetCallingNew();; 5905}; 5906 ; 5907////////////////////////////////////////////////////////////////////////////////; 5908/// Return true if the shared library of this class is currently in the a; 5909/// process's memory. Return false, after the shared library has been; 5910/// unloaded or if this is an 'emulated' class created from a file's StreamerInfo.; 5911 ; 5912Bool_t TClass::IsLoaded() const; 5913{; 5914 return fState == kHasTClassInit;; 5915}; 5916 ; 5917////////////////////////////////////////////////////////////////////////////////; 5918/// Returns true if this class inherits from TObject and if the start of; 5919/// the TObject parts is at the very beginning of the objects.; 5920/// Concretely this means that the following code is proper for this class:; 5921/// ~~~ {.cpp}; 5922/// ThisClass *ptr;; 5923/// void *void_ptr = (void)ptr;; 5924/// TObject *obj = (TObject*)void_ptr;; 5925/// ~~~; 5926/// This code would be wrong if 'ThisClass' did not inherit 'first' from; 5927/// TObject.; 5928 ; 5929Bool_t TClass::IsStartingWithTObject() const; 5930{; 5931 if (fProperty==(-1)) Property();; 5932 return TestBit(kStartWithTObject);; 5933}; 5934 ; 5935////////////////////////////////////////////////////////////////////////////////; 5936/// Return kTRUE is the class inherits from TObject.; 5937 ; 5938Bool_t TClass::IsTObject() const; 5939{; 5940 if (fProperty==(-1)) Property();; 5941 return TestBit(kIsTObject);; 5942}; 5943 ; 5944/////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:226805,inherit,inherits,226805,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"////////////////////; 5962/// Static method returning the defConstructor flag passed to TClass::New().; 5963/// New type is either:; 5964/// - TClass::kRealNew - when called via plain new; 5965/// - TClass::kClassNew - when called via TClass::New(); 5966/// - TClass::kDummyNew - when called via TClass::New() but object is a dummy,; 5967/// in which case the object ctor might take short cuts; 5968 ; 5969TClass::ENewType TClass::IsCallingNew(); 5970{; 5971 return TClass__GetCallingNew();; 5972}; 5973 ; 5974////////////////////////////////////////////////////////////////////////////////; 5975/// Return true if the shared library of this class is currently in the a; 5976/// process's memory. Return false, after the shared library has been; 5977/// unloaded or if this is an 'emulated' class created from a file's StreamerInfo.; 5978 ; 5979Bool_t TClass::IsLoaded() const; 5980{; 5981 return fState == kHasTClassInit;; 5982}; 5983 ; 5984////////////////////////////////////////////////////////////////////////////////; 5985/// Returns true if this class inherits from TObject and if the start of; 5986/// the TObject parts is at the very beginning of the objects.; 5987/// Concretely this means that the following code is proper for this class:; 5988/// ~~~ {.cpp}; 5989/// ThisClass *ptr;; 5990/// void *void_ptr = (void)ptr;; 5991/// TObject *obj = (TObject*)void_ptr;; 5992/// ~~~; 5993/// This code would be wrong if 'ThisClass' did not inherit 'first' from; 5994/// TObject.; 5995 ; 5996Bool_t TClass::IsStartingWithTObject() const; 5997{; 5998 if (fProperty==(-1)) Property();; 5999 return TestBit(kStartWithTObject);; 6000}; 6001 ; 6002////////////////////////////////////////////////////////////////////////////////; 6003/// Return kTRUE is the class inherits from TObject.; 6004 ; 6005Bool_t TClass::IsTObject() const; 6006{; 6007 if (fProperty==(-1)) Property();; 6008 return TestBit(kIsTObject);; 6009}; 6010 ; 6011/////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:229556,inherit,inherits,229556,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"//////////////////; 1629/// Internal back-end function of plotOn() with named arguments; 1630 ; 1631RooPlot* RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& argList) const; 1632{; 1633 // Special handling here if argList contains RangeWithName argument with multiple; 1634 // range names -- Need to translate this call into multiple calls; 1635 ; 1636 RooCmdArg* rcmd = static_cast<RooCmdArg*>(argList.FindObject(""RangeWithName"")) ;; 1637 if (rcmd && TString(rcmd->getString(0)).Contains("","")) {; 1638 ; 1639 // List joint ranges as choice of normalization for all later processing; 1640 RooCmdArg rnorm = RooFit::NormRange(rcmd->getString(0)) ;; 1641 argList.Add(&rnorm) ;; 1642 ; 1643 for (const auto& rangeString : ROOT::Split(rcmd->getString(0), "","")) {; 1644 // Process each range with a separate command with a single range to be plotted; 1645 rcmd->setString(0, rangeString.c_str());; 1646 RooAbsReal::plotOn(frame,argList);; 1647 }; 1648 return frame ;; 1649 ; 1650 }; 1651 ; 1652 // Define configuration for this method; 1653 RooCmdConfig pc(""RooAbsReal::plotOn("" + std::string(GetName()) + "")"");; 1654 pc.defineString(""drawOption"",""DrawOption"",0,""L"") ;; 1655 pc.defineString(""projectionRangeName"",""ProjectionRange"",0,"""",true) ;; 1656 pc.defineString(""curveNameSuffix"",""CurveNameSuffix"",0,"""") ;; 1657 pc.defineString(""sliceCatState"",""SliceCat"",0,"""",true) ;; 1658 pc.defineDouble(""scaleFactor"",""Normalization"",0,1.0) ;; 1659 pc.defineInt(""scaleType"",""Normalization"",0,Relative) ;; 1660 pc.defineSet(""sliceSet"",""SliceVars"",0) ;; 1661 pc.defineObject(""sliceCatList"",""SliceCat"",0,nullptr,true) ;; 1662 // This dummy is needed for plotOn to recognize the ""SliceCatMany"" command.; 1663 // It is not used directly, but the ""SliceCat"" commands are nested in it.; 1664 // Removing this dummy definition results in ""ERROR: unrecognized command: SliceCatMany"".; 1665 pc.defineObject(""dummy1"",""SliceCatMany"",0) ;; 1666 pc.defineSet(""projSet"",""Project"",0) ;; 1667 pc.defineObject(""asymCat"",""Asymmetry"",",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:71241,config,configuration,71241,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"//////////////////; 1938/// Return the set of the schema rules if any.; 1939/// If create is true, create an empty set; 1940 ; 1941ROOT::Detail::TSchemaRuleSet* TClass::GetSchemaRules(Bool_t create); 1942{; 1943 if (create && fSchemaRules == nullptr) {; 1944 fSchemaRules = new ROOT::Detail::TSchemaRuleSet();; 1945 fSchemaRules->SetClass( this );; 1946 }; 1947 return fSchemaRules;; 1948}; 1949 ; 1950////////////////////////////////////////////////////////////////////////////////; 1951 ; 1952void TClass::AddImplFile(const char* filename, int line) {; 1953 // Currently reset the implementation file and line.; 1954 // In the close future, it will actually add this file and line; 1955 // to a ""list"" of implementation files.; 1956 ; 1957 fImplFileName = filename;; 1958 fImplFileLine = line;; 1959}; 1960 ; 1961////////////////////////////////////////////////////////////////////////////////; 1962/// Browse external object inherited from TObject.; 1963/// It passes through inheritance tree and calls TBrowser::Add; 1964/// in appropriate cases. Static function.; 1965 ; 1966Int_t TClass::AutoBrowse(TObject *obj, TBrowser *b); 1967{; 1968 if (!obj) return 0;; 1969 ; 1970 TAutoInspector insp(b);; 1971 obj->ShowMembers(insp);; 1972 return insp.fCount;; 1973}; 1974 ; 1975////////////////////////////////////////////////////////////////////////////////; 1976/// Browse objects of of the class described by this TClass object.; 1977 ; 1978Int_t TClass::Browse(void *obj, TBrowser *b) const; 1979{; 1980 if (!obj) return 0;; 1981 ; 1982 TClass *actual = GetActualClass(obj);; 1983 if (IsTObject()) {; 1984 // Call TObject::Browse.; 1985 ; 1986 if (!fIsOffsetStreamerSet) {; 1987 CalculateStreamerOffset();; 1988 }; 1989 TObject* realTObject = (TObject*)((size_t)obj + fOffsetStreamer);; 1990 realTObject->Browse(b);; 1991 return 1;; 1992 } else if (actual != this) {; 1993 return actual->Browse(obj, b);; 1994 } else if (GetCollectionProxy()) {; 1995 ; 1996 // do something useful.; 1997 ; 1998 } e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:74183,inherit,inheritance,74183,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"//////////////////; 2005/// Return the set of the schema rules if any.; 2006/// If create is true, create an empty set; 2007 ; 2008ROOT::Detail::TSchemaRuleSet* TClass::GetSchemaRules(Bool_t create); 2009{; 2010 if (create && fSchemaRules == nullptr) {; 2011 fSchemaRules = new ROOT::Detail::TSchemaRuleSet();; 2012 fSchemaRules->SetClass( this );; 2013 }; 2014 return fSchemaRules;; 2015}; 2016 ; 2017////////////////////////////////////////////////////////////////////////////////; 2018 ; 2019void TClass::AddImplFile(const char* filename, int line) {; 2020 // Currently reset the implementation file and line.; 2021 // In the close future, it will actually add this file and line; 2022 // to a ""list"" of implementation files.; 2023 ; 2024 fImplFileName = filename;; 2025 fImplFileLine = line;; 2026}; 2027 ; 2028////////////////////////////////////////////////////////////////////////////////; 2029/// Browse external object inherited from TObject.; 2030/// It passes through inheritance tree and calls TBrowser::Add; 2031/// in appropriate cases. Static function.; 2032 ; 2033Int_t TClass::AutoBrowse(TObject *obj, TBrowser *b); 2034{; 2035 if (!obj) return 0;; 2036 ; 2037 TAutoInspector insp(b);; 2038 obj->ShowMembers(insp);; 2039 return insp.fCount;; 2040}; 2041 ; 2042////////////////////////////////////////////////////////////////////////////////; 2043/// Browse objects of of the class described by this TClass object.; 2044 ; 2045Int_t TClass::Browse(void *obj, TBrowser *b) const; 2046{; 2047 if (!obj) return 0;; 2048 ; 2049 TClass *actual = GetActualClass(obj);; 2050 if (IsTObject()) {; 2051 // Call TObject::Browse.; 2052 ; 2053 if (!fIsOffsetStreamerSet) {; 2054 CalculateStreamerOffset();; 2055 }; 2056 TObject* realTObject = (TObject*)((size_t)obj + fOffsetStreamer);; 2057 realTObject->Browse(b);; 2058 return 1;; 2059 } else if (actual != this) {; 2060 return actual->Browse(obj, b);; 2061 } else if (GetCollectionProxy()) {; 2062 ; 2063 // do something useful.; 2064 ; 2065 } e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:76934,inherit,inheritance,76934,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"///////////////; 2831 /// \brief Execute a user-defined accumulation operation on the processed column values in each processing slot.; 2832 /// \tparam F The type of the aggregator callable. Automatically deduced.; 2833 /// \tparam U The type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced.; 2834 /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; 2835 /// \param[in] aggregator A callable with signature `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; 2836 /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; 2837 /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; 2838 /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); 2839 /// \return the result of the aggregation wrapped in a RResultPtr.; 2840 ///; 2841 /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; 2842 /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; 2843 /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; 2844 /// the value of the column columnName.; 2845 /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; 2846 /// Otherwise the signature of aggregator must be `void(U&,T)`.; 2847 ///; 2848 /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; 2849 /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; 2850 /// If its signature is `void(st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:158727,variab,variable,158727,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,"/////////////; 327/// Return specified argument.; 328 ; 329char *TApplication::Argv(Int_t index) const; 330{; 331 if (fArgv) {; 332 if (index >= fArgc) {; 333 Error(""Argv"", ""index (%d) >= number of arguments (%d)"", index, fArgc);; 334 return nullptr;; 335 }; 336 return fArgv[index];; 337 }; 338 return nullptr;; 339}; 340 ; 341////////////////////////////////////////////////////////////////////////////////; 342/// Get and handle command line options. Arguments handled are removed; 343/// from the argument array. See CommandLineOptionsHelp.h for options.; 344 ; 345void TApplication::GetOptions(Int_t *argc, char **argv); 346{; 347 static char null[1] = { """" };; 348 ; 349 fNoLog = kFALSE;; 350 fQuit = kFALSE;; 351 fFiles = nullptr;; 352 ; 353 if (!argc); 354 return;; 355 ; 356 int i, j;; 357 TString pwd;; 358 ; 359 for (i = 1; i < *argc; i++) {; 360 if (!strcmp(argv[i], ""-?"") || !strncmp(argv[i], ""-h"", 2) ||; 361 !strncmp(argv[i], ""--help"", 6)) {; 362 fprintf(stderr, kCommandLineOptionsHelp);; 363 Terminate(0);; 364 } else if (!strncmp(argv[i], ""--version"", 9)) {; 365 fprintf(stderr, ""ROOT Version: %s\n"", gROOT->GetVersion());; 366 fprintf(stderr, ""Built for %s on %s\n"",; 367 gSystem->GetBuildArch(),; 368 gROOT->GetGitDate());; 369 ; 370 fprintf(stderr, ""From %s@%s\n"",; 371 gROOT->GetGitBranch(),; 372 gROOT->GetGitCommit());; 373 ; 374 Terminate(0);; 375 } else if (!strcmp(argv[i], ""-config"")) {; 376 fprintf(stderr, ""ROOT ./configure options:\n%s\n"", gROOT->GetConfigOptions());; 377 Terminate(0);; 378 } else if (!strcmp(argv[i], ""-a"")) {; 379 fprintf(stderr, ""ROOT splash screen is not visible with root.exe, use root instead.\n"");; 380 Terminate(0);; 381 } else if (!strcmp(argv[i], ""-b"")) {; 382 MakeBatch();; 383 argv[i] = null;; 384 } else if (!strcmp(argv[i], ""-n"")) {; 385 fNoLog = kTRUE;; 386 argv[i] = null;; 387 } else if (!strcmp(argv[i], ""-t"")) {; 388 ROOT::EnableImplicitMT();; 389 // EnableImplicitMT() only enables thread safety if IMT was configured;; 390 // enabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:13043,config,config,13043,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['config'],['config']
Modifiability,"///////////; 251/// Delete this object. Typically called as a command via the interpreter.; 252/// Normally use ""delete"" operator when object has been allocated on the heap.; 253 ; 254void TObject::Delete(Option_t *); 255{; 256 if (IsOnHeap()) {; 257 // Delete object from CINT symbol table so it can not be used anymore.; 258 // CINT object are always on the heap.; 259 gInterpreter->DeleteGlobal(this);; 260 ; 261 delete this;; 262 }; 263}; 264 ; 265 ; 266////////////////////////////////////////////////////////////////////////////////; 267/// Computes distance from point (px,py) to the object.; 268/// This member function must be implemented for each graphics primitive.; 269/// This default function returns a big number (999999).; 270 ; 271Int_t TObject::DistancetoPrimitive(Int_t, Int_t); 272{; 273 // AbstractMethod(""DistancetoPrimitive"");; 274 return 999999;; 275}; 276 ; 277////////////////////////////////////////////////////////////////////////////////; 278/// Default Draw method for all objects; 279 ; 280void TObject::Draw(Option_t *option); 281{; 282 AppendPad(option);; 283}; 284 ; 285////////////////////////////////////////////////////////////////////////////////; 286/// Draw class inheritance tree of the class to which this object belongs.; 287/// If a class B inherits from a class A, description of B is drawn; 288/// on the right side of description of A.; 289/// Member functions overridden by B are shown in class A with a blue line; 290/// crossing-out the corresponding member function.; 291/// The following picture is the class inheritance tree of class TPaveLabel:; 292///; 293/// \image html base_object.png; 294 ; 295void TObject::DrawClass() const; 296{; 297 IsA()->Draw();; 298}; 299 ; 300////////////////////////////////////////////////////////////////////////////////; 301/// Draw a clone of this object in the current selected pad with:; 302/// `gROOT->SetSelectedPad(c1)`.; 303/// If pad was not selected - `gPad` will be used.; 304 ; 305TObject *TObject::Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:10119,inherit,inheritance,10119,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"///////////; 2568/// Check whether this canvas is to be drawn in grayscale mode.; 2569 ; 2570Bool_t TCanvas::IsGrayscale(); 2571{; 2572 return TestBit(kIsGrayscale);; 2573}; 2574 ; 2575////////////////////////////////////////////////////////////////////////////////; 2576/// Set whether this canvas should be painted in grayscale, and re-paint; 2577/// it if necessary.; 2578 ; 2579void TCanvas::SetGrayscale(Bool_t set /*= kTRUE*/); 2580{; 2581 if (IsGrayscale() == set) return;; 2582 SetBit(kIsGrayscale, set);; 2583 if (IsWeb()) {; 2584 Modified();; 2585 UpdateAsync();; 2586 } else {; 2587 Paint(); // update canvas and all sub-pads, unconditionally!; 2588 }; 2589}; 2590 ; 2591////////////////////////////////////////////////////////////////////////////////; 2592/// Probably, TPadPainter must be placed in a separate ROOT module -; 2593/// ""padpainter"" (the same as ""histpainter""). But now, it's directly in a; 2594/// gpad dir, so, in case of default painter, no *.so should be loaded,; 2595/// no need in plugin managers.; 2596/// May change in future.; 2597 ; 2598void TCanvas::CreatePainter(); 2599{; 2600 //Even for batch mode painter is still required, just to delegate; 2601 //some calls to batch ""virtual X"".; 2602 if (!UseGL() || fBatch) {; 2603 fPainter = nullptr;; 2604 if (fCanvasImp) fPainter = fCanvasImp->CreatePadPainter();; 2605 if (!fPainter) fPainter = new TPadPainter; // Do not need plugin manager for this!; 2606 } else {; 2607 fPainter = TVirtualPadPainter::PadPainter(""gl"");; 2608 if (!fPainter) {; 2609 Error(""CreatePainter"", ""GL Painter creation failed! Will use default!"");; 2610 fPainter = new TPadPainter;; 2611 fUseGL = kFALSE;; 2612 }; 2613 }; 2614}; 2615 ; 2616////////////////////////////////////////////////////////////////////////////////; 2617/// Access and (probably) creation of pad painter.; 2618 ; 2619TVirtualPadPainter *TCanvas::GetCanvasPainter(); 2620{; 2621 if (!fPainter) CreatePainter();; 2622 return fPainter;; 2623}; 2624 ; 2625 ; 2626///////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8cxx_source.html:84203,plugin,plugin,84203,doc/master/TCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8cxx_source.html,1,['plugin'],['plugin']
Modifiability,"/////////; 472/// define the input trees for signal and background from single input tree,; 473/// containing both signal and background events distinguished by the type; 474/// identifiers: SigCut and BgCut; 475 ; 476void TMVA::DataLoader::SetInputTrees( TTree* inputTree, const TCut& SigCut, const TCut& BgCut ); 477{; 478 AddTree( inputTree, ""Signal"", 1.0, SigCut, Types::kMaxTreeType );; 479 AddTree( inputTree, ""Background"", 1.0, BgCut , Types::kMaxTreeType );; 480}; 481 ; 482////////////////////////////////////////////////////////////////////////////////; 483/// user inserts discriminating variable in data set info; 484 ; 485void TMVA::DataLoader::AddVariable( const TString& expression, const TString& title, const TString& unit,; 486 char type, Double_t min, Double_t max ); 487{; 488 DefaultDataSetInfo().AddVariable( expression, title, unit, min, max, type );; 489}; 490 ; 491////////////////////////////////////////////////////////////////////////////////; 492/// user inserts discriminating variable in data set info; 493 ; 494void TMVA::DataLoader::AddVariable( const TString& expression, char type,; 495 Double_t min, Double_t max ); 496{; 497 DefaultDataSetInfo().AddVariable( expression, """", """", min, max, type );; 498}; 499 ; 500////////////////////////////////////////////////////////////////////////////////; 501/// user inserts discriminating array of variables in data set info; 502/// in case input tree provides an array of values; 503 ; 504void TMVA::DataLoader::AddVariablesArray(const TString &expression, int size, char type,; 505 Double_t min, Double_t max); 506{; 507 DefaultDataSetInfo().AddVariablesArray(expression, size, """", """", min, max, type);; 508}; 509////////////////////////////////////////////////////////////////////////////////; 510/// user inserts target in data set info; 511 ; 512void TMVA::DataLoader::AddTarget( const TString& expression, const TString& title, const TString& unit,; 513 Double_t min, Double_t max ); 514{; 515 if( fAnalysisType == Ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:19566,variab,variable,19566,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,1,['variab'],['variable']
Modifiability,"////////; 404/// Executes a Python command within the current Python environment.; 405///; 406/// This function initializes the Python environment if it is not already; 407/// initialized. It then executes the specified Python command string using the; 408/// Python C API.; 409///; 410/// In the Python command, you can change the value of a special TPyResult; 411/// object returned by TPyBuffer(). If the optional result parameter is; 412/// non-zero, the result parameter will be swapped with a std::any variable on; 413/// the Python side. You need to define this variable yourself, and it needs to; 414/// be of type std::any and its name needs to be `""_anyresult""` by default.; 415/// Like this, you can pass information from Python back to C++.; 416///; 417/// \param cmd The Python command to be executed as a string.; 418/// \param result Optional pointer to a std::any object that can be used to; 419/// transfer results from Python to C++.; 420/// \param resultName Name of the Python variable that is swapped over to the std::any result.; 421/// The default value is `""_anyresult""`.; 422/// \return bool Returns `true` if the command was successfully executed,; 423/// otherwise returns `false`.; 424 ; 425Bool_t TPython::Exec(const char *cmd, std::any *result, std::string const &resultName); 426{; 427 // setup; 428 if (!Initialize()); 429 return kFALSE;; 430 ; 431 PyGILRAII gilRaii;; 432 ; 433 std::stringstream command;; 434 // Add the actual command; 435 command << cmd;; 436 // Swap the std::any with the one in the C++ world if required; 437 if (result) {; 438 command << ""; ROOT.Internal.SwapWithObjAtAddr['std::any']("" << resultName << "", ""; 439 << reinterpret_cast<std::intptr_t>(result) << "")"";; 440 }; 441 ; 442 // execute the command; 443 PyObject *pyObjectResult =; 444 PyRun_String(const_cast<char *>(command.str().c_str()), Py_file_input, gMainDict, gMainDict);; 445 ; 446 // test for error; 447 if (pyObjectResult) {; 448 Py_DECREF(pyObjectResult);; 449 return kTRUE;; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:14157,variab,variable,14157,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///////; 262/// declaration of configuration options; 263 ; 264void TMVA::Reader::DeclareOptions(); 265{; 266 if (gTools().CheckForSilentOption( GetOptions() )) Log().InhibitOutput(); // make sure is silent if wanted to; 267 ; 268 DeclareOptionRef( fVerbose, ""V"", ""Verbose flag"" );; 269 DeclareOptionRef( fColor, ""Color"", ""Color flag (default True)"" );; 270 DeclareOptionRef( fSilent, ""Silent"", ""Boolean silent flag (default False)"" );; 271 DeclareOptionRef( fCalculateError, ""Error"", ""Calculates errors (default False)"" );; 272}; 273 ; 274////////////////////////////////////////////////////////////////////////////////; 275/// destructor; 276 ; 277TMVA::Reader::~Reader( void ); 278{; 279 delete fDataSetManager; // DSMTEST; 280 ; 281 delete fLogger;; 282 ; 283 for (auto it=fMethodMap.begin(); it!=fMethodMap.end(); it++){; 284 MethodBase * kl = dynamic_cast<TMVA::MethodBase*>(it->second);; 285 delete kl;; 286 }; 287}; 288 ; 289////////////////////////////////////////////////////////////////////////////////; 290/// default initialisation (no member variables); 291 ; 292void TMVA::Reader::Init( void ); 293{; 294 if (Verbose()) fLogger->SetMinType( kVERBOSE );; 295 ; 296 gConfig().SetUseColor( fColor );; 297 gConfig().SetSilent ( fSilent );; 298}; 299 ; 300////////////////////////////////////////////////////////////////////////////////; 301/// Add a float variable or expression to the reader; 302 ; 303void TMVA::Reader::AddVariable( const TString& expression, Float_t* datalink ); 304{; 305 DataInfo().AddVariable( expression, """", """", 0, 0, 'F', kFALSE ,(void*)datalink ); // <= should this be F or rather T?; 306}; 307 ; 308////////////////////////////////////////////////////////////////////////////////; 309 ; 310void TMVA::Reader::AddVariable( const TString& expression, Int_t* datalink ); 311{; 312 Log() << kFATAL << ""Reader::AddVariable( const TString& expression, Int_t* datalink ), this function is deprecated, please provide all variables to the reader as floats"" << Endl;; 313 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:9857,variab,variables,9857,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variables']
Modifiability,"//////; 1182/// Get low error on Y.; 1183 ; 1184Double_t TGraphAsymmErrors::GetErrorYlow(Int_t i) const; 1185{; 1186 if (i<0 || i>fNpoints) return -1;; 1187 if (fEYlow) return fEYlow[i];; 1188 return -1;; 1189}; 1190 ; 1191 ; 1192////////////////////////////////////////////////////////////////////////////////; 1193/// Adds all graphs with asymmetric errors from the collection to this graph.; 1194/// Returns the total number of points in the result or -1 in case of an error.; 1195 ; 1196Int_t TGraphAsymmErrors::Merge(TCollection* li); 1197{; 1198 TIter next(li);; 1199 while (TObject* o = next()) {; 1200 TGraph *g = dynamic_cast<TGraph*>(o);; 1201 if (!g) {; 1202 Error(""Merge"",; 1203 ""Cannot merge - an object which doesn't inherit from TGraph found in the list"");; 1204 return -1;; 1205 }; 1206 int n0 = GetN();; 1207 int n1 = n0+g->GetN();; 1208 Set(n1);; 1209 Double_t * x = g->GetX();; 1210 Double_t * y = g->GetY();; 1211 Double_t * exlow = g->GetEXlow();; 1212 Double_t * exhigh = g->GetEXhigh();; 1213 Double_t * eylow = g->GetEYlow();; 1214 Double_t * eyhigh = g->GetEYhigh();; 1215 for (Int_t i = 0 ; i < g->GetN(); i++) {; 1216 SetPoint(n0+i, x[i], y[i]);; 1217 if (exlow) fEXlow[n0+i] = exlow[i];; 1218 if (exhigh) fEXhigh[n0+i] = exhigh[i];; 1219 if (eylow) fEYlow[n0+i] = eylow[i];; 1220 if (eyhigh) fEYhigh[n0+i] = eyhigh[i];; 1221 }; 1222 }; 1223 return GetN();; 1224}; 1225 ; 1226////////////////////////////////////////////////////////////////////////////////; 1227/// Print graph and errors values.; 1228 ; 1229void TGraphAsymmErrors::Print(Option_t *) const; 1230{; 1231 for (Int_t i=0;i<fNpoints;i++) {; 1232 printf(""x[%d]=%g, y[%d]=%g, exl[%d]=%g, exh[%d]=%g, eyl[%d]=%g, eyh[%d]=%g\n""; 1233 ,i,fX[i],i,fY[i],i,fEXlow[i],i,fEXhigh[i],i,fEYlow[i],i,fEYhigh[i]);; 1234 }; 1235}; 1236 ; 1237 ; 1238////////////////////////////////////////////////////////////////////////////////; 1239/// Save primitive as a C++ statement(s) on output stream out.; 1240 ; 1241void TGraphAsymmE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:41574,inherit,inherit,41574,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['inherit'],['inherit']
Modifiability,"//////; 280///; 281/// Calculates partial derivatives of theoretical function; 282///; 283/// Input:; 284/// - fX - vector of data point; 285///; 286/// Output:; 287/// - DF - array of derivatives; 288///; 289/// ARITHM.F: Converted from CERNLIB; 290 ; 291void TFumili::Derivatives(Double_t *df,Double_t *fX){; 292 Double_t ff,ai,hi,y,pi;; 293 y = EvalTFN(df,fX);; 294 for (Int_t i=0;i<fNpar;i++) {; 295 df[i]=0;; 296 if(fPL0[i]>0.) {; 297 ai = fA[i]; // save current parameter value; 298 hi = 0.01*fPL0[i]; // diff step; 299 pi = fRP*TMath::Abs(ai);; 300 if (hi<pi) hi = pi; // if diff step is less than precision; 301 fA[i] = ai+hi;; 302 ; 303 if (fA[i]>fAMX[i]) { // if param is out of limits; 304 fA[i] = ai-hi;; 305 hi = -hi;; 306 if (fA[i]<fAMN[i]) { // again out of bounds; 307 fA[i] = fAMX[i]; // set param to high limit; 308 hi = fAMX[i]-ai;; 309 if (fAMN[i]-ai+hi<0) { // if hi < (ai-fAMN); 310 fA[i]=fAMN[i];; 311 hi=fAMN[i]-ai;; 312 }; 313 }; 314 }; 315 ff = EvalTFN(df,fX);; 316 df[i] = (ff-y)/hi;; 317 fA[i] = ai;; 318 }; 319 }; 320}; 321 ; 322 ; 323////////////////////////////////////////////////////////////////////////////////; 324/// Evaluate the minimisation function; 325///; 326/// Input parameters:; 327/// - npar: number of currently variable parameters; 328/// - par: array of (constant and variable) parameters; 329/// - flag: Indicates what is to be calculated; 330/// - grad: array of gradients; 331///; 332/// Output parameters:; 333/// - fval: The calculated function value.; 334/// - grad: The vector of first derivatives.; 335///; 336/// The meaning of the parameters par is of course defined by the user,; 337/// who uses the values of those parameters to calculate their function value.; 338/// The starting values must be specified by the user.; 339///; 340/// Inside FCN user has to define Z-matrix by means TFumili::GetZ; 341/// and TFumili::Derivatives,; 342/// set theoretical function by means of TFumili::SetUserFunc,; 343/// but first - pass number of parame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:9996,variab,variable,9996,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,2,['variab'],['variable']
Modifiability,"//////; 285 /// returns configured window X position (-1 - default); 286 int GetX() const { return fX; }; 287 ; 288 /////////////////////////////////////////////////////////////////////////; 289 /// returns configured window Y position (-1 - default); 290 int GetY() const { return fY; }; 291 ; 292 void SetConnLimit(unsigned lmt = 0);; 293 ; 294 unsigned GetConnLimit() const;; 295 ; 296 void SetConnToken(const std::string &token = """");; 297 ; 298 /////////////////////////////////////////////////////////////////////////; 299 /// configures maximal queue length of data which can be held by window; 300 void SetMaxQueueLength(unsigned len = 10) { fMaxQueueLength = len; }; 301 ; 302 /////////////////////////////////////////////////////////////////////////; 303 /// Return maximal queue length of data which can be held by window; 304 unsigned GetMaxQueueLength() const { return fMaxQueueLength; }; 305 ; 306 /////////////////////////////////////////////////////////////////////////; 307 /// configures that only native (own-created) connections are allowed; 308 void SetNativeOnlyConn(bool on = true) { fNativeOnlyConn = on; }; 309 ; 310 /////////////////////////////////////////////////////////////////////////; 311 /// returns true if only native (own-created) connections are allowed; 312 bool IsNativeOnlyConn() const { return fNativeOnlyConn; }; 313 ; 314 /////////////////////////////////////////////////////////////////////////; 315 /// Configure if authentication key in connection string is required; 316 void SetRequireAuthKey(bool on) { fRequireAuthKey = on; }; 317 ; 318 /////////////////////////////////////////////////////////////////////////; 319 /// returns true if authentication string is required; 320 bool IsRequireAuthKey() const { return fRequireAuthKey; }; 321 ; 322 /////////////////////////////////////////////////////////////////////////; 323 /// Configure if window can access local files via currentdir/ path of http server; 324 void SetUseCurrentDir(bool on = true) { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:14332,config,configures,14332,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,1,['config'],['configures']
Modifiability,"//////; 288 /// returns configured window X position (-1 - default); 289 int GetX() const { return fX; }; 290 ; 291 /////////////////////////////////////////////////////////////////////////; 292 /// returns configured window Y position (-1 - default); 293 int GetY() const { return fY; }; 294 ; 295 void SetConnLimit(unsigned lmt = 0);; 296 ; 297 unsigned GetConnLimit() const;; 298 ; 299 void SetConnToken(const std::string &token = """");; 300 ; 301 /////////////////////////////////////////////////////////////////////////; 302 /// configures maximal queue length of data which can be held by window; 303 void SetMaxQueueLength(unsigned len = 10) { fMaxQueueLength = len; }; 304 ; 305 /////////////////////////////////////////////////////////////////////////; 306 /// Return maximal queue length of data which can be held by window; 307 unsigned GetMaxQueueLength() const { return fMaxQueueLength; }; 308 ; 309 /////////////////////////////////////////////////////////////////////////; 310 /// configures that only native (own-created) connections are allowed; 311 void SetNativeOnlyConn(bool on = true) { fNativeOnlyConn = on; }; 312 ; 313 /////////////////////////////////////////////////////////////////////////; 314 /// returns true if only native (own-created) connections are allowed; 315 bool IsNativeOnlyConn() const { return fNativeOnlyConn; }; 316 ; 317 /////////////////////////////////////////////////////////////////////////; 318 /// Configure if authentication key in connection string is required; 319 void SetRequireAuthKey(bool on) { fRequireAuthKey = on; }; 320 ; 321 /////////////////////////////////////////////////////////////////////////; 322 /// returns true if authentication string is required; 323 bool IsRequireAuthKey() const { return fRequireAuthKey; }; 324 ; 325 /////////////////////////////////////////////////////////////////////////; 326 /// Configure if window can access local files via currentdir/ path of http server; 327 void SetUseCurrentDir(bool on = true) { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindow_8hxx_source.html:14483,config,configures,14483,doc/master/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindow_8hxx_source.html,1,['config'],['configures']
Modifiability,"////; 1842/// Rebin only the Y axis.; 1843/// see Rebin2D; 1844 ; 1845TProfile2D * TProfile2D::RebinY(Int_t ngroup,const char * newname ) {; 1846 return Rebin2D(1,ngroup,newname);; 1847}; 1848 ; 1849////////////////////////////////////////////////////////////////////////////////; 1850/// Save primitive as a C++ statement(s) on output stream out.; 1851///; 1852/// Note the following restrictions in the code generated:; 1853/// - variable bin size not implemented; 1854/// - SetErrorOption not implemented; 1855 ; 1856void TProfile2D::SavePrimitive(std::ostream &out, Option_t *option /*= """"*/); 1857{; 1858 char quote = '""';; 1859 out <<"" ""<<std::endl;; 1860 out <<"" ""<<ClassName()<<"" *"";; 1861 ; 1862 out << GetName() << "" = new "" << ClassName() << ""("" << quote; 1863 << GetName() << quote << "","" << quote<< GetTitle() << quote; 1864 << "","" << GetXaxis()->GetNbins();; 1865 out << "","" << GetXaxis()->GetXmin(); 1866 << "","" << GetXaxis()->GetXmax();; 1867 out << "","" << GetYaxis()->GetNbins();; 1868 out << "","" << GetYaxis()->GetXmin(); 1869 << "","" << GetYaxis()->GetXmax();; 1870 out << "","" << fZmin; 1871 << "","" << fZmax;; 1872 out << "");"" << std::endl;; 1873 ; 1874 ; 1875 // save bin entries; 1876 Int_t bin;; 1877 for (bin=0;bin<fNcells;bin++) {; 1878 Double_t bi = GetBinEntries(bin);; 1879 if (bi) {; 1880 out<<"" ""<<GetName()<<""->SetBinEntries(""<<bin<<"",""<<bi<<"");""<<std::endl;; 1881 }; 1882 }; 1883 //save bin contents; 1884 for (bin=0;bin<fNcells;bin++) {; 1885 Double_t bc = fArray[bin];; 1886 if (bc) {; 1887 out<<"" ""<<GetName()<<""->SetBinContent(""<<bin<<"",""<<bc<<"");""<<std::endl;; 1888 }; 1889 }; 1890 // save bin errors; 1891 if (fSumw2.fN) {; 1892 for (bin=0;bin<fNcells;bin++) {; 1893 Double_t be = TMath::Sqrt(fSumw2.fArray[bin]);; 1894 if (be) {; 1895 out<<"" ""<<GetName()<<""->SetBinError(""<<bin<<"",""<<be<<"");""<<std::endl;; 1896 }; 1897 }; 1898 }; 1899 ; 1900 TH1::SavePrimitiveHelp(out, GetName(), option);; 1901}; 1902 ; 1903//////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:67784,variab,variable,67784,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"////; 258/// Equality operator when comparing to another RooAbsArg.; 259/// Only functional when the other arg is a RooAbsReal; 260 ; 261bool RooAbsReal::operator==(const RooAbsArg& other) const; 262{; 263 const RooAbsReal* otherReal = dynamic_cast<const RooAbsReal*>(&other) ;; 264 return otherReal ? operator==(otherReal->getVal()) : false ;; 265}; 266 ; 267 ; 268////////////////////////////////////////////////////////////////////////////////; 269 ; 270bool RooAbsReal::isIdentical(const RooAbsArg& other, bool assumeSameType) const; 271{; 272 if (!assumeSameType) {; 273 const RooAbsReal* otherReal = dynamic_cast<const RooAbsReal*>(&other) ;; 274 return otherReal ? operator==(otherReal->getVal()) : false ;; 275 } else {; 276 return getVal() == static_cast<const RooAbsReal&>(other).getVal();; 277 }; 278}; 279 ; 280 ; 281////////////////////////////////////////////////////////////////////////////////; 282/// Return this variable's title string. If appendUnit is true and; 283/// this variable has units, also append a string "" (<unit>)"".; 284 ; 285TString RooAbsReal::getTitle(bool appendUnit) const; 286{; 287 if(appendUnit && 0 != strlen(getUnit())) {; 288 return std::string{GetTitle()} + "" ("" + getUnit() + "")"";; 289 }; 290 return GetTitle();; 291}; 292 ; 293 ; 294 ; 295////////////////////////////////////////////////////////////////////////////////; 296/// Return value of object. If the cache is clean, return the; 297/// cached value, otherwise recalculate on the fly and refill; 298/// the cache; 299 ; 300double RooAbsReal::getValV(const RooArgSet* nset) const; 301{; 302 if (nset && nset->uniqueId().value() != _lastNormSetId) {; 303 const_cast<RooAbsReal*>(this)->setProxyNormSet(nset);; 304 _lastNormSetId = nset->uniqueId().value();; 305 }; 306 ; 307 if (isValueDirtyAndClear()) {; 308 _value = traceEval(nullptr) ;; 309 // clearValueDirty() ;; 310 }; 311 ; 312 return hideOffset() ? _value + offset() : _value;; 313}; 314 ; 315 ; 316//////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:9562,variab,variable,9562,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"///; 1551/// Check if given observable can be safely generated using the; 1552/// pdfs internal generator mechanism (if that existsP). Observables; 1553/// on which a PDF depends via more than route are not safe; 1554/// for use with internal generators because they introduce; 1555/// correlations not known to the internal generator; 1556 ; 1557bool RooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; 1558{; 1559 // Arg must be direct server of self; 1560 if (!findServer(arg.GetName())) return false ;; 1561 ; 1562 // There must be no other dependency routes; 1563 for (const auto server : _serverList) {; 1564 if(server == &arg) continue;; 1565 if(server->dependsOn(arg)) {; 1566 return false ;; 1567 }; 1568 }; 1569 ; 1570 return true ;; 1571}; 1572 ; 1573 ; 1574////////////////////////////////////////////////////////////////////////////////; 1575/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1576/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1577/// constant and not be used for event generation; 1578/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg to change behaviour of generateBinned(); 1579/// \return RooDataHist *, to be managed by caller.; 1580///; 1581/// Generate the specified number of events or expectedEvents() if not specified.; 1582///; 1583/// Any variables of this PDF that are not in whatVars will use their; 1584/// current values and be treated as fixed parameters. Returns zero; 1585/// in case of an error. The caller takes ownership of the returned; 1586/// dataset.; 1587///; 1588/// The following named arguments are supported; 1589/// | Type of CmdArg | Effect on generation; 1590/// |---------------------------|-----------------------; 1591/// | `Name(const char* name)` | Name of the output dataset; 1592/// | `Verbose(bool flag)` | Print informational messages during event generation; 1593/// | `NumEvents(int nevt)` |",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:76932,variab,variables,76932,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"///< List of geometries; 155 TSeqCollection *fBrowsers; ///< List of browsers; 156 TSeqCollection *fSpecials; ///< List of special objects; 157 TSeqCollection *fCleanups; ///< List of recursiveRemove collections; 158 TSeqCollection *fMessageHandlers; ///< List of message handlers; 159 TSeqCollection *fStreamerInfo; ///< List of active StreamerInfo classes; 160 TCollection *fClassGenerators; ///< List of user defined class generators;; 161 TSeqCollection *fSecContexts; ///< List of security contexts (TSecContext); 162 TSeqCollection *fProofs; ///< List of proof sessions; 163 TSeqCollection *fClipboard; ///< List of clipboard objects; 164 TSeqCollection *fDataSets; ///< List of data sets (TDSet or TChain); 165 AListOfEnums_t fEnums; ///< List of enum types; 166 TProcessUUID *fUUIDs; ///< Pointer to TProcessID managing TUUIDs; 167 TFolder *fRootFolder; ///< top level folder //root; 168 TList *fBrowsables; ///< List of browsables; 169 TPluginManager *fPluginManager; ///< Keeps track of plugin library handlers; 170 TString fCutClassName; ///< Name of default CutG class in graphics editor; 171 TString fDefCanvasName; ///< Name of default canvas; 172 ; 173 TROOT(); ///< Only used by Dictionary; 174 void InitSystem(); ///< Operating System interface; 175 void InitThreads(); ///< Initialize threads library; 176 void InitInterpreter(); ///< Initialize interpreter (cling); 177 void ReadGitInfo(); ///< Read Git commit SHA1 and branch name; 178 void *operator new(size_t l) { return TObject::operator new(l); }; 179 void *operator new(size_t l, void *ptr) { return TObject::operator new(l,ptr); }; 180 ; 181 friend class ::ROOT::Internal::TROOTAllocator;; 182 ; 183 TListOfFunctions*GetGlobalFunctions();; 184 ; 185public:; 186 ; 187 typedef std::vector<std::pair<std::string, int> > FwdDeclArgsToKeepCollection_t;; 188 ; 189 TROOT(const char *name, const char *title, VoidFuncPtr_t *initfunc = nullptr);; 190 virtual ~TROOT();; 191 void AddClass(TClass *cl);; 192 void AddClassGenerator(TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:7364,plugin,plugin,7364,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,2,['plugin'],['plugin']
Modifiability,"//; 1619/// Returns all group info in the UserGroup_t structure. The only active; 1620/// fields in the UserGroup_t structure for this call are:; 1621/// - fGid and fGroup; 1622/// The returned structure must be deleted by the user. In case of; 1623/// error 0 is returned.; 1624 ; 1625UserGroup_t *TSystem::GetGroupInfo(Int_t /*gid*/); 1626{; 1627 AbstractMethod(""GetGroupInfo"");; 1628 return nullptr;; 1629}; 1630 ; 1631////////////////////////////////////////////////////////////////////////////////; 1632/// Returns all group info in the UserGroup_t structure. The only active; 1633/// fields in the UserGroup_t structure for this call are:; 1634/// - fGid and fGroup; 1635/// If group = 0, returns current user's group. The returned structure; 1636/// must be deleted by the user. In case of error 0 is returned.; 1637 ; 1638UserGroup_t *TSystem::GetGroupInfo(const char * /*group*/); 1639{; 1640 AbstractMethod(""GetGroupInfo"");; 1641 return nullptr;; 1642}; 1643 ; 1644//---- environment manipulation ------------------------------------------------; 1645 ; 1646////////////////////////////////////////////////////////////////////////////////; 1647/// Set environment variable.; 1648 ; 1649void TSystem::Setenv(const char *, const char *); 1650{; 1651 AbstractMethod(""Setenv"");; 1652}; 1653 ; 1654////////////////////////////////////////////////////////////////////////////////; 1655/// Unset environment variable.; 1656 ; 1657void TSystem::Unsetenv(const char *name); 1658{; 1659 Setenv(name, """");; 1660}; 1661 ; 1662////////////////////////////////////////////////////////////////////////////////; 1663/// Get environment variable.; 1664 ; 1665const char *TSystem::Getenv(const char *); 1666{; 1667 AbstractMethod(""Getenv"");; 1668 return nullptr;; 1669}; 1670 ; 1671//---- System Logging ----------------------------------------------------------; 1672 ; 1673////////////////////////////////////////////////////////////////////////////////; 1674/// Open connection to system log daemon. For t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:52661,variab,variable,52661,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variable']
Modifiability,"//; 713/// Print key contents.; 714 ; 715void TKey::Print(Option_t *) const; 716{; 717 printf(""TKey Name = %s, Title = %s, Cycle = %d\n"",GetName(),GetTitle(),GetCycle());; 718}; 719 ; 720////////////////////////////////////////////////////////////////////////////////; 721/// To read a TObject* from the file.; 722///; 723/// The object associated to this key is read from the file into memory; 724/// Once the key structure is read (via Streamer) the class identifier; 725/// of the object is known.; 726/// Using the class identifier we find the TClass object for this class.; 727/// A TClass object contains a full description (i.e. dictionary) of the; 728/// associated class. In particular the TClass object can create a new; 729/// object of the class type it describes. This new object now calls its; 730/// Streamer function to rebuilt itself.; 731///; 732/// Use TKey::ReadObjectAny to read any object non-derived from TObject; 733///; 734/// ### Note; 735/// A C style cast can only be used in the case where the final class; 736/// of this object derives from TObject as a first inheritance, otherwise; 737/// one must use a dynamic_cast.; 738///; 739/// #### Example1: simplified case; 740/// ~~~{.cpp}; 741/// class MyClass : public TObject, public AnotherClass; 742/// ~~~; 743/// then on return, one get away with using:; 744/// ~~~{.cpp}; 745/// MyClass *obj = (MyClass*)key->ReadObj();; 746/// ~~~; 747///; 748/// #### Example2: Usual case (recommended unless performance is critical); 749/// ~~~{.cpp}; 750/// MyClass *obj = dynamic_cast<MyClass*>(key->ReadObj());; 751/// ~~~; 752/// which support also the more complex inheritance like:; 753/// ~~~{.cpp}; 754/// class MyClass : public AnotherClass, public TObject; 755/// ~~~; 756///; 757/// Of course, `dynamic_cast<>` can also be used in the example 1.; 758 ; 759TObject *TKey::ReadObj(); 760{; 761 TClass *cl = TClass::GetClass(fClassName.Data());; 762 if (!cl) {; 763 Error(""ReadObj"", ""Unknown class %s"", fClassName.Data());;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:26580,inherit,inheritance,26580,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"//reset only Integral, contents and Errors; 6533 ; 6534 int iaxis = 0;; 6535 if (axis == &fXaxis) iaxis = 1;; 6536 if (axis == &fYaxis) iaxis = 2;; 6537 if (axis == &fZaxis) iaxis = 3;; 6538 bool firstw = kTRUE;; 6539 Int_t binx,biny, binz = 0;; 6540 Int_t ix = 0,iy = 0,iz = 0;; 6541 Double_t bx,by,bz;; 6542 Int_t ncells = hold->GetNcells();; 6543 for (Int_t bin = 0; bin < ncells; ++bin) {; 6544 hold->GetBinXYZ(bin,binx,biny,binz);; 6545 bx = hold->GetXaxis()->GetBinCenter(binx);; 6546 ix = fXaxis.FindFixBin(bx);; 6547 if (fDimension > 1) {; 6548 by = hold->GetYaxis()->GetBinCenter(biny);; 6549 iy = fYaxis.FindFixBin(by);; 6550 if (fDimension > 2) {; 6551 bz = hold->GetZaxis()->GetBinCenter(binz);; 6552 iz = fZaxis.FindFixBin(bz);; 6553 }; 6554 }; 6555 // exclude underflow/overflow; 6556 double content = hold->RetrieveBinContent(bin);; 6557 if (content == 0) continue;; 6558 if (IsBinUnderflow(bin,iaxis) || IsBinOverflow(bin,iaxis) ) {; 6559 if (firstw) {; 6560 Warning(""ExtendAxis"",""Histogram %s has underflow or overflow in the axis that is extendable""; 6561 "" their content will be lost"",GetName() );; 6562 firstw= kFALSE;; 6563 }; 6564 continue;; 6565 }; 6566 Int_t ibin= GetBin(ix,iy,iz);; 6567 AddBinContent(ibin, content);; 6568 if (errors) {; 6569 fSumw2.fArray[ibin] += hold->GetBinErrorSqUnchecked(bin);; 6570 }; 6571 }; 6572 delete hold;; 6573}; 6574 ; 6575////////////////////////////////////////////////////////////////////////////////; 6576/// Recursively remove object from the list of functions; 6577 ; 6578void TH1::RecursiveRemove(TObject *obj); 6579{; 6580 // Rely on TROOT::RecursiveRemove to take the readlock.; 6581 ; 6582 if (fFunctions) {; 6583 if (!fFunctions->TestBit(kInvalidObject)) fFunctions->RecursiveRemove(obj);; 6584 }; 6585}; 6586 ; 6587////////////////////////////////////////////////////////////////////////////////; 6588/// Multiply this histogram by a constant c1.; 6589///; 6590/// `this = c1*this`; 6591///; 6592/// Note that both contents and err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:258625,extend,extendable,258625,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"/3]. TUnuran::TUnuran ; (; const TUnuran & ; ). delete . ◆ TUnuran() [3/3]. TUnuran::TUnuran ; (; TUnuran && ; ). delete . Member Function Documentation. ◆ GetDimension(). int TUnuran::GetDimension ; (; ); const. Return the dimension of unuran generator method. ; For 1D method returns 1 and for the multi-dimensional case must be equal to the distribution dimension. ; Definition at line 376 of file TUnuran.cxx. ◆ GetDistType(). int TUnuran::GetDistType ; (; ); const. Return the type of the distribution. ; See documentation of unuran_distr_get_type for the possible types of distributions. ; Definition at line 383 of file TUnuran.cxx. ◆ GetGenId(). std::string TUnuran::GetGenId ; (; ); const. Return an ID string about the unuran generator method. ; Definition at line 369 of file TUnuran.cxx. ◆ GetInfo(). std::string TUnuran::GetInfo ; (; bool ; extended = false). Return an information string about the used Unuran generator method. ; Parameters. extended: if true return some helper information about the existing options of the method. . Definition at line 362 of file TUnuran.cxx. ◆ GetRandom(). TRandom * TUnuran::GetRandom ; (; ). inline . Return instance of the random engine used. ; Definition at line 223 of file TUnuran.h. ◆ Init() [1/5]. bool TUnuran::Init ; (; const std::string & ; distr, . const std::string & ; method . ). Initialize with Unuran string API interface. ; See https://statmath.wu.ac.at/unuran/doc/unuran.html#StringAPI; Parameters. distr: UNU.RAN distribution string ; method: UNU.RAN method string. Here is an example using the string API: Tunuran unr;; unr.Init(""normal(3.,0.75); domain = (0,inf)"", ""method = tdr; c = 0"");. Definition at line 62 of file TUnuran.cxx. ◆ Init() [2/5]. bool TUnuran::Init ; (; const TUnuranContDist & ; distr, . const std::string & ; method = ""auto"" . ). Initialize method for continuous one-dimensional distribution. ; User must provide a distribution object (which is copied inside) and a string for a method. For the list of avai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuran.html:6510,extend,extended,6510,doc/master/classTUnuran.html,https://root.cern,https://root.cern/doc/master/classTUnuran.html,1,['extend'],['extended']
Modifiability,"/; 4316/// In case of a 3-Dim expression, one can generate a TProfile2D histogram; 4317/// instead of a TH3F histogram by specifying option=prof or option=profs.; 4318/// or option=profi or option=profg ; the trailing letter select the way; 4319/// the bin error are computed, See TProfile2D::SetErrorOption for; 4320/// details on the differences.; 4321/// The option=prof is automatically selected in case of z:y:x>>pf; 4322/// where pf is an existing TProfile2D histogram.; 4323///; 4324/// ### Making a 5D plot using GL; 4325///; 4326/// If option GL5D is specified together with 5 variables, a 5D plot is drawn; 4327/// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; 4328///; 4329/// ### Making a parallel coordinates plot; 4330///; 4331/// In case of a 2-Dim or more expression with the option=para, one can generate; 4332/// a parallel coordinates plot. With that option, the number of dimensions is; 4333/// arbitrary. Giving more than 4 variables without the option=para or; 4334/// option=candle or option=goff will produce an error.; 4335///; 4336/// ### Making a candle sticks chart; 4337///; 4338/// In case of a 2-Dim or more expression with the option=candle, one can generate; 4339/// a candle sticks chart. With that option, the number of dimensions is; 4340/// arbitrary. Giving more than 4 variables without the option=para or; 4341/// option=candle or option=goff will produce an error.; 4342///; 4343/// ### Normalizing the output histogram to 1; 4344///; 4345/// When option contains ""norm"" the output histogram is normalized to 1.; 4346///; 4347/// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; 4348///; 4349/// TTree::Draw can be used to fill a TEventList object (list of entry numbers); 4350/// instead of histogramming one variable.; 4351/// If varexp0 has the form >>elist , a TEventList object named ""elist""; 4352/// is created in the current directory. elist will contain the list; 4353/// of entry numbers satisfying th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:174729,variab,variables,174729,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/D:Table[2]/F:Ntracks/I:astring/C; otherwise branchDescriptor must be specified with the above syntax.; -If the type of the first variable is not specified, it is assumed to be ""/F""; -if the type of any other variable is not specified, the type of the previous; variable is assumed. eg; x:y:z (all variables are assumed of type ""F""; x/D:y:z (all variables are of type ""D""; x:y/D:z (x is type ""F"", y and z of type ""D""; -If the type is a string of characters. This will read; subsequent characters until a whitespace is found (whitespace; characters are considered to be blank, newline and tab). delimiter allows for the use of another delimiter besides whitespace.; This provides support for direct import of common data file formats; like csv. If delimiter != ' ' and branchDescriptor == """", then the; branch description is taken from the first line in the file, but; delimiter is used for the branch names tokenization rather than ':'.; Note however that if the values in the first line do not use the; /[type] syntax, all variables are assumed to be of type ""F"".; If the filename ends with extensions .csv or .CSV and a delimiter is; not specified (besides ' '), the delimiter is automatically set to ','. Lines in the input file starting with ""#"" are ignored.; This function will read and ignore any whitespace characters; (this includes blank spaces and the newline and tab characters).; Handles newlines specified with '\n', '\r', or ""\r\n"". A TBranch object is created for each variable in the expression.; The total number of rows read from the file is returned. FILLING a TTree WITH MULTIPLE INPUT TEXT FILES. To fill a TTree with multiple input text files, proceed as indicated above; for the first input file and omit the second argument for subsequent calls; T.ReadFile(""file1.dat"",""branch descriptor"");; T.ReadFile(""file2.dat"");. char GetNewlineValue(istream& inputStream); Determine which newline this file is using. Long64_t ReadStream(istream& inputStream, const char* branchDescriptor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:115826,variab,variables,115826,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,2,['variab'],['variables']
Modifiability,"/Integration; 37 ; 38Although the normalization of a PDF is an integral part of a; 39probability density function, normalization is treated separately; 40in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; 41PDF: it can be a building block for a more complex composite PDF; 42if any of its variables are functions instead of variables. In; 43such cases, the normalization of the composite PDF may not simply be; 44integral over the dependents of the top-level PDF: these are; 45functions with potentially non-trivial Jacobian terms themselves.; 46\note Therefore, no explicit attempt should be made to normalize the; 47function output in evaluate(). In particular, normalisation constants; 48can be omitted to speed up the function evaluations, and included later; 49in the integration of the PDF (see below), which is rarely called in; 50comparison to the `evaluate()` function.; 51 ; 52In addition, RooAbsPdf objects do not have a static concept of what; 53variables are parameters, and what variables are dependents (which; 54need to be integrated over for a correct PDF normalization).; 55Instead, the choice of normalization is always specified each time a; 56normalized value is requested from the PDF via the getVal(); 57method.; 58 ; 59RooAbsPdf manages the entire normalization logic of each PDF with; 60the help of a RooRealIntegral object, which coordinates the integration; 61of a given choice of normalization. By default, RooRealIntegral will; 62perform an entirely numeric integration of all dependents. However,; 63PDFs can advertise one or more (partial) analytical integrals of; 64their function, and these will be used by RooRealIntegral, if it; 65determines that this is safe (i.e., no hidden Jacobian terms,; 66multiplication with other PDFs that have one or more dependents in; 67common, etc).; 68 ; 69#### Implementing analytical integrals; 70To implement analytical integrals, two functions must be implemented. First,; 71 ; 72```; 73Int_t getAnalyticalIntegra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:2690,variab,variables,2690,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"/disable the timer to dispatch pening events while processing. ;  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt) override;  Set draw feedback option. ;  ; void SetExitStatus (EExitStatus st) override;  ; void SetMaxDrawQueries (Int_t max) override;  ; void SetOutputFilePath (const char *fp) override;  ; void SetProcessing (Bool_t on=kTRUE);  Set processing bit according to 'on'. ;  ; void SetStopTimer (Bool_t on=kTRUE, Bool_t abort=kFALSE, Int_t timeout=0) override;  Enable/disable the timer to stop/abort processing. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateAutoBin (const char *name, Double_t &xmin, Double_t &xmax, Double_t &ymin, Double_t &ymax, Double_t &zmin, Double_t &zmax) override;  Update automatic binning parameters for given object ""name"". ;  ; void UpdateProgressInfo () override;  Update fProgressStatus. ;  ;  Public Member Functions inherited from TVirtualProofPlayer;  TVirtualProofPlayer ();  ;  ~TVirtualProofPlayer () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLite.html:8251,inherit,inherited,8251,doc/master/classTProofPlayerLite.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLite.html,3,['inherit'],['inherited']
Modifiability,"/macro_C.so If 'isflat' is true, then no subdirectory is created and the library is created directly in the directory 'build_dir'. Note that in this mode there is a risk than 2 script of the same in different source directory will over-write each other. . NoteThis build_dir can also be controlled via ACLiC.BuildDir in your .rootrc. ; Definition at line 4043 of file TSystem.cxx. ◆ SetDisplay(). void TSystem::SetDisplay ; (; ). virtual . Set DISPLAY environment variable based on utmp entry. Only for UNIX. ; Reimplemented in TUnixSystem.; Definition at line 235 of file TSystem.cxx. ◆ SetDynamicPath(). void TSystem::SetDynamicPath ; (; const char * ; pathname). virtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1806 of file TSystem.cxx. ◆ Setenv(). void TSystem::Setenv ; (; const char * ; name, . const char * ; value . ). virtual . Set environment variable. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1649 of file TSystem.cxx. ◆ SetErrorStr(). void TSystem::SetErrorStr ; (; const char * ; errstr). Set the system error string. ; This string will be used by GetError(). To be used in case one does not want or can use the system error string (e.g. because error is generated by a third party POSIX like library that does not use standard errno). ; Definition at line 245 of file TSystem.cxx. ◆ SetFlagsDebug(). void TSystem::SetFlagsDebug ; (; const char * ; flags). virtual . FlagsDebug should contain the options to pass to the C++ compiler in order to compile the library in debug mode. ; Definition at line 4056 of file TSystem.cxx. ◆ SetFlagsOpt(). void TSystem::SetFlagsOpt ; (; const char * ; flags). virtual . FlagsOpt should contain the options to pass to the C++ compiler in order to compile the library in optimized mode. ; Definition at line 4065 of file TSystem.cxx. ◆ SetFPEMask(). Int_t TSystem::SetFPE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:84527,variab,variable,84527,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['variab'],['variable']
Modifiability,"/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TString fGrid;  ; TString fGridUrl;  ; TString fHost;  ; TString fOptions;  ; Int_t fPort;  ; TString fPw;  ; TString fUser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGrid.h>. Inheritance diagram for TGrid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGrid(). TGrid::TGrid ; (; ). inline . Definition at line 56 of file TGrid.h. ◆ ~TGrid(). virtual TGrid::~TGrid ; (; ). inlinevirtual . Definition at line 57 of file TGrid.h. Member Function Documentation. ◆ Cd(). virtual Bool_t TGrid::Cd ; (; const char * ; = """", . Bool_t ; = kFALSE . ). inlinevirtual . Definition at line 90 of file TGrid.h. ◆ Class(). static TClass * TGrid::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGrid::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGrid::Class_Version ; (; ). inlinestaticconstexpr . Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGrid.html:11537,inherit,inherited,11537,doc/master/classTGrid.html,https://root.cern,https://root.cern/doc/master/classTGrid.html,2,['inherit'],['inherited']
Modifiability,"/proxy implementation and only expose the creation functions.; In particular this is used to implement splitting and abstract element access of any container. Access to compiled code is necessary to implement the abstract iteration sequence and functionality like size(), clear(), resize(). resize() may be a void operation. ; Definition at line 29 of file TGenCollectionProxy.h. Classes; class  Method;  Small helper to execute (compiler) generated function for the access to STL or other containers. More...;  ; class  Method0;  ; class  StreamHelper;  Helper class to facilitate I/O. More...;  ; class  TStaging;  Small helper to stage the content of an associative container when reading and before inserting it in the actual collection. More...;  ; class  Value;  Small helper to describe the Value_type or the key_type of an STL container. More...;  . Public Types; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000; };  ; typedef const std::type_info & Info_t;  ;  Public Types inherited from TVirtualCollectionProxy; typedef void *(* CopyIterator_t) (void *dest, const void *source);  Copy the iterator source into dest. ;  ; typedef void(* CreateIterators_t) (void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy);  *begin_arena and *end_arena should contain the location of a memory arena of size fgIteratorArenaSize. ;  ; typedef void(* DeleteIterator_t) (void *iter);  If the size of the iterator is greater than fgIteratorArenaSize, call delete on the addresses; otherwise, just call the iterator's destructor. ;  ; typedef void(* DeleteTwoIterators_t) (void *begin, void *end);  ; enum  EProperty { kIsAssociative = (1ULL << ( 2 )); , kIsEmulated = (1ULL << ( 3 )); , kNeedDelete = (1ULL << ( 4 )); , kCustomAlloc = (1ULL << ( 5 )); };  ; typedef void *(* Next_t) (void *iter, const void *end);  iter and end should be pointers to an iterator to be incremented and an iterator that points to the end of the collection, respectively. ;  .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionProxy.html:1604,inherit,inherited,1604,doc/master/classTGenCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,"/section3/probplot.htm ; Definition at line 18 of file TGraphQQ.h. Public Member Functions;  TGraphQQ ();  default constructor ;  ;  TGraphQQ (Int_t n, Double_t *x);  Creates a quantile-quantile plot of dataset x. ;  ;  TGraphQQ (Int_t n, Double_t *x, TF1 *f);  Creates a quantile-quantile plot of dataset x against function f. ;  ;  TGraphQQ (Int_t nx, Double_t *x, Int_t ny, Double_t *y);  Creates a quantile-quantile plot of dataset x against dataset y Parameters nx and ny are respective array sizes. ;  ;  ~TGraphQQ () override;  Destroys a TGraphQQ. ;  ; TF1 * GetF () const;  ; Double_t GetXq1 () const;  ; Double_t GetXq2 () const;  ; Double_t GetYq1 () const;  ; Double_t GetYq2 () const;  ; TClass * IsA () const override;  ; void SetFunction (TF1 *f);  Sets the theoretical distribution function (density!) and computes its quantiles. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGraph. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraph (const TVectorD &vx, const TVectorD &vy);  Graph constructor with two vectors of doubles in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of points in the graph is the minimum of number of points in vx and vy. ;  ;  TGraph (const TVectorF &vx, const TVectorF &vy);  Graph constructor with two vectors of floats in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphQQ.html:4173,inherit,inherited,4173,doc/master/classTGraphQQ.html,https://root.cern,https://root.cern/doc/master/classTGraphQQ.html,1,['inherit'],['inherited']
Modifiability,"/triple knots. ; Definition at line 1478 of file TSpline.cxx. ◆ SetPoint(). void TSpline5::SetPoint ; (; Int_t ; i, . Double_t ; x, . Double_t ; y . ). virtual . Set point number i. ; Definition at line 1806 of file TSpline.cxx. ◆ SetPointCoeff(). void TSpline5::SetPointCoeff ; (; Int_t ; i, . Double_t ; b, . Double_t ; c, . Double_t ; d, . Double_t ; e, . Double_t ; f . ). virtual . Set point coefficient number i. ; Definition at line 1817 of file TSpline.cxx. ◆ Streamer(). void TSpline5::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TSpline5. ; Reimplemented from TSpline.; Definition at line 2488 of file TSpline.cxx. ◆ StreamerNVirtual(). void TSpline5::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 296 of file TSpline.h. ◆ Test(). void TSpline5::Test ; (; ). static . Test method for TSpline5. ; n number of data points.; m 2*m-1 is order of spline.; m = 3 always for quintic spline.; nn,nm1,mm,; mm1,i,k,; j,jj temporary integer variables.; z,p temporary double precision variables.; x[n] the sequence of knots.; y[n] the prescribed function values at the knots.; a[200][6] two dimensional array whose columns are; the computed spline coefficients; diff[5] maximum values of differences of values and; derivatives to right and left of knots.; com[5] maximum values of coefficients.; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148; mTMarker mDefinition textangle.C:8; test of TSpline5 with non equidistant knots and equidistant knots follows. ; Definition at line 2083 of file TSpline.cxx. Member Data Documentation. ◆ fPoly. TSpli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:31530,variab,variables,31530,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,1,['variab'],['variables']
Modifiability,"/v9/glorot10a/glorot10a.pdf. ;  ; static void InitializeGlorotUniform (Matrix_t &A);  Sample from a uniform distribution in range [ -lim,+lim] where lim = sqrt(6/N_in+N_out). ;  ; static TRandom & GetRandomGenerator ();  ; static void SetRandomSeed (size_t seed);  ; Dropout; static void DropoutForward (Tensor_t &A, TDescriptors *descriptors, TWorkspace *workspace, Scalar_t p);  Apply dropout with activation probability p to the given tensor A and scale the result by reciprocal of p. ;  ; static void DropoutForward (Matrix_t &A, Scalar_t p);  ; static void DropoutBackward (Tensor_t &, TDescriptors *, TWorkspace *);  ; Batch Normalization Layer Propagation; static void BatchNormLayerForwardTraining (int axis, const Tensor_t &x, Tensor_t &y, Matrix_t &gamma, Matrix_t &beta, Matrix_t &mean, Matrix_t &, Matrix_t &iVariance, Matrix_t &runningMeans, Matrix_t &runningVars, Scalar_t nTrainedBatches, Scalar_t momentum, Scalar_t epsilon, const TensorDescriptor_t &bnParDescriptor);  The input from each batch are normalized during training to have zero mean and unit variance and they are then scaled by two parameter, different for each input variable: ;  ; static void BatchNormLayerForwardInference (int axis, const Tensor_t &x, Matrix_t &gamma, Matrix_t &beta, Tensor_t &y, const Matrix_t &runningMeans, const Matrix_t &runningVars, Scalar_t epsilon, const TensorDescriptor_t &);  During inference the inputs are not normalized using the batch mean but the previously computed at running mean and variance. ;  ; static void BatchNormLayerBackward (int axis, const Tensor_t &x, const Tensor_t &dy, Tensor_t &dx, Matrix_t &gamma, Matrix_t &dgamma, Matrix_t &dbeta, const Matrix_t &mean, const Matrix_t &variance, const Matrix_t &iVariance, Scalar_t epsilon, const TensorDescriptor_t &);  ; Forward Propagation in Convolutional Layer; static size_t calculateDimension (size_t imgDim, size_t fltDim, size_t padding, size_t stride);  Calculate how many neurons ""fit"" in the output layer, given the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCuda.html:14316,variab,variable,14316,doc/master/classTMVA_1_1DNN_1_1TCuda.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCuda.html,1,['variab'],['variable']
Modifiability,"/v9/glorot10a/glorot10a.pdf. ;  ; static void InitializeGlorotUniform (Matrix_t &A);  Sample from a uniform distribution in range [ -lim,+lim] where lim = sqrt(6/N_in+N_out). ;  ; static TRandom & GetRandomGenerator ();  ; static void SetRandomSeed (size_t seed);  ; Dropout; static void DropoutForward (Tensor_t &A, TDescriptors *descriptors, TWorkspace *workspace, Scalar_t p);  Apply dropout with activation probability p to the given tensor A and scale the result by reciprocal of p. ;  ; static void DropoutForward (Matrix_t &A, Scalar_t p);  ; static void DropoutBackward (Tensor_t &, TDescriptors *, TWorkspace *);  ; Batch Normalization Layer Propagation; static void BatchNormLayerForwardTraining (int axis, const Tensor_t &x, Tensor_t &y, Matrix_t &gamma, Matrix_t &beta, Matrix_t &mean, Matrix_t &, Matrix_t &iVariance, Matrix_t &runningMeans, Matrix_t &runningVars, Scalar_t nTrainedBatches, Scalar_t momentum, Scalar_t epsilon, const TensorDescriptor_t &bnParDescriptor);  The input from each batch are normalized during training to have zero mean and unit variance and they are then scaled by two parameter, different for each input variable: ;  ; static void BatchNormLayerForwardInference (int axis, const Tensor_t &x, Matrix_t &gamma, Matrix_t &beta, Tensor_t &y, const Matrix_t &runningMeans, const Matrix_t &runningVars, Scalar_t epsilon, const TensorDescriptor_t &);  During inference the inputs are not normalized using the batch mean but the previously computed at running mean and variance. ;  ; static void BatchNormLayerBackward (int axis, const Tensor_t &x, const Tensor_t &dy, Tensor_t &dx, Matrix_t &gamma, Matrix_t &dgamma, Matrix_t &dbeta, const Matrix_t &mean, const Matrix_t &variance, const Matrix_t &iVariance, Scalar_t epsilon, const TensorDescriptor_t &);  ; static Tensor_t BatchNormLayerReshapeTensor (int axis, const Tensor_t &x);  ; Forward Propagation in Convolutional Layer; static size_t calculateDimension (size_t imgDim, size_t fltDim, size_t padding, siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpu.html:12643,variab,variable,12643,doc/master/classTMVA_1_1DNN_1_1TCpu.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpu.html,1,['variab'],['variable']
Modifiability,"/weights/TMVAClassification_CutsD.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification_CutsD.weights.xml; : Read cuts optimised using sample of MC events; : Reading 100 signal efficiency bins for 4 variables; : Booked classifier ""CutsD"" of type: ""Cuts""; : Booking ""FDA_GA method"" of type ""FDA"" from dataset/weights/TMVAClassification_FDA_GA.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification_FDA_GA.weights.xml; : User-defined formula string : ""(0)+(1)*x0+(2)*x1+(3)*x2+(4)*x3""; : TFormula-compatible formula string: ""[0]+[1]*[5]+[2]*[6]+[3]*[7]+[4]*[8]""; : Booked classifier ""FDA_GA"" of type: ""FDA""; : Booking ""KNN method"" of type ""KNN"" from dataset/weights/TMVAClassification_KNN.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification_KNN.weights.xml; : Creating kd-tree with 2000 events; : Computing scale factor for 1d distributions: (ifrac, bottom, top) = (80%, 10%, 90%); <HEADER> ModulekNN : Optimizing tree for 4 variables with 2000 values; : <Fill> Class 1 has 1000 events; : <Fill> Class 2 has 1000 events; : Booked classifier ""KNN"" of type: ""KNN""; : Booking ""LD method"" of type ""LD"" from dataset/weights/TMVAClassification_LD.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification_LD.weights.xml; : Booked classifier ""LD"" of type: ""LD""; : Booking ""Likelihood method"" of type ""Likelihood"" from dataset/weights/TMVAClassification_Likelihood.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification_Likelihood.weights.xml; : Booked classifier ""Likelihood"" of type: ""Likelihood""; : Booking ""LikelihoodPCA method"" of type ""Likelihood"" from dataset/weights/TMVAClassification_LikelihoodPCA.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification_LikelihoodPCA.weights.xml; : Booked classifier ""LikelihoodPCA"" of type: ""Likelihood""; : Booking ""MLPBNN method"" of type ""MLP"" from dataset/weights/TMVAClassification_MLPBNN.weights.xml.; : Reading weight file: dataset/weights/TMVAClassification",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationApplication_8C.html:2211,variab,variables,2211,doc/master/TMVAClassificationApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationApplication_8C.html,1,['variab'],['variables']
Modifiability,"/weights/TMVARegression_KNN.weights.xml␛[0m; : Creating kd-tree with 1000 events; : Computing scale factor for 1d distributions: (ifrac, bottom, top) = (80%, 10%, 90%); ModulekNN : Optimizing tree for 2 variables with 1000 values; : <Fill> Class 1 has 1000 events; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_LD.weights.xml␛[0m; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_DNN_CPU.weights.xml␛[0m; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_BDTG.weights.xml␛[0m; Factory : ␛[1mTest all methods␛[0m; Factory : Test method: PDEFoam for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of PDEFoam on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.0705 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: KNN for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of KNN on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.0918 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: LD for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of LD on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.00483 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: DNN_CPU for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of DNN_CPU on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.231 sec ; : Create variable histograms; : C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:127396,variab,variable,127396,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,"0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEvePointSet; void AssertIntIdsSize ();  Assert that size of IntId array is compatible with the size of the point array. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TPointSet3D; void CopyIds (const TPointSet3D &t);  Copy id objects from point-set 't'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:47957,inherit,inherited,47957,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,2,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGLTH3Composition ();  I have to define it, since explicit copy ctor was declared. ;  ; void AddTH3 (const TH3 *hist, ETH3BinShape shape=kBox);  Add TH3 into collection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Check if ""this"" is under cursor. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Mouse and keyboard events. ;  ; char * GetObjectInfo (Int_t px, Int_t py) const override;  I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:1517,inherit,inherited,1517,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addition of h1 and h2. ;  ; virtual Bool_t Add (const TH1 *h1, Double_t c1=1);  Performs the operation: this = this + c1*h1 If errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual Bool_t Add (TF1 *h1, Double_t c1=1, Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:23762,inherit,inherited,23762,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TH2Poly; enum  { kNOverflow = 9; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:55914,inherit,inherited,55914,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TH1; static Bool_t fgAddDirectory = kTRUE;  ! Flag to add histograms to the directory ;  ; static Int_t fgBufferSize = 1000;  ! Default buffer size for automatic histograms ;  ; static Bool_t fgDefaultSumw2 = kFALSE;  ! Flag to call TH1::Sumw2 automatically at histogram creation time ;  ; static Bool_t fgStatOverflows ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:57668,inherit,inherited,57668,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger) or previous (smaller) a given x. ;  ; static bool CheckAxisLimits (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:54415,inherit,inherited,54415,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayC; Char_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxili",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:46832,inherit,inherited,46832,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,2,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayC; Char_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3C.html:55706,inherit,inherited,55706,doc/master/classTH3C.html,https://root.cern,https://root.cern/doc/master/classTH3C.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayD; Double_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1D.html:47072,inherit,inherited,47072,doc/master/classTH1D.html,https://root.cern,https://root.cern/doc/master/classTH1D.html,4,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayD; Double_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D.html:55974,inherit,inherited,55974,doc/master/classTH3D.html,https://root.cern,https://root.cern/doc/master/classTH3D.html,2,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayF; Float_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F.html:46934,inherit,inherited,46934,doc/master/classTH1F.html,https://root.cern,https://root.cern/doc/master/classTH1F.html,3,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayF; Float_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3F.html:55834,inherit,inherited,55834,doc/master/classTH3F.html,https://root.cern,https://root.cern/doc/master/classTH3F.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayI; Int_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxilia",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I.html:46780,inherit,inherited,46780,doc/master/classTH1I.html,https://root.cern,https://root.cern/doc/master/classTH1I.html,2,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayI; Int_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:55801,inherit,inherited,55801,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayL64; Long64_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Au",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1L.html:46847,inherit,inherited,46847,doc/master/classTH1L.html,https://root.cern,https://root.cern/doc/master/classTH1L.html,2,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayL64; Long64_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:55871,inherit,inherited,55871,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayS; Short_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:46797,inherit,inherited,46797,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,2,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayS; Short_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH3; static TH1D * DoProject1D (const TH3 &h, const char *name, const char *title, const TAxis *projX, bool computeErrors, bool originalRange, bool useUF, bool useOF);  static methdod performing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:55693,inherit,inherited,55693,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['inherit'],['inherited']
Modifiability,"0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger) or previous (smaller) a given x. ;  ; static bool CheckAxisLimits (const TAxis *a1, const TAxis *a2);  Check that the axis limits of the histograms are the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:63123,inherit,inherited,63123,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['inherit'],['inherited']
Modifiability,"0 * exp(0.554 * (Double_t)r);; 923 ; 924 // Constants; 925 ; 926 const Double_t rrtpi = 0.56418958; // 1/SQRT(pi); 927 ; 928 Double_t y0, y0py0, y0q; // for CPF12 algorithm; 929 y0 = 1.5;; 930 y0py0 = y0 + y0;; 931 y0q = y0 * y0;; 932 ; 933 Double_t c[6] = { 1.0117281, -0.75197147, 0.012557727, 0.010022008, -0.00024206814, 0.00000050084806};; 934 Double_t s[6] = { 1.393237, 0.23115241, -0.15535147, 0.0062183662, 0.000091908299, -0.00000062752596};; 935 Double_t t[6] = { 0.31424038, 0.94778839, 1.5976826, 2.2795071, 3.0206370, 3.8897249};; 936 ; 937 // Local variables; 938 ; 939 int j; // Loop variables; 940 int rg1, rg2, rg3; // y polynomial flags; 941 Double_t abx, xq, yq, yrrtpi; // --x--, x^2, y^2, y/SQRT(pi); 942 Double_t xlim0, xlim1, xlim2, xlim3, xlim4; // --x-- on region boundaries; 943 Double_t a0=0, d0=0, d2=0, e0=0, e2=0, e4=0, h0=0, h2=0, h4=0, h6=0;// W4 temporary variables; 944 Double_t p0=0, p2=0, p4=0, p6=0, p8=0, z0=0, z2=0, z4=0, z6=0, z8=0;; 945 Double_t xp[6], xm[6], yp[6], ym[6]; // CPF12 temporary values; 946 Double_t mq[6], pq[6], mf[6], pf[6];; 947 Double_t d, yf, ypy0, ypy0q;; 948 ; 949 //***** Start of executable code *****************************************; 950 ; 951 rg1 = 1; // Set flags; 952 rg2 = 1;; 953 rg3 = 1;; 954 yq = y * y; // y^2; 955 yrrtpi = y * rrtpi; // y/SQRT(pi); 956 ; 957 // Region boundaries when both k and L are required or when R<>4; 958 ; 959 xlim0 = r0 - y;; 960 xlim1 = r1 - y;; 961 xlim3 = 3.097 * y - 0.45;; 962 xlim2 = 6.8 - y;; 963 xlim4 = 18.1 * y + 1.65;; 964 if ( y <= 1e-6 ) { // When y<10^-6 avoid W4 algorithm; 965 xlim1 = xlim0;; 966 xlim2 = xlim0;; 967 }; 968 ; 969 abx = fabs(x); // |x|; 970 xq = abx * abx; // x^2; 971 if ( abx > xlim0 ) { // Region 0 algorithm; 972 k = yrrtpi / (xq + yq);; 973 } else if ( abx > xlim1 ) { // Humlicek W4 Region 1; 974 if ( rg1 != 0 ) { // First point in Region 1; 975 rg1 = 0;; 976 a0 = yq + 0.5; // Region 1 y-dependents; 977 d0 = a0*a0;; 978 d2 = yq + yq - 1.0;; 979 }; 980 d ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:31061,variab,variables,31061,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,3,['variab'],['variables']
Modifiability,"0 ; 931 // if the average of the bin right and left is larger than this one, add the difference to; 932 // the current value of the estimator (because you can do at least so much better); 933 eta = ( -TMath::Abs(effBH-average) + (1.0 - (effBH - effB))) / (1.0 + effS);; 934 // alternative idea; 935 //if (effBH<0) eta = (1.e-6+effB)/(1.0 + effS);; 936 //else eta = (effB - effBH) * (1.0 + 10.* effS);; 937 ; 938 // if a point is found which is better than an existing one, ... replace it.; 939 // preliminary best event -> backup; 940 if (effBH < 0 || effBH > effB) {; 941 fEffBvsSLocal->SetBinContent( ibinS, effB );; 942 for (UInt_t ivar=0; ivar<GetNvar(); ivar++) {; 943 fCutMin[ivar][ibinS-1] = fTmpCutMin[ivar]; // bin 1 stored in index 0; 944 fCutMax[ivar][ibinS-1] = fTmpCutMax[ivar];; 945 }; 946 }; 947 ; 948 // caution (!) this value is not good for a decision for MC, .. it is designed for GA; 949 // but .. it doesn't matter, as MC samplings are independent from the former ones; 950 // and the replacement of the best variables by better ones is done about 10 lines above.; 951 // ( if (effBH < 0 || effBH > effB) { .... ); 952 ; 953 if (ibinS<=1) {; 954 // add penalty for effS=0 bin; 955 // to avoid that the minimizer gets stuck in the zero-bin; 956 // force it towards higher efficiency; 957 Double_t penalty=0.,diff=0.;; 958 for (UInt_t ivar=0; ivar<GetNvar(); ivar++) {; 959 diff=(fCutRange[ivar]->GetMax()-fTmpCutMax[ivar])/(fCutRange[ivar]->GetMax()-fCutRange[ivar]->GetMin());; 960 penalty+=diff*diff;; 961 diff=(fCutRange[ivar]->GetMin()-fTmpCutMin[ivar])/(fCutRange[ivar]->GetMax()-fCutRange[ivar]->GetMin());; 962 penalty+=4.*diff*diff;; 963 }; 964 ; 965 if (effS<1.e-4) return 10.0+penalty;; 966 else return 10.*(1.-10.*effS);; 967 }; 968 return eta;; 969}; 970 ; 971////////////////////////////////////////////////////////////////////////////////; 972/// translates parameters into cuts; 973 ; 974void TMVA::MethodCuts::MatchParsToCuts( const std::vector<Double_t> & pars,; 9",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:35386,variab,variables,35386,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['variab'],['variables']
Modifiability,"0 Double_t result;; 941 m->Execute(result);; 942}; 943 ; 944////////////////////////////////////////////////////////////////////////////////; 945/// set Minuit print level.; 946///; 947/// printlevel:; 948/// - = -1 quiet (also suppress all warnings); 949/// - = 0 normal; 950/// - = 1 verbose; 951 ; 952Int_t TMinuit::SetPrintLevel( Int_t printLevel ); 953{; 954 Int_t err;; 955 Double_t tmp[1];; 956 tmp[0] = printLevel;; 957 ; 958 mnexcm( ""SET PRINT"", tmp, 1, err );; 959 ; 960 if (printLevel <=-1) mnexcm(""SET NOWarnings"",tmp,0,err);; 961 ; 962 return err;; 963}; 964 ; 965////////////////////////////////////////////////////////////////////////////////; 966/// Initialize AMIN; 967///; 968/// Called from many places. Initializes the value of AMIN by; 969/// calling the user function. Prints out the function value and; 970/// parameter values if Print Flag value is high enough.; 971 ; 972void TMinuit::mnamin(); 973{; 974 /* Local variables */; 975 Double_t fnew;; 976 Int_t nparx;; 977 ; 978 nparx = fNpar;; 979 if (fISW[4] >= 1) {; 980 Printf("" FIRST CALL TO USER FUNCTION AT NEW START POINT, WITH IFLAG=4."");; 981 }; 982 mnexin(fX);; 983 Eval(nparx, fGin, fnew, fU, 4); ++fNfcn;; 984 fAmin = fnew;; 985 fEDM = fBigedm;; 986}; 987 ; 988////////////////////////////////////////////////////////////////////////////////; 989/// Compute reasonable histogram intervals; 990///; 991/// Function TO DETERMINE REASONABLE HISTOGRAM INTERVALS; 992/// GIVEN ABSOLUTE UPPER AND LOWER BOUNDS A1 AND A2; 993/// AND DESIRED MAXIMUM NUMBER OF BINS NAA; 994/// PROGRAM MAKES REASONABLE BINNING FROM BL TO BH OF WIDTH BWID; 995/// F. JAMES, AUGUST, 1974 , stolen for Minuit, 1988; 996 ; 997void TMinuit::mnbins(Double_t a1, Double_t a2, Int_t naa, Double_t &bl, Double_t &bh, Int_t &nb, Double_t &bwid); 998{; 999 /* Local variables */; 1000 Double_t awid,ah, al, sigfig, sigrnd, alb;; 1001 Int_t kwid, lwid, na=0, log_;; 1002 ; 1003 al = TMath::Min(a1,a2);; 1004 ah = TMath::Max(a1,a2);; 1005 if (al == ah) a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:35246,variab,variables,35246,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"0 gausn(0); expo(1) 100 1 gaus(1) 110 1 gausn(1); xexpo 100 x xgaus 110 x xgausn; yexpo 101 x ygaus 111 x ygausn; zexpo 102 x zgaus 112 x zgausn; xyexpo 105 x xygaus 115 x xygausn; yexpo(5) 102 5 ygaus(5) 111 5 ygausn(5); xyexpo(2) 105 2 xygaus(2) 115 2 xygausn(2); ; landau 120 x landaun (see note below); landau(0) 120 0 landaun(0); landau(1) 120 1 landaun(1); xlandau 120 x xlandaun; ylandau 121 x ylandaun; zlandau 122 x zlandaun; xylandau 125 x xylandaun; ylandau(5) 121 5 ylandaun(5); xylandau(2) 125 2 xylandaun(2); ; pol0 130 x pol1 130 1xx; pol0(0) 130 0 pol1(0) 130 100; pol0(1) 130 1 pol1(1) 130 101; xpol0 130 x xpol1 130 101; ypol0 131 x ypol1 131 101; zpol0 132 x zpol1 132 1xx; ypol0(5) 131 5 ypol1(5) 131 105; ; pi 40; ; && 60 < 64; || 61 > 65; == 62 <= 66; != 63 => 67; ! 68; ==(string) 76 & 78; !=(string) 77 | 79; <<(shift) 80 >>(shift) 81; ? : 82; ; * constants (kConstants) :; ; c0 141 1 c1 141 2 etc..; ; * strings (kStringConst):; ; sX 143 x; ; * variables (kFormulaVar) :; ; x 144 0 y 144 1 z 144 2 t 144 3; ; * parameters :; ; [1] 140 1; [2] 140 2; etc.; ROOT::v5::TFormula::kStringConst@ kStringConstDefinition TFormula.h:185; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17. Special cases for normalized gaussian or landau distributions; the expression ""gaus"" is a substitute for [0]*exp(-0.5*((x-[1])/[2])**2); to obtain a standard normalized gaussian, use ""gausn"" instead of ""gaus"" the expression ""gausn"" is a substitute for [0]*exp(-0.5*((x-[1])/[2])**2)/(sqrt(2*pi)*[2])); WARNING: gaus and gausn are mutually exclusive in the same expression.; In the same way the expression ""landau"" is a substitute for [0]*TMath::Landau(x,[1],[2],kFALSE); to obtain a standard normalized landau, use ""landaun"" instead of ""landau"" the expression ""landaun"" is a substitute for [0]*TMath::Landau(x,[1],[2],kTRUE); WARNING: landau and landaun are mutually exclusive in the same expression. Boolean optimization (kBoolOptmiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html:26878,variab,variables,26878,doc/master/classROOT_1_1v5_1_1TFormula.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html,1,['variab'],['variables']
Modifiability,"0 if (chlds); 551 for (int n = 0; n <= chlds->GetLast(); ++n) {; 552 auto chld = dynamic_cast<TGeoNode *>(chlds->At(n));; 553 desc.chlds.emplace_back(chld->GetNumber() - offset);; 554 }; 555 }; 556 ; 557 // recover numbers; 558 cnt = 0;; 559 for (auto node : fNodes) {; 560 auto number = numbers[cnt++];; 561 if (node); 562 node->SetNumber(number);; 563 }; 564 ; 565 // sort in volume descent order; 566 std::sort(sortarr.begin(), sortarr.end(), [](RGeomNode *a, RGeomNode *b) { return a->vol > b->vol; });; 567 ; 568 cnt = 0;; 569 for (auto &elem : sortarr) {; 570 fSortMap.emplace_back(elem->id);; 571 elem->sortid = cnt++; // keep place in sorted array to correctly apply cut; 572 }; 573 ; 574 MarkVisible(); // set visibility flags; 575 ; 576 ProduceIdShifts();; 577}; 578 ; 579/////////////////////////////////////////////////////////////////////; 580/// Get volume for specified nodeid; 581/// If specific volume was configured, it will be returned for nodeid==0; 582 ; 583TGeoVolume *RGeomDescription::GetVolume(int nodeid); 584{; 585 auto node = fNodes[nodeid];; 586 if (node); 587 return node->GetVolume();; 588 return nodeid == 0 ? fDrawVolume : nullptr;; 589}; 590 ; 591/////////////////////////////////////////////////////////////////////; 592/// Set visibility flag for each nodes; 593 ; 594int RGeomDescription::MarkVisible(bool on_screen); 595{; 596 int res = 0;; 597 for (int nodeid = 0; nodeid < (int)fNodes.size(); nodeid++) {; 598 ; 599 auto node = fNodes[nodeid];; 600 auto vol = GetVolume(nodeid);; 601 auto &desc = fDesc[nodeid];; 602 desc.vis = 0;; 603 desc.nochlds = false;; 604 ; 605 if (on_screen) {; 606 if (!node || node->IsOnScreen()); 607 desc.vis = 99;; 608 } else {; 609 if (vol->IsVisible() && !vol->TestAttBit(TGeoAtt::kVisNone)); 610 desc.vis = 99;; 611 ; 612 if (node && !node->IsVisDaughters()); 613 desc.nochlds = true;; 614 ; 615 if ((desc.vis > 0) && (!desc.chlds.empty()) && !desc.nochlds); 616 desc.vis = 1;; 617 }; 618 ; 619 if (desc.IsVisible() && desc.Can",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:15495,config,configured,15495,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configured']
Modifiability,"0 return 0;; 2341 }; 2342 ; 2343 template <typename T>; 2344 static INLINE_TEMPLATE_ARGS Int_t WriteBasicType(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2345 {; 2346 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2347 ; 2348 Next_t next = loopconfig->fNext;; 2349 const Int_t offset = config->fOffset;; 2350 ; 2351 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2352 void *iter = loopconfig->fCopyIterator(iterator,start);; 2353 void *addr;; 2354 while( (addr = next(iter,end)) ) {; 2355 T *x = (T*)( ((char*)addr) + offset );; 2356 buf << *x;; 2357 }; 2358 if (iter != &iterator[0]) {; 2359 loopconfig->fDeleteIterator(iter);; 2360 }; 2361 return 0;; 2362 }; 2363 ; 2364 template <Int_t (*iter_action)(TBuffer&,void *,const TConfiguration*)>; 2365 static INLINE_TEMPLATE_ARGS Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2366 {; 2367 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2368 ; 2369 // const Int_t offset = config->fOffset;; 2370 Next_t next = loopconfig->fNext;; 2371 ; 2372 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2373 void *iter = loopconfig->fCopyIterator(&iterator,start);; 2374 void *addr;; 2375 while( (addr = next(iter,end)) ) {; 2376 iter_action(buf, addr, config);; 2377 }; 2378 if (iter != &iterator[0]) {; 2379 loopconfig->fDeleteIterator(iter);; 2380 }; 2381 return 0;; 2382 }; 2383 ; 2384 template <typename From, typename To>; 2385 struct Generic {; 2386 static void ConvertAction(From *items, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2387 {; 2388 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2389 ; 2390 const Int_t offset = config->fOffset;; 2391 Next_t next = loopconfig->fNext;; 2392 ; 2393 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2394 void *iter = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:96014,config,config,96014,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"0 std::cout << ""Number of iterations = "" << iter<< std::endl;; 311 ; 312 PrintState();; 313 }; 314 }; 315 fIter = iter;; 316 fStatus = status;; 317 return (fStatus == GSL_SUCCESS);; 318 ; 319}; 320 ; 321void GSLMultiRootFinder::PrintState(std::ostream & os) {; 322 // print current state; 323 if (!fSolver) return;; 324 double ndigits = std::log10( double( Dim() ) );; 325 int wi = int(ndigits)+1;; 326 const double * xtmp = fSolver->X();; 327 const double * ftmp = fSolver->FVal();; 328 os << ""Root values = "";; 329 for (unsigned int i = 0; i< Dim(); ++i); 330 os << ""x["" << std::setw(wi) << i << ""] = "" << std::setw(12) << xtmp[i] << "" "";; 331 os << std::endl;; 332 os << ""Function values = "";; 333 for (unsigned int i = 0; i< Dim(); ++i); 334 os << ""f["" << std::setw(wi) << i << ""] = "" << std::setw(12) << ftmp[i] << "" "";; 335 os << std::endl;; 336}; 337 ; 338 ; 339 ; 340} // namespace Math; 341} // namespace ROOT; Error.h; MATH_INFO_MSG#define MATH_INFO_MSG(loc, str)Pre-processor macro to report messages which can be configured to use ROOT error or simply an std::io...Definition Error.h:77; MATH_INFO_MSGVAL#define MATH_INFO_MSGVAL(loc, txt, x)Definition Error.h:101; MATH_ERROR_MSG#define MATH_ERROR_MSG(loc, str)Definition Error.h:83; GSLMultiRootFinder.h; GSLMultiRootSolver.h; IFunction.h; f#define f(i)Definition RSha256.hxx:104; GSL_SUCCESS#define GSL_SUCCESSDefinition RooAdaptiveGaussKronrodIntegrator1D.cxx:379; typeOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8cxx_source.html:12148,config,configured,12148,doc/master/GSLMultiRootFinder_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8cxx_source.html,1,['config'],['configured']
Modifiability,"0 || bin >= fNcells) return 0;; 847 return fBinEntries.fArray[bin];; 848}; 849 ; 850////////////////////////////////////////////////////////////////////////////////; 851/// Return bin effective entries for a weighted filled Profile histogram.; 852/// In case of an unweighted profile, it is equivalent to the number of entries per bin; 853/// The effective entries is defined as the square of the sum of the weights divided by the; 854/// sum of the weights square.; 855/// TProfile::Sumw2() must be called before filling the profile with weights.; 856/// Only by calling this method the sum of the square of the weights per bin is stored.; 857 ; 858Double_t TProfile2D::GetBinEffectiveEntries(Int_t bin); 859{; 860 return TProfileHelper::GetBinEffectiveEntries(this, bin);; 861}; 862 ; 863////////////////////////////////////////////////////////////////////////////////; 864/// Return bin error of a Profile2D histogram.; 865///; 866/// ### Computing errors: A moving field; 867///; 868/// The computation of errors for a TProfile2D has evolved with the versions; 869/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 870/// - prior to version 3.10, we had no special treatment of low statistic bins.; 871/// As a result, these bins had huge errors. The reason is that the; 872/// expression eprim2 is very close to 0 (rounding problems) or 0.; 873/// - The algorithm is modified/protected for the case; 874/// when a TProfile2D is projected (ProjectionX). The previous algorithm; 875/// generated a N^2 problem when projecting a TProfile2D with a large number of; 876/// bins (eg 100000).; 877/// - in version 3.10/02, a new static function TProfile::Approximate; 878/// is introduced to enable or disable (default) the approximation.; 879/// (see also comments in TProfile::GetBinError); 880 ; 881Double_t TProfile2D::GetBinError(Int_t bin) const; 882{; 883 return TProfileHelper::GetBinError((TProfile2D*)this, bin);; 884}; 885 ; 886/////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:30178,evolve,evolved,30178,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['evolve'],['evolved']
Modifiability,"0) const; comparison of original histogram with reference PDF. Double_t GetIntegral() const; computes normalisation. Double_t IGetVal(Double_t* , Double_t* ); static external auxiliary function (integrand). Double_t GetIntegral(Double_t xmin, Double_t xmax); computes PDF integral within given ranges. Double_t GetVal(Double_t x) const; returns value PDF(x). void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; PDFInterpol[ivar] <string> Spline0, Spline1, Spline2 <default>, Spline3, Spline5, KDE used to interpolate reference histograms; if no variable index is given, it is valid for ALL the variables. NSmooth <int> how often the input histos are smoothed; MinNSmooth <int> min number of smoothing iterations, for bins with most data; MaxNSmooth <int> max number of smoothing iterations, for bins with least data; NAvEvtPerBin <int> minimum average number of events per PDF bin; TransformOutput <bool> transform (often strongly peaked) likelihood output through sigmoid inversion; fKDEtype <KernelType> type of the Kernel to use (1 is Gaussian); fKDEiter <KerneIter> number of iterations (1 --> ""static KDE"", 2 --> ""adaptive KDE""); fBorderMethod <KernelBorder> the method to take care about ""border"" effects (1=no treatment , 2=kernel renormalization, 3=sample mirroring). void ProcessOptions(). void AddXMLTo(void* parent); XML file writing. void ReadXML(void* pdfnode); XML file reading. TMVA::PDF* ThisPDF( void ); return global ""this"" pointer of PDF. TH1* GetPDFHist() const; histogram underlying the PDF. { return fPDFHist; }. TH1* GetOriginalHist() const; { return fHistOriginal; }. TH1* GetSmoothedHist() const; { return fHist; }. TH1* GetNSmoothHist() const; { return fNSmoothHist; }. TSpline* GetSpline() const; accessors. { return fSpline; }. Int_t GetNBins() const; { return fHist->GetNbinsX(); }. Double_t GetXmin() const; { return fHist->GetXaxis()->GetXmin(); }. Double_t GetXmax() const; { return fHist->GetXaxis()->GetXma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDF.html:11937,adapt,adaptive,11937,root/html528/TMVA__PDF.html,https://root.cern,https://root.cern/root/html528/TMVA__PDF.html,1,['adapt'],['adaptive']
Modifiability,"0); ; # Show dt distribution with custom binning; # -------------------------------------------------------------------------------; ; # Make plot of dt distribution of data in range (-15,15) with fine binning; # for dt>0 and coarse binning for dt<0; ; # Create binning object with range (-15,15); tbins = ROOT.RooBinning(-15, 15); ; # Add 60 bins with uniform spacing in range (-15,0); tbins.addUniform(60, -15, 0); ; # Add 15 bins with uniform spacing in range (0,15); tbins.addUniform(15, 0, 15); ; # Make plot with specified binning; dtframe = dt.frame(Range=(-15, 15), Title=""dt distribution with custom binning""); data.plotOn(dtframe, Binning=tbins); bmix.plotOn(dtframe); ; # NB: Note that bin density for each bin is adjusted to that of default frame binning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf108__plotbinning_8py.html:2523,variab,variable,2523,doc/master/rf108__plotbinning_8py.html,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html,1,['variab'],['variable']
Modifiability,"0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8py.html:1625,config,configFile,1625,doc/master/rf505__asciicfg_8py.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html,1,['config'],['configFile']
Modifiability,"0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. RooSimGenContext(const RooSimGenContext& other); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; Double_t*_fracThresh[_numPdf] Fraction threshold array; TList_gcListList of component generator contexts; RooDataSet*RooAbsGenContext::_genData! Data being generated; Bool_t_haveIdxProtoFlag set if generation of index is requested; RooAbsCategoryLValue*_idxCatClone of index category; TString_idxCatNameName of index category; RooArgSet*_idxCatSetOwner of index category components; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; Int_t_numPdfNumber of generated PDFs; const RooSimultaneous*_pdfOriginal PDF; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*_prototypePrototype data set; const RooDataSet*RooAbsGenContext::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimGenContext.html:7423,extend,extended,7423,root/html526/RooSimGenContext.html,https://root.cern,https://root.cern/root/html526/RooSimGenContext.html,1,['extend'],['extended']
Modifiability,"0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. RooSimGenContext(const RooSimGenContext& other); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; Double_t*_fracThresh[_numPdf] Fraction threshold array; TList_gcListList of component generator contexts; RooDataSet*RooAbsGenContext::_genData! Data being generated; Bool_t_haveIdxProtoFlag set if generation of index is requested; RooAbsCategoryLValue*_idxCatClone of index category; TString_idxCatNameName of index category; RooArgSet*_idxCatSetOwner of index category components; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; Int_t_numPdfNumber of generated PDFs; const RooSimultaneous*_pdfOriginal PDF; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*_p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimGenContext.html:7409,extend,extended,7409,root/html528/RooSimGenContext.html,https://root.cern,https://root.cern/root/html528/RooSimGenContext.html,1,['extend'],['extended']
Modifiability,"0);  Decode a namecycle ""aap;2"" into name ""aap"" and cycle ""2"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TDirectory (const TDirectory &directory)=delete;  ; void BuildDirectory (TFile *motherFile, TDirectory *motherDir);  Initialise directory to defaults. ;  ; Bool_t cd1 (const char *path);  flag to add histograms, graphs,etc to the directory ;  ; void CleanTargets ();  Clean the pointers to this object (gDirectory, TContext, etc.). ;  ; void FillFullPath (TString &buf) const;  Recursive method to fill full path for directory. ;  ; void operator= (const TDirectory &)=delete;  ; void RegisterContext (TContext *ctxt);  Register a TContext pointing to this TDirectory object. ;  ; void RegisterGDirectory (SharedGDirectory_t &ptr);  Register a std::atomic<TDirectory*> that will soon be pointing to this TDirectory object. ;  ; void UnregisterContext (TContext *ctxt);  UnRegister a TContext pointing to this TDirectory object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:17826,inherit,inherited,17826,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inherited']
Modifiability,"0);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:13997,config,configuration,13997,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,3,['config'],['configuration']
Modifiability,"0);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual std::list< double > * binBoundaries (RooAbsRealLValue &obs, double xlo, double xhi) const;  Retrieve bin boundaries ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBreitWigner.html:12978,config,configuration,12978,doc/master/classRooBreitWigner.html,https://root.cern,https://root.cern/doc/master/classRooBreitWigner.html,27,['config'],['configuration']
Modifiability,"0);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with give",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:17634,config,configuration,17634,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,20,['config'],['configuration']
Modifiability,"0);; 1100 CurSize = 0;; 1101 this->grow(RHSSize);; 1102 } else if (CurSize) {; 1103 // Otherwise, use assignment for the already-constructed elements.; 1104 std::move(RHS.begin(), RHS.begin() + CurSize, this->begin());; 1105 }; 1106 ; 1107 // Move-construct the new elements in place.; 1108 this->uninitialized_move(RHS.begin() + CurSize, RHS.end(), this->begin() + CurSize);; 1109 ; 1110 // Set end.; 1111 this->set_size(RHSSize);; 1112 ; 1113 RHS.clear();; 1114 return *this;; 1115}; 1116 ; 1117template <typename T>; 1118bool IsSmall(const ROOT::VecOps::RVec<T> &v); 1119{; 1120 return v.isSmall();; 1121}; 1122 ; 1123template <typename T>; 1124bool IsAdopting(const ROOT::VecOps::RVec<T> &v); 1125{; 1126 return !v.Owns();; 1127}; 1128 ; 1129} // namespace VecOps; 1130} // namespace Detail; 1131 ; 1132namespace VecOps {; 1133// Note that we open here with @{ the Doxygen group vecops and it is; 1134// closed again at the end of the C++ namespace VecOps; 1135/**; 1136 * \defgroup vecops VecOps; 1137 * A ""std::vector""-like collection of values implementing handy operation to analyse them; 1138 * @{; 1139*/; 1140 ; 1141// From the original SmallVector code:; 1142// This is a 'vector' (really, a variable-sized array), optimized; 1143// for the case when the array is small. It contains some number of elements; 1144// in-place, which allows it to avoid heap allocation when the actual number of; 1145// elements is below that threshold. This allows normal ""small"" cases to be; 1146// fast without losing generality for large inputs.; 1147//; 1148// Note that this does not attempt to be exception safe.; 1149 ; 1150template <typename T, unsigned int N>; 1151class R__CLING_PTRCHECK(off) RVecN : public Detail::VecOps::RVecImpl<T>, Internal::VecOps::SmallVectorStorage<T, N> {; 1152public:; 1153 RVecN() : Detail::VecOps::RVecImpl<T>(N) {}; 1154 ; 1155 ~RVecN(); 1156 {; 1157 if (this->Owns()) {; 1158 // Destroy the constructed elements in the vector.; 1159 this->destroy_range(this->begin(),",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:39421,variab,variable-sized,39421,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,2,['variab'],['variable-sized']
Modifiability,"0, . Double_t ; x9 = 0, . Double_t ; x10 = 0, . Double_t ; x11 = 0, . Double_t ; x12 = 0, . Double_t ; x13 = 0, . Double_t ; x14 = 0 . ). virtual . Fill a Ntuple: Each Ntuple item is an argument. ; Definition at line 171 of file TNtupleD.cxx. ◆ GetArgs(). Double_t * TNtupleD::GetArgs ; (; ); const. inline . Definition at line 53 of file TNtupleD.h. ◆ GetNvar(). virtual Int_t TNtupleD::GetNvar ; (; ); const. inlinevirtual . Definition at line 52 of file TNtupleD.h. ◆ IsA(). TClass * TNtupleD::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 58 of file TNtupleD.h. ◆ operator=(). TNtupleD & TNtupleD::operator= ; (; const TNtupleD & ; ). privatedelete . ◆ ReadStream(). Long64_t TNtupleD::ReadStream ; (; std::istream & ; inputStream, . const char * ; branchDescriptor = """", . char ; delimiter = ' ' . ). overridevirtual . Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ; Lines in the input file starting with ""#"" are ignored. ; Reimplemented from TTree.; Definition at line 200 of file TNtupleD.cxx. ◆ ResetBranchAddress(). void TNtupleD::ResetBranchAddress ; (; TBranch * ; branch). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 114 of file TNtupleD.cxx. ◆ ResetBranchAddresses(). void TNtupleD::ResetBranchAddresses ; (; ). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 128 of file TNtupleD.cxx. ◆ Streamer(). void TNtupleD::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TNamed.; Definition at line 229 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:52902,variab,variables,52902,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,1,['variab'],['variables']
Modifiability,"0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  . Private Member Functions;  TEveLineProjected (const TEveLineProjected &);  ; TEveLineProjected & operator= (const TEveLineProjected &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:45957,inherit,inherited,45957,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,2,['inherit'],['inherited']
Modifiability,"0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCreateParameterPoints() const; voidCreateTestStatSampler() const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. boolfAdaptiveSamplingcontrols use of adaptive sampling algorithm; RooStats::ConfidenceBelt*fConfBelt; boolfCreateBeltcontrols use if ConfidenceBelt should be saved to a TFile; RooAbsData*fDatadata set ; Bool_tfDoProfileConstructioninstead of full construction over nuisance parametrs, do profile; Bool_tfFluctuateDatatell ToyMCSampler to fluctuate number of entries in dataset; Int_tfNbinsnumber of samples per variable; RooArgSetfNuisParamsRooArgSet specifying nuisance parameters for interval; RooArgSetfPOIRooArgSet specifying parameters of interest for interval; RooAbsPdf*fPdfcommon PDF; RooAbsData*fPointsToTestpoints to perform the construction; boolfSaveBeltToFilecontrols use if ConfidenceBelt should be saved to a TFile; Double_tfSizesize of the test (eg. specified rate of Type I error); RooStats::ToyMCSampler*fTestStatSamplerthe test statistic sampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FeldmanCousins(); default constructor; fWS = new RooWorkspace(""FeldmanCousinsWS"");; fOwnsWorkspace = true;; fDataName = """";; fPdfName = """";. ~FeldmanCousins(); destructor; if(fOwnsWorkspace && fWS) delete fWS;. void SetModel(const RooStats::ModelConfig& ); set the model. void CreateTestStatSampler() const; specify the Test Statistic and create a ToyMC test statistic sampler. void CreateParameterPoints() const; specify the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__FeldmanCousins.html:7636,adapt,adaptive,7636,root/html526/RooStats__FeldmanCousins.html,https://root.cern,https://root.cern/root/html526/RooStats__FeldmanCousins.html,2,"['adapt', 'variab']","['adaptive', 'variable']"
Modifiability,"0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoCombiTrans; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGeoMatrix; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void Normalize (Double_t *vect);  Normalize a vector. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fScale [3];  ;  Protected Attributes inherited from TGeoCombiTrans; TGeoRotation * fRotation;  ; Double_t fTranslation [3];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoMatrix; enum  EGeoTransfTypes { ;   kGeoIdentity = 0; , kGeoShared = (1ULL << ( 14 )); , kGeoTranslation = (1ULL << ( 17 )); , kGeoRotation = (1ULL << ( 18 )); , ;   kGeoScale = (1ULL << ( 19 )); , kGeoReflec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGenTrans.html:15858,inherit,inherited,15858,doc/master/classTGeoGenTrans.html,https://root.cern,https://root.cern/doc/master/classTGeoGenTrans.html,2,['inherit'],['inherited']
Modifiability,"0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SPlots (Double_t *covmat, Int_t i_excl);  Computes the sWeights from the covariance matrix. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TMatrixD fMinmax;  ; Int_t fNevents;  ; Int_t fNSpecies;  ; Double_t * fNumbersOfEvents;  ; Int_t fNx;  ; Int_t fNy;  ; TMatrixD fPdfTot;  ; TString * fSelection;  ; TMatrixD fSWeights;  ; TObjArray fSWeightsHists;  ; TTree * fTree;  ; TString * fTreename;  ; TString * fVarexp;  ; TMatrixD fXvar;  ; TObjArray fXvarHists;  ; TMatrixD fYpdf;  ; TObjArray fYpdfHists;  ; TMatrixD fYvar;  ; TObjArray fYvarHists;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:22588,inherit,inherited,22588,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,1,['inherit'],['inherited']
Modifiability,"0, TSlave *sl=0);  Send a file to master or slave servers. ;  ; virtual void SendInputDataFile ();  Send the input data objects to the master; the objects are taken from the dedicated list and / or the specified file. ;  ; void SetDSet (TDSet *dset);  ; void SetFeedback (TString &opt, TString &optfb, Int_t action);  Extract from opt in optfb information about wanted feedback settings. ;  ; void SetPlayer (TVirtualProofPlayer *player);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; virtual void ValidateDSet (TDSet *dset);  Validate a TDSet. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Attributes; TCondor * fCondor;  ; TTimer * fTimer;  . Friends; class TCondor;  . Additional Inherited Members;  Public Types inherited from TProof; enum  EProofClearData { kPurge = 0x1; , kUnregistered = 0x2; , kDataset = 0x4; , kForceClear = 0x8; };  ; enum  EQueryMode { kSync = 0; , kAsync = 1; };  ; enum  ERegisterOpt { kFailIfExists = 0; , kOverwriteIfExists = 1; , kMergeIfExists = 2; };  ; enum  ERunStatus { kRunning = 0; , kStopped = 1; , kAborted = 2; };  ; enum  EStatusBits { ;   kUsingSessionGui = (1ULL << ( 14 )); , kNewInputData = (1ULL << ( 15 )); , kIsClient = (1ULL << ( 16 )); , kIsMaster = (1ULL << ( 17 )); , ;   kIsTopMaster = (1ULL << ( 18 )); , kUseProgressDialog = (1ULL << ( 19 )). };  ; enum  ESubMerge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofCondor.html:38643,inherit,inherited,38643,doc/master/classTProofCondor.html,https://root.cern,https://root.cern/doc/master/classTProofCondor.html,1,['inherit'],['inherited']
Modifiability,"0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. ~Fitter(). Destructor. Fitter(const ROOT::Fit::Fitter& ). Copy constructor (disabled, class is not copyable). bool Fit( const Data & data, const Function & func ). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). bool Fit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit (default method). return DoLeastSquareFit(const ROOT::Fit::BinData& data). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit an unbinned data set using loglikelihood method. return DoLikelihoodFit(data, extended). bool LikelihoodFit(const Data & data ). Likelihood fit (unbinned or unbinned) depending on the type of data; If Binned default is extended; If Unbinned default is NOT extended (for backward compatibility). return DoLikelihoodFit(data). bool LikelihoodFit(const Data & data, bool extended ). Likelihood fit using extended or not extended method. bool LikelihoodFit( const Data & data, const Function & func, bool extended). fit a data set using any generic model function; Pre-requisite on the function:. SetFunction(func). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see documentation for following methods FitFCN(IMultiGenFunction & fcn,..). bool SetFCN(ROOT::Fit::Fitter::Min",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__Fitter.html:7106,extend,extended,7106,root/html534/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__Fitter.html,1,['extend'],['extended']
Modifiability,"0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. ~Fitter(). Destructor. Fitter(const ROOT::Fit::Fitter& ). Copy constructor (disabled, class is not copyable). bool Fit( const Data & data, const Function & func ). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). bool Fit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit (default method). return DoLeastSquareFit(const ROOT::Fit::BinData& data). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit an unbinned data set using loglikelihood method. return DoLikelihoodFit(data, extended). bool LikelihoodFit(const Data & data ). Likelihood fit (unbinned or unbinned) depending on the type of data; If Binned default is extended; If Unbinned defult is NOT extended (for backward compatibility). return DoLikelihoodFit(data). bool LikelihoodFit(const Data & data, bool extended ). Likelihood fit using extended or not extended method. bool LikelihoodFit( const Data & data, const Function & func, bool extended). fit a data set using any generic model function; Pre-requisite on the function:. SetFunction(func). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see documentation for following methods FitFCN(IMultiGenFunction & fcn,..). bool SetFCN(ROOT::Fit::Fitter::Minu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Fitter.html:7106,extend,extended,7106,root/html532/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Fitter.html,1,['extend'],['extended']
Modifiability,"0,1,0],...; fSizes stores the combined size of each bin in a dimension, i.e. in above example it would contain 24, 12, 3, 1.; Storage is allocated lazily, only when data is written to the array. ; Definition at line 46 of file TNDArray.h. Public Member Functions;  TNDArray ();  ;  TNDArray (Int_t ndim, const Int_t *nbins, bool addOverflow=false);  ; virtual void AddAt (ULong64_t linidx, Double_t value)=0;  ; virtual Double_t AtAsDouble (ULong64_t linidx) const =0;  ; Long64_t GetBin (const Int_t *idx) const;  ; Long64_t GetCellSize (Int_t dim) const;  ; Long64_t GetNbins () const;  ; Int_t GetNdimensions () const;  ; virtual void Init (Int_t ndim, const Int_t *nbins, bool addOverflow=false);  ; TClass * IsA () const override;  ; virtual void Reset (Option_t *option="""")=0;  ; virtual void SetAsDouble (ULong64_t linidx, Double_t value)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNDArray.html:1441,inherit,inherited,1441,doc/master/classTNDArray.html,https://root.cern,https://root.cern/doc/master/classTNDArray.html,1,['inherit'],['inherited']
Modifiability,"0,1]*RooGaussian::g[x,m,s]' --> 'f*g'; e.g. 'RooGaussian::g(x,y,s)|x' --> g|x'; e.g. '$MetaArg(RooGaussian::g[x,m,s],blah)' --> '$MetaArg(g,blah)'. std::string processSingleExpression(const char* arg); Process a single high-level expression. The returned string a the reduced; expression where all inline object creations have been executed and substituted; with the name of the created object. e.g. 'RooGaussian::g(x,m,s)' --> 'g'; e.g. 'x[-10,10]' --> 'x'. string processListExpression(const char* arg); Process a list of high-level expression. The returned string a the reduced; expression list where all inline object creations have been executed and substituted; with the name of the created object. E.g. '{x(-10,10),s} --> '{x,s}'. string processAliasExpression(const char* arg); Parse token. TClass* resolveClassName(const char* className). string varTag(string& func, vector<string>& args). string processCreateVar(string& func, vector<string>& args); Glue function between high-level syntax and low-level factory call to createVariable:; Process a parsed call to create a variable named 'func'. If initial token is non-numeric, a RooCategory will be created, and the args are interpreted; as either state names or 'name=id' assignments. Otherwise a RooRealvar is created and the; arg list is interpreted as follows:; If list has two args, these are interpreted as xmin,xmax; If list has three args, these are interpreted as xinit,xmin,xmax; If list has one arg, this is interpreted as xinit and the variable is set as constant. string processCreateArg(string& func, vector<string>& args); Glue function between high-level syntax and low-level factory call to createArg:; Process a parsed call to create a p.d.f named func. The func arg is interpreted as ClassName::ObjectName and the arglist is passed; verbatim to createArg. The received arglist is expected to be fully reduced (i.e.; all inline object creations must have been compiled). std::string processMetaArg(string& func, vector<stri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFactoryWSTool.html:19428,variab,variable,19428,root/html602/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html602/RooFactoryWSTool.html,2,['variab'],['variable']
Modifiability,"0,200);; c.DrawColorTable();; return c;; }. Text Size; If the text precision (see next paragraph) is smaller than 3, the text; size (textsize) is a fraction of the current pad size. Therefore the; same textsize value can generate text outputs with different absolute; sizes in two different pads.; The text size in pixels (charheight) is computed the following way:. pad_width = gPad->XtoPixel(gPad->GetX2());; pad_height = gPad->YtoPixel(gPad->GetY1());; if (pad_width < pad_height) charheight = textsize*pad_width;; else charheight = textsize*pad_height;. If the text precision is equal to 3, the text size doesn't depend on the pad's; dimensions. A given textsize value always generates the same absolute; size. The text size (charheight) is given in pixels:. charheight = textsize;. Note that to scale fonts to the same size as the old True Type package a; scale factor of 0.93376068 is apply to the text size before drawing. The text size of any class inheriting from TAttText can; be changed using the method SetTextSize and retrieved using the; method GetTextSize.; Text Font and Precision; The text font code is combination of the font number and the precision. Text font code = 10*fontnumber + precision. Font numbers must be between 1 and 14. The precision can be:; precision = 0 fast hardware fonts (steps in the size); precision = 1 scalable and rotatable hardware fonts (see below); precision = 2 scalable and rotatable hardware fonts; precision = 3 scalable and rotatable hardware fonts. Text size; is given in pixels. The text font and precision of any class inheriting from TAttText can; be changed using the method SetTextFont and retrieved using the; method GetTextFont.; Font quality and speed; When precision 0 is used, only the original non-scaled system fonts are; used. The fonts have a minimum (4) and maximum (37) size in pixels. These; fonts are fast and are of good quality. Their size varies with large steps; and they cannot be rotated.; Precision 1 and 2 fonts have a di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TAttText.html:4614,inherit,inheriting,4614,root/html528/TAttText.html,https://root.cern,https://root.cern/root/html528/TAttText.html,3,['inherit'],['inheriting']
Modifiability,"0.,200000.);; h->GetXaxis()->SetTimeDisplay(1);; h->GetXaxis()->SetTimeFormat(""%d\/%m\/%y%F2000-02-28 13:00:01"");. This defines the time format being ""dd/mm/yy"" and the time offset as the; February 28th 2003 at 13:00:01. If %F is not specified, the time offset used will be the one defined by:; gStyle->SetTimeOffset. For example like that:. TDatime da(2003,02,28,12,00,00);; gStyle->SetTimeOffset(da.Convert());. void SetTimeOffset(Double_t toffset, Option_t* option = ""local""); Change the time offset; If option = ""gmt"", set display mode to GMT. void Streamer(TBuffer& ); Stream an object of class TAxis. void UnZoom(); Reset first & last bin to the full range. void ZoomOut(Double_t factor = 0, Double_t offset = 0); Zoom out by a factor of 'factor' (default =2); uses previous zoom factor by default; Keep center defined by 'offset' fixed; ie. -1 at left of current range, 0 in center, +1 at right. void Delete(Option_t* = """"); { }. TObject * DrawClone(Option_t* = """") const; {return 0;}. THashList * GetLabels(); {return fLabels;}. Int_t GetNbins() const; { return fNbins; }. TObject * GetParent() const; {return fParent;}. Bool_t GetTimeDisplay() const; {return fTimeDisplay;}. const char * GetTimeFormat() const; {return fTimeFormat.Data();}. const char * GetTitle() const; {return fTitle.Data();}. const TArrayD * GetXbins() const; {return &fXbins;}. Double_t GetXmin() const; {return fXmin;}. Double_t GetXmax() const; {return fXmax;}. Bool_t IsVariableBinSize() const; true if axis has variable bin sizes, false otherwise. void SetDrawOption(Option_t* = """"); { }. void SetParent(TObject* obj); {fParent = obj;}. void SetTimeDisplay(Int_t value); {fTimeDisplay = (value != 0);}. » Author: Rene Brun 12/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-03-12 16:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAxis.html:20762,variab,variable,20762,root/html534/TAxis.html,https://root.cern,https://root.cern/root/html534/TAxis.html,1,['variab'],['variable']
Modifiability,"0.0002,0.00001);; gstep.gekin -= gstep.destep;; gstep.getot = gstep.gekin + mass;; gstep.vect[6]= charge*TMath::Sqrt(gstep.getot*gstep.getot; - mass*mass);; gstep.vect[0] = vout[0];; gstep.vect[1] = vout[1];; gstep.vect[2] = vout[2];; gstep.vect[3] = vout[3];; gstep.vect[4] = vout[4];; gstep.vect[5] = vout[5];; gstep.nmec = (Int_t)(5*gRandom->Rndm());; for (Int_t l=0; l<gstep.nmec; l++) gstep.lmec[l] = l;; if (gstep.gekin < 0.001) newParticle = kTRUE;; if (TMath::Abs(gstep.vect[2]) > 30) newParticle = kTRUE;; }; //save the Tree header. The file will be automatically; // closed when going out of the function scope; t2.Write();; }; 12.15.1.1 Adding a Branch with a Fixed Length Array; At first, we create a tree and create branches for a subset of variables in the C structureGctrak_t. Then we add several types of branches. The first branch reads seven floating-point values beginning at the address of 'gstep.vect'. You do not need to specify &gstep.vect, because in C and C++ the array variable holds the address of the first element.; t2.Branch(""vect"",gstep.vect,""vect[7]/F"");; t2.Branch(""getot"",&gstep.getot,""getot/F"");; t2.Branch(""gekin"",&gstep.gekin,""gekin/F"");; 12.15.1.2 Adding a Branch with a Variable Length Array; The next two branches are dependent on each other. The first holds the length of the variable length array and the second holds the variable length array. The lmec branch reads nmec number of integers beginning at the address gstep.lmec.; t2.Branch(""nmec"",&gstep.nmec,""nmec/I"");; t2.Branch(""lmec"",gstep.lmec,""lmec[nmec]/I"");; The variable nmec is a random number and is reset for each entry.; gstep.nmec = (Int_t)(5*gRandom->Rndm());; 12.15.1.3 Filling the Tree; In this emulation of Geant3, we generate and transport particles in a magnetic field and store the particle parameters at each tracking step in a ROOT tree.; 12.15.2 Analysis; In this analysis, we do not read the entire entry we only read one branch. First, we set the address for the branch to the file ds",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:565224,variab,variable,565224,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['variab'],['variable']
Modifiability,0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:110266,config,configuration,110266,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:102690,config,configuration,102690,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.659,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:110546,config,configuration,110546,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"0.01:GDNSteps=10000:GDErrScale=1.02"" );; ; // For an example of the category classifier usage, see: TMVAClassificationCategory; //; // --------------------------------------------------------------------------------------------------; // Now you can optimize the setting (configuration) of the MVAs using the set of training events; // STILL EXPERIMENTAL and only implemented for BDT's !; //; // factory->OptimizeAllMethods(""SigEffAtBkg0.01"",""Scan"");; // factory->OptimizeAllMethods(""ROCIntegral"",""FitGA"");; //; // --------------------------------------------------------------------------------------------------; ; // Now you can tell the factory to train, test, and evaluate the MVAs; //; // Train MVAs using the set of training events; factory->TrainAllMethods();; ; // Evaluate all MVAs using the set of test events; factory->TestAllMethods();; ; // Evaluate and compare performance of all configured MVAs; factory->EvaluateAllMethods();; ; // --------------------------------------------------------------; ; // Save the output; outputFile->Write();; ; std::cout << ""==> Wrote root file: "" << outputFile->GetName() << std::endl;; std::cout << ""==> TMVAClassification is done!"" << std::endl;; ; // Launch the GUI for the root macros; if (!gROOT->IsBatch()) TMVA::TMVAGui( outfileName );; ; return 0;; }; ; int main( int argc, char** argv ); {; // Select methods (don't look at this code - not of interest); TString methodList;; for (int i=1; i<argc; i++) {; TString regMethod(argv[i]);; if(regMethod==""-b"" || regMethod==""--batch"") continue;; if (!methodList.IsNull()) methodList += TString("","");; methodList += regMethod;; }; return TMVAClassification(methodList);; }; DataLoader.h; mainint main()Definition Prototype.cxx:12; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Double_tdouble Double_tDefinition RtypesCore.h:59; TChain.h; TFile.h; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:104009,config,configured,104009,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['config'],['configured']
Modifiability,"0.2);; }; auto g = new TGraph(n,x,y);; g->SetTitle(""Graph title;X title;Y title"");; g->Draw(""AC*"");; }; g#define g(i)Definition RSha256.hxx:105; TGraph::TGraphTGraph()Graph default constructor.Definition TGraph.cxx:108; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16. Default X-Points; If one doesn't specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending on the length of the y-points):; {; double y[6] = {3, 8, 1, 10, 5, 7};; auto g = new TGraph(6,y);; g->SetTitle(""A Graph with default X points"");; g->Draw();; }. Definition at line 41 of file TGraph.h. Public Types; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph.html:2257,inherit,inherited,2257,doc/master/classTGraph.html,https://root.cern,https://root.cern/doc/master/classTGraph.html,1,['inherit'],['inherited']
Modifiability,0.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84934,config,configuration,84934,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"0.408248; 0.547723; 0.621261; 0; 3.3 CVS code repository; How to check out (–in) code from the CVS code repository is described at the M homepage @bib-C++MINUIT. To get the source code from the CVS repository one needs to do:; Kerberos IV authorization:; $ setenv CVSROOT :kserver:SEAL.cvs.cern.ch:/cvs/SEAL. $ cvs co MathLibs/Minuit; Anonymous read-only access (if it’s enabled by the librarian, see details):; $ setenv CVSROOT :pserver:anonymous@SEAL.cvs.cern.ch:/cvs/SEAL. $ cvs login; (Logging in to :pserver:anonymous@seal.cvs.cern.ch:2401/cvs/SEAL) CVS password:cvs; $ cvs co MathLibs/Minuit; (If you want to check out a tagged version SEAL_x_x_x of MINUIT, then do; $ cvs co -r SEAL\_x\_x\_x MathLibs/Minuit ); 3.4 Create a tar.gz from CVS; Once the sources are checked out from the CVS code repository,. change to the directory:; $ cd MathLibs/Minuit; run autogen:; $ ./autogen; create a new directory:; $ cd ..; $ mkdir Minuit-BUILD; $ cd Minuit-BUILD/; run configure:; $ ../Minuit/configure; create the tar.gz:; $ make dist. This will create a Minuit-x.x.x.tar.gz which can be distributed and used as described above.; 3.5 M versions; The version numbers of M follow the release numbers of the SEAL project @bib-SEAL at CERN @bib-CERN.; 3.5.1 From to; The program is entirely written in standard portable . M does not depend on any external library. In its minimal usage the user must only provide an implementation of the FCNBase class to M and parameters and uncertainties in form of std::vector containers.; 3.5.2 Memory allocation and thread safety; Differently to the version of M , the version has its own memory manager (StackAllocator. The user can select between the standard dynamic memory allocation and deallocation (default) and performance-optimized stack–like allocation (optional). However, the library is not thread save using stack–allocation.; 3.5.3 M parameters; Differently to the version of M there is no limit on the number of parameters, variable or non-variable. Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:30107,config,configure,30107,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['config'],['configure']
Modifiability,0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16874,config,configuration,16874,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.70799; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.625222 0.0421632 4287.73 0; : 2 | 0.694153 0.694394 0.638111 0.0419725 4193.66 1; : 3 | 0.689625 0.697522 0.634816 0.0412563 4211.88 2; : 4 | 0.681203 0.694822 0.628686 0.0407413 4252.1 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.619972 0.0411822 4319.36 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.614022 0.0406714 4360.33 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.602694 0.0404119 4446.16 0; : 8 | 0.616397 0.638352 0.610274 0.0409979 4391.54 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.618875 0.0405848 4323.09 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.603058 0.0404042 4443.23 0; : ; : Elapsed time for training with 3200 events: 6.25 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.214 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 300 ) Batch size = 256 Loss function = C; Layer 0 DENSE Layer: ( Input = 300 , Width = 64 ) Ou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:16541,config,configuration,16541,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.70799; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16206,config,configuration,16206,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"00 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.0154708 7245.63 4; : 10 | 0.224257 0.809455 0.18089 0.0153446 7248.78 5; : ; : Elapsed time for training with 1600 events: 1.86 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_DNN_CPU : [dataset] : Evaluation of TMVA_DNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.0796 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_DNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_DNN_CPU.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11927,config,configuration,11927,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"00 - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; 101 ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); 102 the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; 103 These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; 104 specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; 105 the `ROOT::Math::FitMethodFunction` interface.; 106 - The interface for setting the initial values for the function variables (which are the parameters in; 107 of the model function in case of solving for fitting) and specifying their limits.; 108 - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; 109 When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; 110 For the list of the available option parameter one must look at the documentation of the corresponding derived class.; 111 - The interface to retrieve the result of minimization ( minimum X values, function value, gradient, error on the minimum, etc...); 112 - The interface to perform a Scan, Hesse or a Contour plot (for the minimizers that support this, i.e. Minuit and Minuit2); 113 ; 114 An example on how to use this interface is the tutorial NumericalMinimization.C in the tutorials/fit directory.; 115 ; 116 @ingroup MultiMin; 117*/; 118 ; 119class Minimizer {; 120 ; 121public:; 122 ; 123 /// D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:4352,variab,variables,4352,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variables']
Modifiability,"00,326);; Ta->Range(0,0,1,1);; TLine *l = new TLine();; l->SetLineColor(kRed);; l->DrawLine(0.1,0.1,0.9,0.1);; l->DrawLine(0.1,0.1,0.9,0.9);; TMarker *m = new TMarker();; m->SetMarkerStyle(20);; m->SetMarkerColor(kBlue);; m->DrawMarker(0.1,0.1);; TArc *a = new TArc();; a->SetFillStyle(0);; a->SetLineColor(kBlue); a->SetLineStyle(3);; a->DrawArc(0.1, 0.1, 0.2, 0.,45.,""only"");; TText *tt = new TText(0.1,0.1,""Text angle is 45 degrees"");; tt->SetTextAlign(11); tt->SetTextSize(0.1);; tt->SetTextAngle(45);; tt->Draw();; TLatex *t1 = new TLatex(0.3,0.18,""45^{o}"");; t1->Draw();; return Ta;; }. Mnemonic constants are available:; <pre>; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; </pre>; They allow to write:; <pre>; object->SetTextAlign(kHAlignLeft+kVAlignTop);; </pre>. Text Color; The text color is a color index (integer) pointing in the ROOT; color table.; The text color of any class inheriting from TAttText can; be changed using the method SetTextColor and retrieved using the; method GetTextColor.; The following table shows the first 50 default colors. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Text colors"",0,0,500,200);; c->DrawColorTable();; return c;; }. Color transparency; SetTextColorAlpha(), allows to set a transparent color.; In the following example the text color of the text text; is set to blue with a transparency of 35%. The color kBlue; itself remains fully opaque. text->SetTextColorAlpha(kBlue, 0.35);. The transparency is available on all platforms when the flagOpenGL.CanvasPreferGL is set to 1; in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG ... but not PostScript.; Text Size; If the text precision (see next paragraph) is smaller than 3, the text; size (textsize) is a fraction of the current pad size. Therefore the; same textsize value can generate text outputs with different absolute; sizes in two differe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAttText.html:3657,inherit,inheriting,3657,root/html602/TAttText.html,https://root.cern,https://root.cern/root/html602/TAttText.html,2,['inherit'],['inheriting']
Modifiability,"00,326);; Ta->Range(0,0,1,1);; TLine *l = new TLine();; l->SetLineColor(kRed);; l->DrawLine(0.1,0.1,0.9,0.1);; l->DrawLine(0.1,0.1,0.9,0.9);; TMarker *m = new TMarker();; m->SetMarkerStyle(20);; m->SetMarkerColor(kBlue);; m->DrawMarker(0.1,0.1);; TArc *a = new TArc();; a->SetFillStyle(0);; a->SetLineColor(kBlue); a->SetLineStyle(3);; a->DrawArc(0.1, 0.1, 0.2, 0.,45.,""only"");; TText *tt = new TText(0.1,0.1,""Text angle is 45 degrees"");; tt->SetTextAlign(11); tt->SetTextSize(0.1);; tt->SetTextAngle(45);; tt->Draw();; TLatex *t1 = new TLatex(0.3,0.18,""45^{o}"");; t1->Draw();; return Ta;; }. Mnemonic constants are available:; <pre>; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; </pre>; They allow to write:; <pre>; object->SetTextAlign(kHAlignLeft+kVAlignTop);; </pre>. Text Color; The text color is a color index (integer) pointing in the ROOT; color table.; The text color of any class inheriting from TAttText can; be changed using the method SetTextColor and retrieved using the; method GetTextColor.; The following table shows the first 50 default colors. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Text colors"",0,0,500,200);; c.DrawColorTable();; return c;; }. Color transparency; SetTextColorAlpha(), allows to set a transparent color.; In the following example the text color of the text text; is set to blue with a transparency of 35%. The color kBlue; itself remains fully opaque. . text->SetTextColorAlpha(kBlue, 0.35);. ; The transparency is available on all platforms when the flagOpenGL.CanvasPreferGL is set to 1; in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG ... but not PostScript.; Text Size; If the text precision (see next paragraph) is smaller than 3, the text; size (textsize) is a fraction of the current pad size. Therefore the; same textsize value can generate text outputs with different absolute; sizes in two diff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttText.html:3661,inherit,inheriting,3661,root/html534/TAttText.html,https://root.cern,https://root.cern/root/html534/TAttText.html,1,['inherit'],['inheriting']
Modifiability,00.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.37748 4.22044 0.0208054 0.00183497 42170.8 4; : 1020 | 3.48034 4.07947 0.020447 0.00177824 42852.4 5; : 1021 | 3.50059 4.11275 0.020219 0.00176964 43361.9 6; : 1022 | 3.15174 3.86168 0.0203283 0.00176093 43086.3 7; : 1023 | 3.4694 4.52782 0.0204007 0.00179059 42987.4 8; : 1024 Minimum Test error found - save the configuration ; : 1024 | 3.57333 3.68346 0.0207199 0.00186469 42428.5 0; : 1025 | 3.1448 3.86932 0.020257 0.0018083 43363.6 1; : 1026 | 3.14966 3.71614 0.0204412 0.00177219 42851.8 2; : 1027 Minimum Test error found - save the configuration ; : 1027 | 3.06278 3.47888 0.0204485 0.00186251 43043.1 0; : 1028 | 3.22518 4.06346 0.0201016 0.00179042 43689.3 1; : 1029 | 3.47015 5.10048 0.0212551 0.0017691 41055.1 2; : 1030 | 3.28552 3.92634 0.0200717 0.0017618 43692.2 3; : 1031 | 3.09879 3.64842 0.0200603 0.0017557 43704.9 4; : 1032 | 3.23242 4.45782 0.0201318 0.0017893 43614.6 5; : 1033 Minimum Test error found - save the configuration ; : 1033 | 3.57665 3.43738 0.0206178 0.00193324 42816.1 0; : 1034 | 3.26951 3.4755 0.0201231 0.00175901 43563.3 1; : 1035 | 3.0748 4.32816 0.0202002 0.00180771 43496 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:114756,config,configuration,114756,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"000 samples of 1000 events; mcs->generateAndFit(2000, 1000);; ; // Number of bins for chi2 plots; int nBins = 100;; ; // Fill histograms with distributions chi2 and prob(chi2,ndf) that; // are calculated by RooChiMCSModule; TH1 *hist_chi2 = mcs->fitParDataSet().createHistogram(""chi2"", AutoBinning(nBins));; hist_chi2->SetTitle(""#chi^{2} values of all toy runs;#chi^{2}"");; TH1 *hist_prob = mcs->fitParDataSet().createHistogram(""prob"", AutoBinning(nBins));; hist_prob->SetTitle(""Corresponding #chi^{2} probability;Prob(#chi^{2},ndof)"");; ; ; // C r e a t e m a n a g e r w i t h s e p a r a t e f i t m o d e l; // ----------------------------------------------------------------------------; ; // Create alternate pdf with shifted mean; RooRealVar mean2(""mean2"", ""mean of gaussian 2"", 2.);; RooGaussian gauss2(""gauss2"", ""gaussian PDF2"", x, mean2, sigma);; ; // Create study manager with separate generation and fit model. This configuration; // is set up to generate biased fits as the fit and generator model have different means,; // and the mean parameter is limited to [-2., 1.8], so it just misses the optimal; // mean value of 2 in the data.; RooMCStudy *mcs2 = new RooMCStudy(gauss2, x, FitModel(gauss), Silence(), Binned());; ; // Add chi^2 calculator module to mcs; RooChi2MCSModule chi2mod2;; mcs2->addModule(chi2mod2);; ; // Generate 1000 samples of 1000 events; mcs2->generateAndFit(2000, 1000);; ; // Request a the pull plot of mean. The pulls will be one-sided because; // `mean` is limited to 1.8.; // Note that RooFit will have trouble to compute the pulls because the parameters; // are called `mean` in the fit, but `mean2` in the generator model. It is not obvious; // that these are related. RooFit will nevertheless compute pulls, but complain that; // this is risky.; auto pullMeanFrame = mcs2->plotPull(mean);; ; // Fill histograms with distributions chi2 and prob(chi2,ndf) that; // are calculated by RooChiMCSModule; TH1 *hist2_chi2 = mcs2->fitParDataSet().createHistogram(""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf802__mcstudy__addons_8C.html:2458,config,configuration,2458,doc/master/rf802__mcstudy__addons_8C.html,https://root.cern,https://root.cern/doc/master/rf802__mcstudy__addons_8C.html,1,['config'],['configuration']
Modifiability,"000-02-28 13:00:01"");. This defines the time format being ""dd/mm/yy"" and the time offset as the; February 28th 2003 at 13:00:01. If %F is not specified, the time offset used will be the one defined by:; gStyle->SetTimeOffset. For example like that:. TDatime da(2003,02,28,12,00,00);; gStyle->SetTimeOffset(da.Convert());. void SetTimeOffset(Double_t toffset, Option_t* option = ""local""); Change the time offset; If option = ""gmt"" the time offset is treated as a GMT time. void Streamer(TBuffer& b); Stream an object of class TAxis. void UnZoom(); Reset first & last bin to the full range. void ZoomOut(Double_t factor = 0, Double_t offset = 0); Zoom out by a factor of 'factor' (default =2); uses previous zoom factor by default; Keep center defined by 'offset' fixed; ie. -1 at left of current range, 0 in center, +1 at right. TAxis& operator=(const TAxis& ). void Delete(Option_t* = """"); { }. TObject * DrawClone(Option_t* = """") const; {return 0;}. THashList * GetLabels(); {return fLabels;}. Int_t GetNbins() const; { return fNbins; }. TObject * GetParent() const; {return fParent;}. Bool_t GetTimeDisplay() const; {return fTimeDisplay;}. const char * GetTimeFormat() const; {return fTimeFormat.Data();}. const char * GetTitle() const; {return fTitle.Data();}. const TArrayD * GetXbins() const; {return &fXbins;}. Double_t GetXmin() const; {return fXmin;}. Double_t GetXmax() const; {return fXmax;}. Bool_t IsVariableBinSize() const; true if axis has variable bin sizes, false otherwise. void SetDrawOption(Option_t* = """"); { }. void SetParent(TObject* obj); {fParent = obj;}. void SetTimeDisplay(Int_t value); {fTimeDisplay = (value != 0);}. » Author: Rene Brun 12/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TAxis.h 36506 2010-11-04 20:58:59Z brun $ » Last generated: 2010-11-04 22:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TAxis.html:20236,variab,variable,20236,root/html528/TAxis.html,https://root.cern,https://root.cern/root/html528/TAxis.html,1,['variab'],['variable']
Modifiability,"000-02-28 13:00:01"");. This defines the time format being ""dd/mm/yy"" and the time offset as the; February 28th 2003 at 13:00:01. If %F is not specified, the time offset used will be the one defined by:; gStyle->SetTimeOffset. For example like that:. TDatime da(2003,02,28,12,00,00);; gStyle->SetTimeOffset(da.Convert());. void SetTimeOffset(Double_t toffset, Option_t* option = ""local""); Change the time offset; If option = ""gmt"" the time offset is treated as a GMT time. void Streamer(TBuffer& b); Stream an object of class TAxis. void UnZoom(); Reset first & last bin to the full range. void ZoomOut(Double_t factor = 0, Double_t offset = 0); Zoom out by a factor of 'factor' (default =2); uses previous zoom factor by default; Keep center defined by 'offset' fixed; ie. -1 at left of current range, 0 in center, +1 at right. TAxis& operator=(const TAxis& ). void Delete(Option_t* = """"); { }. TObject * DrawClone(Option_t* = """") const; {return 0;}. THashList * GetLabels(); {return fLabels;}. Int_t GetNbins() const; { return fNbins; }. TObject * GetParent() const; {return fParent;}. Bool_t GetTimeDisplay() const; {return fTimeDisplay;}. const char * GetTimeFormat() const; {return fTimeFormat.Data();}. const char * GetTitle() const; {return fTitle.Data();}. const TArrayD * GetXbins() const; {return &fXbins;}. Double_t GetXmin() const; {return fXmin;}. Double_t GetXmax() const; {return fXmax;}. Bool_t IsVariableBinSize() const; true if axis has variable bin sizes, false otherwise. void SetDrawOption(Option_t* = """"); { }. void SetParent(TObject* obj); {fParent = obj;}. void SetTimeDisplay(Int_t value); {fTimeDisplay = (value != 0);}. » Author: Rene Brun 12/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TAxis.h 36506 2010-11-04 20:58:59Z brun $ » Last generated: 2011-07-04 15:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAxis.html:20830,variab,variable,20830,root/html530/TAxis.html,https://root.cern,https://root.cern/root/html530/TAxis.html,1,['variab'],['variable']
Modifiability,"000-02-28 13:00:01"");. This defines the time format being ""dd/mm/yy"" and the time offset as the; February 28th 2003 at 13:00:01. If %F is not specified, the time offset used will be the one defined by:; gStyle->SetTimeOffset. For example like that:. TDatime da(2003,02,28,12,00,00);; gStyle->SetTimeOffset(da.Convert());. void SetTimeOffset(Double_t toffset, Option_t* option = ""local""); Change the time offset; If option = ""gmt"" the time offset is treated as a GMT time. void Streamer(TBuffer& b); Stream an object of class TAxis. void UnZoom(); Reset first & last bin to the full range. void ZoomOut(Double_t factor = 0, Double_t offset = 0); Zoom out by a factor of 'factor' (default =2); uses previous zoom factor by default; Keep center defined by 'offset' fixed; ie. -1 at left of current range, 0 in center, +1 at right. TAxis& operator=(const TAxis& ). void Delete(Option_t* = """"); { }. TObject * DrawClone(Option_t* = """") const; {return 0;}. THashList * GetLabels(); {return fLabels;}. Int_t GetNbins() const; { return fNbins; }. TObject * GetParent() const; {return fParent;}. Bool_t GetTimeDisplay() const; {return fTimeDisplay;}. const char * GetTimeFormat() const; {return fTimeFormat.Data();}. const char * GetTitle() const; {return fTitle.Data();}. const TArrayD * GetXbins() const; {return &fXbins;}. Double_t GetXmin() const; {return fXmin;}. Double_t GetXmax() const; {return fXmax;}. Bool_t IsVariableBinSize() const; true if axis has variable bin sizes, false otherwise. void SetDrawOption(Option_t* = """"); { }. void SetParent(TObject* obj); {fParent = obj;}. void SetTimeDisplay(Int_t value); {fTimeDisplay = (value != 0);}. » Author: Rene Brun 12/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TAxis.h 36506 2010-11-04 20:58:59Z brun $ » Last generated: 2011-11-03 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAxis.html:20830,variab,variable,20830,root/html532/TAxis.html,https://root.cern,https://root.cern/root/html532/TAxis.html,1,['variab'],['variable']
Modifiability,"000000, Bool_t copyCache = kTRUE); virtual voidresetCache(); virtual voidsetArgStatus(const RooArgSet& set, Bool_t active). Data Members; public:. enum ErrorType { Poisson; SumW2; None; Auto; };; enum StorageType { Tree; Vector; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. static RooAbsData::StorageTypedefaultStorageType. protected:. TIterator*_cacheIter! Iterator over cached variables; RooArgSet_cachedVars! External variables cached with this data set; RooAbsDataStore*_dstoreData storage implementation; TIterator*_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<std::string,RooAbsData*>_ownedComponentsOwned external components; RooArgSet_varsDimensions of this data set; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void setDefaultStorageType(RooAbsData::StorageType s). void claimVars(RooAbsData* ). Bool_t releaseVars(RooAbsData* ); If return value is true variables can be deleted. ~RooAbsData(); Destructor. void convertToVectorStore(); Convert tree-based storage to vector-based storage. Bool_t changeObservableName(const char* from, const char* to). void fill(). Int_t numEntries() const. void reset(). const RooArgSet* get(Int_t index) const. void cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArgSet* nset = 0); Internal method -- Cache given set of functions with data. void resetCache(); Internal method -- Remove cached function values. void attachCache(const RooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsData.html:14093,variab,variables,14093,root/html532/RooAbsData.html,https://root.cern,https://root.cern/root/html532/RooAbsData.html,3,['variab'],['variables']
Modifiability,"00000000, Long64_t firstentry = 0); Make a projection of a tree using selections. Depending on the value of varexp (described in Draw) a 1-D, 2-D, etc.,; projection of the tree will be filled in histogram hname.; Note that the dimension of hname must match with the dimension of varexp. TSQLResult* Query(const char* varexp = """", const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Loop over entries and return a TSQLResult object containing entries following selection. Long64_t ReadFile(const char* filename, const char* branchDescriptor = """", char delimiter = ' '); Create or simply read branches from filename. if branchDescriptor = """" (default), it is assumed that the Tree descriptor; is given in the first line of the file with a syntax like; A/D:Table[2]/F:Ntracks/I:astring/C; otherwise branchDescriptor must be specified with the above syntax.; -If the type of the first variable is not specified, it is assumed to be ""/F""; -if the type of any other variable is not specified, the type of the previous; variable is assumed. eg; x:y:z (all variables are assumed of type ""F""; x/D:y:z (all variables are of type ""D""; x:y/D:z (x is type ""F"", y and z of type ""D"". delimiter allows for the use of another delimiter besides whitespace.; This provides support for direct import of common data file formats; like csv. If delimiter != ' ' and branchDescriptor == """", then the; branch description is taken from the first line in the file, but; delimiter is used for the branch names tokenization rather than ':'.; Note however that if the values in the first line do not use the; /[type] syntax, all variables are assumed to be of type ""F"".; If the filename ends with extensions .csv or .CSV and a delimiter is; not specified (besides ' '), the delimiter is automatically set to ','. Lines in the input file starting with ""#"" are ignored. Leading whitespace; for each column data is skipped. Empty lines are skipped. A TBranch object is created",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:121282,variab,variable,121282,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,9,['variab'],['variable']
Modifiability,"00000000, Long64_t firstentry = 0); Make a projection of a tree using selections. Depending on the value of varexp (described in Draw) a 1-D, 2-D, etc.,; projection of the tree will be filled in histogram hname.; Note that the dimension of hname must match with the dimension of varexp. TSQLResult* Query(const char* varexp = """", const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Loop over entries and return a TSQLResult object containing entries following selection. Long64_t ReadFile(const char* filename, const char* branchDescriptor = """", char delimiter = ' '); Create or simply read branches from filename. if branchDescriptor = """" (default), it is assumed that the Tree descriptor; is given in the first line of the file with a syntax like; A/D:Table[2]/F:Ntracks/I:astring/C; otherwise branchDescriptor must be specified with the above syntax.; -If the type of the first variable is not specified, it is assumed to be ""/F""; -if the type of any other variable is not specified, the type of the previous; variable is assumed. eg; x:y:z (all variables are assumed of type ""F""; x/D:y:z (all variables are of type ""D""; x:y/D:z (x is type ""F"", y and z of type ""D""; -If the type is a string of characters. This will read; subsequent characters until a whitespace is found (whitespace; characters are considered to be blank, newline and tab). delimiter allows for the use of another delimiter besides whitespace.; This provides support for direct import of common data file formats; like csv. If delimiter != ' ' and branchDescriptor == """", then the; branch description is taken from the first line in the file, but; delimiter is used for the branch names tokenization rather than ':'.; Note however that if the values in the first line do not use the; /[type] syntax, all variables are assumed to be of type ""F"".; If the filename ends with extensions .csv or .CSV and a delimiter is; not specified (besides ' '), the delimiter is automatica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:114932,variab,variable,114932,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,6,['variab'],['variable']
Modifiability,"000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMultiDimFit ();  Empty CTOR. Do not use. ;  ;  TMultiDimFit (Int_t dimension, EMDFPolyType type=kMonomials, Option_t *option="""");  Constructor Second argument is the type of polynomials to use in parameterisation, one of: TMultiDimFit::kMonomials TMultiDimFit::kChebyshev TMultiDimFit::kLegendre. ;  ;  ~TMultiDimFit () override;  Destructor. ;  ; virtual void AddRow (const Double_t *x, Double_t D, Double_t E=0);  Add a row consisting of fNVariables independent variables, the known, dependent quantity, and optionally, the square error in the dependent quantity, to the training sample to be used for the parameterization. ;  ; virtual void AddTestRow (const Double_t *x, Double_t D, Double_t E=0);  Add a row consisting of fNVariables independent variables, the known, dependent quantity, and optionally, the square error in the dependent quantity, to the test sample to be used for the test of the parameterization. ;  ; void Browse (TBrowser *b) override;  Browse the TMultiDimFit object in the TBrowser. ;  ; void Clear (Option_t *option="""") override;  Clear internal structures and variables. ;  ; void Draw (Option_t *=""d"") override;  Default Draw method for all objects. ;  ; virtual Double_t Eval (const Double_t *x, const Double_t *coeff=nullptr) const;  Evaluate parameterization at point x. ;  ; virtual Double_t EvalError (const Double_t *x, const Double_t *coeff=nullptr) const;  Evaluate parameterization error at point x. ;  ; virtual void FindParameterization (Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:18993,variab,variables,18993,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,2,"['parameteriz', 'variab']","['parameterization', 'variables']"
Modifiability,"00000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEfficiency ();  Default constructor. ;  ;  TEfficiency (const char *name, const char *title, Int_t nbins, const Double_t *xbins);  Create 1-dimensional TEfficiency object with variable bin size. ;  ;  TEfficiency (const char *name, const char *title, Int_t nbins, Double_t xlow, Double_t xup);  Create 1-dimensional TEfficiency object with fixed bins size. ;  ;  TEfficiency (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins);  Create 2-dimensional TEfficiency object with variable bin size. ;  ;  TEfficiency (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Create 3-dimensional TEfficiency object with variable bin size. ;  ;  TEfficiency (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Create 2-dimensional TEfficiency object with fixed bin size. ;  ;  TEfficiency (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Create 3-dimensional TEfficiency object with fixed bin size. ;  ;  TEfficiency (const TEfficiency &heff);  Copy constructor. ;  ;  TEfficiency (const TH1 &passed, const TH1 &total);  Constructor using two existing histograms as input. ;  ;  ~TEfficiency () override;  default ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEfficiency.html:32320,variab,variable,32320,doc/master/classTEfficiency.html,https://root.cern,https://root.cern/doc/master/classTEfficiency.html,1,['variab'],['variable']
Modifiability,"00000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAllocCharFun_t fReAllocFunc;  ; Int_t fVersion;  . #include <TBufferText.h>. Inheritance diagram for TBufferText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBufferText() [1/2]. TBufferText::TBufferText ; (; ). protected . Default",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:32519,inherit,inherited,32519,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,1,['inherit'],['inherited']
Modifiability,"00000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGLVEntry; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return the default graphics context in use. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGLVEntry; static const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileItem.html:29836,inherit,inherited,29836,doc/master/classTGFileItem.html,https://root.cern,https://root.cern/doc/master/classTGFileItem.html,1,['inherit'],['inherited']
Modifiability,"00000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TDrawFeedback.h>. Inheritance di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDrawFeedback.html:13811,inherit,inherited,13811,doc/master/classTDrawFeedback.html,https://root.cern,https://root.cern/doc/master/classTDrawFeedback.html,2,['inherit'],['inherited']
Modifiability,"00000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TStatsFeedback.h>. Inheritance d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatsFeedback.html:13454,inherit,inherited,13454,doc/master/classTStatsFeedback.html,https://root.cern,https://root.cern/doc/master/classTStatsFeedback.html,2,['inherit'],['inherited']
Modifiability,"0000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TDSet; TDSetElement * fCurrent;  iterator on fElements ;  ; TString fDir;  ; THashList * fElements;  ; TIter * fIterator;  ; TString fObjName;  ; TList * fSrvMaps;  current element ;  ; TIter * fSrvMapsIter;  list for mapping server coordinates for files ;  ; TString fType;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDSetProxy.h>. Inheritance diagram for TDSetProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDSetProxy() [1/2]. TDSetProxy::TDSetProxy ; (; ). Constructor. ; Definition at line 29 of file TDSetProxy.cxx. ◆ TDSetProxy() [2/2]. TDSetProxy::TDSetProxy ; (; const char * ; type, . const char * ; objname = ""*"", . const char * ; dir = ""/"" . ). Constructor. ; Definition at line 37 of file TDSetProxy.cxx. Member Function Documentation. ◆ Class(). static TClass * TDSetProxy::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDSetProxy::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetProxy.html:16148,inherit,inherited,16148,doc/master/classTDSetProxy.html,https://root.cern,https://root.cern/doc/master/classTDSetProxy.html,2,['inherit'],['inherited']
Modifiability,"0000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  . Public Member Functions;  RooChi2Var (const char *name, const char *title, RooAbsReal &func, RooDataHist &data, bool extended, RooDataHist::ErrorType etype, RooAbsTestStatistic::Configuration const &cfg=RooAbsTestStatistic::Configuration{});  ;  RooChi2Var (const RooChi2Var &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; RooAbsTestStatistic * create (const char *name, const char *title, RooAbsReal &pdf, RooAbsData &dhist, const RooArgSet &projDeps, RooAbsTestStatistic::Configuration const &cfg) override;  ; double defaultErrorLevel () const override;  ;  Public Member Functions inherited from RooAbsOptTestStatistic;  RooAbsOptTestStatistic (const char *name, const char *title, RooAbsReal &real, RooAbsData &data, const RooArgSet &projDeps, RooAbsTestStatistic::Configuration const &cfg);  Create a test statistic, and optimise its calculation. ;  ;  RooAbsOptTestStatistic (const RooAbsOptTestStatistic &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsOptTestStatistic () override;  Destructor. ;  ; const char * cacheUniqueSuffix () const override;  Returns a suffix s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:4234,extend,extended,4234,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['extend'],['extended']
Modifiability,"0000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_RPhiZ; };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEvePointSet; void AssertIntIdsSize ();  Assert that size of IntId array is compatible with the size of the point array. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:46434,inherit,inherited,46434,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,4,['inherit'],['inherited']
Modifiability,"0000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_RPhiZ; };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:47280,inherit,inherited,47280,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,16,['inherit'],['inherited']
Modifiability,"0000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TXMLSetup; enum  EXMLLayout { kSpecialized = 2; , kGeneralized = 3; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t fgOnlyStaged = kFALSE;  Before the file is opened, it is checked, that the file is staged, if not, the open fails. ;  ; static UInt_t fgOpenTimeout = TFile::kEternalTimeout;  Timeout for open operations in ms - 0 corresponds to blocking i/o. ;  ; static Int_t fgReadaheadSize = 256000;  Readahead buffer size. ;  ; static std::atomic< Int_t > fgRea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:45423,inherit,inherited,45423,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,2,['inherit'],['inherited']
Modifiability,"000e+00; : 224 : vars : 0.000e+00; : 225 : vars : 0.000e+00; : 226 : vars : 0.000e+00; : 227 : vars : 0.000e+00; : 228 : vars : 0.000e+00; : 229 : vars : 0.000e+00; : 230 : vars : 0.000e+00; : 231 : vars : 0.000e+00; : 232 : vars : 0.000e+00; : 233 : vars : 0.000e+00; : 234 : vars : 0.000e+00; : 235 : vars : 0.000e+00; : 236 : vars : 0.000e+00; : 237 : vars : 0.000e+00; : 238 : vars : 0.000e+00; : 239 : vars : 0.000e+00; : 240 : vars : 0.000e+00; : 241 : vars : 0.000e+00; : 242 : vars : 0.000e+00; : 243 : vars : 0.000e+00; : 244 : vars : 0.000e+00; : 245 : vars : 0.000e+00; : 246 : vars : 0.000e+00; : 247 : vars : 0.000e+00; : 248 : vars : 0.000e+00; : 249 : vars : 0.000e+00; : 250 : vars : 0.000e+00; : 251 : vars : 0.000e+00; : 252 : vars : 0.000e+00; : 253 : vars : 0.000e+00; : 254 : vars : 0.000e+00; : 255 : vars : 0.000e+00; : 256 : vars : 0.000e+00; : --------------------------------------; : No variable ranking supplied by classifier: TMVA_DNN_CPU; : No variable ranking supplied by classifier: TMVA_CNN_CPU; : No variable ranking supplied by classifier: PyKeras; : No variable ranking supplied by classifier: PyTorch; TH1.Print Name = TrainingHistory_TMVA_DNN_CPU_trainingError, Entries= 0, Total sum= 4.65034; TH1.Print Name = TrainingHistory_TMVA_DNN_CPU_valError, Entries= 0, Total sum= 7.70045; TH1.Print Name = TrainingHistory_TMVA_CNN_CPU_trainingError, Entries= 0, Total sum= 7.15224; TH1.Print Name = TrainingHistory_TMVA_CNN_CPU_valError, Entries= 0, Total sum= 6.76684; TH1.Print Name = TrainingHistory_PyKeras_'accuracy', Entries= 0, Total sum= 6.25938; TH1.Print Name = TrainingHistory_PyKeras_'loss', Entries= 0, Total sum= 7.32887; TH1.Print Name = TrainingHistory_PyKeras_'val_accuracy', Entries= 0, Total sum= 5.40937; TH1.Print Name = TrainingHistory_PyKeras_'val_loss', Entries= 0, Total sum= 7.21788; Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_BDT.w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:36306,variab,variable,36306,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,4,['variab'],['variable']
Modifiability,"001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::chi2FitTovirtual RooFit::OwningPtr< RooFitResult > chi2FitTo(RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={})Perform a fit to given histogram.Definition RooAbsReal.cxx:4105; RooAbsReal::asTFTF1 * asTF(const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) constReturn a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parame...Definition RooAbsReal.cxx:3911; RooAbsReal::setDatavirtual bool setData(RooAbsData &, bool=true)Definition RooAbsReal.h:367; RooAbsReal::_unitTString _unitUnit for objects value.Definition RooAbsReal.h:537; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooAbsReal::getValdouble getVal(const RooArgSet &normalisationSet) constLike getVal(const RooArgSet*), but always requires an argument for normalisation.Definition RooAbsReal.h:126; RooAbsReal::readFromStreambool readFromStream(std::istream &is, bool compact, bool verbose=false) overrideRead object contents from stream (dummy for now)Definition RooAbsReal.cxx:426; RooAbsReal::matchArgsbool matchArgs(const RooArgSet &allDeps, RooArgSet &numDeps, const RooArgProxy &a) constUtility function for use in getAnalyticalIntegral().Definition RooAbsReal.cxx:3146; RooAbsReal::fillTreeBranchvoid fillTreeBranch(TTree &t) overrideFill the tree branch that associated with this object with its current value.Definition RooAbsReal.cxx:3099; RooAbsReal::createIntegralRooFit::OwningPtr< RooAbsReal > createIntegral(const RooArgSet &iset, const RooArgSet &nset, const char *rangeName=nullptr) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:39528,config,configuration,39528,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['config'],['configuration']
Modifiability,00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.31,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:106902,config,configuration,106902,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:108865,config,configuration,108865,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.3,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104772,config,configuration,104772,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.014,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90811,config,configuration,90811,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.677,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90924,config,configuration,90924,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"002; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12/** \class THbookFile; 13 \ingroup Hist; 14 This class is an interface to the Hbook objects in Hbook files.; 15 Any Hbook object (1-D, 2-D, Profile, RWN or CWN can be read; 16 ; 17 NB: a THbookFile can only be used in READ mode; 18 Use the utility in $ROOTSYS/bin/h2root to convert Hbook to Root; 19 ; 20 Example of use:; 21 ; 22 gSystem->Load(""libHbook"");; 23 THbookFile f(""myfile.hbook"");; 24 f.ls();; 25 TH1F *h1 = (TH1F*)f.Get(1); //import histogram ID=1 in h1; 26 h1->Fit(""gaus"");; 27 THbookTree *T = (THbookTree*)f.Get(111); //import ntuple header; 28 T->Print(); //show the Hbook ntuple variables; 29 T->Draw(""x"",""y<0""); // as in normal TTree::Draw; 30 ; 31 THbookFile can be browsed via TBrowser.; 32*/; 33 ; 34#include <cstdlib>; 35#include <cstring>; 36#include <cctype>; 37 ; 38#include ""TROOT.h""; 39#include ""THbookFile.h""; 40#include ""TH2.h""; 41#include ""THbookTree.h""; 42#include ""THbookBranch.h""; 43#include ""THbookKey.h""; 44#include ""TGraph.h""; 45#include ""TProfile.h""; 46#include ""TTreeFormula.h""; 47#include ""TLeafI.h""; 48#include ""TBrowser.h""; 49#include ""TSystem.h""; 50#include ""TMath.h""; 51#include ""strlcpy.h""; 52#include ""snprintf.h""; 53 ; 54// NOTE: THe following comments and declarations are a duplicate; 55// of those in main/src/h2root.cxx; 56 ; 57// Note that with gcc3.4 or above the size of PAWC_SIZE must be the same; 58// as in the Fortran definition in hbook.f and zebra; 59// Also, the arrays must be declared extern like on Windows; 60#define PAWC_SIZE 4000000; 61 ; 62// Define the names of the Fortran common blocks for the different OSs; 63 ; 64#ifndef WIN32; 65# define paw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THbookFile_8cxx_source.html:1222,variab,variables,1222,doc/master/THbookFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THbookFile_8cxx_source.html,1,['variab'],['variables']
Modifiability,"00; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TGedTabInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGedTabInfo(). TGedTabInfo::TGedTabInfo ; (; TGTabElement * ; el, . TGCompositeFrame * ; f . ). inline . Definition at line 69 of file TGedEditor.cxx. Member Data Documentation. ◆ fContainer. TGCompositeFrame* TGedTabInfo::fContainer. Definition at line 67 of file TGedEditor.cxx. ◆ fElement. TGTabElement* TGedTabInfo::fElement. Definition at line 66 of file TGedEditor.cxx. gui/ged/src/TGedEditor.cxx. TGedTabInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedTabInfo.html:9316,inherit,inherited,9316,doc/master/classTGedTabInfo.html,https://root.cern,https://root.cern/doc/master/classTGedTabInfo.html,2,['inherit'],['inherited']
Modifiability,"00; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TEllipse; Double_t fPhimax;  Maximum angle (degrees) ;  ; Double_t fPhimin;  Minimum angle (degrees) ;  ; Double_t fR1;  first radius ;  ; Double_t fR2;  second radius ;  ; Double_t fTheta;  Rotation angle (degrees) ;  ; Double_t fX1;  X coordinate of centre. ;  ; Double_t fY1;  Y coordinate of centre. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TArc.h>. Inheritance diagram for TArc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArc() [1/3]. TArc::TArc ; (; ). Arc default constructor. ; Definition at line 32 of file TArc.cxx. ◆ TArc() [2/3]. TArc::TArc ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; r1, . Double_t ; phimin = 0, . Double_t ; phimax = 360 . ). Arc normal constructor. ; Parameters. [in]x1,y1coordinates of centre ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArc.html:17207,inherit,inherited,17207,doc/master/classTArc.html,https://root.cern,https://root.cern/doc/master/classTArc.html,1,['inherit'],['inherited']
Modifiability,"00; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TEllipse; Double_t fPhimax;  Maximum angle (degrees) ;  ; Double_t fPhimin;  Minimum angle (degrees) ;  ; Double_t fR1;  first radius ;  ; Double_t fR2;  second radius ;  ; Double_t fTheta;  Rotation angle (degrees) ;  ; Double_t fX1;  X coordinate of centre. ;  ; Double_t fY1;  Y coordinate of centre. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . #include <TCrown.h>. Inheritance diagram for TCrown:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TCrown() [1/3]. TCrown::TCrown ; (; ). Crown default constructor. ; Definition at line 58 of file TCrown.cxx. ◆ TCrown() [2/3]. TCrown::TCrown ; (; Double_t ; x1, . Double_t ; y1, . Double_t ; radin, . Double_t ; radout, . Double_t ; phimin = 0, . Double_t ; phimax = 360 . ). Crown normal constructor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCrown.html:18311,inherit,inherited,18311,doc/master/classTCrown.html,https://root.cern,https://root.cern/doc/master/classTCrown.html,1,['inherit'],['inherited']
Modifiability,"00; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTLstring:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTLstring()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTLstring.html:16929,inherit,inherited,16929,doc/master/classTStreamerSTLstring.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html,2,['inherit'],['inherited']
Modifiability,"00;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProofLog.h>. Inheritance diagram for TProofLogElem:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofLogElem(). TProofLogElem::TProofLogElem ; (; const char * ; ord, . const char * ; url, . TProofLog * ; logger . ). Constructor. ; Definition at line 318 of file TProofLog.cxx. ◆ ~TProofLogElem(). TProofLogElem::~TProofLogElem ; (; ). override . Destructor. ; Definition at line 343 of file TProofLog.cxx. Member Function Documentation. ◆ Class(). static TClass * TProofLogElem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofLogElem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofLogElem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 114 of file TProofLog.h. ◆ DeclFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLogElem.html:11953,inherit,inherited,11953,doc/master/classTProofLogElem.html,https://root.cern,https://root.cern/doc/master/classTProofLogElem.html,1,['inherit'],['inherited']
Modifiability,"00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPBHandleDSType (EHandleDSType type=kReleaseCache);  ;  ~TPBHandleDSType () override;  ; const char * GetName () const override;  Returns name of object. ;  ; EHandleDSType GetType () const;  ; TClass * IsA () const override;  ; Bool_t IsCheckCache () const;  ; Bool_t IsCopyFiles () const;  ; Bool_t IsReleaseCache () const;  ; Bool_t IsRemoveFiles () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBHandleDSType.html:1663,inherit,inherited,1663,doc/master/classTPBHandleDSType.html,https://root.cern,https://root.cern/doc/master/classTPBHandleDSType.html,1,['inherit'],['inherited']
Modifiability,"01 RooArgSet cexl;; 2602 conParams.selectCommon(constrainedParams, cexl);; 2603 cexl.remove(pdfParams,true,true) ;; 2604 constrainedParams.remove(cexl,true,true) ;; 2605 ; 2606 return finalConstraints ;; 2607}; 2608 ; 2609 ; 2610////////////////////////////////////////////////////////////////////////////////; 2611/// Returns the default numeric MC generator configuration for all RooAbsReals; 2612 ; 2613RooNumGenConfig* RooAbsPdf::defaultGeneratorConfig(); 2614{; 2615 return &RooNumGenConfig::defaultConfig() ;; 2616}; 2617 ; 2618 ; 2619////////////////////////////////////////////////////////////////////////////////; 2620/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 2621/// If this object has no specialized configuration, a null pointer is returned; 2622 ; 2623RooNumGenConfig* RooAbsPdf::specialGeneratorConfig() const; 2624{; 2625 return _specGeneratorConfig.get();; 2626}; 2627 ; 2628 ; 2629 ; 2630////////////////////////////////////////////////////////////////////////////////; 2631/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 2632/// If this object has no specialized configuration, a null pointer is returned,; 2633/// unless createOnTheFly is true in which case a clone of the default integrator; 2634/// configuration is created, installed as specialized configuration, and returned; 2635 ; 2636RooNumGenConfig* RooAbsPdf::specialGeneratorConfig(bool createOnTheFly); 2637{; 2638 if (!_specGeneratorConfig && createOnTheFly) {; 2639 _specGeneratorConfig = std::make_unique<RooNumGenConfig>(*defaultGeneratorConfig()) ;; 2640 }; 2641 return _specGeneratorConfig.get();; 2642}; 2643 ; 2644 ; 2645 ; 2646////////////////////////////////////////////////////////////////////////////////; 2647/// Return the numeric MC generator configuration used for this object. If; 2648/// a specialized configuration was associated with this object, that configuration; 2649/// is returned, otherwise the default configuration for all RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:125729,config,configuration,125729,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['config'],['configuration']
Modifiability,017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error found - save the configuration ; : 999 | 3.31412 4.14973 0.0202938 0.00187677 43438 0; : 1000 | 3.20867 4.17264 0.0201802 0.00179416 43511.4 1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:113336,config,configuration,113336,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103592,config,configuration,103592,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"01998 0.192893 0.0153949 14422.7 2; : 6 | 0.6867 0.696275 0.191869 0.0152227 14492.2 3; : 7 Minimum Test error found - save the configuration ; : 7 | 0.692231 0.691692 0.197632 0.0164904 14132.6 0; : 8 | 0.683383 0.694963 0.194299 0.0156318 14328.3 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.682898 0.684979 0.192122 0.0157399 14513.9 0; : 10 | 0.670592 0.688549 0.192796 0.0152906 14422.1 1; : 11 Minimum Test error found - save the configuration ; : 11 | 0.670202 0.684295 0.191832 0.0154715 14515.7 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.675447 0.682107 0.194058 0.0158608 14366.1 0; : 13 | 0.678105 0.691356 0.193716 0.0152633 14345.5 1; : 14 | 0.684972 0.687408 0.191852 0.0154194 14509.8 2; : 15 | 0.676423 0.689156 0.193176 0.0153404 14395.3 3; : 16 | 0.683185 0.689966 0.191807 0.0149908 14478.3 4; : 17 | 0.672717 0.689982 0.192316 0.0149466 14433.2 5; : 18 | 0.670449 0.68412 0.190877 0.0151753 14570.1 6; : 19 Minimum Test error found - save the configuration ; : 19 | 0.661329 0.670317 0.192098 0.0154074 14488.6 0; : 20 Minimum Test error found - save the configuration ; : 20 | 0.658253 0.661402 0.192014 0.0155677 14508.7 0; : ; : Elapsed time for training with 3200 events: 3.87 sec ; : Evaluate deep neural network on CPU using batches with size = 256; : ; TMVA_DNN : [dataset] : Evaluation of TMVA_DNN on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.102 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: PyKeras_LSTM for Classification; : ; : Split TMVA training data in 2560 training events and 640 validation events; : Training Model Summary; Model: ""sequential""; _________________________________________________________________; Layer (type) Output Shape Param # ; ========================",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:20442,config,configuration,20442,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (px); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px,px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl,model); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf501_simultaneouspdf.C. tutorialsroofitrf501_simultaneouspdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:10267,variab,variable,10267,doc/master/rf501__simultaneouspdf_8C.html,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html,2,['variab'],['variable']
Modifiability,"02 of file RooWorkspace.cxx. ◆ defineSet() [2/2]. bool RooWorkspace::defineSet ; (; const char * ; name, . const RooArgSet & ; aset, . bool ; importMissing = false . ). Define a named RooArgSet with given constituents. ; If importMissing is true, any constituents of aset that are not in the workspace will be imported, otherwise an error is returned for missing components ; Definition at line 844 of file RooWorkspace.cxx. ◆ defineSetInternal(). bool RooWorkspace::defineSetInternal ; (; const char * ; name, . const RooArgSet & ; aset . ). private . Definition at line 878 of file RooWorkspace.cxx. ◆ embeddedData(). RooAbsData * RooWorkspace::embeddedData ; (; RooStringView ; name); const. Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. ; Definition at line 1318 of file RooWorkspace.cxx. ◆ expensiveObjectCache(). RooExpensiveObjectCache & RooWorkspace::expensiveObjectCache ; (; ). inline . Definition at line 166 of file RooWorkspace.h. ◆ extendSet(). bool RooWorkspace::extendSet ; (; const char * ; name, . const char * ; newContents . ). Define a named set in the workspace through a comma separated list of names of objects already in the workspace. ; Definition at line 937 of file RooWorkspace.cxx. ◆ factory() [1/2]. RooFactoryWSTool & RooWorkspace::factory ; (; ). Return instance to factory tool. ; Definition at line 2067 of file RooWorkspace.cxx. ◆ factory() [2/2]. RooAbsArg * RooWorkspace::factory ; (; RooStringView ; expr). Short-hand function for factory()->process(expr); ; Create a RooFit object from the given expression. . Creating variables . x[-10,10] Create variable x with given range and put it in workspace . x[3,-10,10] Create variable x with given range and initial value and put it in workspace . x[3] Create variable x with given constant value . <numeric literal> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>) wherever a RooAbsReal or RooAbsArg argument is expected . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:30351,extend,extendSet,30351,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['extend'],['extendSet']
Modifiability,021 +1.000; : ----------------------------------------; <HEADER> DataSetInfo : Correlation matrix (Background):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.007 +0.009 +0.008; : var2: -0.007 +1.000 -0.020 +0.013; : var3: +0.009 -0.020 +1.000 +0.007; : var4: +0.008 +0.013 +0.007 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [Category_Fisher_2_dsi] : ; : ; : Train method: Category_Fisher_2 for Classification; <HEADER> Category_Fisher_2 : Results for Fisher coefficients:; : -----------------------; : Variable: Coefficient:; : -----------------------; : var1: +0.107; : var2: +0.148; : var3: +0.251; : var4: +0.372; : (offset): -0.751; : -----------------------; : Elapsed time for training with 4871 events: 0.0015 sec ; <HEADER> Category_Fisher_2 : [Category_Fisher_2_dsi] : Evaluation of Category_Fisher_2 on training sample (4871 events); : Elapsed time for evaluation of 4871 events: 0.00213 sec ; : Training finished; : Begin ranking of input variables...; <HEADER> Category_Fisher_1 : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Discr. power; : -------------------------------; : 1 : var4 : 2.205e-01; : 2 : var3 : 1.054e-01; : 3 : var2 : 4.114e-02; : 4 : var1 : 1.987e-02; : -------------------------------; <HEADER> Category_Fisher_2 : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Discr. power; : -------------------------------; : 1 : var4 : 2.153e-01; : 2 : var3 : 1.105e-01; : 3 : var2 : 4.289e-02; : 4 : var1 : 1.986e-02; : -------------------------------; : Elapsed time for training with 10000 events: 0.0412 sec ; <HEADER> Category_Fisher_1 : [Category_Fisher_1_dsi] : Evaluation of Category_Fisher_1 on training sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.00549 sec ; <HEADER> Category_Fisher_2 : [Category_Fisher_2_dsi] : Evaluation of Category_Fisher_2 on training ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:11696,variab,variables,11696,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['variab'],['variables']
Modifiability,"021 return GetObjectChecked(namecycle,TClass::GetClass(classname));; 1022}; 1023 ; 1024 ; 1025////////////////////////////////////////////////////////////////////////////////; 1026/// Return pointer to object identified by namecycle if and only if the actual; 1027/// object is a type suitable to be stored as a pointer to a ""expectedClass""; 1028/// If expectedClass is null, no check is performed.; 1029///; 1030/// - namecycle has the format name;cycle; 1031/// - name = * is illegal, cycle = * is illegal; 1032/// - cycle = """" or cycle = 9999 ==> apply to a memory object; 1033///; 1034/// ### Very important note; 1035/// The calling application must cast the returned pointer to; 1036/// the type described by the 2 arguments (i.e. cl):; 1037///; 1038/// auto objPtr = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; 1039///; 1040/// Note: We recommend using the method TDirectoryFile::Get<T>:; 1041/// ~~~{.cpp}; 1042/// auto objPtr = directory->Get<MyClass>(""some object inheriting from MyClass"");; 1043/// if (objPtr) { ... we found what we are looking for ... }; 1044/// ~~~; 1045 ; 1046void *TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass); 1047{; 1048 ; 1049 // If the name is invalid, issue an error message and return a nullptr; 1050 if (!namecycle || '\0' == namecycle[0]) {; 1051 Error(""GetObjectChecked"", ""The provided key name is invalid."");; 1052 return nullptr;; 1053 }; 1054 ; 1055 Short_t cycle;; 1056 char name[kMaxLen];; 1057 ; 1058 DecodeNameCycle(namecycle, name, cycle, kMaxLen);; 1059 Int_t nch = strlen(name);; 1060 for (Int_t i = nch-1; i > 0; i--) {; 1061 if (name[i] == '/') {; 1062 name[i] = 0;; 1063 TDirectory* dirToSearch=GetDirectory(name);; 1064 const char *subnamecycle = namecycle + i + 1;; 1065 name[i] = '/';; 1066 if (dirToSearch) {; 1067 return dirToSearch->GetObjectChecked(subnamecycle, expectedClass);; 1068 } else {; 1069 return nullptr;; 1070 }; 1071 }; 1072 }; 1073 const char *namobj ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:35328,inherit,inheriting,35328,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,02416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error foun,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:111044,config,configuration,111044,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"02; TCollectionCollection abstract base class.Definition TCollection.h:65; TColorThe color creation and management class.Definition TColor.h:21; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TDirectoryFile::GetFileTFile * GetFile() const overrideDefinition TDirectoryFile.h:92; TDirectoryDescribe directory structure in memory.Definition TDirectory.h:45; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFolder<div class=""legacybox""><h2>Legacy Code</h2> TFolder is a legacy interface: there will be no bug fixes...Definition TFolder.h:30; TFunctionTemplateDictionary for function template This class describes one single function template.Definition TFunctionTemplate.h:26; TFunctionGlobal functions class (global functions are obtained from CINT).Definition TFunction.h:30; TGlobalMappedFunctionDefinition TGlobal.h:53; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TInterpreterThis class defines an abstract interface to a generic command line interpreter.Definition TInterpreter.h:60; TListOfDataMembersA collection of TDataMember objects designed for fast access given a DeclId_t and for keep track of T...Definition TListOfDataMembers.h:33; TListOfEnumsA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnums.h:33; TListOfFunctionTemplatesA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctionTemplates.h:35; TListOfFunctionsA collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFu...Definition TListOfFunctions.h:35; TListA doubly linked list.Definition TList.h:38; TNamed::fNameTString fNameDefinition TNamed.h:32; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:23273,variab,variables,23273,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,4,['variab'],['variables']
Modifiability,"039 ; 4040static const char *; 4041suggest_connection_header(const struct mg_connection *conn); 4042{; 4043 return should_keep_alive(conn) ? ""keep-alive"" : ""close"";; 4044}; 4045 ; 4046 ; 4047#include ""response.inl""; 4048 ; 4049 ; 4050static void; 4051send_no_cache_header(struct mg_connection *conn); 4052{; 4053 /* Send all current and obsolete cache opt-out directives. */; 4054 mg_response_header_add(conn,; 4055 ""Cache-Control"",; 4056 ""no-cache, no-store, ""; 4057 ""must-revalidate, private, max-age=0"",; 4058 -1);; 4059 mg_response_header_add(conn, ""Expires"", ""0"", -1);; 4060 ; 4061 if (conn->protocol_type == PROTOCOL_TYPE_HTTP1) {; 4062 /* Obsolete, but still send it for HTTP/1.0 */; 4063 mg_response_header_add(conn, ""Pragma"", ""no-cache"", -1);; 4064 }; 4065}; 4066 ; 4067 ; 4068static void; 4069send_static_cache_header(struct mg_connection *conn); 4070{; 4071#if !defined(NO_CACHING); 4072 int max_age;; 4073 char val[64];; 4074 ; 4075 const char *cache_control =; 4076 conn->dom_ctx->config[STATIC_FILE_CACHE_CONTROL];; 4077 ; 4078 /* If there is a full cache-control option configured,0 use it */; 4079 if (cache_control != NULL) {; 4080 mg_response_header_add(conn, ""Cache-Control"", cache_control, -1);; 4081 return;; 4082 }; 4083 ; 4084 /* Read the server config to check how long a file may be cached.; 4085 * The configuration is in seconds. */; 4086 max_age = atoi(conn->dom_ctx->config[STATIC_FILE_MAX_AGE]);; 4087 if (max_age <= 0) {; 4088 /* 0 means ""do not cache"". All values <0 are reserved; 4089 * and may be used differently in the future. */; 4090 /* If a file should not be cached, do not only send; 4091 * max-age=0, but also pragmas and Expires headers. */; 4092 send_no_cache_header(conn);; 4093 return;; 4094 }; 4095 ; 4096 /* Use ""Cache-Control: max-age"" instead of ""Expires"" header.; 4097 * Reason: see https://www.mnot.net/blog/2007/05/15/expires_max-age */; 4098 /* See also https://www.mnot.net/cache_docs/ */; 4099 /* According to RFC 2616, Section 14.21, caching t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:120424,config,config,120424,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,3,['config'],"['config', 'configured']"
Modifiability,"04 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trsa(const float *s, const float *a, float *b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRSA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. Local variables. float * trupck(const float *u, float *s, int m); trupck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRUPCK .VERSION KERNFOR 2.08 741218; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trata(const double *a, double *r__, int m, int n). ; see original documentation of CERNLIB package F112. double * trats(const double *a, const double *s, double *b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trchlu(const double *a, double *b, int n); trchlu.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. Local variables. double * trchul(const double *a, double *b, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trinv(const double *t, double *s, int n); trinv.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRINV .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. double * trlta(const double *u, const double *a, double *b, int m, int n); trlta.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRLTA .VERSION KERNFOR 4.15 861204; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trqsq(const double *q, const double *s, double *r__, int m); trqsq.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRQSQ .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. double * trsa(const double *s, const double *a, double *b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCL.html:15787,variab,variables,15787,root/html526/TCL.html,https://root.cern,https://root.cern/root/html526/TCL.html,1,['variab'],['variables']
Modifiability,"040 ; 4041static const char *; 4042suggest_connection_header(const struct mg_connection *conn); 4043{; 4044 return should_keep_alive(conn) ? ""keep-alive"" : ""close"";; 4045}; 4046 ; 4047 ; 4048#include ""response.inl""; 4049 ; 4050 ; 4051static void; 4052send_no_cache_header(struct mg_connection *conn); 4053{; 4054 /* Send all current and obsolete cache opt-out directives. */; 4055 mg_response_header_add(conn,; 4056 ""Cache-Control"",; 4057 ""no-cache, no-store, ""; 4058 ""must-revalidate, private, max-age=0"",; 4059 -1);; 4060 mg_response_header_add(conn, ""Expires"", ""0"", -1);; 4061 ; 4062 if (conn->protocol_type == PROTOCOL_TYPE_HTTP1) {; 4063 /* Obsolete, but still send it for HTTP/1.0 */; 4064 mg_response_header_add(conn, ""Pragma"", ""no-cache"", -1);; 4065 }; 4066}; 4067 ; 4068 ; 4069static void; 4070send_static_cache_header(struct mg_connection *conn); 4071{; 4072#if !defined(NO_CACHING); 4073 int max_age;; 4074 char val[64];; 4075 ; 4076 const char *cache_control =; 4077 conn->dom_ctx->config[STATIC_FILE_CACHE_CONTROL];; 4078 ; 4079 /* If there is a full cache-control option configured,0 use it */; 4080 if (cache_control != NULL) {; 4081 mg_response_header_add(conn, ""Cache-Control"", cache_control, -1);; 4082 return;; 4083 }; 4084 ; 4085 /* Read the server config to check how long a file may be cached.; 4086 * The configuration is in seconds. */; 4087 max_age = atoi(conn->dom_ctx->config[STATIC_FILE_MAX_AGE]);; 4088 if (max_age <= 0) {; 4089 /* 0 means ""do not cache"". All values <0 are reserved; 4090 * and may be used differently in the future. */; 4091 /* If a file should not be cached, do not only send; 4092 * max-age=0, but also pragmas and Expires headers. */; 4093 send_no_cache_header(conn);; 4094 return;; 4095 }; 4096 ; 4097 /* Use ""Cache-Control: max-age"" instead of ""Expires"" header.; 4098 * Reason: see https://www.mnot.net/blog/2007/05/15/expires_max-age */; 4099 /* See also https://www.mnot.net/cache_docs/ */; 4100 /* According to RFC 2616, Section 14.21, caching t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:120456,config,config,120456,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,3,['config'],"['config', 'configured']"
Modifiability,05 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85047,config,configuration,85047,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"05177 a=-0.002833, ; prevFCN = 1659.94939 a=0.0002833, ; prevFCN = 1659.944972 a=-0.0002833, ; prevFCN = 1659.919376 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001207, ; prevFCN = 1659.902797 a=-0.001266, ; prevFCN = 1659.902798 [#1] INFO:Minimization -- Command timer: Real time 0:00:02, CP time 2.700; [#1] INFO:Minimization -- Session timer: Real time 0:00:02, CP time 2.700; a=-0.001237, ; prevFCN = 1659.902781 a=-0.001207, ; prevFCN = 1659.902797 a=-0.001266, ; prevFCN = 1659.902798 a=-0.001231, ; prevFCN = 1659.902782 a=-0.001243, ; prevFCN = 1659.902782 [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.950; [#1] INFO:Minimization -- Session timer: Real time 0:00:03, CP time 3.650, 2 slices; a=-0.001237, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:NumericIntegration -- RooAdaptiveIntegratorND::dtor(model) WARNING: Number of suppressed warningings about integral evaluations where target precision was not reached is 17; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(x,y,z); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y,z]_Norm[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(y,z); [#0] WARNING:NumericIntegration -- RooAdaptiveIntegratorND::dtor(model) WARNING: Number of suppressed warningings about integral evaluations where target precision was not reached is 1; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf903_numintcache.C. tutorialsroofitrf903_numintcache.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf903__numintcache_8C.html:10923,variab,variables,10923,doc/master/rf903__numintcache_8C.html,https://root.cern,https://root.cern/doc/master/rf903__numintcache_8C.html,1,['variab'],['variables']
Modifiability,"06 }; 8607 }; 8608 ; 8609 return is_authorized;; 8610}; 8611 ; 8612 ; 8613/* Authorize against the opened passwords file. Return 1 if authorized. */; 8614static int; 8615authorize(struct mg_connection *conn, struct mg_file *filep, const char *realm); 8616{; 8617 struct read_auth_file_struct workdata;; 8618 char buf[MG_BUF_LEN];; 8619 ; 8620 if (!conn || !conn->dom_ctx) {; 8621 return 0;; 8622 }; 8623 ; 8624 memset(&workdata, 0, sizeof(workdata));; 8625 workdata.conn = conn;; 8626 ; 8627 if (!parse_auth_header(conn, buf, sizeof(buf), &workdata.ah)) {; 8628 return 0;; 8629 }; 8630 ; 8631 if (realm) {; 8632 workdata.domain = realm;; 8633 } else {; 8634 workdata.domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 8635 }; 8636 ; 8637 return read_auth_file(filep, &workdata, INITIAL_DEPTH);; 8638}; 8639 ; 8640 ; 8641/* Public function to check http digest authentication header */; 8642int; 8643mg_check_digest_access_authentication(struct mg_connection *conn,; 8644 const char *realm,; 8645 const char *filename); 8646{; 8647 struct mg_file file = STRUCT_FILE_INITIALIZER;; 8648 int auth;; 8649 ; 8650 if (!conn || !filename) {; 8651 return -1;; 8652 }; 8653 if (!mg_fopen(conn, filename, MG_FOPEN_MODE_READ, &file)) {; 8654 return -2;; 8655 }; 8656 ; 8657 auth = authorize(conn, &file, realm);; 8658 ; 8659 mg_fclose(&file.access);; 8660 ; 8661 return auth;; 8662}; 8663#endif /* NO_FILESYSTEMS */; 8664 ; 8665 ; 8666/* Return 1 if request is authorised, 0 otherwise. */; 8667static int; 8668check_authorization(struct mg_connection *conn, const char *path); 8669{; 8670#if !defined(NO_FILESYSTEMS); 8671 char fname[UTF8_PATH_MAX];; 8672 struct vec uri_vec, filename_vec;; 8673 const char *list;; 8674 struct mg_file file = STRUCT_FILE_INITIALIZER;; 8675 int authorized = 1, truncated;; 8676 ; 8677 if (!conn || !conn->dom_ctx) {; 8678 return 0;; 8679 }; 8680 ; 8681 list = conn->dom_ctx->config[PROTECT_URI];; 8682 while ((list = next_option(list, &uri_vec, &filename_vec)) != NULL) {; 868",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:248998,config,config,248998,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,06; : Cut 1 : myvar1 < 2.83; : Cut 2 : -1.67 < var3 ; : Rule 6 : Importance = 0.2387; : Cut 1 : myvar1 < 1.46; : Cut 2 : var4 < 0.271; : Rule 7 : Importance = 0.1904; : Cut 1 : var4 < -0.708; : Rule 8 : Importance = 0.1897; : Cut 1 : var3 < 0.256; : Cut 2 : var4 < -0.708; : Rule 9 : Importance = 0.1689; : Cut 1 : myvar1 < -2.85; : Rule 10 : Importance = 0.1611; : Cut 1 : -2.85 < myvar1 < 2.68; : Skipping the next 42 rules; : ================================================================; : ; <WARNING> : No input variable directory found - BUG?; : Elapsed time for training with 2000 events: 3.48 sec ; RuleFit : [dataset] : Evaluation of RuleFit on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.00449 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_RuleFit.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_RuleFit.class.C␛[0m; : TMVAC.root:/dataset/Method_RuleFit/RuleFit; Factory : Training finished; : ; : Ranking input variables (method specific)...; : No variable ranking supplied by classifier: Cuts; : No variable ranking supplied by classifier: CutsD; Likelihood : Ranking result (top variable is best ranked); : -------------------------------------; : Rank : Variable : Delta Separation; : -------------------------------------; : 1 : var4 : 5.959e-02; : 2 : myvar1 : 3.033e-04; : 3 : myvar2 : -2.045e-02; : 4 : var3 : -2.655e-02; : -------------------------------------; LikelihoodPCA : Ranking result (top variable is best ranked); : -------------------------------------; : Rank : Variable : Delta Separation; : -------------------------------------; : 1 : var4 : 2.888e-01; : 2 : myvar1 : 6.310e-02; : 3 : var3 : 1.768e-02; : 4 : myvar2 : 1.165e-02; : -------------------------------------; : No variable ranking supplied by classifier: PDERS; PDEFoam : Ranking result (top variable is best ranked); : ----------------------------------------; : Rank : Variable : Variable Importa,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:60353,variab,variables,60353,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"07 if (!bufferRef.Buffer()) {; 908 Error(""ReadObjWithBuffer"", ""Cannot allocate buffer: fObjlen = %d"", fObjlen);; 909 return 0;; 910 }; 911 if (GetFile()==0) return 0;; 912 bufferRef.SetParent(GetFile());; 913 bufferRef.SetPidOffset(fPidOffset);; 914 ; 915 auto storeBuffer = fBuffer;; 916 if (fObjlen > fNbytes-fKeylen) {; 917 fBuffer = bufferRead;; 918 memcpy(bufferRef.Buffer(),fBuffer,fKeylen);; 919 } else {; 920 fBuffer = bufferRef.Buffer();; 921 ReadFile(); //Read object structure from file; 922 }; 923 fBuffer = storeBuffer;; 924 ; 925 // get version of key; 926 bufferRef.SetBufferOffset(sizeof(fNbytes));; 927 Version_t kvers = bufferRef.ReadVersion();; 928 ; 929 bufferRef.SetBufferOffset(fKeylen);; 930 TObject *tobj = 0;; 931 // Create an instance of this class; 932 ; 933 char *pobj = (char*)cl->New();; 934 if (!pobj) {; 935 Error(""ReadObjWithBuffer"", ""Cannot create new object of class %s"", fClassName.Data());; 936 return 0;; 937 }; 938 Int_t baseOffset = cl->GetBaseClassOffset(TObject::Class());; 939 if (baseOffset==-1) {; 940 // cl does not inherit from TObject.; 941 // Since this is not possible yet, the only reason we could reach this code; 942 // is because something is screw up in the ROOT code.; 943 Fatal(""ReadObjWithBuffer"",""Incorrect detection of the inheritance from TObject for class %s.\n"",; 944 fClassName.Data());; 945 }; 946 tobj = (TObject*)(pobj+baseOffset);; 947 ; 948 if (kvers > 1); 949 bufferRef.MapObject(pobj,cl); //register obj in map to handle self reference; 950 ; 951 if (fObjlen > fNbytes-fKeylen) {; 952 char *objbuf = bufferRef.Buffer() + fKeylen;; 953 UChar_t *bufcur = (UChar_t *)&bufferRead[fKeylen];; 954 Int_t nin, nout = 0, nbuf;; 955 Int_t noutot = 0;; 956 while (1) {; 957 Int_t hc = R__unzip_header(&nin, bufcur, &nbuf);; 958 if (hc!=0) break;; 959 R__unzip(&nin, bufcur, &nbuf, (unsigned char*) objbuf, &nout);; 960 if (!nout) break;; 961 noutot += nout;; 962 if (noutot >= fObjlen) break;; 963 bufcur += nin;; 964 objbuf += nout;; 965 };",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:33367,inherit,inherit,33367,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inherit']
Modifiability,"07 }; 8608 }; 8609 ; 8610 return is_authorized;; 8611}; 8612 ; 8613 ; 8614/* Authorize against the opened passwords file. Return 1 if authorized. */; 8615static int; 8616authorize(struct mg_connection *conn, struct mg_file *filep, const char *realm); 8617{; 8618 struct read_auth_file_struct workdata;; 8619 char buf[MG_BUF_LEN];; 8620 ; 8621 if (!conn || !conn->dom_ctx) {; 8622 return 0;; 8623 }; 8624 ; 8625 memset(&workdata, 0, sizeof(workdata));; 8626 workdata.conn = conn;; 8627 ; 8628 if (!parse_auth_header(conn, buf, sizeof(buf), &workdata.ah)) {; 8629 return 0;; 8630 }; 8631 ; 8632 if (realm) {; 8633 workdata.domain = realm;; 8634 } else {; 8635 workdata.domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 8636 }; 8637 ; 8638 return read_auth_file(filep, &workdata, INITIAL_DEPTH);; 8639}; 8640 ; 8641 ; 8642/* Public function to check http digest authentication header */; 8643int; 8644mg_check_digest_access_authentication(struct mg_connection *conn,; 8645 const char *realm,; 8646 const char *filename); 8647{; 8648 struct mg_file file = STRUCT_FILE_INITIALIZER;; 8649 int auth;; 8650 ; 8651 if (!conn || !filename) {; 8652 return -1;; 8653 }; 8654 if (!mg_fopen(conn, filename, MG_FOPEN_MODE_READ, &file)) {; 8655 return -2;; 8656 }; 8657 ; 8658 auth = authorize(conn, &file, realm);; 8659 ; 8660 mg_fclose(&file.access);; 8661 ; 8662 return auth;; 8663}; 8664#endif /* NO_FILESYSTEMS */; 8665 ; 8666 ; 8667/* Return 1 if request is authorised, 0 otherwise. */; 8668static int; 8669check_authorization(struct mg_connection *conn, const char *path); 8670{; 8671#if !defined(NO_FILESYSTEMS); 8672 char fname[UTF8_PATH_MAX];; 8673 struct vec uri_vec, filename_vec;; 8674 const char *list;; 8675 struct mg_file file = STRUCT_FILE_INITIALIZER;; 8676 int authorized = 1, truncated;; 8677 ; 8678 if (!conn || !conn->dom_ctx) {; 8679 return 0;; 8680 }; 8681 ; 8682 list = conn->dom_ctx->config[PROTECT_URI];; 8683 while ((list = next_option(list, &uri_vec, &filename_vec)) != NULL) {; 868",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:249030,config,config,249030,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"07,2001 - e-Print Archive: hep ex/0011057 For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are constructed such that they reflect the correlation coefficients between the observables in the input dataset. ; Definition at line 44 of file RooNDKeysPdf.h. Classes; struct  BoxInfo;  . Public Types; enum  Mirror { ;   NoMirror; , MirrorLeft; , MirrorRight; , MirrorBoth; , ;   MirrorAsymLeft; , MirrorAsymLeftRight; , MirrorAsymRight; , MirrorLeftAsymRight; , ;   MirrorAsymBoth. };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:1583,inherit,inherited,1583,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,4,['inherit'],['inherited']
Modifiability,07.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82558,config,configuration,82558,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"0791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 300 ) Batch size = 256 Loss function = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:17151,config,configuration,17151,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"08 ; 2909 projectedVars.removeAll() ;; 2910 if (!allVars) return ;; 2911 ; 2912 // Start out with suggested list of variables; 2913 projectedVars.add(*allVars) ;; 2914 ; 2915 // Take out plot variable; 2916 RooAbsArg *found= projectedVars.find(plotVar->GetName());; 2917 if(found) {; 2918 projectedVars.remove(*found);; 2919 ; 2920 // Take out eventual servers of plotVar; 2921 std::unique_ptr<RooArgSet> plotServers{plotVar->getObservables(&projectedVars)};; 2922 for(RooAbsArg * ps : *plotServers) {; 2923 RooAbsArg* tmp = projectedVars.find(ps->GetName()) ;; 2924 if (tmp) {; 2925 cxcoutD(Plotting) << ""RooAbsReal::makeProjectionSet("" << GetName() << "") removing "" << tmp->GetName(); 2926 << "" from projection set because it a server of "" << plotVar->GetName() << std::endl ;; 2927 projectedVars.remove(*tmp) ;; 2928 }; 2929 }; 2930 ; 2931 if (!silent) {; 2932 coutW(Plotting) << ""RooAbsReal::plotOn("" << GetName(); 2933 << "") WARNING: cannot project out frame variable (""; 2934 << found->GetName() << ""), ignoring"" << std::endl ;; 2935 }; 2936 }; 2937 ; 2938 // Take out all non-dependents of function; 2939 for(RooAbsArg * arg : *allVars) {; 2940 if (!dependsOnValue(*arg)) {; 2941 projectedVars.remove(*arg,true) ;; 2942 ; 2943 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName(); 2944 << "") function doesn't depend on projection variable ""; 2945 << arg->GetName() << "", ignoring"" << std::endl ;; 2946 }; 2947 }; 2948}; 2949 ; 2950 ; 2951 ; 2952 ; 2953////////////////////////////////////////////////////////////////////////////////; 2954/// If true, the current pdf is a selected component (for use in plotting); 2955 ; 2956bool RooAbsReal::isSelectedComp() const; 2957{; 2958 return _selectComp || _globalSelectComp ;; 2959}; 2960 ; 2961 ; 2962 ; 2963////////////////////////////////////////////////////////////////////////////////; 2964/// Global switch controlling the activation of the selectComp() functionality; 2965 ; 2966void RooAbsReal::globalSelectComp(bool flag); 2967{; 2968 _g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:127753,variab,variable,127753,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"081 /*! \brief d'tor; 1082 *; 1083 *; 1084 */; 1085 Net (const Net& other); 1086 : m_eErrorFunction (other.m_eErrorFunction); 1087 , m_sizeInput (other.m_sizeInput); 1088 , m_layers (other.m_layers); 1089 {; 1090 }; 1091 ; 1092 void setInputSize (size_t sizeInput) { m_sizeInput = sizeInput; } ///< set the input size of the DNN; 1093 void setOutputSize (size_t sizeOutput) { m_sizeOutput = sizeOutput; } ///< set the output size of the DNN; 1094 void addLayer (Layer& layer) { m_layers.push_back (layer); } ///< add a layer (layout); 1095 void addLayer (Layer&& layer) { m_layers.push_back (layer); }; 1096 void setErrorFunction (ModeErrorFunction eErrorFunction) { m_eErrorFunction = eErrorFunction; } ///< which error function is to be used; 1097 ; 1098 size_t inputSize () const { return m_sizeInput; } ///< input size of the DNN; 1099 size_t outputSize () const { return m_sizeOutput; } ///< output size of the DNN; 1100 ; 1101 /*! \brief set the drop out configuration; 1102 *; 1103 *; 1104 */; 1105 template <typename WeightsType, typename DropProbabilities>; 1106 void dropOutWeightFactor (WeightsType& weights,; 1107 const DropProbabilities& drops,; 1108 bool inverse = false);; 1109 ; 1110 /*! \brief start the training; 1111 *; 1112 * \param weights weight vector; 1113 * \param trainPattern training pattern; 1114 * \param testPattern test pattern; 1115 * \param minimizer use this minimizer for training (e.g. SGD); 1116 * \param settings settings used for this training run; 1117 */; 1118 template <typename Minimizer>; 1119 double train (std::vector<double>& weights,; 1120 std::vector<Pattern>& trainPattern,; 1121 const std::vector<Pattern>& testPattern,; 1122 Minimizer& minimizer,; 1123 Settings& settings);; 1124 ; 1125 /*! \brief pre-training for future use; 1126 *; 1127 *; 1128 */; 1129 template <typename Minimizer>; 1130 void preTrain (std::vector<double>& weights,; 1131 std::vector<Pattern>& trainPattern,; 1132 const std::vector<Pattern>& testPattern,; 1133 Minimizer& mini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:39696,config,configuration,39696,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,1,['config'],['configuration']
Modifiability,"084 of file RooWorkspace.cxx. ◆ function(). RooAbsReal * RooWorkspace::function ; (; RooStringView ; name); const. Retrieve function (RooAbsReal) with given name. Note that all RooAbsPdfs are also RooAbsReals. A null pointer is returned if not found. ; Definition at line 1223 of file RooWorkspace.cxx. ◆ fundArg(). RooAbsArg * RooWorkspace::fundArg ; (; RooStringView ; name); const. Return fundamental (i.e. ; non-derived) RooAbsArg with given name. Fundamental types are e.g. RooRealVar, RooCategory. A null pointer is returned if none is found. ; Definition at line 1295 of file RooWorkspace.cxx. ◆ genobj(). TObject * RooWorkspace::genobj ; (; RooStringView ; name); const. Return generic object with given name. ; Definition at line 2026 of file RooWorkspace.cxx. ◆ getSnapshot(). const RooArgSet * RooWorkspace::getSnapshot ; (; const char * ; name); const. Return the RooArgSet containing a snapshot of variables contained in the workspace. ; Note that the variables of the objects in the snapshots are copies of the variables in the workspace. To load the values of a snapshot in the workspace variables, use loadSnapshot() instead. ; Definition at line 1205 of file RooWorkspace.cxx. ◆ getSnapshots(). RooLinkedList const & RooWorkspace::getSnapshots ; (; ); const. inline . Definition at line 100 of file RooWorkspace.h. ◆ import() [1/6]. RooWorkspace::import ; (; const char * ; fileSpec, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {}, . const RooCmdArg & ; arg9 = {} . ). Import a RooAbsArg or RooAbsData set from a workspace in a file. ; Filespec should be constructed as ""filename:wspacename:objectname"" The arguments will be passed to the relevant import() or import(RooAbsData&, ...) import calls NoteFrom python, use Import(), since import is a reserved keyword. Py",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:37102,variab,variables,37102,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,2,['variab'],['variables']
Modifiability,"09 };; 2010 ; 2011 template <typename From, typename To>; 2012 struct ConvertCollectionBasicType<NoFactorMarker<From>,To> {; 2013 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 2014 {; 2015 // Collection of numbers. Memberwise or not, it is all the same.; 2016 ; 2017 TConfigSTL *config = (TConfigSTL*)conf;; 2018 UInt_t start, count;; 2019 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2020 ; 2021 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2022 Int_t nvalues;; 2023 buf.ReadInt(nvalues);; 2024 vec->resize(nvalues);; 2025 ; 2026 From *temp = new From[nvalues];; 2027 buf.ReadFastArrayWithNbits(temp, nvalues, 0);; 2028 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2029 (*vec)[ind] = (To)temp[ind];; 2030 }; 2031 delete [] temp;; 2032 ; 2033 buf.CheckByteCount(start,count,config->fTypeName);; 2034 return 0;; 2035 }; 2036 };; 2037 ; 2038 template <typename To>; 2039 static INLINE_TEMPLATE_ARGS Int_t ConvertCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 2040 {; 2041 // Collection of numbers. Memberwise or not, it is all the same.; 2042 ; 2043 TConfigSTL *config = (TConfigSTL*)conf;; 2044 UInt_t start, count;; 2045 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2046 ; 2047 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2048 Int_t nvalues;; 2049 buf.ReadInt(nvalues);; 2050 vec->resize(nvalues);; 2051 ; 2052 Double32_t *temp = new Double32_t[nvalues];; 2053 buf.ReadFastArrayDouble32(temp, nvalues);; 2054 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2055 (*vec)[ind] = (To)temp[ind];; 2056 }; 2057 delete [] temp;; 2058 ; 2059 buf.CheckByteCount(start,count,config->fTypeName);; 2060 return 0;; 2061 }; 2062 ; 2063 };; 2064 ; 2065 struct VectorPtrLooper {; 2066 ; 2067 template <typename T>; 2068 static INLINE_TEMPLATE_ARGS Int_t ReadBasicType(TBuffer &buf, void *iter, const void *end,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:84034,config,config,84034,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"0907/* Get context information. It can be printed or stored by the caller.; 20908 * Return the size of available information. */; 20909int; 20910mg_get_context_info(const struct mg_context *ctx, char *buffer, int buflen); 20911{; 20912#if defined(USE_SERVER_STATS); 20913 char *end, *append_eoobj = NULL, block[256];; 20914 size_t context_info_length = 0;; 20915 ; 20916#if defined(_WIN32); 20917 static const char eol[] = ""\r\n"", eoobj[] = ""\r\n}\r\n"";; 20918#else; 20919 static const char eol[] = ""\n"", eoobj[] = ""\n}\n"";; 20920#endif; 20921 struct mg_memory_stat *ms = get_memory_stat((struct mg_context *)ctx);; 20922 ; 20923 if ((buffer == NULL) || (buflen < 1)) {; 20924 buflen = 0;; 20925 end = buffer;; 20926 } else {; 20927 *buffer = 0;; 20928 end = buffer + buflen;; 20929 }; 20930 if (buflen > (int)(sizeof(eoobj) - 1)) {; 20931 /* has enough space to append eoobj */; 20932 append_eoobj = buffer;; 20933 end -= sizeof(eoobj) - 1;; 20934 }; 20935 ; 20936 context_info_length += mg_str_append(&buffer, end, ""{"");; 20937 ; 20938 if (ms) { /* <-- should be always true */; 20939 /* Memory information */; 20940 int blockCount = (int)ms->blockCount;; 20941 int64_t totalMemUsed = ms->totalMemUsed;; 20942 int64_t maxMemUsed = ms->maxMemUsed;; 20943 if (totalMemUsed > maxMemUsed) {; 20944 maxMemUsed = totalMemUsed;; 20945 }; 20946 ; 20947 mg_snprintf(NULL,; 20948 NULL,; 20949 block,; 20950 sizeof(block),; 20951 ""%s\""memory\"" : {%s""; 20952 ""\""blocks\"" : %i,%s""; 20953 ""\""used\"" : %"" INT64_FMT "",%s""; 20954 ""\""maxUsed\"" : %"" INT64_FMT ""%s""; 20955 ""}"",; 20956 eol,; 20957 eol,; 20958 blockCount,; 20959 eol,; 20960 totalMemUsed,; 20961 eol,; 20962 maxMemUsed,; 20963 eol);; 20964 context_info_length += mg_str_append(&buffer, end, block);; 20965 }; 20966 ; 20967 if (ctx) {; 20968 /* Declare all variables at begin of the block, to comply; 20969 * with old C standards. */; 20970 char start_time_str[64] = {0};; 20971 char now_str[64] = {0};; 20972 time_t start_time = ctx->start_time;; 20973 t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:626260,variab,variables,626260,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['variab'],['variables']
Modifiability,"0908/* Get context information. It can be printed or stored by the caller.; 20909 * Return the size of available information. */; 20910int; 20911mg_get_context_info(const struct mg_context *ctx, char *buffer, int buflen); 20912{; 20913#if defined(USE_SERVER_STATS); 20914 char *end, *append_eoobj = NULL, block[256];; 20915 size_t context_info_length = 0;; 20916 ; 20917#if defined(_WIN32); 20918 static const char eol[] = ""\r\n"", eoobj[] = ""\r\n}\r\n"";; 20919#else; 20920 static const char eol[] = ""\n"", eoobj[] = ""\n}\n"";; 20921#endif; 20922 struct mg_memory_stat *ms = get_memory_stat((struct mg_context *)ctx);; 20923 ; 20924 if ((buffer == NULL) || (buflen < 1)) {; 20925 buflen = 0;; 20926 end = buffer;; 20927 } else {; 20928 *buffer = 0;; 20929 end = buffer + buflen;; 20930 }; 20931 if (buflen > (int)(sizeof(eoobj) - 1)) {; 20932 /* has enough space to append eoobj */; 20933 append_eoobj = buffer;; 20934 end -= sizeof(eoobj) - 1;; 20935 }; 20936 ; 20937 context_info_length += mg_str_append(&buffer, end, ""{"");; 20938 ; 20939 if (ms) { /* <-- should be always true */; 20940 /* Memory information */; 20941 int blockCount = (int)ms->blockCount;; 20942 int64_t totalMemUsed = ms->totalMemUsed;; 20943 int64_t maxMemUsed = ms->maxMemUsed;; 20944 if (totalMemUsed > maxMemUsed) {; 20945 maxMemUsed = totalMemUsed;; 20946 }; 20947 ; 20948 mg_snprintf(NULL,; 20949 NULL,; 20950 block,; 20951 sizeof(block),; 20952 ""%s\""memory\"" : {%s""; 20953 ""\""blocks\"" : %i,%s""; 20954 ""\""used\"" : %"" INT64_FMT "",%s""; 20955 ""\""maxUsed\"" : %"" INT64_FMT ""%s""; 20956 ""}"",; 20957 eol,; 20958 eol,; 20959 blockCount,; 20960 eol,; 20961 totalMemUsed,; 20962 eol,; 20963 maxMemUsed,; 20964 eol);; 20965 context_info_length += mg_str_append(&buffer, end, block);; 20966 }; 20967 ; 20968 if (ctx) {; 20969 /* Declare all variables at begin of the block, to comply; 20970 * with old C standards. */; 20971 char start_time_str[64] = {0};; 20972 char now_str[64] = {0};; 20973 time_t start_time = ctx->start_time;; 20974 t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:626293,variab,variables,626293,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['variab'],['variables']
Modifiability,"0935 ; 10936#if defined(USE_TIMERS); 10937 ; 10938#define TIMER_API static; 10939#include ""timer.inl""; 10940 ; 10941#endif /* USE_TIMERS */; 10942 ; 10943 ; 10944#if !defined(NO_CGI); 10945/* This structure helps to create an environment for the spawned CGI; 10946 * program.; 10947 * Environment is an array of ""VARIABLE=VALUE\0"" ASCII strings,; 10948 * last element must be NULL.; 10949 * However, on Windows there is a requirement that all these; 10950 * VARIABLE=VALUE\0; 10951 * strings must reside in a contiguous buffer. The end of the buffer is; 10952 * marked by two '\0' characters.; 10953 * We satisfy both worlds: we create an envp array (which is vars), all; 10954 * entries are actually pointers inside buf. */; 10955struct cgi_environment {; 10956 struct mg_connection *conn;; 10957 /* Data block */; 10958 char *buf; /* Environment buffer */; 10959 size_t buflen; /* Space available in buf */; 10960 size_t bufused; /* Space taken in buf */; 10961 /* Index block */; 10962 char **var; /* char **envp */; 10963 size_t varlen; /* Number of variables available in var */; 10964 size_t varused; /* Number of variables stored in var */; 10965};; 10966 ; 10967 ; 10968static void addenv(struct cgi_environment *env,; 10969 PRINTF_FORMAT_STRING(const char *fmt),; 10970 ...) PRINTF_ARGS(2, 3);; 10971 ; 10972/* Append VARIABLE=VALUE\0 string to the buffer, and add a respective; 10973 * pointer into the vars array. Assumes env != NULL and fmt != NULL. */; 10974static void; 10975addenv(struct cgi_environment *env, const char *fmt, ...); 10976{; 10977 size_t i, n, space;; 10978 int truncated = 0;; 10979 char *added;; 10980 va_list ap;; 10981 ; 10982 if ((env->varlen - env->varused) < 2) {; 10983 mg_cry_internal(env->conn,; 10984 ""%s: Cannot register CGI variable [%s]"",; 10985 __func__,; 10986 fmt);; 10987 return;; 10988 }; 10989 ; 10990 /* Calculate how much space is left in the buffer */; 10991 space = (env->buflen - env->bufused);; 10992 ; 10993 do {; 10994 /* Space for ""\0\0"" is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:315617,variab,variables,315617,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['variab'],['variables']
Modifiability,"0936 ; 10937#if defined(USE_TIMERS); 10938 ; 10939#define TIMER_API static; 10940#include ""timer.inl""; 10941 ; 10942#endif /* USE_TIMERS */; 10943 ; 10944 ; 10945#if !defined(NO_CGI); 10946/* This structure helps to create an environment for the spawned CGI; 10947 * program.; 10948 * Environment is an array of ""VARIABLE=VALUE\0"" ASCII strings,; 10949 * last element must be NULL.; 10950 * However, on Windows there is a requirement that all these; 10951 * VARIABLE=VALUE\0; 10952 * strings must reside in a contiguous buffer. The end of the buffer is; 10953 * marked by two '\0' characters.; 10954 * We satisfy both worlds: we create an envp array (which is vars), all; 10955 * entries are actually pointers inside buf. */; 10956struct cgi_environment {; 10957 struct mg_connection *conn;; 10958 /* Data block */; 10959 char *buf; /* Environment buffer */; 10960 size_t buflen; /* Space available in buf */; 10961 size_t bufused; /* Space taken in buf */; 10962 /* Index block */; 10963 char **var; /* char **envp */; 10964 size_t varlen; /* Number of variables available in var */; 10965 size_t varused; /* Number of variables stored in var */; 10966};; 10967 ; 10968 ; 10969static void addenv(struct cgi_environment *env,; 10970 PRINTF_FORMAT_STRING(const char *fmt),; 10971 ...) PRINTF_ARGS(2, 3);; 10972 ; 10973/* Append VARIABLE=VALUE\0 string to the buffer, and add a respective; 10974 * pointer into the vars array. Assumes env != NULL and fmt != NULL. */; 10975static void; 10976addenv(struct cgi_environment *env, const char *fmt, ...); 10977{; 10978 size_t i, n, space;; 10979 int truncated = 0;; 10980 char *added;; 10981 va_list ap;; 10982 ; 10983 if ((env->varlen - env->varused) < 2) {; 10984 mg_cry_internal(env->conn,; 10985 ""%s: Cannot register CGI variable [%s]"",; 10986 __func__,; 10987 fmt);; 10988 return;; 10989 }; 10990 ; 10991 /* Calculate how much space is left in the buffer */; 10992 space = (env->buflen - env->bufused);; 10993 ; 10994 do {; 10995 /* Space for ""\0\0"" is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:315650,variab,variables,315650,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['variab'],['variables']
Modifiability,0985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error found - save the configuration ; : 983 | 3.37896 4.59559 0.0201715 0.00182642 43608.5 0; : 984 Minimum Test error found - save the configuration ; : 984 | 3.36213 4.34126 0.0202597 0.00185498 43467.1 0; : 985 | 3.39032 4.51659 0.0201503 0.00185184 43719.5 1; : 986 | 3.5234 4.95577 0.0201762 0.0017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:111933,config,configuration,111933,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build optimizes is controlled externally to us by a global variable! Don't call us unless you have set that variable properly with TStreamer::Optimize()! ; Definition at line 4709 of file TClass.cxx. ◆ GetStreamerInfoImpl(). TVirtualStreamerInfo * TClass::GetStreamerInfoImpl ; (; Int_t ; version, . Bool_t ; silent . ); const. private . Definition at line 4634 of file TClass.cxx. ◆ GetStreamerInfos(). const TObjArray * TClass::GetStreamerInfos ; (; ); const. inline . Definition at line 492 of file TClass.h. ◆ GetTypeInfo(). const std::type_info * TClass::GetTypeInfo ; (; ); const. inline . Definition at line 496 of file TClass.h. ◆ HasConsistentHashMember(). Bool_t TClass::HasConsistentHashMember ; (; ). inline . Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ; Definition at line 501 of file TClass.h. ◆ HasCustomStreamerMember(). Bool_t TClass::HasCustomStreamerMember ; (; ); const. inline . The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ; Definition at line 508 of file TClass.h. ◆ HasDataMemberInfo(). Bool_t TClass::HasDataMemberInfo ; (; ); const. inline . Definition at line 407 of file TClass.h. ◆ HasDefaultConstructor(). Bool_t TClass::HasDefaultConstructor ; (; Bool_t ; testio = kFALSE); const. Return true if we have access to a constructor usable for I/O. ; This is typically the default constructor but can also be a constructor specifically marked for I/O (for example a constructor taking a TRootIOCtor* as an argument). In other words, if this routine returns true, TClass::New is guarantee to succeed. To know if the class described by this TClass has a default con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:93420,inherit,inheritance,93420,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inheritance']
Modifiability,"0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build optimizes is controlled externally to us by a global variable! Don't call us unless you have set that variable properly with TStreamer::Optimize()! ; Definition at line 4776 of file TClass.cxx. ◆ GetStreamerInfoImpl(). TVirtualStreamerInfo * TClass::GetStreamerInfoImpl ; (; Int_t ; version, . Bool_t ; silent . ); const. private . Definition at line 4701 of file TClass.cxx. ◆ GetStreamerInfos(). const TObjArray * TClass::GetStreamerInfos ; (; ); const. inline . Definition at line 492 of file TClass.h. ◆ GetTypeInfo(). const std::type_info * TClass::GetTypeInfo ; (; ); const. inline . Definition at line 496 of file TClass.h. ◆ HasConsistentHashMember(). Bool_t TClass::HasConsistentHashMember ; (; ). inline . Return 'true' if we can guarantee that if this class (or any class in this class inheritance hierarchy) overload TObject::Hash it also starts the RecursiveRemove process from its own destructor. ; Definition at line 501 of file TClass.h. ◆ HasCustomStreamerMember(). Bool_t TClass::HasCustomStreamerMember ; (; ); const. inline . The class has a Streamer method and it is implemented by the user or an older (not StreamerInfo based) automatic streamer. ; Definition at line 508 of file TClass.h. ◆ HasDataMemberInfo(). Bool_t TClass::HasDataMemberInfo ; (; ); const. inline . Definition at line 407 of file TClass.h. ◆ HasDefaultConstructor(). Bool_t TClass::HasDefaultConstructor ; (; Bool_t ; testio = kFALSE); const. Return true if we have access to a constructor usable for I/O. ; This is typically the default constructor but can also be a constructor specifically marked for I/O (for example a constructor taking a TRootIOCtor* as an argument). In other words, if this routine returns true, TClass::New is guarantee to succeed. To know if the class described by this TClass has a default con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:93421,inherit,inheritance,93421,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inheritance']
Modifiability,"0; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  . #include <TGResourcePool.h>. Inheritance diagram for TGResourcePool:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGResourcePool(). TGResourcePool::TGResourcePool ; (; TGClient * ; client). Create the global GUI resource pool manager. ; Definition at line 59 of file TGResourcePool.cxx. ◆ ~TGResourcePool(). TGResourcePool::~TGResourcePool ; (; ). override . Cleanup the resource pool... ; Definition at line 242 of file TGResourcePool.cxx. Member Function Documentation. ◆ Class(). static TClass * TGResourcePool::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGResourcePool::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGResourcePool::Class_Version ; (; ). inlinestaticconstexp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGResourcePool.html:14849,inherit,inherited,14849,doc/master/classTGResourcePool.html,https://root.cern,https://root.cern/doc/master/classTGResourcePool.html,1,['inherit'],['inherited']
Modifiability,"0; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from RooAbsData; static StorageType defaultStorageType =RooAbsData::Vector;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooDataSet.h>. Inheritance diagram for RooDataSet:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooDataSet() [1/5]. RooDataSet::RooDataSet ; (; ). Default constructor for persistence. ; Definition at line 129 of file RooDataSet.cxx. ◆ RooDataSet() [2/5]. RooDataSet::RooDataSet ; (; RooStringView ; name, . RooStringView ; title, . const RooArgSet & ; vars, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). Construct an unbinned dataset from a RooArgSet defining the dimensions of the data space. ; Optionally, data can be impo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:36435,inherit,inherited,36435,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,3,['inherit'],['inherited']
Modifiability,0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76222,config,configuration,76222,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76336,config,configuration,76336,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76449,config,configuration,76449,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85389,config,configuration,85389,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Test error found - save the configuration ; : 753 | 17.2492 20.0483 0.0200805 0.00181433 43796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93579,config,configuration,93579,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"0; : ; <HEADER> DataSetInfo : Correlation matrix (Signal):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 +0.427 +0.620 +0.834; : var2: +0.427 +1.000 +0.756 +0.779; : var3: +0.620 +0.756 +1.000 +0.854; : var4: +0.834 +0.779 +0.854 +1.000; : ----------------------------------------; <HEADER> DataSetInfo : Correlation matrix (Background):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 +0.390 +0.543 +0.801; : var2: +0.390 +1.000 +0.787 +0.768; : var3: +0.543 +0.787 +1.000 +0.837; : var4: +0.801 +0.768 +0.837 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [datasetBkg0] : ; : ; <HEADER> Factory : Train all methods; <HEADER> Factory : [datasetBkg0] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg0] : Create Transformation ""D"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg0] : Create Transformation ""P"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg0] : Create Transformation ""G"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:3336,variab,variable,3336,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,8,['variab'],['variable']
Modifiability,"0; : ; <HEADER> DataSetInfo : Correlation matrix (Signal):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 +0.427 +0.620 +0.834; : var2: +0.427 +1.000 +0.756 +0.779; : var3: +0.620 +0.756 +1.000 +0.854; : var4: +0.834 +0.779 +0.854 +1.000; : ----------------------------------------; <HEADER> DataSetInfo : Correlation matrix (Background):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 +0.390 +0.543 +0.801; : var2: +0.390 +1.000 +0.787 +0.768; : var3: +0.543 +0.787 +1.000 +0.837; : var4: +0.801 +0.768 +0.837 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [datasetBkg1] : ; : ; <HEADER> Factory : Train all methods; <HEADER> Factory : [datasetBkg1] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg1] : Create Transformation ""D"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg1] : Create Transformation ""P"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg1] : Create Transformation ""G"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:12417,variab,variable,12417,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,8,['variab'],['variable']
Modifiability,"0; : ; <HEADER> DataSetInfo : Correlation matrix (Signal):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 +0.427 +0.620 +0.834; : var2: +0.427 +1.000 +0.756 +0.779; : var3: +0.620 +0.756 +1.000 +0.854; : var4: +0.834 +0.779 +0.854 +1.000; : ----------------------------------------; <HEADER> DataSetInfo : Correlation matrix (Background):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.689 -0.032 +0.201; : var2: -0.689 +1.000 +0.051 -0.112; : var3: -0.032 +0.051 +1.000 -0.090; : var4: +0.201 -0.112 -0.090 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [datasetBkg2] : ; : ; <HEADER> Factory : Train all methods; <HEADER> Factory : [datasetBkg2] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg2] : Create Transformation ""D"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg2] : Create Transformation ""P"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> Factory : [datasetBkg2] : Create Transformation ""G"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:21493,variab,variable,21493,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,8,['variab'],['variable']
Modifiability,"0; TNtuple::~TNtuple~TNtuple() overrideDefault destructor for an Ntuple.Definition TNtuple.cxx:103; TNtuple::IsATClass * IsA() const overrideDefinition TNtuple.h:61; TNtuple::ResetBranchAddressesvoid ResetBranchAddresses() overrideReset the branch addresses to the internal fArgs array.Definition TNtuple.cxx:147; TNtuple::fNvarInt_t fNvarNumber of columns.Definition TNtuple.h:31; TNtuple::ResetBranchAddressvoid ResetBranchAddress(TBranch *) overrideReset the branch addresses to the internal fArgs array.Definition TNtuple.cxx:133; TNtuple::Classstatic TClass * Class(); TNtuple::Browsevoid Browse(TBrowser *b) overrideBrowse content of the ntuple.Definition TNtuple.cxx:158; TNtuple::TNtupleTNtuple()Default constructor for Ntuple.Definition TNtuple.cxx:46; TNtuple::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TNtuple.cxx:249; TNtuple::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtuple.cxx:169; TNtuple::fArgsFloat_t * fArgs! [fNvar] Array of variablesDefinition TNtuple.h:32; TNtuple::CloneTreeTTree * CloneTree(Long64_t nentries=-1, Option_t *option="""") overrideCreate a clone of this tree and copy nentries.Definition TNtuple.cxx:119; TObjArray::IndexOfInt_t IndexOf(const TObject *obj) const overrideDefinition TObjArray.cxx:605; TObjArray::GetEntriesInt_t GetEntries() const overrideReturn the number of objects in array (i.e.Definition TObjArray.cxx:523; TObjArray::UncheckedAtTObject * UncheckedAt(Int_t i) constDefinition TObjArray.h:84; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::Fillvirtual Int_t Fill()Fill all branches.Definition TTree.cxx:4603; TTree::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TTree.cxx:9545; TTree::fBranchesTObjArray fBranchesList of Branches.Definition TTree.h:122; TTree::CloneTreevirtual TTree * CloneTree(Long64_t nentries=-1, Option_t *option="""")Create a clone of this tree and copy nentries.Definition TTree.cxx:3139; TTree::fLea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:11191,variab,variablesDefinition,11191,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,1,['variab'],['variablesDefinition']
Modifiability,"0; i++) {; randomNum.Rannor(px,py);; hpxpy->Fill(px,py);; }; hpxpy->SetMaximum(200);; Double_t zcontours[5] = {0, 20, 40, 80, 120};; hpxpy->SetContour(5, zcontours);; hpxpy->GetZaxis()->SetTickSize(0.01);; hpxpy->GetZaxis()->SetLabelOffset(0.01);; gPad->SetRightMargin(0.13);; hpxpy->SetTitle(""User contours, CJUST"");; hpxpy->Draw(""COL Z CJUST"");; }; c#define c(i)Definition RSha256.hxx:101; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640. Definition at line 28 of file TPaletteAxis.h. Public Types; enum  EStatusBits { kHasView = (1ULL << ( 11 )); };  ;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPaletteAxis ();  Palette default constructor. ;  ;  TPaletteAxis (const TPaletteAxis &palette);  Palette copy constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t min, Double_t max);  Palette normal constructor. ;  ;  TPaletteAxis (Double_t x1, Double_t y1, Double_t x2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaletteAxis.html:4084,inherit,inherited,4084,doc/master/classTPaletteAxis.html,https://root.cern,https://root.cern/doc/master/classTPaletteAxis.html,3,['inherit'],['inherited']
Modifiability,"0;  ; class  MethodCategory;  Class for categorizing the phase space. More...;  ; class  MethodCFMlpANN;  Interface to Clermond-Ferrand artificial neural network. More...;  ; class  MethodCFMlpANN_Utils;  Implementation of Clermond-Ferrand artificial neural network. More...;  ; class  MethodCompositeBase;  Virtual base class for combining several TMVA method. More...;  ; class  MethodCrossValidation;  ; class  MethodCuts;  Multivariate optimisation of signal efficiency for given background efficiency, applying rectangular minimum and maximum requirements. More...;  ; class  MethodDL;  ; class  MethodDNN;  Deep Neural Network Implementation. More...;  ; class  MethodDT;  Analysis of Boosted Decision Trees. More...;  ; class  MethodFDA;  Function discriminant analysis (FDA). More...;  ; class  MethodFisher;  Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis) More...;  ; class  MethodHMatrix;  H-Matrix method, which is implemented as a simple comparison of chi-squared estimators for signal and background, taking into account the linear correlations between the input variables. More...;  ; class  MethodInfo;  ; class  MethodKNN;  Analysis of k-nearest neighbor. More...;  ; class  MethodLD;  Linear Discriminant. More...;  ; class  MethodLikelihood;  Likelihood analysis (""non-parametric approach"") More...;  ; class  MethodMLP;  Multilayer Perceptron class built off of MethodANNBase. More...;  ; class  MethodPDEFoam;  The PDEFoam method is an extension of the PDERS method, which divides the multi-dimensional phase space in a finite number of hyper-rectangles (cells) of constant event density. More...;  ; class  MethodPDERS;  This is a generalization of the above Likelihood methods to \( N_{var} \) dimensions, where \( N_{var} \) is the number of input variables used in the MVA. More...;  ; class  MethodPyAdaBoost;  ; class  MethodPyGTB;  ; class  MethodPyKeras;  ; class  MethodPyRandomForest;  ; class  MethodPyTorch;  ; class  MethodRSNNS;  ; class  Method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA.html:6271,variab,variables,6271,doc/master/namespaceTMVA.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA.html,2,['variab'],['variables']
Modifiability,"0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGListTree (const TGListTree &)=delete;  ; TGListTree & operator= (const TGListTree &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGListTree.h>. Inheritance diagram for TGListTree:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ECheckMode. enum TGListTree::ECheckMode. EnumeratorkSimple ; kRecursive . Definition at line 204 of file TGListTree.h. ◆ EColorMarkupMode. enum TGListTree::EColorMarkupMode. EnumeratorkDefault ; kColorUnderline ; kColorBox . Definition at line 199 of file TGListTree.h. Constructor & Destructor Documentation. ◆ TGListTree() [1/3]. TGListTree::TGListTree ; (; const TGListTree & ; ). privatedelete . ◆ TGListTree() [2/3]. TGListTree::TGListTree ; (; TGWindow * ; p = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . UInt_t ; options = 0, . Pixel_t ; back = GetWhitePixel() . ). Create a list tree widget. ; Definition at line 344 of file TGListTree.cxx. ◆ TGListTree() [3/3]. TGListTree::TGListTree ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListTree.html:49639,inherit,inherited,49639,doc/master/classTGListTree.html,https://root.cern,https://root.cern/doc/master/classTGListTree.html,2,['inherit'],['inherited']
Modifiability,"0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGTextEdit (const TGTextEdit &)=delete;  ; TGTextEdit & operator= (const TGTextEdit &)=delete;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGTextEdit.h>. Inheritance diagram for TGTextEdit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkM_FILE_NEW ; kM_FILE_OPEN ; kM_FILE_CLOSE ; kM_FILE_SAVE ; kM_FILE_SAVEAS ; kM_FILE_PRINT ; kM_EDIT_CUT ; kM_EDIT_COPY ; kM_EDIT_PASTE ; kM_EDIT_SELECTALL ; kM_SEARCH_FIND ; kM_SEARCH_FINDAGAIN ; kM_SEARCH_GOTO . Definition at line 30 of file TGTextEdit.h. ◆ EInsertMode. enum TGTextEdit::EInsertMode. EnumeratorkInsert ; kReplace . Definition at line 29 of file TGTextEdit.h. Constructor & Destructor Documentation. ◆ TGTextEdit() [1/4]. TGTextEdit::TGTextEdit ; (; const TGTextEdit & ; ). privatedelete . ◆ TGTextEdit() [2/4]. TGTextEdit::TGTextEdit ; (; const TGWindow * ; parent = nullptr, . UInt_t ; w = 1, . UInt_t ; h = 1, . Int_t ; id = -1, . UInt_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:46501,inherit,inherited,46501,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,2,['inherit'],['inherited']
Modifiability,"0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGedEditor (const TGedEditor &)=delete;  ; TGedEditor & operator= (const TGedEditor &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedEditor.html:38644,inherit,inherited,38644,doc/master/classTGedEditor.html,https://root.cern,https://root.cern/doc/master/classTGedEditor.html,1,['inherit'],['inherited']
Modifiability,"0;; 1982 }; 1983 ; 1984 template <typename From, typename To>; 1985 struct ConvertCollectionBasicType {; 1986 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 1987 {; 1988 // Collection of numbers. Memberwise or not, it is all the same.; 1989 ; 1990 TConfigSTL *config = (TConfigSTL*)conf;; 1991 UInt_t start, count;; 1992 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1993 ; 1994 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 1995 Int_t nvalues;; 1996 buf.ReadInt(nvalues);; 1997 vec->resize(nvalues);; 1998 ; 1999 From *temp = new From[nvalues];; 2000 buf.ReadFastArray(temp, nvalues);; 2001 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2002 (*vec)[ind] = (To)temp[ind];; 2003 }; 2004 delete [] temp;; 2005 ; 2006 buf.CheckByteCount(start,count,config->fTypeName);; 2007 return 0;; 2008 }; 2009 };; 2010 ; 2011 template <typename From, typename To>; 2012 struct ConvertCollectionBasicType<NoFactorMarker<From>,To> {; 2013 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 2014 {; 2015 // Collection of numbers. Memberwise or not, it is all the same.; 2016 ; 2017 TConfigSTL *config = (TConfigSTL*)conf;; 2018 UInt_t start, count;; 2019 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2020 ; 2021 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2022 Int_t nvalues;; 2023 buf.ReadInt(nvalues);; 2024 vec->resize(nvalues);; 2025 ; 2026 From *temp = new From[nvalues];; 2027 buf.ReadFastArrayWithNbits(temp, nvalues, 0);; 2028 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2029 (*vec)[ind] = (To)temp[ind];; 2030 }; 2031 delete [] temp;; 2032 ; 2033 buf.CheckByteCount(start,count,config->fTypeName);; 2034 return 0;; 2035 }; 2036 };; 2037 ; 2038 template <typename To>; 2039 static INLINE_TEMPLATE_ARGS Int_t ConvertCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:83097,config,config,83097,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TProofMgr;  TProofMgr ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TProofMgr; TSignalHandler * fIntHandler;  ; TString fMssUrl;  ; Int_t fRemoteProtocol;  ; EServType fServType;  ; TList * fSessions;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TProofMgr; static TList fgListOfManagers;  . #include <TProofMgrLite.h>. Inheritance diagram for TProofMgrLite:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofMgrLite(). TProofMgrLite::TProofMgrLite ; (; const char * ; url, . Int_t ; loglevel = -1, . const char * ; alias = """" . ). Create a PROOF manager for the Lite environment. ; Definition at line 41 of file TProofMgrLite.cxx. ◆ ~TProofMgrLite(). TProofMgrLite::~TProofMgrLite ; (; ). inlineoverride . Definition at line 31 of file TProofMgrLite.h. Member Function Documentation. ◆ Class(). static TClass * TProofMgrLite::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofMgrLite::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMgrLite.html:16138,inherit,inherited,16138,doc/master/classTProofMgrLite.html,https://root.cern,https://root.cern/doc/master/classTProofMgrLite.html,3,['inherit'],['inherited']
Modifiability,"0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TGWin32ProxyBase; static ULong_t fgMainThreadId = 0;  main thread ID ;  ; static ULong_t fgPingMessageId = 0;  ping message ID ;  ; static ULong_t fgPostMessageId = 0;  post message ID ;  ; static ULong_t fgUserThreadId = 0;  user (e.g. python) thread ID ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TGWin32ProxyBase; virtual Bool_t ForwardCallBack (Bool_t sync);  if sync is kTRUE: ;  ; virtual void SendExitMessage ();  send exit message to server thread ;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:49912,inherit,inherited,49912,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,2,['inherit'],['inherited']
Modifiability,"0}; 461////////////////////////////////////////////////////////////////////////////////; 462/// Set the name of the file where to redirect `<Scan>` output.; 463 ; 464void TTreeViewer::SetScanFileName(const char *name); 465{; 466 if (fTree) ((TTreePlayer *)fTree->GetPlayer())->SetScanFileName(name);; 467}; 468////////////////////////////////////////////////////////////////////////////////; 469/// Set the state of Scan check button.; 470 ; 471void TTreeViewer::SetScanRedirect(bool mode); 472{; 473 if (mode); 474 fBarScan->SetState(kButtonDown);; 475 else; 476 fBarScan->SetState(kButtonUp);; 477}; 478////////////////////////////////////////////////////////////////////////////////; 479/// Assign the fTree member from existing tree, e.g. when calling; 480/// tree->StartViewer() from the browser, or even from the command line.; 481 ; 482void TTreeViewer::SetTree(TTree *tree); 483{; 484 if (!tree) return;; 485 if (fTree != tree) {; 486 fTree = tree;; 487 // load the tree via the interpreter; 488 // define a global ""tree"" variable for the same tree; 489 TString command = TString::Format(""tv__tree = (TTree *)0x%zx;"", (size_t)tree);; 490 ExecuteCommand(command.Data());; 491 }; 492 //--- add the tree to the list if it is not already in; 493 if (fTreeList) fTreeList->Add(fTree);; 494 ExecuteCommand(""tv__tree_list->Add(tv__tree);"");; 495 //--- map this tree; 496 TGListTreeItem *base = nullptr;; 497 TGListTreeItem *parent = fLt->FindChildByName(base, ""TreeList"");; 498 if (!parent) parent = fLt->AddItem(base, ""TreeList"", new ULong_t(kLTNoType));; 499 ULong_t *itemType = new ULong_t((fTreeIndex << 8) | kLTTreeType);; 500 fTreeIndex++;; 501 TGListTreeItem *lTreeItem = fLt->AddItem(parent, tree->GetName(), itemType,; 502 gClient->GetPicture(""tree_t.xpm""), gClient->GetPicture(""tree_t.xpm""));; 503 MapTree(fTree, lTreeItem, false);; 504 fLt->OpenItem(parent);; 505 fLt->HighlightItem(lTreeItem);; 506 fClient->NeedRedraw(fLt);; 507 ; 508 //--- map slider and list view; 509 SwitchTree(fTree",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8cxx_source.html:17931,variab,variable,17931,doc/master/TTreeViewer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8cxx_source.html,1,['variab'],['variable']
Modifiability,"0};  Number of bytes in TNamed at creation time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TS3WebFile ();  ; Bool_t GetCredentialsFromEnv (const char *accessKeyEnv, const char *secretKeyEnv, const char *tokenEnv, TString &outAccessKey, TString &outSecretKey, TString &outToken);  Sets the access and secret keys from the environmental variables, if they are both set. ;  ; Bool_t ParseOptions (Option_t *options, TString &accessKey, TString &secretKey, TString &token);  Extracts the S3 authentication key pair (access key and secret key) from the options. ;  . Additional Inherited Members;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:42874,variab,variables,42874,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['variab'],['variables']
Modifiability,"1 )); , ;   kSetBranchStatus = (1ULL << ( 12 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TNtupleD.h>. Inheritance diagram for TNtupleD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNtupleD() [1/3]. TNtupleD::TNtupleD ; (; const TNtupleD & ; ). privatedelete . ◆ TNtupleD() [2/3]. TNtupleD::TNtupleD ; (; ). Default constructor for Ntuple. ; Definition at line 45 of file TNtupleD.cxx. ◆ TNtupleD() [3/3]. TNtupleD::TNtupleD ; (; const char * ; name, . const char * ; title, . const char * ; varlist, . Int_t ; bufsize = 32000 . ). Create an Ntuple. ; The parameter varlist describes the list of the ntuple variables separated by a colon:; Example: x:y:z:energy; For each variable in the list a separate branch is created.; NOTE:; Use TTree to create branches with variables of different data types.; Use TTree when the number of branches is large (> 100). . Definition at line 65 of file TNtupleD.cxx. ◆ ~TNtupleD(). TNtupleD::~TNtupleD ; (; ). override . Default destructor for an Ntuple. ; Definition at line 104 of file TNtupleD.cxx. Member Function Documentation. ◆ Browse(). void TNtupleD::Browse ; (; TBrowser * ; b). overridevirtual . Browse content. ; Reimplemented from TObject.; Definition at line 139 of file TNtupleD.cxx. ◆ Class(). static TClass * TNtupleD::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TNtupleD::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TNtupleD::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 58 of file TNtupleD.h. ◆ DeclFileName(). static c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:50118,variab,variables,50118,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,2,['variab'],"['variable', 'variables']"
Modifiability,"1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  MethodANNBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &theData, const TString &theOption);  standard constructor Note: Right now it is an option to choose the neuron input function, but only the input function ""sum"" leads to weight convergence – otherwise the weights go to nan and lead to an ABORT. ;  ;  MethodANNBase (Types::EMVA methodType, DataSetInfo &theData, const TString &theWeightFile);  construct the Method from the weight file ;  ; virtual ~MethodANNBase ();  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  create XML description of ANN classifier ;  ; const Ranking * CreateRanking ();  compute ranking of input variables by summing function of weights ;  ; Bool_t Debug () const;  who the hell makes such strange Debug flags that even use ""global pointers"".. ;  ; virtual void DeclareOptions ();  define the options (their key words) that can be set in the option string here the options valid for ALL MVA methods are declared. ;  ; template<typename WriteIterator > ; void GetLayerActivation (size_t layer, WriteIterator writeIterator);  ; virtual const std::vector< Float_t > & GetMulticlassValues ();  get the multiclass classification values generated by the NN ;  ; virtual Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  get the mva value generated by the NN ;  ; virtual const std::vector< Float_t > & GetRegressionValues ();  get the regression value generated by the NN ;  ; void InitANNBase ();  initialize ANNBase object ;  ; virtual TClass * IsA () const;  ; virtual void Pri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:2072,variab,variables,2072,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,1,['variab'],['variables']
Modifiability,"1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TXMLSetup; enum  EXMLLayout { kSpecialized = 2; , kGeneralized = 3; };  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TBufferText; static const char * fgDoubleFmt = ""%.14e"";  ! printf argument for doubles, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ; static const char * fgFloatFmt = ""%e"";  ! printf argument for floats, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  ;  Static Protected Attributes inherited from TXMLSetup; static TString fgNameSpaceBase = fgROOTDocNameSpaceBase;  buffer, used in XmlDefineClass() function ;  . #include <TBufferXML.h>. Inheritance diagram for TBufferXML:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBufferXML() [1/2]. TBufferXML::TBufferXML ; (; TBuffer::EMode ; mode). Creates buffer object to serialize/deserialize data to/from xml. ; Mode should be either TBuffer::kRead or TBuffer::kWrite. ; Definition at line 59 of file TBufferXML.cxx. ◆ TBufferXML() [2/2]. TBufferXML::TBufferXML ; (; TBuffer::EMode ; mode, . TXMLFile * ; file . ). Creates buffer object to serialize/deserialize data to/from xml. ; This constructor should be used, if data from buffer suppose",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:53250,inherit,inherited,53250,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['inherit'],['inherited']
Modifiability,"1 . ;  ; Double_t GetBinErrorSqUnchecked (Int_t bin) const override;  ; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void SetBins (const Int_t *nbins, const Double_t *range);  ;  Protected Member Functions inherited from TH3D; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH3;  TH3 ();  Default constructor. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type double. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type float. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms. ;  ; void DoFillProfileProjection (TProfile2D *p2, const TAxis &a1, const TAxis &a2, const TAxis &a3, Int_t bin1, Int_t bin2, Int_t bin3, Int_t inBin, Bool_t useWeights) const;  internal function to fill the bins of the projected profile 2D histogram called from DoProjectProfile2D ;  ; virtual TH1D * DoProject1D (const char *name, const char *title, const TAxis *projAxis, const TAxis *axis1, const TAxis *axis2, bool computeErrors, bool originalRange, bool useUF, bool useOF) const;  internal methdod performing the projection to 1D histogram called from other TH3::DoProject1D ;  ; virtual TH1D * DoProject1D (const char *name, const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:54691,variab,variable,54691,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['variab'],['variable']
Modifiability,"1 // if compatible reset and re-use previous histogram; 2232 // (see https://savannah.cern.ch/bugs/?54340); 2233 TObject *h1obj = gROOT->FindObject(pname);; 2234 if (h1obj && h1obj->InheritsFrom(TH1::Class())) {; 2235 if (h1obj->IsA() != TH1D::Class() ) {; 2236 Error(""DoProjection"",""Histogram with name %s must be a TH1D and is a %s"",name,h1obj->ClassName());; 2237 return nullptr;; 2238 }; 2239 h1 = (TH1D*)h1obj;; 2240 // reset the existing histogram and set always the new binning for the axis; 2241 // This avoid problems when the histogram already exists and the histograms is rebinned or its range has changed; 2242 // (see https://savannah.cern.ch/bugs/?94101 or https://savannah.cern.ch/bugs/?95808 ); 2243 h1->Reset();; 2244 const TArrayD *xbins = outAxis->GetXbins();; 2245 if (xbins->fN == 0) {; 2246 if ( originalRange ); 2247 h1->SetBins(outAxis->GetNbins(),outAxis->GetXmin(),outAxis->GetXmax());; 2248 else; 2249 h1->SetBins(lastOutBin-firstOutBin+1,outAxis->GetBinLowEdge(firstOutBin),outAxis->GetBinUpEdge(lastOutBin));; 2250 } else {; 2251 // case variable bins; 2252 if (originalRange ); 2253 h1->SetBins(outAxis->GetNbins(),xbins->fArray);; 2254 else; 2255 h1->SetBins(lastOutBin-firstOutBin+1,&xbins->fArray[firstOutBin-1]);; 2256 }; 2257 }; 2258 ; 2259 Int_t ncuts = 0;; 2260 if (opt.Contains(""["")) {; 2261 ((TH2 *)this)->GetPainter();; 2262 if (fPainter) ncuts = fPainter->MakeCuts((char*)cut.Data());; 2263 }; 2264 ; 2265 if (!h1) {; 2266 const TArrayD *bins = outAxis->GetXbins();; 2267 if (bins->fN == 0) {; 2268 if ( originalRange ); 2269 h1 = new TH1D(pname,GetTitle(),outAxis->GetNbins(),outAxis->GetXmin(),outAxis->GetXmax());; 2270 else; 2271 h1 = new TH1D(pname,GetTitle(),lastOutBin-firstOutBin+1,; 2272 outAxis->GetBinLowEdge(firstOutBin),outAxis->GetBinUpEdge(lastOutBin));; 2273 } else {; 2274 // case variable bins; 2275 if (originalRange ); 2276 h1 = new TH1D(pname,GetTitle(),outAxis->GetNbins(),bins->fArray);; 2277 else; 2278 h1 = new TH1D(pname,GetTitle(),l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:91867,variab,variable,91867,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82897,config,configuration,82897,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85275,config,configuration,85275,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,1 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:101121,config,configuration,101121,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error found - save the configuration ; : 999 | 3.31412 4.14973 0.0202938 0.00187677 43438 0; : 1000 | 3.20867 4.17264 0.0201802 0.00179416 43511.4 1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.37748 4.22044 0.0208054 0.00183497 42170.8 4; : 1020 | 3.48034 4.07947 0.020447 0.00177824 42852.4 5; : 1021 | 3.50059 4.11275 0.020219 0.00176964 43361.9 6; : 1022 | 3.151,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:113624,config,configuration,113624,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"1 ; 722 //-----------------------------------------------------------------------; 723 // Write the header; 724 //////////////////////////////////////////////////////////////////////////; 725 ; 726 output << "" static void "" << func.str();; 727 output << ""( char* target, TBuffer &b )"" << std::endl;; 728 output << "" {"" << std::endl;; 729 output << ""#if 0"" << std::endl;; 730 output << "" //--- Automatically generated variables ---"" << std::endl;; 731 ; 732 //-----------------------------------------------------------------------; 733 // Write the automatically generated variables; 734 //////////////////////////////////////////////////////////////////////////; 735 ; 736 std::list<std::pair<ROOT::Internal::TSchemaType,std::string> > source;; 737 std::list<std::string> target;; 738 TSchemaRuleProcessor::SplitList( rule[""target""], target );; 739 ; 740 WriteAutoVariables( target, source, members, className, mappedName, output );; 741 output << "" "" << className << ""* newObj = ("" << className;; 742 output << ""*)target;"" << std::endl << std::endl;; 743 ; 744 //-----------------------------------------------------------------------; 745 // Write the user's code; 746 //////////////////////////////////////////////////////////////////////////; 747 ; 748 output << "" //--- User's code ---"" << std::endl;; 749 output << rule[""code""] << std::endl;; 750 output << ""#endif"" << std::endl;; 751 output << "" }"" << std::endl;; 752 }; 753 ; 754 /////////////////////////////////////////////////////////////////////////////; 755 /// Replace all accurances of given string with other string; 756 ; 757 static void StrReplace( std::string& proc, const std::string& pat,; 758 const std::string& tr ); 759 {; 760 std::string::size_type it = 0;; 761 std::string::size_type s = pat.size();; 762 std::string::size_type tr_len= tr.size();; 763 ; 764 if( s == 0 ) return;; 765 ; 766 while( 1 ) {; 767 it = proc.find( pat, it );; 768 if( it == std::string::npos ); 769 break;; 770 ; 771 proc.replace( it, s, tr );; 772",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:27627,variab,variables,27627,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,4,['variab'],['variables']
Modifiability,"1 = GetW2();; 1448 Double_t *en1 = GetB();; 1449 Double_t *ew1 = GetB2();; 1450 ; 1451 for (bin=0;bin<=nbins+1;bin++) {; 1452 oldBins[bin] = cu1[bin];; 1453 oldCount[bin] = en1[bin];; 1454 oldErrors[bin] = er1[bin];; 1455 if (ew1 && fBinSumw2.fN) oldBinw2[bin] = ew1[bin];; 1456 }; 1457 ; 1458 // create a clone of the old histogram if newname is specified; 1459 TProfile *hnew = this;; 1460 if ((newname && strlen(newname) > 0) || xbins) {; 1461 hnew = (TProfile*)Clone(newname);; 1462 }; 1463 ; 1464 // in case of ngroup not an excat divider of nbins,; 1465 // top limit is changed (see NOTE in method comment); 1466 if(!xbins && (newbins*ngroup != nbins)) {; 1467 xmax = fXaxis.GetBinUpEdge(newbins*ngroup);; 1468 hnew->fTsumw = 0; //stats must be reset because top bins will be moved to overflow bin; 1469 }; 1470 ; 1471 // set correctly the axis and resizes the bin arrays; 1472 if(!xbins && (fXaxis.GetXbins()->GetSize() > 0)){; 1473 // for rebinning of variable bins in a constant group; 1474 Double_t *bins = new Double_t[newbins+1];; 1475 for(i = 0; i <= newbins; ++i) bins[i] = fXaxis.GetBinLowEdge(1+i*ngroup);; 1476 hnew->SetBins(newbins,bins); //this also changes the bin array's; 1477 delete [] bins;; 1478 } else if (xbins) {; 1479 // when rebinning in variable bins; 1480 hnew->SetBins(newbins,xbins);; 1481 } else {; 1482 hnew->SetBins(newbins,xmin,xmax);; 1483 }; 1484 ; 1485 // merge bin contents ignoring now underflow/overflows; 1486 if (fBinSumw2.fN) hnew->Sumw2();; 1487 ; 1488 // Start merging only once the new lowest edge is reached; 1489 Int_t startbin = 1;; 1490 const Double_t newxmin = hnew->GetXaxis()->GetBinLowEdge(1);; 1491 while( fXaxis.GetBinCenter(startbin) < newxmin && startbin <= nbins ) {; 1492 startbin++;; 1493 }; 1494 ; 1495 Double_t *cu2 = hnew->GetW();; 1496 Double_t *er2 = hnew->GetW2();; 1497 Double_t *en2 = hnew->GetB();; 1498 Double_t *ew2 = hnew->GetB2();; 1499 Int_t oldbin = startbin;; 1500 Double_t binContent, binCount, binError, binSumw2;; 15",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:54616,variab,variable,54616,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['variab'],['variable']
Modifiability,"1 and; friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m. /*; ; */. The AddFriend method has two parameters, the first is the tree name and the; second is the name of the ROOT file where the friend tree is saved.; AddFriend automatically opens the friend file. If no file name is given,; the tree called ft1 is assumed to be in the same file as the original tree. tree.AddFriend(""ft1"",""friendfile1.root"");; If the friend tree has the same name as the original tree, you can give it; an alias in the context of the friendship:. tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; Once the tree has friends, we can use TTree::Draw as if the friend's; variables were in the original tree. To specify which tree to use in; the Draw method, use the syntax:. <treeName>.<branchname>.<varname>; If the variablename is enough to uniquely identify the variable, you can; leave out the tree and/or branch name.; For example, these commands generate a 3-d scatter plot of variable ""var""; in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; TTree ft2. tree.AddFriend(""ft1"",""friendfile1.root"");; tree.AddFriend(""ft2"",""friendfile2.root"");; tree.Draw(""var:ft1.v1:ft2.v2"");. /*; ; */. The picture illustrates the access of the tree and its friends with a; Draw command.; When AddFriend is called, the ROOT file is automatically opened and the; friend tree (ft1) is read into memory. The new friend (ft1) is added to; the list of friends of tree.; The number of entries in the friend must be equal or greater to the number; of entries of the original tree. If the friend tree has fewer entries a; warning is given and the missing entries are not included in the histogram.; To retrieve the list of friends from a tree use TTree::GetListOfFriends.; When the tree is written to file (TTree::Write), the friends list is saved; with it. And when the tree is retrieved, the trees on the friends list are; also retrieved and the friendship restored.; When a tree is deleted, the ele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:39085,variab,variable,39085,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,9,['variab'],['variable']
Modifiability,"1 enum EFitParameters { kNotEnforced = 0,; 162 kForceMin,; 163 kForceMax,; 164 kForceSmart };; 165 ; 166 // general; 167 TString fFitMethodS; ///< chosen fit method (string); 168 EFitMethodType fFitMethod; ///< chosen fit method; 169 TString fEffMethodS; ///< chosen efficiency calculation method (string); 170 EEffMethod fEffMethod; ///< chosen efficiency calculation method; 171 std::vector<EFitParameters>* fFitParams; ///< vector for series of fit methods; 172 Double_t fTestSignalEff; ///< used to test optimized signal efficiency; 173 Double_t fEffSMin; ///< used to test optimized signal efficiency; 174 Double_t fEffSMax; ///< used to test optimized signal efficiency; 175 Double_t* fCutRangeMin; ///< minimum of allowed cut range; 176 Double_t* fCutRangeMax; ///< maximum of allowed cut range; 177 std::vector<Interval*> fCutRange; ///< allowed ranges for cut optimisation; 178 ; 179 // for the use of the binary tree method; 180 BinarySearchTree* fBinaryTreeS;; 181 BinarySearchTree* fBinaryTreeB;; 182 ; 183 // MC method; 184 Double_t** fCutMin; ///< minimum requirement; 185 Double_t** fCutMax; ///< maximum requirement; 186 Double_t* fTmpCutMin; ///< temporary minimum requirement; 187 Double_t* fTmpCutMax; ///< temporary maximum requirement; 188 TString* fAllVarsI; ///< what to do with variables; 189 ; 190 // relevant for all methods; 191 Int_t fNpar; ///< number of parameters in fit (default: 2*Nvar); 192 Double_t fEffRef; ///< reference efficiency; 193 std::vector<Int_t>* fRangeSign; ///< used to match cuts to fit parameters (and vice versa); 194 TRandom* fRandom; ///< random generator for MC optimisation method; 195 ; 196 // basic statistics; 197 std::vector<Double_t>* fMeanS; ///< means of variables (signal); 198 std::vector<Double_t>* fMeanB; ///< means of variables (background); 199 std::vector<Double_t>* fRmsS; ///< RMSs of variables (signal); 200 std::vector<Double_t>* fRmsB; ///< RMSs of variables (background); 201 ; 202 TH1* fEffBvsSLocal; ///< intermediate eff.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:7214,variab,variables,7214,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,5,['variab'],['variables']
Modifiability,"1 if (TMath::IsNaN(value)) {; 862 contains_NaN_or_inf = kTRUE;; 863 ++msgMap[TString::Format(""Dataset[%s] : %s expression resolves to indeterminate value (NaN): %s"", dsi.GetName(), what, formulaTitle)];; 864 } else if (!TMath::Finite(value)) {; 865 contains_NaN_or_inf = kTRUE;; 866 ++msgMap[TString::Format(""Dataset[%s] : %s expression resolves to infinite value (+inf or -inf): %s"", dsi.GetName(), what, formulaTitle)];; 867 }; 868 };; 869 ; 870 TTreeFormula* formula = 0;; 871 ; 872 // the cut expression; 873 Double_t cutVal = 1.;; 874 formula = fCutFormulas[cl];; 875 if (formula) {; 876 Int_t ndata = formula->GetNdata();; 877 cutVal = (ndata==1 ?; 878 formula->EvalInstance(0) :; 879 formula->EvalInstance(idata));; 880 checkNanInf(nanInfErrors, cutVal, ""Cut"", formula->GetTitle());; 881 }; 882 ; 883 // if event is cut out, add to warnings, else add to errors.; 884 auto &nanMessages = cutVal < 0.5 ? nanInfWarnings : nanInfErrors;; 885 ; 886 // the input variable; 887 for (UInt_t ivar=0; ivar<nvars; ivar++) {; 888 auto formulaMap = fInputTableFormulas[ivar];; 889 formula = formulaMap.first;; 890 int inputVarIndex = formulaMap.second;; 891 // check fomula ndata size (in case of arrays variable); 892 // enough to check for ivarindex = 0 then formula is the same; 893 // this check might take some time. Maybe do only in debug mode; 894 if (inputVarIndex == 0 && dsi.IsVariableFromArray(ivar)) {; 895 Int_t ndata = formula->GetNdata();; 896 Int_t arraySize = dsi.GetVarArraySize(dsi.GetVariableInfo(ivar).GetExpression());; 897 if (ndata < arraySize) {; 898 Log() << kFATAL << ""Size of array "" << dsi.GetVariableInfo(ivar).GetExpression(); 899 << "" in the current tree "" << currentInfo.GetTree()->GetName() << "" for the event "" << evtIdx; 900 << "" is "" << ndata << "" instead of "" << arraySize << Endl;; 901 } else if (ndata > arraySize && !foundLargerArraySize) {; 902 Log() << kWARNING << ""Size of array "" << dsi.GetVariableInfo(ivar).GetExpression(); 903 << "" in the current tree "" << cu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:37832,variab,variable,37832,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"1 in case of error or number of selected events in case of success. varexp is an expression of the general form; - ""e1"" produces a 1-d histogram of expression ""e1""; - ""e1:e2"" produces a 2-d histogram (or profile) of ""e1"" versus ""e2""; - ""e1:e2:e3"" produces a 3-d scatter-plot of ""e1"" versus ""e2"" versus ""e3""; - ""e1:e2:e3:e4"" produces a 3-d scatter-plot of ""e1"" versus ""e2"" versus ""e3""; and ""e4"" mapped on the color number. Example:; varexp = x simplest case: draw a 1-Dim distribution of column named x; = sqrt(x) : draw distribution of sqrt(x); = x*y/z; = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); = px:py:pz:2.5*E produces a 3-d scatter-plot of px vs py ps pz; and the color number of each marker will be 2.5*E.; If the color number is negative it is set to 0.; If the color number is greater than the current number of colors; it is set to the highest color number.; The default number of colors is 50.; see TStyle::SetPalette for setting a new color palette. Note that the variables e1, e2 or e3 may contain a selection.; example, if e1= x*(y<0), the value histogrammed will be x if y<0; and will be 0 otherwise. The expressions can use all the operations and build-in functions; supported by TFormula (See TFormula::Analyze), including free; standing function taking numerical arguments (TMath::Bessel).; In addition, you can call member functions taking numerical; arguments. For example:; - ""TMath::BreitWigner(fPx,3,2)""; - ""event.GetHistogram().GetXaxis().GetXmax()""; Note: You can only pass expression that depend on the TTree's data; to static functions and you can only call non-static member function; with 'fixed' parameters. The selection is an expression with a combination of the columns.; In a selection all the C++ operators are authorized.; The value corresponding to the selection expression is used as a weight; to fill the histogram.; If the expression includes only boolean operations, the result; is 0 or 1. If the result is 0, the histogram is not filled.; In general,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:19912,variab,variables,19912,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['variab'],['variables']
Modifiability,"1 maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 3 n<2 or n>15. Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. Notes:. 1.Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. @ingroup Integration. Function Members (Methods); public:. virtual~AdaptiveIntegratorMultiDim(); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::AdaptiveIntegratorMultiDim&); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxpts = 100000, unsigned int size = 0); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxcall = 100000, unsigned int size = 0); virtual doubleError() const; virtual doubleIntegral(const double* xmin, const double* xmax); doubleIntegral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); virtual intNEval() const; ROOT::Math::AdaptiveIntegratorMultiDim&operator=(const RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html:2581,adapt,adaptive,2581,root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,2,['adapt'],['adaptive']
Modifiability,"1 maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 3 n<2 or n>15. Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. Notes:. 1.Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. @ingroup Integration. Function Members (Methods); public:. virtual~AdaptiveIntegratorMultiDim(); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::AdaptiveIntegratorMultiDim&); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxpts = 100000, unsigned int size = 0); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxcall = 100000, unsigned int size = 0); virtual doubleError() const; virtual doubleIntegral(const double* xmin, const double* xmax); doubleIntegral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); virtual intNEval() const; ROOT::Math::VirtualIntegratorMultiDim&ROOT::Math::VirtualIntegratorMultiDim::operator=(const ROOT::Math::VirtualIntegratorM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html:2581,adapt,adaptive,2581,root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,1,['adapt'],['adaptive']
Modifiability,"1 maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 3 n<2 or n>15. Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. Notes:. 1.Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. Bool_t IsInside(const Double_t* x) const; Return kTRUE if the point is inside the function range. void Paint(Option_t* option = """"); Paint this function with its current attributes. void Print(Option_t* option = """") const; Dump this function with its attributes. void ReleaseParameter(Int_t ipar); Release parameter number ipar If used in a fit, the parameter; can vary freely. The parameter limits are reset to 0,0. void Save(Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Double_t zmin, Double_t zmax); Save values of function in array fSave. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetCurrent(TF1* f1); Static function setting the current function.; the current function may be accessed in static C-like functions; when fitting or painting a function. void SetFitResult(const ROOT::Fit::FitResult& result, const Int_t* i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:59058,adapt,adaptive,59058,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,4,['adapt'],['adaptive']
Modifiability,"1 of file TClassDocOutput.cxx. ◆ ~TClassDocOutput(). TClassDocOutput::~TClassDocOutput ; (; ). override . Destructor, deletes fParser. ; Definition at line 61 of file TClassDocOutput.cxx. Member Function Documentation. ◆ Class(). static TClass * TClassDocOutput::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class2Html(). void TClassDocOutput::Class2Html ; (; Bool_t ; force = kFALSE). Create HTML files for a single class. ; Definition at line 70 of file TClassDocOutput.cxx. ◆ Class_Name(). static const char * TClassDocOutput::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TClassDocOutput::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 67 of file TClassDocOutput.h. ◆ ClassDotCharts(). Bool_t TClassDocOutput::ClassDotCharts ; (; std::ostream & ; out). This function builds the class charts for one class in GraphViz/Dot format, i.e. ; the inheritance diagram, the include dependencies, and the library dependency.; Input: out - output file stream ; Definition at line 393 of file TClassDocOutput.cxx. ◆ ClassHtmlTree(). void TClassDocOutput::ClassHtmlTree ; (; std::ostream & ; out, . TClass * ; classPtr, . ETraverse ; dir = kBoth, . int ; depth = 1 . ). protected . This function builds the class tree for one class in HTML (inherited and succeeding classes, called recursively) ; Input: out - output file stream classPtr - pointer to the class dir - direction to traverse tree: up, down or both ; Definition at line 466 of file TClassDocOutput.cxx. ◆ ClassTree(). void TClassDocOutput::ClassTree ; (; TVirtualPad * ; psCanvas, . Bool_t ; force = kFALSE . ). protected . It makes a graphical class tree. ; Input: psCanvas - pointer to the current canvas classPtr - pointer to the class ; Definition at line 586 of file TClassDocOutput.cxx. ◆ CreateClassHierarchy(). void TClassDocOutput::CreateClassHierarchy ; (; std::ostream & ; out, . const char * ; docFileName . ). C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocOutput.html:20976,inherit,inheritance,20976,doc/master/classTClassDocOutput.html,https://root.cern,https://root.cern/doc/master/classTClassDocOutput.html,1,['inherit'],['inheritance']
Modifiability,"1#include ""TColor.h""; 22 ; 23ClassImp(TAttText);; 24 ; 25/** \class TAttText; 26\ingroup Base; 27\ingroup GraphicsAtt; 28 ; 29Text Attributes class.; 30 ; 31This class is used (in general by secondary inheritance); 32by many other classes (graphics, histograms). It holds all the text attributes.; 33 ; 34## Text attributes; 35Text attributes are:; 36 ; 37 - [Text Alignment](\ref ATTTEXT1); 38 - [Text Angle](\ref ATTTEXT2); 39 - [Text Color](\ref ATTTEXT3); 40 - [Text Size](\ref ATTTEXT4); 41 - [Text Font and Precision](\ref ATTTEXT5); 42 - [Font quality and speed](\ref ATTTEXT51); 43 - [How to use True Type Fonts](\ref ATTTEXT52); 44 - [List of the currently supported fonts](\ref ATTTEXT53); 45 ; 46\anchor ATTTEXT1; 47## Text Alignment; 48 ; 49The text alignment is an integer number (`align`) allowing to control; 50the horizontal and vertical position of the text string with respect; 51to the text position.; 52The text alignment of any class inheriting from `TAttText` can; 53be changed using the method `SetTextAlign` and retrieved using the; 54method `GetTextAlign`.; 55 ; 56~~~ {.cpp}; 57 align = 10*HorizontalAlign + VerticalAlign; 58~~~; 59 ; 60For horizontal alignment the following convention applies:; 61 ; 62~~~ {.cpp}; 63 1=left adjusted, 2=centered, 3=right adjusted; 64~~~; 65 ; 66For vertical alignment the following convention applies:; 67 ; 68~~~ {.cpp}; 69 1=bottom adjusted, 2=centered, 3=top adjusted; 70~~~; 71 ; 72For example:; 73 ; 74~~~ {.cpp}; 75 align = 11 = left adjusted and bottom adjusted; 76 align = 32 = right adjusted and vertically centered; 77~~~; 78 ; 79Begin_Macro(source); 80textalign.C; 81End_Macro; 82 ; 83Mnemonic constants are available:; 84 ; 85~~~ {.cpp}; 86kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; 87kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; 88~~~; 89 ; 90They allow to write:; 91 ; 92~~~ {.cpp}; 93object->SetTextAlign(kHAlignLeft+kVAlignTop);; 94~~~; 95 ; 96\anchor ATTTEXT2; 97## Text Angle; 98 ; 99Text angle in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8cxx_source.html:1801,inherit,inheriting,1801,doc/master/TAttText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"1, Double_t r2, Double_t phimin, Double_t phimax, const TextSpec_t &spec);  Draw an arc of ellipse in a Latex formula (right or left parenthesis) ;  ; void DrawPolyLine (Int_t npoints, Double_t *xx, Double_t *yy, const TextSpec_t &spec, Double_t scale_width=0.);  Draw a poly line in a Latex formula Is scale_width parameter >=1, fill area will be drawn Otherwise line width will be scaled proportional to current font size If not specified - default line width will be used. ;  ; TLatexFormSize FirstParse (Double_t angle, Double_t size, const Char_t *text);  First parsing of the analyse sequence. ;  ; TLatex & operator= (const TLatex &);  assignment operator ;  ; Int_t PaintLatex1 (Double_t x, Double_t y, Double_t angle, Double_t size, const char *text);  Drawing function. ;  ; TLatexFormSize Readfs ();  Read fs in fTabSize. ;  ; void Savefs (TLatexFormSize *fs);  Save fs values in array fTabSize. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TAnnotation.h>. Inheritance diagram for TAnnotation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TAnnotation() [1/2]. TAnnotation::TAnnotation ; (; ). inline . Definition at line 25 of file TAnnotation.h. ◆ TAnnotation() [2/2]. TAnnotation::TAnnotation ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . const char * ; text . ). annotation default constructor. ; Definition at line 60 of file TAnnotation.cxx. ◆ ~TAnnotation(). TAnnotation::~TAnnotation ; (; ). override . annotation default destructor. ; Definition at line 73 of file TAnnotation.cxx. Member Function Documentation. ◆ Class(). static TClass * TAnnotation::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TAnnotation::Class_Name ; (; ). static . ReturnsN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:29669,inherit,inherited,29669,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,1,['inherit'],['inherited']
Modifiability,"1, Double_t r2, Double_t phimin, Double_t phimax, const TextSpec_t &spec);  Draw an arc of ellipse in a Latex formula (right or left parenthesis) ;  ; void DrawPolyLine (Int_t npoints, Double_t *xx, Double_t *yy, const TextSpec_t &spec, Double_t scale_width=0.);  Draw a poly line in a Latex formula Is scale_width parameter >=1, fill area will be drawn Otherwise line width will be scaled proportional to current font size If not specified - default line width will be used. ;  ; TLatexFormSize FirstParse (Double_t angle, Double_t size, const Char_t *text);  First parsing of the analyse sequence. ;  ; TLatex & operator= (const TLatex &);  assignment operator ;  ; Int_t PaintLatex1 (Double_t x, Double_t y, Double_t angle, Double_t size, const char *text);  Drawing function. ;  ; TLatexFormSize Readfs ();  Read fs in fTabSize. ;  ; void Savefs (TLatexFormSize *fs);  Save fs values in array fTabSize. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; const Char_t * fError {nullptr};  ! error code ;  ; Double_t fFactorPos;  ! Relative position of subscripts and superscripts ;  ; Double_t fFactorSize;  ! Relative size of subscripts and superscripts ;  ; Bool_t fItalic;  ! Currently inside italic operator ;  ; Int_t fLimitFactorSize;  lower bound for subscripts/superscripts size ;  ; Double_t fOriginSize;  Font size of the starting font. ;  ; Bool_t fShow;  ! is true during the second pass (Painting) ;  ; std::vector< TLatexFormSize > fTabSize;  ! array of values for the different zones ;  ;  Protected Attributes inherited from TText; void * fWcsTitle {nullptr};  !Used by TMathText ;  ; Double_t fX {0};  X position of text (left,center,etc..) ;  ; Double_t fY {0};  Y position of text (left,center,etc..) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex.html:30599,inherit,inherited,30599,doc/master/classTLatex.html,https://root.cern,https://root.cern/doc/master/classTLatex.html,1,['inherit'],['inherited']
Modifiability,"1, Float_t ymargin=0.01, Int_t color=0) override;  ; TObject * GetRefObject () const;  ; TPad * GetRefPad () const;  ; TClass * IsA () const override;  ; void Range (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Set world coordinate system for the pad. ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove object from a pad and its sub-pads. ;  ; void SetBorderMode (Short_t bordermode) override;  ; void SetGrid (Int_t valuex=1, Int_t valuey=1) override;  ; void SetLogx (Int_t value=1) override;  ; void SetLogy (Int_t value=1) override;  ; void SetName (const char *name) override;  Set canvas name. ;  ; virtual void SetRefObject (TObject *obj);  ; virtual void SetRefPad (TPad *pad);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void x3d (Option_t *option="""") override;  Deprecated: use TPad::GetViewer3D() instead. ;  ;  Public Member Functions inherited from TCanvas;  TCanvas (Bool_t build=kTRUE);  Canvas default constructor. ;  ;  TCanvas (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ;  TCanvas (const char *name, const char *title, Int_t ww, Int_t wh);  Create a new canvas at a random position. ;  ;  TCanvas (const char *name, const char *title="""", Int_t form=1);  Create a new canvas with a predefined size form. ;  ;  TCanvas (const char *name, Int_t ww, Int_t wh, Int_t winid);  Create an embedded canvas, i.e. ;  ;  ~TCanvas () override;  Canvas destructor. ;  ; void Browse (TBrowser *b) override;  Browse. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set current canvas & pad. ;  ; void Clear (Option_t *option="""") override;  Remove all primitives from the canvas. ;  ; virtual void Cleared (TVirtualPad *pad);  Emit pad Cleared signal. ;  ; void ClearPadSave ();  ; void Close (Option_t *option="""") override;  Close canvas. ;  ; void Closed () override;  Emit Closed signal. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDialogCanvas.html:2283,inherit,inherited,2283,doc/master/classTDialogCanvas.html,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html,1,['inherit'],['inherited']
Modifiability,"1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:43566,inherit,inherited,43566,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"1, fFileName(""""); 122, fEntryBuffer(nullptr); 123, fTransientBuffer(nullptr); 124, fBrowsables(nullptr); 125, fBulk(*this); 126, fSkipZip(false); 127, fReadLeaves(&TBranch::ReadLeavesImpl); 128, fFillLeaves(&TBranch::FillLeavesImpl); 129{; 130 SetBit(TBranch::kDoNotUseBufferMap);; 131}; 132 ; 133////////////////////////////////////////////////////////////////////////////////; 134/// Create a Branch as a child of a Tree; 135///; 136/// * address is the address of the first item of a structure; 137/// or the address of a pointer to an object (see example in TTree.cxx).; 138/// * leaflist is the concatenation of all the variable names and types; 139/// separated by a colon character :; 140/// The variable name and the variable type are separated by a; 141/// slash (/). The variable type must be 1 character. (Characters; 142/// after the first are legal and will be appended to the visible; 143/// name of the leaf, but have no effect.) If no type is given, the; 144/// type of the variable is assumed to be the same as the previous; 145/// variable. If the first variable does not have a type, it is; 146/// assumed of type F by default. The list of currently supported; 147/// types is given below:; 148/// - `C` : a character string terminated by the 0 character; 149/// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; 150/// - `b` : an 8 bit unsigned integer (`UChar_t`); 151/// - `S` : a 16 bit signed integer (`Short_t`); 152/// - `s` : a 16 bit unsigned integer (`UShort_t`); 153/// - `I` : a 32 bit signed integer (`Int_t`); 154/// - `i` : a 32 bit unsigned integer (`UInt_t`); 155/// - `F` : a 32 bit floating point (`Float_t`); 156/// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); 157/// - `D` : a 64 bit floating point (`Double_t`); 158/// - `d` : a 24 bit truncated floating point (`Double32_t`); 159/// - `L` : a 64 bit signed integer (`Long64_t`); 160/// - `l` : a 64 bit unsigned integer (`ULong64_t`); 161/// - `G`",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:4114,variab,variable,4114,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,2,['variab'],['variable']
Modifiability,"1,2,3,4, repectively. void ProcessOptions(); builds the neural network as specified by the user. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); calculate the value of the neural net for the current event. void Train( void ); performs TMlpANN training; available learning methods:. TMultiLayerPerceptron::kStochastic; TMultiLayerPerceptron::kBatch; TMultiLayerPerceptron::kSteepestDescent; TMultiLayerPerceptron::kRibierePolak; TMultiLayerPerceptron::kFletcherReeves; TMultiLayerPerceptron::kBFGS. TMultiLayerPerceptron wants test and training tree at once; so merge the training and testing trees from the MVA factory first:. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); rebuild temporary textfile from xml weightfile and load this; file into MLP. void ReadWeightsFromStream(istream& istr); read weights from stream; since the MLP can not read from the stream, we; 1st: write the weights to temporary file. void MakeClass(const TString& classFileName = TString("""")) const; create reader class for classifier -> overwrites base class function; create specific class for TMultiLayerPerceptron. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response; nothing to do here - all taken care of by TMultiLayerPerceptron. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void SetHiddenLayer(TString hiddenlayer = """"); { fHiddenLayer=hiddenlayer; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MethodTMlpANN.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodTMlpANN.html:19769,variab,variables,19769,root/html532/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodTMlpANN.html,1,['variab'],['variables']
Modifiability,"1.4);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooFFTConvPdf.h; RooFormulaVar.h; RooGaussian.h; RooGenericPdf.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf210__angularconv_8C.html:5173,variab,variable,5173,doc/master/rf210__angularconv_8C.html,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html,1,['variab'],['variable']
Modifiability,"1.cxx. ◆ GetMinimumAndMaximum(). void TH1::GetMinimumAndMaximum ; (; Double_t & ; min, . Double_t & ; max . ); const. virtual . Retrieve the minimum and maximum values in the histogram. ; This will not return a cached value and will always search the histogram for the min and max values. The user can condition whether or not to call this with the GetMinimumStored() and GetMaximumStored() methods. If the cache is empty, then the value will be -1111. Users can then use the SetMinimum() or SetMaximum() methods to cache the results. For example, the following recipe will make efficient use of this method and the cached minimum and maximum values. Double_t currentMin = pHist->GetMinimumStored();; Double_t currentMax = pHist->GetMaximumStored();; if ((currentMin == -1111) || (currentMax == -1111)) {; pHist->GetMinimumAndMaximum(currentMin, currentMax);; pHist->SetMinimum(currentMin);; pHist->SetMaximum(currentMax);; }; Parameters. minreference to variable that will hold found minimum value ; maxreference to variable that will hold found maximum value . Definition at line 8731 of file TH1.cxx. ◆ GetMinimumBin() [1/2]. Int_t TH1::GetMinimumBin ; (; ); const. virtual . Return location of bin with minimum value in the range. ; Definition at line 8665 of file TH1.cxx. ◆ GetMinimumBin() [2/2]. Int_t TH1::GetMinimumBin ; (; Int_t & ; locmix, . Int_t & ; locmiy, . Int_t & ; locmiz . ); const. virtual . Return location of bin with minimum value in the range. ; Definition at line 8674 of file TH1.cxx. ◆ GetMinimumStored(). virtual Double_t TH1::GetMinimumStored ; (; ); const. inlinevirtual . Definition at line 293 of file TH1.h. ◆ GetNbinsX(). virtual Int_t TH1::GetNbinsX ; (; ); const. inlinevirtual . Definition at line 297 of file TH1.h. ◆ GetNbinsY(). virtual Int_t TH1::GetNbinsY ; (; ); const. inlinevirtual . Definition at line 298 of file TH1.h. ◆ GetNbinsZ(). virtual Int_t TH1::GetNbinsZ ; (; ); const. inlinevirtual . Definition at line 299 of file TH1.h. ◆ GetNcells(). virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:165093,variab,variable,165093,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,2,['variab'],['variable']
Modifiability,"1//; 3662// Command RELEASE; 3663//; 3664 if( !strncmp(comd.Data(),""REL"",3) ) {; 3665 Printf("" ***>RELease <parno> [parno] ... [parno]"");; 3666 Printf("" If <parno> is the number of a previously variable parameter"");; 3667 Printf("" which has been fixed by a command: FIX <parno>, then that"");; 3668 Printf("" parameter will return to variable status. Otherwise a warning"");; 3669 Printf("" message is printed and the command is ignored."");; 3670 Printf("" Note that this command operates only on parameters which were"");; 3671 Printf("" at one time variable and have been FIXed. It cannot make"");; 3672 Printf("" constant parameters variable; that must be done by redefining"");; 3673 Printf("" the parameter with a PARameters command."");; 3674 goto L99;; 3675 }; 3676//______________________________________________________________________________; 3677//; 3678// Command RESTORE; 3679//; 3680 if( !strncmp(comd.Data(),""RES"",3) ) {; 3681 Printf("" ***>REStore [code]"");; 3682 Printf("" If no [code] is specified, this command restores all previously"");; 3683 Printf("" FIXed parameters to variable status. If [code]=1, then only"");; 3684 Printf("" the last parameter FIXed is restored to variable status."");; 3685 Printf("" If code is neither zero nor one, the command is ignored."");; 3686 goto L99;; 3687 }; 3688//______________________________________________________________________________; 3689//; 3690// Command RETURN; 3691//; 3692 if( !strncmp(comd.Data(),""RET"",3) ) {; 3693 Printf("" ***>RETURN"");; 3694 Printf("" Signals the end of a data block, and instructs Minuit to return"");; 3695 Printf("" to the program which called it. The RETurn command first"");; 3696 Printf("" causes Minuit to CALL FCN with IFLAG=3, in order to allow FCN"");; 3697 Printf("" to perform any calculations associated with the final fitted"");; 3698 Printf("" parameter values, unless a CALL FCN 3 command has already been"");; 3699 Printf("" executed at the current FCN value."");; 3700 goto L99;; 3701 }; 3702//_________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:120159,variab,variable,120159,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"1/2/2; Double_t_chi_sum; Double_t_chisq; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; RooMCIntegrator::GeneratorType_genTypeGenerator type; RooGrid_gridSampling grid definition; UInt_t_it_num; UInt_t_it_start; Double_t_jac; Int_t_modeSampling mode; Int_t_nIntegratePerDimNumber of integration samplings (per dim); Int_t_nRefineIterNumber of refinement iterations; Int_t_nRefinePerDimNumber of refinement samplings (per dim); Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_result; UInt_t_samples; Double_t_sigmaScratch variables preserved between calls to vegas1/2/2; Double_t_sum_wgts; TStopwatch_timerTimer; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Bool_t_verboseVerbosity control; Double_t_wtd_int_sum. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); This function registers class RooMCIntegrator, its configuration options; and its capabilities with RooNumIntFactory. RooMCIntegrator(); Default constructor. RooMCIntegrator(const RooAbsFunc& function, RooMCIntegrator::SamplingMode mode = Importance, RooMCIntegrator::GeneratorType genType = QuasiRandom, Bool_t verbose = kFALSE); Construct an integrator over 'function' with given sampling mode; and generator type. The sampling mode can be 'Importance'; (default), 'ImportanceOnly' and 'Stratified'. The generator type; can be 'QuasiRandom' (default) and 'PseudoRandom'. Consult the original; VEGAS documentation on details of the mode and type parameters. RooMCIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); Construct an integrator over 'function' where the configuration details; are taken from 'config'. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Return clone of this generator operating on given function with given configuration; Needed to supp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMCIntegrator.html:8142,config,configuration,8142,root/html526/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html526/RooMCIntegrator.html,1,['config'],['configuration']
Modifiability,"1/2/2; Double_t_chi_sum; Double_t_chisq; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; RooMCIntegrator::GeneratorType_genTypeGenerator type; RooGrid_gridSampling grid definition; UInt_t_it_num; UInt_t_it_start; Double_t_jac; Int_t_modeSampling mode; Int_t_nIntegratePerDimNumber of integration samplings (per dim); Int_t_nRefineIterNumber of refinement iterations; Int_t_nRefinePerDimNumber of refinement samplings (per dim); Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_result; UInt_t_samples; Double_t_sigmaScratch variables preserved between calls to vegas1/2/2; Double_t_sum_wgts; TStopwatch_timerTimer; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Bool_t_verboseVerbosity control; Double_t_wtd_int_sum. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); This function registers class RooMCIntegrator, its configuration options; and its capabilities with RooNumIntFactory. RooMCIntegrator(); Default constructor. coverity[UNINIT_CTOR]. RooMCIntegrator(const RooAbsFunc& function, RooMCIntegrator::SamplingMode mode = Importance, RooMCIntegrator::GeneratorType genType = QuasiRandom, Bool_t verbose = kFALSE); Construct an integrator over 'function' with given sampling mode; and generator type. The sampling mode can be 'Importance'; (default), 'ImportanceOnly' and 'Stratified'. The generator type; can be 'QuasiRandom' (default) and 'PseudoRandom'. Consult the original; VEGAS documentation on details of the mode and type parameters. RooMCIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); Construct an integrator over 'function' where the configuration details; are taken from 'config'. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Return clone of this generator operating on given function with given config",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMCIntegrator.html:8128,config,configuration,8128,root/html528/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html528/RooMCIntegrator.html,4,['config'],['configuration']
Modifiability,"10() for setting the HTTP GET; request compliant to the authentication mechanism used by the S3; protocol. The GET request must contain an ""Authorization"" header with; the signature of the request, generated using the user's secret access; key. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf). void ProcessHttpHeader(const TString& headerLine); This method is called by the super-class TWebFile when a HTTP header; for this file is retrieved. We scan the 'Server' header to detect the; type of S3 server this file is hosted on and to determine if it is; known to support multi-range HTTP GET requests. Some S3 servers (for; instance Amazon's) do not support that feature and when they; receive a multi-range request they sent back the whole file contents.; For this class, if the server do not support multirange requests; we issue multiple single-range requests instead. Bool_t GetCredentialsFromEnv(const char* accessKeyEnv, const char* secretKeyEnv, TString& outAccessKey, TString& outSecretKey); Sets the access and secret keys from the environmental variables, if; they are both set. TS3WebFile(). void SetAccessKey(const TString& accessKey); Modifiers of data members (to be used mainly by subclasses). { fS3Request.SetAccessKey(accessKey); }. void SetSecretKey(const TString& secretKey); { fS3Request.SetSecretKey(secretKey); }. TS3WebFile(const char* url, Option_t* options = """"); Constructors & Destructor. virtual ~TS3WebFile(); {}. const TString& GetAccessKey() const; Selectors. { return fS3Request.GetAccessKey(); }. const TString& GetSecretKey() const; { return fS3Request.GetSecretKey(); }. const TString& GetBucket() const; { return fS3Request.GetBucket(); }. const TString& GetObjectKey() const; { return fS3Request.GetObjectKey(); }. const TUrl& GetUrl() const; { return fUrl; }. » Author: Fabio Hernandez 22/01/2013 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TS3WebFile.h$ » Last generated: 2015-06-02 16:32; This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TS3WebFile.html:32645,variab,variables,32645,root/html604/TS3WebFile.html,https://root.cern,https://root.cern/root/html604/TS3WebFile.html,1,['variab'],['variables']
Modifiability,"10() for setting the HTTP GET; request compliant to the authentication mechanism used by the S3; protocol. The GET request must contain an ""Authorization"" header with; the signature of the request, generated using the user's secret access; key. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf). void ProcessHttpHeader(const TString& headerLine); This method is called by the super-class TWebFile when a HTTP header; for this file is retrieved. We scan the 'Server' header to detect the; type of S3 server this file is hosted on and to determine if it is; known to support multi-range HTTP GET requests. Some S3 servers (for; instance Amazon's) do not support that feature and when they; receive a multi-range request they sent back the whole file contents.; For this class, if the server do not support multirange requests; we issue multiple single-range requests instead. Bool_t GetCredentialsFromEnv(const char* accessKeyEnv, const char* secretKeyEnv, TString& outAccessKey, TString& outSecretKey); Sets the access and secret keys from the environmental variables, if; they are both set. TS3WebFile(). void SetAccessKey(const TString& accessKey); Modifiers of data members (to be used mainly by subclasses). { fS3Request.SetAccessKey(accessKey); }. void SetSecretKey(const TString& secretKey); { fS3Request.SetSecretKey(secretKey); }. TS3WebFile(const char* url, Option_t* options = """"); Constructors & Destructor. virtual ~TS3WebFile(); {}. const TString& GetAccessKey() const; Selectors. { return fS3Request.GetAccessKey(); }. const TString& GetSecretKey() const; { return fS3Request.GetSecretKey(); }. const TString& GetBucket() const; { return fS3Request.GetBucket(); }. const TString& GetObjectKey() const; { return fS3Request.GetObjectKey(); }. const TUrl& GetUrl() const; { return fUrl; }. » Author: Fabio Hernandez 22/01/2013 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TS3WebFile.h$ » Last generated: 2015-06-30 15:29; This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TS3WebFile.html:32645,variab,variables,32645,root/html602/TS3WebFile.html,https://root.cern,https://root.cern/root/html602/TS3WebFile.html,1,['variab'],['variables']
Modifiability,"10() for setting the HTTP GET; request compliant to the authentication mechanism used by the S3; protocol. The GET request must contain an ""Authorization"" header with; the signature of the request, generated using the user's secret access; key. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf). void ProcessHttpHeader(const TString& headerLine); This method is called by the super-class TWebFile when a HTTP header; for this file is retrieved. We scan the 'Server' header to detect the; type of S3 server this file is hosted on and to determine if it is; known to support multi-range HTTP GET requests. Some S3 servers (for; instance Amazon's) do not support that feature and when they; receive a multi-range request they sent back the whole file contents.; For this class, if the server do not support multirange requests; we issue multiple single-range requests instead. Bool_t GetCredentialsFromEnv(const char* accessKeyEnv, const char* secretKeyEnv, TString& outAccessKey, TString& outSecretKey); Sets the access and secret keys from the environmental variables, if; they are both set. TS3WebFile(). void SetAccessKey(const TString& accessKey); Modifiers of data members (to be used mainly by subclasses). { fS3Request.SetAccessKey(accessKey); }. void SetSecretKey(const TString& secretKey); { fS3Request.SetSecretKey(secretKey); }. virtual ~TS3WebFile(); {}. const TString& GetAccessKey() const; Selectors. { return fS3Request.GetAccessKey(); }. const TString& GetSecretKey() const; { return fS3Request.GetSecretKey(); }. const TString& GetBucket() const; { return fS3Request.GetBucket(); }. const TString& GetObjectKey() const; { return fS3Request.GetObjectKey(); }. const TUrl& GetUrl() const; { return fUrl; }. » Author: Fabio Hernandez 22/01/2013 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TS3WebFile.h$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TS3WebFile.html:31601,variab,variables,31601,root/html534/TS3WebFile.html,https://root.cern,https://root.cern/root/html534/TS3WebFile.html,1,['variab'],['variables']
Modifiability,"10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalizati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8py.html:1472,config,configFile,1472,doc/master/rf505__asciicfg_8py.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html,1,['config'],['configFile']
Modifiability,"10.0, 10.0); cHq3.setAttribute(""NewPhysics"", True); cHl3 = ROOT.RooRealVar(""cHl3"", ""EFT modifier"", -10.0, 10.0); cHl3.setAttribute(""NewPhysics"", True); cHDD = ROOT.RooRealVar(""cHDD"", ""EFT modifier"", -10.0, 10.0); cHDD.setAttribute(""NewPhysics"", True); ; # Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; infilename = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/input_histos_rf_lagrangianmorph.root""; par = ""cHq3""; samplelist = [; ""SM_NPsq0"",; ""cHq3_NPsq1"",; ""cHq3_NPsq2"",; ""cHl3_NPsq1"",; ""cHl3_NPsq2"",; ""cHDD_NPsq1"",; ""cHDD_NPsq2"",; ""cHl3_cHDD_NPsq2"",; ""cHq3_cHDD_NPsq2"",; ""cHl3_cHq3_NPsq2"",; ]; ; # Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; config = ROOT.RooLagrangianMorphFunc.Config(); config.fileName = infilename; config.observableName = observablename; config.folderNames = samplelist; config.couplings.add(cHq3); config.couplings.add(cHDD); config.couplings.add(cHl3); config.couplings.add(kSM); ; ; # Create morphing function; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; ; morphfunc = ROOT.RooLagrangianMorphFunc(""morphfunc"", ""morphed dist. of pTV"", config); ; # Create pseudo data histogram to fit at cHq3 = 0.01, cHl3 = 1.0, cHDD = 0.2; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; morphfunc.setParameter(""cHq3"", 0.01); morphfunc.setParameter(""cHl3"", 1.0); morphfunc.setParameter(""cHDD"", 0.2); ; pseudo_hist = morphfunc.createTH1(""pseudo_hist""); pseudo_dh = ROOT.RooDataHist(""pseudo_dh"", ""pseudo_dh"", [obsvar], pseudo_hist); ; # reset parameters to zeros before fit; morphfunc.setParameter(""cHq3"", 0.0); morphfunc.setParameter(""cHl3"", 0.0); morphfunc.setParameter(""cHDD"", 0.0); ; # set error to set initial step size in fit; cHq3.setError(0.1); cHl3.setError(0.1); cHDD.setError(0.1); ; # Wrap pdf on morphfunc and fit to data histogram; # -- -- -- ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html:1793,coupling,couplings,1793,doc/master/rf712__lagrangianmorphfit_8py.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8py.html,1,['coupling'],['couplings']
Modifiability,"10000 events); : Elapsed time for evaluation of 10000 events: 0.00971 sec ; : Creating xml weight file: dataset/weights/TMVAClassificationCategory_LikelihoodCat.weights.xml; <HEADER> Factory : Training finished; : ; : Ranking input variables (method specific)...; <HEADER> Fisher : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Discr. power; : -------------------------------; : 1 : var4 : 1.446e-01; : 2 : var3 : 7.153e-02; : 3 : var2 : 2.447e-02; : 4 : var1 : 1.243e-02; : -------------------------------; <HEADER> Likelihood : Ranking result (top variable is best ranked); : -----------------------------------; : Rank : Variable : Delta Separation; : -----------------------------------; : 1 : var4 : 1.148e-01; : 2 : var3 : 5.071e-02; : 3 : var2 : 2.758e-02; : 4 : var1 : 1.990e-02; : -----------------------------------; : No variable ranking supplied by classifier: FisherCat; : No variable ranking supplied by classifier: LikelihoodCat; <HEADER> Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: dataset/weights/TMVAClassificationCategory_Fisher.weights.xml; : Reading weight file: dataset/weights/TMVAClassificationCategory_Likelihood.weights.xml; : Reading weight file: dataset/weights/TMVAClassificationCategory_FisherCat.weights.xml; : Recreating sub-classifiers from XML-file ; <HEADER> DataSetInfo : [Category_Fisher_1_dsi] : Added class ""Signal""; <HEADER> DataSetInfo : [Category_Fisher_1_dsi] : Added class ""Background""; <HEADER> DataSetInfo : [Category_Fisher_2_dsi] : Added class ""Signal""; <HEADER> DataSetInfo : [Category_Fisher_2_dsi] : Added class ""Background""; : Reading weight file: dataset/weights/TMVAClassificationCategory_LikelihoodCat.weights.xml; : Recreating sub-classifiers from XML-file ; <HEADER> DataSetInfo : [Category_Likelihood_1_dsi] : Added class ""Signal""; <HEADER> DataSetInfo : [Category_Likelihood_1_dsi] : Added class ""Background""; <HEADER> Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:21310,variab,variable,21310,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,2,['variab'],['variable']
Modifiability,"1000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorGradient.h>. Inheritance diagram for TLinearGradient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLinearGradient(). TLinearGradient::TLinearGradient ; (; ). inline . Definition at line 102 of file TColorGradient.h. Member Function Documentation. ◆ Class(). static TClass * TLinearGradient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLinearGradient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLinearGradient::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 113 of file TColorGradient.h. ◆ DeclFileName(). static const char * TLinearGradient::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 113 of file TColorGradient",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearGradient.html:21531,inherit,inherited,21531,doc/master/classTLinearGradient.html,https://root.cern,https://root.cern/doc/master/classTLinearGradient.html,1,['inherit'],['inherited']
Modifiability,"1000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with randomized order for nProto prototype events",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:70137,inherit,inherited,70137,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,4,['inherit'],['inherited']
Modifiability,"1000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  ;  Protected Attributes inherited from TGraphAsymmErrors; Double_t * fEXhigh {nullptr};  [fNpoints] array of X high errors ;  ; Double_t * fEXlow {nullptr};  [fNpoints] array of X low errors ;  ; Double_t * fEYhigh {nullptr};  [fNpoints] array of Y high errors ;  ; Double_t * fEYlow {nullptr};  [fNpoints] array of Y low errors ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:41327,inherit,inherited,41327,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,2,['inherit'],['inherited']
Modifiability,"104 TString /*methodOption*/,; 105 TMVA::Types::EMVA /*theComposite*/,; 106 TString /*compositeOption = """"*/ ) { return nullptr; }; 107 ; 108 // optimize all booked methods (well, if desired by the method); 109 std::map<TString,Double_t> OptimizeAllMethods (TString fomType=""ROCIntegral"", TString fitType=""FitGA"");; 110 void OptimizeAllMethodsForClassification(TString fomType=""ROCIntegral"", TString fitType=""FitGA"") { OptimizeAllMethods(fomType,fitType); }; 111 void OptimizeAllMethodsForRegression (TString fomType=""ROCIntegral"", TString fitType=""FitGA"") { OptimizeAllMethods(fomType,fitType); }; 112 ; 113 // training for all booked methods; 114 void TrainAllMethods ();; 115 void TrainAllMethodsForClassification( void ) { TrainAllMethods(); }; 116 void TrainAllMethodsForRegression ( void ) { TrainAllMethods(); }; 117 ; 118 // testing; 119 void TestAllMethods();; 120 ; 121 // performance evaluation; 122 void EvaluateAllMethods( void );; 123 void EvaluateAllVariables(DataLoader *loader, TString options = """" );; 124 ; 125 TH1F* EvaluateImportance( DataLoader *loader,VIType vitype, Types::EMVA theMethod, TString methodTitle, const char *theOption = """" );; 126 ; 127 // delete all methods and reset the method vector; 128 void DeleteAllMethods( void );; 129 ; 130 // accessors; 131 IMethod* GetMethod( const TString& datasetname, const TString& title ) const;; 132 Bool_t HasMethod( const TString& datasetname, const TString& title ) const;; 133 ; 134 Bool_t Verbose( void ) const { return fVerbose; }; 135 void SetVerbose( Bool_t v=kTRUE );; 136 ; 137 // make ROOT-independent C++ class for classifier response; 138 // (classifier-specific implementation); 139 // If no classifier name is given, help messages for all booked; 140 // classifiers are printed; 141 virtual void MakeClass(const TString& datasetname , const TString& methodTitle = """" ) const;; 142 ; 143 // prints classifier-specific help messages, dedicated to; 144 // help with the optimisation and configuration options tuning.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html:5891,config,configuration,5891,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,1,['config'],['configuration']
Modifiability,"1059 }; 1060 TString pattern;; 1061 if (defaultCounter && !defaultDegree) {; 1062 pattern = TString::Format(""%spol%d"", (defaultVariable ? """" : variable.Data()), degree);; 1063 } else if (defaultCounter && defaultDegree) {; 1064 pattern = TString::Format(""%spol"", (defaultVariable ? """" : variable.Data()));; 1065 } else {; 1066 pattern = TString::Format(""%spol%d(%d)"", (defaultVariable ? """" : variable.Data()), degree, counter);; 1067 }; 1068 ; 1069 if (!formula.Contains(pattern)) {; 1070 Error(""HandlePolN"", ""Error handling polynomial function - expression is %s - trying to replace %s with %s "",; 1071 formula.Data(), pattern.Data(), replacement.Data());; 1072 break;; 1073 }; 1074 if (formula == pattern) {; 1075 // case of single polynomial; 1076 SetBit(kLinear, true);; 1077 fNumber = 300 + degree;; 1078 }; 1079 formula.ReplaceAll(pattern, replacement);; 1080 polPos = formula.Index(""pol"");; 1081 }; 1082}; 1083 ; 1084////////////////////////////////////////////////////////////////////////////////; 1085/// Handling parametrized functions; 1086/// Function can be normalized, and have different variable then x.; 1087/// Variables should be placed in brackets after function name.; 1088/// No brackets are treated like [x].; 1089/// Normalized function has char 'n' after name, eg.; 1090/// gausn[var](0) will be replaced with [0]*exp(-0.5*((var-[1])/[2])^2)/(sqrt(2*pi)*[2]); 1091///; 1092/// Adding function is easy, just follow these rules, and add to; 1093/// `TFormula::FillParametrizedFunctions` defined further below:; 1094///; 1095/// - Key for function map is pair of name and dimension of function; 1096/// - value of key is a pair function body and normalized function body; 1097/// - {Vn} is a place where variable appear, n represents n-th variable from variable list.; 1098/// Count starts from 0.; 1099/// - [num] stands for parameter number.; 1100/// If user pass to function argument 5, num will stand for (5 + num) parameter.; 1101///; 1102 ; 1103void TFormula::HandleParametr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:39919,variab,variable,39919,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"1068////////////////////////////////////////////////////////////////////////////////; 1069/// Concatenate a directory and a file name. User must delete returned string.; 1070 ; 1071char *TSystem::ConcatFileName(const char *dir, const char *name); 1072{; 1073 TString nameString(name);; 1074 PrependPathName(dir, nameString);; 1075 return StrDup(nameString.Data());; 1076}; 1077 ; 1078////////////////////////////////////////////////////////////////////////////////; 1079/// Concatenate a directory and a file name.; 1080 ; 1081const char *TSystem::PrependPathName(const char *, TString&); 1082{; 1083 AbstractMethod(""PrependPathName"");; 1084 return nullptr;; 1085}; 1086 ; 1087 ; 1088//---- Paths & Files -----------------------------------------------------------; 1089 ; 1090////////////////////////////////////////////////////////////////////////////////; 1091/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1092/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1093/// environment variables in a pathname. If compatibility is not an issue; 1094/// you can use on Unix directly $XXX. This is a protected function called; 1095/// from the OS specific system classes, like TUnixSystem and TWinNTSystem.; 1096/// Returns the expanded filename or 0 in case of error.; 1097 ; 1098const char *TSystem::ExpandFileName(const char *fname); 1099{; 1100 const int kBufSize = kMAXPATHLEN;; 1101 TTHREAD_TLS_ARRAY(char, kBufSize, xname);; 1102 ; 1103 Bool_t res = ExpandFileName(fname, xname, kBufSize);; 1104 if (res); 1105 return nullptr;; 1106 else; 1107 return xname;; 1108}; 1109 ; 1110//////////////////////////////////////////////////////////////////////////////; 1111/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1112/// This function is analogous to ExpandFileName(const char *), except that; 1113/// it receives a TString reference of the pathname to be expanded.; 1114/// Returns kTRUE in case of error and kFALSE o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:33442,variab,variables,33442,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,"109e-01; : ----------------------------------------; : Elapsed time for training with 9999 events: 5.01e-06 sec ; : Dataset[datasetcvreg] : Create results for training; : Dataset[datasetcvreg] : Evaluation of BDTG on training sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 9999 events: 0.369 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: datasetcvreg/weights/TMVACrossValidationRegression_BDTG.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG for Regression performance; : ; : Dataset[datasetcvreg] : Create results for testing; : Dataset[datasetcvreg] : Evaluation of BDTG on testing sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 9999 events: 0.37 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; <HEADER> Factory : Evaluate all methods; : Evaluate regression method: BDTG; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9999 events: 0.37 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 9999 events: 0.369 sec ; <HEADER> TFHandler_BDTG : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 2.4948 1.4515 [ 0.00020069 5.0000 ]; : var2: 2.4837 1.4409 [ 0.00071490 5.0000 ]; : fvalue: 134.53 84.778 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : ; : Evaluation results ranked by smallest RMS on test sample:; : (""Bias"" quotes the mean deviation of the regression from true target.; : ""MutInf"" is the ""Mutual Information"" between regression and target.; : Indicated by ""_T"" are the corresponding ""truncated"" quantities ob-; : tained when removing events deviating more than 2sigma from average.); : -------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:12487,variab,variable,12487,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are the two TEventLists defining events to be used during the neural net training. Both the TTree and the TEventLists can be defined in the constructor, or later with the suited setter method. ; Definition at line 318 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [5/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const char * ; layout, . const char * ; weight, . TTree * ; data, . TEventList * ; training, . TEventList * ; test, . TNeuron::ENeuronType ; type = TNeuron::kSigmoid, . const char * ; extF = """", . const char * ; extD = """" . ). The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ; Hidden layers are just described by the number of neurons. The layers are separated by colons.; Ex: ""x,y:10:5:f""; The output can be prepended by '@' if the variable has to be normalized. The output can be followed by '!' to use Softmax neurons for the output layer only.; Ex: ""x,y:10:5:c1,c2,c3!""; Input and outputs are taken from the TTree given as second argument. training and test are the two TEventLists defining events to be used during the neural net training. Both the TTree and the TEventLists can be defined in the constructor, or later with the suited setter method. ; Definition at line 380 of file TMultiLayerPerceptron.cxx. ◆ ~TMultiLayerPerceptron(). TMultiLayerPerceptron::~TMultiLayerPerceptron ; (; ). override . Destructor. ; Definition at line 581 of file TMultiLayerPerceptron.cxx. ◆ TMultiLayerPerceptron() [6/6]. TMultiLayerPerceptron::TMultiLayerPerceptron ; (; const TMultiLayerPerceptron & ; ). private . Member Function Documentation. ◆ AttachData(). void TMultiLayerPerceptron::AttachData ; (; ). pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:32795,layers,layers,32795,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['layers'],['layers']
Modifiability,10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2.54248 2.42056 0.0201867 0.00176633 43430.3 11; : 1128 | 2.47016 2.53962 0.0206089 0.00182988 42600.8 12; : 1129 | 2.38268 2.44496 0.0204067 0.00176828 42922.1 13; : 1130 | 2.59925 2.55821 0.0200531 0.00176378 43741.4 14; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 11,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120767,config,configuration,120767,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,11 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84821,config,configuration,84821,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Additional Inherited Members;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSpeedo.html:30202,inherit,inherited,30202,doc/master/classTGSpeedo.html,https://root.cern,https://root.cern/doc/master/classTGSpeedo.html,1,['inherit'],['inherited']
Modifiability,"11188 addenv(env, ""%s"", ""AUTH_TYPE=Digest"");; 11189 }; 11190 ; 11191 /* Add all headers as HTTP_* variables */; 11192 for (i = 0; i < conn->request_info.num_headers; i++) {; 11193 ; 11194 (void)mg_snprintf(conn,; 11195 &truncated,; 11196 http_var_name,; 11197 sizeof(http_var_name),; 11198 ""HTTP_%s"",; 11199 conn->request_info.http_headers[i].name);; 11200 ; 11201 if (truncated) {; 11202 mg_cry_internal(conn,; 11203 ""%s: HTTP header variable too long [%s]"",; 11204 __func__,; 11205 conn->request_info.http_headers[i].name);; 11206 continue;; 11207 }; 11208 ; 11209 /* Convert variable name into uppercase, and change - to _ */; 11210 for (p = http_var_name; *p != '\0'; p++) {; 11211 if (*p == '-') {; 11212 *p = '_';; 11213 }; 11214 *p = (char)toupper((unsigned char)*p);; 11215 }; 11216 ; 11217 addenv(env,; 11218 ""%s=%s"",; 11219 http_var_name,; 11220 conn->request_info.http_headers[i].value);; 11221 }; 11222 ; 11223 /* Add user-specified variables */; 11224 s = conn->dom_ctx->config[CGI_ENVIRONMENT + cgi_config_idx];; 11225 while ((s = next_option(s, &var_vec, NULL)) != NULL) {; 11226 addenv(env, ""%.*s"", (int)var_vec.len, var_vec.ptr);; 11227 }; 11228 ; 11229 env->var[env->varused] = NULL;; 11230 env->buf[env->bufused] = '\0';; 11231 ; 11232 return 0;; 11233}; 11234 ; 11235 ; 11236/* Data for CGI process control: PID and number of references */; 11237struct process_control_data {; 11238 pid_t pid;; 11239 ptrdiff_t references;; 11240};; 11241 ; 11242static int; 11243abort_cgi_process(void *data); 11244{; 11245 /* Waitpid checks for child status and won't work for a pid that does; 11246 * not identify a child of the current process. Thus, if the pid is; 11247 * reused, we will not affect a different process. */; 11248 struct process_control_data *proc = (struct process_control_data *)data;; 11249 int status = 0;; 11250 ptrdiff_t refs;; 11251 pid_t ret_pid;; 11252 ; 11253 ret_pid = waitpid(proc->pid, &status, WNOHANG);; 11254 if ((ret_pid != (pid_t)-1) && (status == 0)) {; 112",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:324055,variab,variables,324055,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"11189 addenv(env, ""%s"", ""AUTH_TYPE=Digest"");; 11190 }; 11191 ; 11192 /* Add all headers as HTTP_* variables */; 11193 for (i = 0; i < conn->request_info.num_headers; i++) {; 11194 ; 11195 (void)mg_snprintf(conn,; 11196 &truncated,; 11197 http_var_name,; 11198 sizeof(http_var_name),; 11199 ""HTTP_%s"",; 11200 conn->request_info.http_headers[i].name);; 11201 ; 11202 if (truncated) {; 11203 mg_cry_internal(conn,; 11204 ""%s: HTTP header variable too long [%s]"",; 11205 __func__,; 11206 conn->request_info.http_headers[i].name);; 11207 continue;; 11208 }; 11209 ; 11210 /* Convert variable name into uppercase, and change - to _ */; 11211 for (p = http_var_name; *p != '\0'; p++) {; 11212 if (*p == '-') {; 11213 *p = '_';; 11214 }; 11215 *p = (char)toupper((unsigned char)*p);; 11216 }; 11217 ; 11218 addenv(env,; 11219 ""%s=%s"",; 11220 http_var_name,; 11221 conn->request_info.http_headers[i].value);; 11222 }; 11223 ; 11224 /* Add user-specified variables */; 11225 s = conn->dom_ctx->config[CGI_ENVIRONMENT + cgi_config_idx];; 11226 while ((s = next_option(s, &var_vec, NULL)) != NULL) {; 11227 addenv(env, ""%.*s"", (int)var_vec.len, var_vec.ptr);; 11228 }; 11229 ; 11230 env->var[env->varused] = NULL;; 11231 env->buf[env->bufused] = '\0';; 11232 ; 11233 return 0;; 11234}; 11235 ; 11236 ; 11237/* Data for CGI process control: PID and number of references */; 11238struct process_control_data {; 11239 pid_t pid;; 11240 ptrdiff_t references;; 11241};; 11242 ; 11243static int; 11244abort_cgi_process(void *data); 11245{; 11246 /* Waitpid checks for child status and won't work for a pid that does; 11247 * not identify a child of the current process. Thus, if the pid is; 11248 * reused, we will not affect a different process. */; 11249 struct process_control_data *proc = (struct process_control_data *)data;; 11250 int status = 0;; 11251 ptrdiff_t refs;; 11252 pid_t ret_pid;; 11253 ; 11254 ret_pid = waitpid(proc->pid, &status, WNOHANG);; 11255 if ((ret_pid != (pid_t)-1) && (status == 0)) {; 112",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:324088,variab,variables,324088,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"111; TGraph::SetTitlevoid SetTitle(const char *title="""") overrideChange (i.e.Definition TGraph.cxx:2397; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::IsHighlightvirtual Bool_t IsHighlight() constDefinition TH1.h:338; TH1::FindBinvirtual Int_t FindBin(Double_t x, Double_t y=0, Double_t z=0)Return Global bin number corresponding to x,y,z.Definition TH1.cxx:3672; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TListA doubly linked list.Definition TList.h:38; TList::AtTObject * At(Int_t idx) const overrideReturns the object at position idx. Returns 0 if idx is out of range.Definition TList.cxx:355; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TPad::Dividevoid Divide(Int_t nx=1, Int_t ny=1, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0) overrideAutomatic pad generation by division.Definition TPad.cxx:1249; TPad::FindObjectTObject * FindObject(const char *name) const overrideSearch if object named name is inside this pad or in pads inside this pad.Definition TPad.cxx:2700; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TTextBase class for several text objects.Definition TText.h:22; TTree::GetSelectedRowsvirtual Long64_t GetSelectedRows()Definition TTree.h:553; TTree::Drawvoid Draw(Option_t *opt) overrideDefault Draw method for all object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hlHisto3_8C.html:7367,variab,variables,7367,doc/master/hlHisto3_8C.html,https://root.cern,https://root.cern/doc/master/hlHisto3_8C.html,1,['variab'],['variables']
Modifiability,"112. float * trats(const float* a, const float* s, float* b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trchlu(const float* a, float* b, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trpck(const float* s, float* u, int n); trpck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRPCK .VERSION KERNFOR 2.08 741218 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trqsq(const float* q, const float* s, float* r, int m); trqsq.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRQSQ .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trsa(const float* s, const float* a, float* b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRSA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. Local variables. float * trupck(const float* u, float* s, int m); trupck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRUPCK .VERSION KERNFOR 2.08 741218; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trata(const double* a, double* r, int m, int n). ; see original documentation of CERNLIB package F112. double * trats(const double* a, const double* s, double* b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trchlu(const double* a, double* b, int n); trchlu.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. Local variables. double * trchul(const double* a, double* b, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trinv(const double* t, double* s, int n); trinv.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRINV .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCL.html:15101,variab,variables,15101,root/html528/TCL.html,https://root.cern,https://root.cern/root/html528/TCL.html,6,['variab'],['variables']
Modifiability,1142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:102411,config,configuration,102411,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"119/// - ""D"" Put out a line of ""Debug"" printout; 8120/// - ""M"" Return the Maximum Kolmogorov distance instead of prob; 8121/// - ""X"" Run the pseudo experiments post-processor with the following procedure:; 8122/// make pseudoexperiments based on random values from the parent distribution,; 8123/// compare the KS distance of the pseudoexperiment to the parent; 8124/// distribution, and count all the KS values above the value; 8125/// obtained from the original data to Monte Carlo distribution.; 8126/// The number of pseudo-experiments nEXPT is by default 1000, and; 8127/// it can be changed by specifying the option as ""X=number"",; 8128/// for example ""X=10000"" for 10000 toys.; 8129/// The function returns the probability.; 8130/// (thanks to Ben Kilminster to submit this procedure). Note that; 8131/// this option ""X"" is much slower.; 8132///; 8133/// The returned function value is the probability of test; 8134/// (much less than one means NOT compatible); 8135///; 8136/// Code adapted by Rene Brun from original HBOOK routine HDIFF; 8137///; 8138/// NOTE1; 8139/// A good description of the Kolmogorov test can be seen at:; 8140/// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; 8141///; 8142/// NOTE2; 8143/// see also alternative function TH1::Chi2Test; 8144/// The Kolmogorov test is assumed to give better results than Chi2Test; 8145/// in case of histograms with low statistics.; 8146///; 8147/// NOTE3 (Jan Conrad, Fred James); 8148/// ""The returned value PROB is calculated such that it will be; 8149/// uniformly distributed between zero and one for compatible histograms,; 8150/// provided the data are not binned (or the number of bins is very large; 8151/// compared with the number of events). Users who have access to unbinned; 8152/// data and wish exact confidence levels should therefore not put their data; 8153/// into histograms, but should call directly TMath::KolmogorovTest. On; 8154/// the other hand, since TH1 is a convenient way of collecting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:319294,adapt,adapted,319294,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"1194 ; 1195 if( vers >= 8 ) {; 1196 ; 1197 TClass *oldClass = config->fOldClass;; 1198 ; 1199 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1200 if (!oldProxy) {; 1201 // Missing information, broken file ... give up; 1202 return;; 1203 }; 1204 TClass *valueClass = oldProxy->GetValueClass();; 1205 Version_t vClVersion = buf.ReadVersionForMemberWise( valueClass );; 1206 ; 1207 TActionSequence *actions = oldProxy->GetReadMemberWiseActions( vClVersion );; 1208 ; 1209 int objectSize = oldClass->Size();; 1210 char *obj = (char*)addr;; 1211 char *endobj = obj + conf->fLength*objectSize;; 1212 ; 1213 for(; obj<endobj; obj+=objectSize) {; 1214 Int_t nobjects;; 1215 buf.ReadInt(nobjects);; 1216 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)obj );; 1217 void* alternative = oldProxy->Allocate(nobjects,true);; 1218 if (nobjects) {; 1219 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1220 char endbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1221 void *begin = &(startbuf[0]);; 1222 void *end = &(endbuf[0]);; 1223 config->fCreateIterators(alternative, &begin, &end, oldProxy);; 1224 // We can not get here with a split vector of pointer, so we can indeed assume; 1225 // that actions->fConfiguration != null.; 1226 buf.ApplySequence(*actions, begin, end);; 1227 if (begin != &(startbuf[0])) {; 1228 // assert(end != endbuf);; 1229 config->fDeleteTwoIterators(begin,end);; 1230 }; 1231 }; 1232 oldProxy->Commit(alternative);; 1233 }; 1234 ; 1235 } else {; 1236 ; 1237 TClass *oldClass = config->fOldClass;; 1238 ; 1239 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1240 if (!oldProxy) {; 1241 // Missing information, broken file ... give up; 1242 return;; 1243 }; 1244 ; 1245 int objectSize = oldClass->Size();; 1246 char *obj = (char*)addr;; 1247 char *endobj = obj + conf->fLength*objectSize;; 1248 ; 1249 for(; obj<endobj; obj+=objectSize) {; 1250 TVirtualCollectionProxy::TP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:50575,config,config,50575,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"12 }; 2313 ; 2314 // Same for namespaces; 2315 if (!nsNames.empty()) {; 2316 rootmapFile << ""# List of selected namespaces\n"";; 2317 for (auto & nsName : nsNames) {; 2318 rootmapFile << ""namespace "" << nsName << std::endl;; 2319 }; 2320 }; 2321 ; 2322 // And typedefs. These are used just to trigger the autoload mechanism; 2323 if (!tdNames.empty()) {; 2324 rootmapFile << ""# List of selected typedefs and outer classes\n"";; 2325 for (const auto & autoloadKey : tdNames); 2326 if (classesKeys.insert(autoloadKey).second); 2327 rootmapFile << ""typedef "" << autoloadKey << std::endl;; 2328 }; 2329 ; 2330 // And Enums. There is no incomplete type for an enum but we can nevertheless; 2331 // have the key for the cases where the root typesystem is interrogated.; 2332 if (!enNames.empty()){; 2333 rootmapFile << ""# List of selected enums and outer classes\n"";; 2334 for (const auto & autoloadKey : enNames); 2335 if (classesKeys.insert(autoloadKey).second); 2336 rootmapFile << ""enum "" << autoloadKey << std::endl;; 2337 }; 2338 ; 2339 // And variables.; 2340 if (!varNames.empty()){; 2341 rootmapFile << ""# List of selected vars\n"";; 2342 for (const auto & autoloadKey : varNames); 2343 if (classesKeys.insert(autoloadKey).second); 2344 rootmapFile << ""var "" << autoloadKey << std::endl;; 2345 }; 2346 ; 2347 }; 2348 ; 2349 return 0;; 2350 ; 2351}; 2352 ; 2353////////////////////////////////////////////////////////////////////////////////; 2354/// Performance is not critical here.; 2355 ; 2356std::pair<std::string,std::string> GetExternalNamespaceAndContainedEntities(const std::string line); 2357{; 2358 auto nsPattern = '{'; auto nsPatternLength = 1;; 2359 auto foundNsPos = line.find_last_of(nsPattern);; 2360 if (foundNsPos == std::string::npos) return {"""",""""};; 2361 foundNsPos+=nsPatternLength;; 2362 auto extNs = line.substr(0,foundNsPos);; 2363 ; 2364 auto nsEndPattern = '}';; 2365 auto foundEndNsPos = line.find(nsEndPattern);; 2366 auto contained = line.substr(foundNsPos, foundEndNsPo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:92588,variab,variables,92588,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['variab'],['variables']
Modifiability,"1204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trsa(const float* s, const float* a, float* b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRSA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. Local variables. float * trupck(const float* u, float* s, int m); trupck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRUPCK .VERSION KERNFOR 2.08 741218; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trata(const double* a, double* r, int m, int n). ; see original documentation of CERNLIB package F112. double * trats(const double* a, const double* s, double* b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trchlu(const double* a, double* b, int n); trchlu.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. Local variables. double * trchul(const double* a, double* b, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trinv(const double* t, double* s, int n); trinv.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRINV .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. double * trlta(const double* u, const double* a, double* b, int m, int n); trlta.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRLTA .VERSION KERNFOR 4.15 861204; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trqsq(const double* q, const double* s, double* r, int m); trqsq.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRQSQ .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. double * trsa(const double* s, const double* a, double* b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCL.html:15761,variab,variables,15761,root/html528/TCL.html,https://root.cern,https://root.cern/root/html528/TCL.html,6,['variab'],['variables']
Modifiability,"1248 continue;; 1249 } else {; 1250 counter =; 1251 TString(formula(openingParenthesisPos + 1, formula.Index(')', funPos) - openingParenthesisPos - 1)); 1252 .Atoi();; 1253 }; 1254 }; 1255 // std::cout << ""openingParenthesisPos "" << openingParenthesisPos << "" counter is "" << counter << std::endl;; 1256 ; 1257 TString body = (isNormalized ? it->second.second : it->second.first);; 1258 if (isNormalized && body == """") {; 1259 Error(""PreprocessFormula"", ""%d dimension function %s has no normalized form."", it->first.second,; 1260 funName.Data());; 1261 break;; 1262 }; 1263 for (int i = 0; i < body.Length(); ++i) {; 1264 if (body[i] == '{') {; 1265 // replace {Vn} with variable names; 1266 i += 2; // skip '{' and 'V'; 1267 Int_t num = TString(body(i, body.Index('}', i) - i)).Atoi();; 1268 TString variable = variables[num];; 1269 TString pattern = TString::Format(""{V%d}"", num);; 1270 i -= 2; // restore original position; 1271 body.Replace(i, pattern.Length(), variable, variable.Length());; 1272 i += variable.Length() - 1; // update i to reflect change in body string; 1273 } else if (body[i] == '[') {; 1274 // update parameter counters in case of many functions (e.g. gaus(0)+gaus(3) ); 1275 Int_t tmp = i;; 1276 while (tmp < body.Length() && body[tmp] != ']') {; 1277 tmp++;; 1278 }; 1279 Int_t num = TString(body(i + 1, tmp - 1 - i)).Atoi();; 1280 num += counter;; 1281 TString replacement = TString::Format(""%d"", num);; 1282 ; 1283 body.Replace(i + 1, tmp - 1 - i, replacement, replacement.Length());; 1284 i += replacement.Length() + 1;; 1285 }; 1286 }; 1287 TString pattern;; 1288 if (defaultCounter && defaultVariables) {; 1289 pattern = TString::Format(""%s%s"", funName.Data(), (isNormalized ? ""n"" : """"));; 1290 }; 1291 if (!defaultCounter && defaultVariables) {; 1292 pattern = TString::Format(""%s%s(%d)"", funName.Data(), (isNormalized ? ""n"" : """"), counter);; 1293 }; 1294 if (defaultCounter && !defaultVariables) {; 1295 pattern = TString::Format(""%s%s[%s]"", funName.Data(), (isNormal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:48083,variab,variable,48083,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStringVar.html:36367,inherit,inherited,36367,doc/master/classRooStringVar.html,https://root.cern,https://root.cern/doc/master/classRooStringVar.html,1,['inherit'],['inherited']
Modifiability,"13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooArgProxy; virtual void changeDataSet (const RooArgSet *newNormSet);  Change the normalization set that should be offered to the content objects getVal() when evaluated. ;  ; bool changePointer (const RooAbsCollection &newServerSet, bool nameChange=false, bool factoryInitMode=false) override;  Change proxied object to object of same name in given list. ;  ; bool changePointer (std::unordered_map< RooAbsArg *, RooAbsArg * > const &replacements) override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooAbsProxy; virtual void changeNormSet (const RooArgSet *newNormSet);  Destructor. ;  ;  Protected Attributes inherited from RooArgProxy; RooAbsArg * _arg = nullptr;  Pointer to content of proxy. ;  ; bool _isFund = true;  If true proxy contains an lvalue. ;  ; bool _ownArg = false;  If true proxy owns contents. ;  ; RooAbsArg * _owner = nullptr;  Pointer to owner of proxy. ;  ; bool _shapeServer = false;  If true contents is shape server of owner. ;  ; bool _valueServer = false;  If true contents is value server of owner. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from RooAbsProxy; RooArgSet * _nset = nullptr;  ! Normalization set to be used for evaluation of RooAbsPdf contents ;  . #include <RooTemplateProxy.h>. Inheritance diagram for RooTemplateProxy< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooTemplateProxy() [1/2]. template<class T > . RooTemplateProxy< T >::RooTemplateProxy ; (; ). inline . Definition at line 155 of file RooTemplateProxy.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTemplateProxy.html:20479,inherit,inherited,20479,doc/master/classRooTemplateProxy.html,https://root.cern,https://root.cern/doc/master/classRooTemplateProxy.html,1,['inherit'],['inherited']
Modifiability,"133 of file MethodLD.cxx. ◆ Init(). void TMVA::MethodLD::Init ; (; void ; ). privatevirtual . default initialization called by all constructors ; Implements TMVA::MethodBase.; Definition at line 100 of file MethodLD.cxx. ◆ InitMatrices(). void TMVA::MethodLD::InitMatrices ; (; void ; ). private . Initialization method; creates global matrices and vectors. ; Definition at line 222 of file MethodLD.cxx. ◆ IsA(). virtual TClass * TMVA::MethodLD::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::MethodBase.; Definition at line 121 of file MethodLD.h. ◆ MakeClassSpecific(). void TMVA::MethodLD::MakeClassSpecific ; (; std::ostream & ; fout, . const TString & ; className . ); const. protectedvirtual . write LD-specific classifier response ; Reimplemented from TMVA::MethodBase.; Definition at line 417 of file MethodLD.cxx. ◆ PrintCoefficients(). void TMVA::MethodLD::PrintCoefficients ; (; void ; ). private . Display the classification/regression coefficients for each variable. ; Definition at line 490 of file MethodLD.cxx. ◆ ProcessOptions(). void TMVA::MethodLD::ProcessOptions ; (; ). virtual . this is the preparation for training ; Implements TMVA::MethodBase.; Definition at line 482 of file MethodLD.cxx. ◆ ReadWeightsFromStream() [1/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; std::istream & ; ). virtual . Implements TMVA::MethodBase. ◆ ReadWeightsFromStream() [2/3]. void TMVA::MethodLD::ReadWeightsFromStream ; (; std::istream & ; i). virtual . read LD coefficients from weight file ; Implements TMVA::MethodBase.; Definition at line 349 of file MethodLD.cxx. ◆ ReadWeightsFromStream() [3/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; TFile & ; ). inlinevirtual . Reimplemented from TMVA::MethodBase.; Definition at line 266 of file MethodBase.h. ◆ ReadWeightsFromXML(). void TMVA::MethodLD::ReadWeightsFromXML ; (; void * ; wghtnode). virtual . read coefficients from xml weight file ; Implement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLD.html:33464,variab,variable,33464,doc/master/classTMVA_1_1MethodLD.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLD.html,1,['variab'],['variable']
Modifiability,"1336 of file RooPlot.cxx. ◆ SetZTitle(). void RooPlot::SetZTitle ; (; const char * ; title). See alsoTH1::SetZTitle() ; Definition at line 1338 of file RooPlot.cxx. ◆ Streamer(). void RooPlot::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Definition at line 1357 of file RooPlot.cxx. ◆ StreamerNVirtual(). void RooPlot::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 256 of file RooPlot.h. ◆ updateFitRangeNorm() [1/2]. void RooPlot::updateFitRangeNorm ; (; const RooPlotable * ; rp, . bool ; refreshNorm = false . ). protected . Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ; Definition at line 562 of file RooPlot.cxx. ◆ updateFitRangeNorm() [2/2]. void RooPlot::updateFitRangeNorm ; (; const TH1 * ; hist). protected . Update our plot normalization over our plot variable's fit range, which will be determined by the first suitable object added to our plot. ; Definition at line 550 of file RooPlot.cxx. ◆ updateNormVars(). void RooPlot::updateNormVars ; (; const RooArgSet & ; vars). Install the given set of observables are reference normalization variables for this frame. ; These observables are e.g. later used to automatically project out observables when plotting functions on this frame. This function is only effective when called the first time on a frame ; Definition at line 351 of file RooPlot.cxx. ◆ updateYAxis(). void RooPlot::updateYAxis ; (; double ; ymin, . double ; ymax, . const char * ; label = """" . ). protected . Update our y-axis limits to accommodate an object whose spread in y is (ymin,ymax). ; Use the specified y-axis label if we don't have one assigned already. ; Definition at line 605 of file RooPlot.cxx. Member Data Documentation. ◆ _addDirStatus. bool RooPlot::_addDirStatus = true. staticprotected . static flag controlling AutoDirectoryAdd feature ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:54952,variab,variable,54952,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variable']
Modifiability,135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:105728,config,configuration,105728,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"14 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16815 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16816 */; 16817 CONF_modules_unload(1);; 16818#else; 16819 int i;; 16820 ; 16821 if (mg_atomic_dec(&cryptolib_users) == 0) {; 16822 ; 16823 /* Shutdown according to; 16824 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16825 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16826 */; 16827 CRYPTO_set_locking_callback(NULL);; 16828 CRYPTO_set_id_callback(NULL);; 16829 ENGINE_cleanup();; 16830 CONF_modules_unload(1);; 16831 ERR_free_strings();; 16832 EVP_cleanup();; 16833 CRYPTO_cleanup_all_ex_data();; 16834 OPENSSL_REMOVE_THREAD_STATE();; 16835 ; 16836 for (i = 0; i < CRYPTO_num_locks(); i++) {; 16837 pthread_mutex_destroy(&ssl_mutexes[i]);; 16838 }; 16839 mg_free(ssl_mutexes);; 16840 ssl_mutexes = NULL;; 16841#endif /* OPENSSL_API_1_1 || OPENSSL_API_3_0 */; 16842 }; 16843}; 16844#endif /* !defined(NO_SSL) && !defined(USE_MBEDTLS) */; 16845 ; 16846 ; 16847#if !defined(NO_FILESYSTEMS); 16848static int; 16849set_gpass_option(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 16850{; 16851 if (phys_ctx) {; 16852 struct mg_file file = STRUCT_FILE_INITIALIZER;; 16853 const char *path;; 16854 struct mg_connection fc;; 16855 if (!dom_ctx) {; 16856 dom_ctx = &(phys_ctx->dd);; 16857 }; 16858 path = dom_ctx->config[GLOBAL_PASSWORDS_FILE];; 16859 if ((path != NULL); 16860 && !mg_stat(fake_connection(&fc, phys_ctx), path, &file.stat)) {; 16861 mg_cry_ctx_internal(phys_ctx,; 16862 ""Cannot open %s: %s"",; 16863 path,; 16864 strerror(ERRNO));; 16865 return 0;; 16866 }; 16867 return 1;; 16868 }; 16869 return 0;; 16870}; 16871#endif /* NO_FILESYSTEMS */; 16872 ; 16873 ; 16874static int; 16875set_acl_option(struct mg_context *phys_ctx); 16876{; 16877 union usa sa;; 16878 memset(&sa, 0, sizeof(sa));; 16879#if defined(USE_IPV6); 16880 sa.sin6.sin6_family = AF_I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:500625,config,config,500625,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"14 ; 1715 } else if (extended) {; 1716 ; 1717 // Extended mode, set contents to Poisson(pdf*nEvents); 1718 double w = RooRandom::randomGenerator()->Poisson(hist->weight()*nEvents) ;; 1719 hist->set(w,sqrt(w)) ;; 1720 ; 1721 } else {; 1722 ; 1723 // Regular mode, fill array of weights with Poisson(pdf*nEvents), but to not fill; 1724 // histogram yet.; 1725 if (hist->weight()>histMax) {; 1726 histMax = hist->weight() ;; 1727 }; 1728 histOut[i] = RooRandom::randomGenerator()->Poisson(hist->weight()*nEvents) ;; 1729 histOutSum += histOut[i] ;; 1730 }; 1731 }; 1732 ; 1733 ; 1734 if (!expectedData && !extended) {; 1735 ; 1736 // Second pass for regular mode - Trim/Extend dataset to exact number of entries; 1737 ; 1738 // Calculate difference between what is generated so far and what is requested; 1739 Int_t nEvtExtra = std::abs(Int_t(nEvents)-histOutSum) ;; 1740 Int_t wgt = (histOutSum>nEvents) ? -1 : 1 ;; 1741 ; 1742 // Perform simple binned accept/reject procedure to get to exact event count; 1743 std::size_t counter = 0;; 1744 bool havePrintedInfo = false;; 1745 while(nEvtExtra>0) {; 1746 ; 1747 Int_t ibinRand = RooRandom::randomGenerator()->Integer(hist->numEntries()) ;; 1748 hist->get(ibinRand) ;; 1749 double ranY = RooRandom::randomGenerator()->Uniform(histMax) ;; 1750 ; 1751 if (ranY<hist->weight()) {; 1752 if (wgt==1) {; 1753 histOut[ibinRand]++ ;; 1754 } else {; 1755 // If weight is negative, prior bin content must be at least 1; 1756 if (histOut[ibinRand]>0) {; 1757 histOut[ibinRand]-- ;; 1758 } else {; 1759 continue ;; 1760 }; 1761 }; 1762 nEvtExtra-- ;; 1763 }; 1764 ; 1765 if ((counter++ > 10*nEvents || nEvents > 1.E7) && !havePrintedInfo) {; 1766 havePrintedInfo = true;; 1767 coutP(Generation) << ""RooAbsPdf::generateBinned("" << GetName() << "") Performing costly accept/reject sampling. If this takes too long, use ""; 1768 << ""extended mode to speed up the process."" << std::endl;; 1769 }; 1770 }; 1771 ; 1772 // Transfer working array to histogram; 1773 for (int ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:84000,extend,extended,84000,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,140 of file Minuit2Minimizer.h. ◆ Errors(). const double * ROOT::Minuit2::Minuit2Minimizer::Errors ; (; ); const. overridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 717 of file Minuit2Minimizer.cxx. ◆ ExamineMinimum(). bool ROOT::Minuit2::Minuit2Minimizer::ExamineMinimum ; (; const ROOT::Minuit2::FunctionMinimum & ; min). protected . examine the minimum result ; Definition at line 594 of file Minuit2Minimizer.cxx. ◆ FixVariable(). bool ROOT::Minuit2::Minuit2Minimizer::FixVariable ; (; unsigned int ; ivar). overridevirtual . fix an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 338 of file Minuit2Minimizer.cxx. ◆ GetCovMatrix(). bool ROOT::Minuit2::Minuit2Minimizer::GetCovMatrix ; (; double * ; cov); const. overridevirtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 755 of file Minuit2Minimizer.cxx. ◆ GetFCN(). virtual const ROOT::Minuit2::FCNBase * ROOT::Minuit2::Minuit2Minimizer::GetFCN ; (; ); const. inlineprotectedvirtual . Definition at line 287 of file Minuit2Minimizer.h. ◆ GetHessianMatrix(). bool ROOT::Minuit2::Minuit2Minimizer::GetHessianMatrix ; (; double * ; h); const. overridevirtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array will be filled as h[i *ndim + j] ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 784 of file Minuit2Minimizer.cxx. ◆ GetMinimizer(). virtual const ROOT,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:16393,variab,variables,16393,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variables']
Modifiability,"14134 if (!strcmp(ri->request_method, ""OPTIONS"")) {; 14135 /* Send a response to CORS preflights only if; 14136 * access_control_allow_methods is not NULL and not an empty string.; 14137 * In this case, scripts can still handle CORS. */; 14138 const char *cors_meth_cfg =; 14139 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_METHODS];; 14140 const char *cors_orig_cfg =; 14141 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 14142 const char *cors_cred_cfg =; 14143 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 14144 const char *cors_origin =; 14145 get_header(ri->http_headers, ri->num_headers, ""Origin"");; 14146 const char *cors_acrm = get_header(ri->http_headers,; 14147 ri->num_headers,; 14148 ""Access-Control-Request-Method"");; 14149 ; 14150 /* Todo: check if cors_origin is in cors_orig_cfg.; 14151 * Or, let the client check this. */; 14152 ; 14153 if ((cors_meth_cfg != NULL) && (*cors_meth_cfg != 0); 14154 && (cors_orig_cfg != NULL) && (*cors_orig_cfg != 0); 14155 && (cors_origin != NULL) && (cors_acrm != NULL)) {; 14156 /* This is a valid CORS preflight, and the server is configured; 14157 * to handle it automatically. */; 14158 const char *cors_acrh =; 14159 get_header(ri->http_headers,; 14160 ri->num_headers,; 14161 ""Access-Control-Request-Headers"");; 14162 ; 14163 gmt_time_string(date, sizeof(date), &curtime);; 14164 mg_printf(conn,; 14165 ""HTTP/1.1 200 OK\r\n""; 14166 ""Date: %s\r\n""; 14167 ""Access-Control-Allow-Origin: %s\r\n""; 14168 ""Access-Control-Allow-Methods: %s\r\n""; 14169 ""Content-Length: 0\r\n""; 14170 ""Connection: %s\r\n"",; 14171 date,; 14172 cors_orig_cfg,; 14173 ((cors_meth_cfg[0] == '*') ? cors_acrm : cors_meth_cfg),; 14174 suggest_connection_header(conn));; 14175 ; 14176 if (cors_acrh != NULL) {; 14177 /* CORS request is asking for additional headers */; 14178 const char *cors_hdr_cfg =; 14179 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14180 ; 14181 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14182 /* Allow only if ac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:415968,config,configured,415968,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"14135 if (!strcmp(ri->request_method, ""OPTIONS"")) {; 14136 /* Send a response to CORS preflights only if; 14137 * access_control_allow_methods is not NULL and not an empty string.; 14138 * In this case, scripts can still handle CORS. */; 14139 const char *cors_meth_cfg =; 14140 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_METHODS];; 14141 const char *cors_orig_cfg =; 14142 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 14143 const char *cors_cred_cfg =; 14144 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 14145 const char *cors_origin =; 14146 get_header(ri->http_headers, ri->num_headers, ""Origin"");; 14147 const char *cors_acrm = get_header(ri->http_headers,; 14148 ri->num_headers,; 14149 ""Access-Control-Request-Method"");; 14150 ; 14151 /* Todo: check if cors_origin is in cors_orig_cfg.; 14152 * Or, let the client check this. */; 14153 ; 14154 if ((cors_meth_cfg != NULL) && (*cors_meth_cfg != 0); 14155 && (cors_orig_cfg != NULL) && (*cors_orig_cfg != 0); 14156 && (cors_origin != NULL) && (cors_acrm != NULL)) {; 14157 /* This is a valid CORS preflight, and the server is configured; 14158 * to handle it automatically. */; 14159 const char *cors_acrh =; 14160 get_header(ri->http_headers,; 14161 ri->num_headers,; 14162 ""Access-Control-Request-Headers"");; 14163 ; 14164 gmt_time_string(date, sizeof(date), &curtime);; 14165 mg_printf(conn,; 14166 ""HTTP/1.1 200 OK\r\n""; 14167 ""Date: %s\r\n""; 14168 ""Access-Control-Allow-Origin: %s\r\n""; 14169 ""Access-Control-Allow-Methods: %s\r\n""; 14170 ""Content-Length: 0\r\n""; 14171 ""Connection: %s\r\n"",; 14172 date,; 14173 cors_orig_cfg,; 14174 ((cors_meth_cfg[0] == '*') ? cors_acrm : cors_meth_cfg),; 14175 suggest_connection_header(conn));; 14176 ; 14177 if (cors_acrh != NULL) {; 14178 /* CORS request is asking for additional headers */; 14179 const char *cors_hdr_cfg =; 14180 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14181 ; 14182 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14183 /* Allow only if ac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:416001,config,configured,416001,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"142 // if a vector of parameters is given and parameters are not existing or are of different size; 143 bool createNew = false;; 144 if (npar != fSettings.size() ) {; 145 fSettings.clear();; 146 fSettings.reserve(npar);; 147 createNew = true;; 148 }; 149 unsigned int i = 0;; 150 const double * end = params+npar;; 151 for (const double * ipar = params; ipar != end; ++ipar) {; 152 double val = *ipar;; 153 double step = 0;; 154 if (vstep == nullptr) {; 155 step = 0.3*std::fabs(val); // step size is 30% of par value; 156 //double step = 2.0*std::fabs(val); // step size is 30% of par value; 157 if (val == 0) step = 0.3;; 158 }; 159 else; 160 step = vstep[i];; 161 ; 162 if (createNew); 163 fSettings.push_back( ParameterSettings(""Par_"" + ROOT::Math::Util::ToString(i), val, step ) );; 164 else {; 165 fSettings[i].SetValue(val);; 166 fSettings[i].SetStepSize(step);; 167 }; 168 ; 169 i++;; 170 }; 171}; 172 ; 173ROOT::Math::Minimizer * FitConfig::CreateMinimizer() {; 174 // create minimizer according to the chosen configuration using the; 175 // plug-in manager; 176 ; 177 // in case of empty string usesd default values; 178 if (fMinimizerOpts.MinimizerType().empty()); 179 fMinimizerOpts.SetMinimizerType(ROOT::Math::MinimizerOptions::DefaultMinimizerType().c_str());; 180 if (fMinimizerOpts.MinimizerAlgorithm().empty()); 181 fMinimizerOpts.SetMinimizerAlgorithm(ROOT::Math::MinimizerOptions::DefaultMinimizerAlgo().c_str());; 182 ; 183 const std::string &minimType = fMinimizerOpts.MinimizerType();; 184 const std::string & algoType = fMinimizerOpts.MinimizerAlgorithm();; 185 ; 186 std::string defaultMinim = ROOT::Math::MinimizerOptions::DefaultMinimizerType();; 187 ; 188 ROOT::Math::Minimizer * min = ROOT::Math::Factory::CreateMinimizer(minimType, algoType);; 189 // check if a different minimizer is used (in case a default value is passed, then set correctly in FitConfig); 190 const std::string & minim_newDefault = ROOT::Math::MinimizerOptions::DefaultMinimizerType();; 191 if (defa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8cxx_source.html:5382,config,configuration,5382,doc/master/FitConfig_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8cxx_source.html,2,"['config', 'plug-in']","['configuration', 'plug-in']"
Modifiability,"1427 ; 1428 if (randProtoOrder && prototype && prototype->numEntries()!=nEvents) {; 1429 coutI(Generation) << ""RooAbsPdf::generate (Re)randomizing event order in prototype dataset (Nevt="" << nEvents << "")"" << endl ;; 1430 Int_t* newOrder = randomizeProtoOrder(prototype->numEntries(),Int_t(nEvents),resampleProto) ;; 1431 context.setProtoDataOrder(newOrder) ;; 1432 delete[] newOrder ;; 1433 }; 1434 ; 1435 if(context.isValid()) {; 1436 generated = std::unique_ptr<RooDataSet>{context.generate(nEvents,skipInit,extended)};; 1437 }; 1438 else {; 1439 coutE(Generation) << ""RooAbsPdf::generate("" << GetName() << "") do not have a valid generator context"" << endl;; 1440 }; 1441 return generated;; 1442}; 1443 ; 1444 ; 1445 ; 1446 ; 1447////////////////////////////////////////////////////////////////////////////////; 1448/// Generate a new dataset using a prototype dataset as a model,; 1449/// with values of the variables in `whatVars` sampled from our distribution.; 1450///; 1451/// \param[in] whatVars Generate for these variables.; 1452/// \param[in] prototype Use this dataset; 1453/// as a prototype: the new dataset will contain the same number of; 1454/// events as the prototype (by default), and any prototype variables not in; 1455/// whatVars will be copied into the new dataset for each generated; 1456/// event and also used to set our PDF parameters. The user can specify a; 1457/// number of events to generate that will override the default. The result is a; 1458/// copy of the prototype dataset with only variables in whatVars; 1459/// randomized. Variables in whatVars that are not in the prototype; 1460/// will be added as new columns to the generated dataset.; 1461/// \param[in] nEvents Number of events to generate. Defaults to 0, which means number; 1462/// of event in prototype dataset.; 1463/// \param[in] verbose Show which generator strategies are being used.; 1464/// \param[in] randProtoOrder Randomise order of retrieval of events from proto dataset.; 1465/// \param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:71140,variab,variables,71140,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"144TString TString::LLtoa(Long64_t value, Int_t base); 2145{; 2146 std::string buf;; 2147 // check that the base if valid; 2148 if (base < 2 || base > 36) {; 2149 Error(""TString::LLtoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2150 return (TString(""!""));; 2151 }; 2152 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2153 Long64_t quotient = value;; 2154 // Translating number to string with base:; 2155 do {; 2156 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ TMath::Abs(quotient % base) ];; 2157 quotient /= base;; 2158 } while (quotient);; 2159 // Append the negative sign; 2160 if (value < 0) buf += '-';; 2161 std::reverse(buf.begin(), buf.end());; 2162 return (TString(buf.data()));; 2163}; 2164 ; 2165////////////////////////////////////////////////////////////////////////////////; 2166/// Converts a ULong64_t (twice the range of an Long64_t) to a TString with; 2167/// respect to the base specified (2-36). Thus it is an enhanced version of; 2168/// sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; 2169/// In case of error returns the ""!"" string.; 2170 ; 2171TString TString::ULLtoa(ULong64_t value, Int_t base); 2172{; 2173 std::string buf;; 2174 // check that the base if valid; 2175 if (base < 2 || base > 36) {; 2176 Error(""TString::ULLtoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2177 return (TString(""!""));; 2178 }; 2179 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2180 ULong64_t quotient = value;; 2181 // Translating number to string with base:; 2182 do {; 2183 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ quotient % base ];; 2184 quotient /= base;; 2185 } while (quotient);; 2186 std::reverse(buf.begin(), buf.end());; 2187 return (TString(buf.data()));; 2188}; 2189 ; 2190////////////////////////////////////////////////////////////////////////////////; 2191/// Converts string from base base_in to base base_out. Supported bases; 2192/// are 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:68664,enhance,enhanced,68664,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,2,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"1457 ; 1458 // create a clone of the old histogram if newname is specified; 1459 TProfile *hnew = this;; 1460 if ((newname && strlen(newname) > 0) || xbins) {; 1461 hnew = (TProfile*)Clone(newname);; 1462 }; 1463 ; 1464 // in case of ngroup not an excat divider of nbins,; 1465 // top limit is changed (see NOTE in method comment); 1466 if(!xbins && (newbins*ngroup != nbins)) {; 1467 xmax = fXaxis.GetBinUpEdge(newbins*ngroup);; 1468 hnew->fTsumw = 0; //stats must be reset because top bins will be moved to overflow bin; 1469 }; 1470 ; 1471 // set correctly the axis and resizes the bin arrays; 1472 if(!xbins && (fXaxis.GetXbins()->GetSize() > 0)){; 1473 // for rebinning of variable bins in a constant group; 1474 Double_t *bins = new Double_t[newbins+1];; 1475 for(i = 0; i <= newbins; ++i) bins[i] = fXaxis.GetBinLowEdge(1+i*ngroup);; 1476 hnew->SetBins(newbins,bins); //this also changes the bin array's; 1477 delete [] bins;; 1478 } else if (xbins) {; 1479 // when rebinning in variable bins; 1480 hnew->SetBins(newbins,xbins);; 1481 } else {; 1482 hnew->SetBins(newbins,xmin,xmax);; 1483 }; 1484 ; 1485 // merge bin contents ignoring now underflow/overflows; 1486 if (fBinSumw2.fN) hnew->Sumw2();; 1487 ; 1488 // Start merging only once the new lowest edge is reached; 1489 Int_t startbin = 1;; 1490 const Double_t newxmin = hnew->GetXaxis()->GetBinLowEdge(1);; 1491 while( fXaxis.GetBinCenter(startbin) < newxmin && startbin <= nbins ) {; 1492 startbin++;; 1493 }; 1494 ; 1495 Double_t *cu2 = hnew->GetW();; 1496 Double_t *er2 = hnew->GetW2();; 1497 Double_t *en2 = hnew->GetB();; 1498 Double_t *ew2 = hnew->GetB2();; 1499 Int_t oldbin = startbin;; 1500 Double_t binContent, binCount, binError, binSumw2;; 1501 for (bin = 1;bin<=newbins;bin++) {; 1502 binContent = 0;; 1503 binCount = 0;; 1504 binError = 0;; 1505 binSumw2 = 0;; 1506 ; 1507 //for xbins != 0: ngroup == nbins; 1508 Int_t imax = ngroup;; 1509 Double_t xbinmax = hnew->GetXaxis()->GetBinUpEdge(bin);; 1510 for (i=0;i<ngroup;i+",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:54924,variab,variable,54924,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['variab'],['variable']
Modifiability,"147483647; TH3F : histograms with one float per channel. Maximum precision 7 digits; TH3D : histograms with one double per channel. Maximum precision 14 digits; ; Profile histograms: See classes TProfile, TProfile2D and TProfile3D.; Profile histograms are used to display the mean value of Y and its standard deviation; for each bin in X. Profile histograms are in many cases an elegant; replacement of two-dimensional histograms : the inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. All histogram classes are derived from the base class TH1. TH1; ^; |; |; |; -----------------------------------------------------------; | | | | | | |; | | TH1C TH1S TH1I TH1F TH1D; | | |; | | |; | TH2 TProfile; | |; | |; | ----------------------------------; | | | | | |; | TH2C TH2S TH2I TH2F TH2D; | |; TH3 |; | TProfile2D; |; -------------------------------------; | | | | |; TH3C TH3S TH3I TH3F TH3D; |; |; TProfile3D; The TH*C classes also inherit from the array class TArrayC.; The TH*S classes also inherit from the array class TArrayS.; The TH*I classes also inherit from the array class TArrayI.; The TH*F classes also inherit from the array class TArrayF.; The TH*D classes also inherit from the array class TArrayD. Creating histograms. Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);. Histograms may also be created by:; ; calling the Clone function, see below; making a projection from a 2-D or 3-D histogram, see below; reading an histogram from a file; ; When an histogram is created, a reference to it is automatically added; to the list of in-memory objects for the current file or directory.; This default behaviour can be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1.html:2592,inherit,inherit,2592,root/html604/TH1.html,https://root.cern,https://root.cern/root/html604/TH1.html,1,['inherit'],['inherit']
Modifiability,"1485}; 1486 ; 1487////////////////////////////////////////////////////////////////////////////////; 1488/// Reset contents of a Profile2D histogram.; 1489 ; 1490void TProfile2D::Reset(Option_t *option); 1491{; 1492 TH2D::Reset(option);; 1493 fBinEntries.Reset();; 1494 fBinSumw2.Reset();; 1495 TString opt = option;; 1496 opt.ToUpper();; 1497 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 1498 fTsumwz = fTsumwz2 = 0;; 1499}; 1500 ; 1501 ; 1502////////////////////////////////////////////////////////////////////////////////; 1503/// Profile histogram is resized along axis such that x is in the axis range.; 1504///; 1505/// The new axis limits are recomputed by doubling iteratively; 1506/// the current axis range until the specified value x is within the limits.; 1507/// The algorithm makes a copy of the histogram, then loops on all bins; 1508/// of the old histogram to fill the extended histogram.; 1509/// Takes into account errors (Sumw2) if any.; 1510/// The axis must be extendable before invoking this function.; 1511///; 1512/// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`; 1513 ; 1514void TProfile2D::ExtendAxis(Double_t x, TAxis *axis); 1515{; 1516 TProfile2D* hold = TProfileHelper::ExtendAxis(this, x, axis);; 1517 if ( hold ) {; 1518 fTsumwz = hold->fTsumwz;; 1519 fTsumwz2 = hold->fTsumwz2;; 1520 delete hold;; 1521 }; 1522}; 1523 ; 1524////////////////////////////////////////////////////////////////////////////////; 1525/// Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together.; 1526///; 1527/// if newname is not blank a new profile hnew is created.; 1528/// else the current histogram is modified (default); 1529/// The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this; 1530/// have to be merged into one bin of hnew; 1531/// If the original profile has errors stored (via Sumw2), the resulting; 1532/// profile has new errors correctly calculated.; 1533///; 1534/// examples: if hpxpy is an existing TProfile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:55433,extend,extendable,55433,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"15 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16816 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16817 */; 16818 CONF_modules_unload(1);; 16819#else; 16820 int i;; 16821 ; 16822 if (mg_atomic_dec(&cryptolib_users) == 0) {; 16823 ; 16824 /* Shutdown according to; 16825 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16826 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16827 */; 16828 CRYPTO_set_locking_callback(NULL);; 16829 CRYPTO_set_id_callback(NULL);; 16830 ENGINE_cleanup();; 16831 CONF_modules_unload(1);; 16832 ERR_free_strings();; 16833 EVP_cleanup();; 16834 CRYPTO_cleanup_all_ex_data();; 16835 OPENSSL_REMOVE_THREAD_STATE();; 16836 ; 16837 for (i = 0; i < CRYPTO_num_locks(); i++) {; 16838 pthread_mutex_destroy(&ssl_mutexes[i]);; 16839 }; 16840 mg_free(ssl_mutexes);; 16841 ssl_mutexes = NULL;; 16842#endif /* OPENSSL_API_1_1 || OPENSSL_API_3_0 */; 16843 }; 16844}; 16845#endif /* !defined(NO_SSL) && !defined(USE_MBEDTLS) */; 16846 ; 16847 ; 16848#if !defined(NO_FILESYSTEMS); 16849static int; 16850set_gpass_option(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 16851{; 16852 if (phys_ctx) {; 16853 struct mg_file file = STRUCT_FILE_INITIALIZER;; 16854 const char *path;; 16855 struct mg_connection fc;; 16856 if (!dom_ctx) {; 16857 dom_ctx = &(phys_ctx->dd);; 16858 }; 16859 path = dom_ctx->config[GLOBAL_PASSWORDS_FILE];; 16860 if ((path != NULL); 16861 && !mg_stat(fake_connection(&fc, phys_ctx), path, &file.stat)) {; 16862 mg_cry_ctx_internal(phys_ctx,; 16863 ""Cannot open %s: %s"",; 16864 path,; 16865 strerror(ERRNO));; 16866 return 0;; 16867 }; 16868 return 1;; 16869 }; 16870 return 0;; 16871}; 16872#endif /* NO_FILESYSTEMS */; 16873 ; 16874 ; 16875static int; 16876set_acl_option(struct mg_context *phys_ctx); 16877{; 16878 union usa sa;; 16879 memset(&sa, 0, sizeof(sa));; 16880#if defined(USE_IPV6); 16881 sa.sin6.sin6_family = AF_I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:500658,config,config,500658,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"15 }; 2316 };; 2317 ; 2318 };; 2319 ; 2320 struct GenericLooper {; 2321 ; 2322 template <typename T>; 2323 static INLINE_TEMPLATE_ARGS Int_t ReadBasicType(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2324 {; 2325 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2326 ; 2327 Next_t next = loopconfig->fNext;; 2328 const Int_t offset = config->fOffset;; 2329 ; 2330 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2331 void *iter = loopconfig->fCopyIterator(iterator,start);; 2332 void *addr;; 2333 while( (addr = next(iter,end)) ) {; 2334 T *x = (T*)( ((char*)addr) + offset );; 2335 buf >> *x;; 2336 }; 2337 if (iter != &iterator[0]) {; 2338 loopconfig->fDeleteIterator(iter);; 2339 }; 2340 return 0;; 2341 }; 2342 ; 2343 template <typename T>; 2344 static INLINE_TEMPLATE_ARGS Int_t WriteBasicType(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2345 {; 2346 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2347 ; 2348 Next_t next = loopconfig->fNext;; 2349 const Int_t offset = config->fOffset;; 2350 ; 2351 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2352 void *iter = loopconfig->fCopyIterator(iterator,start);; 2353 void *addr;; 2354 while( (addr = next(iter,end)) ) {; 2355 T *x = (T*)( ((char*)addr) + offset );; 2356 buf << *x;; 2357 }; 2358 if (iter != &iterator[0]) {; 2359 loopconfig->fDeleteIterator(iter);; 2360 }; 2361 return 0;; 2362 }; 2363 ; 2364 template <Int_t (*iter_action)(TBuffer&,void *,const TConfiguration*)>; 2365 static INLINE_TEMPLATE_ARGS Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2366 {; 2367 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2368 ; 2369 // const Int_t offset = config->fOffset;; 2370 Next_t next = loopconfig->fNext;; 2371 ; 2372 char iterator[TVirtualColle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:95229,config,config,95229,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"15#include ""TVirtualPad.h""; 16#include ""TROOT.h""; 17#include <iostream>; 18 ; 19ClassImp(TLegendEntry);; 20 ; 21/** \class TLegendEntry; 22\ingroup BasicGraphics; 23 ; 24Storage class for one entry of a TLegend.; 25*/; 26 ; 27////////////////////////////////////////////////////////////////////////////////; 28/// TLegendEntry do-nothing default constructor; 29 ; 30TLegendEntry::TLegendEntry(): TAttText(), TAttLine(), TAttFill(), TAttMarker(); 31{; 32 fObject = nullptr;; 33}; 34 ; 35////////////////////////////////////////////////////////////////////////////////; 36/// TLegendEntry normal constructor for one entry in a TLegend.; 37///; 38/// obj is the object this entry will represent. If obj has; 39/// line/fill/marker attributes, then the TLegendEntry will display; 40/// these attributes.; 41///; 42/// label is the text that will describe the entry, it is displayed using; 43/// TLatex, so may have a complex format.; 44///; 45/// option may have values; 46/// - L draw line associated w/ TAttLine if obj inherits from TAttLine; 47/// - P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; 48/// - F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; 49/// default is object = ""LPF""; 50 ; 51TLegendEntry::TLegendEntry(const TObject* obj, const char* label, Option_t* option ); 52 :TAttText(0,0,0,0,0), TAttLine(1,1,1), TAttFill(0,0), TAttMarker(1,21,1); 53{; 54 fObject = nullptr;; 55 if ( !label && obj ) fLabel = obj->GetTitle();; 56 else fLabel = label;; 57 fOption = option;; 58 if (obj) SetObject((TObject*)obj);; 59}; 60 ; 61////////////////////////////////////////////////////////////////////////////////; 62/// TLegendEntry copy constructor; 63 ; 64TLegendEntry::TLegendEntry(const TLegendEntry &entry) : TObject(entry), TAttText(entry), TAttLine(entry), TAttFill(entry), TAttMarker(entry); 65{; 66 entry.TLegendEntry::Copy(*this);; 67}; 68 ; 69////////////////////////////////////////////////////////////////////////////////; 70/// TLegendEnt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegendEntry_8cxx_source.html:1709,inherit,inherits,1709,doc/master/TLegendEntry_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegendEntry_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"152 ; 153// set the command line arguments on python's sys.argv; 154#if PY_VERSION_HEX < 0x03000000; 155 char *argv[] = {const_cast<char *>(""root"")};; 156#else; 157 wchar_t *argv[] = {const_cast<wchar_t *>(L""root"")};; 158#endif; 159 int argc = sizeof(argv) / sizeof(argv[0]);; 160#if PY_VERSION_HEX < 0x030b0000; 161 Py_Initialize();; 162#else; 163 PyStatus status;; 164 PyConfig config;; 165 ; 166 PyConfig_InitPythonConfig(&config);; 167 ; 168 status = PyConfig_SetArgv(&config, argc, argv);; 169 if (PyStatus_Exception(status)) {; 170 PyConfig_Clear(&config);; 171 std::cerr << ""Error when setting command line arguments."" << std::endl;; 172 return kFALSE;; 173 }; 174 ; 175 status = Py_InitializeFromConfig(&config);; 176 if (PyStatus_Exception(status)) {; 177 PyConfig_Clear(&config);; 178 std::cerr << ""Error when initializing Python."" << std::endl;; 179 return kFALSE;; 180 }; 181 PyConfig_Clear(&config);; 182#endif; 183#if PY_VERSION_HEX >= 0x03020000; 184#if PY_VERSION_HEX < 0x03090000; 185 PyEval_InitThreads();; 186#endif; 187#endif; 188 ; 189 // try again to see if the interpreter is initialized; 190 if (!Py_IsInitialized()) {; 191 // give up ...; 192 std::cerr << ""Error: python has not been intialized; returning."" << std::endl;; 193 return kFALSE;; 194 }; 195 ; 196#if PY_VERSION_HEX < 0x030b0000; 197 PySys_SetArgv(argc, argv);; 198#endif; 199 ; 200 mainThreadState = PyEval_SaveThread();; 201 }; 202 ; 203 {; 204 // For the Python API calls; 205 PyGILRAII gilRaii;; 206 ; 207 // force loading of the ROOT module; 208 const int ret = PyRun_SimpleString(const_cast<char *>(""import ROOT""));; 209 if (ret != 0) {; 210 std::cerr << ""Error: import ROOT failed, check your PYTHONPATH environmental variable."" << std::endl;; 211 return kFALSE;; 212 }; 213 ; 214 if (!gMainDict) {; 215 ; 216 // retrieve the main dictionary; 217 gMainDict = PyModule_GetDict(PyImport_AddModule(const_cast<char *>(""__main__"")));; 218 // The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:6397,config,config,6397,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['config'],['config']
Modifiability,"153 of file RooDataSet.cxx. ◆ addColumns(). RooArgSet * RooDataSet::addColumns ; (; const RooArgList & ; varList). virtual . Add a column with the values of the given list of (function) argument to this dataset. ; Each function value is calculated for each event using the observable values of the event in case the function depends on variables with names that are identical to the observable names in the dataset ; Definition at line 1171 of file RooDataSet.cxx. ◆ addFast(). void RooDataSet::addFast ; (; const RooArgSet & ; data, . double ; wgt = 1.0, . double ; wgtError = 0.0 . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; AttentionThe order and type of the input variables are assumed to be the same as for the RooArgSet returned by RooDataSet::get(). Input values will just be written into the internal data columns by ordinal position. ; Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 1037 of file RooDataSet.cxx. ◆ append(). void RooDataSet::append ; (; RooDataSet & ; data). Add all data points of given data set to this data set. ; Observable in 'data' that are not in this dataset with not be transferred ; Definition at line 1138 of file RooDataSet.cxx. ◆ binnedClone(). RooFit::OwningPtr< RooDataHist > RooDataSet::binnedClone ; (; const char * ; newName = nullptr, . const char * ; newTitle = nullptr . ); const. Return binned clone of this dataset. ; Definition at line 736 of file RooDataSet.cxx. ◆ Class(). static TClass * RooDataSet::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooDataSet::Class_Name ; (; ). static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:45427,variab,variable,45427,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variable']
Modifiability,"15{; 10216 mg_send_mime_file2(conn, path, mime_type, NULL);; 10217}; 10218 ; 10219 ; 10220void; 10221mg_send_mime_file2(struct mg_connection *conn,; 10222 const char *path,; 10223 const char *mime_type,; 10224 const char *additional_headers); 10225{; 10226 struct mg_file file = STRUCT_FILE_INITIALIZER;; 10227 ; 10228 if (!conn) {; 10229 /* No conn */; 10230 return;; 10231 }; 10232 ; 10233 if (mg_stat(conn, path, &file.stat)) {; 10234#if !defined(NO_CACHING); 10235 if (is_not_modified(conn, &file.stat)) {; 10236 /* Send 304 ""Not Modified"" - this must not send any body data */; 10237 handle_not_modified_static_file_request(conn, &file);; 10238 } else; 10239#endif /* NO_CACHING */; 10240 if (file.stat.is_directory) {; 10241 if (!mg_strcasecmp(conn->dom_ctx->config[ENABLE_DIRECTORY_LISTING],; 10242 ""yes"")) {; 10243 handle_directory_request(conn, path);; 10244 } else {; 10245 mg_send_http_error(conn,; 10246 403,; 10247 ""%s"",; 10248 ""Error: Directory listing denied"");; 10249 }; 10250 } else {; 10251 handle_static_file_request(; 10252 conn, path, &file, mime_type, additional_headers);; 10253 }; 10254 } else {; 10255 mg_send_http_error(conn, 404, ""%s"", ""Error: File not found"");; 10256 }; 10257}; 10258 ; 10259 ; 10260/* For a given PUT path, create all intermediate subdirectories.; 10261 * Return 0 if the path itself is a directory.; 10262 * Return 1 if the path leads to a file.; 10263 * Return -1 for if the path is too long.; 10264 * Return -2 if path can not be created.; 10265 */; 10266static int; 10267put_dir(struct mg_connection *conn, const char *path); 10268{; 10269 char buf[UTF8_PATH_MAX];; 10270 const char *s, *p;; 10271 struct mg_file file = STRUCT_FILE_INITIALIZER;; 10272 size_t len;; 10273 int res = 1;; 10274 ; 10275 for (s = p = path + 2; (p = strchr(s, '/')) != NULL; s = ++p) {; 10276 len = (size_t)(p - path);; 10277 if (len >= sizeof(buf)) {; 10278 /* path too long */; 10279 res = -1;; 10280 break;; 10281 }; 10282 memcpy(buf, path, len);; 10283 buf[len] = '\0';",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:294595,config,config,294595,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"1626 printf("" Kolmo Probabil = %f for shape alone, =%f for normalisation alone\n"",prb1,prb2);; 1627 }; 1628 // This numerical error condition should never occur:; 1629 if (TMath::Abs(rsum1-1) > 0.002) Warning(""KolmogorovTest"",""Numerical problems with h1=%s\n"",h1->GetName());; 1630 if (TMath::Abs(rsum2-1) > 0.002) Warning(""KolmogorovTest"",""Numerical problems with h2=%s\n"",h2->GetName());; 1631 ; 1632 if(opt.Contains(""M"")) return dfmax; // return average of max distance; 1633 ; 1634 return prb;; 1635}; 1636 ; 1637 ; 1638////////////////////////////////////////////////////////////////////////////////; 1639/// Rebin only the X axis; 1640/// see Rebin2D; 1641 ; 1642TH2 *TH2::RebinX(Int_t ngroup, const char *newname); 1643{; 1644 return Rebin2D(ngroup, 1, newname);; 1645}; 1646 ; 1647 ; 1648////////////////////////////////////////////////////////////////////////////////; 1649/// Rebin only the Y axis; 1650/// see Rebin2D; 1651 ; 1652TH2 *TH2::RebinY(Int_t ngroup, const char *newname); 1653{; 1654 return Rebin2D(1, ngroup, newname);; 1655}; 1656 ; 1657////////////////////////////////////////////////////////////////////////////////; 1658/// Override TH1::Rebin as TH2::RebinX; 1659/// Rebinning in variable binning as for TH1 is not allowed; 1660/// If a non-null pointer is given an error is flagged; 1661/// see RebinX and Rebin2D; 1662 ; 1663TH2 * TH2::Rebin( Int_t ngroup, const char*newname, const Double_t *xbins); 1664{; 1665 if (xbins != nullptr) {; 1666 Error(""Rebin"",""Rebinning a 2-d histogram into variable bins is not supported (it is possible only for 1-d histograms). Return a nullptr"");; 1667 return nullptr;; 1668 }; 1669 Info(""Rebin"",""Rebinning only the x-axis. Use Rebin2D for rebinning both axes"");; 1670 return RebinX(ngroup, newname);; 1671}; 1672////////////////////////////////////////////////////////////////////////////////; 1673/// Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together.; 1674///; 1675/// if newname is not blank a new te",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:66292,variab,variable,66292,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,2,['variab'],['variable']
Modifiability,"16967 ; 16968 /* http://msdn.microsoft.com/en-us/library/ms739165(v=vs.85).aspx:; 16969 * ""Note that enabling a nonzero timeout on a nonblocking socket; 16970 * is not recommended."", so set it to blocking now */; 16971 set_blocking_mode(conn->client.sock);; 16972 ; 16973 /* Send FIN to the client */; 16974 shutdown(conn->client.sock, SHUTDOWN_WR);; 16975 ; 16976 ; 16977#if defined(_WIN32); 16978 /* Read and discard pending incoming data. If we do not do that and; 16979 * close; 16980 * the socket, the data in the send buffer may be discarded. This; 16981 * behaviour is seen on Windows, when client keeps sending data; 16982 * when server decides to close the connection; then when client; 16983 * does recv() it gets no data back. */; 16984 do {; 16985 n = pull_inner(NULL, conn, buf, sizeof(buf), /* Timeout in s: */ 1.0);; 16986 } while (n > 0);; 16987#endif; 16988 ; 16989 if (conn->dom_ctx->config[LINGER_TIMEOUT]) {; 16990 linger_timeout = atoi(conn->dom_ctx->config[LINGER_TIMEOUT]);; 16991 }; 16992 ; 16993 /* Set linger option according to configuration */; 16994 if (linger_timeout >= 0) {; 16995 /* Set linger option to avoid socket hanging out after close. This; 16996 * prevent ephemeral port exhaust problem under high QPS. */; 16997 linger.l_onoff = 1;; 16998 ; 16999#if defined(_MSC_VER); 17000#pragma warning(push); 17001#pragma warning(disable : 4244); 17002#endif; 17003#if defined(GCC_DIAGNOSTIC); 17004#pragma GCC diagnostic push; 17005#pragma GCC diagnostic ignored ""-Wconversion""; 17006#endif; 17007 /* Data type of linger structure elements may differ,; 17008 * so we don't know what cast we need here.; 17009 * Disable type conversion warnings. */; 17010 ; 17011 linger.l_linger = (linger_timeout + 999) / 1000;; 17012 ; 17013#if defined(GCC_DIAGNOSTIC); 17014#pragma GCC diagnostic pop; 17015#endif; 17016#if defined(_MSC_VER); 17017#pragma warning(pop); 17018#endif; 17019 ; 17020 } else {; 17021 linger.l_onoff = 0;; 17022 linger.l_linger = 0;; 17023 }; 17024 ; 17025",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:504442,config,config,504442,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,3,['config'],"['config', 'configuration']"
Modifiability,"16968 ; 16969 /* http://msdn.microsoft.com/en-us/library/ms739165(v=vs.85).aspx:; 16970 * ""Note that enabling a nonzero timeout on a nonblocking socket; 16971 * is not recommended."", so set it to blocking now */; 16972 set_blocking_mode(conn->client.sock);; 16973 ; 16974 /* Send FIN to the client */; 16975 shutdown(conn->client.sock, SHUTDOWN_WR);; 16976 ; 16977 ; 16978#if defined(_WIN32); 16979 /* Read and discard pending incoming data. If we do not do that and; 16980 * close; 16981 * the socket, the data in the send buffer may be discarded. This; 16982 * behaviour is seen on Windows, when client keeps sending data; 16983 * when server decides to close the connection; then when client; 16984 * does recv() it gets no data back. */; 16985 do {; 16986 n = pull_inner(NULL, conn, buf, sizeof(buf), /* Timeout in s: */ 1.0);; 16987 } while (n > 0);; 16988#endif; 16989 ; 16990 if (conn->dom_ctx->config[LINGER_TIMEOUT]) {; 16991 linger_timeout = atoi(conn->dom_ctx->config[LINGER_TIMEOUT]);; 16992 }; 16993 ; 16994 /* Set linger option according to configuration */; 16995 if (linger_timeout >= 0) {; 16996 /* Set linger option to avoid socket hanging out after close. This; 16997 * prevent ephemeral port exhaust problem under high QPS. */; 16998 linger.l_onoff = 1;; 16999 ; 17000#if defined(_MSC_VER); 17001#pragma warning(push); 17002#pragma warning(disable : 4244); 17003#endif; 17004#if defined(GCC_DIAGNOSTIC); 17005#pragma GCC diagnostic push; 17006#pragma GCC diagnostic ignored ""-Wconversion""; 17007#endif; 17008 /* Data type of linger structure elements may differ,; 17009 * so we don't know what cast we need here.; 17010 * Disable type conversion warnings. */; 17011 ; 17012 linger.l_linger = (linger_timeout + 999) / 1000;; 17013 ; 17014#if defined(GCC_DIAGNOSTIC); 17015#pragma GCC diagnostic pop; 17016#endif; 17017#if defined(_MSC_VER); 17018#pragma warning(pop); 17019#endif; 17020 ; 17021 } else {; 17022 linger.l_onoff = 0;; 17023 linger.l_linger = 0;; 17024 }; 17025 ; 17026",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:504475,config,config,504475,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,3,['config'],"['config', 'configuration']"
Modifiability,"16{; 10217 mg_send_mime_file2(conn, path, mime_type, NULL);; 10218}; 10219 ; 10220 ; 10221void; 10222mg_send_mime_file2(struct mg_connection *conn,; 10223 const char *path,; 10224 const char *mime_type,; 10225 const char *additional_headers); 10226{; 10227 struct mg_file file = STRUCT_FILE_INITIALIZER;; 10228 ; 10229 if (!conn) {; 10230 /* No conn */; 10231 return;; 10232 }; 10233 ; 10234 if (mg_stat(conn, path, &file.stat)) {; 10235#if !defined(NO_CACHING); 10236 if (is_not_modified(conn, &file.stat)) {; 10237 /* Send 304 ""Not Modified"" - this must not send any body data */; 10238 handle_not_modified_static_file_request(conn, &file);; 10239 } else; 10240#endif /* NO_CACHING */; 10241 if (file.stat.is_directory) {; 10242 if (!mg_strcasecmp(conn->dom_ctx->config[ENABLE_DIRECTORY_LISTING],; 10243 ""yes"")) {; 10244 handle_directory_request(conn, path);; 10245 } else {; 10246 mg_send_http_error(conn,; 10247 403,; 10248 ""%s"",; 10249 ""Error: Directory listing denied"");; 10250 }; 10251 } else {; 10252 handle_static_file_request(; 10253 conn, path, &file, mime_type, additional_headers);; 10254 }; 10255 } else {; 10256 mg_send_http_error(conn, 404, ""%s"", ""Error: File not found"");; 10257 }; 10258}; 10259 ; 10260 ; 10261/* For a given PUT path, create all intermediate subdirectories.; 10262 * Return 0 if the path itself is a directory.; 10263 * Return 1 if the path leads to a file.; 10264 * Return -1 for if the path is too long.; 10265 * Return -2 if path can not be created.; 10266 */; 10267static int; 10268put_dir(struct mg_connection *conn, const char *path); 10269{; 10270 char buf[UTF8_PATH_MAX];; 10271 const char *s, *p;; 10272 struct mg_file file = STRUCT_FILE_INITIALIZER;; 10273 size_t len;; 10274 int res = 1;; 10275 ; 10276 for (s = p = path + 2; (p = strchr(s, '/')) != NULL; s = ++p) {; 10277 len = (size_t)(p - path);; 10278 if (len >= sizeof(buf)) {; 10279 /* path too long */; 10280 res = -1;; 10281 break;; 10282 }; 10283 memcpy(buf, path, len);; 10284 buf[len] = '\0';",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:294628,config,config,294628,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TArrayL64; Long64_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger) or previous (smaller) a given x. ;  ; static bool CheckAxisLimits (const TAxis *a1, const TAxis *a2);  Check that the axis limits of the histograms are the same. ;  ; static bool CheckBinLabels (const TAxis *a1, const TAxis *a2);  Check that axis have same labels. ;  ; static bool CheckBinLimits (const TAxis *a1, const TAxis *a2);  Check bin limits. ;  ; static int CheckConsistency (const TH1 *h1, const TH1 *h2);  Check histogram compatibility. ;  ; static bool CheckConsistentSubAxes (const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0);  Check that two sub axis are the same. ;  ; static bool CheckEqualAxes (const TAxis *a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1L.html:47490,inherit,inherited,47490,doc/master/classTH1L.html,https://root.cern,https://root.cern/doc/master/classTH1L.html,8,['inherit'],['inherited']
Modifiability,"17 TListIter trClsIt(trClsList);; 118 if (trClsList->GetSize() < 1); 119 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Incorrect transformation string provided."" << Endl;; 120 const TString& trName = ((TObjString*)trClsList->At(0))->GetString();; 121 ; 122 if (trClsList->GetEntries() > 1) {; 123 TString trCls = ""AllClasses"";; 124 ClassInfo *ci = NULL;; 125 trCls = ((TObjString*)trClsList->At(1))->GetString();; 126 if (trCls != ""AllClasses"") {; 127 ci = dataInfo.GetClassInfo( trCls );; 128 if (ci == NULL); 129 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Class "" << trCls << "" not known for variable transformation ""; 130 << trName << "", please check."" << Endl;; 131 else; 132 idxCls = ci->GetNumber();; 133 }; 134 }; 135 ; 136 VariableTransformBase* transformation = NULL;; 137 if (trName == ""I"" || trName == ""Ident"" || trName == ""Identity"") {; 138 if (variables.Length() == 0) variables = ""_V_"";; 139 transformation = new VariableIdentityTransform(dataInfo);; 140 }; 141 else if (trName == ""D"" || trName == ""Deco"" || trName == ""Decorrelate"") {; 142 if (variables.Length() == 0) variables = ""_V_"";; 143 transformation = new VariableDecorrTransform(dataInfo);; 144 }; 145 else if (trName == ""P"" || trName == ""PCA"") {; 146 if (variables.Length() == 0) variables = ""_V_"";; 147 transformation = new VariablePCATransform(dataInfo);; 148 }; 149 else if (trName == ""U"" || trName == ""Uniform"") {; 150 if (variables.Length() == 0) variables = ""_V_,_T_"";; 151 transformation = new VariableGaussTransform(dataInfo, ""Uniform"" );; 152 }; 153 else if (trName == ""G"" || trName == ""Gauss"") {; 154 if (variables.Length() == 0) variables = ""_V_"";; 155 transformation = new VariableGaussTransform(dataInfo);; 156 }; 157 else if (trName == ""N"" || trName == ""Norm"" || trName == ""Normalise"" || trName == ""Normalize"") {; 158 if (variables.Length() == 0) variables = ""_V_,_T_"";; 159 transformation = new VariableNormalizeTransform(dataInfo);; 160 }; 161 else; 162 log << kFATAL << Form(""D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:5653,variab,variables,5653,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,2,['variab'],['variables']
Modifiability,"17 of file TClass.h. ◆ IsFolder() [2/2]. Bool_t TClass::IsFolder ; (; void * ; obj); const. Return kTRUE if the class has elements. ; Definition at line 4135 of file TClass.cxx. ◆ IsForeign(). Bool_t TClass::IsForeign ; (; ); const. Return kTRUE is the class is Foreign (the class does not have a Streamer method). ; Definition at line 5947 of file TClass.cxx. ◆ IsLoaded(). Bool_t TClass::IsLoaded ; (; ); const. Return true if the shared library of this class is currently in the a process's memory. ; Return false, after the shared library has been unloaded or if this is an 'emulated' class created from a file's StreamerInfo. ; Definition at line 5912 of file TClass.cxx. ◆ IsStartingWithTObject(). Bool_t TClass::IsStartingWithTObject ; (; ); const. Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ; Concretely this means that the following code is proper for this class: ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from TObject. ; Definition at line 5929 of file TClass.cxx. ◆ IsSyntheticPair(). Bool_t TClass::IsSyntheticPair ; (; ); const. inline . Definition at line 521 of file TClass.h. ◆ IsTObject(). Bool_t TClass::IsTObject ; (; ); const. Return kTRUE is the class inherits from TObject. ; Definition at line 5938 of file TClass.cxx. ◆ IsVersioned(). Bool_t TClass::IsVersioned ; (; ); const. inline . Definition at line 522 of file TClass.h. ◆ Load(). TClass * TClass::Load ; (; TBuffer & ; b). static . Load class description from I/O buffer and return class object. ; Definition at line 5715 of file TClass.cxx. ◆ LoadClass(). TClass * TClass::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent . ). static . Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:100932,inherit,inherit,100932,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inherit']
Modifiability,"17 of file TClass.h. ◆ IsFolder() [2/2]. Bool_t TClass::IsFolder ; (; void * ; obj); const. Return kTRUE if the class has elements. ; Definition at line 4202 of file TClass.cxx. ◆ IsForeign(). Bool_t TClass::IsForeign ; (; ); const. Return kTRUE is the class is Foreign (the class does not have a Streamer method). ; Definition at line 6014 of file TClass.cxx. ◆ IsLoaded(). Bool_t TClass::IsLoaded ; (; ); const. Return true if the shared library of this class is currently in the a process's memory. ; Return false, after the shared library has been unloaded or if this is an 'emulated' class created from a file's StreamerInfo. ; Definition at line 5979 of file TClass.cxx. ◆ IsStartingWithTObject(). Bool_t TClass::IsStartingWithTObject ; (; ); const. Returns true if this class inherits from TObject and if the start of the TObject parts is at the very beginning of the objects. ; Concretely this means that the following code is proper for this class: ThisClass *ptr;; void *void_ptr = (void)ptr;; TObject *obj = (TObject*)void_ptr;; This code would be wrong if 'ThisClass' did not inherit 'first' from TObject. ; Definition at line 5996 of file TClass.cxx. ◆ IsSyntheticPair(). Bool_t TClass::IsSyntheticPair ; (; ); const. inline . Definition at line 521 of file TClass.h. ◆ IsTObject(). Bool_t TClass::IsTObject ; (; ); const. Return kTRUE is the class inherits from TObject. ; Definition at line 6005 of file TClass.cxx. ◆ IsVersioned(). Bool_t TClass::IsVersioned ; (; ); const. inline . Definition at line 522 of file TClass.h. ◆ Load(). TClass * TClass::Load ; (; TBuffer & ; b). static . Load class description from I/O buffer and return class object. ; Definition at line 5782 of file TClass.cxx. ◆ LoadClass(). TClass * TClass::LoadClass ; (; const char * ; requestedname, . Bool_t ; silent . ). static . Helper function used by TClass::GetClass(). ; This function attempts to load the dictionary for 'classname' either from the TClassTable or from the list of generator. If silent is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:100933,inherit,inherit,100933,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inherit']
Modifiability,175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test er,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:109423,config,configuration,109423,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.7864,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:105503,config,configuration,105503,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.2917,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:108079,config,configuration,108079,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:99155,config,configuration,99155,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:102297,config,configuration,102297,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"1763 TMatrixD varmvaMatB(nvar, nmeth);; 1764 for (Int_t iv = 0; iv < nvar; iv++) {; 1765 theInputVars.push_back(method->fDataSetInfo.GetVariableInfo(iv).GetLabel());; 1766 for (Int_t jm = 0; jm < nmeth; jm++) {; 1767 varmvaMatS(iv, jm) = (*corrMatS)(nmeth + iv, jm);; 1768 varmvaMatB(iv, jm) = (*corrMatB)(nmeth + iv, jm);; 1769 }; 1770 }; 1771 ; 1772 if (nmeth > 1) {; 1773 Log() << kINFO << Endl;; 1774 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1775 << ""Inter-MVA correlation matrix (signal):"" << Endl;; 1776 gTools().FormattedOutput(mvaMatS, *theVars, Log());; 1777 Log() << kINFO << Endl;; 1778 ; 1779 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1780 << ""Inter-MVA correlation matrix (background):"" << Endl;; 1781 gTools().FormattedOutput(mvaMatB, *theVars, Log());; 1782 Log() << kINFO << Endl;; 1783 }; 1784 ; 1785 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1786 << ""Correlations between input variables and MVA response (signal):"" << Endl;; 1787 gTools().FormattedOutput(varmvaMatS, theInputVars, *theVars, Log());; 1788 Log() << kINFO << Endl;; 1789 ; 1790 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1791 << ""Correlations between input variables and MVA response (background):"" << Endl;; 1792 gTools().FormattedOutput(varmvaMatB, theInputVars, *theVars, Log());; 1793 Log() << kINFO << Endl;; 1794 } else; 1795 Log() << kWARNING << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1796 << ""<TestAllMethods> cannot compute correlation matrices"" << Endl;; 1797 ; 1798 // print overlap matrices; 1799 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1800 << ""The following \""overlap\"" matrices contain the fraction of events for which "" << Endl;; 1801 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1802 << ""the MVAs 'i' and 'j' have returned conform answers about \""signal-likeness\"""" << Endl;; 1803 Log() << kI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:73679,variab,variables,73679,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variables']
Modifiability,17637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91038,config,configuration,91038,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:106231,config,configuration,106231,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"18 ""FCN value "",; 6919 ""PARameters"",; 6920 ""LIMits "",; 6921 ""COVariance"",; 6922 ""CORrelatio"",; 6923 ""PRInt levl"",; 6924 ""NOGradient"",; 6925 ""GRAdient "",; 6926 ""ERRor def "",; 6927 ""INPut file"",; 6928 ""WIDth page"",; 6929 ""LINes page"",; 6930 ""NOWarnings"",; 6931 ""WARnings "",; 6932 ""RANdom gen"",; 6933 ""TITle "",; 6934 ""STRategy "",; 6935 ""EIGenvalue"",; 6936 ""PAGe throw"",; 6937 ""MINos errs"",; 6938 ""EPSmachine"",; 6939 ""OUTputfile"",; 6940 ""BATch "",; 6941 ""INTeractiv"",; 6942 ""VERsion "",; 6943 ""reserve "",; 6944 ""NODebug "",; 6945 ""DEBug "",; 6946 ""SHOw "",; 6947 ""SET ""};; 6948 ; 6949 static constexpr Int_t nname = 25; // Must less than sizeof(cname)/sizeof(char*); 6950 static constexpr Int_t nntot = sizeof(cname)/sizeof(char*);; 6951 static const TString cprlev[5] = {; 6952 ""-1: NO OUTPUT EXCEPT FROM SHOW "",; 6953 "" 0: REDUCED OUTPUT "",; 6954 "" 1: NORMAL OUTPUT "",; 6955 "" 2: EXTRA OUTPUT FOR PROBLEM CASES"",; 6956 "" 3: MAXIMUM OUTPUT ""};; 6957 ; 6958 static const TString cstrat[3] = {; 6959 "" 0: MINIMIZE THE NUMBER OF CALLS TO FUNCTION"",; 6960 "" 1: TRY TO BALANCE SPEED AGAINST RELIABILITY"",; 6961 "" 2: MAKE SURE MINIMUM TRUE, ERRORS CORRECT ""};; 6962 ; 6963 static const TString cdbopt[7] = {; 6964 ""REPORT ALL EXCEPTIONAL CONDITIONS "",; 6965 ""MNLINE: LINE SEARCH MINIMIZATION "",; 6966 ""MNDERI: FIRST DERIVATIVE CALCULATIONS "",; 6967 ""MNHESS: SECOND DERIVATIVE CALCULATIONS "",; 6968 ""MNMIGR: COVARIANCE MATRIX UPDATES "",; 6969 ""MNHES1: FIRST DERIVATIVE UNCERTAINTIES "",; 6970 ""MNCONT: MNCONTOUR PLOT (MNCROS SEARCH) ""};; 6971 ; 6972 /* System generated locals */; 6973 //Int_t f_inqu();; 6974 ; 6975 /* Local variables */; 6976 Double_t val;; 6977 Int_t iset, iprm, i, jseed, kname, iseed, iunit, id, ii, kk;; 6978 Int_t ikseed, idbopt, igrain=0, iswsav, isw2;; 6979 TString cfname, cmode, ckind, cwarn, copt, ctemp, ctemp2;; 6980 Bool_t lname=kFALSE;; 6981 ; 6982 for (i = 1; i <= nntot; ++i) {; 6983 ctemp = cname[i-1];; 6984 ckind = ctemp(0,3);; 6985 ctemp2 = fCword(4,6);; 6986 if (strstr(ctemp2.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:225892,variab,variables,225892,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"18#if defined(__STDC_VERSION__) && __STDC_VERSION__ > 201100L; 119#define mg_static_assert _Static_assert; 120#elif defined(__cplusplus) && __cplusplus >= 201103L; 121#define mg_static_assert static_assert; 122#else; 123char static_assert_replacement[1];; 124#define mg_static_assert(cond, txt) \; 125 extern char static_assert_replacement[(cond) ? 1 : -1]; 126#endif; 127 ; 128mg_static_assert(sizeof(int) == 4 || sizeof(int) == 8,; 129 ""int data type size check"");; 130mg_static_assert(sizeof(void *) == 4 || sizeof(void *) == 8,; 131 ""pointer data type size check"");; 132mg_static_assert(sizeof(void *) >= sizeof(int), ""data type size check"");; 133 ; 134 ; 135/* Select queue implementation. Diagnosis features originally only implemented; 136 * for the ""ALTERNATIVE_QUEUE"" have been ported to the previous queue; 137 * implementation (NO_ALTERNATIVE_QUEUE) as well. The new configuration value; 138 * ""CONNECTION_QUEUE_SIZE"" is only available for the previous queue; 139 * implementation, since the queue length is independent from the number of; 140 * worker threads there, while the new queue is one element per worker thread.; 141 *; 142 */; 143#if defined(NO_ALTERNATIVE_QUEUE) && defined(ALTERNATIVE_QUEUE); 144/* The queues are exclusive or - only one can be used. */; 145#error \; 146 ""Define ALTERNATIVE_QUEUE or NO_ALTERNATIVE_QUEUE (or none of them), but not both""; 147#endif; 148#if !defined(NO_ALTERNATIVE_QUEUE) && !defined(ALTERNATIVE_QUEUE); 149/* Use a default implementation */; 150#define NO_ALTERNATIVE_QUEUE; 151#endif; 152 ; 153#if defined(NO_FILESYSTEMS) && !defined(NO_FILES); 154/* File system access:; 155 * NO_FILES = do not serve any files from the file system automatically.; 156 * However, with NO_FILES CivetWeb may still write log files, read access; 157 * control files, default error page files or use API functions like; 158 * mg_send_file in callbacks to send files from the server local; 159 * file system.; 160 * NO_FILES only disables the automatic mapping be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:5691,config,configuration,5691,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['configuration']
Modifiability,181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96677,config,configuration,96677,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90699,config,configuration,90699,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"187 MATH_ERROR_MSG(""Minimizer::Hesse"", ""Hesse not implemented"");; 188 return false;; 189}; 190 ; 191/**; 192 scan function minimum for variable i. Variable and function must be set before using Scan; 193 Return false if an error or if minimizer does not support this functionality; 194 */; 195bool Minimizer::Scan(unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin, double xmax); 196{; 197 MATH_ERROR_MSG(""Minimizer::Scan"", ""Scan not implemented"");; 198 MATH_UNUSED(ivar);; 199 MATH_UNUSED(nstep);; 200 MATH_UNUSED(x);; 201 MATH_UNUSED(y);; 202 MATH_UNUSED(xmin);; 203 MATH_UNUSED(xmax);; 204 return false;; 205}; 206 ; 207/**; 208 find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum; 209 The contour will be find for value of the function = Min + ErrorUp();; 210 */; 211bool Minimizer::Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj); 212{; 213 MATH_ERROR_MSG(""Minimizer::Contour"", ""Contour not implemented"");; 214 MATH_UNUSED(ivar);; 215 MATH_UNUSED(jvar);; 216 MATH_UNUSED(npoints);; 217 MATH_UNUSED(xi);; 218 MATH_UNUSED(xj);; 219 return false;; 220}; 221 ; 222/// get name of variables (override if minimizer support storing of variable names); 223/// return an empty string if variable is not found; 224std::string Minimizer::VariableName(unsigned int ivar) const; 225{; 226 MATH_UNUSED(ivar);; 227 return std::string(); // return empty string; 228}; 229 ; 230/// get index of variable given a variable given a name; 231/// return -1 if variable is not found; 232int Minimizer::VariableIndex(const std::string &name) const; 233{; 234 MATH_ERROR_MSG(""Minimizer::VariableIndex"", ""Getting variable index from name not implemented"");; 235 MATH_UNUSED(name);; 236 return -1;; 237}; 238 ; 239} // namespace Math; 240} // namespace ROOT; Error.h; MATH_ERROR_MSG#define MATH_ERROR_MSG(loc, str)Definition Error.h:83; MATH_WARN_MSG#define MATH_WARN_MSG(loc, str)Definition Error.h:80; Minimiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:7876,variab,variables,7876,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,7,['variab'],"['variable', 'variables']"
Modifiability,"1898 file_name[511] = 0;; 11899 (void)mg_snprintf(conn, &truncated, path, sizeof(path), ""%s"", ssi);; 11900 ; 11901 if (!truncated) {; 11902 if ((p = strrchr(path, '/')) != NULL) {; 11903 p[1] = '\0';; 11904 }; 11905 len = strlen(path);; 11906 (void)mg_snprintf(conn,; 11907 &truncated,; 11908 path + len,; 11909 sizeof(path) - len,; 11910 ""%s"",; 11911 file_name);; 11912 }; 11913 ; 11914 } else {; 11915 mg_cry_internal(conn, ""Bad SSI #include: [%s]"", tag);; 11916 return;; 11917 }; 11918 ; 11919 if (truncated) {; 11920 mg_cry_internal(conn, ""SSI #include path length overflow: [%s]"", tag);; 11921 return;; 11922 }; 11923 ; 11924 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, &file)) {; 11925 mg_cry_internal(conn,; 11926 ""Cannot open SSI #include: [%s]: fopen(%s): %s"",; 11927 tag,; 11928 path,; 11929 strerror(ERRNO));; 11930 } else {; 11931 fclose_on_exec(&file.access, conn);; 11932 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path); 11933 > 0) {; 11934 send_ssi_file(conn, path, &file, include_level + 1);; 11935 } else {; 11936 send_file_data(conn, &file, 0, INT64_MAX);; 11937 }; 11938 (void)mg_fclose(&file.access); /* Ignore errors for readonly files */; 11939 }; 11940}; 11941 ; 11942 ; 11943#if !defined(NO_POPEN); 11944static void; 11945do_ssi_exec(struct mg_connection *conn, char *tag); 11946{; 11947 char cmd[1024] = """";; 11948 struct mg_file file = STRUCT_FILE_INITIALIZER;; 11949 ; 11950 if (sscanf(tag, "" \""%1023[^\""]\"""", cmd) != 1) {; 11951 mg_cry_internal(conn, ""Bad SSI #exec: [%s]"", tag);; 11952 } else {; 11953 cmd[1023] = 0;; 11954 if ((file.access.fp = popen(cmd, ""r"")) == NULL) {; 11955 mg_cry_internal(conn,; 11956 ""Cannot SSI #exec: [%s]: %s"",; 11957 cmd,; 11958 strerror(ERRNO));; 11959 } else {; 11960 send_file_data(conn, &file, 0, INT64_MAX);; 11961 pclose(file.access.fp);; 11962 }; 11963 }; 11964}; 11965#endif /* !NO_POPEN */; 11966 ; 11967 ; 11968static int; 11969mg_fgetc(struct mg_file *filep); 11970{; 11971 if (filep == NULL) {; 11972 return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:345594,config,config,345594,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"1899 file_name[511] = 0;; 11900 (void)mg_snprintf(conn, &truncated, path, sizeof(path), ""%s"", ssi);; 11901 ; 11902 if (!truncated) {; 11903 if ((p = strrchr(path, '/')) != NULL) {; 11904 p[1] = '\0';; 11905 }; 11906 len = strlen(path);; 11907 (void)mg_snprintf(conn,; 11908 &truncated,; 11909 path + len,; 11910 sizeof(path) - len,; 11911 ""%s"",; 11912 file_name);; 11913 }; 11914 ; 11915 } else {; 11916 mg_cry_internal(conn, ""Bad SSI #include: [%s]"", tag);; 11917 return;; 11918 }; 11919 ; 11920 if (truncated) {; 11921 mg_cry_internal(conn, ""SSI #include path length overflow: [%s]"", tag);; 11922 return;; 11923 }; 11924 ; 11925 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, &file)) {; 11926 mg_cry_internal(conn,; 11927 ""Cannot open SSI #include: [%s]: fopen(%s): %s"",; 11928 tag,; 11929 path,; 11930 strerror(ERRNO));; 11931 } else {; 11932 fclose_on_exec(&file.access, conn);; 11933 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path); 11934 > 0) {; 11935 send_ssi_file(conn, path, &file, include_level + 1);; 11936 } else {; 11937 send_file_data(conn, &file, 0, INT64_MAX);; 11938 }; 11939 (void)mg_fclose(&file.access); /* Ignore errors for readonly files */; 11940 }; 11941}; 11942 ; 11943 ; 11944#if !defined(NO_POPEN); 11945static void; 11946do_ssi_exec(struct mg_connection *conn, char *tag); 11947{; 11948 char cmd[1024] = """";; 11949 struct mg_file file = STRUCT_FILE_INITIALIZER;; 11950 ; 11951 if (sscanf(tag, "" \""%1023[^\""]\"""", cmd) != 1) {; 11952 mg_cry_internal(conn, ""Bad SSI #exec: [%s]"", tag);; 11953 } else {; 11954 cmd[1023] = 0;; 11955 if ((file.access.fp = popen(cmd, ""r"")) == NULL) {; 11956 mg_cry_internal(conn,; 11957 ""Cannot SSI #exec: [%s]: %s"",; 11958 cmd,; 11959 strerror(ERRNO));; 11960 } else {; 11961 send_file_data(conn, &file, 0, INT64_MAX);; 11962 pclose(file.access.fp);; 11963 }; 11964 }; 11965}; 11966#endif /* !NO_POPEN */; 11967 ; 11968 ; 11969static int; 11970mg_fgetc(struct mg_file *filep); 11971{; 11972 if (filep == NULL) {; 11973 return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:345627,config,config,345627,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"19 ; 120 Already predefined names can be given. For example, if the formula; 121 ; 122 `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`; 123 ; 124 one can assign a name to the formula. By default the name of the object = title = formula itself.; 125 ; 126 `TFormula new(""new"",""x*old"")`; 127 ; 128 is equivalent to:; 129 ; 130 `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`; 131 ; 132 The class supports unlimited number of variables and parameters.; 133 By default the names which can be used for the variables are `x,y,z,t` or; 134 `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas.; 135 ; 136 This class is not anymore the base class for the function classes `TF1`, but it has now; 137 a data member of TF1 which can be accessed via `TF1::GetFormula`.; 138 ; 139 TFormula supports gradient and hessian calculations through clad.; 140 To calculate the gradient one needs to first declare a `CladStorage` of the; 141 same size as the number of parameters and then pass the variables and the; 142 created `CladStorage`:; 143 ; 144 ```; 145 TFormula f(""f"", ""x*[0] - y*[1]"");; 146 Double_t p[] = {40, 30};; 147 Double_t x[] = {1, 2};; 148 f.SetParameters(p);; 149 TFormula::CladStorage grad(2);; 150 f.GradientPar(x, grad);; 151 ```; 152 ; 153 The process is similar for hessians, except that the size of the created; 154 CladStorage should be the square of the number of parameters because; 155 `HessianPar` returns a flattened matrix:; 156 ; 157 ```; 158 TFormula::CladStorage hess(4);; 159 f.HessianPar(x, hess);; 160 ```; 161 ; 162 \anchor FormulaFuncs; 163 ### List of predefined functions; 164 ; 165 The list of available predefined functions which can be used as shortcuts is the following:; 166 1. One Dimensional functions:; 167 - `gaus` is a substitute for `[Constant]*exp(-0.5*((x-[Mean])/[Sigma])*((x-[Mean])/[Sigma]))`; 168 - `landau` is a substitute for `[Constant]*TMath::Landau (x,[MPV],[Sigma],false)`; 169 - `expo` is a substitute for `exp([Constant]+[Slope]*x)`; 170 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:5141,variab,variables,5141,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"19 ; 220 Double_t old_xmin = 0.0, old_xmax = 0.0;; 221 k = 0; // index of term in funcstringall; 222 for (int i=0; i<noffunctions; i++); 223 {; 224 // first, handle coefficient; 225 if (isacoeff[k]) {; 226 coeffs[i] = funcstringall[k].Atof();; 227 k++;; 228 } else {; 229 coeffs[i] = 1.;; 230 }; 231 ; 232 // then, handle function; 233 functions[i] = (TF1 *)(gROOT->GetListOfFunctions()->FindObject(funcstringall[k]));; 234 if (!functions[i]); 235 Error(""TF1NormSum"", ""Function %s does not exist"", funcstringall[k].Data());; 236 // (set range for first function, which determines range of whole TF1NormSum); 237 else if (i == 0) {; 238 functions[i]->GetRange(old_xmin, old_xmax);; 239 functions[i]->SetRange(xmin, xmax);; 240 }; 241 ; 242 k++;; 243 }; 244 InitializeDataMembers(functions, coeffs,1.);; 245 ; 246 // Set range of first function back to original state; 247 if (noffunctions > 0 && functions[0]); 248 functions[0]->SetRange(old_xmin, old_xmax);; 249}; 250 ; 251////////////////////////////////////////////////////////////////////////////////; 252/// Copy constructor (necessary to hold unique_ptr as member variable); 253 ; 254TF1NormSum::TF1NormSum(const TF1NormSum &nsum); 255{; 256 nsum.TF1NormSum::Copy(*this);; 257}; 258 ; 259////////////////////////////////////////////////////////////////////////////////; 260/// Operator =; 261 ; 262TF1NormSum &TF1NormSum::operator=(const TF1NormSum &rhs); 263{; 264 if (this != &rhs); 265 rhs.TF1NormSum::Copy(*this);; 266 return *this;; 267}; 268 ; 269////////////////////////////////////////////////////////////////////////////////; 270/// Overload the parenthesis to add the functions; 271 ; 272double TF1NormSum::operator()(const Double_t *x, const Double_t *p); 273{; 274 // first refresh the parameters; 275 if (p != nullptr); 276 SetParameters(p);; 277 ; 278 Double_t sum = 0.;; 279 for (unsigned int n=0; n<fNOfFunctions; n++); 280 sum += fCoeffs[n]*(fFunctions[n] -> EvalPar(x,nullptr));; 281 ; 282 // normalize by a scale parameter (ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8cxx_source.html:9325,variab,variable,9325,doc/master/TF1NormSum_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8cxx_source.html,1,['variab'],['variable']
Modifiability,"19 }; 5120 DestructorImpl(p, dtorOnly);; 5121}; 5122 ; 5123////////////////////////////////////////////////////////////////////////////////; 5124/// Destroy an array of emulated objects, with optional delete.; 5125 ; 5126void TStreamerInfo::DeleteArray(void* ary, Bool_t dtorOnly); 5127{; 5128 // Do nothing if passed a null pointer.; 5129 if (ary == 0) return;; 5130 ; 5131 //???FIX ME: What about varying length arrays?; 5132 ; 5133 Long_t* r = (Long_t*) ary;; 5134 Long_t arrayLen = r[-1];; 5135 Long_t size = r[-2];; 5136 char* memBegin = (char*) &r[-2];; 5137 ; 5138 char* p = ((char*) ary) + ((arrayLen - 1) * size);; 5139 for (Long_t cnt = 0; cnt < arrayLen; ++cnt, p -= size) {; 5140 // Destroy each element, but do not delete it.; 5141 Destructor(p, kTRUE);; 5142 } // for arrayItemSize; 5143 ; 5144 if (!dtorOnly) {; 5145 delete[] memBegin;; 5146 }; 5147}; 5148 ; 5149////////////////////////////////////////////////////////////////////////////////; 5150/// print value of element i in object at pointer; 5151/// The function may be called in two ways:; 5152/// -method1 len < 0; 5153/// i is assumed to be the TStreamerElement number i in StreamerInfo; 5154/// -method2 len >= 0; 5155/// i is the type; 5156/// address of variable is directly pointer.; 5157/// len is the number of elements to be printed starting at pointer.; 5158 ; 5159void TStreamerInfo::PrintValue(const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax) const; 5160{; 5161 char *ladd;; 5162 Int_t atype,aleng;; 5163 printf("" %-15s = "",name);; 5164 ; 5165 TStreamerElement * aElement = 0;; 5166 Int_t *count = 0;; 5167 if (len >= 0) {; 5168 ladd = pointer;; 5169 atype = i;; 5170 aleng = len;; 5171 } else {; 5172 if (i < 0) {; 5173 if (pointer==0) {; 5174 printf(""NULL\n"");; 5175 } else {; 5176 const static TClassRef stringClass(""string"");; 5177 if (fClass == stringClass) {; 5178 std::string *st = (std::string*)(pointer);; 5179 printf(""%s\n"",st->c_str());; 5180 } else if (fClass == TString::Class()) {; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:205049,variab,variable,205049,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['variab'],['variable']
Modifiability,"19#include ""Math/IntegratorOptions.h""; 20 ; 21#include ""Math/IFunction.h""; 22 ; 23#include ""Math/VirtualIntegrator.h""; 24 ; 25#include <memory>; 26#include <vector>; 27#include <string>; 28 ; 29 ; 30/**; 31@defgroup NumAlgo Numerical Algorithms; 32 ; 33Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries.; 34 ; 35@ingroup MathCore; 36@ingroup MathMore; 37 ; 38*/; 39 ; 40 ; 41/**; 42 ; 43@defgroup Integration Numerical Integration; 44 ; 45Classes for numerical integration of functions.; 46These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; 47and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; 48The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; 49ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; 50The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; 51ROOT::Math::IntegratorMultiDimOptions classes.; 52 ; 53@ingroup NumAlgo; 54 ; 55*/; 56 ; 57 ; 58 ; 59namespace ROOT {; 60namespace Math {; 61 ; 62 ; 63 ; 64 ; 65//____________________________________________________________________________________________; 66/**; 67 ; 68User Class for performing numerical integration of a function in one dimension.; 69It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the; 70algorithms used in the QUADPACK, a numerical integration package written in Fortran.; 71 ; 72Various types of adaptive and non-adaptive integration are supported. These include; 73integration over infinite and semi-infinite ranges and singular integrals.; 74 ; 75The integration type is selected using the Integration::type enumeration; 76in the class constructor.; 77The default type is adaptive integr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Integrator_8h_source.html:1670,config,configured,1670,doc/master/Integrator_8h_source.html,https://root.cern,https://root.cern/doc/master/Integrator_8h_source.html,1,['config'],['configured']
Modifiability,"191 ; 1192 template <typename OutputContainer>; 1193 void fetchOutput (const LayerData& lastLayerData, OutputContainer& outputContainer) const;; 1194 ; 1195 template <typename OutputContainer>; 1196 void fetchOutput (const std::vector<LayerData>& layerPatternData, OutputContainer& outputContainer) const;; 1197 ; 1198 ; 1199 template <typename ItWeight>; 1200 std::tuple</*sumError*/double,/*sumWeights*/double> computeError (const Settings& settings,; 1201 std::vector<LayerData>& lastLayerData,; 1202 Batch& batch,; 1203 ItWeight itWeightBegin,; 1204 ItWeight itWeightEnd) const;; 1205 ; 1206 template <typename Settings>; 1207 void backPropagate (std::vector<std::vector<LayerData>>& layerPatternData,; 1208 const Settings& settings,; 1209 size_t trainFromLayer,; 1210 size_t totalNumWeights) const;; 1211 ; 1212 ; 1213 ; 1214 /*! \brief main NN computation function; 1215 *; 1216 *; 1217 */; 1218 template <typename LayerContainer, typename PassThrough, typename ItWeight, typename ItGradient, typename OutContainer>; 1219 double forward_backward (LayerContainer& layers, PassThrough& settingsAndBatch,; 1220 ItWeight itWeightBegin, ItWeight itWeightEnd,; 1221 ItGradient itGradientBegin, ItGradient itGradientEnd,; 1222 size_t trainFromLayer,; 1223 OutContainer& outputContainer, bool fetchOutput) const;; 1224 ; 1225 ; 1226 ; 1227 double E ();; 1228 void dE ();; 1229 ; 1230 ; 1231 /*! \brief computes the error of the DNN; 1232 *; 1233 *; 1234 */; 1235 template <typename Container, typename ItWeight>; 1236 double errorFunction (LayerData& layerData,; 1237 Container truth,; 1238 ItWeight itWeight,; 1239 ItWeight itWeightEnd,; 1240 double patternWeight,; 1241 double factorWeightDecay,; 1242 EnumRegularization eRegularization) const;; 1243 ; 1244 ; 1245 const std::vector<Layer>& layers () const { return m_layers; } ///< returns the layers (structure); 1246 std::vector<Layer>& layers () { return m_layers; } ///< returns the layers (structure); 1247 ; 1248 void removeLayer () { m_layers.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:44926,layers,layers,44926,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,5,['layers'],['layers']
Modifiability,"191 if (defaultMinim != minim_newDefault ) fMinimizerOpts.SetMinimizerType(minim_newDefault.c_str());; 192 ; 193 if (min == nullptr) {; 194 // if creation of minimizer failed force the use by default of Minuit; 195 std::string minim2 = ""Minuit"";; 196 if (minimType == ""Minuit"") minim2 = ""Minuit2"";; 197 if (minimType != minim2 ) {; 198 std::string msg = ""Could not create the "" + minimType + "" minimizer. Try using the minimizer "" + minim2;; 199 MATH_WARN_MSG(""FitConfig::CreateMinimizer"",msg.c_str());; 200 min = ROOT::Math::Factory::CreateMinimizer(minim2,""Migrad"");; 201 if (min == nullptr) {; 202 MATH_ERROR_MSG(""FitConfig::CreateMinimizer"",""Could not create the Minuit2 minimizer"");; 203 return nullptr;; 204 }; 205 SetMinimizer( minim2.c_str(),""Migrad"");; 206 }; 207 else {; 208 std::string msg = ""Could not create the Minimizer "" + minimType;; 209 MATH_ERROR_MSG(""FitConfig::CreateMinimizer"",msg.c_str());; 210 return nullptr;; 211 }; 212 }; 213 ; 214 // set default max of function calls according to the number of parameters; 215 // formula from Minuit2 (adapted); 216 if (fMinimizerOpts.MaxFunctionCalls() == 0) {; 217 unsigned int npar = fSettings.size();; 218 int maxfcn = 1000 + 100*npar + 5*npar*npar;; 219 fMinimizerOpts.SetMaxFunctionCalls(maxfcn);; 220 }; 221 ; 222 ; 223 // set default minimizer control parameters; 224 min->SetPrintLevel( fMinimizerOpts.PrintLevel() );; 225 min->SetMaxFunctionCalls( fMinimizerOpts.MaxFunctionCalls() );; 226 min->SetMaxIterations( fMinimizerOpts.MaxIterations() );; 227 min->SetTolerance( fMinimizerOpts.Tolerance() );; 228 min->SetPrecision( fMinimizerOpts.Precision() );; 229 min->SetValidError( fParabErrors );; 230 min->SetStrategy( fMinimizerOpts.Strategy() );; 231 min->SetErrorDef( fMinimizerOpts.ErrorDef() );; 232 // set extra options if existing; 233 if (fMinimizerOpts.ExtraOptions()); 234 min->SetExtraOptions(*fMinimizerOpts.ExtraOptions());; 235 ; 236 return min;; 237}; 238 ; 239std::string FitConfig::MinimizerName() const; 240{; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8cxx_source.html:7415,adapt,adapted,7415,doc/master/FitConfig_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"19712 exit_callback = init->callbacks->exit_context;; 19713 /* The exit callback is activated once the context is successfully; 19714 * created. It should not be called, if an incomplete context object; 19715 * is deleted during a failed initialization. */; 19716 ctx->callbacks.exit_context = 0;; 19717 }; 19718 ctx->user_data = ((init != NULL) ? (init->user_data) : (NULL));; 19719 ctx->dd.handlers = NULL;; 19720 ctx->dd.next = NULL;; 19721 ; 19722#if defined(USE_LUA); 19723 lua_ctx_init(ctx);; 19724#endif; 19725 ; 19726 /* Store options */; 19727 while (options && (name = *options++) != NULL) {; 19728 if ((idx = get_option_index(name)) == -1) {; 19729 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 19730 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19731 mg_snprintf(NULL,; 19732 NULL, /* No truncation check for error buffers */; 19733 error->text,; 19734 error->text_buffer_size,; 19735 ""Invalid configuration option: %s"",; 19736 name);; 19737 }; 19738 free_context(ctx);; 19739 pthread_setspecific(sTlsKey, NULL);; 19740 return NULL;; 19741 } else if ((value = *options++) == NULL) {; 19742 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 19743 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19744 mg_snprintf(NULL,; 19745 NULL, /* No truncation check for error buffers */; 19746 error->text,; 19747 error->text_buffer_size,; 19748 ""Invalid configuration option value: %s"",; 19749 name);; 19750 }; 19751 free_context(ctx);; 19752 pthread_setspecific(sTlsKey, NULL);; 19753 return NULL;; 19754 }; 19755 if (ctx->dd.config[idx] != NULL) {; 19756 /* A duplicate configuration option is not an error - the last; 19757 * option value will be used. */; 19758 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 19759 mg_free(ctx->dd.config[idx]);; 19760 }; 19761 ctx->dd.config[idx] = mg_strdup_ctx(value, ctx);; 19762 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 19763 }; 19764 ; 19765 /* Set default value if needed */; 19766 for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:588885,config,configuration,588885,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['config'],['configuration']
Modifiability,"19713 exit_callback = init->callbacks->exit_context;; 19714 /* The exit callback is activated once the context is successfully; 19715 * created. It should not be called, if an incomplete context object; 19716 * is deleted during a failed initialization. */; 19717 ctx->callbacks.exit_context = 0;; 19718 }; 19719 ctx->user_data = ((init != NULL) ? (init->user_data) : (NULL));; 19720 ctx->dd.handlers = NULL;; 19721 ctx->dd.next = NULL;; 19722 ; 19723#if defined(USE_LUA); 19724 lua_ctx_init(ctx);; 19725#endif; 19726 ; 19727 /* Store options */; 19728 while (options && (name = *options++) != NULL) {; 19729 if ((idx = get_option_index(name)) == -1) {; 19730 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 19731 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19732 mg_snprintf(NULL,; 19733 NULL, /* No truncation check for error buffers */; 19734 error->text,; 19735 error->text_buffer_size,; 19736 ""Invalid configuration option: %s"",; 19737 name);; 19738 }; 19739 free_context(ctx);; 19740 pthread_setspecific(sTlsKey, NULL);; 19741 return NULL;; 19742 } else if ((value = *options++) == NULL) {; 19743 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 19744 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19745 mg_snprintf(NULL,; 19746 NULL, /* No truncation check for error buffers */; 19747 error->text,; 19748 error->text_buffer_size,; 19749 ""Invalid configuration option value: %s"",; 19750 name);; 19751 }; 19752 free_context(ctx);; 19753 pthread_setspecific(sTlsKey, NULL);; 19754 return NULL;; 19755 }; 19756 if (ctx->dd.config[idx] != NULL) {; 19757 /* A duplicate configuration option is not an error - the last; 19758 * option value will be used. */; 19759 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 19760 mg_free(ctx->dd.config[idx]);; 19761 }; 19762 ctx->dd.config[idx] = mg_strdup_ctx(value, ctx);; 19763 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 19764 }; 19765 ; 19766 /* Set default value if needed */; 19767 for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:588918,config,configuration,588918,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['configuration']
Modifiability,"1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1D(); Constructor. TH1D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Create a 1-Dim histogram with fix bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const TVectorD& v); Create a histogram from a TVectorD; by default the histogram name is ""TVectorD"" and title = """". ~TH1D(); Destructor. TH1D(const TH1D& h1d); Constructor. void Copy(TObject& hnew) const; Copy this to newth1. void Reset(Option_t* option = """"); Reset. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH1D& operator=(const TH1D& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const. void UpdateBinContent(Int_t bin, Double_t content). » Author: Rene Brun 26/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1D.html:25915,variab,variable,25915,root/html602/TH1D.html,https://root.cern,https://root.cern/root/html602/TH1D.html,1,['variab'],['variable']
Modifiability,"1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1D(); Constructor. TH1D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Create a 1-Dim histogram with fix bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const TVectorD& v); Create a histogram from a TVectorD; by default the histogram name is ""TVectorD"" and title = """". ~TH1D(); Destructor. TH1D(const TH1D& h1d); Constructor. void Copy(TObject& hnew) const; Copy this to newth1. void Reset(Option_t* option = """"); Reset. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH1D& operator=(const TH1D& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const. void UpdateBinContent(Int_t bin, Double_t content). » Author: Rene Brun 26/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-07-01 17:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1D.html:25876,variab,variable,25876,root/html604/TH1D.html,https://root.cern,https://root.cern/root/html604/TH1D.html,1,['variab'],['variable']
Modifiability,1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.37748 4.22044 0.0208054 0.00183497 42170.8 4; : 1020 | 3.48034 4.07947 0.020447 0.00177824 42852.4 5; : 1021 | 3.50059 4.11275 0.020219 0.00176964 43361.9 6; : 1022 | 3.15174 3.86168 0.0203283 0.00176093 43086.3 7; : 1023 | 3.4694 4.52782 0.0204007 0.00179059 42987.4 8; : 1024 Minimum Test error found - save the configuration ; : 1024 | 3.57333 3.68346 0.0207199 0.00186469 42428.5 0; : 1025 | 3.1448 3.86932 0.020257 0.0018083 43363.6 1; : 1026 | 3.14966 3.71614 0.0204412 0.00177219 42851.8 2; : 1027 Minimum Test error found - save the configuration ; : 1027 | 3.06278 3.47888 0.0204485 0.00186251 43043.1 0; : 1028 | 3.22518 4.06346 0.0201016 0.00179042 43689.3 1; : 1029 | 3.47015 5.10048 0.0212551 0.0017691 41055.1 2; : 1030 | 3,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:114189,config,configuration,114189,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97587,config,configuration,97587,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"1; ROOT::Fit::Fitter::~Fittervirtual ~Fitter()Destructor.Definition Fitter.h:117; ROOT::Fit::Fitter::Fitbool Fit(const std::shared_ptr< BinData > &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit a binned data set using a least square fit.Definition Fitter.h:165; ROOT::Fit::Fitter::Resultconst FitResult & Result() constget fit resultDefinition Fitter.h:394; ROOT::Fit::Fitter::ApplyWeightCorrectionbool ApplyWeightCorrection(const ROOT::Math::IMultiGenFunction &loglw2, bool minimizeW2L=false)apply correction in the error matrix for the weights for likelihood fits This method can be called on...Definition Fitter.cxx:886; ROOT::Fit::Fitter::BaseGradFuncROOT::Math::IMultiGradFunction BaseGradFuncDefinition Fitter.h:96; ROOT::Fit::Fitter::ExamineFCNvoid ExamineFCN()look at the user provided FCN and get data and model function is they derive from ROOT::Fit FCN class...Definition Fitter.cxx:979; ROOT::Fit::Fitter::Configconst FitConfig & Config() constaccess to the fit configuration (const method)Definition Fitter.h:422; ROOT::Fit::Fitter::SetDatavoid SetData(const std::shared_ptr< Data > &data)Set the input data for the fit using a shared ptr (No Copying)Definition Fitter.h:520; ROOT::Fit::Fitter::DoLeastSquareFitbool DoLeastSquareFit(const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)least square fitDefinition Fitter.cxx:309; ROOT::Fit::Fitter::IModelFunctionROOT::Math::IParamMultiFunction IModelFunctionDefinition Fitter.h:81; ROOT::Fit::Fitter::IModel1DFunctionROOT::Math::IParamFunction IModel1DFunctionDefinition Fitter.h:92; ROOT::Fit::Fitter::SetFCNbool SetFCN(unsigned int npar, Function &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)Set a generic FCN function as a C++ callable object implementing double () (const double *) Note that...Definition Fitter.h:656; ROOT::Fit::Fitter::LikelihoodFitbool LikelihoodFit(const BinData &data, bool extended=true, const ROOT::EExecu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:35998,config,configuration,35998,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['config'],['configuration']
Modifiability,"1; i--) {; 2564 if(a[i]<a[i+1]) {; 2565 i1=i;; 2566 break;; 2567 }; 2568 }; 2569 // no more upward transitions, end of the story; 2570 if(i1==-1) return kFALSE;; 2571 else {; 2572 // find lower right element higher than the lower; 2573 // element of the upward transition; 2574 for(i=n-1;i>i1;i--) {; 2575 if(a[i] > a[i1]) {; 2576 // swap the two; 2577 itmp=a[i1];; 2578 a[i1]=a[i];; 2579 a[i]=itmp;; 2580 break;; 2581 }; 2582 }; 2583 // order the rest, in fact just invert, as there; 2584 // are only downward transitions from here on; 2585 for(i=0;i<(n-i1-1)/2;i++) {; 2586 itmp=a[i1+i+1];; 2587 a[i1+i+1]=a[n-i-1];; 2588 a[n-i-1]=itmp;; 2589 }; 2590 }; 2591 return kTRUE;; 2592}; 2593 ; 2594////////////////////////////////////////////////////////////////////////////////; 2595/// Computes density function for Student's t- distribution; 2596/// (the probability function (integral of density) is computed in StudentI).; 2597///; 2598/// First parameter stands for x - the actual variable of the; 2599/// density function p(x) and the point at which the density is calculated.; 2600/// Second parameter stands for number of degrees of freedom.; 2601///; 2602/// About Student distribution:; 2603/// Student's t-distribution is used for many significance tests, for example,; 2604/// for the Student's t-tests for the statistical significance of difference; 2605/// between two sample means and for confidence intervals for the difference; 2606/// between two population means.; 2607///; 2608/// Example: suppose we have a random sample of size n drawn from normal; 2609/// distribution with mean Mu and st.deviation Sigma. Then the variable; 2610///; 2611/// t = (sample_mean - Mu)/(sample_deviation / sqrt(n)); 2612///; 2613/// has Student's t-distribution with n-1 degrees of freedom.; 2614///; 2615/// NOTE that this function's second argument is number of degrees of freedom,; 2616/// not the sample size.; 2617///; 2618/// As the number of degrees of freedom grows, t-distribution approaches; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:88894,variab,variable,88894,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['variab'],['variable']
Modifiability,"1;  ; Double_t fPhi2;  ; Double_t fRmax;  ; Double_t fRmin;  ; Double_t fTheta1;  ; Double_t fTheta2;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:20697,inherit,inherited,20697,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,1,['inherit'],['inherited']
Modifiability,"1;  ; int _l2;  ; int _m1;  ; int _m2;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:55785,inherit,inherited,55785,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,2,['inherit'],['inherited']
Modifiability,"1;; 6685 fDcovar = TMath::Max(fDcovar,.5);; 6686 }; 6687}; 6688 ; 6689////////////////////////////////////////////////////////////////////////////////; 6690/// Writes current parameter values and step sizes onto file ISYSSA; 6691///; 6692/// in format which can be reread by Minuit for restarting.; 6693/// The covariance matrix is also output if it exists.; 6694 ; 6695void TMinuit::mnsave(); 6696{; 6697 Printf(""mnsave is dummy in TMinuit"");; 6698 ; 6699}; 6700 ; 6701////////////////////////////////////////////////////////////////////////////////; 6702/// Scans the values of FCN as a function of one parameter; 6703///; 6704/// and plots the resulting values as a curve using MNPLOT.; 6705/// It may be called to scan one parameter or all parameters.; 6706/// retains the best function and parameter values found.; 6707 ; 6708void TMinuit::mnscan(); 6709{; 6710 /* Local variables */; 6711 Double_t step, uhigh, xhreq, xlreq, ubest, fnext, unext, xh, xl;; 6712 Int_t ipar, iint, icall, ncall, nbins, nparx;; 6713 Int_t nxypt, nccall, iparwd;; 6714 ; 6715 xlreq = TMath::Min(fWord7[2],fWord7[3]);; 6716 xhreq = TMath::Max(fWord7[2],fWord7[3]);; 6717 ncall = Int_t((fWord7[1] + .01));; 6718 if (ncall <= 1) ncall = 41;; 6719 if (ncall > 98) ncall = 98;; 6720 nccall = ncall;; 6721 if (fAmin == fUndefi) mnamin();; 6722 iparwd = Int_t((fWord7[0] + .1));; 6723 ipar = TMath::Max(iparwd,0);; 6724 fCstatu = ""NO CHANGE"";; 6725 if (iparwd > 0) goto L200;; 6726 ; 6727// equivalent to a loop over parameters requested; 6728L100:; 6729 ++ipar;; 6730 if (ipar > fNu) goto L900;; 6731 iint = fNiofex[ipar-1];; 6732 if (iint <= 0) goto L100;; 6733// set up range for parameter IPAR; 6734L200:; 6735 iint = fNiofex[ipar-1];; 6736 ubest = fU[ipar-1];; 6737 fXpt[0] = ubest;; 6738 fYpt[0] = fAmin;; 6739 fChpt[0] = ' ';; 6740 fXpt[1] = ubest;; 6741 fYpt[1] = fAmin;; 6742 fChpt[1] = 'X';; 6743 nxypt = 2;; 6744 if (fNvarl[ipar-1] > 1) goto L300;; 6745 ; 6746// no limits on parameter; 6747 if (xlreq == xhreq) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:217519,variab,variables,217519,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"1FunctorPointer *functor=nullptr);  General constructor for TF1. Most of the other constructors delegate on it. ;  ; Bool_t ComputeCdfTable (Option_t *opt);  Compute the cumulative function at fNpx points between fXmin and fXmax. ;  ; virtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D function. ;  ; void IntegrateForNormalization ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< Double_t > fAlpha;  ! Array alpha. for each bin in x the deconvolution r of fIntegral ;  ; std::vector< Double_t > fBeta;  ! Array beta. is approximated by x = alpha +beta*r *gamma*r**2 ;  ; Double_t fChisquare {};  Function fit chisquare. ;  ; std::unique_ptr< TF1AbsComposition > fComposition;  Pointer to composition (NSUM or CONV) ;  ; std::unique_ptr< TFormula > fFormula;  Pointer to TFormula in case when user define formula. ;  ; std::unique_ptr< TF1FunctorPointer > fFunctor;  ! Functor object to wrap any C++ callable object ;  ; std::vector< Double_t > fGamma;  ! Array gamma. ;  ; TH1 * fHistogram {nullptr};  ! Pointer to histogram used for visualisation ;  ; std::vector< Double_t > fIntegral;  ! Integral of function binned on fNpx bins ;  ; Double_t fMaximum {-1111};  Maximum value for plotting. ;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:45499,inherit,inherited,45499,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['inherit'],['inherited']
Modifiability,"1FunctorPointer *functor=nullptr);  General constructor for TF1. Most of the other constructors delegate on it. ;  ; Bool_t ComputeCdfTable (Option_t *opt);  Compute the cumulative function at fNpx points between fXmin and fXmax. ;  ; virtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D function. ;  ; void IntegrateForNormalization ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TF1; static std::atomic< Bool_t > fgAbsValue;  ; static std::atomic< Bool_t > fgAddToGlobList;  ; static TF1 * fgCurrent = nullptr;  ; static Bool_t fgRejectPoint = kFALSE;  . #include <TF12.h>. Inheritance diagram for TF12:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TF12() [1/3]. TF12::TF12 ; (; ). TF12 default constructor. ; Definition at line 39 of file TF12.cxx. ◆ TF12() [2/3]. TF12::TF12 ; (; const char * ; name, . TF2 * ; f2, . Double_t ; xy, . Option_t * ; option = ""x"" . ). TF12 normal constructor. ; Create a TF12 (special TF1) from a projection of a TF2 for a fix value of Y if option=""X"" or X if option=""Y"" This value may be changed at any time via TF12::SetXY(xy) ; Definition at line 54 of file TF12.c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:40308,inherit,inherited,40308,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,1,['inherit'],['inherited']
Modifiability,"1GLManager (const TX11GLManager &);  ; Bool_t CreateGLPixmap (TGLContext_t &);  Create GL pixmap. ;  ; TX11GLManager & operator= (const TX11GLManager &);  . Private Attributes; TX11GLImpl * fPimpl;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TX11GL.h>. Inheritance diagram for TX11GLManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TX11GLManager() [1/2]. TX11GLManager::TX11GLManager ; (; ). Constructor. ; Definition at line 184 of file TX11GL.cxx. ◆ ~TX11GLManager(). TX11GLManager::~TX11GLManager ; (; ). override . Destructor. ; Definition at line 194 of file TX11GL.cxx. ◆ TX11GLManager() [2/2]. TX11GLManager::TX11GLManager ; (; const TX11GLManager & ; ). private . Member Function Documentation. ◆ AttachOffScreenDevice(). Bool_t TX11GLManager::AttachOffScreenDevice ; (; Int_t ; ctxInd, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Attach off sc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTX11GLManager.html:13524,inherit,inherited,13524,doc/master/classTX11GLManager.html,https://root.cern,https://root.cern/doc/master/classTX11GLManager.html,2,['inherit'],['inherited']
Modifiability,"1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGraphDelaunay2D (TGraph2D *g=nullptr);  TGraphDelaunay2D normal constructor. ;  ; Triangles::const_iterator begin () const;  ; Double_t ComputeZ (Double_t x, Double_t y);  ; Triangles::const_iterator end () const;  ; void FindAllTriangles ();  ; TGraph2D * GetGraph2D () const;  ; Double_t GetMarginBinsContent () const;  ; Int_t GetNdt () const;  ; Double_t GetXNmax () const;  ; Double_t GetXNmin () const;  ; Double_t GetYNmax () const;  ; Double_t GetYNmin () const;  ; TClass * IsA () const override;  ; void SetMarginBinsContent (Double_t z=0.);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay2D.html:3167,inherit,inherited,3167,doc/master/classTGraphDelaunay2D.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay2D.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger) or previous (smaller) a given x. ;  ; static bool CheckAxisLimits (const TAxis *a1, const TAxis *a2);  Check that the axis limits of the histograms are the same. ;  ; static bool CheckBinLabels (const TAxis *a1, const TAxis *a2);  Check that axis have same labels. ;  ; static bool CheckBinLimits (const TAxis *a1, const TAxis *a2);  Check bin limits. ;  ; static int CheckConsistency (const TH1 *h1, const TH1 *h2);  Check histogram compatibility. ;  ; static bool CheckConsistentSubAxes (const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0);  Check that two sub axis are the same. ;  ; static bool CheckEqualAxes (const TAxis *a1, const TAxis *a2);  Check that the axis are the same. ;  ; static Bool_t RecomputeAxisLimits (TAxis &de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:63782,inherit,inherited,63782,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooRealIntegral.h>. Inheritance diagram for RooRealIntegral:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ IntOperMode. enum RooRealIntegral::IntOperMode. protected . EnumeratorHybrid ; Analytic ; PassThrough . Definition at line 92 of file RooRealIntegral.h. Constructor & Destructor Documentation. ◆ RooRealIntegral() [1/3]. RooRealIntegral::RooRealIntegral ; (; ). Definition at line 282 of file RooRealIntegral.cxx. ◆ RooRealIntegral() [2/3]. RooRealIntegral::RooRealIntegral ; (; const char * ; name, . const char * ; title, . const RooAbsReal & ; function, . const RooArgSet & ; depList, . const RooArgSet * ; funcNormSet = nullptr, . const RooNumIntConfig * ; config = nullptr, . const char * ; rangeName = nullptr . ). Construct integral of 'function' over observables in '",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:63367,inherit,inherited,63367,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAddModel.h>. Inheritance diagram for RooAddModel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ pRooArgList. typedef RooArgList* RooAddModel::pRooArgList. protected . Definition at line 106 of file RooAddModel.h. Constructor & Destructor Docum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:77949,inherit,inherited,77949,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCachedReal.h>. Inheritance diagram for RooAbsCachedReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ CacheElem. using RooAbsCachedReal::CacheElem = FuncCacheElem. protected . Definition at line 89 of file RooAbsCachedReal.h. Constructor & Destructor Documentation. ◆ RooAbsCachedReal() [1/3]. RooAbsCachedReal::RooAbsCachedReal ; (; ). inline . Definition at line 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedReal.html:61307,inherit,inherited,61307,doc/master/classRooAbsCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedReal.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:7724,variab,variable,7724,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variable']
Modifiability,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Private Member Functions inherited from TMVA::MethodCFMlpANN_Utils; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Private Attributes inherited from TMVA::MethodCFMlpANN_Utils; static const Int_t fg_max_nNodes_ = max_nNodes_;  ; static const Int_t fg_max_nVar_ = max_nVar_;  ; static const char *const fg_MethodName = ""--- CFMlpANN "";  . #include <TMVA/MethodCFMlpANN.h>. Inheritance diagram for TMVA::MethodCFMlpANN:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html:32650,inherit,inherited,32650,doc/master/classTMVA_1_1MethodCFMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html,7,['inherit'],['inherited']
Modifiability,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataDens.h>. Inheritance diagram for TQpDataDens:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataDens() [1/4]. TQpDataDens::TQpDataDens ; (; ). inline . Definition at line 74 of file TQpDataDens.h. ◆ TQpDataDens() [2/4]. TQpDataDen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataDens.html:12091,inherit,inherited,12091,doc/master/classTQpDataDens.html,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html,3,['inherit'],['inherited']
Modifiability,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataSparse.h>. Inheritance diagram for TQpDataSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataSparse() [1/4]. TQpDataSparse::TQpDataSparse ; (; ). inline . Definition at line 71 of file TQpDataSparse.h. ◆ TQpDataSparse() [2/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataSparse.html:12235,inherit,inherited,12235,doc/master/classTQpDataSparse.html,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html,3,['inherit'],['inherited']
Modifiability,"1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfEnumsWithLock.html:19968,inherit,inherited,19968,doc/master/classTListOfEnumsWithLock.html,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:7947,variab,variable,7947,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variable']
Modifiability,"1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from ROOT::v5::TFormula; enum  { ;   kEnd = 0; , kAdd = 1; , kSubstract = 2; , kMultiply = 3; , ;   kDivide = 4; , kModulo = 5; , kcos = 10; , ksin = 11; , ;   ktan = 12; , kacos = 13; , kasin = 14; , katan = 15; , ;   katan2 = 16; , kfmod = 17; , kpow = 20; , ksq = 21; , ;   ksqrt = 22; , kstrstr = 23; , kmin = 24; , kmax = 25; , ;   klog = 30; , kexp = 31; , klog10 = 32; , kpi = 40; , ;   kabs = 41; , ksign = 42; , kint = 43; , kSignInv = 44; , ;   krndm = 50; , kAnd = 60; , kOr = 61; , kEqual = 62; , ;   kNotEqual = 63; , kLess = 64; , kGreater = 65; , kLessThan = 66; , ;   kGreaterThan = 67; , kNot = 68; , kcosh = 70; , ksinh = 71; , ;   ktanh = 72; , kacosh = 73; , kasinh = 74; , katanh = 75; , ;   kStringEqual = 76; , kStringNotEqual = 77; , kBitAnd = 78; , kBitOr = 79; , ;   kLeftShift = 80; , kRightShift = 81; , kJumpIf = 82; , kJump = 83; , ;   kexpo = 100; , kxexpo = 100; , kyexpo = 101; , kzexpo = 102; , ;   kxyexpo = 105; , kgaus = 110; , kxgaus = 110; , kygaus = 111; , ;   kzgaus = 112; , kxygaus = 115; , klandau = 120; , kxlandau = 120; , ;   kylandau = 121; , kzlandau = 122; , kxylandau = 125; , kpol = 130; , ;   kxpol = 130; , kypol = 131; , kzpol = 132; , kParameter = 140; , ;   kConstant = 141; , kBoolOptimize = 142; , kStringConst = 143; , kVariable = 144; , ;   kFunctionCall = 145; , kData = 146; , kUnary = 147; , kBinary = 148; , ;   kThree = 149; , kDefinedVariable = 150; , kDefinedString = 151; , kPlusD = 152; , ;   kPlusDD = 153; , kMultD = 154; , kMultDD = 155; , kBoolOptimizeOr = 156; , ;   kBoolOptimizeAnd = 157; , kBoolSet = 158; , kFDM = 159; , kFD0 = 160; , ;   kFD1 = 161; , kFD2 = 162; , kFD3 = 163. };  ; typedef Double_t(TObject::* TFuncG) (const Double_t *, const Double_t *) const;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html:21374,inherit,inherited,21374,doc/master/structROOT_1_1v5_1_1TF1Data.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPluginManager.h>. Inheritance diagram for TPluginManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPluginManager() [1/2]. TPluginManager::TPluginManager ; (; const TPluginManager & ; ). privatedelete . true if we are running LoadHandlersFromPluginDirs . ◆ TPluginManager() [2/2]. TPluginManager::TPluginManager ; (; ). Constructor. ; Definition at line 368 of file TPluginManager.cxx. ◆ ~TPluginManager(). TPluginManager::~TPluginManager ; (; ). Clean up the plugin manager. ; Definition at line 377 of file TPluginManager.cxx. Member Function Documentation. ◆ AddHandler(). void TPluginManager::AddHandler ; (; const char * ; base, . const char * ; regexp, . const char * ; className, . const char * ; pluginName, . const char * ; ctor = nullptr, . const char * ; origin = nullptr . ). Add plugin handler to the list of handlers. ; If there is already a handler defined for the same base and regexp it will be replaced. ; Definition at line 569 of file TPluginManager.cxx. ◆ Class(). static TClass * TPluginManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPluginManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPluginManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 286 of file TPluginManager.h. ◆ DeclFileName(). static const char * TPluginManager::DeclFileName ; (; ). inlinestati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:15735,plugin,plugin,15735,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,1,['plugin'],['plugin']
Modifiability,"1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGFrameElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TGFSFrameElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Compare(). Int_t TGFSFrameElement::Compare ; (; const TObject * ; obj); const. overridevirtual . Sort frame elements in file selection list view container. ; Reimplemented from TObject.; Definition at line 106 of file TGFSContainer.cxx. ◆ IsSortable(). Bool_t TGFSFrameElement::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 99 of file TGFSContainer.cxx. Member Data Documentation. ◆ fContainer. TGFileContainer* TGFSFrameElement::fContainer. Definition at line 97 of file TGFSContainer.cxx. gui/gui/src/TGFSContainer.cxx. TGFSFrameElement. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:15 (G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFSFrameElement.html:9867,inherit,inherited,9867,doc/master/classTGFSFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFSFrameElement.html,2,['inherit'],['inherited']
Modifiability,"1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Member Functions inherited from TGTextButton;  TGTextButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget and set cmd string at same time. ;  ;  TGTextButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  TGTextButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  ~TGTextButton () override;  Delete a text button widget. ;  ; void ChangeText (const char *title);  ; Int_t GetBottomMargin () const;  ; TGDimension GetDefaultSize () const override;  returns default size ;  ; FontStruct_t GetFontStruct () const;  ; Int_t GetLeftMargin () const;  ; Int_t GetRightMargin () const;  ; TString GetString () const;  ; const TGHotString * GetText () const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitButton.html:5955,inherit,inherited,5955,doc/master/classTGSplitButton.html,https://root.cern,https://root.cern/doc/master/classTGSplitButton.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 9 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TF1; enum  EFType { ;   kFormula = 0; , kPtrScalarFreeFcn; , kInterpreted; , kTemplVec; , ;   kTemplScalar; , kCompositionFcn. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TF1;  TF1 (EFType functionType, const char *name, Double_t xmin, Double_t xmax, Int_t npar, Int_t ndim, EAddToList addToGlobList, TF1Parameters *params=nullptr, TF1FunctorPointer *functor=nullptr);  General constructor for TF1. Most of the other constructors delegate on it. ;  ; Bool_t ComputeCdfTable (Option_t *opt);  Compute the cumulative function at fNpx points between fXmin and fXmax. ;  ; virtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:39072,inherit,inherited,39072,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,2,['inherit'],['inherited']
Modifiability,"1WrappedTF1(TF1& f); ROOT::Math::WrappedTF1WrappedTF1(const ROOT::Math::WrappedTF1& rhs). private:. virtual doubleDoDerivative(double x) const; virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const; virtual doubleDoParameterDerivative(double x, const double* p, unsigned int ipar) const. Data Members; private:. TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions ; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions ; doublefX[1]! cached vector for x value (needed for TF1::EvalPar signature) ; static doublefgEpsepsilon used in derivative calculation h ~ eps |x|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedTF1(TF1& f). constructor from a TF1 function pointer. virtual ~WrappedTF1(). Destructor (no operations). TF1 Function pointer is not owned. {}. WrappedTF1(TF1& f). Copy constructor. ROOT::Math::IGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cachen inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (this is stored in TF1). void ParameterGradient(double x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void FdF(double x, double& f, double& deriv) const; calculate function and derivative at same time (required by IGradient interface). void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__WrappedTF1.html:2851,inherit,inherited,2851,root/html528/ROOT__Math__WrappedTF1.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__WrappedTF1.html,4,['inherit'],['inherited']
Modifiability,"1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.241",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:8312,extend,extended,8312,doc/master/rf204a__extendedLikelihood_8C.html,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html,2,['extend'],['extended']
Modifiability,"1^2 * x2^4 * x3^5, this method should return kFALSE if given the argument { 3, 4, 6 } ; Definition at line 2365 of file TMultiDimFit.cxx. ◆ SetBinVarX(). void TMultiDimFit::SetBinVarX ; (; Int_t ; nbbinvarx). inline . Definition at line 195 of file TMultiDimFit.h. ◆ SetBinVarY(). void TMultiDimFit::SetBinVarY ; (; Int_t ; nbbinvary). inline . Definition at line 196 of file TMultiDimFit.h. ◆ SetMaxAngle(). void TMultiDimFit::SetMaxAngle ; (; Double_t ; ang = 0). Set the max angle (in degrees) between the initial data vector to be fitted, and the new candidate function to be included in the fit. ; By default it is 0, which automatically chooses another selection criteria. See also class description ; Definition at line 2377 of file TMultiDimFit.cxx. ◆ SetMaxFunctions(). void TMultiDimFit::SetMaxFunctions ; (; Int_t ; n). inline . Definition at line 198 of file TMultiDimFit.h. ◆ SetMaxPowers(). void TMultiDimFit::SetMaxPowers ; (; const Int_t * ; powers). Set the maximum power to be considered in the fit for each variable. ; See also class description ; Definition at line 2443 of file TMultiDimFit.cxx. ◆ SetMaxStudy(). void TMultiDimFit::SetMaxStudy ; (; Int_t ; n). inline . Definition at line 200 of file TMultiDimFit.h. ◆ SetMaxTerms(). void TMultiDimFit::SetMaxTerms ; (; Int_t ; terms). inline . Definition at line 201 of file TMultiDimFit.h. ◆ SetMinAngle(). void TMultiDimFit::SetMinAngle ; (; Double_t ; ang = 1). Set the min angle (in degrees) between a new candidate function and the subspace spanned by the previously accepted functions. ; See also class description ; Definition at line 2393 of file TMultiDimFit.cxx. ◆ SetMinRelativeError(). void TMultiDimFit::SetMinRelativeError ; (; Double_t ; error). Set the acceptable relative error for when sum of square residuals is considered minimized. ; For a full account, refer to the class description ; Definition at line 2458 of file TMultiDimFit.cxx. ◆ SetPowerLimit(). void TMultiDimFit::SetPowerLimit ; (; Double_t ; lim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:58464,variab,variable,58464,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variable']
Modifiability,"1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:79353,variab,variables,79353,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['variab'],['variables']
Modifiability,"1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:79837,variab,variables,79837,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,1,['variab'],['variables']
Modifiability,"1analysisTreeReader.h. Public Member Functions;  h1analysisTreeReader (TTree *=nullptr);  ;  ~h1analysisTreeReader () override;  ; void Begin (TTree *) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *myTree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysisTreeReader.html:1374,inherit,inherited,1374,doc/master/classh1analysisTreeReader.html,https://root.cern,https://root.cern/doc/master/classh1analysisTreeReader.html,1,['inherit'],['inherited']
Modifiability,"1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be adjusted individually for each input; : variable!; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for training with 14000 events: 0.117 sec ; Likelihood : [dataset] : Evaluation of Likelihood on training sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.02 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Fact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:17460,variab,variable,17460,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['variab'],['variable']
Modifiability,"1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be adjusted individually for each input; : variable!; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for training with 14000 events: 0.118 sec ; Likelihood : [dataset] : Evaluation of Likelihood on training sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.0223 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Fa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:17395,variab,variable,17395,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['variab'],['variable']
Modifiability,"1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be adjusted individually for each input; : variable!; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for training with 2000 events: 0.0149 sec ; Likelihood : [dataset] : Evaluation of Likelihood on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.0035 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_Likelihood.class.C␛[0m; : TMVAC.root:/dataset/Method_Likelihood/Likelihood; Factory : Training finished; : ; Factor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:28804,variab,variable,28804,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variable']
Modifiability,"2 *f2, Option_t *option, Option_t *); 843{; 844 // internal graph2D fitting methods; 845 Foption_t fitOption;; 846 Option_t *goption = """";; 847 ROOT::Fit::FitOptionsMake(ROOT::Fit::EFitObjectType::kGraph, option, fitOption);; 848 ; 849 // create range and minimizer options with default values; 850 ROOT::Fit::DataRange range(2);; 851 ROOT::Math::MinimizerOptions minOption;; 852 return ROOT::Fit::FitObject(this, f2 , fitOption , minOption, goption, range);; 853}; 854 ; 855 ; 856////////////////////////////////////////////////////////////////////////////////; 857/// Display a GUI panel with all graph fit options.; 858///; 859/// See class TFitEditor for example; 860 ; 861void TGraph2D::FitPanel(); 862{; 863 if (!gPad); 864 gROOT->MakeDefCanvas();; 865 ; 866 if (!gPad) {; 867 Error(""FitPanel"", ""Unable to create a default canvas"");; 868 return;; 869 }; 870 ; 871 // use plugin manager to create instance of TFitEditor; 872 TPluginHandler *handler = gROOT->GetPluginManager()->FindHandler(""TFitEditor"");; 873 if (handler && handler->LoadPlugin() != -1) {; 874 if (handler->ExecPlugin(2, gPad, this) == 0); 875 Error(""FitPanel"", ""Unable to crate the FitPanel"");; 876 } else; 877 Error(""FitPanel"", ""Unable to find the FitPanel plug-in"");; 878 ; 879}; 880 ; 881 ; 882////////////////////////////////////////////////////////////////////////////////; 883/// Get x axis of the graph.; 884 ; 885TAxis *TGraph2D::GetXaxis() const; 886{; 887 TH1 *h = ((TGraph2D*)this)->GetHistogram(""empty"");; 888 if (!h) return nullptr;; 889 return h->GetXaxis();; 890}; 891 ; 892 ; 893////////////////////////////////////////////////////////////////////////////////; 894/// Get y axis of the graph.; 895 ; 896TAxis *TGraph2D::GetYaxis() const; 897{; 898 TH1 *h = ((TGraph2D*)this)->GetHistogram(""empty"");; 899 if (!h) return nullptr;; 900 return h->GetYaxis();; 901}; 902 ; 903 ; 904////////////////////////////////////////////////////////////////////////////////; 905/// Get z axis of the graph.; 906 ; 907TAxis *TGr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:28326,plugin,plugin,28326,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,2,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,"2 /// signalling whether the event has passed the selection (true) or not (false).; 253 /// \param[in] columns Names of the columns/branches in input to the filter function.; 254 /// \return the filter node of the computation graph.; 255 ///; 256 /// Refer to the first overload of this method for the full documentation.; 257 template <typename F>; 258 RInterface<RDFDetail::RFilter<F, Proxied>, DS_t> Filter(F f, const std::initializer_list<std::string> &columns); 259 {; 260 return Filter(f, ColumnNames_t{columns});; 261 }; 262 ; 263 ////////////////////////////////////////////////////////////////////////////; 264 /// \brief Append a filter to the call graph.; 265 /// \param[in] expression The filter expression in C++; 266 /// \param[in] name Optional name of this filter. See `Report`.; 267 /// \return the filter node of the computation graph.; 268 ///; 269 /// The expression is just-in-time compiled and used to filter entries. It must; 270 /// be valid C++ syntax in which variable names are substituted with the names; 271 /// of branches/columns.; 272 ///; 273 /// ### Example usage:; 274 /// ~~~{.cpp}; 275 /// auto filtered_df = df.Filter(""myCollection.size() > 3"");; 276 /// auto filtered_name_df = df.Filter(""myCollection.size() > 3"", ""Minumum collection size"");; 277 /// ~~~; 278 ///; 279 /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; 280 /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; 281 /// ~~~{.cpp}; 282 /// df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); 283 /// ~~~; 284 /// but instead this will:; 285 /// ~~~{.cpp}; 286 /// df.Filter(""return Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); 287 /// ~~~; 288 RInterface<RDFDetail::RJittedFilter, DS_t> Filter(std::string_view expression, std::string_view name = """"); 289 {; 290 // deleted by the jitted call to JitFilterHelper; 291 auto upcastNodeOnHeap = RDFInternal::MakeSharedO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:12701,variab,variable,12701,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89862,config,configuration,89862,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,2 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90252,config,configuration,90252,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"2 At:253232 N=28324 TBasket CX = 1.13; 1532/// 20010404/150442 At:281556 N=29641 TBasket CX = 1.08; 1533/// 20010404/150442 At:311197 N=29633 TBasket CX = 1.08; 1534/// 20010404/150442 At:340830 N=29091 TBasket CX = 1.10; 1535/// 20010404/150442 At:369921 N=10341 TBasket CX = 3.09; 1536/// 20010404/150442 At:380262 N=509 TH1F CX = 1.93; 1537/// 20010404/150442 At:380771 N=1769 TH2F CX = 4.32; 1538/// 20010404/150442 At:382540 N=1849 TProfile CX = 1.65; 1539/// 20010404/150442 At:384389 N=18434 TNtuple CX = 4.51; 1540/// 20010404/150442 At:402823 N=307 KeysList; 1541/// 20010404/150443 At:403130 N=4548 StreamerInfo CX = 3.65; 1542/// 20010404/150443 At:407678 N=86 FreeSegments; 1543/// 20010404/150443 At:407764 N=1 END; 1544///; 1545/// If the parameter opt contains ""forComp"", the Date/Time is omitted; 1546/// and the decompressed size is also printed.; 1547///; 1548/// Record_Adress Logical_Record_Length Key_Length Object_Record_Length ClassName CompressionFactor; 1549///; 1550/// If the parameter opt contains ""extended"", the name and title of the keys are added:; 1551/// 20200820/155031 At:100 N=180 TFile name: hsimple.root title: Demo ROOT file with histograms; 1552/// 220200820/155032 At:280 N=28880 TBasket CX = 1.11 name: random title: ntuple; 1553/// 220200820/155032 At:29160 N=29761 TBasket CX = 1.08 name: px title: ntuple; 1554/// 220200820/155032 At:58921 N=29725 TBasket CX = 1.08 name: py title: ntuple; 1555/// 220200820/155032 At:88646 N=29209 TBasket CX = 1.10 name: pz title: ntuple; 1556/// 220200820/155032 At:117855 N=10197 TBasket CX = 3.14 name: i title: ntuple; 1557/// ...; 1558/// 20200820/155032 At:405110 N=808 TNtuple CX = 3.53 name: ntuple title: Demo ntuple; 1559/// 20200820/155706 At:405918 N=307 KeysList name: hsimple.root title: Demo ROOT file with histograms; 1560/// 20200820/155032 At:406225 N=8556 StreamerInfo CX = 3.42 name: StreamerInfo title: Doubly linked list; 1561/// 20200820/155708 At:414781 N=86 FreeSegments name: hsimple.root title",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:56244,extend,extended,56244,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['extend'],['extended']
Modifiability,"2 \) fit to given histogram. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataHist &data, const RooLinkedList &cmdList);  Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataSet &xydata, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Perform a 2-D \( \chi^2 \) fit using a series of x and y values stored in the dataset xydata. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataSet &xydata, const RooLinkedList &cmdList);  Perform a 2-D \( \chi^2 \) fit using a series of x and y values stored in the dataset xydata. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create a \( \chi^2 \) variable from a histogram and this function. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataHist &data, const RooLinkedList &cmdList);  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataSet &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create a \( \chi^2 \) from a series of x and y values stored in a dataset. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataSet &data, const RooLinkedList &cmdList);  See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ;  ; RooFit::OwningPtr< RooAbsArg > createFundamental (const char *newname=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:20690,variab,variable,20690,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,144,['variab'],['variable']
Modifiability,"2 of file RuleFitAPI.h. ◆ VarImp(). void TMVA::RuleFitAPI::VarImp ; (; ). inline . Definition at line 221 of file RuleFitAPI.h. ◆ WelcomeMessage(). void TMVA::RuleFitAPI::WelcomeMessage ; (; ). welcome message ; Definition at line 76 of file RuleFitAPI.cxx. ◆ WriteAll(). Bool_t TMVA::RuleFitAPI::WriteAll ; (; ). protected . write all files read by rf_go.exe ; Definition at line 248 of file RuleFitAPI.cxx. ◆ WriteFloat(). Bool_t TMVA::RuleFitAPI::WriteFloat ; (; std::ofstream & ; f, . const Float_t * ; v, . Int_t ; n = 1 . ). inlineprotected . Definition at line 274 of file RuleFitAPI.h. ◆ WriteInt(). Bool_t TMVA::RuleFitAPI::WriteInt ; (; std::ofstream & ; f, . const Int_t * ; v, . Int_t ; n = 1 . ). inlineprotected . Definition at line 266 of file RuleFitAPI.h. ◆ WriteIntParms(). Bool_t TMVA::RuleFitAPI::WriteIntParms ; (; ). protected . write int params file ; Definition at line 264 of file RuleFitAPI.cxx. ◆ WriteLx(). Bool_t TMVA::RuleFitAPI::WriteLx ; (; ). protected . Save input variable mask. ; If the lx vector size is not the same as inputVars, resize it and fill it with 1 NOTE: Always set all to 1 if (fRFLx.size() != m_inputVars->size()) { ; Definition at line 291 of file RuleFitAPI.cxx. ◆ WriteProgram(). Bool_t TMVA::RuleFitAPI::WriteProgram ; (; ). protected . write command to rf_go.exe ; Definition at line 305 of file RuleFitAPI.cxx. ◆ WriteRealParms(). Bool_t TMVA::RuleFitAPI::WriteRealParms ; (; ). protected . write int params file ; Definition at line 275 of file RuleFitAPI.cxx. ◆ WriteRealVarImp(). Bool_t TMVA::RuleFitAPI::WriteRealVarImp ; (; ). protected . write the minimum importance to be considered ; Definition at line 333 of file RuleFitAPI.cxx. ◆ WriteRfOut(). Bool_t TMVA::RuleFitAPI::WriteRfOut ; (; ). protected . written by rf_go.exe; write rulefit output (rfout) ; Definition at line 347 of file RuleFitAPI.cxx. ◆ WriteRfStatus(). Bool_t TMVA::RuleFitAPI::WriteRfStatus ; (; ). protected . written by rf_go.exe; write rulefit status ; Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html:12040,variab,variable,12040,doc/master/classTMVA_1_1RuleFitAPI.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html,1,['variab'],['variable']
Modifiability,"2) if any.; The algorithm works for 1-d, 2-D and 3-D histograms.; The axis must be extendable before invoking this function.; Ex: h->GetXaxis()->SetCanExtend(kTRUE);. void RecursiveRemove(TObject* obj); Recursively remove object from the list of functions. void Scale(Double_t c1 = 1, Option_t* option = """"); Multiply this histogram by a constant c1. this = c1*this. Note that both contents and errors(if any) are scaled.; This function uses the services of TH1::Add. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Scale. One can scale an histogram such that the bins integral is equal to; the normalization parameter via TH1::Scale(Double_t norm), where norm; is the desired normalization divided by the integral of the histogram. If option contains ""width"" the bin contents and errors are divided; by the bin width. Bool_t CanExtendAllAxes() const; returns true if all axes are extendable. UInt_t SetCanExtend(UInt_t extendBitMask); make the histogram axes extendable / not extendable according to the bit mask; returns the previous bit mask specifying which axes are extendable. void SetDefaultBufferSize(Int_t buffersize = 1000); static function to set the default buffer size for automatic histograms.; When an histogram is created with one of its axis lower limit greater; or equal to its upper limit, the function SetBuffer is automatically; called with the default buffer size. void SetDefaultSumw2(Bool_t sumw2 = kTRUE); static function.; When this static function is called with sumw2=kTRUE, all new; histograms will automatically activate the storage; of the sum of squares of errors, ie TH1::Sumw2 is automatically called. void SetTitle(const char* title); Change (i.e. set) the title. if title is in the form ""stringt;stringx;stringy;stringz""; the histogram title is set to stringt, the x axis title to stringx,; the y axis title to stringy,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:106639,extend,extendable,106639,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,2,['extend'],['extendable']
Modifiability,"2) that represents the confidence level contour for a measurement with errors (s1,s2) and correlation coefficient rho. ;  ; double getFitRangeBinW () const override;  ; double getFitRangeNEvt () const override;  ; double getFitRangeNEvt (double, double) const override;  ; TClass * IsA () const override;  ; void Print (Option_t *options=nullptr) const override;  Printing interface. ;  ; void printClassName (std::ostream &os) const override;  Print class name of ellipse on ostream. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print detailed multi line information on ellipse on ostreamx. ;  ; void printName (std::ostream &os) const override;  Print name of ellipse on ostream. ;  ; void printTitle (std::ostream &os) const override;  Print title of ellipse on ostream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraph (const TVectorD &vx, const TVectorD &vy);  Graph constructor with two vectors of doubles in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of points in the graph is the minimum of number of points in vx and vy. ;  ;  TGraph (const TVectorF &vx, const TVectorF &vy);  Graph constructor with two vectors of floats in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:1617,inherit,inherited,1617,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,1,['inherit'],['inherited']
Modifiability,"2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) constInternal function compute integral and optionally the error between the limits specified by the bin n...Definition TH1.cxx:7977; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetStdDevvirtual Double_t GetStdDev(Int_t axis=1) constReturns the Standard Deviation (Sigma).Definition TH1.cxx:7607; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetBinErrorvirtual Double_t GetBinError(Int_t bin) constReturn value of error associated to bin number bin.Definition TH1.cxx:9063; TH1::GetNbinsZvirtual Int_t GetNbinsZ() constDefinition TH1.h:299; TH1::GetDimensionvirtual Int_t GetDimension() constDefinition TH1.h:283; TH1::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TH1.cxx:6933; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNcellsvirtual Int_t GetNcells() constDefinition TH1.h:300; TH1::PutStatsvirtual void PutStats(Double_t *stats)Replace current statistics with the values in array stats.Definition TH1.cxx:7884; TH1::GetPainterTVirtualHistPainter * GetPainter(Option_t *option="""")Return pointer to painter.Definition TH1.cxx:4511; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetBinvirtual Int_t GetBin(Int_t binx, Int_t biny=0, Int_t binz=0) constReturn Global bin number corresponding to binx,y,z.Definition TH1.cxx:4961; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::Addvirtual Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:194086,extend,extendable,194086,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"2, Float_t dz);  TRD2 shape normal constructor. ;  ;  ~TTRD2 () override;  TRD2 shape default destructor. ;  ; Float_t GetDx2 () const;  ; Float_t GetDy2 () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD2.html:2114,inherit,inherited,2114,doc/master/classTTRD2.html,https://root.cern,https://root.cern/doc/master/classTTRD2.html,1,['inherit'],['inherited']
Modifiability,"2, using Kolmogorov test.; 1450/// Default: Ignore under- and overflow bins in comparison; 1451///; 1452/// option is a character string to specify options; 1453/// - ""U"" include Underflows in test; 1454/// - ""O"" include Overflows; 1455/// - ""N"" include comparison of normalizations; 1456/// - ""D"" Put out a line of ""Debug"" printout; 1457/// - ""M"" Return the Maximum Kolmogorov distance instead of prob; 1458///; 1459/// The returned function value is the probability of test; 1460/// (much less than one means NOT compatible); 1461///; 1462/// The KS test uses the distance between the pseudo-CDF's obtained; 1463/// from the histogram. Since in 2D the order for generating the pseudo-CDF is; 1464/// arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; 1465/// other from the y axis and the maximum distance is the average of the two maximum; 1466/// distances obtained.; 1467///; 1468/// Code adapted by Rene Brun from original HBOOK routine HDIFF; 1469 ; 1470Double_t TH2::KolmogorovTest(const TH1 *h2, Option_t *option) const; 1471{; 1472 TString opt = option;; 1473 opt.ToUpper();; 1474 ; 1475 Double_t prb = 0;; 1476 TH1 *h1 = (TH1*)this;; 1477 if (h2 == nullptr) return 0;; 1478 const TAxis *xaxis1 = h1->GetXaxis();; 1479 const TAxis *xaxis2 = h2->GetXaxis();; 1480 const TAxis *yaxis1 = h1->GetYaxis();; 1481 const TAxis *yaxis2 = h2->GetYaxis();; 1482 Int_t ncx1 = xaxis1->GetNbins();; 1483 Int_t ncx2 = xaxis2->GetNbins();; 1484 Int_t ncy1 = yaxis1->GetNbins();; 1485 Int_t ncy2 = yaxis2->GetNbins();; 1486 ; 1487 // Check consistency of dimensions; 1488 if (h1->GetDimension() != 2 || h2->GetDimension() != 2) {; 1489 Error(""KolmogorovTest"",""Histograms must be 2-D\n"");; 1490 return 0;; 1491 }; 1492 ; 1493 // Check consistency in number of channels; 1494 if (ncx1 != ncx2) {; 1495 Error(""KolmogorovTest"",""Number of channels in X is different, %d and %d\n"",ncx1,ncx2);; 1496 return 0;; 1497 }; 1498 if (ncy1 != ncy2) {; 1499 Error(""KolmogorovTest"",""Number of ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:59648,adapt,adapted,59648,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"2,3 and 4 dimensions with their transformations) is not anymore part of MathCore, but is built as a separate library. MathCore contains instead now classes which were originally part of libCore. These include:. TMath : namespace with mathematical functions and basic function algorithms.; TComplex: class for complex numbers.; Random classes: base class TRandom and the derived classes TRandom1, TRandom2 and TRandom3, implementing the pseudo-random number generators.; Other classes, such as; TKDTree for partitioning the data using a kd-Tree and TKDTreeBinning for binning data using a kdTree; ROOT::Math::GoFTest for goodness of fit tests . Modules;  Fitting and Parameter Estimation;  Classes used for fitting (regression analysis) and estimation of parameter values given a data sample. ;  ;  Interface classes for Random number generation;  Pseudo-random numbers generator classes and for generation of random number distributions. ;  ;  Goodness of Fit Tests;  Classical one-dimensional goodness of git tests for unbinned data. ;  ;  Function Classes and Interfaces;  Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods for describing function classes. ;  ;  Numerical Algorithms;  Numerical Algorithm classes from the MathCore and MathMore libraries. ;  ;  Statistical functions;  Probability density functions, cumulative distribution functions and their inverses (quantiles) for various statistical distributions (continuous and discrete). ;  ;  Special functions;  Special mathematical functions. ;  . Files; file  RFit.hxx;  . Classes; class  ROOT::Math::Delaunay2D;  Class to generate a Delaunay triangulation of a 2D set of points. More...;  ; class  TKDTreeBinning;  <- TKDTreeBinning - A class providing multidimensional binning -> More...;  ; class  TStatistic;  Statistical variable, defined by its mean and variance (RMS). More...;  . ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:10:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/group__MathCore.html:3293,variab,variable,3293,doc/v632/group__MathCore.html,https://root.cern,https://root.cern/doc/v632/group__MathCore.html,1,['variab'],['variable']
Modifiability,"2->Draw();; ; return;; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooIntegralMorph.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooIntegralMorphClass RooIntegralMorph is an implementation of the histogram interpolation technique described by Ale...Definition RooIntegralMorph.h:26; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf705__linearmorph_8C.html:4916,variab,variable,4916,doc/master/rf705__linearmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf705__linearmorph_8C.html,1,['variab'],['variable']
Modifiability,"2. float * trats(const float *a, const float *s, float *b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trchlu(const float *a, float *b, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trpck(const float *s, float *u, int n); trpck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRPCK .VERSION KERNFOR 2.08 741218 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trqsq(const float *q, const float *s, float *r__, int m); trqsq.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRQSQ .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trsa(const float *s, const float *a, float *b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRSA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. Local variables. float * trupck(const float *u, float *s, int m); trupck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRUPCK .VERSION KERNFOR 2.08 741218; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trata(const double *a, double *r__, int m, int n). ; see original documentation of CERNLIB package F112. double * trats(const double *a, const double *s, double *b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trchlu(const double *a, double *b, int n); trchlu.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. Local variables. double * trchul(const double *a, double *b, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trinv(const double *t, double *s, int n); trinv.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRINV .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCL.html:15125,variab,variables,15125,root/html526/TCL.html,https://root.cern,https://root.cern/root/html526/TCL.html,1,['variab'],['variables']
Modifiability,2.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.08,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96008,config,configuration,96008,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,2.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120030,config,configuration,120030,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,20 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2.54248 2.42056 0.0201867 0.00176633 43430.3 11; : 1128 | 2.47016 2.53962 0.0206089 0.00182988 42600.8 12; : 1129 | 2.38268 2.44496 0.0204067 0.00176828 42922.1 13; : 1130 | 2.59925 2.55821 0.0200531 0.00176378 43741.4 14; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 1133 | 2.68556 2.54814 0.0200421 0.00176557 43772.1 17; : 1134 | 2.52258 2.47147 0.0200724 0.0017645 43696.9 18; : 1135 | 2.54757 2.67188 0.0200351 0.00176104 43778 19; : 1136 | 2.63764 2.78828 0.0200363 0.0017639 43781.8 20; : 1137 Minimum Test error found - save the configuration ; : 1137 | 2.5743 2.19951 0.0201074 0.00183887 43791.1 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:122024,config,configuration,122024,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"20//-----------------------------------------------------------------------------; 221bool CPyCppyy::Instance_IsLively(PyObject* pyobject); 222{; 223// Test whether the given instance can safely return to C++; 224 if (!CPPInstance_Check(pyobject)); 225 return true; // simply don't know; 226 ; 227// the instance fails the lively test if it owns the C++ object while having a; 228// reference count of 1 (meaning: it could delete the C++ instance any moment); 229 if (pyobject->ob_refcnt <= 1 && (((CPPInstance*)pyobject)->fFlags & CPPInstance::kIsOwner)); 230 return false;; 231 ; 232 return true;; 233}; 234 ; 235//-----------------------------------------------------------------------------; 236bool CPyCppyy::Overload_Check(PyObject* pyobject); 237{; 238// Test if the given pyobject is of CPPOverload derived type.; 239 if (!Initialize()); 240 return false;; 241 ; 242// detailed walk through inheritance hierarchy; 243 return CPPOverload_Check(pyobject);; 244}; 245 ; 246//-----------------------------------------------------------------------------; 247bool CPyCppyy::Overload_CheckExact(PyObject* pyobject); 248{; 249// Test if the given pyobject is of CPPOverload type.; 250 if (!Initialize()); 251 return false;; 252 ; 253// direct pointer comparison of type member; 254 return CPPOverload_CheckExact(pyobject);; 255}; 256 ; 257 ; 258//- access to the python interpreter ----------------------------------------; 259bool CPyCppyy::Import(const std::string& mod_name); 260{; 261// Import the named python module and create Cling equivalents for its classes.; 262 if (!Initialize()); 263 return false;; 264 ; 265 PyObject* mod = PyImport_ImportModule(mod_name.c_str());; 266 if (!mod) {; 267 PyErr_Print();; 268 return false;; 269 }; 270 ; 271// allow finding to prevent creation of a python proxy for the C++ proxy; 272 Py_INCREF(mod);; 273 PyModule_AddObject(gThisModule, mod_name.c_str(), mod);; 274 ; 275// force creation of the module as a namespace; 276// TODO: the following is broke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:8419,inherit,inheritance,8419,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"2015 // Collection of numbers. Memberwise or not, it is all the same.; 2016 ; 2017 TConfigSTL *config = (TConfigSTL*)conf;; 2018 UInt_t start, count;; 2019 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2020 ; 2021 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2022 Int_t nvalues;; 2023 buf.ReadInt(nvalues);; 2024 vec->resize(nvalues);; 2025 ; 2026 From *temp = new From[nvalues];; 2027 buf.ReadFastArrayWithNbits(temp, nvalues, 0);; 2028 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2029 (*vec)[ind] = (To)temp[ind];; 2030 }; 2031 delete [] temp;; 2032 ; 2033 buf.CheckByteCount(start,count,config->fTypeName);; 2034 return 0;; 2035 }; 2036 };; 2037 ; 2038 template <typename To>; 2039 static INLINE_TEMPLATE_ARGS Int_t ConvertCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 2040 {; 2041 // Collection of numbers. Memberwise or not, it is all the same.; 2042 ; 2043 TConfigSTL *config = (TConfigSTL*)conf;; 2044 UInt_t start, count;; 2045 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2046 ; 2047 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2048 Int_t nvalues;; 2049 buf.ReadInt(nvalues);; 2050 vec->resize(nvalues);; 2051 ; 2052 Double32_t *temp = new Double32_t[nvalues];; 2053 buf.ReadFastArrayDouble32(temp, nvalues);; 2054 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2055 (*vec)[ind] = (To)temp[ind];; 2056 }; 2057 delete [] temp;; 2058 ; 2059 buf.CheckByteCount(start,count,config->fTypeName);; 2060 return 0;; 2061 }; 2062 ; 2063 };; 2064 ; 2065 struct VectorPtrLooper {; 2066 ; 2067 template <typename T>; 2068 static INLINE_TEMPLATE_ARGS Int_t ReadBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2069 {; 2070 const Int_t offset = config->fOffset;; 2071 ; 2072 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2073 T *x = (T*)( ((char*) (*(void**)iter) ) + offset );; 2074 buf >> *x;; 207",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:84347,config,config,84347,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"2068 ; 2069 RGeomBrowserIter giter(*this);; 2070 ; 2071 if (!giter.Navigate(path)); 2072 return false;; 2073 ; 2074 auto stack = MakeStackByIds(giter.CurrentIds());; 2075 ; 2076 for (auto iter = fVisibility.begin(); iter != fVisibility.end(); iter++); 2077 if (compare_stacks(iter->stack, stack) == 0) {; 2078 fVisibility.erase(iter);; 2079 ClearDrawData();; 2080 return true;; 2081 }; 2082 ; 2083 return false;; 2084}; 2085 ; 2086/////////////////////////////////////////////////////////////////////////////////; 2087/// Reset all custom visibility settings; 2088 ; 2089bool RGeomDescription::ClearAllPhysVisibility(); 2090{; 2091 TLockGuard lock(fMutex);; 2092 ; 2093 if (fVisibility.empty()); 2094 return false;; 2095 ; 2096 fVisibility.clear();; 2097 ClearDrawData();; 2098 return true;; 2099}; 2100 ; 2101/////////////////////////////////////////////////////////////////////////////////; 2102/// Change configuration by client; 2103/// Returns true if any parameter was really changed; 2104 ; 2105bool RGeomDescription::ChangeConfiguration(const std::string &json); 2106{; 2107 auto cfg = TBufferJSON::FromJSON<RGeomConfig>(json);; 2108 if (!cfg); 2109 return false;; 2110 ; 2111 TLockGuard lock(fMutex);; 2112 ; 2113 auto json1 = TBufferJSON::ToJSON(cfg.get());; 2114 auto json2 = TBufferJSON::ToJSON(&fCfg);; 2115 ; 2116 if (json1 == json2); 2117 return false;; 2118 ; 2119 fCfg = *cfg; // use assign; 2120 ; 2121 ClearDrawData();; 2122 ; 2123 return true;; 2124}; 2125 ; 2126/////////////////////////////////////////////////////////////////////////////////; 2127/// Change search query and belongs to it json string; 2128/// Returns true if any parameter was really changed; 2129 ; 2130bool RGeomDescription::SetSearch(const std::string &query, const std::string &json); 2131{; 2132 TLockGuard lock(fMutex);; 2133 ; 2134 bool changed = (fSearch != query) || (fSearchJson != json);; 2135 fSearch = query;; 2136 fSearchJson = json;; 2137 return changed;; 2138}; 2139 ; 2140/////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:63371,config,configuration,63371,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configuration']
Modifiability,207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96452,config,configuration,96452,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"2084 mg_write(conn, buf, (size_t)len);; 12085 }; 12086}; 12087 ; 12088 ; 12089static void; 12090handle_ssi_file_request(struct mg_connection *conn,; 12091 const char *path,; 12092 struct mg_file *filep); 12093{; 12094 char date[64];; 12095 time_t curtime = time(NULL);; 12096 const char *cors_orig_cfg, *cors_cred_cfg;; 12097 const char *cors1, *cors2, *cors3, *cors4;; 12098 ; 12099 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12100 return;; 12101 }; 12102 ; 12103 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12104 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12105 /* Cross-origin resource sharing (CORS). */; 12106 cors1 = ""Access-Control-Allow-Origin"";; 12107 cors2 = cors_orig_cfg;; 12108 } else {; 12109 cors1 = cors2 = """";; 12110 }; 12111 ; 12112 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12113 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12114 /* Credentials CORS header */; 12115 cors3 = ""Access-Control-Allow-Credentials"";; 12116 cors4 = cors_cred_cfg;; 12117 } else {; 12118 cors3 = cors4 = """";; 12119 }; 12120 ; 12121 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, filep)) {; 12122 /* File exists (precondition for calling this function),; 12123 * but can not be opened by the server. */; 12124 mg_send_http_error(conn,; 12125 500,; 12126 ""Error: Cannot read file\nfopen(%s): %s"",; 12127 path,; 12128 strerror(ERRNO));; 12129 } else {; 12130 /* Set ""must_close"" for HTTP/1.x, since we do not know the; 12131 * content length */; 12132 conn->must_close = 1;; 12133 gmt_time_string(date, sizeof(date), &curtime);; 12134 fclose_on_exec(&filep->access, conn);; 12135 ; 12136 /* 200 OK response */; 12137 mg_response_header_start(conn, 200);; 12138 send_no_cache_header(conn);; 12139 send_additional_header(conn);; 12140 mg_response_header_add(conn, ""Content-Type"", ""text/html"", -1);; 12141 if (cors1[0]) {; 12142 mg_response_header_add(conn, cors1, cors2, -1);; 12",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:350249,config,config,350249,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"2085 mg_write(conn, buf, (size_t)len);; 12086 }; 12087}; 12088 ; 12089 ; 12090static void; 12091handle_ssi_file_request(struct mg_connection *conn,; 12092 const char *path,; 12093 struct mg_file *filep); 12094{; 12095 char date[64];; 12096 time_t curtime = time(NULL);; 12097 const char *cors_orig_cfg, *cors_cred_cfg;; 12098 const char *cors1, *cors2, *cors3, *cors4;; 12099 ; 12100 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12101 return;; 12102 }; 12103 ; 12104 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12105 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12106 /* Cross-origin resource sharing (CORS). */; 12107 cors1 = ""Access-Control-Allow-Origin"";; 12108 cors2 = cors_orig_cfg;; 12109 } else {; 12110 cors1 = cors2 = """";; 12111 }; 12112 ; 12113 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12114 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12115 /* Credentials CORS header */; 12116 cors3 = ""Access-Control-Allow-Credentials"";; 12117 cors4 = cors_cred_cfg;; 12118 } else {; 12119 cors3 = cors4 = """";; 12120 }; 12121 ; 12122 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, filep)) {; 12123 /* File exists (precondition for calling this function),; 12124 * but can not be opened by the server. */; 12125 mg_send_http_error(conn,; 12126 500,; 12127 ""Error: Cannot read file\nfopen(%s): %s"",; 12128 path,; 12129 strerror(ERRNO));; 12130 } else {; 12131 /* Set ""must_close"" for HTTP/1.x, since we do not know the; 12132 * content length */; 12133 conn->must_close = 1;; 12134 gmt_time_string(date, sizeof(date), &curtime);; 12135 fclose_on_exec(&filep->access, conn);; 12136 ; 12137 /* 200 OK response */; 12138 mg_response_header_start(conn, 200);; 12139 send_no_cache_header(conn);; 12140 send_additional_header(conn);; 12141 mg_response_header_add(conn, ""Content-Type"", ""text/html"", -1);; 12142 if (cors1[0]) {; 12143 mg_response_header_add(conn, cors1, cors2, -1);; 12",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:350282,config,config,350282,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"209 kind = gROOT->GetWebDisplay().Data();; 210 ; 211 if (kind == ""local""); 212 SetBrowserKind(kLocal);; 213 else if (kind == ""native""); 214 SetBrowserKind(kNative);; 215 else if (kind.empty() || (kind == ""on"")); 216 SetBrowserKind(kOn);; 217 else if ((kind == ""dflt"") || (kind == ""default"") || (kind == ""browser"")); 218 SetBrowserKind(kDefault);; 219 else if (kind == ""firefox""); 220 SetBrowserKind(kFirefox);; 221 else if ((kind == ""chrome"") || (kind == ""chromium"")); 222 SetBrowserKind(kChrome);; 223#ifdef _MSC_VER; 224 else if ((kind == ""edge"") || (kind == ""msedge"")); 225 SetBrowserKind(kEdge);; 226#endif; 227 else if ((kind == ""cef"") || (kind == ""cef3"")); 228 SetBrowserKind(kCEF);; 229 else if ((kind == ""qt"") || (kind == ""qt5"")); 230 SetBrowserKind(kQt5);; 231 else if (kind == ""qt6""); 232 SetBrowserKind(kQt6);; 233 else if ((kind == ""embed"") || (kind == ""embedded"")); 234 SetBrowserKind(kEmbedded);; 235 else if (kind == ""server""); 236 SetBrowserKind(kServer);; 237 else if (kind == ""off""); 238 SetBrowserKind(kOff);; 239 else if (!SetSizeAsStr(kind)); 240 SetCustomExec(kind);; 241 ; 242 return *this;; 243}; 244 ; 245/////////////////////////////////////////////////////////////////////; 246/// Returns configured browser name; 247 ; 248std::string RWebDisplayArgs::GetBrowserName() const; 249{; 250 switch (GetBrowserKind()) {; 251 case kChrome: return ""chrome"";; 252 case kEdge: return ""edge"";; 253 case kFirefox: return ""firefox"";; 254 case kNative: return ""native"";; 255 case kCEF: return ""cef"";; 256 case kQt5: return ""qt5"";; 257 case kQt6: return ""qt6"";; 258 case kLocal: return ""local"";; 259 case kDefault: return ""default"";; 260 case kServer: return ""server"";; 261 case kEmbedded: return ""embed"";; 262 case kOff: return ""off"";; 263 case kOn: return ""on"";; 264 case kCustom:; 265 auto pos = fExec.find("" "");; 266 return (pos == std::string::npos) ? fExec : fExec.substr(0,pos);; 267 }; 268 ; 269 return """";; 270}; 271 ; 272//////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html:8403,config,configured,8403,doc/v632/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html,1,['config'],['configured']
Modifiability,"2095 iercr = 3;; 2096// in any case; 2097L1000:; 2098 if (ldebug) {; 2099 itoohi = 0;; 2100 for (i = 1; i <= ipt; ++i) {; 2101 if (fYpt[i-1] > aim + fUp) {; 2102 fYpt[i-1] = aim + fUp;; 2103 fChpt[i-1] = '+';; 2104 itoohi = 1;; 2105 }; 2106 }; 2107 fChpt[ipt] = 0;; 2108 chsign = ""POSI"";; 2109 if (fXdircr < 0) chsign = ""NEGA"";; 2110 if (fKe2cr == 0) {; 2111 Printf("" %sTIVE MINOS ERROR, PARAMETER %3d"",chsign,fKe1cr);; 2112 }; 2113 if (itoohi == 1) {; 2114 Printf(""POINTS LABELLED '+' WERE TOO HIGH TO PLOT."");; 2115 }; 2116 if (iercr == 1) {; 2117 Printf(""RIGHTMOST POINT IS UP AGAINST LIMIT."");; 2118 }; 2119 mnplot(fXpt, fYpt, fChpt, ipt, fNpagwd, fNpagln);; 2120 }; 2121}; 2122 ; 2123////////////////////////////////////////////////////////////////////////////////; 2124/// Makes sure that the current point is a local minimum; 2125///; 2126/// Makes sure that the current point is a local; 2127/// minimum and that the error matrix exists,; 2128/// or at least something good enough for MINOS and MNCONT; 2129 ; 2130void TMinuit::mncuve(); 2131{; 2132 /* Local variables */; 2133 Double_t dxdi, wint;; 2134 Int_t ndex, iext, i, j;; 2135 ; 2136 if (fISW[3] < 1) {; 2137 Printf("" FUNCTION MUST BE MINIMIZED BEFORE CALLING %s"",(const char*)fCfrom);; 2138 fApsi = fEpsi;; 2139 mnmigr();; 2140 }; 2141 if (fISW[1] < 3) {; 2142 mnhess();; 2143 if (fISW[1] < 1) {; 2144 mnwarn(""W"", fCfrom, ""NO ERROR MATRIX. WILL IMPROVISE."");; 2145 for (i = 1; i <= fNpar; ++i) {; 2146 ndex = i*(i-1) / 2;; 2147 for (j = 1; j <= i-1; ++j) {; 2148 ++ndex;; 2149 fVhmat[ndex-1] = 0;; 2150 }; 2151 ++ndex;; 2152 if (fG2[i-1] <= 0) {; 2153 wint = fWerr[i-1];; 2154 iext = fNexofi[i-1];; 2155 if (fNvarl[iext-1] > 1) {; 2156 mndxdi(fX[i-1], i-1, dxdi);; 2157 if (TMath::Abs(dxdi) < .001) wint = .01;; 2158 else wint /= TMath::Abs(dxdi);; 2159 }; 2160 fG2[i-1] = fUp / (wint*wint);; 2161 }; 2162 fVhmat[ndex-1] = 2 / fG2[i-1];; 2163 }; 2164 fISW[1] = 1;; 2165 fDcovar = 1;; 2166 } else mnwerr();; 2167 }; 2168}; 2169 ; 2170",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:71285,variab,variables,71285,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"21#include <string>; 22 ; 23ClassImp(TNtuple);; 24 ; 25/** \class TNtuple; 26\ingroup tree; 27 ; 28A simple TTree restricted to a list of float variables only.; 29 ; 30Each variable goes to a separate branch.; 31 ; 32A Ntuple is created via; 33~~~ {.cpp}; 34 TNtuple(name,title,varlist,bufsize); 35~~~; 36It is filled via:; 37~~~ {.cpp}; 38 TNtuple::Fill(*x) or; 39 TNtuple::Fill(v1,v2,v3.....); 40~~~; 41*/; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Default constructor for Ntuple.; 45 ; 46TNtuple::TNtuple(): TTree(); 47{; 48 fNvar = 0;; 49 fArgs = nullptr;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Create an Ntuple.; 54///; 55/// The parameter varlist describes the list of the ntuple variables; 56/// separated by a colon:; 57///; 58/// Example: `x:y:z:energy`; 59///; 60/// For each variable in the list a separate branch is created.; 61///; 62/// NOTE:; 63/// - Use TTree to create branches with variables of different data types.; 64/// - Use TTree when the number of branches is large (> 100).; 65 ; 66TNtuple::TNtuple(const char *name, const char *title, const char *varlist, Int_t bufsize); 67 :TTree(name,title); 68{; 69 Int_t i;; 70 fNvar = 0;; 71 fArgs = nullptr;; 72 ; 73// Count number of variables (separated by :); 74 Int_t nch = strlen(varlist);; 75 if (nch == 0) return;; 76 char *vars = new char[nch+1];; 77 strlcpy(vars,varlist,nch+1);; 78 Int_t *pvars = new Int_t[nch+1];; 79 fNvar = 1;; 80 pvars[0] = 0;; 81 for (i=1;i<nch;i++) {; 82 if (vars[i] == ':') {; 83 pvars[fNvar] = i+1;; 84 vars[i] = 0;; 85 fNvar++;; 86 }; 87 }; 88 fArgs = new Float_t[fNvar];; 89 ; 90// Create one branch for each variable; 91 for (i=0;i<fNvar;i++) {; 92 Int_t pv = pvars[i];; 93 TTree::Branch(&vars[pv],&fArgs[i],&vars[pv],bufsize);; 94 }; 95 ; 96 delete [] vars;; 97 delete [] pvars;; 98}; 99 ; 100////////////////////////////////////////////////////////////////////////////////; 101/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:1827,variab,variables,1827,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,1,['variab'],['variables']
Modifiability,"212*It is recommended to use STL containers instead of TClonesArrays*.; 213 ; 214~~~ {.cpp}; 215 // clonesarray is the address of a pointer to a TClonesArray.; 216 auto branch = tree.Branch(branchname,clonesarray, bufsize, splitlevel); 217~~~; 218The TClonesArray is a direct access list of objects of the same class.; 219For example, if the TClonesArray is an array of TTrack objects,; 220this function will create one subbranch for each data member of; 221the object TTrack.; 222 ; 223\anchor fillthetree; 224## Fill the Tree; 225 ; 226A TTree instance is filled with the invocation of the TTree::Fill method:; 227~~~ {.cpp}; 228 tree.Fill(); 229~~~; 230Upon its invocation, a loop on all defined branches takes place that for each branch invokes; 231the TBranch::Fill method.; 232 ; 233\anchor addcoltoexistingtree; 234## Add a column to an already existing Tree; 235 ; 236You may want to add a branch to an existing tree. For example,; 237if one variable in the tree was computed with a certain algorithm,; 238you may want to try another algorithm and compare the results.; 239One solution is to add a new branch, fill it, and save the tree.; 240The code below adds a simple branch to an existing tree.; 241Note the kOverwrite option in the Write method, it overwrites the; 242existing tree. If it is not specified, two copies of the tree headers; 243are saved.; 244~~~ {.cpp}; 245 void tree3AddBranch() {; 246 TFile f(""tree3.root"", ""update"");; 247 ; 248 Float_t new_v;; 249 auto t3 = f->Get<TTree>(""t3"");; 250 auto newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");; 251 ; 252 Long64_t nentries = t3->GetEntries(); // read the number of entries in the t3; 253 ; 254 for (Long64_t i = 0; i < nentries; i++) {; 255 new_v = gRandom->Gaus(0, 1);; 256 newBranch->Fill();; 257 }; 258 ; 259 t3->Write("""", TObject::kOverwrite); // save only the new version of the tree; 260 }; 261~~~; 262It is not always possible to add branches to existing datasets stored in TFiles: for example,; 263these files might",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:11658,variab,variable,11658,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"2149 ; 2150 {""ssl_ca_path"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2151 {""ssl_ca_file"", MG_CONFIG_TYPE_FILE, NULL},; 2152 {""ssl_verify_depth"", MG_CONFIG_TYPE_NUMBER, ""9""},; 2153 {""ssl_default_verify_paths"", MG_CONFIG_TYPE_BOOLEAN, ""yes""},; 2154 {""ssl_cipher_list"", MG_CONFIG_TYPE_STRING, NULL},; 2155 ; 2156 /* HTTP2 requires ALPN, and anyway TLS1.2 should be considered; 2157 * as a minimum in 2020 */; 2158 {""ssl_protocol_version"", MG_CONFIG_TYPE_NUMBER, ""4""},; 2159 ; 2160 {""ssl_short_trust"", MG_CONFIG_TYPE_BOOLEAN, ""no""},; 2161 ; 2162#if defined(USE_LUA); 2163 {""lua_preload_file"", MG_CONFIG_TYPE_FILE, NULL},; 2164 {""lua_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2165 {""lua_server_page_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lp$|**.lsp$""},; 2166#if defined(MG_EXPERIMENTAL_INTERFACES); 2167 {""lua_debug"", MG_CONFIG_TYPE_STRING, NULL},; 2168#endif; 2169#endif; 2170#if defined(USE_DUKTAPE); 2171 /* The support for duktape is still in alpha version state.; 2172 * The name of this config option might change. */; 2173 {""duktape_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.ssjs$""},; 2174#endif; 2175 ; 2176#if defined(USE_WEBSOCKET); 2177 {""websocket_root"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2178#endif; 2179#if defined(USE_LUA) && defined(USE_WEBSOCKET); 2180 {""lua_websocket_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2181#endif; 2182 {""access_control_allow_origin"", MG_CONFIG_TYPE_STRING, ""*""},; 2183 {""access_control_allow_methods"", MG_CONFIG_TYPE_STRING, ""*""},; 2184 {""access_control_allow_headers"", MG_CONFIG_TYPE_STRING, ""*""},; 2185 {""access_control_allow_credentials"", MG_CONFIG_TYPE_STRING, """"},; 2186 {""error_pages"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2187#if !defined(NO_CACHING); 2188 {""static_file_max_age"", MG_CONFIG_TYPE_NUMBER, ""3600""},; 2189 {""static_file_cache_control"", MG_CONFIG_TYPE_STRING, NULL},; 2190#endif; 2191#if !defined(NO_SSL); 2192 {""strict_transport_security_max_age"", MG_CONFIG_TYPE_NUMBER, NULL},; 2193#endif; 2194 {""additional_header"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:66908,config,config,66908,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"2150 ; 2151 {""ssl_ca_path"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2152 {""ssl_ca_file"", MG_CONFIG_TYPE_FILE, NULL},; 2153 {""ssl_verify_depth"", MG_CONFIG_TYPE_NUMBER, ""9""},; 2154 {""ssl_default_verify_paths"", MG_CONFIG_TYPE_BOOLEAN, ""yes""},; 2155 {""ssl_cipher_list"", MG_CONFIG_TYPE_STRING, NULL},; 2156 ; 2157 /* HTTP2 requires ALPN, and anyway TLS1.2 should be considered; 2158 * as a minimum in 2020 */; 2159 {""ssl_protocol_version"", MG_CONFIG_TYPE_NUMBER, ""4""},; 2160 ; 2161 {""ssl_short_trust"", MG_CONFIG_TYPE_BOOLEAN, ""no""},; 2162 ; 2163#if defined(USE_LUA); 2164 {""lua_preload_file"", MG_CONFIG_TYPE_FILE, NULL},; 2165 {""lua_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2166 {""lua_server_page_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lp$|**.lsp$""},; 2167#if defined(MG_EXPERIMENTAL_INTERFACES); 2168 {""lua_debug"", MG_CONFIG_TYPE_STRING, NULL},; 2169#endif; 2170#endif; 2171#if defined(USE_DUKTAPE); 2172 /* The support for duktape is still in alpha version state.; 2173 * The name of this config option might change. */; 2174 {""duktape_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.ssjs$""},; 2175#endif; 2176 ; 2177#if defined(USE_WEBSOCKET); 2178 {""websocket_root"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2179#endif; 2180#if defined(USE_LUA) && defined(USE_WEBSOCKET); 2181 {""lua_websocket_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2182#endif; 2183 {""access_control_allow_origin"", MG_CONFIG_TYPE_STRING, ""*""},; 2184 {""access_control_allow_methods"", MG_CONFIG_TYPE_STRING, ""*""},; 2185 {""access_control_allow_headers"", MG_CONFIG_TYPE_STRING, ""*""},; 2186 {""access_control_allow_credentials"", MG_CONFIG_TYPE_STRING, """"},; 2187 {""error_pages"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2188#if !defined(NO_CACHING); 2189 {""static_file_max_age"", MG_CONFIG_TYPE_NUMBER, ""3600""},; 2190 {""static_file_cache_control"", MG_CONFIG_TYPE_STRING, NULL},; 2191#endif; 2192#if !defined(NO_SSL); 2193 {""strict_transport_security_max_age"", MG_CONFIG_TYPE_NUMBER, NULL},; 2194#endif; 2195 {""additional_header"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:66940,config,config,66940,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirects; 230 /// to the actual virtual function but takes a RooArgSet reference instead of; 231 /// pointer. \see expectedEvents(const RooArgSet*) const; 232 double expectedEvents(const RooArgSet& nset) const {; 233 return expectedEvents(&nset) ;; 234 }; 235 ; 236 virtual std::unique_ptr<RooAbsReal> createExpectedEventsFunc(const RooArgSet* nset) const;; 237 ; 238 // Printing interface (human readable); 239 void printValue(std::ostream& os) const override ;; 240 void printMultiline(std::ostream& os, Int_t contents, bool verbose=false, TString indent="""") const override ;; 241 ; 242 static void verboseEval(Int_t stat) ;; 243 static int verboseEval() ;; 244 ; 245 double extendedTerm(double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;; 246 double extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW2=0.0, bool doOffset=false) const;; 247 double extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset=false) const;; 248 ; 249 void setNormRange(const char* rangeName) ;; 250 const char* normRange() const {; 251 return _normRange.Length()>0 ? _normRange.Data() : nullptr ;; 252 }; 253 void setNormRangeOverride(const char* rangeName) ;; 254 ; 255 const RooAbsReal* getNormIntegral(const RooArgSet& nset) const { return getNormObj(nullptr,&nset,nullptr) ; }; 256 ; 257 virtual const RooAbsReal* getNormObj(const RooArgSet* set, const RooArgSet* iset,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:11800,extend,extendedTerm,11800,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['extend'],['extendedTerm']
Modifiability,"2251; TStreamerInfoActions::AssociativeLooper::SimpleReadFloat16static void SimpleReadFloat16(TBuffer &buf, void *addr, Int_t nvalues)Definition TStreamerInfoActions.cxx:2203; TStreamerInfoActions::AssociativeLooper::ReadNumericalCollectionstatic Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2214; TStreamerInfoActions::BitsMarkerDefinition TStreamerInfoActions.cxx:67; TStreamerInfoActions::BitsMarker::Value_tUInt_t Value_tDefinition TStreamerInfoActions.cxx:68; TStreamerInfoActions::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1427; TStreamerInfoActions::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1457; TStreamerInfoActions::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1444; TStreamerInfoActions::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1414; TStreamerInfoActions::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1415; TStreamerInfoActions::GenericLooper::ConvertBasicType< BitsMarker, To, Generic >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2447; TStreamerInfoActions::GenericLooper::ConvertBasicType< NoFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2504; TStreamerInfoActions::GenericLooper::ConvertBasicType< WithFactorMarker< From >, To, Converter >::Actionstatic Int_t A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:264975,config,config,264975,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"226 fX[0] = x;; 227 return TMath::Power(fX[0] - fX0, fN) * TMath::Abs(fFunc->EvalPar(fX, nullptr));; 228 }; 229 ; 230 TF1 *fFunc;; 231 mutable Double_t fX[1];; 232 const double *fPar;; 233 Bool_t fAbsVal;; 234 Double_t fN;; 235 Double_t fX0;; 236};; 237 ; 238////////////////////////////////////////////////////////////////////////////////; 239/** \class TF1; 240 \ingroup Functions; 241 \brief 1-Dim function class; 242 ; 243 ; 244## TF1: 1-Dim function class; 245 ; 246A TF1 object is a 1-Dim function defined between a lower and upper limit.; 247The function may be a simple function based on a TFormula expression or a precompiled user function.; 248The function may have associated parameters.; 249TF1 graphics function is via the TH1 and TGraph drawing functions.; 250 ; 251The following types of functions can be created:; 252 ; 2531. [Expression using variable x and no parameters](\ref F1); 2542. [Expression using variable x with parameters](\ref F2); 2553. [Lambda Expression with variable x and parameters](\ref F3); 2564. [A general C function with parameters](\ref F4); 2575. [A general C++ function object (functor) with parameters](\ref F5); 2586. [A member function with parameters of a general C++ class](\ref F6); 259 ; 260 ; 261 ; 262\anchor F1; 263### 1 - Expression using variable x and no parameters; 264 ; 265#### Case 1: inline expression using standard C++ functions/operators; 266 ; 267Begin_Macro(source); 268{; 269 auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; 270 fa1->Draw();; 271}; 272End_Macro; 273 ; 274#### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; 275 ; 276 ; 277Begin_Macro(source); 278{; 279 auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; 280 fa2->Draw();; 281}; 282End_Macro; 283 ; 284#### Case 3: inline expression using a user defined CLING function by name; 285 ; 286~~~~{.cpp}; 287Double_t myFunc(double x) { return x+sin(x); }; 288....; 289auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; 290fa3->Draw();; 291~~~~; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:7904,variab,variable,7904,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"2299}; 2300 ; 2301#else /* STOP_FLAG_NEEDS_LOCK */; 2302 ; 2303typedef int volatile stop_flag_t;; 2304#define STOP_FLAG_IS_ZERO(f) ((*(f)) == 0); 2305#define STOP_FLAG_IS_TWO(f) ((*(f)) == 2); 2306#define STOP_FLAG_ASSIGN(f, v) ((*(f)) = (v)); 2307 ; 2308#endif /* STOP_FLAG_NEEDS_LOCK */; 2309 ; 2310 ; 2311struct mg_context {; 2312 ; 2313 /* Part 1 - Physical context:; 2314 * This holds threads, ports, timeouts, ...; 2315 * set for the entire server, independent from the; 2316 * addressed hostname.; 2317 */; 2318 ; 2319 /* Connection related */; 2320 int context_type; /* See CONTEXT_* above */; 2321 ; 2322 struct socket *listening_sockets;; 2323 struct mg_pollfd *listening_socket_fds;; 2324 unsigned int num_listening_sockets;; 2325 ; 2326 struct mg_connection *worker_connections; /* The connection struct, pre-; 2327 * allocated for each worker */; 2328 ; 2329#if defined(USE_SERVER_STATS); 2330 volatile ptrdiff_t active_connections;; 2331 volatile ptrdiff_t max_active_connections;; 2332 volatile ptrdiff_t total_connections;; 2333 volatile ptrdiff_t total_requests;; 2334 volatile int64_t total_data_read;; 2335 volatile int64_t total_data_written;; 2336#endif; 2337 ; 2338 /* Thread related */; 2339 stop_flag_t stop_flag; /* Should we stop event loop */; 2340 pthread_mutex_t thread_mutex; /* Protects client_socks or queue */; 2341 ; 2342 pthread_t masterthreadid; /* The master thread ID */; 2343 unsigned int; 2344 cfg_worker_threads; /* The number of configured worker threads. */; 2345 pthread_t *worker_threadids; /* The worker thread IDs */; 2346 unsigned long starter_thread_idx; /* thread index which called mg_start */; 2347 ; 2348 /* Connection to thread dispatching */; 2349#if defined(ALTERNATIVE_QUEUE); 2350 struct socket *client_socks;; 2351 void **client_wait_events;; 2352#else; 2353 struct socket *squeue; /* Socket queue (sq) : accepted sockets waiting for a; 2354 worker thread */; 2355 volatile int sq_head; /* Head of the socket queue */; 2356 volatile int sq_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:72477,config,configured,72477,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"2300}; 2301 ; 2302#else /* STOP_FLAG_NEEDS_LOCK */; 2303 ; 2304typedef int volatile stop_flag_t;; 2305#define STOP_FLAG_IS_ZERO(f) ((*(f)) == 0); 2306#define STOP_FLAG_IS_TWO(f) ((*(f)) == 2); 2307#define STOP_FLAG_ASSIGN(f, v) ((*(f)) = (v)); 2308 ; 2309#endif /* STOP_FLAG_NEEDS_LOCK */; 2310 ; 2311 ; 2312struct mg_context {; 2313 ; 2314 /* Part 1 - Physical context:; 2315 * This holds threads, ports, timeouts, ...; 2316 * set for the entire server, independent from the; 2317 * addressed hostname.; 2318 */; 2319 ; 2320 /* Connection related */; 2321 int context_type; /* See CONTEXT_* above */; 2322 ; 2323 struct socket *listening_sockets;; 2324 struct mg_pollfd *listening_socket_fds;; 2325 unsigned int num_listening_sockets;; 2326 ; 2327 struct mg_connection *worker_connections; /* The connection struct, pre-; 2328 * allocated for each worker */; 2329 ; 2330#if defined(USE_SERVER_STATS); 2331 volatile ptrdiff_t active_connections;; 2332 volatile ptrdiff_t max_active_connections;; 2333 volatile ptrdiff_t total_connections;; 2334 volatile ptrdiff_t total_requests;; 2335 volatile int64_t total_data_read;; 2336 volatile int64_t total_data_written;; 2337#endif; 2338 ; 2339 /* Thread related */; 2340 stop_flag_t stop_flag; /* Should we stop event loop */; 2341 pthread_mutex_t thread_mutex; /* Protects client_socks or queue */; 2342 ; 2343 pthread_t masterthreadid; /* The master thread ID */; 2344 unsigned int; 2345 cfg_worker_threads; /* The number of configured worker threads. */; 2346 pthread_t *worker_threadids; /* The worker thread IDs */; 2347 unsigned long starter_thread_idx; /* thread index which called mg_start */; 2348 ; 2349 /* Connection to thread dispatching */; 2350#if defined(ALTERNATIVE_QUEUE); 2351 struct socket *client_socks;; 2352 void **client_wait_events;; 2353#else; 2354 struct socket *squeue; /* Socket queue (sq) : accepted sockets waiting for a; 2355 worker thread */; 2356 volatile int sq_head; /* Head of the socket queue */; 2357 volatile int sq_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:72509,config,configured,72509,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"235#endif; 1236 x++[0] = c[0];; 1237 } else { // It is OK, copy result; 1238 int lp = strlen(p);; 1239 if (lp >= kBufSize) {; 1240 // make sure lx will be >= kBufSize (see below); 1241 strlcpy(x, p, kBufSize);; 1242 x += kBufSize;; 1243 break;; 1244 }; 1245 strcpy(x,p);; 1246 x += lp;; 1247 c = (b==c+1) ? e-1 : e;; 1248 }; 1249 }; 1250 }; 1251 ; 1252 x[0] = 0; lx = x - out;; 1253 if (ier && iter < 3) { strlcpy(inp, out, kBufSize); goto again; }; 1254 ncopy = (lx >= kBufSize) ? kBufSize-1 : lx;; 1255 xname[0] = 0; strncat(xname, out, ncopy);; 1256 ; 1257 delete[] buff;; 1258 ; 1259 if (ier || ncopy != lx) {; 1260 ::Error(""TSystem::ExpandFileName"", ""input: %s, output: %s"", fname, xname);; 1261 return kTRUE;; 1262 }; 1263 ; 1264 return kFALSE;; 1265}; 1266 ; 1267 ; 1268////////////////////////////////////////////////////////////////////////////////; 1269/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1270/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1271/// environment variables in a pathname. If compatibility is not an issue; 1272/// you can use on Unix directly $XXX.; 1273 ; 1274Bool_t TSystem::ExpandPathName(TString&); 1275{; 1276 return kFALSE;; 1277}; 1278 ; 1279////////////////////////////////////////////////////////////////////////////////; 1280/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1281/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1282/// environment variables in a pathname. If compatibility is not an issue; 1283/// you can use on Unix directly $XXX. The user must delete returned string.; 1284 ; 1285char *TSystem::ExpandPathName(const char *); 1286{; 1287 return nullptr;; 1288}; 1289 ; 1290////////////////////////////////////////////////////////////////////////////////; 1291/// Returns FALSE if one can access a file using the specified access mode.; 1292/// The file name must not contain any special shell characters line ~ or $,; 1293/// in t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:39168,variab,variables,39168,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,"2378 }; 2379 ; 2380 // In case of a Cling Error check components which are not found in Cling; 2381 // check that all formula components are matched otherwise emit an error; 2382 if (!fClingInitialized && !fLazyInitialization) {; 2383 //Bool_t allFunctorsMatched = false;; 2384 for (list<TFormulaFunction>::iterator it = fFuncs.begin(); it != fFuncs.end(); ++it) {; 2385 // functions are now by default always not checked; 2386 if (!it->fFound && !it->IsFuncCall()) {; 2387 //allFunctorsMatched = false;; 2388 if (it->GetNargs() == 0); 2389 Error(""ProcessFormula"", ""\""%s\"" has not been matched in the formula expression"", it->GetName());; 2390 else; 2391 Error(""ProcessFormula"", ""Could not find %s function with %d argument(s)"", it->GetName(), it->GetNargs());; 2392 }; 2393 }; 2394 Error(""ProcessFormula"",""Formula \""%s\"" is invalid !"", GetExpFormula().Data() );; 2395 fReadyToExecute = false;; 2396 }; 2397 ; 2398 // clean up un-used default variables in case formula is valid; 2399 //if (fClingInitialized && fReadyToExecute) {; 2400 //don't check fClingInitialized in case of lazy execution; 2401 if (fReadyToExecute) {; 2402 auto itvar = fVars.begin();; 2403 // need this loop because after erase change iterators; 2404 do {; 2405 if (!itvar->second.fFound) {; 2406 // std::cout << ""Erase variable "" << itvar->first << std::endl;; 2407 itvar = fVars.erase(itvar);; 2408 } else; 2409 itvar++;; 2410 } while (itvar != fVars.end());; 2411 }; 2412}; 2413 ; 2414////////////////////////////////////////////////////////////////////////////////; 2415/// Fill map with parametrized functions; 2416 ; 2417void TFormula::FillParametrizedFunctions(map<pair<TString, Int_t>, pair<TString, TString>> &functions); 2418{; 2419 // map< pair<TString,Int_t> ,pair<TString,TString> > functions;; 2420 functions.insert(; 2421 make_pair(make_pair(""gaus"", 1), make_pair(""[0]*exp(-0.5*(({V0}-[1])/[2])*(({V0}-[1])/[2]))"",; 2422 ""[0]*exp(-0.5*(({V0}-[1])/[2])*(({V0}-[1])/[2]))/(sqrt(2*pi)*[2])"")));; 2423 functions.inser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:92193,variab,variables,92193,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"24);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-10-01 15:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrumTransform.html:22769,enhance,enhanceCoeff,22769,root/html528/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html528/TSpectrumTransform.html,5,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"24);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpectrumTransform.html:22838,enhance,enhanceCoeff,22838,root/html530/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html530/TSpectrumTransform.html,5,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"24);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrumTransform.html:22838,enhance,enhanceCoeff,22838,root/html532/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html532/TSpectrumTransform.html,5,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,24.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84198,config,configuration,84198,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"242 ns/call; TRandom2 37 ns/call; TRandom3 45 ns/call. The following basic Random distributions are provided:. -Exp(tau); -Integer(imax); -Gaus(mean,sigma); -Rndm(); -Uniform(x1); -Landau(mpv,sigma); -Poisson(mean); -Binomial(ntot,prob). Random numbers distributed according to 1-d, 2-d or 3-d distributions. contained in TF1, TF2 or TF3 objects.; For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x); you can do :; TF1 *f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10);; double r = f1->GetRandom();; or you can use the UNURAN package. You need in this case to initialize UNURAN; to the function you would like to generate.; TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();. The techniques of using directly a TF1,2 or 3 function is powerful and; can be used to generate numbers in the defined range of the function.; Getting a number from a TF1,2,3 function is also quite fast.; UNURAN is a powerful and flexible tool which containes various methods for; generate random numbers for continuous distributions of one and multi-dimension.; It requires some set-up (initialization) phase and can be very fast when the distribution; parameters are not changed for every call. The following table shows some timings (in nanosecond/call); for basic functions, TF1 functions and using UNURAN obtained running; the tutorial math/testrandom.C; Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; Linux SLC4 64 bit and compiled with gcc 3.4. Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRandom.html:2270,flexible,flexible,2270,root/html528/TRandom.html,https://root.cern,https://root.cern/root/html528/TRandom.html,6,['flexible'],['flexible']
Modifiability,"2466/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[-cutg]"");; 2467/// It is possible to apply several cuts:; 2468/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg1,cutg2]"");; 2469///; 2470/// NOTE that if a TH1D named ""name"" exists in the current directory or pad and having; 2471/// a compatible axis, the histogram is reset and filled again with the projected contents of the TH2.; 2472/// In the case of axis incompatibility, an error is reported and a NULL pointer is returned.; 2473///; 2474/// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.; 2475 ; 2476TH1D *TH2::ProjectionY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 2477{; 2478 return DoProjection(false, name, firstxbin, lastxbin, option);; 2479}; 2480 ; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Replace current statistics with the values in array stats; 2484 ; 2485void TH2::PutStats(Double_t *stats); 2486{; 2487 TH1::PutStats(stats);; 2488 fTsumwy = stats[4];; 2489 fTsumwy2 = stats[5];; 2490 fTsumwxy = stats[6];; 2491}; 2492 ; 2493 ; 2494////////////////////////////////////////////////////////////////////////////////; 2495/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a norm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:102280,variab,variable,102280,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"250 Int_t nbranches = branches->GetEntriesFast();; 2251 TBranchElement *lastbranch = this;; 2252 ; 2253 TClass *currentClass = fBranchClass;; 2254 auto currentVersion = fClassVersion;; 2255 if (toplevel) {; 2256 // Note: Fragile/wrong when using conversion StreamerInfo?; 2257 currentClass = info->GetClass();; 2258 currentVersion = info->GetClassVersion();; 2259 }; 2260 ; 2261 // First find the first branch corresponding to the same class as 'this'; 2262 // branch; 2263 Int_t index = branches->IndexOf(this);; 2264 Int_t firstindex = 0;; 2265 Int_t lastindex = nbranches - 1;; 2266 if (index >= 0) {; 2267 TString fullname( GetFullName() );; 2268 Ssiz_t lastdot = fullname.Last('.');; 2269 if (lastdot == TString::kNPOS) {; 2270 // No prefix or index, thus this is a first level branch; 2271 TBranchElement* subbranch = (TBranchElement*)branches->At(0);; 2272 if (!subbranch->fInfo); 2273 subbranch->SetupInfo();; 2274 } else {; 2275 TString &thisprefix = fullname.Remove(lastdot + 1); // Mod fullname and 'rename' the variable.; 2276 for(Int_t i = index - 1; i >= 0; --i) {; 2277 TBranchElement* subbranch = (TBranchElement*)branches->At(i);; 2278 TString subbranch_name(subbranch->GetFullName());; 2279 if ( ! subbranch_name.BeginsWith(thisprefix)) {; 2280 // We moved to another data member (of the enclosing class); 2281 firstindex = i + 1;; 2282 break;; 2283 }; 2284 if (!subbranch->fInfo); 2285 subbranch->SetupInfo();; 2286 }; 2287 for(Int_t i = index; i < nbranches; ++i) {; 2288 TBranchElement* subbranch = (TBranchElement*)branches->At(i);; 2289 TString subbranch_name(subbranch->GetFullName());; 2290 if ( ! subbranch_name.BeginsWith(thisprefix)) {; 2291 lastindex = i - 1;; 2292 break;; 2293 }; 2294 }; 2295 }; 2296 } else {; 2297 // Case of a top level branch or 'empty node' (object marker for split sub-object); 2298 TString fullname( GetFullName() );; 2299 Ssiz_t lastdot = fullname.Last('.');; 2300 if (lastdot != TString::kNPOS) {; 2301 TString &thisprefix = fullname.Remove(last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:81526,variab,variable,81526,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['variab'],['variable']
Modifiability,254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.13,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97075,config,configuration,97075,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"26 if (callback_ret < 0) {; 16727 /* Callback exists and returns <0: Initializing failed. */; 16728 mg_cry_ctx_internal(phys_ctx,; 16729 ""external_ssl_ctx callback returned error: %i"",; 16730 callback_ret);; 16731 return 0;; 16732 } else if (callback_ret > 0) {; 16733 /* Callback exists and returns >0: Initializing complete,; 16734 * civetweb should not modify the SSL context. */; 16735 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16736 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16737 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16738 return 0;; 16739 }; 16740 return 1;; 16741 }; 16742 /* If the callback does not exist or return 0, civetweb must initialize; 16743 * the SSL context. Handle ""domain"" callback next. */; 16744 ; 16745 /* Check for external domain SSL_CTX callback. */; 16746 callback_ret = (phys_ctx->callbacks.external_ssl_ctx_domain == NULL); 16747 ? 0; 16748 : (phys_ctx->callbacks.external_ssl_ctx_domain(; 16749 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16750 &ssl_ctx,; 16751 phys_ctx->user_data));; 16752 ; 16753 if (callback_ret < 0) {; 16754 /* Callback < 0: Error. Abort init. */; 16755 mg_cry_ctx_internal(; 16756 phys_ctx,; 16757 ""external_ssl_ctx_domain callback returned error: %i"",; 16758 callback_ret);; 16759 return 0;; 16760 } else if (callback_ret > 0) {; 16761 /* Callback > 0: Consider init done. */; 16762 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16763 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16764 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16765 return 0;; 16766 }; 16767 return 1;; 16768 }; 16769 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16770 * 0, CivetWeb should continue initializing SSL */; 16771 ; 16772 /* If PEM file is not specified and the init_ssl callbacks; 16773 * are not specified, setup will fail. */; 16774 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16775 && (phys_ctx->callbacks.init_ssl == NULL); 16776 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16777 /* No certificate and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:497053,config,config,497053,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"268 private:; 269 friend class MethodCategory;; 270 friend class MethodCompositeBase;; 271 void WriteStateToXML ( void* parent ) const;; 272 void ReadStateFromXML ( void* parent );; 273 void WriteStateToStream ( std::ostream& tf ) const; // needed for MakeClass; 274 void WriteVarsToStream ( std::ostream& tf, const TString& prefix = """" ) const; // needed for MakeClass; 275 ; 276 ; 277 public: // these two need to be public, they are used to read in-memory weight-files; 278 void ReadStateFromStream ( std::istream& tf ); // backward compatibility; 279 void ReadStateFromStream ( TFile& rf ); // backward compatibility; 280 void ReadStateFromXMLString( const char* xmlstr ); // for reading from memory; 281 ; 282 private:; 283 // the variable information; 284 void AddVarsXMLTo ( void* parent ) const;; 285 void AddSpectatorsXMLTo ( void* parent ) const;; 286 void AddTargetsXMLTo ( void* parent ) const;; 287 void AddClassesXMLTo ( void* parent ) const;; 288 void ReadVariablesFromXML ( void* varnode );; 289 void ReadSpectatorsFromXML( void* specnode);; 290 void ReadTargetsFromXML ( void* tarnode );; 291 void ReadClassesFromXML ( void* clsnode );; 292 void ReadVarsFromStream ( std::istream& istr ); // backward compatibility; 293 ; 294 public:; 295 // ---------------------------------------------------------------------------; 296 ; 297 // write evaluation histograms into target file; 298 virtual void WriteEvaluationHistosToFile(Types::ETreeType treetype);; 299 ; 300 // write classifier-specific monitoring information to target file; 301 virtual void WriteMonitoringHistosToFile() const;; 302 ; 303 // ---------- public evaluation methods --------------------------------------; 304 ; 305 // individual initialization for testing of each method; 306 // overload this one for individual initialisation of the testing,; 307 // it is then called automatically within the global ""TestInit""; 308 ; 309 // variables (and private member functions) for the Evaluation:; 310 // get the efficiency.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:12003,variab,variables,12003,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variables']
Modifiability,"27 if (callback_ret < 0) {; 16728 /* Callback exists and returns <0: Initializing failed. */; 16729 mg_cry_ctx_internal(phys_ctx,; 16730 ""external_ssl_ctx callback returned error: %i"",; 16731 callback_ret);; 16732 return 0;; 16733 } else if (callback_ret > 0) {; 16734 /* Callback exists and returns >0: Initializing complete,; 16735 * civetweb should not modify the SSL context. */; 16736 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16737 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16738 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16739 return 0;; 16740 }; 16741 return 1;; 16742 }; 16743 /* If the callback does not exist or return 0, civetweb must initialize; 16744 * the SSL context. Handle ""domain"" callback next. */; 16745 ; 16746 /* Check for external domain SSL_CTX callback. */; 16747 callback_ret = (phys_ctx->callbacks.external_ssl_ctx_domain == NULL); 16748 ? 0; 16749 : (phys_ctx->callbacks.external_ssl_ctx_domain(; 16750 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16751 &ssl_ctx,; 16752 phys_ctx->user_data));; 16753 ; 16754 if (callback_ret < 0) {; 16755 /* Callback < 0: Error. Abort init. */; 16756 mg_cry_ctx_internal(; 16757 phys_ctx,; 16758 ""external_ssl_ctx_domain callback returned error: %i"",; 16759 callback_ret);; 16760 return 0;; 16761 } else if (callback_ret > 0) {; 16762 /* Callback > 0: Consider init done. */; 16763 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16764 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16765 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16766 return 0;; 16767 }; 16768 return 1;; 16769 }; 16770 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16771 * 0, CivetWeb should continue initializing SSL */; 16772 ; 16773 /* If PEM file is not specified and the init_ssl callbacks; 16774 * are not specified, setup will fail. */; 16775 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16776 && (phys_ctx->callbacks.init_ssl == NULL); 16777 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16778 /* No certificate and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:497086,config,config,497086,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,28 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81030,config,configuration,81030,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"286 if (opt.Contains(""M"")) flag = ""M"";; 287 if (opt.Contains(""P"")) flag = ""P"";; 288 if (opt.Contains(""EX"")) flag = ""EX"";; 289 ; 290 if (!opt.Contains(""K"")) {; 291 if (fgFFT){; 292 Int_t ndiff = 0;; 293 if (fgFFT->GetNdim()!=ndim || strcmp(fgFFT->GetType(),""R2R"")!=0); 294 ndiff++;; 295 else {; 296 Int_t *ncurrent = fgFFT->GetN();; 297 for (Int_t i=0; i<ndim; i++) {; 298 if (n[i] != ncurrent[i]); 299 ndiff++;; 300 }; 301 ; 302 }; 303 if (ndiff>0) {; 304 delete fgFFT;; 305 fgFFT = nullptr;; 306 }; 307 }; 308 }; 309 TVirtualFFT *fft = nullptr;; 310 ; 311 R__LOCKGUARD(gROOTMutex);; 312 ; 313 if (!fgFFT || opt.Contains(""K"")) {; 314 TPluginHandler *h;; 315 TString pluginname;; 316 if (fgDefault.Length()==0) fgDefault=""fftw"";; 317 if (strcmp(fgDefault.Data(),""fftw"")==0) {; 318 pluginname = ""fftwr2r"";; 319 if ((h=gROOT->GetPluginManager()->FindHandler(""TVirtualFFT"", pluginname))) {; 320 if (h->LoadPlugin()==-1){; 321 ::Error(""TVirtualFFT::SineCosine"", ""handler not found"");; 322 return nullptr;; 323 }; 324 fft = (TVirtualFFT*)h->ExecPlugin(3, ndim, n, kFALSE);; 325 if (!fft) {; 326 ::Error(""TVirtualFFT::SineCosine"", ""plugin failed to create TVirtualFFT object"");; 327 return nullptr;; 328 }; 329 fft->Init(flag, 0, r2rkind);; 330 if (!opt.Contains(""K"")); 331 fgFFT = fft;; 332 return fft;; 333 } else {; 334 ::Error(""TVirtualFFT::SineCosine"", ""handler not found"");; 335 return nullptr;; 336 }; 337 }; 338 }; 339 ; 340 //if (fgFFT->GetTransformFlag()!=flag); 341 fgFFT->Init(flag,0, r2rkind);; 342 return fgFFT;; 343}; 344 ; 345////////////////////////////////////////////////////////////////////////////////; 346/// static: return current fgFFT; 347 ; 348TVirtualFFT* TVirtualFFT::GetCurrentTransform(); 349{; 350 if (fgFFT); 351 return fgFFT;; 352 else{; 353 ::Warning(""TVirtualFFT::GetCurrentTransform"", ""fgFFT is not defined yet"");; 354 return nullptr;; 355 }; 356}; 357 ; 358////////////////////////////////////////////////////////////////////////////////; 359/// static: set the current t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html:11813,plugin,pluginname,11813,doc/master/TVirtualFFT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html,3,['plugin'],"['plugin', 'pluginname']"
Modifiability,"2::TH2 for explanation of parameters) ;  ;  TH2I (const TH2I &h2i);  Copy constructor. ;  ;  ~TH2I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2I & operator= (const TH2I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, Double_t w);  Increment cell defined by x,y by a weight w. ;  ; void FillN (Int_t ntimes, const Double_t *x, const Double_t *y, const Double_t *w, Int_t stride=1) override;  Fill a 2-D histogram with an array of values and weights. ;  ; void FillN (Int_t, const Double_t *, const Double_t *, Int_t) override;  Fill this his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2I.html:2387,inherit,inherited,2387,doc/master/classTH2I.html,https://root.cern,https://root.cern/doc/master/classTH2I.html,1,['inherit'],['inherited']
Modifiability,"2::TH2 for explanation of parameters) ;  ;  TH2L (const TH2L &h2l);  Copy constructor. ;  ;  ~TH2L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2L & operator= (const TH2L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, Double_t w);  Increment cell defined by x,y by a weight w. ;  ; void FillN (Int_t ntimes, const Double_t *x, const Double_t *y, const Double_t *w, Int_t stride=1) override;  Fill a 2-D histogram with an array of values and weights. ;  ; void FillN (Int_t, const Double_t *, const Double_t *, Int_t) override;  Fill this his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:2389,inherit,inherited,2389,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['inherit'],['inherited']
Modifiability,"2; kLanczos3; kLanczos5; kLanczos8; kTrim; };; enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; Int_tfFcnCallnumber of external function calls (RootFinder); TMVA::Volume*fHelpVolumeauxiliary variable; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Float_t>fAverageRMSaverage RMS of signal and background; TMVA::BinarySearchTree*fBinaryTreebinary tree; vector<Float_t>*fDeltasize of volume; Float_tfDeltaFracfraction of RMS; Double_tfGaussSigmasize of Gauss in adaptive volume ; Double_tfGaussSigmaNormsize of Gauss in adaptive volume (normalised to dimensions); Float_tfInitialScaleinitial scale for adaptive volume; Bool_tfInitializedVolumeEleis volume element initialized ?; TMVA::MethodPDERS::EKernelEstimatorfKernelEstimator; TStringfKernelStringoption kernel estimator; Float_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodPDERS.html:17852,variab,variable,17852,root/html528/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodPDERS.html,2,['variab'],"['variable', 'variables']"
Modifiability,"2D->fX ;  ; Double_t * fXN;  ! fGraph2D vectors normalized of size fNpoints ;  ; Double_t fXNmax;  ! Maximum value of fXN ;  ; Double_t fXNmin;  ! Minimum value of fXN ;  ; Double_t fXoffset;  ! ;  ; Double_t fXScaleFactor;  ! ;  ; Double_t * fY;  ! Pointer to fGraph2D->fY ;  ; Double_t * fYN;  ! fGraph2D vectors normalized of size fNpoints ;  ; Double_t fYNmax;  ! Maximum value of fYN ;  ; Double_t fYNmin;  ! Minimum value of fYN ;  ; Double_t fYoffset;  ! Parameters used to normalize user data ;  ; Double_t fYScaleFactor;  ! ;  ; Double_t * fZ;  ! Pointer to fGraph2D->fZ ;  ; Double_t fZout;  ! Histogram bin height for points lying outside the convex hull ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGraphDelaunay (const TGraphDelaunay &)=delete;  ; TGraphDelaunay & operator= (const TGraphDelaunay &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGraphDelaunay.h>. Inheritance diagram for TGraphDelaunay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphDelaunay() [1/3]. TGraphDelaunay::TGraphDelaunay ; (; const TGraphDelaunay & ; ). privatedelete . ◆ TGraphDelaunay() [2/3]. TGraphDelauna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay.html:15205,inherit,inherited,15205,doc/master/classTGraphDelaunay.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay.html,1,['inherit'],['inherited']
Modifiability,"2Poly is a TList of TH2PolyBin objects with methods to manipulate them.; Bins are defined using one of the AddBin() methods. The bin definition should be done before filling.; The histogram can be filled with Fill(Double_t x, Double_t y, Double_t w) . w is the weight. If no weight is specified, it is assumed to be 1.; Not all histogram's area need to be binned. Filling an area without bins, will falls into the overflows. Adding a bin is not retroactive; it doesn't affect previous fillings. A Fill() call, that was previously ignored due to the lack of a bin at the specified location, is not reconsidered when that location is binned later.; If there are two overlapping bins, the first one in the list will be incremented by Fill().; The histogram may automatically extends its limits if a bin outside the histogram limits is added. This is done when the default constructor (with no arguments) is used. It generates a histogram with no limits along the X and Y axis. Adding bins to it will extend it up to a proper size.; TH2Poly implements a partitioning algorithm to speed up bins' filling (see the ""Partitioning Algorithm"" section for details). The partitioning algorithm divides the histogram into regions called cells. The bins that each cell intersects are recorded in an array of TLists. When a coordinate in the histogram is to be filled; the method (quickly) finds which cell the coordinate belongs. It then only loops over the bins intersecting that cell to find the bin the input coordinate corresponds to. The partitioning of the histogram is updated continuously as each bin is added. The default number of cells on each axis is 25. This number could be set to another value in the constructor or adjusted later by calling the ChangePartition(Int_t, Int_t) method. The partitioning algorithm is considerably faster than the brute force algorithm (i.e. checking if each bin contains the input coordinates), especially if the histogram is to be filled many times.; The following ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:1735,extend,extend,1735,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['extend'],['extend']
Modifiability,"2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3(); Default constructor. TH3(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3(const TH3& ); Copy constructor.; The list of functions is not copied. (Use Clone if needed). ~TH3(); Destructor. void Copy(TObject& hnew) const; Copy. Int_t BufferEmpty(Int_t action = 0); Fill histogram with all entries in the buffer.; action = -1 histogram is reset and refilled from the buffer (called by THistPainter::Paint); action = 0 histogram is filled from the buffer; action = 1 histogram is filled and buffer is deleted; The buffer is automatically deleted when the number of entries; in the buffer is greater than the number of entries in the histogram. Int_t BufferF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH3.html:25488,variab,variable,25488,root/html528/TH3.html,https://root.cern,https://root.cern/root/html528/TH3.html,4,['variab'],['variable']
Modifiability,"2X (std::vector< Float_t > &, const std::vector< Float_t > &, Int_t cls) const;  Perform the back-transformation from the principal components pc, and return x It's the users responsibility to make sure that both x and pc are of the right size (i.e., memory must be allocated for p) ;  ; void X2P (std::vector< Float_t > &, const std::vector< Float_t > &, Int_t cls) const;  Calculate the principal components from the original data vector x, and return it in p (function extracted from TPrincipal::X2P) It's the users responsibility to make sure that both x and p are of the right size (i.e., memory must be allocated for p) ;  . Private Attributes; std::vector< TMatrixD * > fEigenVectors;  eigenvectors ;  ; std::vector< TVectorD * > fMeanValues;  mean values ;  . Additional Inherited Members;  Public Types inherited from TMVA::VariableTransformBase; typedef VectorOfCharAndInt::iterator ItVarTypeIdx;  ; typedef VectorOfCharAndInt::const_iterator ItVarTypeIdxConst;  ; typedef std::vector< std::pair< Char_t, UInt_t > > VectorOfCharAndInt;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::VariableTransformBase; void CalcNorm (const std::vector< const Event * > &);  TODO --> adapt to variable,target,spectator selection method to calculate minimum, maximum, mean, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html:13565,inherit,inherited,13565,doc/master/classTMVA_1_1VariablePCATransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html,2,['inherit'],['inherited']
Modifiability,"2] + 0.18581*[var3] - 0.1623*[var4] <= 3.09071; : Cut[ 2]: -3.9944 < - 0.19981*[myvar1] + 0.18581*[myvar2] + 1.7913*[var3] - 0.77231*[var4] <= 1e+30; : Cut[ 3]: 0.0311777 < - 0.82843*[myvar1] - 0.1623*[myvar2] - 0.77231*[var3] + 2.1918*[var4] <= 1e+30; : ------------------------------------------------------------------------------------------------------------------------; : Elapsed time for training with 2000 events: 2.78 sec ; CutsD : [dataset] : Evaluation of CutsD on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.00312 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_CutsD.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_CutsD.class.C␛[0m; : TMVAC.root:/dataset/Method_Cuts/CutsD; Factory : Training finished; : ; Factory : Train method: Likelihood for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Likelihood ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:27948,variab,variables,27948,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"2b = new TH1S(""ha2b"",""ha2"",100,0,1);; a2->Add(ha2a);; a2->Add(ha2b);. T.Branch(l,16000,2);; T.Print();; }. Int_t Branch(const char* folder, Int_t bufsize = 32000, Int_t splitlevel = 99); Create one branch for each element in the folder.; Returns the total number of branches created. TBranch* Branch(const char* name, void* address, const char* leaflist, Int_t bufsize = 32000); Create a new TTree Branch. This Branch constructor is provided to support non-objects in; a Tree. The variables described in leaflist may be simple; variables or structures. // See the two following; constructors for writing objects in a Tree. By default the branch buffers are stored in the same file as the Tree.; use TBranch::SetFile to specify a different file. * address is the address of the first item of a structure.; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : a boolean (Bool_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of byte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:44500,variab,variable,44500,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,2,['variab'],['variable']
Modifiability,"3 )); };  . #include <TMVA/PDEFoamMultiTarget.h>. Inheritance diagram for TMVA::PDEFoamMultiTarget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamMultiTarget() [1/3]. TMVA::PDEFoamMultiTarget::PDEFoamMultiTarget ; (; const PDEFoamMultiTarget & ; from). protected . Copy Constructor NOT IMPLEMENTED (NEVER USED) ; Definition at line 104 of file PDEFoamMultiTarget.cxx. ◆ PDEFoamMultiTarget() [2/3]. TMVA::PDEFoamMultiTarget::PDEFoamMultiTarget ; (; ). Default constructor for streamer, user should not use it. ; Definition at line 68 of file PDEFoamMultiTarget.cxx. ◆ PDEFoamMultiTarget() [3/3]. TMVA::PDEFoamMultiTarget::PDEFoamMultiTarget ; (; const TString & ; name, . ETargetSelection ; ts . ). User constructor. ; Parameters:. name - name of PDEFoam object; ts - target selection method used in GetCellValue(const std::map<Int_t, Float_t>& xvec, ECellValue) Candidates are: TMVA::kMean, TMVA::kMpv; TMVA::kMean - The function GetCellValue() finds all cells which contain a given event vector 'xvec' and returns the mean target (for every target variable in the foam).; TMVA::kMpv - The function GetCellValue() finds all cells which contain a given event vector 'xvec' and returns the most probable target (for every target variable in the foam), that is the target value which corresponds to the cell with the largest event density. . Definition at line 95 of file PDEFoamMultiTarget.cxx. ◆ ~PDEFoamMultiTarget(). virtual TMVA::PDEFoamMultiTarget::~PDEFoamMultiTarget ; (; ). inlinevirtual . Definition at line 60 of file PDEFoamMultiTarget.h. Member Function Documentation. ◆ CalculateMean(). void TMVA::PDEFoamMultiTarget::CalculateMean ; (; std::map< Int_t, Float_t > & ; target, . const std::vector< PDEFoamCell * > & ; cells . ). protectedvirtual . This function calculates the mean target value from a given number of cells. ; As weight the event density of the cell is used.; Parameters:. t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:21465,variab,variable,21465,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,1,['variab'],['variable']
Modifiability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:29639,inherit,inherited,29639,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['inherit'],['inherited']
Modifiability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; virtual double evaluate () const =0;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsMoment.html:52066,inherit,inherited,52066,doc/master/classRooAbsMoment.html,https://root.cern,https://root.cern/doc/master/classRooAbsMoment.html,2,['inherit'],['inherited']
Modifiability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvCoefVar.html:52155,inherit,inherited,52155,doc/master/classRooConvCoefVar.html,https://root.cern,https://root.cern/doc/master/classRooConvCoefVar.html,8,['inherit'],['inherited']
Modifiability,"3 // populate parts of the computation graph for which we only have ""empty shells"", e.g. RJittedActions and; 224 // RJittedFilters; 225 resPtr.fLoopManager->Jit();; 226 ; 227 std::unique_ptr<RDFInternal::RActionBase> variedAction;; 228 std::vector<std::shared_ptr<T>> variedResults;; 229 ; 230 std::shared_ptr<RDFInternal::RActionBase> nominalAction = resPtr.fActionPtr;; 231 std::vector<std::string> variations = nominalAction->GetVariations();; 232 const auto nVariations = variations.size();; 233 ; 234 if (nVariations > 0) {; 235 // clone the result once for each variation; 236 variedResults.reserve(nVariations);; 237 for (auto i = 0u; i < nVariations; ++i){; 238 // implicitly assuming that T is copiable: this should be the case; 239 // for all result types in use, as they are copied for each slot; 240 variedResults.emplace_back(new T{*resPtr.fObjPtr});; 241 ; 242 // Check if the result's type T inherits from TNamed; 243 if constexpr (std::is_base_of<TNamed, T>::value) {; 244 // Get the current variation name; 245 std::string variationName = variations[i];; 246 // Replace the colon with an underscore; 247 std::replace(variationName.begin(), variationName.end(), ':', '_'); ; 248 // Get a pointer to the corresponding varied result; 249 auto &variedResult = variedResults.back();; 250 // Set the varied result's name to NOMINALNAME_VARIATIONAME; 251 variedResult->SetName((std::string(variedResult->GetName()) + ""_"" + variationName).c_str());; 252 }; 253 }; 254 ; 255 std::vector<void *> typeErasedResults;; 256 typeErasedResults.reserve(variedResults.size());; 257 for (auto &res : variedResults); 258 typeErasedResults.emplace_back(&res);; 259 ; 260 // Create the RVariedAction and inject it in the computation graph.; 261 // This recursively creates all the required varied column readers and upstream nodes of the computation graph.; 262 variedAction = nominalAction->MakeVariedAction(std::move(typeErasedResults));; 263 }; 264 ; 265 return RDFInternal::MakeResultMap<T>(resPtr.fObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx_source.html:11169,inherit,inherits,11169,doc/master/RDFHelpers_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx_source.html,1,['inherit'],['inherits']
Modifiability,"3 43480.6 10; : 1173 | 2.42741 2.58076 0.0200421 0.00174997 43734.7 11; : 1174 | 2.37753 2.26267 0.0200588 0.00177748 43760.5 12; : 1175 | 2.22445 2.16696 0.0202566 0.0017593 43249.6 13; : 1176 | 2.40448 2.17977 0.0200526 0.00175764 43727.8 14; : 1177 | 2.49342 2.82323 0.0202598 0.00176322 43251.3 15; : 1178 | 2.31353 3.17049 0.0200462 0.00175709 43741.9 16; : 1179 | 2.25997 2.02334 0.0201856 0.00175132 43397.5 17; : 1180 | 2.74518 2.558 0.020345 0.00180582 43151.9 18; : 1181 | 2.36208 2.385 0.0203127 0.00179 43190.3 19; : 1182 | 2.36099 2.04294 0.0204332 0.00181567 42970.2 20; : 1183 | 2.27988 2.15749 0.0203871 0.00176421 42957.8 21; : ; : Elapsed time for training with 1000 events: 23.9 sec ; : Dataset[datasetreg] : Create results for training; : Dataset[datasetreg] : Evaluation of DNN_CPU on training sample; : Dataset[datasetreg] : Elapsed time for evaluation of 1000 events: 0.0289 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: ␛[0;36mdatasetreg/weights/TMVARegression_DNN_CPU.weights.xml␛[0m; Factory : Training finished; : ; Factory : Train method: BDTG for Regression; : ; : Regression Loss Function: Huber; : Training 2000 Decision Trees ... patience please; : Elapsed time for training with 1000 events: 1.58 sec ; : Dataset[datasetreg] : Create results for training; : Dataset[datasetreg] : Evaluation of BDTG on training sample; : Dataset[datasetreg] : Elapsed time for evaluation of 1000 events: 0.354 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: ␛[0;36mdatasetreg/weights/TMVARegression_BDTG.weights.xml␛[0m; : TMVAReg.root:/datasetreg/Method_BDT/BDTG; Factory : Training finished; : ; TH1.Print Name = TrainingHistory_DNN_CPU_trainingError, Entries= 0, Total sum= 3.72139e+06; TH1.Print Name = TrainingHistory_DNN_CPU_valError, Entries= 0, Tota",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:125147,variab,variable,125147,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,"3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class FitConfig; 12 ; 13#ifndef ROOT_Fit_FitConfig; 14#define ROOT_Fit_FitConfig; 15 ; 16 ; 17#include ""Fit/ParameterSettings.h""; 18 ; 19#include ""Math/MinimizerOptions.h""; 20 ; 21#include ""Math/IParamFunctionfwd.h""; 22 ; 23#include ""TMath.h""; 24 ; 25#include <vector>; 26#include <string>; 27 ; 28namespace ROOT {; 29 ; 30 namespace Math {; 31 ; 32 class Minimizer;; 33 class MinimizerOptions;; 34 }; 35 ; 36 namespace Fit {; 37 ; 38 class FitResult;; 39 ; 40//___________________________________________________________________________________; 41/**; 42 Class describing the configuration of the fit, options and parameter settings; 43 using the ROOT::Fit::ParameterSettings class; 44 ; 45 @ingroup FitMain; 46*/; 47class FitConfig {; 48 ; 49public:; 50 ; 51 /**; 52 Default constructor; 53 */; 54 FitConfig (unsigned int npar = 0);; 55 ; 56 ; 57 /*; 58 Copy constructor; 59 */; 60 FitConfig(const FitConfig & rhs);; 61 ; 62 /**; 63 Destructor; 64 */; 65 ~FitConfig ();; 66 ; 67 /*; 68 Assignment operator; 69 */; 70 FitConfig & operator= (const FitConfig & rhs);; 71 ; 72 ; 73 /**; 74 get the parameter settings for the i-th parameter (const method); 75 */; 76 const ParameterSettings & ParSettings(unsigned int i) const { return fSettings.at(i); }; 77 ; 78 /**; 79 get the parameter settings for the i-th parameter (non-const method); 80 */; 81 ParameterSettings & ParSettings(unsigned int i) { return fSettings.at(i); }; 82 ; 83 /**; 84 get the vector of parameter settings (const method); 85 */; 86 const std::vector<ROOT::Fit::ParameterSettings> & ParamsSettings() const { return fSettings; }; 87 ; 88 /**; 89 get the vector of parameter settings (non-const method); 90 */; 91 std::vector<ROOT::Fit::ParameterSettings> & ParamsSetting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:1099,config,configuration,1099,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['config'],['configuration']
Modifiability,"3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); RooChi2Var constructor. Optional arguments taken. Extended() -- Include extended term in calculation; DataError() -- Choose between Poisson errors and Sum-of-weights errors; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define projected observables; Verbose() -- Verbose output of GOF framework. RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitCutRange = kTRUE, RooAbsData::ErrorType = RooDataHist::SumW2); Constructor of a chi2 for given p.d.f. with respect given binned; dataset. If cutRange is specified the calculation of the chi2 is; restricted to that named range. If addCoefRange is specified, the; interpretation of fractions for all component RooAddPdfs that do; not have a frozen range interpretation is set to chosen range; name. If nCPU is greater than one the chi^2 calculation is; paralellized over the specified number of processors. If; interleave is true the partitioning of event over processors; follows a (i % n == i_set) strategy rather than a bulk; partitioning strategy which may result in unequal load balancing; in binned datasets with many (adjacent) zero bins. If; splitCutRange is true the cutRange is used to construct an; individual cutRange for each RooSimultaneous index category state; name cutRange_{indexStateName}. RooC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooChi2Var.html:45230,extend,extended,45230,root/html534/RooChi2Var.html,https://root.cern,https://root.cern/root/html534/RooChi2Var.html,1,['extend'],['extended']
Modifiability,"3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); RooChi2Var constructor. Optional arguments taken. Extended() -- Include extended term in calculation; DataError() -- Choose between Poisson errors and Sum-of-weights errors; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define projected observables; Verbose() -- Verbose output of GOF framework. RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitCutRange = kTRUE, RooDataHist::ErrorType = RooDataHist::SumW2); Constructor of a chi2 for given p.d.f. with respect given binned; dataset. If cutRange is specified the calculation of the chi2 is; restricted to that named range. If addCoefRange is specified, the; interpretation of fractions for all component RooAddPdfs that do; not have a frozen range interpretation is set to chosen range; name. If nCPU is greater than one the chi^2 calculation is; paralellized over the specified number of processors. If; interleave is true the partitioning of event over processors; follows a (i % n == i_set) strategy rather than a bulk; partitioning strategy which may result in unequal load balancing; in binned datasets with many (adjacent) zero bins. If; splitCutRange is true the cutRange is used to construct an; individual cutRange for each RooSimultaneous index category state; name cutRange_{indexStateName}. RooC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooChi2Var.html:46917,extend,extended,46917,root/html602/RooChi2Var.html,https://root.cern,https://root.cern/root/html602/RooChi2Var.html,2,['extend'],['extended']
Modifiability,"3 Box (Candle) Plots; ; A Box Plot (also known as a “box-and whisker” plot or “candle stick” plot) is a convenient way to describe graphically a data distribution (D) with only the five numbers. It was invented in 1977 by John Tukey. The five numbers are:. The minimum value of the distribution D (Min).; The lower quartile (Q1): 25% of the data points in D are less than Q1.; The median (M): 50% of the data points in D are less than M.; The upper quartile (Q3): 75% of the data points in D are less than Q3.; The maximum value of the distribution D (Max). A box plot describes a distribution with only five numbers. In ROOT Box Plots (Candle Plots) can be produced from a TTree using the “candle” option in TTree::Draw().; tree->Draw(“px:cos(py):sin(pz)”,””,”candle”);; 12.20.9 Using TTree::Scan. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection.; root[] MyTree->Scan();; will print the first 8 variables of the tree.; root[] MyTree->Scan(""*"");; will print all the variable of the tree.; Specific variables of the tree can be explicit selected by list them in column separated list:; root[] MyTree->Scan(""var1:var2:var3"");; will print the values of var1, var2 and var3. A selection can be applied in the second argument:; root[] MyTree->Scan(""var1:var2:var3"",""var1==0"");; will print the values of var1, var2 and var3 for the entries where var1 is exactly 0.; TTree::Scan returns the number of entries passing the selection. By default 50 rows are shown before TTree::Scan pauses and ask you to press the Enter key to see the next 50 rows. You can change the default number of rows to be shown before <CR> via mytree->SetScanfield(maxrows) where maxrows is 50 by default. If maxrows is set to 0 all rows of the Tree are shown. This option is interesting when dumping the contents of a Tree to an ascii file, eg from the command line:; root[] tree->SetScanField(0);; root[] tree->Scan(""*""); >tree.log; will create a file tree.log.; Arrays (within an entr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:618838,variab,variable,618838,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['variab'],['variable']
Modifiability,"3 }; 134 }; 135 ; 136 VariableTransformBase* transformation = NULL;; 137 if (trName == ""I"" || trName == ""Ident"" || trName == ""Identity"") {; 138 if (variables.Length() == 0) variables = ""_V_"";; 139 transformation = new VariableIdentityTransform(dataInfo);; 140 }; 141 else if (trName == ""D"" || trName == ""Deco"" || trName == ""Decorrelate"") {; 142 if (variables.Length() == 0) variables = ""_V_"";; 143 transformation = new VariableDecorrTransform(dataInfo);; 144 }; 145 else if (trName == ""P"" || trName == ""PCA"") {; 146 if (variables.Length() == 0) variables = ""_V_"";; 147 transformation = new VariablePCATransform(dataInfo);; 148 }; 149 else if (trName == ""U"" || trName == ""Uniform"") {; 150 if (variables.Length() == 0) variables = ""_V_,_T_"";; 151 transformation = new VariableGaussTransform(dataInfo, ""Uniform"" );; 152 }; 153 else if (trName == ""G"" || trName == ""Gauss"") {; 154 if (variables.Length() == 0) variables = ""_V_"";; 155 transformation = new VariableGaussTransform(dataInfo);; 156 }; 157 else if (trName == ""N"" || trName == ""Norm"" || trName == ""Normalise"" || trName == ""Normalize"") {; 158 if (variables.Length() == 0) variables = ""_V_,_T_"";; 159 transformation = new VariableNormalizeTransform(dataInfo);; 160 }; 161 else; 162 log << kFATAL << Form(""Dataset[%s] : "",dataInfo.GetName()); 163 << ""<ProcessOptions> Variable transform '""; 164 << trName << ""' unknown."" << Endl;; 165 ; 166 ; 167 if (transformation) {; 168 ClassInfo* clsInfo = dataInfo.GetClassInfo(idxCls);; 169 if (clsInfo); 170 log << kHEADER << Form(""[%s] : "",dataInfo.GetName()); 171 << ""Create Transformation \"""" << trName << ""\"" with reference class ""; 172 << clsInfo->GetName() << ""=(""<< idxCls <<"")"" << Endl << Endl;; 173 else; 174 log << kHEADER << Form(""[%s] : "",dataInfo.GetName()); 175 << ""Create Transformation \"""" << trName << ""\"" with events from all classes.""; 176 << Endl << Endl;; 177 ; 178 transformation->SelectInput(variables);; 179 transformationHandler.AddTransformation(transformation, idxCls);; 180 }; 181",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:6385,variab,variables,6385,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,2,['variab'],['variables']
Modifiability,"3 };; 2444 ; 2445 template <typename To>; 2446 struct ConvertBasicType<BitsMarker, To, Generic> {; 2447 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2448 {; 2449 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2450 ; 2451 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2452 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2453 Int_t nvalues = proxy->Size();; 2454 ; 2455 UInt_t *items_storage = new UInt_t[nvalues];; 2456 UInt_t *items = items_storage;; 2457 ; 2458 const Int_t offset = config->fOffset;; 2459 Next_t next = loopconfig->fNext;; 2460 ; 2461 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2462 void *iter = loopconfig->fCopyIterator(&iterator,start);; 2463 void *addr;; 2464 while( (addr = next(iter,end)) ) {; 2465 buf >> (*items);; 2466 if (((*items) & kIsReferenced) != 0) {; 2467 HandleReferencedTObject(buf, addr, config);; 2468 }; 2469 To *x = (To*)( ((char*)addr) + offset );; 2470 *x = (To)(*items);; 2471 ++items;; 2472 }; 2473 if (iter != &iterator[0]) {; 2474 loopconfig->fDeleteIterator(iter);; 2475 }; 2476 ; 2477 delete [] items_storage;; 2478 return 0;; 2479 }; 2480 };; 2481 ; 2482 template <typename From, typename To, template <typename F, typename T> class Converter >; 2483 struct ConvertBasicType<WithFactorMarker<From>,To,Converter > {; 2484 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2485 {; 2486 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2487 ; 2488 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2489 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2490 Int_t nvalues = proxy->Size();; 2491 ; 2492 TConfSTLWithFactor *conf = (TConfSTLWithFactor *)config;; 2493 ; 2494 From *items = new From[nvalues];; 2495 buf.ReadFastArrayWithFactor(items, n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:99390,config,config,99390,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"3"");; // Add the second tree to the first tree as a friend; t3->AddFriend(""t3f"",""tree3f.root"");; // Draw pz which is in the first tree and use pt; // in the condition. pt is in the friend tree.; t3->Draw(""pz"",""pt>3"");; }. // This is executed when typing .x tree3.C; void tree3() {; tree3w();; tree3r();; }; 12.17 Example 4: A Tree with an Event Class; This example is a simplified version of $ROOTSYS/test/MainEvent.cxx and where Event objects are saved in a tree. The full definition of Event is in $ROOTSYS/test/Event.h. To execute this macro, you will need the library $ROOTSYS/test/libEvent.so. If it does not exist you can build the test directory applications by following the instruction in the $ROOTSYS/test/README file.; In this example we will show. the difference in splitting or not splitting a branch; how to read selected branches of the tree,; how to print a selected entry. 12.17.1 The Event Class; Event is a descendent of TObject. As such it inherits the data members of TObject and its methods such as Dump() and Inspect()andWrite(). In addition, because it inherits from TObject it can be a member of a collection. To summarize, the advantages of inheriting from a TObject are:. Inherit the Write, Inspect, and Dump methods; Enables a class to be a member of a ROOT collection; Enables RTTI. Below is the list of the Event data members. It contains a character array, several integers, a floating-point number, and an EventHeader object. The EventHeader class is described in the following paragraph. Event also has two pointers, one to a TClonesArray of tracks and one to a histogram. The string “->” in the comment field of the members *fTracks and *fH instructs the automatic Streamer to assume that the objects *fTracks and *fH are never null pointers and that fTracks->Streamer can be used instead of the more time consuming form R__b << fTracks.; class Event : public TObject {; private:; char fType[20];; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Float_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:575323,inherit,inherits,575323,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['inherit'],['inherits']
Modifiability,"3### 1 - Expression using variable x and no parameters; 264 ; 265#### Case 1: inline expression using standard C++ functions/operators; 266 ; 267Begin_Macro(source); 268{; 269 auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; 270 fa1->Draw();; 271}; 272End_Macro; 273 ; 274#### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; 275 ; 276 ; 277Begin_Macro(source); 278{; 279 auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; 280 fa2->Draw();; 281}; 282End_Macro; 283 ; 284#### Case 3: inline expression using a user defined CLING function by name; 285 ; 286~~~~{.cpp}; 287Double_t myFunc(double x) { return x+sin(x); }; 288....; 289auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; 290fa3->Draw();; 291~~~~; 292 ; 293\anchor F2; 294### 2 - Expression using variable x with parameters; 295 ; 296#### Case 1: inline expression using standard C++ functions/operators; 297 ; 298* Example a:; 299 ; 300 ; 301~~~~{.cpp}; 302auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; 303~~~~; 304 ; 305This creates a function of variable x with 2 parameters. The parameters must be initialized via:; 306 ; 307~~~~{.cpp}; 308 fa->SetParameter(0,value_first_parameter);; 309 fa->SetParameter(1,value_second_parameter);; 310~~~~; 311 ; 312 ; 313Parameters may be given a name:; 314 ; 315~~~~{.cpp}; 316 fa->SetParName(0,""Constant"");; 317~~~~; 318 ; 319* Example b:; 320 ; 321~~~~{.cpp}; 322 auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; 323~~~~; 324 ; 325 ; 326``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``.; 327 ; 328#### Case 2: inline expression using TMath functions with parameters; 329 ; 330Begin_Macro(source); 331{; 332 auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; 333 fb2->SetParameters(0.2,1.3);; 334 fb2->Draw();; 335}; 336End_Macro; 337 ; 338\anchor F3; 339### 3 - A lambda expression with variables and parameters; 340 ; 341\since **6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:9218,variab,variable,9218,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,3% (1 sigma); 67 kPoisson2 = 2 ///< Errors from Poisson interval at 95% CL (~ 2 sigma); 68 };; 69 ; 70 /// Enumeration specifying which axes can,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:2005,extend,extended,2005,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['extend'],['extended']
Modifiability,"3), 431-434.; [4] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.:Identification of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; [5] M.A. Mariscotti: A method for identification of peaks in the presence of background and its application to spectrum analysis. NIM 50 (1967), 309-320.; [6] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; [7] P. Bandžuch, M. Morháč, J. Krištiak: Study of the VanCitter and Gold iterative methods of deconvolutionand their application in the deconvolution of experimental spectra of positron annihilation, NIM A 384 (1997) 506-515.; [8] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; [9] I. A. Slavic: Nonlinear least-squares fitting without matrix inversion applied to complex Gaussian spectra analysis. NIM 134 (1976) 285-289.; [10] B. Mihaila: Analysis of complex gamma spectra, Rom. Jorn. Phys., Vol. 39, No. 2, (1994), 139-148.; [11] T. Awaya: A new method for curve fitting to the data with low statistics not using chi-square method. NIM 165 (1979) 317-323.; [12] T. Hauschild, M. Jentschel: Comparison of maximum likelihood estimation and chi-square statistics applied to counting experiments. NIM A 457 (2001) 384-401.; [13] M. Morháč, J. Kliman, M. Jandel, Ľ. Krupa, V. Matoušek: Study of fitting algorithms applied to simultaneous analysis of large number of peaks in \(\gamma\)-ray spectra. Applied spectroscopy, Accepted for publication.; [14] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284..; [15] D. Hearn, M. P. Baker: Computer Graphics, Prentice-Hall International, Inc., 1994. Institute of Physics, Slovak Academy of Sciences, Bratislava, Slovakia↩; Flerov Laboratory of Nuclear Reactions, JINR, Dubna, Russia↩. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/spectrum/Spectrum.html:78365,enhance,enhancement,78365,root/html534/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/html534/guides/spectrum/Spectrum.html,1,['enhance'],['enhancement']
Modifiability,3.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88107,config,configuration,88107,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"3/// Normal Constructor for Profile histograms.; 104///; 105/// The first eight parameters are similar to TH2D::TH2D.; 106/// All values of z are accepted at filling time.; 107/// To fill a profile2D histogram, one must use TProfile2D::Fill function.; 108///; 109/// Note that when filling the profile histogram the function Fill; 110/// checks if the variable z is between fZmin and fZmax.; 111/// If a minimum or maximum value is set for the Z scale before filling,; 112/// then all values below zmin or above zmax will be discarded.; 113/// Setting the minimum or maximum value for the Z scale before filling; 114/// has the same effect as calling the special TProfile2D constructor below; 115/// where zmin and zmax are specified.; 116///; 117/// H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S'; 118/// (spread option), or e(I,J) if CHOPT=' ' (error on mean).; 119///; 120/// See TProfile2D::BuildOptions for explanation of parameters; 121///; 122/// see other constructors below with all possible combinations of; 123/// fix and variable bin size like in TH2D.; 124 ; 125TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,Double_t xlow,Double_t xup,Int_t ny,Double_t ylow,Double_t yup,Option_t *option); 126: TH2D(name,title,nx,xlow,xup,ny,ylow,yup); 127{; 128 BuildOptions(0,0,option);; 129 if (xlow >= xup || ylow >= yup) SetBuffer(fgBufferSize);; 130}; 131 ; 132////////////////////////////////////////////////////////////////////////////////; 133/// Create a 2-D Profile with variable bins in X and fix bins in Y.; 134 ; 135TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,const Double_t *xbins,Int_t ny,Double_t ylow,Double_t yup,Option_t *option); 136: TH2D(name,title,nx,xbins,ny,ylow,yup); 137{; 138 BuildOptions(0,0,option);; 139}; 140 ; 141////////////////////////////////////////////////////////////////////////////////; 142/// Create a 2-D Profile with fix bins in X and variable bins in Y.; 143 ; 144TProfile2D::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:5212,variab,variable,5212,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"3/// in order to compile the library in optimized mode.; 4064 ; 4065void TSystem::SetFlagsOpt(const char *flags); 4066{; 4067 fFlagsOpt = flags;; 4068}; 4069 ; 4070////////////////////////////////////////////////////////////////////////////////; 4071/// AclicMode indicates whether the library should be built in; 4072/// debug mode or optimized. The values are:; 4073/// - TSystem::kDefault : compile the same as the current ROOT; 4074/// - TSystem::kDebug : compiled in debug mode; 4075/// - TSystem::kOpt : optimized the library; 4076 ; 4077void TSystem::SetAclicMode(EAclicMode mode); 4078{; 4079 fAclicMode = mode;; 4080}; 4081 ; 4082////////////////////////////////////////////////////////////////////////////////; 4083/// Directives has the same syntax as the argument of SetMakeSharedLib but is; 4084/// used to create an executable. This creation is used as a means to output; 4085/// a list of unresolved symbols, when loading a shared library has failed.; 4086/// The required variable is $ExeName rather than $SharedLib, e.g.:; 4087/// ~~~ {.cpp}; 4088/// gSystem->SetMakeExe(; 4089/// ""g++ -Wall -fPIC $IncludePath $SourceFiles; 4090/// -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; 4091/// ~~~; 4092 ; 4093void TSystem::SetMakeExe(const char *directives); 4094{; 4095 fMakeExe = directives;; 4096 // NOTE: add verification that the directives has the required variables; 4097}; 4098 ; 4099////////////////////////////////////////////////////////////////////////////////; 4100/// Directives should contain the description on how to compile and link a; 4101/// shared lib. This description can be any valid shell command, including; 4102/// the use of ';' to separate several instructions. However, shell specific; 4103/// construct should be avoided. In particular this description can contain; 4104/// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; 4105/// ~~~ {.cpp}; 4106/// Five special variables will be expanded before execution:; 4107/// ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:139257,variab,variable,139257,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variable']
Modifiability,"3/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). overridevirtual . Redefine x and y axis parameters for variable bin sizes. ; Reimplemented from TH1.; Definition at line 1936 of file TProfile2D.cxx. ◆ SetBins() [4/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins . ). inlineoverrideprivatevirtual . Redefine x axis parameters with variable bin sizes. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1 ; Reimplemented from TH1.; Definition at line 69 of file TProfile2D.h. ◆ SetBins() [5/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins, . Int_t ; nz, . const Double_t * ; zBins . ). inlineoverrideprivatevirtual . Redefine x, y and z axis parameters with variable bin sizes. ; The X, Y and Z axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1, zBins is supposed to be of length nz+1 ; Reimplemented from TH1.; Definition at line 73 of file TProfile2D.h. ◆ SetBins() [6/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax . ). inlineoverrideprivatevirtual . Redefine x axis parameters. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented from TH1.; Definition at line 67 of file TProfile2D.h. ◆ SetBins() [7/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; ny, . Double_t ; y",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:102827,variab,variable,102827,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 256 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.805395; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.725372 0.686272 0.190597 0.0152439 14599.1 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.695636 0.683324 0.189128 0.015082 14708.8 0; : 3 | 0.691864 0.689576 0.189646 0.0148842 14648.6 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.689168 0.677551 0.190642 0.015026 14577.3 0; : 5 | 0.686885 0.678678 0.189865 0.0148775 14629.7 1; : 6 | 0.68905 0.681357 0.189104 0.014885 14694.1 2; : 7 | 0.687138 0.683485 0.19023 0.0152893 14633.6 3; : 8 | 0.686429 0.685529 0.189996 0.0147979 14612 4; : 9 | 0.685179 0.683467 0.190317 0.0152552 14623.4 5; : 10 Minimum Test error found - save the configuration ; : 10 | 0.684262 0.673795 0.18992 0.0153518 14664.7 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.682907 0.671521 0.194162 0.0155002 14328.7 0; : 12 | 0.693473 0.677553 0.188937 0.0147664 14698.2 1; : 13 | 0.695581 0.671789 0.190501 0.0149406 14581.9 2; : 14 | 0.68024 0.680521 0.188432 0.0146998 14735.3 3; : 15 | 0.68435 0.688062 0.189615 0.0147881 14643.1 4; : 16 | 0.686476 0.675588 0.190015 0.0152195 14645.7 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:18520,config,configuration,18520,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"31-434.; [4] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.:Identification of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; [5] M.A. Mariscotti: A method for identification of peaks in the presence of background and its application to spectrum analysis. NIM 50 (1967), 309-320.; [6] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; [7] P. Bandžuch, M. Morháč, J. Krištiak: Study of the VanCitter and Gold iterative methods of deconvolution and their application in the deconvolution of experimental spectra of positron annihilation, NIM A 384 (1997) 506-515.; [8] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; [9] I. A. Slavic: Nonlinear least-squares fitting without matrix inversion applied to complex Gaussian spectra analysis. NIM 134 (1976) 285-289.; [10] B. Mihaila: Analysis of complex gamma spectra, Rom. Jorn. Phys., Vol. 39, No. 2, (1994), 139-148.; [11] T. Awaya: A new method for curve fitting to the data with low statistics not using chi-square method. NIM 165 (1979) 317-323.; [12] T. Hauschild, M. Jentschel: Comparison of maximum likelihood estimation and chi-square statistics applied to counting experiments. NIM A 457 (2001) 384-401.; [13] M. Morháč, J. Kliman, M. Jandel, Ľ. Krupa, V. Matoušek: Study of fitting algorithms applied to simultaneous analysis of large number of peaks in \(\gamma\)-ray spectra. Applied Spectroscopy, Vol. 57, No. 7 (2003) 753-760.; [14] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [15] D. Hearn, M. P. Baker: Computer Graphics, Prentice-Hall International, Inc., 1994. Institute of Physics, Slovak Academy of Sciences, Bratislava, Slovakia↩; Flerov Laboratory of Nuclear Reactions, JINR, Dubna, Russia↩. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html:79362,enhance,enhancement,79362,root/htmldoc/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html,1,['enhance'],['enhancement']
Modifiability,"328///; 4329/// ### Making a parallel coordinates plot; 4330///; 4331/// In case of a 2-Dim or more expression with the option=para, one can generate; 4332/// a parallel coordinates plot. With that option, the number of dimensions is; 4333/// arbitrary. Giving more than 4 variables without the option=para or; 4334/// option=candle or option=goff will produce an error.; 4335///; 4336/// ### Making a candle sticks chart; 4337///; 4338/// In case of a 2-Dim or more expression with the option=candle, one can generate; 4339/// a candle sticks chart. With that option, the number of dimensions is; 4340/// arbitrary. Giving more than 4 variables without the option=para or; 4341/// option=candle or option=goff will produce an error.; 4342///; 4343/// ### Normalizing the output histogram to 1; 4344///; 4345/// When option contains ""norm"" the output histogram is normalized to 1.; 4346///; 4347/// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; 4348///; 4349/// TTree::Draw can be used to fill a TEventList object (list of entry numbers); 4350/// instead of histogramming one variable.; 4351/// If varexp0 has the form >>elist , a TEventList object named ""elist""; 4352/// is created in the current directory. elist will contain the list; 4353/// of entry numbers satisfying the current selection.; 4354/// If option ""entrylist"" is used, a TEntryList object is created; 4355/// If the selection contains arrays, vectors or any container class and option; 4356/// ""entrylistarray"" is used, a TEntryListArray object is created; 4357/// containing also the subentries satisfying the selection, i.e. the indices of; 4358/// the branches which hold containers classes.; 4359/// Example:; 4360/// ~~~ {.cpp}; 4361/// tree.Draw("">>yplus"",""y>0""); 4362/// ~~~; 4363/// will create a TEventList object named ""yplus"" in the current directory.; 4364/// In an interactive session, one can type (after TTree::Draw); 4365/// ~~~ {.cpp}; 4366/// yplus.Print(""all""); 4367/// ~~~; 436",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:175568,variab,variable,175568,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"32; i=6 --> 64; i=7 --> 128; i=8 --> 256; i=9 --> 512; i=10 --> 1024; TMVA::LogIntervalThe TMVA::Interval Class.Definition LogInterval.h:83. Definition at line 83 of file LogInterval.h. Public Member Functions;  LogInterval (const LogInterval &other);  ;  LogInterval (Double_t min, Double_t max, Int_t nbins=0);  ; virtual ~LogInterval ();  destructor ;  ; virtual Double_t GetElement (Int_t position) const;  calculates the value of the ""number"" bin in a discrete interval. ;  ; virtual Double_t GetMax () const;  ; virtual Double_t GetMean () const;  ; virtual Double_t GetMin () const;  ; virtual Int_t GetNbins () const;  ; virtual Double_t GetRndm (TRandom3 &) const;  get uniformly distributed number within interval ;  ; virtual Double_t GetStepSize (Int_t iBin=0) const;  returns the step size between the numbers of a ""discrete LogInterval"" ;  ; virtual Double_t GetWidth () const;  ; virtual TClass * IsA () const;  ; MsgLogger & Log () const;  ; void SetMax (Double_t m);  ; void SetMin (Double_t m);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Interval;  Interval (const Interval &other);  ;  Interval (Double_t min, Double_t max, Int_t nbins=0);  defines minimum and maximum of an interval ;  ; virtual ~Interval ();  destructor ;  ; virtual void Print (std::ostream &os) const;  ; void SetMax (Double_t m);  ; void SetMin (Double_t m);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Interval; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LogInterval.html:2206,inherit,inherited,2206,doc/master/classTMVA_1_1LogInterval.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LogInterval.html,1,['inherit'],['inherited']
Modifiability,"33);; c1->SetGrid();. Float_t bintime = 1;; // one bin = 1 second. change it to set the time scale; TH1F *ht = new TH1F(""ht"",""The ROOT seism"",10,0,10*bintime);; Float_t signal = 1000;; ht->SetMaximum(signal);; ht->SetMinimum(-signal);; ht->SetStats(0);; ht->SetLineColor(2);; ht->GetXaxis()->SetTimeDisplay(1);; ht->GetYaxis()->SetNdivisions(520);; ht->Draw();. for (Int_t i=1;i<2300;i++) {; // Build a signal : noisy damped sine; Float_t noise = gRandom->Gaus(0,120);; if (i > 700); noise += signal*sin((i-700.)*6.28/30)*exp((700.-i)/300.);; ht->SetBinContent(i,noise);; c1->Modified();; c1->Update();; gSystem->ProcessEvents();; //canvas can be edited during the loop; }; printf(""Real Time = %8.3fs,Cpu Time = %8.3fsn"",sw.RealTime(),; sw.CpuTime());; }; 9.6 Graphical Objects Attributes; 9.6.1 Text Attributes; When a class contains text or derives from a text class, it needs to be able to set text attributes like font type, size, and color. To do so, the class inherits from the TAttText class (a secondary inheritance), which defines text attributes. TLatex and TText inherit from TAttText.; 9.6.1.1 Setting Text Alignment; Text alignment may be set by a method call. What is said here applies to all objects deriving from TAttText, and there are many. We will take an example that may be transposed to other types. Suppose “la” is a TLatex object. The alignment is set with:; root[] la->SetTextAlign(align); The parameter align is a short describing the alignment:; align = 10*HorizontalAlign + VerticalAlign; For horizontal alignment, the following convention applies:. 1 = left; 2 = centered; 3 = right. For vertical alignment, the following convention applies:. 1 = bottom; 2 = centered; 3 = top. For example, align: 11 = left adjusted and bottom adjusted; 32 = right adjusted and vertically centered.; 9.6.1.2 Setting Text Angle; Use TAttText::SetTextAngle to set the text angle. The angle is the degrees of the horizontal.; root[] la->SetTextAngle(angle); 9.6.1.3 Setting Text Color; Use T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:353024,inherit,inherits,353024,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,34 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91375,config,configuration,91375,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"34 HandleReferencedTObject(buf,addr,config);; 1435 }; 1436 ; 1437 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1438 return 0;; 1439 }; 1440 };; 1441 ; 1442 template <typename From, typename To>; 1443 struct ConvertBasicType<WithFactorMarker<From>,To> {; 1444 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1445 {; 1446 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1447 TConfWithFactor *conf = (TConfWithFactor *)config;; 1448 From temp;; 1449 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 1450 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1451 return 0;; 1452 }; 1453 };; 1454 ; 1455 template <typename From, typename To>; 1456 struct ConvertBasicType<NoFactorMarker<From>,To> {; 1457 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1458 {; 1459 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1460 TConfNoFactor *conf = (TConfNoFactor *)config;; 1461 From temp;; 1462 buf.ReadWithNbits(&temp, conf->fNbits);; 1463 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1464 return 0;; 1465 }; 1466 };; 1467 ; 1468 class TConfigurationPushDataCache : public TConfiguration {; 1469 // Configuration object for the PushDataCache case.; 1470 public:; 1471 TVirtualArray *fOnfileObject;; 1472 ; 1473 TConfigurationPushDataCache(TVirtualStreamerInfo *info, TVirtualArray *onfileObject, Int_t offset) :; 1474 TConfiguration(info, -1, nullptr, offset), fOnfileObject(onfileObject); 1475 {}; 1476 ; 1477 void Print() const override; 1478 {; 1479 TStreamerInfo *info = (TStreamerInfo*)fInfo;; 1480 if (fOnfileObject); 1481 printf(""StreamerInfoAction, class:%s, PushDataCache offset=%d\n"",; 1482 info->GetClass()->GetName(), fOffset);; 1483 else; 1484 printf(""StreamerInfoAction, class:%s, PopDataCache offset=%d\n"",; 1485 info->GetClass()->GetName(), fOffset);; 1486 }; 1487 void PrintDebug(TBuffer &buffer, void *object) const override; 1488",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:60805,config,config,60805,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"3403///; 3404/// if x is less than the low-edge of the first bin, the Underflow bin is incremented; 3405/// if x is equal to or greater than the upper edge of last bin, the Overflow bin is incremented; 3406///; 3407/// If the weight is not equal to 1, the storage of the sum of squares of; 3408/// weights is automatically triggered and the sum of the squares of weights is incremented; 3409/// by \f$ w^2 \f$ in the bin corresponding to x.; 3410///; 3411/// The function returns the corresponding bin number which has its content; 3412/// incremented by w.; 3413 ; 3414Int_t TH1::Fill(const char *namex, Double_t w); 3415{; 3416 Int_t bin;; 3417 fEntries++;; 3418 bin =fXaxis.FindBin(namex);; 3419 if (bin <0) return -1;; 3420 if (!fSumw2.fN && w != 1.0 && !TestBit(TH1::kIsNotW)) Sumw2();; 3421 if (fSumw2.fN) fSumw2.fArray[bin] += w*w;; 3422 AddBinContent(bin, w);; 3423 if (bin == 0 || bin > fXaxis.GetNbins()) return -1;; 3424 Double_t z= w;; 3425 fTsumw += z;; 3426 fTsumw2 += z*z;; 3427 // this make sense if the histogram is not expanding (the x axis cannot be extended); 3428 if (!fXaxis.CanExtend() || !fXaxis.IsAlphanumeric()) {; 3429 Double_t x = fXaxis.GetBinCenter(bin);; 3430 fTsumwx += z*x;; 3431 fTsumwx2 += z*x*x;; 3432 }; 3433 return bin;; 3434}; 3435 ; 3436////////////////////////////////////////////////////////////////////////////////; 3437/// Fill this histogram with an array x and weights w.; 3438///; 3439/// \param[in] ntimes number of entries in arrays x and w (array size must be ntimes*stride); 3440/// \param[in] x array of values to be histogrammed; 3441/// \param[in] w array of weighs; 3442/// \param[in] stride step size through arrays x and w; 3443///; 3444/// If the weight is not equal to 1, the storage of the sum of squares of; 3445/// weights is automatically triggered and the sum of the squares of weights is incremented; 3446/// by \f$ w^2 \f$ in the bin corresponding to x.; 3447/// if w is NULL each entry is assumed a weight=1; 3448 ; 3449void TH1::Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:136603,extend,extended,136603,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extended']
Modifiability,"3461 DEBUG_TRACE(""%s"", ""Host name format error '[' without ']'"");; 13462 return;; 13463 }; 13464 /* terminate after ']' */; 13465 host->ptr = host_header;; 13466 host->len = (size_t)(pos + 1 - host_header);; 13467 } else {; 13468 /* Otherwise, a ':' separates hostname and port number */; 13469 pos = strchr(host_header, ':');; 13470 if (pos != NULL) {; 13471 host->len = (size_t)(pos - host_header);; 13472 } else {; 13473 host->len = strlen(host_header);; 13474 }; 13475 host->ptr = host_header;; 13476 }; 13477 }; 13478}; 13479 ; 13480 ; 13481static int; 13482switch_domain_context(struct mg_connection *conn); 13483{; 13484 struct vec host;; 13485 ; 13486 get_host_from_request_info(&host, &conn->request_info);; 13487 ; 13488 if (host.ptr) {; 13489 if (conn->ssl) {; 13490 /* This is a HTTPS connection, maybe we have a hostname; 13491 * from SNI (set in ssl_servername_callback). */; 13492 const char *sslhost = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 13493 if (sslhost && (conn->dom_ctx != &(conn->phys_ctx->dd))) {; 13494 /* We are not using the default domain */; 13495 if ((strlen(sslhost) != host.len); 13496 || mg_strncasecmp(host.ptr, sslhost, host.len)) {; 13497 /* Mismatch between SNI domain and HTTP domain */; 13498 DEBUG_TRACE(""Host mismatch: SNI: %s, HTTPS: %.*s"",; 13499 sslhost,; 13500 (int)host.len,; 13501 host.ptr);; 13502 return 0;; 13503 }; 13504 }; 13505 ; 13506 } else {; 13507 struct mg_domain_context *dom = &(conn->phys_ctx->dd);; 13508 while (dom) {; 13509 const char *domName = dom->config[AUTHENTICATION_DOMAIN];; 13510 size_t domNameLen = strlen(domName);; 13511 if ((domNameLen == host.len); 13512 && !mg_strncasecmp(host.ptr, domName, host.len)) {; 13513 ; 13514 /* Found matching domain */; 13515 DEBUG_TRACE(""HTTP domain %s found"",; 13516 dom->config[AUTHENTICATION_DOMAIN]);; 13517 ; 13518 /* TODO: Check if this is a HTTP or HTTPS domain */; 13519 conn->dom_ctx = dom;; 13520 break;; 13521 }; 13522 mg_lock_context(conn->phys_ctx);; 13523 dom = dom->n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:394310,config,config,394310,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"3462 DEBUG_TRACE(""%s"", ""Host name format error '[' without ']'"");; 13463 return;; 13464 }; 13465 /* terminate after ']' */; 13466 host->ptr = host_header;; 13467 host->len = (size_t)(pos + 1 - host_header);; 13468 } else {; 13469 /* Otherwise, a ':' separates hostname and port number */; 13470 pos = strchr(host_header, ':');; 13471 if (pos != NULL) {; 13472 host->len = (size_t)(pos - host_header);; 13473 } else {; 13474 host->len = strlen(host_header);; 13475 }; 13476 host->ptr = host_header;; 13477 }; 13478 }; 13479}; 13480 ; 13481 ; 13482static int; 13483switch_domain_context(struct mg_connection *conn); 13484{; 13485 struct vec host;; 13486 ; 13487 get_host_from_request_info(&host, &conn->request_info);; 13488 ; 13489 if (host.ptr) {; 13490 if (conn->ssl) {; 13491 /* This is a HTTPS connection, maybe we have a hostname; 13492 * from SNI (set in ssl_servername_callback). */; 13493 const char *sslhost = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 13494 if (sslhost && (conn->dom_ctx != &(conn->phys_ctx->dd))) {; 13495 /* We are not using the default domain */; 13496 if ((strlen(sslhost) != host.len); 13497 || mg_strncasecmp(host.ptr, sslhost, host.len)) {; 13498 /* Mismatch between SNI domain and HTTP domain */; 13499 DEBUG_TRACE(""Host mismatch: SNI: %s, HTTPS: %.*s"",; 13500 sslhost,; 13501 (int)host.len,; 13502 host.ptr);; 13503 return 0;; 13504 }; 13505 }; 13506 ; 13507 } else {; 13508 struct mg_domain_context *dom = &(conn->phys_ctx->dd);; 13509 while (dom) {; 13510 const char *domName = dom->config[AUTHENTICATION_DOMAIN];; 13511 size_t domNameLen = strlen(domName);; 13512 if ((domNameLen == host.len); 13513 && !mg_strncasecmp(host.ptr, domName, host.len)) {; 13514 ; 13515 /* Found matching domain */; 13516 DEBUG_TRACE(""HTTP domain %s found"",; 13517 dom->config[AUTHENTICATION_DOMAIN]);; 13518 ; 13519 /* TODO: Check if this is a HTTP or HTTPS domain */; 13520 conn->dom_ctx = dom;; 13521 break;; 13522 }; 13523 mg_lock_context(conn->phys_ctx);; 13524 dom = dom->n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:394343,config,config,394343,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"36 Printf("" Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]"");; 1337 Printf("" Enter : execute command [Ctrl+J] [Ctrl+M]"");; 1338 Printf("" Ctrl+L : clear prompt screen"");; 1339 Printf("" Ctrl+D : quit ROOT (if empty line)"");; 1340 Printf("" Ctrl+C : send kSigInt interrupt signal"");; 1341 Printf("" Ctrl+Z : send kSigStop pause job signal"");; 1342 ; 1343 Printf("" Arrow_Down : navigate downwards in command history [Ctrl+N]"");; 1344 Printf("" Arrow_Up : navigate upwards in command history [Ctrl+P]"");; 1345 Printf("" Ctrl+R ; Ctrl+S : search command in your history by typing a string.\n""; 1346 "" Use Backspace if you mistyped (but not arrows).\n""; 1347 "" Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order"");; 1348 Printf("" Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search\n""; 1349 "" [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc].\n""; 1350 "" Use Ctrl+F or Ctrl+G to cancel search and revert original line"");; 1351 ; 1352 return;; 1353 }; 1354 // We call the function what handles the extended "".help scopeName"" command.; 1355 OpenReferenceGuideFor(strippedCommand);; 1356 }; 1357}; 1358 ; 1359/// Load shared libs necessary for graphics. These libraries are only; 1360/// loaded when gROOT->IsBatch() is kFALSE.; 1361 ; 1362void TApplication::LoadGraphicsLibs(); 1363{; 1364 if (gROOT->IsBatch()); 1365 return;; 1366 ; 1367 if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualPad"")); 1368 if (h->LoadPlugin() == -1); 1369 return;; 1370 ; 1371 TString name;; 1372 TString title1 = ""ROOT interface to "";; 1373 TString nativex, title;; 1374 ; 1375#ifdef R__WIN32; 1376 nativex = ""win32gdk"";; 1377 name = ""Win32gdk"";; 1378 title = title1 + ""Win32gdk"";; 1379#elif defined(R__HAS_COCOA); 1380 nativex = ""quartz"";; 1381 name = ""quartz"";; 1382 title = title1 + ""Quartz"";; 1383#else; 1384 nativex = ""x11"";; 1385 name = ""X11"";; 1386 title = title1 + ""X11"";; 1387#endif; 1388 ; 1389 TString guiBackend = gEnv->GetVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:54894,extend,extended,54894,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['extend'],['extended']
Modifiability,"36; TMVA::DataLoader::fATreeEventstd::vector< Float_t > fATreeEventevent variablesDefinition DataLoader.h:208; TMVA::DataLoader::DefaultDataSetInfoDataSetInfo & DefaultDataSetInfo()default creationDefinition DataLoader.cxx:533; TMVA::DataLoader::AddBackgroundTestEventvoid AddBackgroundTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:252; TMVA::DataLoader::fDataSetManagerDataSetManager * fDataSetManagerDefinition DataLoader.h:186; TMVA::DataLoader::MakeCopyDataLoader * MakeCopy(TString name)Copy method use in VI and CV.Definition DataLoader.cxx:691; TMVA::DataLoader::SetSignalWeightExpressionvoid SetSignalWeightExpression(const TString &variable)Definition DataLoader.cxx:549; TMVA::DataLoader::MakeKFoldDataSetvoid MakeKFoldDataSet(CvSplit &s)Function required to split the training and testing datasets into a number of folds.Definition DataLoader.cxx:662; TMVA::DataLoader::SetWeightExpressionvoid SetWeightExpression(const TString &variable, const TString &className="""")Definition DataLoader.cxx:563; TMVA::DataLoader::AddBackgroundTrainingEventvoid AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:244; TMVA::DataLoader::RecombineKFoldDataSetvoid RecombineKFoldDataSet(CvSplit &s, Types::ETreeType tt=Types::kTraining)Recombines the dataset.Definition DataLoader.cxx:683; TMVA::DataLoader::VarTransformDataLoader * VarTransform(TString trafoDefinition)Transforms the variables and return a new DataLoader with the transformed variables.Definition DataLoader.cxx:146; TMVA::DataLoader::SetBackgroundWeightExpressionvoid SetBackgroundWeightExpression(const TString &variable)Definition DataLoader.cxx:556; TMVA::DataLoader::AddCutvoid AddCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:588; TMVA::DataLoader::AddEventvoid AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:15081,variab,variable,15081,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variable']
Modifiability,"3706/// continuation requested we must reset it.; 3707 ; 3708void TCling::Reset(); 3709{; 3710 fMetaProcessor->cancelContinuation();; 3711 // Reset the Cling state to the state saved by the last call to; 3712 // TCling::SaveContext().; 3713#if defined(R__MUST_REVISIT); 3714#if R__MUST_REVISIT(6,2); 3715 R__LOCKGUARD(gInterpreterMutex);; 3716 Warning(""Reset"",""Cling should support the equivalent of scratch_upto(&fDictPos)"");; 3717#endif; 3718#endif; 3719}; 3720 ; 3721////////////////////////////////////////////////////////////////////////////////; 3722/// Reset the Cling state to its initial state.; 3723 ; 3724void TCling::ResetAll(); 3725{; 3726#if defined(R__MUST_REVISIT); 3727#if R__MUST_REVISIT(6,2); 3728 R__LOCKGUARD(gInterpreterMutex);; 3729 Warning(""ResetAll"",""Cling should support the equivalent of complete reset (unload everything but the startup decls."");; 3730#endif; 3731#endif; 3732}; 3733 ; 3734////////////////////////////////////////////////////////////////////////////////; 3735/// Reset in Cling the list of global variables to the state saved by the last; 3736/// call to TCling::SaveGlobalsContext().; 3737///; 3738/// Note: Right now, all we do is run the global destructors.; 3739 ; 3740void TCling::ResetGlobals(); 3741{; 3742 R__LOCKGUARD(gInterpreterMutex);; 3743 // TODO:; 3744 // Here we should iterate over the transactions (N-3) and revert.; 3745 // N-3 because the first three internal to cling.; 3746 ; 3747 fInterpreter->runAndRemoveStaticDestructors();; 3748}; 3749 ; 3750////////////////////////////////////////////////////////////////////////////////; 3751/// Reset the Cling 'user' global objects/variables state to the state saved by the last; 3752/// call to TCling::SaveGlobalsContext().; 3753 ; 3754void TCling::ResetGlobalVar(void* obj); 3755{; 3756#if defined(R__MUST_REVISIT); 3757#if R__MUST_REVISIT(6,2); 3758 R__LOCKGUARD(gInterpreterMutex);; 3759 Warning(""ResetGlobalVar"",""Cling should support the equivalent of resetglobalvar(obj)"");; 3760#end",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:144975,variab,variables,144975,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['variab'],['variables']
Modifiability,3720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91488,config,configuration,91488,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92842,config,configuration,92842,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92956,config,configuration,92956,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"38 (int)ERRNO,; 15139 strerror(errno));; 15140 closesocket(so.sock);; 15141 so.sock = INVALID_SOCKET;; 15142 continue;; 15143 }; 15144 }; 15145#endif; 15146#if defined(USE_X_DOM_SOCKET); 15147 else if (so.lsa.sa.sa_family == AF_UNIX) {; 15148 ; 15149 len = sizeof(so.lsa.sun);; 15150 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15151 mg_cry_ctx_internal(phys_ctx,; 15152 ""cannot bind to unix socket %s: %d (%s)"",; 15153 so.lsa.sun.sun_path,; 15154 (int)ERRNO,; 15155 strerror(errno));; 15156 closesocket(so.sock);; 15157 so.sock = INVALID_SOCKET;; 15158 continue;; 15159 }; 15160 }; 15161#endif; 15162 else {; 15163 mg_cry_ctx_internal(; 15164 phys_ctx,; 15165 ""cannot bind: address family not supported (entry %i)"",; 15166 portsTotal);; 15167 closesocket(so.sock);; 15168 so.sock = INVALID_SOCKET;; 15169 continue;; 15170 }; 15171 ; 15172 opt_txt = phys_ctx->dd.config[LISTEN_BACKLOG_SIZE];; 15173 opt_listen_backlog = strtol(opt_txt, NULL, 10);; 15174 if ((opt_listen_backlog > INT_MAX) || (opt_listen_backlog < 1)) {; 15175 mg_cry_ctx_internal(phys_ctx,; 15176 ""%s value \""%s\"" is invalid"",; 15177 config_options[LISTEN_BACKLOG_SIZE].name,; 15178 opt_txt);; 15179 closesocket(so.sock);; 15180 so.sock = INVALID_SOCKET;; 15181 continue;; 15182 }; 15183 ; 15184 if (listen(so.sock, (int)opt_listen_backlog) != 0) {; 15185 ; 15186 mg_cry_ctx_internal(phys_ctx,; 15187 ""cannot listen to %.*s: %d (%s)"",; 15188 (int)vec.len,; 15189 vec.ptr,; 15190 (int)ERRNO,; 15191 strerror(errno));; 15192 closesocket(so.sock);; 15193 so.sock = INVALID_SOCKET;; 15194 continue;; 15195 }; 15196 ; 15197 if ((getsockname(so.sock, &(usa.sa), &len) != 0); 15198 || (usa.sa.sa_family != so.lsa.sa.sa_family)) {; 15199 ; 15200 int err = (int)ERRNO;; 15201 mg_cry_ctx_internal(phys_ctx,; 15202 ""call to getsockname failed %.*s: %d (%s)"",; 15203 (int)vec.len,; 15204 vec.ptr,; 15205 err,; 15206 strerror(errno));; 15207 closesocket(so.sock);; 15208 so.sock = INVALID_SOCKET;; 15209 continue;; 15210 }; 15211 ; 15212 /* Updat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:448592,config,config,448592,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,38.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120426,config,configuration,120426,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"39 (int)ERRNO,; 15140 strerror(errno));; 15141 closesocket(so.sock);; 15142 so.sock = INVALID_SOCKET;; 15143 continue;; 15144 }; 15145 }; 15146#endif; 15147#if defined(USE_X_DOM_SOCKET); 15148 else if (so.lsa.sa.sa_family == AF_UNIX) {; 15149 ; 15150 len = sizeof(so.lsa.sun);; 15151 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15152 mg_cry_ctx_internal(phys_ctx,; 15153 ""cannot bind to unix socket %s: %d (%s)"",; 15154 so.lsa.sun.sun_path,; 15155 (int)ERRNO,; 15156 strerror(errno));; 15157 closesocket(so.sock);; 15158 so.sock = INVALID_SOCKET;; 15159 continue;; 15160 }; 15161 }; 15162#endif; 15163 else {; 15164 mg_cry_ctx_internal(; 15165 phys_ctx,; 15166 ""cannot bind: address family not supported (entry %i)"",; 15167 portsTotal);; 15168 closesocket(so.sock);; 15169 so.sock = INVALID_SOCKET;; 15170 continue;; 15171 }; 15172 ; 15173 opt_txt = phys_ctx->dd.config[LISTEN_BACKLOG_SIZE];; 15174 opt_listen_backlog = strtol(opt_txt, NULL, 10);; 15175 if ((opt_listen_backlog > INT_MAX) || (opt_listen_backlog < 1)) {; 15176 mg_cry_ctx_internal(phys_ctx,; 15177 ""%s value \""%s\"" is invalid"",; 15178 config_options[LISTEN_BACKLOG_SIZE].name,; 15179 opt_txt);; 15180 closesocket(so.sock);; 15181 so.sock = INVALID_SOCKET;; 15182 continue;; 15183 }; 15184 ; 15185 if (listen(so.sock, (int)opt_listen_backlog) != 0) {; 15186 ; 15187 mg_cry_ctx_internal(phys_ctx,; 15188 ""cannot listen to %.*s: %d (%s)"",; 15189 (int)vec.len,; 15190 vec.ptr,; 15191 (int)ERRNO,; 15192 strerror(errno));; 15193 closesocket(so.sock);; 15194 so.sock = INVALID_SOCKET;; 15195 continue;; 15196 }; 15197 ; 15198 if ((getsockname(so.sock, &(usa.sa), &len) != 0); 15199 || (usa.sa.sa_family != so.lsa.sa.sa_family)) {; 15200 ; 15201 int err = (int)ERRNO;; 15202 mg_cry_ctx_internal(phys_ctx,; 15203 ""call to getsockname failed %.*s: %d (%s)"",; 15204 (int)vec.len,; 15205 vec.ptr,; 15206 err,; 15207 strerror(errno));; 15208 closesocket(so.sock);; 15209 so.sock = INVALID_SOCKET;; 15210 continue;; 15211 }; 15212 ; 15213 /* Updat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:448625,config,config,448625,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,39 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84085,config,configuration,84085,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"39 TVirtualStreamerInfo *sinfo = ((TClass *)this)->GetCurrentStreamerInfo();; 2340 if (sinfo==nullptr) sinfo = GetStreamerInfo();; 2341 TIter next(sinfo->GetElements());; 2342 TStreamerElement *element;; 2343 while ((element = (TStreamerElement*)next())) {; 2344 if (element->IsA() == TStreamerBase::Class()) {; 2345 TClass *clbase = element->GetClassPointer();; 2346 if (!clbase) {; 2347 // If there is a missing base class, we can't split the immediate; 2348 // derived class.; 2349 fCanSplit = 0;; 2350 return kFALSE;; 2351 } else if (!clbase->CanSplitBaseAllow()) {; 2352 fCanSplit = 2;; 2353 return kFALSE;; 2354 }; 2355 }; 2356 }; 2357 }; 2358 ; 2359 // If we don't have data member info there is no more information; 2360 // we can find out.; 2361 if (!HasDataMemberInfo()) return kTRUE;; 2362 ; 2363 TObjLink *lnk = GetListOfBases() ? fBase.load()->FirstLink() : nullptr;; 2364 ; 2365 // Look at inheritance tree; 2366 while (lnk) {; 2367 TBaseClass *base = (TBaseClass*) lnk->GetObject();; 2368 TClass *c = base->GetClassPointer();; 2369 if(!c) {; 2370 // If there is a missing base class, we can't split the immediate; 2371 // derived class.; 2372 fCanSplit = 0;; 2373 return kFALSE;; 2374 } else if (!c->CanSplitBaseAllow()) {; 2375 fCanSplit = 2;; 2376 return kFALSE;; 2377 }; 2378 lnk = lnk->Next();; 2379 }; 2380 return kTRUE;; 2381}; 2382 ; 2383////////////////////////////////////////////////////////////////////////////////; 2384/// Return true if the data member of this TClass can be saved separately.; 2385 ; 2386Bool_t TClass::CanSplit() const; 2387{; 2388 // Note: add the possibility to set it for the class and the derived class.; 2389 // save the info in TVirtualStreamerInfo; 2390 // deal with the info in MakeProject; 2391 if (fCanSplit >= 0) {; 2392 // The user explicitly set the value; 2393 return (fCanSplit & 0x1) == 1;; 2394 }; 2395 ; 2396 R__LOCKGUARD(gInterpreterMutex);; 2397 TClass *This = const_cast<TClass*>(this);; 2398 ; 2399 if (this == TObject::Class()) { T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:89568,inherit,inheritance,89568,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,39.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 | 3.05672 2.86026 0.0203982 0.00182711 43077.7 0; : 1068 | 3.10603 3.29637 0.020205 0.00184144 43564.6 1; : 1069 | 2.88449 4.01918 0.0203768 0.00179741 43058.4 2; : 1070 | 2.97807 3.34364 0.0200746 0.00174903 43654.8 3; : 1071 | 3.12106 3.50221 0.0203054 0.0017782 43179.8 4; : 1072 | 2.87393 2.91962 0.020149 0.001768 43523.2 5; : 1073 | 2.90826 3.29161 0.0202848 0.00180763 43296.8 6; : 1074 | 3.06053 3.26664 0.0201588 0.00175733 43474.8 7; : 1075 Minimum Test error found - save the configuration ; : 1075 | 2.97935 2.76485 0.0202008 0.00187279 43649.1 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; :,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:117535,config,configuration,117535,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97417,config,configuration,97417,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3; : Corresponding background efficiency : 0.0401486; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -6.09813 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.81831; : Cut[ 2]: -2.09336 < var3 <= 1e+30; : Cut[ 3]: 1.34308 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.4; : Corresponding background efficiency : 0.062887; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -4.55141 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.94573; : Cut[ 2]: -4.68697 < var3 <= 1e+30; : Cut[ 3]: 1.07157 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.5; : Corresponding background efficiency : 0.104486; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -5.86032 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.89615; : Cut[ 2]: -0.966191 < var3 <= 1e+30; : Cut[ 3]: 0.773848 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.6; : Corresponding background efficiency : 0.172806; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -5.52552 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 4.08498; : Cut[ 2]: -2.61706 < var3 <= 1e+30; : Cut[ 3]: 0.469684 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.7; : Corresponding background efficiency : 0.258379; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -5.69875 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:15185,variab,variables,15185,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"3="""", const char *name4="""", const char *name5="""", const char *name6="""", const char *name7="""", const char *name8="""", const char *name9="""", const char *name10="""");  Set up to 10 parameter names. ;  ; virtual void SetSavedPoint (Int_t point, Double_t value);  Restore value of function saved at point. ;  ; void SetTitle (const char *title="""") override;  Set function title if title has the form ""fffffff;xxxx;yyyy"", it is assumed that the function title is ""fffffff"" and ""xxxx"" and ""yyyy"" are the titles for the X and Y axis respectively. ;  ; virtual void SetVectorized (Bool_t vectorized);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update ();  Called by functions such as SetRange, SetNpx, SetParameters to force the deletion of the associated histogram or Integral. ;  ; virtual Double_t Variance (Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2.html:25657,inherit,inherited,25657,doc/master/classTF2.html,https://root.cern,https://root.cern/doc/master/classTF2.html,2,['inherit'],['inherited']
Modifiability,"3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:4020,inherit,inherited,4020,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,3,['inherit'],['inherited']
Modifiability,"3D ;  ; virtual TProfile2D * DoProjectProfile2D (const char *name, const char *title, const TAxis *projX, const TAxis *projY, bool originalRange, bool useUF, bool useOF) const;  internal method to project to a 2D Profile called from TH3::Project3DProfile ;  ; Int_t Fill (const char *, const char *, Double_t);  ; Int_t Fill (const char *, Double_t) override;  Increment bin with namex with a weight w. ;  ; Int_t Fill (const char *, Double_t, Double_t);  ; Int_t Fill (Double_t) override;  Invalid Fill method. ;  ; Int_t Fill (Double_t, const char *, Double_t);  ; Int_t Fill (Double_t, Double_t) override;  Increment bin with abscissa X with a weight w. ;  ; Double_t Interpolate (Double_t x) const override;  Not yet implemented. ;  ; Double_t Interpolate (Double_t x, Double_t y) const override;  Not yet implemented. ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called directly by TH1::BufferEmpty. ;  ; virtual Double_t DoIntegral (Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) const;  Internal function compute integral and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:55242,variab,variable,55242,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,8,['variab'],['variable']
Modifiability,"3D Graphics » Event Display. ; Projected copy of a TEveTrack. ; Definition at line 19 of file TEveTrackProjected.h. Public Member Functions;  TEveTrackProjected ();  Default constructor. ;  ;  ~TEveTrackProjected () override;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void MakeTrack (Bool_t recurse=kTRUE) override;  Calculate the points of the track for drawing. ;  ; void PrintLineSegments ();  Print line segments info. ;  ; void SecSelected (TEveTrack *) override;  Virtual method from from base-class TEveTrack. ;  ; void SetProjection (TEveProjectionManager *mng, TEveProjectable *model) override;  This is virtual method from base-class TEveProjected. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  Virtual method from base-class TEveProjected. ;  ;  Public Member Functions inherited from TEveTrack;  TEveTrack ();  Default constructor. ;  ;  TEveTrack (const TEveTrack &t);  Copy constructor. ;  ;  TEveTrack (TEveMCTrack *t, TEveTrackPropagator *prop=nullptr);  ;  TEveTrack (TEveRecTrack *t, TEveTrackPropagator *prop=nullptr);  Constructor from TEveRecTrack<float> reconstructed track. ;  ;  TEveTrack (TEveRecTrackD *t, TEveTrackPropagator *prop=nullptr);  Constructor from TEveRecTrack<double> reconstructed track. ;  ;  TEveTrack (TParticle *t, Int_t label, TEveTrackPropagator *prop=nullptr);  Constructor from TParticle. ;  ;  ~TEveTrack () override;  Destructor. ;  ; void AddPathMark (const TEvePathMark &pm);  ; void AddPathMark (const TEvePathMarkD &pm);  ; void ComputeBBox () override;  Compute the bounding box of the track. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; Int_t GetCharge () const;  ; Double_t GetDpDs () const;  ; const TEveVectorD & GetEndMomentum () const;  ; Int_t GetIndex () const;  ; Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackProjected.html:1376,inherit,inherited,1376,doc/master/classTEveTrackProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackProjected.html,1,['inherit'],['inherited']
Modifiability,"3D.; Profile histograms are used to display the mean value of Y and its RMS; for each bin in X. Profile histograms are in many cases an elegant; replacement of two-dimensional histograms : the inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. All histogram classes are derived from the base class TH1. TH1; ^; |; |; |; -----------------------------------------------------------; | | | | | | |; | | TH1C TH1S TH1I TH1F TH1D; | | |; | | |; | TH2 TProfile; | |; | |; | ----------------------------------; | | | | | |; | TH2C TH2S TH2I TH2F TH2D; | |; TH3 |; | TProfile2D; |; -------------------------------------; | | | | |; TH3C TH3S TH3I TH3F TH3D; |; |; TProfile3D; The TH*C classes also inherit from the array class TArrayC.; The TH*S classes also inherit from the array class TArrayS.; The TH*I classes also inherit from the array class TArrayI.; The TH*F classes also inherit from the array class TArrayF.; The TH*D classes also inherit from the array class TArrayD. Creating histograms. Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);. Histograms may also be created by:; ; calling the Clone function, see below; making a projection from a 2-D or 3-D histogram, see below; reading an histogram from a file; ; When an histogram is created, a reference to it is automatically added; to the list of in-memory objects for the current file or directory.; This default behaviour can be changed by:. h->SetDirectory(0); for the current histogram h; TH1::AddDirectory(kFALSE); sets a global switch disabling the reference. When the histogram is deleted, the reference to it is removed from; the list of objects in memory.; When a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:2638,inherit,inherit,2638,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,5,['inherit'],['inherit']
Modifiability,"3D; Int_t fLastPoint {-1};  ; Int_t fN {0};  ; TString fName;  ; TString fOption;  ; Float_t * fP {nullptr};  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Static Protected Attributes; static Bool_t fgDefaultSmooth = kFALSE;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TEveLine (const TEveLine &);  ; TEveLine & operator= (const TEveLine &);  . Friends; class TEveLineEditor;  ; class TEveLineGL;  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:44797,inherit,inherited,44797,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,1,['inherit'],['inherited']
Modifiability,"3i);  Copy constructor. ;  ;  ~TH3I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3I & operator= (const TH3I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH3;  ~TH3 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, const char *namez, Double_t w);  Increment cell defined by namex,namey,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t z, Double_t w);  Increment cell defined by namex,namey,z by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, const char *namez, Double_t w);  Increment cell defined by namex,y,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t z, Double_t w);  Increment cell defined by namex , y ,z by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, const char *namez, Double_t w);  Increment cell defined by x,namey,namez by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t z, Double_t w);  Increment cell defined ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:2296,inherit,inherited,2296,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['inherit'],['inherited']
Modifiability,"3l);  Copy constructor. ;  ;  ~TH3L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3L & operator= (const TH3L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH3;  ~TH3 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, const char *namez, Double_t w);  Increment cell defined by namex,namey,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t z, Double_t w);  Increment cell defined by namex,namey,z by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, const char *namez, Double_t w);  Increment cell defined by namex,y,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t z, Double_t w);  Increment cell defined by namex , y ,z by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, const char *namez, Double_t w);  Increment cell defined by x,namey,namez by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t z, Double_t w);  Increment cell defined ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:2298,inherit,inherited,2298,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['inherit'],['inherited']
Modifiability,"4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTeXDump() [1/2]. TTeXDump::TTeXDump ; (; ). Default TeX constructor. ; Definition at line 85 of file TTeXDump.cxx. ◆ TTeXDump() [2/2]. TTeXDump::TTeXDump ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the TeX interface. ; –fname : TeX file name; wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the TeX case). . Definition at line 110 of file TTeXDump.cxx. ◆ ~TTeXDump(). TTeXDump::~TTeXDump ; (; ). override . Default TeX destructor. ; Definition at line 194 of file TTeXDump.cxx. Member Function Documentation. ◆ CellArrayBegin(). void TTeXDump::CellArrayBegin ; (; Int_t ; W, . Int_t ; H, . Double_t ; x1, . Double_t ; x2, . Double_t ; y1, . Double_t ; y2 . ). overridevirtual . Begin the Cell Array painting. ; Implements TVirtualPS.; Definition at line 901 of file TTeXDump.cxx. ◆ CellArrayEnd(). void TTeXDump::CellArrayEnd ; (; ). overridevirtual . End the Cell Array painting. ; Implements TVirtualPS.; Definition at line 918 of file TTeXDump.cxx. ◆ CellArrayFill(). void TTeXDump::CellArrayFill ; (; Int_t ; r, . Int_t ; g, . Int_t ; b . ). overridevirtual . Paint the Cell Array. ; Implements TVirtualPS.; Definition at line 910 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTeXDump.html:25755,inherit,inherits,25755,doc/master/classTTeXDump.html,https://root.cern,https://root.cern/doc/master/classTTeXDump.html,1,['inherit'],['inherits']
Modifiability,"4 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.868652; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.659892 0.620582 0.589558 0.0469541 20523.3 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906 0.587335 0.047007 20609.7 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.57382 0.588714 0.592175 0.0469679 20425.3 0; : 5 | 0.569519 0.59535 0.590168 0.0468081 20494.7 1; : 6 | 0.567869 0.590023 0.589038 0.0469022 20541 2; : 7 Minimum Test error found - save the configuration ; : 7 | 0.561012 0.586993 0.590467 0.0471223 20495.3 0; : 8 | 0.559195 0.590522 0.590271 0.0471869 20505.1 1; : 9 | 0.558998 0.588766 0.598449 0.0469787 20193.3 2; : 10 | 0.555383 0.590075 0.591595 0.0470733 20451 3; : 11 Minimum Test error found - save the configuration ; : 11 | 0.555591 0.582449 0.595129 0.047292 20327.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.550993 0.581236 0.592181 0.0472746 20436.5 0; : 13 | 0.548186 0.58351 0.592876 0.0471057 20404.2 1; : 14 | 0.547427 0.581875 0.592374 0.0471592 20425 2; : 15 Minimum Test error found - save the configuratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:24394,config,configuration,24394,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['config'],['configuration']
Modifiability,"4 ; 145//-----------------------------------------------------------------------------; 146bool CPyCppyy::Scope_Check(PyObject* pyobject); 147{; 148// Test if the given object is of a CPPScope derived type.; 149 if (!Initialize()); 150 return false;; 151 ; 152 return CPPScope_Check(pyobject);; 153}; 154 ; 155//-----------------------------------------------------------------------------; 156bool CPyCppyy::Scope_CheckExact(PyObject* pyobject); 157{; 158// Test if the given object is of a CPPScope type.; 159 if (!Initialize()); 160 return false;; 161 ; 162 return CPPScope_CheckExact(pyobject);; 163}; 164 ; 165//-----------------------------------------------------------------------------; 166bool CPyCppyy::Instance_Check(PyObject* pyobject); 167{; 168// Test if the given pyobject is of CPPInstance derived type.; 169 if (!Initialize()); 170 return false;; 171 ; 172// detailed walk through inheritance hierarchy; 173 return CPPInstance_Check(pyobject);; 174}; 175 ; 176//-----------------------------------------------------------------------------; 177bool CPyCppyy::Instance_CheckExact(PyObject* pyobject); 178{; 179// Test if the given pyobject is of CPPInstance type.; 180 if (!Initialize()); 181 return false;; 182 ; 183// direct pointer comparison of type member; 184 return CPPInstance_CheckExact(pyobject);; 185}; 186 ; 187//-----------------------------------------------------------------------------; 188bool CPyCppyy::Sequence_Check(PyObject* pyobject); 189{; 190// Extends on PySequence_Check() to determine whether an object can be iterated; 191// over (technically, all objects can b/c of C++ pointer arithmetic, hence this; 192// check isn't 100% accurate, but neither is PySequence_Check()).; 193 ; 194// Note: simply having the iterator protocol does not constitute a sequence, bc; 195// PySequence_GetItem() would fail.; 196 ; 197// default to PySequence_Check() if called with a non-C++ object; 198 if (!CPPInstance_Check(pyobject)); 199 return (bool)PySequence_Check(pyo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:5685,inherit,inheritance,5685,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(), const RooCmdArg& arg10 = RooCmdArg::none()) const. RooArgSet* getConstraints(const RooArgSet& , RooArgSet& , Bool_t ) const; Constraint management. Int_t minDimNormValueCaching() const; { return _minDimNormValueCache ; }. Int_t intOrderNormValueCaching() const; { return _valueCacheIntOrder ; }. Double_t getNorm(const RooArgSet& nset) const; Get p.d.f normalization term needed for observables 'nset'. Bool_t selfNormalized() const; If true, p.d.f is taken as self-normalized and no attempt is made to add a normalization term; This default implementation return false. ExtendMode extendMode() const; Returns ability of p.d.f to provided extended likelihood terms. Possible; answers are CanNotBeExtended, CanBeExtended or MustBeExtended. This; default implementation always return CanNotBeExtended. Bool_t canBeExtended() const; If true p.d.f can provide extended likelihood term. Bool_t mustBeExtended() const; If true p.d.f must extended likelihood term. Double_t expectedEvents(const RooArgSet* nset) const. const char* normRange() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Hook function intercepting redirectServer calls. Discard current normalization; object if any server is redirected. » Last changed: Fri Dec 2 14:26:37 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:83854,extend,extendMode,83854,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,4,['extend'],"['extendMode', 'extended']"
Modifiability,"4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(), const RooCmdArg& arg10 = RooCmdArg::none()) const. RooArgSet* getConstraints(const RooArgSet& , RooArgSet& , Bool_t ) const; Constraint management. Int_t minDimNormValueCaching() const; { return _minDimNormValueCache ; }. Int_t intOrderNormValueCaching() const; { return _valueCacheIntOrder ; }. Double_t getNorm(const RooArgSet& nset) const; Get p.d.f normalization term needed for observables 'nset'. Bool_t selfNormalized() const; If true, p.d.f is taken as self-normalized and no attempt is made to add a normalization term; This default implementation return false. ExtendMode extendMode() const; Returns ability of p.d.f to provided extended likelihood terms. Possible; answers are CanNotBeExtended, CanBeExtended or MustBeExtended. This; default implementation always return CanNotBeExtended. Bool_t canBeExtended() const; If true p.d.f can provide extended likelihood term. Bool_t mustBeExtended() const; If true p.d.f must extended likelihood term. Double_t expectedEvents(const RooArgSet* nset) const. const char* normRange() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Hook function intercepting redirectServer calls. Discard current normalization; object if any server is redirected. » Last changed: Mon Jul 4 15:21:26 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsPdf.html:80684,extend,extendMode,80684,root/html530/RooAbsPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsPdf.html,4,['extend'],"['extendMode', 'extended']"
Modifiability,"4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(), const RooCmdArg& arg10 = RooCmdArg::none()) const. RooArgSet* getConstraints(const RooArgSet& , RooArgSet& , Bool_t ) const; Constraint management. Int_t minDimNormValueCaching() const; { return _minDimNormValueCache ; }. Int_t intOrderNormValueCaching() const; { return _valueCacheIntOrder ; }. Double_t getNorm(const RooArgSet& nset) const; Get p.d.f normalization term needed for observables 'nset'. Bool_t selfNormalized() const; If true, p.d.f is taken as self-normalized and no attempt is made to add a normalization term; This default implementation return false. ExtendMode extendMode() const; Returns ability of p.d.f to provided extended likelihood terms. Possible; answers are CanNotBeExtended, CanBeExtended or MustBeExtended. This; default implementation always return CanNotBeExtended. Bool_t canBeExtended() const; If true p.d.f can provide extended likelihood term. Bool_t mustBeExtended() const; If true p.d.f must extended likelihood term. Double_t expectedEvents(const RooArgSet* nset) const. const char* normRange() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Hook function intercepting redirectServer calls. Discard current normalization; object if any server is redirected. » Last changed: Sat Oct 9 22:38:30 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:80164,extend,extendMode,80164,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,4,['extend'],"['extendMode', 'extended']"
Modifiability,"4 TClass* cl = config->fCompInfo->fClass;; 645 ; 646 // Check for a private streamer.; 647 if (!kIsTextT && config->fCompInfo->fStreamer) {; 648 // Get any private streamer which was set for the data member.; 649 TMemberStreamer* pstreamer = config->fCompInfo->fStreamer;; 650 // -- We have a private streamer.; 651 // Read the class version and byte count from the buffer.; 652 UInt_t start = 0;; 653 UInt_t count = 0;; 654 buf.ReadVersion(&start, &count, cl);; 655 // Loop over the entries in the clones array or the STL container.; 656 //for (Int_t k = 0; k < narr; ++k) {; 657 ; 658 Int_t* counter = (Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/);; 659 // And call the private streamer, passing it the buffer, the object, and the counter.; 660 (*pstreamer)(buf, (char *) addr /*entry pointer*/ + ioffset /*object offset*/, *counter);; 661 ; 662 // } // for k; 663 buf.CheckByteCount(start, count, config->fCompInfo->fElem->GetFullName());; 664 // We are done, next streamer element.; 665 return 0;; 666 }; 667 ; 668 // Which are we, an array of objects or an array of pointers to objects?; 669 Bool_t isPtrPtr = (strstr(config->fCompInfo->fElem->GetTypeName(), ""**"") != 0);; 670 ; 671 // By default assume the file version is the newest.; 672 Int_t fileVersion = kMaxInt;; 673 if (!kIsTextT) {; 674 // At this point we do *not* have a private streamer.; 675 // Get the version of the file we are reading from.; 676 TFile* file = (TFile*) buf.GetParent();; 677 if (file) {; 678 fileVersion = file->GetVersion();; 679 }; 680 }; 681 // Read the class version and byte count from the buffer.; 682 UInt_t start = 0;; 683 UInt_t count = 0;; 684 buf.ReadVersion(&start, &count, cl);; 685 if (fileVersion > 51508) {; 686 // -- Newer versions allow polymorphic pointers.; 687 // Loop over the entries in the clones array or the STL container.; 688 // for (Int_t k = 0; k < narr; ++k) {; 689 // Get the counter for the varying length a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:27516,config,config,27516,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"4 if ( (autoBinned && isBinnedDistribution(vars)) || ( binnedTag && strlen(binnedTag) && (getAttribute(binnedTag)||string(binnedTag)==""*""))) {; 1145 context = binnedGenContext(vars,verbose) ;; 1146 } else {; 1147 context= genContext(vars,nullptr,nullptr,verbose);; 1148 }; 1149 return context ;; 1150}; 1151 ; 1152 ; 1153 ; 1154////////////////////////////////////////////////////////////////////////////////; 1155/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1156/// Generate the specified number of events or expectedEvents() if not specified.; 1157/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1158/// constant and not be used for event generation.; 1159/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; 1160/// \return RooDataSet *, owned by caller.; 1161///; 1162/// Any variables of this PDF that are not in whatVars will use their; 1163/// current values and be treated as fixed parameters. Returns zero; 1164/// in case of an error.; 1165///; 1166/// <table>; 1167/// <tr><th> Type of CmdArg <th> Effect on generate; 1168/// <tr><td> `Name(const char* name)` <td> Name of the output dataset; 1169/// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; 1170/// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; 1171/// <tr><td> `Extended()` <td> If no number of events to be generated is given,; 1172/// use expected number of events from extended likelihood term.; 1173/// This evidently only works for extended PDFs.; 1174/// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; 1175/// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; 1176/// RooHistPdfs etc); 1177/// \note Datasets that are",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:56844,variab,variables,56844,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"4 if (!format_.IsDigit()) {; 285 Error(""TGraphErrors"", ""Incorrect input format! Allowed format tags are {\""%%lg\"",\""%%*lg\"" or \""%%*s\""}"");; 286 return ;; 287 }; 288 Int_t ntokens = format_.Length() ;; 289 if (ntokens < 2) {; 290 Error(""TGraphErrors"", ""Incorrect input format! Only %d tag(s) in format whereas at least 2 \""%%lg\"" tags are expected!"", ntokens);; 291 return ;; 292 }; 293 Int_t ntokensToBeSaved = 0 ;; 294 Bool_t * isTokenToBeSaved = new Bool_t [ntokens] ;; 295 for (Int_t idx = 0; idx < ntokens; idx++) {; 296 isTokenToBeSaved[idx] = TString::Format(""%c"", format_[idx]).Atoi() ; //atoi(&format_[idx]) does not work for some reason...; 297 if (isTokenToBeSaved[idx] == 1) {; 298 ntokensToBeSaved++ ;; 299 }; 300 }; 301 if (ntokens >= 2 && (ntokensToBeSaved < 2 || ntokensToBeSaved > 4)) { //first condition not to repeat the previous error message; 302 Error(""TGraphErrors"", ""Incorrect input format! There are %d \""%%lg\"" tag(s) in format whereas 2,3 or 4 are expected!"", ntokensToBeSaved);; 303 delete [] isTokenToBeSaved ;; 304 return ;; 305 }; 306 ; 307 // Initializing loop variables; 308 Bool_t isLineToBeSkipped = kFALSE; //empty and ill-formed lines; 309 char *token = nullptr;; 310 TString token_str = """";; 311 Int_t token_idx = 0;; 312 Double_t value[4]; //x,y,ex,ey buffers; 313 for (Int_t k = 0; k < 4; k++); 314 value[k] = 0.;; 315 Int_t value_idx = 0;; 316 ; 317 // Looping; 318 char *rest;; 319 while (std::getline(infile, line, '\n')) {; 320 if (!line.empty()) {; 321 if (line[line.size() - 1] == char(13)) { // removing DOS CR character; 322 line.erase(line.end() - 1, line.end()) ;; 323 }; 324 token = R__STRTOK_R(const_cast<char *>(line.c_str()), option, &rest);; 325 while (token != nullptr && value_idx < ntokensToBeSaved) {; 326 if (isTokenToBeSaved[token_idx]) {; 327 token_str = TString(token) ;; 328 token_str.ReplaceAll(""\t"", """") ;; 329 if (!token_str.IsFloat()) {; 330 isLineToBeSkipped = kTRUE ;; 331 break ;; 332 } else {; 333 value[value_idx] = token_str.At",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:10593,variab,variables,10593,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['variab'],['variables']
Modifiability,4 of file TSelectorDraw.h. ◆ fSelect. TTreeFormula* TSelectorDraw::fSelect. protected . Pointer to selection formula. ; Definition at line 40 of file TSelectorDraw.h. ◆ fSelectedRows. Long64_t TSelectorDraw::fSelectedRows. protected . Number of selected entries. ; Definition at line 50 of file TSelectorDraw.h. ◆ fSelectMultiple. bool TSelectorDraw::fSelectMultiple. protected . True if selection has a variable index. ; Definition at line 61 of file TSelectorDraw.h. ◆ fTree. TTree* TSelectorDraw::fTree. protected . Pointer to current Tree. ; Definition at line 38 of file TSelectorDraw.h. ◆ fTreeElist. TObject* TSelectorDraw::fTreeElist. protected . Pointer to Tree Event list. ; Definition at line 42 of file TSelectorDraw.h. ◆ fTreeElistArray. TEntryListArray* TSelectorDraw::fTreeElistArray. protected . ! Pointer to Tree Event list array ; Definition at line 43 of file TSelectorDraw.h. ◆ fVal. Double_t** TSelectorDraw::fVal. protected . ![fSelectedRows][fDimension] Local buffer for the variables ; Definition at line 57 of file TSelectorDraw.h. ◆ fValSize. Int_t TSelectorDraw::fValSize. protected . Definition at line 58 of file TSelectorDraw.h. ◆ fVar. TTreeFormula** TSelectorDraw::fVar. protected . ![fDimension] Array of pointers to variables formula ; Definition at line 39 of file TSelectorDraw.h. ◆ fVarMultiple. bool* TSelectorDraw::fVarMultiple. protected . ![fDimension] True if fVar[i] has a variable index ; Definition at line 60 of file TSelectorDraw.h. ◆ fVmax. Double_t* TSelectorDraw::fVmax. protected . ![fDimension] Maxima of varexp columns ; Definition at line 55 of file TSelectorDraw.h. ◆ fVmin. Double_t* TSelectorDraw::fVmin. protected . ![fDimension] Minima of varexp columns ; Definition at line 54 of file TSelectorDraw.h. ◆ fW. Double_t* TSelectorDraw::fW. protected . ![fSelectedRows]Local buffer for weights ; Definition at line 59 of file TSelectorDraw.h. ◆ fWeight. Double_t TSelectorDraw::fWeight. protected . Tree weight (see TTree::SetWeight) ; Definitio,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:30394,variab,variables,30394,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['variab'],['variables']
Modifiability,"4 }; 515 }; 516 ; 517 for (UInt_t ivar=0; ivar<nvar; ivar++) {; 518 dsi.GetVariableInfo(ivar).SetMin(min[ivar]);; 519 dsi.GetVariableInfo(ivar).SetMax(max[ivar]);; 520 if( TMath::Abs(max[ivar]-min[ivar]) <= FLT_MIN ); 521 Log() << kWARNING << Form(""Dataset[%s] : "",dsi.GetName()) << ""Variable "" << dsi.GetVariableInfo(ivar).GetExpression().Data() << "" is constant. Please remove the variable."" << Endl;; 522 }; 523 for (UInt_t ivar=0; ivar<ntgts; ivar++) {; 524 dsi.GetTargetInfo(ivar).SetMin(tgmin[ivar]);; 525 dsi.GetTargetInfo(ivar).SetMax(tgmax[ivar]);; 526 if( TMath::Abs(tgmax[ivar]-tgmin[ivar]) <= FLT_MIN ); 527 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName()) << ""Target "" << dsi.GetTargetInfo(ivar).GetExpression().Data() << "" is constant. Please remove the variable."" << Endl;; 528 }; 529 for (UInt_t ivar=0; ivar<nvis; ivar++) {; 530 dsi.GetSpectatorInfo(ivar).SetMin(vmin[ivar]);; 531 dsi.GetSpectatorInfo(ivar).SetMax(vmax[ivar]);; 532 // if( TMath::Abs(vmax[ivar]-vmin[ivar]) <= FLT_MIN ); 533 // Log() << kWARNING << ""Spectator variable "" << dsi.GetSpectatorInfo(ivar).GetExpression().Data() << "" is constant."" << Endl;; 534 }; 535 delete [] min;; 536 delete [] max;; 537 delete [] tgmin;; 538 delete [] tgmax;; 539 delete [] vmin;; 540 delete [] vmax;; 541}; 542 ; 543////////////////////////////////////////////////////////////////////////////////; 544/// computes correlation matrix for variables ""theVars"" in tree;; 545/// ""theType"" defines the required event ""type""; 546/// (""type"" variable must be present in tree); 547 ; 548TMatrixD* TMVA::DataSetFactory::CalcCorrelationMatrix( DataSet* ds, const UInt_t classNumber ); 549{; 550 // first compute variance-covariance; 551 TMatrixD* mat = CalcCovarianceMatrix( ds, classNumber );; 552 ; 553 // now the correlation; 554 UInt_t nvar = ds->GetNVariables(), ivar, jvar;; 555 ; 556 for (ivar=0; ivar<nvar; ivar++) {; 557 for (jvar=0; jvar<nvar; jvar++) {; 558 if (ivar != jvar) {; 559 Double_t d = (*mat)(ivar, ivar)*(*mat)(jva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:22204,variab,variable,22204,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"4))) /* 1 is the this pointer */; 227#endif; 228 ;; 229 ; 230 void AbstractMethod(const char *method) const;; 231 void MayNotUse(const char *method) const;; 232 void Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) const;; 233 ; 234 //---- static functions; 235 static Longptr_t GetDtorOnly();; 236 static void SetDtorOnly(void *obj);; 237 static Bool_t GetObjectStat();; 238 static void SetObjectStat(Bool_t stat);; 239 ; 240 friend class TClonesArray; // needs to reset kNotDeleted in fBits; 241 friend bool ROOT::Internal::DeleteChangesMemoryImpl();; 242 ; 243 ClassDef(TObject,1) //Basic ROOT object; 244};; 245 ; 246////////////////////////////////////////////////////////////////////////////////; 247/// TObject constructor. It sets the two data words of TObject to their; 248/// initial values. The unique ID is set to 0 and the status word is; 249/// set depending if the object is created on the stack or allocated; 250/// on the heap. Depending on the ROOT environment variable ""Root.ObjStat""; 251/// (see TEnv) the object is added to the global TObjectTable for; 252/// bookkeeping.; 253 ; 254inline TObject::TObject() : fBits(kNotDeleted) // Need to leave fUniqueID unset; 255{; 256 // This will be reported by valgrind as uninitialized memory reads for; 257 // object created on the stack, use $ROOTSYS/etc/valgrind-root.supp; 258 TStorage::UpdateIsOnHeap(fUniqueID, fBits);; 259 ; 260 fUniqueID = 0;; 261 ; 262#ifdef R__WIN32; 263 if (R__unlikely(GetObjectStat())) TObject::AddToTObjectTable(this);; 264#else; 265 if (R__unlikely(fgObjectStat)) TObject::AddToTObjectTable(this);; 266#endif; 267}; 268 ; 269////////////////////////////////////////////////////////////////////////////////; 270/// TObject copy ctor.; 271 ; 272inline TObject::TObject(const TObject &obj); 273{; 274 fBits = obj.fBits;; 275 ; 276 // This will be reported by valgrind as uninitialized memory reads for; 277 // object created on the stack, use $ROOTSYS/etc/valgrind-root.supp; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8h_source.html:10832,variab,variable,10832,doc/master/TObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TObject_8h_source.html,1,['variab'],['variable']
Modifiability,"4, const RooCmdArg& arg5); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1,const RooCmdArg& arg2,				 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified number of events; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, Double_t nE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:64296,variab,variables,64296,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"4- Uniform(Double_t); 95- Landau(Double_t mean, Double_t sigma); 96- Poisson(Double_t mean); 97- Binomial(Int_t ntot, Double_t prob); 98 ; 99Random numbers distributed according to 1-d, 2-d or 3-d distributions contained in TF1, TF2 or TF3 objects can also be; 100generated. For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x) you can do : \code{.cpp} TF1; 101*f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10); double r = f1->GetRandom(); \endcode or you can use the UNURAN; 102package. You need in this case to initialize UNURAN to the function you would like to generate. \code{.cpp} TUnuran u;; 103 u.Init(TUnuranDistrCont(f1));; 104 double r = u.Sample();; 105\endcode; 106 ; 107The techniques of using directly a TF1,2 or 3 function is powerful and; 108can be used to generate numbers in the defined range of the function.; 109Getting a number from a TF1,2,3 function is also quite fast.; 110UNURAN is a powerful and flexible tool which contains various methods for; 111generate random numbers for continuous distributions of one and multi-dimension.; 112It requires some set-up (initialization) phase and can be very fast when the distribution; 113parameters are not changed for every call.; 114 ; 115The following table shows some timings (in nanosecond/call); 116for basic functions, TF1 functions and using UNURAN obtained running; 117the tutorial math/testrandom.C; 118Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; 119Linux SLC4 64 bit and compiled with gcc 3.4; 120 ; 121~~~~; 122Distribution nanoseconds/call; 123 TRandom TRandom1 TRandom2 TRandom3; 124Rndm.............. 5.000 105.000 7.000 10.000; 125RndmArray......... 4.000 104.000 6.000 9.000; 126Gaus.............. 36.000 180.000 40.000 48.000; 127Rannor............ 118.000 220.000 120.000 124.000; 128Landau............ 22.000 123.000 26.000 31.000; 129Exponential....... 93.000 198.000 98.000 104.000; 130Binomial(5,0.5)... 30.000 548.000 46.000 65.000; 131B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:7329,flexible,flexible,7329,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['flexible'],['flexible']
Modifiability,4.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80237,config,configuration,80237,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,4.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.34,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:87146,config,configuration,87146,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4.; }; // a C++11 lambda function checking ""x > 4""; 358auto c = d.Filter(metCut, {""MET""}).Count();; 359std::cout << *c << std::endl;; 360~~~; 361 ; 362An example of a more complex filter expressed as a string containing C++ code is shown below; 363 ; 364~~~{.cpp}; 365RDataFrame d(""myTree"", ""file.root"");; 366auto df = d.Define(""p"", ""std::array<double, 4> p{px, py, pz}; return p;""); 367 .Filter(""double p2 = 0.0; for (auto&& x : p) p2 += x*x; return sqrt(p2) < 10.0;"");; 368~~~; 369 ; 370The code snippet above defines a column `p` that is a fixed-size array using the component column names and then; 371filters on its magnitude by looping over its elements. It must be noted that the usage of strings to define columns; 372like the one above is currently the only possibility when using PyROOT. When writing expressions as such, only constants; 373and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; 374functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; 375it must first be declared to the ROOT C++ interpreter.; 376 ; 377More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters).; 378 ; 379### Defining custom columns; 380Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; 381quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; 382the variable ""z"":; 383~~~{.cpp}; 384RDataFrame d(""myTree"", ""file.root"");; 385auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; 386auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; 387std::cout << *zMean << std::endl;; 388~~~; 389Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; 390variables created with Define() as if they were actua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:22506,variab,variables,22506,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variables']
Modifiability,"4.; }; // a C++11 lambda function checking ""x > 4""; 362auto c = d.Filter(metCut, {""MET""}).Count();; 363std::cout << *c << std::endl;; 364~~~; 365 ; 366An example of a more complex filter expressed as a string containing C++ code is shown below; 367 ; 368~~~{.cpp}; 369RDataFrame d(""myTree"", ""file.root"");; 370auto df = d.Define(""p"", ""std::array<double, 4> p{px, py, pz}; return p;""); 371 .Filter(""double p2 = 0.0; for (auto&& x : p) p2 += x*x; return sqrt(p2) < 10.0;"");; 372~~~; 373 ; 374The code snippet above defines a column `p` that is a fixed-size array using the component column names and then; 375filters on its magnitude by looping over its elements. It must be noted that the usage of strings to define columns; 376like the one above is currently the only possibility when using PyROOT. When writing expressions as such, only constants; 377and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; 378functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; 379it must first be declared to the ROOT C++ interpreter.; 380 ; 381More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters).; 382 ; 383### Defining custom columns; 384Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; 385quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; 386the variable ""z"":; 387~~~{.cpp}; 388RDataFrame d(""myTree"", ""file.root"");; 389auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; 390auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; 391std::cout << *zMean << std::endl;; 392~~~; 393Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; 394variables created with Define() as if they were actua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:22948,variab,variables,22948,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variables']
Modifiability,"40#else; 4141 if ( IsDefaultVector(proxy); 4142 /*|| (proxy.GetCollectionType() == ROOT::kSTLset || proxy.GetCollectionType() == ROOT::kSTLmultiset; 4143 || proxy.GetCollectionType() == ROOT::kSTLmap || proxy.GetCollectionType() == ROOT::kSTLmultimap)*/ ); 4144 {; 4145 sequence->AddAction( GetCollectionWriteAction<VectorLooper>(info,element,oldType,i,compinfo,offset) );; 4146 } else {; 4147 // NOTE: TBranch::FillLeavesCollection[Member] is not yet ready to handle the sequence; 4148 // as it does not create/use a TStaging as expected ... but then again it might; 4149 // not be the right things to expect ...; 4150 // sequence->AddAction( GetCollectionWriteAction<GenericLooper>(info,element,oldType,i,compinfo,offset) );; 4151 sequence->AddAction( GenericLooper::GenericWrite, new TConfigSTL(info,i,compinfo,0 /* the offset will be used from TStreamerInfo */,0,proxy.GetCollectionClass(),0,0) );; 4152 }; 4153#endif; 4154 }; 4155 return sequence;; 4156}; 4157 ; 4158void TStreamerInfoActions::TActionSequence::AddToOffset(Int_t delta); 4159{; 4160 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4161 // TBranchElement in the case of split sub-object.; 4162 ; 4163 TStreamerInfoActions::ActionContainer_t::iterator end = fActions.end();; 4164 for(TStreamerInfoActions::ActionContainer_t::iterator iter = fActions.begin();; 4165 iter != end;; 4166 ++iter); 4167 {; 4168 // (fElemId == -1) indications that the action is a Push or Pop DataCache.; 4169 if (iter->fConfiguration->fElemId != (UInt_t)-1 &&; 4170 !iter->fConfiguration->fInfo->GetElements()->At(iter->fConfiguration->fElemId)->TestBit(TStreamerElement::kCache)); 4171 iter->fConfiguration->AddToOffset(delta);; 4172 }; 4173}; 4174 ; 4175void TStreamerInfoActions::TActionSequence::SetMissing(); 4176{; 4177 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4178 // TBranchElement in the case of split sub-object.; 4179 ; 4180 TStreamerInfoActions::A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:196136,config,configuration,196136,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"4068/// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; 4069/// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; 4070/// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; 4071/// (in RooFit jargon, ""if the pdf can be extended"").; 4072/// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; 4073/// and the chi2 will fall back to the total data weight to scale the normalized pdf.; 4074/// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; 4075/// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; 4076/// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; 4077/// printed and you'll most likely get garbage results.; 4078/// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; 4079/// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; 4080/// Multiple comma separated range names can be specified.; 4081/// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; 4082/// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); 4083/// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; 4084///; 4085/// <tr><th> <th> Options to control flow of fit procedure; 4086/// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; 4087/// <tr><td> `Hesse(bool flag)` <td> ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:176805,extend,extended,176805,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['extend'],['extended']
Modifiability,"40; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TBuffer::ReadProcessIDvirtual TProcessID * ReadProcessID(UShort_t pidf)=0Return the current Process-ID.Definition TBuffer.cxx:344; TBuffer::WriteProcessIDvirtual UShort_t WriteProcessID(TProcessID *pid)=0Always return 0 (current processID).Definition TBuffer.cxx:353; TBuffer::GetParentTObject * GetParent() constReturn pointer to parent of this buffer.Definition TBuffer.cxx:262; TBuffer::GetPidOffsetvirtual UShort_t GetPidOffset() const =0; TBuffer::IsReadingBool_t IsReading() constDefinition TBuffer.h:86; TBuffer::WriteVersionvirtual UInt_t WriteVersion(const TClass *cl, Bool_t useBcnt=kFALSE)=0; TBuffer::SkipVersionvirtual void SkipVersion(const TClass *cl=nullptr)=0; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Drawvoid Draw(Option_t *option="""") overrideDraw detailed class inheritance structure.Definition TClass.cxx:2554; TClass::DynamicCastvoid * DynamicCast(const TClass *base, void *obj, Bool_t up=kTRUE)Cast obj of this class type up to baseclass cl if up is true.Definition TClass.cxx:4982; TClass::AutoBrowsestatic Int_t AutoBrowse(TObject *obj, TBrowser *browser)Browse external object inherited from TObject.Definition TClass.cxx:2033; TClass::Dumpvoid Dump() const overrideDump contents of object on stdout.Definition TClass.h:398; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TGuiFactory::CreateInspectorImpvirtual TInspectorImp * CreateInspectorImp(const TObject *obj, UInt_t width, UInt_t height)Create a batch version of TInspectorImp.Definition TGuiFactory.cxx:182; TListIterIterator of linked list.Definition TList.h:193; TListIter::GetOptionOption_t * GetOption() const overrideReturns the object option s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:46888,inherit,inheritance,46888,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"40Bins are defined using one of the `AddBin()` methods. The bin definition; 41should be done before filling.; 42 ; 43The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); 44`. `w` is the weight.; 45If no weight is specified, it is assumed to be 1.; 46 ; 47Not all histogram's area need to be binned. Filling an area without bins,; 48will falls into the overflows. Adding a bin is not retroactive; it doesn't; 49affect previous fillings. A `Fill()` call, that; 50was previously ignored due to the lack of a bin at the specified location, is; 51not reconsidered when that location is binned later.; 52 ; 53If there are two overlapping bins, the first one in the list will be incremented; 54by `Fill()`.; 55 ; 56The histogram may automatically extends its limits if a bin outside the; 57histogram limits is added. This is done when the default constructor (with no; 58arguments) is used. It generates a histogram with no limits along the X and Y; 59axis. Adding bins to it will extend it up to a proper size.; 60 ; 61`TH2Poly` implements a partitioning algorithm to speed up bins' filling; 62(see the ""Partitioning Algorithm"" section for details).; 63The partitioning algorithm divides the histogram into regions called cells.; 64The bins that each cell intersects are recorded in an array of `TList`s.; 65When a coordinate in the histogram is to be filled; the method (quickly) finds; 66which cell the coordinate belongs. It then only loops over the bins; 67intersecting that cell to find the bin the input coordinate corresponds to.; 68The partitioning of the histogram is updated continuously as each bin is added.; 69The default number of cells on each axis is 25. This number could be set to; 70another value in the constructor or adjusted later by calling the; 71`ChangePartition(Int_t, Int_t)` method. The partitioning algorithm is; 72considerably faster than the brute force algorithm (i.e. checking if each bin; 73contains the input coordinates), especially if the histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:2449,extend,extend,2449,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,1,['extend'],['extend']
Modifiability,"40void TFormula::SetName(const char* name); 2641{; 2642 if (IsReservedName(name)) {; 2643 Error(""SetName"", ""The name \'%s\' is reserved as a TFormula variable name.\n""; 2644 ""\tThis function will not be renamed."",; 2645 name);; 2646 } else {; 2647 // Here we need to remove and re-add to keep the hashes consistent with; 2648 // the underlying names.; 2649 auto listOfFunctions = gROOT->GetListOfFunctions();; 2650 TObject* thisAsFunctionInList = nullptr;; 2651 R__LOCKGUARD(gROOTMutex);; 2652 if (listOfFunctions){; 2653 thisAsFunctionInList = listOfFunctions->FindObject(this);; 2654 if (thisAsFunctionInList) listOfFunctions->Remove(thisAsFunctionInList);; 2655 }; 2656 TNamed::SetName(name);; 2657 if (thisAsFunctionInList) listOfFunctions->Add(thisAsFunctionInList);; 2658 }; 2659}; 2660 ; 2661////////////////////////////////////////////////////////////////////////////////; 2662///; 2663/// Sets multiple variables.; 2664/// First argument is an array of pairs<TString,Double>, where; 2665/// first argument is name of variable,; 2666/// second argument represents value.; 2667/// size - number of variables passed in first argument; 2668 ; 2669void TFormula::SetVariables(const pair<TString,Double_t> *vars, const Int_t size); 2670{; 2671 for(Int_t i = 0; i < size; ++i); 2672 {; 2673 auto &v = vars[i];; 2674 if (fVars.find(v.first) != fVars.end()) {; 2675 fVars[v.first].fValue = v.second;; 2676 fClingVariables[fVars[v.first].fArrayPos] = v.second;; 2677 } else {; 2678 Error(""SetVariables"", ""Variable %s is not defined."", v.first.Data());; 2679 }; 2680 }; 2681}; 2682 ; 2683////////////////////////////////////////////////////////////////////////////////; 2684/// Returns variable value.; 2685 ; 2686Double_t TFormula::GetVariable(const char *name) const; 2687{; 2688 const auto nameIt = fVars.find(name);; 2689 if (fVars.end() == nameIt) {; 2690 Error(""GetVariable"", ""Variable %s is not defined."", name);; 2691 return -1;; 2692 }; 2693 return nameIt->second.fValue;; 2694}; 2695 ; 2696//",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:102769,variab,variable,102769,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,41 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.3584,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:106567,config,configuration,106567,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"41/// defined by the getGenerator() implementation. The default; 1542/// implementation does nothing.; 1543 ; 1544void RooAbsPdf::generateEvent(Int_t /*code*/); 1545{; 1546}; 1547 ; 1548 ; 1549 ; 1550////////////////////////////////////////////////////////////////////////////////; 1551/// Check if given observable can be safely generated using the; 1552/// pdfs internal generator mechanism (if that existsP). Observables; 1553/// on which a PDF depends via more than route are not safe; 1554/// for use with internal generators because they introduce; 1555/// correlations not known to the internal generator; 1556 ; 1557bool RooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; 1558{; 1559 // Arg must be direct server of self; 1560 if (!findServer(arg.GetName())) return false ;; 1561 ; 1562 // There must be no other dependency routes; 1563 for (const auto server : _serverList) {; 1564 if(server == &arg) continue;; 1565 if(server->dependsOn(arg)) {; 1566 return false ;; 1567 }; 1568 }; 1569 ; 1570 return true ;; 1571}; 1572 ; 1573 ; 1574////////////////////////////////////////////////////////////////////////////////; 1575/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1576/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1577/// constant and not be used for event generation; 1578/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg to change behaviour of generateBinned(); 1579/// \return RooDataHist *, to be managed by caller.; 1580///; 1581/// Generate the specified number of events or expectedEvents() if not specified.; 1582///; 1583/// Any variables of this PDF that are not in whatVars will use their; 1584/// current values and be treated as fixed parameters. Returns zero; 1585/// in case of an error. The caller takes ownership of the returned; 1586/// dataset.; 1587///; 1588/// The following named arguments are supported; 1589/// | Type of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:76843,variab,variables,76843,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"418on this [below](#callgraphs)).; 419 ; 420You can read more about defining new columns [here](#custom-columns).; 421 ; 422\image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action.""; 423 ; 424 ; 425### Running on a range of entries; 426It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; 427offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; 428actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; 429exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); 430hanging from another Range(). Here are some commented examples:; 431~~~{.cpp}; 432RDataFrame d(""myTree"", ""file.root"");; 433// Here we store a dataframe that loops over only the first 30 entries in a variable; 434auto d30 = d.Range(30);; 435// This is how you pick all entries from 15 onwards; 436auto d15on = d.Range(15, 0);; 437// We can specify a stride too, in this case we pick an event every 3; 438auto d15each3 = d.Range(0, 15, 3);; 439~~~; 440Note that ranges are not available when multi-threading is enabled. More information on ranges is available; 441[here](#ranges).; 442 ; 443### Executing multiple actions in the same event loop; 444As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; 445the filtered events.; 446By now, you should be able to easily understand what is happening:; 447~~~{.cpp}; 448RDataFrame d(""treeName"", ""file.root"");; 449auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; 450auto h2 = d.Histo1D(""pt_v"");; 451h1->Draw(); // event loop is run once here; 452h2->Draw(""SAME""); // no need to run the event loop again; 453~~~; 454RDataFrame executes all above actions by **",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:26590,variab,variable,26590,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"42 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19843 mg_snprintf(NULL,; 19844 NULL, /* No truncation check for error buffers */; 19845 error->text,; 19846 error->text_buffer_size,; 19847 ""Invalid configuration option value: %s"",; 19848 config_options[NUM_THREADS].name);; 19849 }; 19850 free_context(ctx);; 19851 pthread_setspecific(sTlsKey, NULL);; 19852 return NULL;; 19853 }; 19854 ; 19855 /* Document root */; 19856#if defined(NO_FILES); 19857 if (ctx->dd.config[DOCUMENT_ROOT] != NULL) {; 19858 mg_cry_ctx_internal(ctx, ""%s"", ""Document root must not be set"");; 19859 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19860 mg_snprintf(NULL,; 19861 NULL, /* No truncation check for error buffers */; 19862 error->text,; 19863 error->text_buffer_size,; 19864 ""Invalid configuration option value: %s"",; 19865 config_options[DOCUMENT_ROOT].name);; 19866 }; 19867 free_context(ctx);; 19868 pthread_setspecific(sTlsKey, NULL);; 19869 return NULL;; 19870 }; 19871#endif; 19872 ; 19873 get_system_name(&ctx->systemName);; 19874 ; 19875#if defined(USE_LUA); 19876 /* If a Lua background script has been configured, start it. */; 19877 ctx->lua_bg_log_available = 0;; 19878 if (ctx->dd.config[LUA_BACKGROUND_SCRIPT] != NULL) {; 19879 char ebuf[256];; 19880 struct vec opt_vec;; 19881 struct vec eq_vec;; 19882 const char *sparams;; 19883 ; 19884 memset(ebuf, 0, sizeof(ebuf));; 19885 pthread_mutex_lock(&ctx->lua_bg_mutex);; 19886 ; 19887 /* Create a Lua state, load all standard libraries and the mg table */; 19888 lua_State *state = mg_lua_context_script_prepare(; 19889 ctx->dd.config[LUA_BACKGROUND_SCRIPT], ctx, ebuf, sizeof(ebuf));; 19890 if (!state) {; 19891 mg_cry_ctx_internal(ctx,; 19892 ""lua_background_script load error: %s"",; 19893 ebuf);; 19894 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19895 mg_snprintf(NULL,; 19896 NULL, /* No truncation check for error buffers */; 19897 error->text,; 19898 error->text_buffer_size,; 19899 ""Error in script %s: %s"",; 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:593775,config,configured,593775,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"422on this [below](#callgraphs)).; 423 ; 424You can read more about defining new columns [here](#custom-columns).; 425 ; 426\image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action.""; 427 ; 428 ; 429### Running on a range of entries; 430It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; 431offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; 432actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; 433exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); 434hanging from another Range(). Here are some commented examples:; 435~~~{.cpp}; 436RDataFrame d(""myTree"", ""file.root"");; 437// Here we store a dataframe that loops over only the first 30 entries in a variable; 438auto d30 = d.Range(30);; 439// This is how you pick all entries from 15 onwards; 440auto d15on = d.Range(15, 0);; 441// We can specify a stride too, in this case we pick an event every 3; 442auto d15each3 = d.Range(0, 15, 3);; 443~~~; 444Note that ranges are not available when multi-threading is enabled. More information on ranges is available; 445[here](#ranges).; 446 ; 447### Executing multiple actions in the same event loop; 448As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; 449the filtered events.; 450By now, you should be able to easily understand what is happening:; 451~~~{.cpp}; 452RDataFrame d(""treeName"", ""file.root"");; 453auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; 454auto h2 = d.Histo1D(""pt_v"");; 455h1->Draw(); // event loop is run once here; 456h2->Draw(""SAME""); // no need to run the event loop again; 457~~~; 458RDataFrame executes all above actions by **",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:27032,variab,variable,27032,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.8202,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104382,config,configuration,104382,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"427 if (ROOT::TMetaUtils::GetErrorIgnoreLevel() == ROOT::TMetaUtils::kInfo) {; 4428 ROOT::TMetaUtils::Info(nullptr, ""\n"");; 4429 ROOT::TMetaUtils::Info(nullptr, ""==== INTERPRETER CONFIGURATION ====\n"");; 4430 ROOT::TMetaUtils::Info(nullptr, ""== Include paths\n"");; 4431 interp.DumpIncludePath();; 4432 printf(""\n\n"");; 4433 fflush(stdout);; 4434 ; 4435 ROOT::TMetaUtils::Info(nullptr, ""== Included files\n"");; 4436 interp.printIncludedFiles(llvm::outs());; 4437 llvm::outs() << ""\n\n"";; 4438 llvm::outs().flush();; 4439 ; 4440 ROOT::TMetaUtils::Info(nullptr, ""== Language Options\n"");; 4441 const clang::LangOptions& LangOpts; 4442 = interp.getCI()->getASTContext().getLangOpts();; 4443#define LANGOPT(Name, Bits, Default, Description) \; 4444 ROOT::TMetaUtils::Info(nullptr, ""%s = %d // %s\n"", #Name, (int)LangOpts.Name, Description);; 4445#define ENUM_LANGOPT(Name, Type, Bits, Default, Description); 4446#include ""clang/Basic/LangOptions.def""; 4447 ROOT::TMetaUtils::Info(nullptr, ""==== END interpreter configuration ====\n\n"");; 4448 }; 4449 ; 4450 interp.getOptions().ErrorOut = true;; 4451 interp.enableRawInput(true);; 4452 ; 4453 if (gOptCxxModule) {; 4454 for (llvm::StringRef DepMod : gOptModuleDependencies) {; 4455 if (DepMod.endswith(""_rdict.pcm"")) {; 4456 ROOT::TMetaUtils::Warning(nullptr, ""'%s' value is deprecated. Please use [<fullpath>]%s.pcm\n"",; 4457 DepMod.data(),; 4458 GetModuleNameFromRdictName(DepMod).str().data());; 4459 }; 4460 DepMod = GetModuleNameFromRdictName(DepMod);; 4461 // We might deserialize.; 4462 cling::Interpreter::PushTransactionRAII RAII(&interp);; 4463 if (!interp.loadModule(DepMod.str(), /*complain*/false)) {; 4464 ROOT::TMetaUtils::Error(nullptr, ""Module '%s' failed to load.\n"",; 4465 DepMod.data());; 4466 }; 4467 }; 4468 }; 4469 ; 4470 if (!isGenreflex) { // rootcling; 4471 // ROOTCINT uses to define a few header implicitly, we need to do it explicitly.; 4472 if (interp.declare(""#include <assert.h>\n""; 4473 ""#include \""Rtypes.h\""\n""; 4474 ""#in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:182620,config,configuration,182620,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['config'],['configuration']
Modifiability,"4275 }; 4276// loop satisfied = too many iter; 4277 mnwarn(""D"", ""MNHES1"", TString::Format(""Too many iterations on D1.%g%g"",grdold,grdnew));; 4278L60:; 4279 fDgrd[i-1] = TMath::Max(dgmin,TMath::Abs(grdold - grdnew));; 4280 }; 4281// end of first deriv. loop; 4282 mninex(fX);; 4283}; 4284 ; 4285////////////////////////////////////////////////////////////////////////////////; 4286/// Attempts to improve on a good local minimum; 4287///; 4288/// Attempts to improve on a good local minimum by finding a; 4289/// better one. The quadratic part of FCN is removed by MNCALF; 4290/// and this transformed function is minimised using the simplex; 4291/// method from several random starting points.; 4292///; 4293/// ref. -- Goldstein and Price, Math.Comp. 25, 569 (1971); 4294 ; 4295void TMinuit::mnimpr(); 4296{; 4297 /* Initialized data */; 4298 ; 4299 Double_t rnum = 0;; 4300 ; 4301 /* Local variables */; 4302 Double_t amax, ycalf, ystar, ystst;; 4303 Double_t pb, ep, wg, xi, sigsav, reg, sig2;; 4304 Int_t npfn, ndex, loop=0, i, j, ifail, iseed=0;; 4305 Int_t jhold, nloop, nparx, nparp1, jh, jl, iswtr;; 4306 ; 4307 if (fNpar <= 0) return;; 4308 if (fAmin == fUndefi) mnamin();; 4309 fCstatu = ""UNCHANGED "";; 4310 fItaur = 1;; 4311 fEpsi = fUp*.1;; 4312 npfn = fNfcn;; 4313 nloop = Int_t(fWord7[1]);; 4314 if (nloop <= 0) nloop = fNpar + 4;; 4315 nparx = fNpar;; 4316 nparp1 = fNpar + 1;; 4317 wg = 1 / Double_t(fNpar);; 4318 sigsav = fEDM;; 4319 fApsi = fAmin;; 4320 iswtr = fISW[4] - 2*fItaur;; 4321 for (i = 1; i <= fNpar; ++i) {; 4322 fXt[i-1] = fX[i-1];; 4323 fIMPRdsav[i-1] = fWerr[i-1];; 4324 for (j = 1; j <= i; ++j) {; 4325 ndex = i*(i-1) / 2 + j;; 4326 fP[i + j*fMaxpar - fMaxpar-1] = fVhmat[ndex-1];; 4327 fP[j + i*fMaxpar - fMaxpar-1] = fP[i + j*fMaxpar - fMaxpar-1];; 4328 }; 4329 }; 4330 mnvert(fP, fMaxint, fMaxint, fNpar, ifail);; 4331 if (ifail >= 1) goto L280;; 4332// Save inverted matrix in VT; 4333 for (i = 1; i <= fNpar; ++i) {; 4334 ndex = i*(i-1) / 2;; 4335 for (j = 1; j",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:144146,variab,variables,144146,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"43 // Setup customizer that stores all cloned branches in our non-owning list; 3844 RooCustomizer cust(*this,""cdf"") ;; 3845 cust.setCloneBranchSet(clonedBranchNodes) ;; 3846 cust.setOwning(false) ;; 3847 ; 3848 // Make integration observable x_prime for each observable x as well as an x_lowbound; 3849 for(auto * rrv : static_range_cast<RooRealVar*>(ilist)) {; 3850 ; 3851 // Make clone x_prime of each c.d.f observable x represening running integral; 3852 RooRealVar* cloneArg = static_cast<RooRealVar*>(rrv->clone(Form(""%s_prime"",rrv->GetName()))) ;; 3853 cloneList.add(*cloneArg) ;; 3854 cust.replaceArg(*rrv,*cloneArg) ;; 3855 ; 3856 // Make clone x_lowbound of each c.d.f observable representing low bound of x; 3857 RooRealVar* cloneLo = static_cast<RooRealVar*>(rrv->clone(Form(""%s_lowbound"",rrv->GetName()))) ;; 3858 cloneLo->setVal(rrv->getMin()) ;; 3859 loList.add(*cloneLo) ;; 3860 ; 3861 // Make parameterized binning from [x_lowbound,x] for each x_prime; 3862 RooParamBinning pb(*cloneLo,*rrv,100) ;; 3863 cloneArg->setBinning(pb,""CDF"") ;; 3864 ; 3865 }; 3866 ; 3867 RooAbsReal* tmp = static_cast<RooAbsReal*>(cust.build()) ;; 3868 ; 3869 // Construct final normalization set for c.d.f = integrated observables + any extra specified by user; 3870 RooArgSet finalNset(nset) ;; 3871 finalNset.add(cloneList,true) ;; 3872 std::unique_ptr<RooAbsReal> cdf{tmp->createIntegral(cloneList,finalNset,""CDF"")};; 3873 ; 3874 // Transfer ownership of cloned items to top-level c.d.f object; 3875 cdf->addOwnedComponents(*tmp) ;; 3876 cdf->addOwnedComponents(cloneList) ;; 3877 cdf->addOwnedComponents(loList) ;; 3878 ; 3879 return RooFit::makeOwningPtr(std::move(cdf));; 3880}; 3881 ; 3882 ; 3883////////////////////////////////////////////////////////////////////////////////; 3884/// Return a RooFunctor object bound to this RooAbsReal with given definition of observables; 3885/// and parameters; 3886 ; 3887RooFunctor* RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars, const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:166224,parameteriz,parameterized,166224,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['parameteriz'],['parameterized']
Modifiability,"43 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19844 mg_snprintf(NULL,; 19845 NULL, /* No truncation check for error buffers */; 19846 error->text,; 19847 error->text_buffer_size,; 19848 ""Invalid configuration option value: %s"",; 19849 config_options[NUM_THREADS].name);; 19850 }; 19851 free_context(ctx);; 19852 pthread_setspecific(sTlsKey, NULL);; 19853 return NULL;; 19854 }; 19855 ; 19856 /* Document root */; 19857#if defined(NO_FILES); 19858 if (ctx->dd.config[DOCUMENT_ROOT] != NULL) {; 19859 mg_cry_ctx_internal(ctx, ""%s"", ""Document root must not be set"");; 19860 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19861 mg_snprintf(NULL,; 19862 NULL, /* No truncation check for error buffers */; 19863 error->text,; 19864 error->text_buffer_size,; 19865 ""Invalid configuration option value: %s"",; 19866 config_options[DOCUMENT_ROOT].name);; 19867 }; 19868 free_context(ctx);; 19869 pthread_setspecific(sTlsKey, NULL);; 19870 return NULL;; 19871 }; 19872#endif; 19873 ; 19874 get_system_name(&ctx->systemName);; 19875 ; 19876#if defined(USE_LUA); 19877 /* If a Lua background script has been configured, start it. */; 19878 ctx->lua_bg_log_available = 0;; 19879 if (ctx->dd.config[LUA_BACKGROUND_SCRIPT] != NULL) {; 19880 char ebuf[256];; 19881 struct vec opt_vec;; 19882 struct vec eq_vec;; 19883 const char *sparams;; 19884 ; 19885 memset(ebuf, 0, sizeof(ebuf));; 19886 pthread_mutex_lock(&ctx->lua_bg_mutex);; 19887 ; 19888 /* Create a Lua state, load all standard libraries and the mg table */; 19889 lua_State *state = mg_lua_context_script_prepare(; 19890 ctx->dd.config[LUA_BACKGROUND_SCRIPT], ctx, ebuf, sizeof(ebuf));; 19891 if (!state) {; 19892 mg_cry_ctx_internal(ctx,; 19893 ""lua_background_script load error: %s"",; 19894 ebuf);; 19895 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19896 mg_snprintf(NULL,; 19897 NULL, /* No truncation check for error buffers */; 19898 error->text,; 19899 error->text_buffer_size,; 19900 ""Error in script %s: %s"",; 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:593808,config,configured,593808,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,43.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80916,config,configuration,80916,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4324 ; 4325#include <dlfcn.h>; 4326 ; 4327#endif; 4328 ; 4329typedef void (*voidfunc)();; 4330static const char *R__GetSymbolName(voidfunc func); 4331{; 4332#if defined(R__WIN32) || defined(__CYGWIN__) || defined(_AIX); 4333 return ""not available on this platform"";; 4334#if 0; 4335 MEMORY_BASIC_INFORMATION mbi;; 4336 if (!VirtualQuery (func, &mbi, sizeof (mbi))); 4337 {; 4338 return 0;; 4339 }; 4340 ; 4341 HMODULE hMod = (HMODULE) mbi.AllocationBase;; 4342 static char moduleName[MAX_PATH];; 4343 ; 4344 if (!GetModuleFileNameA (hMod, moduleName, sizeof (moduleName))); 4345 {; 4346 return 0;; 4347 }; 4348 return moduleName;; 4349#endif; 4350#else; 4351 Dl_info info;; 4352 if (dladdr((void*)func,&info)==0) {; 4353 // Not in a known share library, let's give up; 4354 return ""name not found"";; 4355 } else {; 4356 //fprintf(stdout,""Found address in %s\n"",info.dli_fname);; 4357 return info.dli_sname;; 4358 }; 4359#endif; 4360}; 4361 ; 4362void TStreamerInfoActions::TActionSequence::Print(Option_t *opt) const; 4363{; 4364 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4365 // TTBranchElement in the case of split sub-object.; 4366 // If opt contains 'func', also print the (mangled) name of the function that will be executed.; 4367 ; 4368 if (fLoopConfig) {; 4369 fLoopConfig->Print();; 4370 }; 4371 TStreamerInfoActions::ActionContainer_t::const_iterator end = fActions.end();; 4372 for(TStreamerInfoActions::ActionContainer_t::const_iterator iter = fActions.begin();; 4373 iter != end;; 4374 ++iter); 4375 {; 4376 iter->fConfiguration->Print();; 4377 if (strstr(opt,""func"")) {; 4378 printf(""StreamerInfoAction func: %s\n"",R__GetSymbolName((voidfunc)iter->fAction));; 4379 }; 4380 }; 4381}; 4382 ; 4383 ; b#define b(i)Definition RSha256.hxx:100; UShort_tunsigned short UShort_tDefinition RtypesCore.h:40; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCore.h:105; Version_tshort Version_tDefinition Rty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:204757,config,configuration,204757,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error found - save the configuration ; : 999 | 3.31412 4.14973 0.0202938 0.00187677 43438 0; : 1000 | 3.20867 4.17264 0.0201802 0.00179416 43511.4 1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:113452,config,configuration,113452,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 M,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76561,config,configuration,76561,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104101,config,configuration,104101,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103987,config,configuration,103987,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92728,config,configuration,92728,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103817,config,configuration,103817,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,4394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 320,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16651,config,configuration,16651,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"43E20 6,43e20; 6.43e-20 6.43E-20 6,43e-20. TString Itoa(Int_t value, Int_t base); Converts an Int_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; Usage: the following statement produce the same output, namely ""1111""; cout << TString::Itoa(15,2) ;; cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; In case of error returns the ""!"" string. TString UItoa(UInt_t value, Int_t base); Converts a UInt_t (twice the range of an Int_t) to a TString with respect; to the base specified (2-36). Thus it is an enhanced version of sprintf; (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString LLtoa(Long64_t value, Int_t base); Converts a Long64_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString ULLtoa(ULong64_t value, Int_t base); Converts a ULong64_t (twice the range of an Long64_t) to a TString with; respect to the base specified (2-36). Thus it is an enhanced version of; sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Converts string from base base_in to base base_out. Supported bases; are 2-36. At most 64 bit data can be converted. Bool_t EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Return true if string ends with the specified string. TObjArray * Tokenize(const TString& delim) const; This function is used to isolate sequential tokens in a TString.; These tokens are separated in the string by at least one of the; characters in delim. The returned array contains the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TString.html:18819,enhance,enhanced,18819,root/html534/TString.html,https://root.cern,https://root.cern/root/html534/TString.html,2,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"43\class TH2F; 44\brief 2-D histogram with a float per channel (see TH1 documentation); 45\class TH2D; 46\brief 2-D histogram with a double per channel (see TH1 documentation); 47@}; 48*/; 49 ; 50/** \class TH2; 51 Service class for 2-D histogram classes; 52 ; 53- TH2C a 2-D histogram with one byte per cell (char). Maximum bin content = 127; 54- TH2S a 2-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; 55- TH2I a 2-D histogram with four bytes per cell (32 bit integer). Maximum bin content = INT_MAX (\ref intmax2 ""*""); 56- TH2L a 2-D histogram with eight bytes per cell (64 bit integer). Maximum bin content = LLONG_MAX (\ref llongmax2 ""**""); 57- TH2F a 2-D histogram with four bytes per cell (float). Maximum precision 7 digits, maximum integer bin content = +/-16777216 (\ref floatmax2 ""***""); 58- TH2D a 2-D histogram with eight bytes per cell (double). Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax2 ""****""); 59 ; 60<sup>; 61\anchor intmax2 (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 62\anchor llongmax2 (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 63\anchor floatmax2 (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; 64\anchor doublemax2 (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); 65</sup>; 66 ; 67*/; 68 ; 69 ; 70////////////////////////////////////////////////////////////////////////////////; 71/// 2-D histogram default constructor.; 72 ; 73TH2::TH2(); 74{; 75 fDimension = 2;; 76 fScalefactor = 1;; 77 fTsumwy = fTsumwy2 = fTsumwxy = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:2568,variab,variable,2568,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,44777 1.9988 ]; : y: 1.4942 0.76640 [ 0.014777 2.9933 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : --------------------------; : Rank : Variable : Separation; : --------------------------; : 1 : y : 5.413e-01; : 2 : x : 4.319e-02; : --------------------------; <HEADER> Factory : Train method: BDT for Classification; : ; <HEADER> BDT : #events: (reweighted) sig: 500 bkg: 500; : #events: (unweighted) sig: 500 bkg: 500; : Training 800 Decision Trees ... patience please; : Elapsed time for training with 1000 events: 0.386 sec ; <HEADER> BDT : [dataset] : Evaluation of BDT on training sample (1000 events); : Elapsed time for evaluation of 1000 events: 0.0729 sec ; : Creating xml weight file: dataset/weights/_BDT.weights.xml; : Creating standalone class: dataset/weights/_BDT.class.C; : out.root:/dataset/Method_BDT/BDT; <HEADER> Factory : Training finished; : ; : Ranking input variables (method specific)...; <HEADER> BDT : Ranking result (top variable is best ranked); : -----------------------------------; : Rank : Variable : Variable Importance; : -----------------------------------; : 1 : y : 5.011e-01; : 2 : x : 4.989e-01; : -----------------------------------; <HEADER> Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: dataset/weights/_BDT.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDT for Classification performance; : ; <HEADER> BDT : [dataset] : Evaluation of BDT on testing sample (1000 events); : Elapsed time for evaluation of 1000 events: 0.0581 sec ; <HEADER> Factory : Evaluate all methods; <HEADER> Factory : Evaluate classifier: BDT; : ; <HEADER> BDT : [dataset] : Loop over test events and fill histograms with classifier response...; : ; <HEADER> TFHandler_BDT : Variable Mean RMS [ Min Max ]; : ------------------------------,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMinimalClassification_8C.html:4307,variab,variables,4307,doc/master/TMVAMinimalClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMinimalClassification_8C.html,1,['variab'],['variables']
Modifiability,"44;  ; Float_t yeelec;  ; Float_t yjbc;  ; Float_t yjbct;  ; Float_t ypt;  ; Float_t z0 [200];  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/h1analysis.h>. Inheritance diagram for h1analysis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ h1analysis(). h1analysis::h1analysis ; (; TTree * ; tree = nullptr). Definition at line 369 of file h1analysis.h. ◆ ~h1analysis(). h1analysis::~h1a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysis.html:18541,inherit,inherited,18541,doc/master/classh1analysis.html,https://root.cern,https://root.cern/doc/master/classh1analysis.html,2,['inherit'],['inherited']
Modifiability,"45 ; 12046 if ((len + 2) > (int)sizeof(buf)) {; 12047 /* Tag to long for buffer */; 12048 mg_cry_internal(conn, ""%s: tag is too large"", path);; 12049 return;; 12050 }; 12051 }; 12052 ; 12053 } else {; 12054 ; 12055 /* We are not in a tag yet. */; 12056 if (ch == '<') {; 12057 /* Tag is opening */; 12058 in_tag = 1;; 12059 ; 12060 if (len > 0) {; 12061 /* Flush current buffer.; 12062 * Buffer is filled with ""len"" bytes. */; 12063 (void)mg_write(conn, buf, (size_t)len);; 12064 }; 12065 /* Store the < */; 12066 len = 1;; 12067 buf[0] = '<';; 12068 ; 12069 } else {; 12070 /* No Tag */; 12071 /* Add data to buffer */; 12072 buf[len++] = (char)(ch & 0xff);; 12073 /* Flush if buffer is full */; 12074 if (len == (int)sizeof(buf)) {; 12075 mg_write(conn, buf, (size_t)len);; 12076 len = 0;; 12077 }; 12078 }; 12079 }; 12080 }; 12081 ; 12082 /* Send the rest of buffered data */; 12083 if (len > 0) {; 12084 mg_write(conn, buf, (size_t)len);; 12085 }; 12086}; 12087 ; 12088 ; 12089static void; 12090handle_ssi_file_request(struct mg_connection *conn,; 12091 const char *path,; 12092 struct mg_file *filep); 12093{; 12094 char date[64];; 12095 time_t curtime = time(NULL);; 12096 const char *cors_orig_cfg, *cors_cred_cfg;; 12097 const char *cors1, *cors2, *cors3, *cors4;; 12098 ; 12099 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12100 return;; 12101 }; 12102 ; 12103 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12104 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12105 /* Cross-origin resource sharing (CORS). */; 12106 cors1 = ""Access-Control-Allow-Origin"";; 12107 cors2 = cors_orig_cfg;; 12108 } else {; 12109 cors1 = cors2 = """";; 12110 }; 12111 ; 12112 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12113 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12114 /* Credentials CORS header */; 12115 cors3 = ""Access-Control-Allow-Credentials"";; 12116 cors4 = cors_cred_cfg;; 1211",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:349908,config,config,349908,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"45 out<<"" line->Draw();""<<std::endl;; 446}; 447 ; 448////////////////////////////////////////////////////////////////////////////////; 449/// Check whether this line is to be drawn horizontally.; 450 ; 451Bool_t TLine::IsHorizontal(); 452{; 453 return TestBit(kHorizontal);; 454}; 455 ; 456////////////////////////////////////////////////////////////////////////////////; 457/// Check whether this line is to be drawn vertically.; 458 ; 459Bool_t TLine::IsVertical(); 460{; 461 return TestBit(kVertical);; 462}; 463 ; 464////////////////////////////////////////////////////////////////////////////////; 465/// Set NDC mode on if isNDC = kTRUE, off otherwise; 466 ; 467void TLine::SetNDC(Bool_t isNDC); 468{; 469 ResetBit(kLineNDC);; 470 if (isNDC) SetBit(kLineNDC);; 471}; 472 ; 473////////////////////////////////////////////////////////////////////////////////; 474/// Force the line to be drawn horizontally.; 475/// Makes fY2 equal to fY1. The line length is kept.; 476/// TArrow and TGaxis also get this function by inheritance.; 477 ; 478void TLine::SetHorizontal(Bool_t set /*= kTRUE*/); 479{; 480 SetBit(kHorizontal, set);; 481 if (set && gPad) {; 482 SetVertical(kFALSE);; 483 Int_t px1 = gPad->XtoAbsPixel(fX1);; 484 Int_t px2 = gPad->XtoAbsPixel(fX2);; 485 Int_t py1 = gPad->YtoAbsPixel(fY1);; 486 Int_t py2 = gPad->YtoAbsPixel(fY2);; 487 Int_t l = Int_t(TMath::Sqrt((px2-px1)*(px2-px1)+(py2-py1)*(py2-py1)));; 488 if (fX2 >= fX1) fX2 = gPad->AbsPixeltoX(px1+l);; 489 else fX2 = gPad->AbsPixeltoX(px1-l);; 490 fY2 = fY1;; 491 }; 492}; 493 ; 494////////////////////////////////////////////////////////////////////////////////; 495/// Force the line to be drawn vertically.; 496/// Makes fX2 equal to fX1. The line length is kept.; 497/// TArrow and TGaxis also get this function by inheritance.; 498 ; 499void TLine::SetVertical(Bool_t set /*= kTRUE*/); 500{; 501 SetBit(kVertical, set);; 502 if (set && gPad) {; 503 SetHorizontal(kFALSE);; 504 Int_t px1 = gPad->XtoAbsPixel(fX1);; 505 Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8cxx_source.html:14434,inherit,inheritance,14434,doc/master/TLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLine_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"450 for(i=0;i<np;i++) {; 451 fX[i] = gPad->PadtoX(gPad->AbsPixeltoX(x[i]+dpx));; 452 fY[i] = gPad->PadtoY(gPad->AbsPixeltoY(y[i]+dpy));; 453 }; 454 } else {; 455 fX[ipoint] = gPad->PadtoX(gPad->AbsPixeltoX(pxold));; 456 fY[ipoint] = gPad->PadtoY(gPad->AbsPixeltoY(pyold));; 457 }; 458 x.clear();; 459 y.clear();; 460 }; 461 gPad->Modified(kTRUE);; 462 gVirtualX->SetLineColor(-1);; 463 }; 464}; 465 ; 466////////////////////////////////////////////////////////////////////////////////; 467/// List this polyline with its attributes.; 468/// The option string is ignored.; 469 ; 470void TPolyLine::ls(Option_t *) const; 471{; 472 TROOT::IndentLevel();; 473 printf(""TPolyLine N=%d\n"",fN);; 474}; 475 ; 476////////////////////////////////////////////////////////////////////////////////; 477/// Merge polylines in the collection in this polyline; 478 ; 479Int_t TPolyLine::Merge(TCollection *li); 480{; 481 if (!li) return 0;; 482 TIter next(li);; 483 ; 484 //first loop to count the number of entries; 485 TPolyLine *pl;; 486 Int_t npoints = 0;; 487 while ((pl = (TPolyLine*)next())) {; 488 if (!pl->InheritsFrom(TPolyLine::Class())) {; 489 Error(""Add"",""Attempt to add object of class: %s to a %s"",pl->ClassName(),this->ClassName());; 490 return -1;; 491 }; 492 npoints += pl->Size();; 493 }; 494 ; 495 //extend this polyline to hold npoints; 496 if (npoints > 1) SetPoint(npoints-1,0,0);; 497 ; 498 //merge all polylines; 499 next.Reset();; 500 while ((pl = (TPolyLine*)next())) {; 501 Int_t np = pl->Size();; 502 Double_t *x = pl->GetX();; 503 Double_t *y = pl->GetY();; 504 for (Int_t i=0;i<np;i++) {; 505 SetPoint(i,x[i],y[i]);; 506 }; 507 }; 508 ; 509 return npoints;; 510}; 511 ; 512////////////////////////////////////////////////////////////////////////////////; 513/// Paint this polyline with its current attributes.; 514 ; 515void TPolyLine::Paint(Option_t *option); 516{; 517 if (TestBit(kPolyLineNDC)) {; 518 if (option && strlen(option)) PaintPolyLineNDC(fLastPoint+1, fX, fY, option);; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8cxx_source.html:15940,extend,extend,15940,doc/master/TPolyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8cxx_source.html,1,['extend'],['extend']
Modifiability,"46 ; 12047 if ((len + 2) > (int)sizeof(buf)) {; 12048 /* Tag to long for buffer */; 12049 mg_cry_internal(conn, ""%s: tag is too large"", path);; 12050 return;; 12051 }; 12052 }; 12053 ; 12054 } else {; 12055 ; 12056 /* We are not in a tag yet. */; 12057 if (ch == '<') {; 12058 /* Tag is opening */; 12059 in_tag = 1;; 12060 ; 12061 if (len > 0) {; 12062 /* Flush current buffer.; 12063 * Buffer is filled with ""len"" bytes. */; 12064 (void)mg_write(conn, buf, (size_t)len);; 12065 }; 12066 /* Store the < */; 12067 len = 1;; 12068 buf[0] = '<';; 12069 ; 12070 } else {; 12071 /* No Tag */; 12072 /* Add data to buffer */; 12073 buf[len++] = (char)(ch & 0xff);; 12074 /* Flush if buffer is full */; 12075 if (len == (int)sizeof(buf)) {; 12076 mg_write(conn, buf, (size_t)len);; 12077 len = 0;; 12078 }; 12079 }; 12080 }; 12081 }; 12082 ; 12083 /* Send the rest of buffered data */; 12084 if (len > 0) {; 12085 mg_write(conn, buf, (size_t)len);; 12086 }; 12087}; 12088 ; 12089 ; 12090static void; 12091handle_ssi_file_request(struct mg_connection *conn,; 12092 const char *path,; 12093 struct mg_file *filep); 12094{; 12095 char date[64];; 12096 time_t curtime = time(NULL);; 12097 const char *cors_orig_cfg, *cors_cred_cfg;; 12098 const char *cors1, *cors2, *cors3, *cors4;; 12099 ; 12100 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12101 return;; 12102 }; 12103 ; 12104 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12105 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12106 /* Cross-origin resource sharing (CORS). */; 12107 cors1 = ""Access-Control-Allow-Origin"";; 12108 cors2 = cors_orig_cfg;; 12109 } else {; 12110 cors1 = cors2 = """";; 12111 }; 12112 ; 12113 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12114 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12115 /* Credentials CORS header */; 12116 cors3 = ""Access-Control-Allow-Credentials"";; 12117 cors4 = cors_cred_cfg;; 1211",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:349941,config,config,349941,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"4607 mg_exec_lua_script(conn, path, NULL);; 14608 } else {; 14609 /* Script was in an illegal path */; 14610 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14611 }; 14612 return;; 14613 }; 14614#endif; 14615 ; 14616#if defined(USE_DUKTAPE); 14617 if (match_prefix_strlen(conn->dom_ctx->config[DUKTAPE_SCRIPT_EXTENSIONS],; 14618 path); 14619 > 0) {; 14620 if (is_in_script_path(conn, path)) {; 14621 /* Call duktape to generate the page */; 14622 mg_exec_duktape_script(conn, path);; 14623 } else {; 14624 /* Script was in an illegal path */; 14625 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14626 }; 14627 return;; 14628 }; 14629#endif; 14630 ; 14631#if !defined(NO_CGI); 14632 inc = CGI2_EXTENSIONS - CGI_EXTENSIONS;; 14633 max = PUT_DELETE_PASSWORDS_FILE - CGI_EXTENSIONS;; 14634 for (cgi_config_idx = 0; cgi_config_idx < max; cgi_config_idx += inc) {; 14635 if (conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx] != NULL) {; 14636 if (match_prefix_strlen(; 14637 conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx],; 14638 path); 14639 > 0) {; 14640 if (is_in_script_path(conn, path)) {; 14641 /* CGI scripts may support all HTTP methods */; 14642 handle_cgi_request(conn, path, 0);; 14643 } else {; 14644 /* Script was in an illegal path */; 14645 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14646 }; 14647 return;; 14648 }; 14649 }; 14650 }; 14651#endif /* !NO_CGI */; 14652 ; 14653 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path) > 0) {; 14654 if (is_in_script_path(conn, path)) {; 14655 handle_ssi_file_request(conn, path, file);; 14656 } else {; 14657 /* Script was in an illegal path */; 14658 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14659 }; 14660 return;; 14661 }; 14662 ; 14663#if !defined(NO_CACHING); 14664 if ((!conn->in_error_handler) && is_not_modified(conn, &file->stat)) {; 14665 /* Send 304 ""Not Modified"" - this must not send any body data */; 14666 handle_not_modified_static_file_request(conn, file);; 14667 return;; 146",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:431489,config,config,431489,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"4608 mg_exec_lua_script(conn, path, NULL);; 14609 } else {; 14610 /* Script was in an illegal path */; 14611 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14612 }; 14613 return;; 14614 }; 14615#endif; 14616 ; 14617#if defined(USE_DUKTAPE); 14618 if (match_prefix_strlen(conn->dom_ctx->config[DUKTAPE_SCRIPT_EXTENSIONS],; 14619 path); 14620 > 0) {; 14621 if (is_in_script_path(conn, path)) {; 14622 /* Call duktape to generate the page */; 14623 mg_exec_duktape_script(conn, path);; 14624 } else {; 14625 /* Script was in an illegal path */; 14626 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14627 }; 14628 return;; 14629 }; 14630#endif; 14631 ; 14632#if !defined(NO_CGI); 14633 inc = CGI2_EXTENSIONS - CGI_EXTENSIONS;; 14634 max = PUT_DELETE_PASSWORDS_FILE - CGI_EXTENSIONS;; 14635 for (cgi_config_idx = 0; cgi_config_idx < max; cgi_config_idx += inc) {; 14636 if (conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx] != NULL) {; 14637 if (match_prefix_strlen(; 14638 conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx],; 14639 path); 14640 > 0) {; 14641 if (is_in_script_path(conn, path)) {; 14642 /* CGI scripts may support all HTTP methods */; 14643 handle_cgi_request(conn, path, 0);; 14644 } else {; 14645 /* Script was in an illegal path */; 14646 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14647 }; 14648 return;; 14649 }; 14650 }; 14651 }; 14652#endif /* !NO_CGI */; 14653 ; 14654 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path) > 0) {; 14655 if (is_in_script_path(conn, path)) {; 14656 handle_ssi_file_request(conn, path, file);; 14657 } else {; 14658 /* Script was in an illegal path */; 14659 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14660 }; 14661 return;; 14662 }; 14663 ; 14664#if !defined(NO_CACHING); 14665 if ((!conn->in_error_handler) && is_not_modified(conn, &file->stat)) {; 14666 /* Send 304 ""Not Modified"" - this must not send any body data */; 14667 handle_not_modified_static_file_request(conn, file);; 14668 return;; 146",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:431522,config,config,431522,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96961,config,configuration,96961,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4740992 (****). Profile histograms: See classes TProfile, TProfile2D and TProfile3D. Profile histograms are used to display the mean value of Y and its standard deviation for each bin in X. Profile histograms are in many cases an elegant replacement of two-dimensional histograms : the inter-relation of two measured quantities X and Y can always be visualized by a two-dimensional histogram or scatter-plot; If Y is an unknown (but single-valued) approximate function of X, this function is displayed by a profile histogram with much better precision than by a scatter-plot. (*) INT_MAX = 2147483647 is the maximum value for a variable of type int.; (**) LLONG_MAX = 9223372036854775807 is the maximum value for a variable of type long64.; (***) 2^24 = 16777216 is the maximum integer that can be properly represented by a float32 with 23-bit mantissa.; (****) 2^53 = 9007199254740992 is the maximum integer that can be properly represented by a double64 with 52-bit mantissa. ; The inheritance hierarchy looks as follows:. Creating histograms; Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; h1TH1F * h1Definition legend1.C:5; Histograms may also be created by:. calling the Clone() function, see below; making a projection from a 2-D or 3-D histogram, see below; reading a histogram from a file. When a histogram is created, a reference to it is automatically added to the list of in-memory objects for the current file or directory. Then the pointer to this histogram in the current directory can be found by its name, doing: TH1F *h1 = (TH1F*)gDirectory->FindObject(name);; gDirectory#define gDirectoryDefinition TDirectory.h:384; namechar name[80]Definition TGX11.cxx:110; TH1::FindObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:4006,inherit,inheritance,4006,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['inherit'],['inheritance']
Modifiability,"478 }; 1479 ; 1480 tmp.remove(*selNodes, true);; 1481 tmp.remove(*this);; 1482 selNodes->add(tmp);; 1483 coutI(Plotting) << ""RooAbsPdf::plotOn("" << GetName() << "") indirectly selected PDF components: "" << tmp << std::endl ;; 1484 ; 1485 // Set PDF selection bits according to selNodes; 1486 for (const auto arg : branchNodeSet) {; 1487 bool select = selNodes->find(arg->GetName()) != nullptr;; 1488 static_cast<RooAbsReal*>(arg)->selectComp(select);; 1489 }; 1490}; 1491 ; 1492 ; 1493 ; 1494////////////////////////////////////////////////////////////////////////////////; 1495/// Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; 1496/// will show a unit normalized curve in the frame variable, taken at the present value; 1497/// of other observables defined for this PDF.; 1498///; 1499/// \param[in] frame pointer to RooPlot; 1500/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; 1501///; 1502/// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; 1503/// show a projected curve integrated over all variables that were present in the shown; 1504/// dataset except for the one on the x-axis. The normalization of the curve will also; 1505/// be adjusted to the event count of the plotted dataset. An informational message; 1506/// will be printed for each projection step that is performed.; 1507///; 1508/// This function takes the following named arguments; 1509/// <table>; 1510/// <tr><th><th> Projection control; 1511/// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; 1512/// in set from the projection, i.e. by not integrating over these.; 1513/// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; 1514/// of the PDF at the current value of the category observable.; 1515///; 1516/// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:61598,variab,variables,61598,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,48 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error found - save the configuration ; : 983 | 3.37896 4.59559 0.0201715 0.00182642 43608.5 0; : 984 Minimum Test error found - save the configuration ; : 984 | 3.36213 4.34126 0.0202597 0.00185498 43467.1 0; : 985 | 3.39032 4.51659 0.0201503 0.00185184 43719.5 1; : 986 | 3.5234 4.95577 0.0201762 0.0017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:111492,config,configuration,111492,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"485; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::SetBranchStatusvirtual void SetBranchStatus(const char *bname, bool status=true, UInt_t *found=nullptr)Set branch status to Process or DoNotProcess.Definition TTree.cxx:8534; TTree::GetEntryvirtual Int_t GetEntry(Long64_t entry, Int_t getall=0)Read all branches of entry and return total number of bytes read.Definition TTree.cxx:5638; TTree::GetCurrentFileTFile * GetCurrentFile() constReturn pointer to the current file.Definition TTree.cxx:5479; TTree::GetDirectoryTDirectory * GetDirectory() constDefinition TTree.h:462; TTree::GetEntriesvirtual Long64_t GetEntries() constDefinition TTree.h:463; TTree::GetTreevirtual TTree * GetTree() constDefinition TTree.h:557; TTree::LoadTreevirtual Long64_t LoadTree(Long64_t entry)Set current entry.Definition TTree.cxx:6473; TTree::ResetBranchAddressesvirtual void ResetBranchAddresses()Tell all of our branches to drop their current objects and allocate new ones.Definition TTree.cxx:8075; TVectorT< Double_t >; bool; double; int; unsigned int; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::LargestCommonDividerInt_t LargestCommonDivider(Int_t a, Int_t b)Definition DataSetFactory.cxx:80; TMVA::EndlMsgLogger & Endl(MsgLogger &ml)Definition MsgLogger.h:148; TMath::IsNaNBool_t IsNaN(Double_t x)Definition TMath.h:892; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::FiniteInt_t Finite(Double_t x)Check if it is finite with a mask in order to be consistent in presence of fast math.Definition TMath.h:770; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; v@ vDefinition rootcling_impl.cxx:3699; whatstatic const char * whatDefinition stlLoader.cc:5; vecDefinition civetweb.c:1855; Types.h. tmvatmvasrcDataSetFactory.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:96045,variab,variable,96045,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,4867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107690,config,configuration,107690,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100443,config,configuration,100443,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"49 && (fComp[fNdata].fType == kObjectp || fComp[fNdata].fType == kAnyp; 3150 || fComp[fNdata].fType == kObject || fComp[fNdata].fType == kAny; 3151 || fComp[fNdata].fType == kTObject || fComp[fNdata].fType == kTNamed || fComp[fNdata].fType == kTString ); 3152 ) {; 3153 fComp[fNdata].fType = fComp[fNdata].fNewType;; 3154 } else if (fComp[fNdata].fType != kCounter) {; 3155 fComp[fNdata].fType += kConv;; 3156 }; 3157 } else {; 3158 if (fComp[fNdata].fType == kCounter) {; 3159 Warning(""Compile"", ""Counter %s should not be skipped from class %s"", element->GetName(), GetName());; 3160 }; 3161 fComp[fNdata].fType += kSkip;; 3162 }; 3163 }; 3164 fCompOpt[fNdata] = &(fComp[fNdata]);; 3165 fCompFull[fNfulldata] = &(fComp[fNdata]);; 3166 ; 3167 R__ASSERT( fNdata < (fNslots - optiOut) );; 3168 ; 3169 keep = fNdata;; 3170 if (fComp[keep].fLength == 0) {; 3171 fComp[keep].fLength = 1;; 3172 }; 3173 fNdata++;; 3174 previousOptimized = kFALSE;; 3175 }; 3176 // The test 'fMethod[keep] == 0' fails to detect a variable size array; 3177 // if the counter happens to have an offset of zero, so let's explicitly; 3178 // prevent for here.; 3179 if (element->HasCounter()) keep = -1;; 3180 ++fNfulldata;; 3181 previous = element;; 3182 }; 3183 ; 3184 for (i = 0; i < fNdata; ++i) {; 3185 if (!fCompOpt[i]->fElem || fCompOpt[i]->fElem->GetType()< 0) {; 3186 continue;; 3187 }; 3188 AddReadAction(fReadObjectWise, i, fCompOpt[i]);; 3189 AddWriteAction(fWriteObjectWise, i, fCompOpt[i]);; 3190 }; 3191 for (i = 0; i < fNfulldata; ++i) {; 3192 if (!fCompFull[i]->fElem || fCompFull[i]->fElem->GetType()< 0) {; 3193 continue;; 3194 }; 3195 AddReadAction(fReadMemberWise, i, fCompFull[i]);; 3196 AddWriteAction(fWriteMemberWise, i, fCompFull[i]);; 3197 AddReadMemberWiseVecPtrAction(fReadMemberWiseVecPtr, i, fCompFull[i]);; 3198 AddWriteMemberWiseVecPtrAction(fWriteMemberWiseVecPtr, i, fCompFull[i]);; 3199 ; 3200 AddReadTextAction(fReadText, i, fCompFull[i]);; 3201 AddWriteTextAction(fWriteText, i, fCompFull[i]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:138982,variab,variable,138982,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['variab'],['variable']
Modifiability,"493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classifier: DL_CPU; TH1.Print Name = TrainingHistory_DL_CPU_trainingError, Entries= 0, Total sum= 7.41943; TH1.Print Name = TrainingHistory_DL_CPU_v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:17629,variab,variable,17629,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variable']
Modifiability,"4963 ; 4964 /* Convert to Unicode and back. If doubly-converted string does not; 4965 * match the original, something is fishy, reject. */; 4966 memset(wbuf, 0, wbuf_len * sizeof(wchar_t));; 4967 MultiByteToWideChar(CP_UTF8, 0, buf, -1, wbuf, (int)wbuf_len);; 4968 WideCharToMultiByte(; 4969 CP_UTF8, 0, wbuf, (int)wbuf_len, buf2, sizeof(buf2), NULL, NULL);; 4970 if (strcmp(buf, buf2) != 0) {; 4971 wbuf[0] = L'\0';; 4972 }; 4973 ; 4974 /* Windows file systems are not case sensitive, but you can still use; 4975 * uppercase and lowercase letters (on all modern file systems).; 4976 * The server can check if the URI uses the same upper/lowercase; 4977 * letters an the file system, effectively making Windows servers; 4978 * case sensitive (like Linux servers are). It is still not possible; 4979 * to use two files with the same name in different cases on Windows; 4980 * (like /a and /A) - this would be possible in Linux.; 4981 * As a default, Windows is not case sensitive, but the case sensitive; 4982 * file name check can be activated by an additional configuration. */; 4983 if (conn) {; 4984 if (conn->dom_ctx->config[CASE_SENSITIVE_FILES]; 4985 && !mg_strcasecmp(conn->dom_ctx->config[CASE_SENSITIVE_FILES],; 4986 ""yes"")) {; 4987 /* Use case sensitive compare function */; 4988 fcompare = wcscmp;; 4989 }; 4990 }; 4991 (void)conn; /* conn is currently unused */; 4992 ; 4993 /* Only accept a full file path, not a Windows short (8.3) path. */; 4994 memset(wbuf2, 0, ARRAY_SIZE(wbuf2) * sizeof(wchar_t));; 4995 long_len = GetLongPathNameW(wbuf, wbuf2, ARRAY_SIZE(wbuf2) - 1);; 4996 if (long_len == 0) {; 4997 err = GetLastError();; 4998 if (err == ERROR_FILE_NOT_FOUND) {; 4999 /* File does not exist. This is not always a problem here. */; 5000 return;; 5001 }; 5002 }; 5003 if ((long_len >= ARRAY_SIZE(wbuf2)) || (fcompare(wbuf, wbuf2) != 0)) {; 5004 /* Short name is used. */; 5005 wbuf[0] = L'\0';; 5006 }; 5007}; 5008 ; 5009 ; 5010#if !defined(NO_FILESYSTEMS); 5011/* Get file informat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:148489,config,configuration,148489,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"4964 ; 4965 /* Convert to Unicode and back. If doubly-converted string does not; 4966 * match the original, something is fishy, reject. */; 4967 memset(wbuf, 0, wbuf_len * sizeof(wchar_t));; 4968 MultiByteToWideChar(CP_UTF8, 0, buf, -1, wbuf, (int)wbuf_len);; 4969 WideCharToMultiByte(; 4970 CP_UTF8, 0, wbuf, (int)wbuf_len, buf2, sizeof(buf2), NULL, NULL);; 4971 if (strcmp(buf, buf2) != 0) {; 4972 wbuf[0] = L'\0';; 4973 }; 4974 ; 4975 /* Windows file systems are not case sensitive, but you can still use; 4976 * uppercase and lowercase letters (on all modern file systems).; 4977 * The server can check if the URI uses the same upper/lowercase; 4978 * letters an the file system, effectively making Windows servers; 4979 * case sensitive (like Linux servers are). It is still not possible; 4980 * to use two files with the same name in different cases on Windows; 4981 * (like /a and /A) - this would be possible in Linux.; 4982 * As a default, Windows is not case sensitive, but the case sensitive; 4983 * file name check can be activated by an additional configuration. */; 4984 if (conn) {; 4985 if (conn->dom_ctx->config[CASE_SENSITIVE_FILES]; 4986 && !mg_strcasecmp(conn->dom_ctx->config[CASE_SENSITIVE_FILES],; 4987 ""yes"")) {; 4988 /* Use case sensitive compare function */; 4989 fcompare = wcscmp;; 4990 }; 4991 }; 4992 (void)conn; /* conn is currently unused */; 4993 ; 4994 /* Only accept a full file path, not a Windows short (8.3) path. */; 4995 memset(wbuf2, 0, ARRAY_SIZE(wbuf2) * sizeof(wchar_t));; 4996 long_len = GetLongPathNameW(wbuf, wbuf2, ARRAY_SIZE(wbuf2) - 1);; 4997 if (long_len == 0) {; 4998 err = GetLastError();; 4999 if (err == ERROR_FILE_NOT_FOUND) {; 5000 /* File does not exist. This is not always a problem here. */; 5001 return;; 5002 }; 5003 }; 5004 if ((long_len >= ARRAY_SIZE(wbuf2)) || (fcompare(wbuf, wbuf2) != 0)) {; 5005 /* Short name is used. */; 5006 wbuf[0] = L'\0';; 5007 }; 5008}; 5009 ; 5010 ; 5011#if !defined(NO_FILESYSTEMS); 5012/* Get file informat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:148521,config,configuration,148521,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"497~~~; 498 ; 499It is therefore good practice to declare all your transformations and actions *before* accessing their results, allowing; 500RDataFrame to run the loop once and produce all results in one go.; 501 ; 502### Going parallel; 503Let's say we would like to run the previous examples in parallel on several cores, dividing events fairly between cores.; 504The only modification required to the snippets would be the addition of this line *before* constructing the main; 505dataframe object:; 506~~~{.cpp}; 507ROOT::EnableImplicitMT();; 508~~~; 509Simple as that. More details are given [below](#parallel-execution).; 510 ; 511\anchor collections; 512## Working with collections and object selections; 513 ; 514RDataFrame reads collections as the special type [ROOT::RVec](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html): for example, a column containing an array of floating point numbers can be read as a ROOT::RVecF. C-style arrays (with variable or static size), STL vectors and most other collection types can be read this way.; 515 ; 516RVec is a container similar to std::vector (and can be used just like a std::vector) but it also offers a rich interface to operate on the array elements in a vectorised fashion, similarly to Python's NumPy arrays.; 517 ; 518For example, to fill a histogram with the ""pt"" of selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:; 519 ; 520~~~{.cpp}; 521// h is filled with all the elements of `good_pts`, for each event; 522auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); 523 .Histo1D(""good_pts"");; 524~~~; 525 ; 526And in Python:; 527 ; 528~~~{.py}; 529h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); 530~~~; 531 ; 532Learn more at ROOT::VecOps::RVec.; 533 ; 534\anchor transformations; 535## Transformations: manipulating data; 536\anchor Filters; 537### Filters; 538A filter is created through a call to `Filt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:30482,variab,variable,30482,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"4: abnormal termination (e.g., MIGRAD not converged); 2656/// - 9: reserved; 2657/// - 10: END command; 2658/// - 11: EXIT or STOP command; 2659/// - 12: RETURN command; 2660///; 2661/// see also; 2662/// [the possible list of all Minuit commands](https://root.cern/sites/d35c7d8c.web.cern.ch/files/minuit.pdf).; 2663 ; 2664void TMinuit::mnexcm(const char *command, Double_t *plist, Int_t llist, Int_t &ierflg); 2665{; 2666 /* Initialized data */; 2667 ; 2668 TString comand = command;; 2669 static const char *const cname[40] = {; 2670 ""MINImize "",; 2671 ""SEEk "",; 2672 ""SIMplex "",; 2673 ""MIGrad "",; 2674 ""MINOs "",; 2675 ""SET xxx "",; 2676 ""SHOw xxx "",; 2677 ""TOP of pag"",; 2678 ""FIX "",; 2679 ""REStore "",; 2680 ""RELease "",; 2681 ""SCAn "",; 2682 ""CONtour "",; 2683 ""HESse "",; 2684 ""SAVe "",; 2685 ""IMProve "",; 2686 ""CALl fcn "",; 2687 ""STAndard "",; 2688 ""END "",; 2689 ""EXIt "",; 2690 ""RETurn "",; 2691 ""CLEar "",; 2692 ""HELP "",; 2693 ""MNContour "",; 2694 ""STOp "",; 2695 ""JUMp "",; 2696 "" "",; 2697 "" "",; 2698 "" "",; 2699 "" "",; 2700 "" "",; 2701 "" "",; 2702 "" "",; 2703 ""COVARIANCE"",; 2704 ""PRINTOUT "",; 2705 ""GRADIENT "",; 2706 ""MATOUT "",; 2707 ""ERROR DEF "",; 2708 ""LIMITS "",; 2709 ""PUNCH ""};; 2710 ; 2711 Int_t nntot = 40;; 2712 ; 2713 /* Local variables */; 2714 Double_t step, xptu[101], yptu[101], f, rno;; 2715 Int_t icol, kcol, ierr, iint, iext, lnow, nptu, i, iflag, ierrf;; 2716 Int_t ilist, nparx, izero, nf, lk, it, iw, inonde, nsuper;; 2717 Int_t it2, ke1, ke2, nowprt, kll, krl;; 2718 TString chwhy, c26, cvblnk, cneway, comd;; 2719 TString ctemp;; 2720 Bool_t lfreed, ltofix, lfixed;; 2721 ; 2722// alphabetical order of command names!; 2723 ; 2724 /* Function Body */; 2725 ; 2726 lk = comand.Length();; 2727 if (lk > 20) lk = 20;; 2728 fCword = comand;; 2729 fCword.ToUpper();; 2730// Copy the first MAXP arguments into WORD7, making; 2731// sure that WORD7(1)=0 if LLIST=0; 2732 for (iw = 1; iw <= fMaxpar; ++iw) {; 2733 fWord7[iw-1] = 0;; 2734 if (iw <= llist) fWord7[iw-1] = plist[iw-1];; 2735 }; 273",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:88117,variab,variables,88117,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,4; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 1133 | 2.68556 2.54814 0.0200421 0.00176557 43772.1 17; : 1134 | 2.52258 2.47147 0.0200724 0.0017645 43696.9 18; : 1135 | 2.54757 2.67188 0.0200351 0.00176104 43778 19; : 1136 | 2.63764 2.78828 0.0200363 0.0017639 43781.8 20; : 1137 Minimum Test error found - save the configuration ; : 1137 | 2.5743 2.19951 0.0201074 0.00183887 43791.1 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2.28835 2.14929 0.0200647 0.00175706 43697.6 6; : 1154 Minimum Test error found - save the configuration ; : 1154 | 2.32858 2.0616 0.0201066 0.00182104 43750.5 0; : 1155 | 2.28245 2.19923 0.0201625 0.00180627 43581.8 1; : 1156 | 2.38727 2.77806 0.0202008 0.00175311 43365.8 2; : 1157 | 2.61021 2.4986 0.0209687 0.00176336 41655.1 3; : 1158 | 2.53941 2.59597 0.020405 0.00180555 43012.1 4; : 1159 | 2.53249 2.63389 0.0200503 0.0017649 43750.8 5; : 1160 | 2.39348 2.24444 0.0200488 0.00176513 43755 6; : 1161 | 2.30038 2.13197 0.0204918 0.00181558 42835.3 7; : 1162 Minimum Test error found - save the configuration ; : 1162 |,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:122646,config,configuration,122646,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:13395,config,config,13395,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,9,['config'],"['config', 'configuration']"
Modifiability,"4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:17032,config,config,17032,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,138,['config'],"['config', 'configuration']"
Modifiability,"4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double,allocator<double> > > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:31078,variab,variable,31078,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['variab'],['variable']
Modifiability,"4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double,allocator<double> > > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:30967,variab,variable,30967,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['variab'],['variable']
Modifiability,"4Used to switch between different type of interpretations of the data (64 bits) ;  ►Nwriter;  Cwriter;  C_root_std_complex;  C_Ulp_ExponentVector;  C_Ulp_ExponentVector< Vc::sfloat_v >;  C_UnitTest_Compare;  C_UnitTest_Failure;  C_UnitTest_Global_Object;  C_x3d_data_;  C_x3d_sizeof_;  CADD_PASS;  CAnyCollectionProxy;  CAnyCollectionStreamer;  CApplicationWindowMain Qt&Root Application Window: ;  ►CBaker;  COptions;  CBalancerInfo;  CBaseSelectionRule;  Cbasic_string_view;  ►CBidirMMapPipeBidirMMapPipe creates a bidirectional channel between the current process and a child it forks ;  CPollEntryFor poll() interface ;  CBinaryOpPolicy;  CBinomialNeymanInterval;  CBinomialProbHelper;  CClassSelectionRule;  CClusterD;  CColorStruct_t;  CCompareAsc;  CcompareBAasc;  CcompareBAdesc;  CCompareDesc;  CContDistFree functions adapter needed by UNURAN for onedimensional continuous distributions ;  CContextSmall helper to keep current directory context ;  CCpuInfo_t;  CDiscrDistFree functions adapter needed by UNURAN for one-dimensional discrete distribution ;  Cdrr_func_cache;  Cdrr_func_entry;  CDUMMY;  CEditor;  CEvent_t;  CExceptionContext_t;  CexponentToDivisor;  CexponentToDivisor< 1, center >;  CexponentToDivisor< 1024, center >;  CexponentToDivisor< 128, center >;  CexponentToDivisor< 256, center >;  CexponentToDivisor< 384, center >;  CexponentToDivisor< 512, center >;  CexponentToDivisor< 640, center >;  CexponentToDivisor< 768, center >;  CexponentToDivisor< 896, center >;  CexponentToDivisor< center, center >;  CexponentToMultiplier;  CexponentToMultiplier< -1, center >;  CexponentToMultiplier< -128, center >;  CexponentToMultiplier< -256, center >;  CexponentToMultiplier< -384, center >;  CexponentToMultiplier< -512, center >;  CexponentToMultiplier< -640, center >;  CexponentToMultiplier< -768, center >;  CexponentToMultiplier< -896, center >;  CexponentToMultiplier< center, center >;  CexponentToMultiplier<-1024, center >;  CFeldmanCousinsBinomialInterval;  CFeld",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:76864,adapt,adapter,76864,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,1,['adapt'],['adapter']
Modifiability,"4_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetInputList (TList *input);  ; virtual void SetObject (TObject *obj);  ; virtual void SetOption (const char *option);  ; virtual void SetStatus (Long64_t status);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDraw.html:2677,inherit,inherited,2677,doc/master/classTProofDraw.html,https://root.cern,https://root.cern/doc/master/classTProofDraw.html,10,['inherit'],['inherited']
Modifiability,"5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMdiWinResizer; void DrawBox (Int_t x, Int_t y, UInt_t width, UInt_t height);  Draw resize box (rectangle). ;  ; void MoveResizeIt ();  Move (resize) parent MDI window. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Prot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiCornerWinResizer.html:24038,inherit,inherited,24038,doc/master/classTGMdiCornerWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiCornerWinResizer.html,9,['inherit'],['inherited']
Modifiability,"5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGDoubleSlider; static void FixBounds (Double_t &min, Double_t &max);  Avoid boundaries to be equal. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:30243,inherit,inherited,30243,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,12,['inherit'],['inherited']
Modifiability,"5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGPopupMenu; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return the selection background graphics context in use. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return the selection graphics context in use. ;  ; static FontStruct_t GetHilightFontStruct ();  Return the font structure in use for highlighted menu entries. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:30571,inherit,inherited,30571,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,3,['inherit'],['inherited']
Modifiability,5 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75766,config,configuration,75766,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80578,config,configuration,80578,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82783,config,configuration,82783,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"5 ; 766 return extra;; 767}; 768 ; 769////////////////////////////////////////////////////////////////////////////////; 770/// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); 771/// of this PDF for the given number of observed events.; 772///; 773/// This function is a wrapper around; 774/// RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const,; 775/// where the number of observed events and observables to be used as the; 776/// normalization set for the pdf is extracted from a RooAbsData.; 777///; 778/// For successful operation, the PDF implementation must indicate that; 779/// it is extendable by overloading `canBeExtended()`, and must; 780/// implement the `expectedEvents()` function.; 781///; 782/// \param[in] data The RooAbsData to retrieve the set of observables and; 783/// number of expected events.; 784/// \param[in] weightSquared If set to `true`, the extended term will be scaled by; 785/// the ratio of squared event weights over event weights:; 786/// \f$ \sum w_{i}^2 / \sum w_{i} \f$.; 787/// Intended to be used by fits with the `SumW2Error()` option that; 788/// can be passed to RooAbsPdf::fitTo(); 789/// (see the documentation of said function to learn more about the; 790/// interpretation of fits with squared weights).; 791/// \param[in] doOffset See RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const.; 792 ; 793double RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset) const {; 794 double sumW = data.sumEntries();; 795 double sumW2 = 0.0;; 796 if (weightSquared) {; 797 sumW2 = data.sumEntriesW2();; 798 }; 799 return extendedTerm(sumW, data.get(), sumW2, doOffset);; 800}; 801 ; 802 ; 803/** @fn RooAbsPdf::createNLL(); 804 *; 805 * @brief Construct representation of -log(L) of PDF with given dataset.; 806 *; 807 * If dataset is unbinned, an unbinned likelihood is constructed.; 808 * If the dataset is binned, a binned lik",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:31279,extend,extended,31279,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"5 opt = """";; 656 }; 657 if (leg) {; 658 TContext ctxt(this, kTRUE);; 659 leg->Draw();; 660 } else {; 661 Info(""BuildLegend"", ""No object(s) to build a TLegend."");; 662 }; 663 return leg;; 664}; 665 ; 666////////////////////////////////////////////////////////////////////////////////; 667/// Set Current pad.; 668///; 669/// When a canvas/pad is divided via TPad::Divide, one can directly; 670/// set the current path to one of the subdivisions.; 671/// See TPad::Divide for the convention to number sub-pads.; 672///; 673/// Returns the new current pad, or 0 in case of failure.; 674///; 675/// For example:; 676/// ~~~ {.cpp}; 677/// c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; 678/// ~~~; 679/// To set the current pad to the bottom right pad, do; 680/// ~~~ {.cpp}; 681/// c1.cd(6);; 682/// ~~~; 683/// Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; 684/// to c1 itself.; 685///; 686/// Note2: after a statement like c1.cd(6), the global variable gPad; 687/// points to the current pad. One can use gPad to set attributes; 688/// of the current pad.; 689///; 690/// Note3: One can get a pointer to one of the sub-pads of pad with:; 691/// TPad *subpad = (TPad*)pad->GetPad(subpadnumber);; 692 ; 693TVirtualPad *TPad::cd(Int_t subpadnumber); 694{; 695 if (!subpadnumber) {; 696 gPad = this;; 697 if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; 698 if (!fPrimitives) fPrimitives = new TList;; 699 return gPad;; 700 }; 701 ; 702 if (!fPrimitives) fPrimitives = new TList;; 703 TIter next(fPrimitives);; 704 while (auto obj = next()) {; 705 if (obj->InheritsFrom(TPad::Class())) {; 706 Int_t n = ((TPad*)obj)->GetNumber();; 707 if (n == subpadnumber) {; 708 return ((TPad*)obj)->cd();; 709 }; 710 }; 711 }; 712 return nullptr;; 713}; 714 ; 715////////////////////////////////////////////////////////////////////////////////; 716/// Delete all pad primitives.; 717///; 718/// If the bit kClearAfterCR has been set for this pad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:21229,variab,variable,21229,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['variab'],['variable']
Modifiability,"5#endif; 16226 return ret;; 16227}; 16228#else; 16229static long; 16230ssl_get_protocol(int version_id); 16231{; 16232 unsigned long ret = (unsigned long)SSL_OP_ALL;; 16233 if (version_id > 0); 16234 ret |= SSL_OP_NO_SSLv2;; 16235 if (version_id > 1); 16236 ret |= SSL_OP_NO_SSLv3;; 16237 if (version_id > 2); 16238 ret |= SSL_OP_NO_TLSv1;; 16239 if (version_id > 3); 16240 ret |= SSL_OP_NO_TLSv1_1;; 16241 if (version_id > 4); 16242 ret |= SSL_OP_NO_TLSv1_2;; 16243#if defined(SSL_OP_NO_TLSv1_3); 16244 if (version_id > 5); 16245 ret |= SSL_OP_NO_TLSv1_3;; 16246#endif; 16247 return (long)ret;; 16248}; 16249#endif /* OPENSSL_API_1_1 */; 16250 ; 16251 ; 16252/* SSL callback documentation:; 16253 * https://www.openssl.org/docs/man1.1.0/ssl/SSL_set_info_callback.html; 16254 * https://wiki.openssl.org/index.php/Manual:SSL_CTX_set_info_callback(3); 16255 * https://linux.die.net/man/3/ssl_set_info_callback */; 16256/* Note: There is no ""const"" for the first argument in the documentation; 16257 * examples, however some (maybe most, but not all) headers of OpenSSL; 16258 * versions / OpenSSL compatibility layers have it. Having a different; 16259 * definition will cause a warning in C and an error in C++. Use ""const SSL; 16260 * *"", while automatical conversion from ""SSL *"" works for all compilers,; 16261 * but not other way around */; 16262static void; 16263ssl_info_callback(const SSL *ssl, int what, int ret); 16264{; 16265 (void)ret;; 16266 ; 16267 if (what & SSL_CB_HANDSHAKE_START) {; 16268 SSL_get_app_data(ssl);; 16269 }; 16270 if (what & SSL_CB_HANDSHAKE_DONE) {; 16271 /* TODO: check for openSSL 1.1 */; 16272 //#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS 0x0001; 16273 // ssl->s3->flags |= SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS;; 16274 }; 16275}; 16276 ; 16277 ; 16278static int; 16279ssl_servername_callback(SSL *ssl, int *ad, void *arg); 16280{; 16281#if defined(GCC_DIAGNOSTIC); 16282#pragma GCC diagnostic push; 16283#pragma GCC diagnostic ignored ""-Wcast-align""; 16284#endif /* defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:480229,layers,layers,480229,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['layers'],['layers']
Modifiability,"5*gRandom->Rndm());; for (Int_t l=0; l<gstep.nmec; l++) gstep.lmec[l] = l;; if (gstep.gekin < 0.001) newParticle = kTRUE;; if (TMath::Abs(gstep.vect[2]) > 30) newParticle = kTRUE;; }; //save the Tree header. The file will be automatically; // closed when going out of the function scope; t2.Write();; }; 12.15.1.1 Adding a Branch with a Fixed Length Array; At first, we create a tree and create branches for a subset of variables in the C structureGctrak_t. Then we add several types of branches. The first branch reads seven floating-point values beginning at the address of 'gstep.vect'. You do not need to specify &gstep.vect, because in C and C++ the array variable holds the address of the first element.; t2.Branch(""vect"",gstep.vect,""vect[7]/F"");; t2.Branch(""getot"",&gstep.getot,""getot/F"");; t2.Branch(""gekin"",&gstep.gekin,""gekin/F"");; 12.15.1.2 Adding a Branch with a Variable Length Array; The next two branches are dependent on each other. The first holds the length of the variable length array and the second holds the variable length array. The lmec branch reads nmec number of integers beginning at the address gstep.lmec.; t2.Branch(""nmec"",&gstep.nmec,""nmec/I"");; t2.Branch(""lmec"",gstep.lmec,""lmec[nmec]/I"");; The variable nmec is a random number and is reset for each entry.; gstep.nmec = (Int_t)(5*gRandom->Rndm());; 12.15.1.3 Filling the Tree; In this emulation of Geant3, we generate and transport particles in a magnetic field and store the particle parameters at each tracking step in a ROOT tree.; 12.15.2 Analysis; In this analysis, we do not read the entire entry we only read one branch. First, we set the address for the branch to the file dstep, and then we use the TBranch::GetEntry method. Then we fill a histogram with the dstep branch entries, draw it and fit it with a Gaussian. In addition, we draw the particle’s path using the three values in the vector. Here we use the TTree::Draw method. It automatically creates a histogram and plots the 3 expressions (see Trees",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:565546,variab,variable,565546,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2)). An expanded note on variables and parameters; In a TFormula, a variable is a defined by a name x, y, z or t or an index like x[0], x[1], x[2]; that is x[N] where N is an integer.; TFormula("""", ""x[0] * x[1] + 10""); TFormula::TFormulaTFormula()Definition TFormula.cxx:438; Parameters are similar and can take any name. It is specified using brackets e.g. [expected_mass] or [0].; TFormula("""", ""exp([expected_mass])-1""); Variables and parameters can be combined in the same TFormula. Here we consider a very simple case where we have an exponential decay after some time t and a number of events with timestamps for which we want to evaluate this function.; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);; ; for (auto & event : events) {; tf.Eval(event.t);; }; The distinction between variables and parameters arose from the TFormula's application in fitting. There parameters are fitted to the data provided through variables. In other applications this distinction can go away.; Parameter values can be provided dynamically using TFormula::EvalPar instead of TFormula::Eval. In this way parameters can be used identically to variables. See below for an example that uses only parameters to model a function.; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");; ; tf.EvalPar(nullptr, params);; int. A note on operators; All operators of C/C++ are allowed in a TFormula with a few caveats.; The operators |, &, % can be used but will raise an error if used in conjunction with a variable or a parameter. Variables and parameters are treated as doubles internally for which these operators are not defined. This means the following command will run successfully -l -q -e TFormula("""", ""x+(10%3)"").Eval(0); but not -l -q -e TFormula("""", ""x%10"").Eval(0); .; The operator ^ is defined to mean exponentiation instead of the C/C++ interpretation xor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:6804,variab,variables,6804,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"5->35]; lname; Number of bytes in the class name. 28 -> … [36->..; .] | ClassName; | Object Class Name. … -> …; | lname; | Number of bytes in the object name. … -> …; | Name; | lName bytes with the name of the object. … -> …; | lTitle; | Number of bytes in the object title. … -> …; | Title; | Title of the object. … -> …; | DATA; | Data bytes associated to the object. You see a reference to TKey. It is explained in detail in the next section.; 11.1.4 The Class Description List (StreamerInfo List); The histogram records are followed by the StreamerInfo list of class descriptions. The list contains the description of each class that has been written to file.; 20010404/092347 At:5854 N=2390 StreamerInfo CX = 3.41; The class description is recursive, because to fully describe a class, its ancestors and object data members have to be described also. In demo.root, the class description list contains the description for:. TH1F; all classes in the TH1F inheritance tree; all classes of the object data members; all classes in the object data members’ inheritance tree. This description is implemented by the TStreamerInfo class, and is often referred to as simply StreamerInfo. You can print a file’s StreamerInfolist with the TFile::ShowStreamerInfo method. Below is an example of the output. Only the first line of each class description is shown. The demo.root example contains only TH1F objects. Here we see the recursive nature of the class description; it contains the StreamerInfoof all the classes needed to describe TH1F.; root[] f.ShowStreamerInfo(); StreamerInfo for class: TH1F, version=1; BASE TH1 offset=0 type= 0 1-Dim histogram base class; BASE TArrayF offset=0 type= 0 Array of floats. StreamerInfo for class: TH1, version=3; BASE TNamed offset=0 type=67 The basis for named object(name,title); BASE TAttLine offset=0 type=0 Line attributes; BASE TAttFill offset=0 type=0 Fill area attributes; BASE TAttMarker offset=0 type=0 Marker attributes; Int_t fNcells offset=0 type=3 num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:436403,inherit,inheritance,436403,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheritance']
Modifiability,5.1 2; : 1030 | 3.28552 3.92634 0.0200717 0.0017618 43692.2 3; : 1031 | 3.09879 3.64842 0.0200603 0.0017557 43704.9 4; : 1032 | 3.23242 4.45782 0.0201318 0.0017893 43614.6 5; : 1033 Minimum Test error found - save the configuration ; : 1033 | 3.57665 3.43738 0.0206178 0.00193324 42816.1 0; : 1034 | 3.26951 3.4755 0.0201231 0.00175901 43563.3 1; : 1035 | 3.0748 4.32816 0.0202002 0.00180771 43496 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.02565 3.406 0.0200479 0.00175462 43732 3; : 1050 | 3.16008 3.99499 0.0202749 0.00175016 43185.5 4; : 1051 | 3.00714 3.41105 0.0202798 0.00177822 43239.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:116173,config,configuration,116173,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"5/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a normal distribution.; 2504 ; 2505TH1D* TH2::QuantilesX( Double_t prob, const char * name) const; 2506{; 2507 return DoQuantiles(true, name, prob);; 2508}; 2509 ; 2510 ; 2511////////////////////////////////////////////////////////////////////////////////; 2512/// Compute the Y distribution of quantiles in the other variable X; 2513/// name is the name of the returned histogram; 2514/// prob is the probability content for the quantile (0.5 is the default for the median); 2515/// An approximate error for the quantile is computed assuming that the distribution in; 2516/// the other variable is normal.; 2517 ; 2518TH1D* TH2::QuantilesY( Double_t prob, const char * name) const; 2519{; 2520 return DoQuantiles(false, name, prob);; 2521}; 2522 ; 2523 ; 2524////////////////////////////////////////////////////////////////////////////////; 2525/// Implementation of quantiles for x or y; 2526 ; 2527TH1D* TH2::DoQuantiles(bool onX, const char * name, Double_t prob) const; 2528{; 2529 const TAxis *outAxis = nullptr;; 2530 if ( onX ) {; 2531 outAxis = GetXaxis();; 2532 } else {; 2533 outAxis = GetYaxis();; 2534 }; 2535 ; 2536 // build first name of returned histogram; 2537 TString qname = name;; 2538 if (qname.IsNull() || qnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:103308,variab,variable,103308,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"5/// Set offset of the object (to which the data member represented by this; 5586/// branch belongs) inside its containing object (if any).; 5587 ; 5588void TBranchElement::SetOffset(Int_t offset); 5589{; 5590 // We need to make sure that the Read and Write action's configuration; 5591 // properly reflect this value.; 5592 ; 5593 if (offset == TVirtualStreamerInfo::kMissing) {; 5594 SetMissing();; 5595 return;; 5596 }; 5597 ; 5598 if (fReadActionSequence) {; 5599 fReadActionSequence->AddToOffset(offset - fOffset);; 5600 }; 5601 if (fFillActionSequence) {; 5602 fFillActionSequence->AddToOffset(offset - fOffset);; 5603 }; 5604 fOffset = offset;; 5605}; 5606 ; 5607////////////////////////////////////////////////////////////////////////////////; 5608/// Set offset of the object (to which the data member represented by this; 5609/// branch belongs) inside its containing object (if any) to mark it as missing.; 5610 ; 5611void TBranchElement::SetMissing(); 5612{; 5613 // We need to make sure that the Read and Write action's configuration; 5614 // properly reflect this value.; 5615 ; 5616 if (fReadActionSequence) {; 5617 fReadActionSequence->SetMissing();; 5618 }; 5619 if (fFillActionSequence) {; 5620 fFillActionSequence->SetMissing();; 5621 }; 5622 fOffset = TVirtualStreamerInfo::kMissing;; 5623}; 5624 ; 5625 ; 5626////////////////////////////////////////////////////////////////////////////////; 5627/// Set the sequence of actions needed to read the data out of the buffer.; 5628void TBranchElement::SetActionSequence(TClass *originalClass, TStreamerInfo *localInfo, TStreamerInfoActions::TActionSequence::SequenceGetter_t create, TStreamerInfoActions::TActionSequence *&actionSequence); 5629{; 5630 // A 'split' node does not store data itself (it has not associated baskets); 5631 const bool isSplitNode = (fType == 3 || fType == 4 || fType == 2 || fType == 1 || (fType == 0 && fID == -2)) && !fBranches.IsEmpty();; 5632 ; 5633 if (!isSplitNode) {; 5634 fNewIDs.insert(fNewIDs.begi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:208221,config,configuration,208221,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['config'],['configuration']
Modifiability,"50 // Configuration of action handling kBits.; 151 // In this case we need to know both the location; 152 // of the member (fBits) and the start of the object; 153 // (its TObject part to be exact).; 154 ; 155 Int_t fObjectOffset; // Offset of the TObject part within the object; 156 ; 157 TBitsConfiguration(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset = 0) : TConfiguration(info,id,compinfo,offset),fObjectOffset(0) {};; 158 void PrintDebug(TBuffer &, void *) const override; 159 {; 160 TStreamerInfo *info = (TStreamerInfo*)fInfo;; 161 TStreamerElement *aElement = fCompInfo->fElem;; 162 TString sequenceType;; 163 aElement->GetSequenceType(sequenceType);; 164 ; 165 printf(""StreamerInfoAction, class:%s, name=%s, fType[%d]=%d,""; 166 "" %s, offset=%d (%s)\n"",; 167 info->GetClass()->GetName(), aElement->GetName(), fElemId, fCompInfo->fType,; 168 aElement->ClassName(), fOffset, sequenceType.Data());; 169 }; 170 ; 171 void AddToOffset(Int_t delta) override; 172 {; 173 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 174 // TBranchElement in the case of split sub-object.; 175 ; 176 if (fOffset != TVirtualStreamerInfo::kMissing); 177 fOffset += delta;; 178 fObjectOffset = 0;; 179 }; 180 ; 181 void SetMissing() override; 182 {; 183 fOffset = TVirtualStreamerInfo::kMissing;; 184 fObjectOffset = 0;; 185 }; 186 ; 187 TConfiguration *Copy() override { return new TBitsConfiguration(*this); }; 188 ; 189 };; 190 ; 191 Int_t GenericReadAction(TBuffer &buf, void *addr, const TConfiguration *config); 192 {; 193 char *obj = (char*)addr;; 194 TGenericConfiguration *conf = (TGenericConfiguration*)config;; 195 return ((TStreamerInfo*)conf->fInfo)->ReadBuffer(buf, &obj, &(conf->fCompInfo), /*first*/ 0, /*last*/ 1, /*narr*/ 1, config->fOffset, 2);; 196 }; 197 ; 198 Int_t GenericWriteAction(TBuffer &buf, void *addr, const TConfiguration *config); 199 {; 200 char *obj = (char*)addr;; 201 TGenericConfiguration *conf = (TGeneri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:6324,config,configuration,6324,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"50 NULL};; 16351#if defined(USE_HTTP2); 16352static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16353 alpn_proto_list + 3,; 16354 alpn_proto_list + 3 + 8,; 16355 NULL};; 16356#endif; 16357 ; 16358static int; 16359alpn_select_cb(SSL *ssl,; 16360 const unsigned char **out,; 16361 unsigned char *outlen,; 16362 const unsigned char *in,; 16363 unsigned int inlen,; 16364 void *arg); 16365{; 16366 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16367 unsigned int i, j, enable_http2 = 0;; 16368 const char **alpn_proto_order = alpn_proto_order_http1;; 16369 ; 16370 struct mg_workerTLS *tls =; 16371 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 16372 ; 16373 (void)ssl;; 16374 ; 16375 if (tls == NULL) {; 16376 /* Need to store protocol in Thread Local Storage */; 16377 /* If there is no Thread Local Storage, don't use ALPN */; 16378 return SSL_TLSEXT_ERR_NOACK;; 16379 }; 16380 ; 16381#if defined(USE_HTTP2); 16382 enable_http2 = (0 == strcmp(dom_ctx->config[ENABLE_HTTP2], ""yes""));; 16383 if (enable_http2) {; 16384 alpn_proto_order = alpn_proto_order_http2;; 16385 }; 16386#endif; 16387 ; 16388 for (j = 0; alpn_proto_order[j] != NULL; j++) {; 16389 /* check all accepted protocols in this order */; 16390 const char *alpn_proto = alpn_proto_order[j];; 16391 /* search input for matching protocol */; 16392 for (i = 0; i < inlen; i++) {; 16393 if (!memcmp(in + i, alpn_proto, (unsigned char)alpn_proto[0])) {; 16394 *out = in + i + 1;; 16395 *outlen = in[i];; 16396 tls->alpn_proto = alpn_proto;; 16397 return SSL_TLSEXT_ERR_OK;; 16398 }; 16399 }; 16400 }; 16401 ; 16402 /* Nothing found */; 16403 return SSL_TLSEXT_ERR_NOACK;; 16404}; 16405 ; 16406 ; 16407static int; 16408next_protos_advertised_cb(SSL *ssl,; 16409 const unsigned char **data,; 16410 unsigned int *len,; 16411 void *arg); 16412{; 16413 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16414 *data = (const unsigned char *)alpn_proto_list;; 16415 *len = (unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:484475,config,config,484475,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,50.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82444,config,configuration,82444,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"50130 124559; TDecayChannel Class describing a particle decay channel; TDecompBK Matrix Decomposition Bunch-Kaufman; TDecompBase Matrix Decomposition Base; TDecompChol Matrix Decompositition Cholesky; TDecompLU Matrix Decompositition LU; TDecompQRH Matrix Decompositition QRH; TDecompSVD Matrix Decompositition SVD; TDecompSparse Matrix Decompositition LU; TDialogCanvas A specialized canvas to set attributes.; TDiamond Diamond class; TDictionary ABC defining interface to dictionary; TDirectory Describe directory structure in memory; TDirectoryFile Describe directory structure in a ROOT file; TDocDirective THtml directive handler; TDocHtmlDirective Handler for ""Begin_Html""/""End_Html"" for raw HTML in documentation comments; TDocLatexDirective Handler for ""Begin_Latex""/""End_Latex"" to generate an image from latex; TDocMacroDirective Handler for ""Begin_Macro""/""End_Macro"" for code that is executed and that can generate an image for documentation; TDocOutput generates documentation web pages; TDocParser parser for reference documentation; TDrawFeedback Present PROOF query feedback; TELTU ELTU shape; TEditQueryFrame Edit query frame; TEfficiency calculating efficiencies; TEllipse An ellipse; TEmulatedCollectionProxy ; TEmulatedMapProxy ; TEntryList A list of entries in a TTree; TEntryListBlock Used internally in TEntryList to store the entry numbers; TEntryListFromFile Manager for entry lists from different files; TEnv Handle ROOT configuration resources; TEnvRec Individual TEnv records; TEve3DProjection 3D scaling ""projection""; TEveArrow Class for gl visualisation of arrow.; TEveArrowEditor GUI editor for TEveArrow.; TEveArrowGL GL renderer class for TEveArrow.; TEveBox 3D box with arbitrary vertices.; TEveBoxGL GL renderer class for TEveBox.; TEveBoxProjected Projection of TEveBox.; TEveBoxProjectedGL GL renderer class for TEveBoxProjected.; TEveBoxSet Collection of 3D primitives (fixed-size boxes, boxes of different sizes, or arbitrary sexto-epipeds); each primitive can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:56793,config,configuration,56793,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,2,['config'],['configuration']
Modifiability,"5061-MS. N is binomially distributed between 0 and ntot inclusive; with mean prob*ntot and prob is between 0 and 1. Note: This function should not be used when ntot is large (say >100).; The normal approximation is then recommended instead; (with mean =*ntot+0.5 and standard deviation sqrt(ntot*prob*(1-prob)). Double_t BreitWigner(Double_t mean = 0, Double_t gamma = 1); Return a number distributed following a BreitWigner function with mean and gamma. void Circle(Double_t& x, Double_t& y, Double_t r); Generates random vectors, uniformly distributed over a circle of given radius.; Input : r = circle radius; Output: x,y a random 2-d vector of length r. Double_t Exp(Double_t tau); Returns an exponential deviate. exp( -t/tau ). Double_t Gaus(Double_t mean = 0, Double_t sigma = 1); Samples a random number from the standard Normal (Gaussian) Distribution; with the given mean and sigma.; Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger; This is one of the fastest existing method for generating normal random variables.; It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous; version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia); implemented for example in GSL and available in the MathMore library. REFERENCE: - W. Hoermann and G. Derflinger (1990):; The ACR Method for generating normal random variables,; OR Spektrum 12 (1990), 181-185. Implementation taken from; UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien. UInt_t Integer(UInt_t imax); Returns a random integer on [ 0, imax-1 ]. Double_t Landau(Double_t mean = 0, Double_t sigma = 1); Generate a random number following a Landau distribution; with location parameter mu and scale parameter sigma:; Landau( (x-mu)/sigma ); Note that mu is not the mpv(most probable value) of the Landa distribution; and sigma is not the standard deviation of the distribution which is not defined.; For mu =0 and sigma=1, the mpv = -0.22278.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRandom.html:12500,variab,variables,12500,root/html534/TRandom.html,https://root.cern,https://root.cern/root/html534/TRandom.html,3,['variab'],['variables']
Modifiability,"51 NULL};; 16352#if defined(USE_HTTP2); 16353static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16354 alpn_proto_list + 3,; 16355 alpn_proto_list + 3 + 8,; 16356 NULL};; 16357#endif; 16358 ; 16359static int; 16360alpn_select_cb(SSL *ssl,; 16361 const unsigned char **out,; 16362 unsigned char *outlen,; 16363 const unsigned char *in,; 16364 unsigned int inlen,; 16365 void *arg); 16366{; 16367 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16368 unsigned int i, j, enable_http2 = 0;; 16369 const char **alpn_proto_order = alpn_proto_order_http1;; 16370 ; 16371 struct mg_workerTLS *tls =; 16372 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 16373 ; 16374 (void)ssl;; 16375 ; 16376 if (tls == NULL) {; 16377 /* Need to store protocol in Thread Local Storage */; 16378 /* If there is no Thread Local Storage, don't use ALPN */; 16379 return SSL_TLSEXT_ERR_NOACK;; 16380 }; 16381 ; 16382#if defined(USE_HTTP2); 16383 enable_http2 = (0 == strcmp(dom_ctx->config[ENABLE_HTTP2], ""yes""));; 16384 if (enable_http2) {; 16385 alpn_proto_order = alpn_proto_order_http2;; 16386 }; 16387#endif; 16388 ; 16389 for (j = 0; alpn_proto_order[j] != NULL; j++) {; 16390 /* check all accepted protocols in this order */; 16391 const char *alpn_proto = alpn_proto_order[j];; 16392 /* search input for matching protocol */; 16393 for (i = 0; i < inlen; i++) {; 16394 if (!memcmp(in + i, alpn_proto, (unsigned char)alpn_proto[0])) {; 16395 *out = in + i + 1;; 16396 *outlen = in[i];; 16397 tls->alpn_proto = alpn_proto;; 16398 return SSL_TLSEXT_ERR_OK;; 16399 }; 16400 }; 16401 }; 16402 ; 16403 /* Nothing found */; 16404 return SSL_TLSEXT_ERR_NOACK;; 16405}; 16406 ; 16407 ; 16408static int; 16409next_protos_advertised_cb(SSL *ssl,; 16410 const unsigned char **data,; 16411 unsigned int *len,; 16412 void *arg); 16413{; 16414 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16415 *data = (const unsigned char *)alpn_proto_list;; 16416 *len = (unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:484508,config,config,484508,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"510 TFormula *old = nullptr;; 511 R__LOCKGUARD(gROOTMutex);; 512 old = dynamic_cast<TFormula *>(gROOT->GetListOfFunctions()->FindObject(name));; 513 if (old); 514 gROOT->GetListOfFunctions()->Remove(old);; 515 if (IsReservedName(name)); 516 Error(""TFormula"", ""The name %s is reserved as a TFormula variable name.\n"", name);; 517 else; 518 gROOT->GetListOfFunctions()->Add(this);; 519 }; 520 SetBit(kNotGlobal,!addToGlobList);; 521 }; 522 }; 523}; 524 ; 525////////////////////////////////////////////////////////////////////////////////; 526/// Constructor from a full compile-able C++ expression; 527 ; 528TFormula::TFormula(const char *name, const char *formula, int ndim, int npar, bool addToGlobList) :; 529 TNamed(name,formula),; 530 fClingInput(formula),fFormula(formula); 531{; 532 fReadyToExecute = false;; 533 fClingInitialized = false;; 534 fNpar = 0;; 535 fNumber = 0;; 536 fLambdaPtr = nullptr;; 537 fFuncPtr = nullptr;; 538 fGradFuncPtr = nullptr;; 539 fHessFuncPtr = nullptr;; 540 ; 541 ; 542 fNdim = ndim;; 543 for (int i = 0; i < npar; ++i) {; 544 DoAddParameter(TString::Format(""p%d"",i), 0, false);; 545 }; 546 fAllParametersSetted = true;; 547 assert (fNpar == npar);; 548 ; 549 bool ret = InitLambdaExpression(formula);; 550 ; 551 if (ret) {; 552 ; 553 SetBit(TFormula::kLambda);; 554 ; 555 fReadyToExecute = true;; 556 ; 557 if (addToGlobList && gROOT) {; 558 TFormula *old = nullptr;; 559 R__LOCKGUARD(gROOTMutex);; 560 old = dynamic_cast<TFormula*> ( gROOT->GetListOfFunctions()->FindObject(name) );; 561 if (old); 562 gROOT->GetListOfFunctions()->Remove(old);; 563 if (IsReservedName(name)); 564 Error(""TFormula"",""The name %s is reserved as a TFormula variable name.\n"",name);; 565 else; 566 gROOT->GetListOfFunctions()->Add(this);; 567 }; 568 SetBit(kNotGlobal,!addToGlobList);; 569 }; 570 else; 571 Error(""TFormula"",""Syntax error in building the lambda expression %s"", formula );; 572}; 573 ; 574////////////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:21067,variab,variable,21067,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"513 path.Form(""%s/BUILD.sh"", proofinf);; 3514#ifdef R__WINGCC; 3515 FILE *f = fopen(path.Data(), ""wb"");; 3516#else; 3517 FILE *f = fopen(path.Data(), ""w"");; 3518#endif; 3519 if (!f) {; 3520 Error(""MakeProjectParProofInf"", ""cannot create file '%s' (errno: %d)"",; 3521 path.Data(), TSystem::GetErrno());; 3522 return -1;; 3523 }; 3524 ; 3525 fprintf(f, ""#! /bin/sh\n"");; 3526 fprintf(f, ""# Build libEvent library.\n"");; 3527 fprintf(f, ""\n"");; 3528 fprintf(f, ""#\n"");; 3529 fprintf(f, ""# The environment variables ROOTPROOFLITE and ROOTPROOFCLIENT can be used to\n"");; 3530 fprintf(f, ""# adapt the script to the calling environment\n"");; 3531 fprintf(f, ""#\n"");; 3532 fprintf(f, ""# if test ! \""x$ROOTPROOFLITE\"" = \""x\""; then\n"");; 3533 fprintf(f, ""# echo \""event-BUILD: PROOF-Lite node (session has $ROOTPROOFLITE workers)\""\n"");; 3534 fprintf(f, ""# elif test ! \""x$ROOTPROOFCLIENT\"" = \""x\""; then\n"");; 3535 fprintf(f, ""# echo \""event-BUILD: PROOF client\""\n"");; 3536 fprintf(f, ""# else\n"");; 3537 fprintf(f, ""# echo \""event-BUILD: standard PROOF node\""\n"");; 3538 fprintf(f, ""# fi\n"");; 3539 fprintf(f, ""\n"");; 3540 fprintf(f, ""if [ \""\"" = \""clean\"" ]; then\n"");; 3541 fprintf(f, "" make distclean\n"");; 3542 fprintf(f, "" exit 0\n"");; 3543 fprintf(f, ""fi\n"");; 3544 fprintf(f, ""\n"");; 3545 fprintf(f, ""make\n"");; 3546 fprintf(f, ""rc=$?\n"");; 3547 fprintf(f, ""echo \""rc=$?\""\n"");; 3548 fprintf(f, ""if [ $? != \""0\"" ] ; then\n"");; 3549 fprintf(f, "" exit 1\n"");; 3550 fprintf(f, ""fi\n"");; 3551 fprintf(f, ""exit 0\n"");; 3552 ; 3553 // Close the file; 3554 fclose(f);; 3555 ; 3556 // Then SETUP.C; 3557 path.Form(""%s/SETUP.C"", proofinf);; 3558#ifdef R__WINGCC; 3559 f = fopen(path.Data(), ""wb"");; 3560#else; 3561 f = fopen(path.Data(), ""w"");; 3562#endif; 3563 if (!f) {; 3564 Error(""MakeProjectParProofInf"", ""cannot create file '%s' (errno: %d)"",; 3565 path.Data(), TSystem::GetErrno());; 3566 return -1;; 3567 }; 3568 ; 3569 fprintf(f, ""Int_t SETUP()\n"");; 3570 fprintf(f, ""{\n"");; 3571 fprintf(f, ""\n"");;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:128130,variab,variables,128130,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,2,"['adapt', 'variab']","['adapt', 'variables']"
Modifiability,"53 if (f && fun.GetNargs() <= f->GetNargs() && fun.GetNargs() >= f->GetNargs() - f->GetNargsOpt()) {; 2154 fun.fFound = true;; 2155 }; 2156 }; 2157 ; 2158 if (!fun.fFound) {; 2159 // ignore not found functions; 2160 if (gDebug); 2161 Info(""TFormula"", ""Could not find %s function with %d argument(s)"", fun.GetName(), fun.GetNargs());; 2162 fun.fFound = false;; 2163 }; 2164#endif; 2165 } else {; 2166 TFormula *old = nullptr;; 2167 {; 2168 R__LOCKGUARD(gROOTMutex);; 2169 old = (TFormula *)gROOT->GetListOfFunctions()->FindObject(gNamePrefix + fun.fName);; 2170 }; 2171 if (old) {; 2172 // we should not go here (this analysis is done before in ExtractFunctors); 2173 assert(false);; 2174 fun.fFound = true;; 2175 TString pattern = TString::Format(""{%s}"", fun.GetName());; 2176 TString replacement = old->GetExpFormula();; 2177 PreProcessFormula(replacement);; 2178 ExtractFunctors(replacement);; 2179 formula.ReplaceAll(pattern, replacement);; 2180 continue;; 2181 }; 2182 // looking for default variables defined in fVars; 2183 ; 2184 map<TString, TFormulaVariable>::iterator varsIt = fVars.find(fun.GetName());; 2185 if (varsIt != fVars.end()) {; 2186 ; 2187 TString name = (*varsIt).second.GetName();; 2188 Double_t value = (*varsIt).second.fValue;; 2189 ; 2190 AddVariable(name, value); // this set the cling variable; 2191 if (!fVars[name].fFound) {; 2192 ; 2193 fVars[name].fFound = true;; 2194 int varDim = (*varsIt).second.fArrayPos; // variable dimensions (0 for x, 1 for y, 2, for z); 2195 if (varDim >= fNdim) {; 2196 fNdim = varDim + 1;; 2197 ; 2198 // we need to be sure that all other variables are added with position less; 2199 for (auto &v : fVars) {; 2200 if (v.second.fArrayPos < varDim && !v.second.fFound) {; 2201 AddVariable(v.first, v.second.fValue);; 2202 v.second.fFound = true;; 2203 }; 2204 }; 2205 }; 2206 }; 2207 // remove the ""{.. }"" added around the variable; 2208 TString pattern = TString::Format(""{%s}"", name.Data());; 2209 TString replacement = TString::Format(""x[%d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:83462,variab,variables,83462,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"53 of file Minimizer.cxx. ◆ SetVariableValues(). virtual bool ROOT::Math::Minimizer::SetVariableValues ; (; const double * ; x). inlinevirtual . set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ; Reimplemented in ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::BasicMinimizer.; Definition at line 187 of file Minimizer.h. ◆ Status(). int ROOT::Math::Minimizer::Status ; (; ); const. inline . status code of minimizer ; Definition at line 310 of file Minimizer.h. ◆ Strategy(). int ROOT::Math::Minimizer::Strategy ; (; ); const. inline . strategy ; Definition at line 307 of file Minimizer.h. ◆ Tolerance(). double ROOT::Math::Minimizer::Tolerance ; (; ); const. inline . absolute tolerance ; Definition at line 300 of file Minimizer.h. ◆ VariableIndex(). int ROOT::Math::Minimizer::VariableIndex ; (; const std::string & ; name); const. virtual . get index of variable given a variable given a name return -1 if variable is not found ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 232 of file Minimizer.cxx. ◆ VariableName(). std::string ROOT::Math::Minimizer::VariableName ; (; unsigned int ; ivar); const. virtual . get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 224 of file Minimizer.cxx. ◆ X(). virtual const double * ROOT::Math::Minimizer::X ; (; ); const. pure virtual . return pointer to X values at the minimum ; Implemented in TFumiliMinimizer, ROOT::Math::GeneticMinimizer, ROOT::Math::BasicMinimizer, TLinearMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer. Member Data Documentation. ◆ fOptions. MinimizerOptions ROOT::Math::Minimizer::fOptions. protected . minimizer options ; Definition at line 370 of file Minimizer.h. ◆ fStatus. in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:35622,variab,variable,35622,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,3,['variab'],['variable']
Modifiability,"53/// Have histograms fixed bins along each axis?; 3154 ; 3155void TEfficiency::SavePrimitive(std::ostream& out,Option_t* opt); 3156{; 3157 Bool_t equi_bins = true;; 3158 ; 3159 //indentation; 3160 TString indent = "" "";; 3161 //names for arrays containing the bin edges; 3162 //static counter needed if more objects are saved; 3163 static Int_t naxis = 0;; 3164 TString sxaxis=""xAxis"",syaxis=""yAxis"",szaxis=""zAxis"";; 3165 ; 3166 //note the missing break statements!; 3167 switch(GetDimension()) {; 3168 case 3:; 3169 equi_bins = equi_bins && !fTotalHistogram->GetZaxis()->GetXbins()->fArray; 3170 && !fTotalHistogram->GetZaxis()->GetXbins()->fN;; 3171 case 2:; 3172 equi_bins = equi_bins && !fTotalHistogram->GetYaxis()->GetXbins()->fArray; 3173 && !fTotalHistogram->GetYaxis()->GetXbins()->fN;; 3174 case 1:; 3175 equi_bins = equi_bins && !fTotalHistogram->GetXaxis()->GetXbins()->fArray; 3176 && !fTotalHistogram->GetXaxis()->GetXbins()->fN;; 3177 }; 3178 ; 3179 //create arrays containing the variable binning; 3180 if(!equi_bins) {; 3181 Int_t i;; 3182 ++naxis;; 3183 sxaxis += naxis;; 3184 syaxis += naxis;; 3185 szaxis += naxis;; 3186 //x axis; 3187 out << indent << ""Double_t "" << sxaxis << ""[""; 3188 << fTotalHistogram->GetXaxis()->GetXbins()->fN << ""] = {"";; 3189 for (i = 0; i < fTotalHistogram->GetXaxis()->GetXbins()->fN; ++i) {; 3190 if (i != 0) out << "", "";; 3191 out << fTotalHistogram->GetXaxis()->GetXbins()->fArray[i];; 3192 }; 3193 out << ""}; "" << std::endl;; 3194 //y axis; 3195 if(GetDimension() > 1) {; 3196 out << indent << ""Double_t "" << syaxis << ""[""; 3197 << fTotalHistogram->GetYaxis()->GetXbins()->fN << ""] = {"";; 3198 for (i = 0; i < fTotalHistogram->GetYaxis()->GetXbins()->fN; ++i) {; 3199 if (i != 0) out << "", "";; 3200 out << fTotalHistogram->GetYaxis()->GetXbins()->fArray[i];; 3201 }; 3202 out << ""}; "" << std::endl;; 3203 }; 3204 //z axis; 3205 if(GetDimension() > 2) {; 3206 out << indent << ""Double_t "" << szaxis << ""[""; 3207 << fTotalHistogram->GetZaxis()->GetXb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:125774,variab,variable,125774,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,5563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.7,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:99603,config,configuration,99603,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"56 // detected already before).; 1957 return 0;; 1958 }; 1959 cla = R__GetClassIfKnown(className);; 1960 }; 1961 ; 1962 if (!cla) {; 1963 return 0;; 1964 }; 1965 ; 1966 // cla is valid, check wether it's actually in the header of the same name:; 1967 if (cla->GetDeclFileLine() <= 0) return 0; // to a void an error with VisualC++; 1968 TString decfile = gSystem->BaseName(cla->GetDeclFileName());; 1969 if (decfile != gSystem->BaseName(fname)) {; 1970 return 0;; 1971 }; 1972 return 1;; 1973}; 1974 ; 1975////////////////////////////////////////////////////////////////////////////////; 1976/// Initialize operating system interface.; 1977 ; 1978void TROOT::InitSystem(); 1979{; 1980 if (gSystem == nullptr) {; 1981#if defined(R__UNIX); 1982#if defined(R__HAS_COCOA); 1983 gSystem = new TMacOSXSystem;; 1984#else; 1985 gSystem = new TUnixSystem;; 1986#endif; 1987#elif defined(R__WIN32); 1988 gSystem = new TWinNTSystem;; 1989#else; 1990 gSystem = new TSystem;; 1991#endif; 1992 ; 1993 if (gSystem->Init()); 1994 fprintf(stderr, ""Fatal in <TROOT::InitSystem>: can't init operating system layer\n"");; 1995 ; 1996 if (!gSystem->HomeDirectory()) {; 1997 fprintf(stderr, ""Fatal in <TROOT::InitSystem>: HOME directory not set\n"");; 1998 fprintf(stderr, ""Fix this by defining the HOME shell variable\n"");; 1999 }; 2000 ; 2001 // read default files; 2002 gEnv = new TEnv("".rootrc"");; 2003 ; 2004 ROOT::Internal::SetErrorSystemMsgHandler([](){ return gSystem->GetError(); });; 2005 SetErrorHandler(DefaultErrorHandler);; 2006 ; 2007 gDebug = gEnv->GetValue(""Root.Debug"", 0);; 2008 ; 2009 if (!gEnv->GetValue(""Root.ErrorHandlers"", 1)); 2010 gSystem->ResetSignals();; 2011 ; 2012 // The old ""Root.ZipMode"" had a discrepancy between documentation vs actual meaning.; 2013 // Also, a value with the meaning ""default"" wasn't available. To solved this,; 2014 // ""Root.ZipMode"" was replaced by ""Root.CompressionAlgorithm"". Warn about usage of; 2015 // the old value, if it's set to 0, but silently translate the set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:76619,variab,variable,76619,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"5639 mnfree(1);; 5640 fU[ilax-1] = sav;; 5641 mnexin(fX);; 5642 fEDM = fBigedm;; 5643// in any case; 5644L700:; 5645 fItaur = 0;; 5646 fNfcnmx = nfmxin;; 5647 fIstrat = istrav;; 5648}; 5649 ; 5650////////////////////////////////////////////////////////////////////////////////; 5651/// Implements one parameter definition; 5652///; 5653/// Called from MNPARS and user-callable; 5654/// Implements one parameter definition, that is:; 5655/// - K (external) parameter number; 5656/// - CNAMK parameter name; 5657/// - UK starting value; 5658/// - WK starting step size or uncertainty; 5659/// - A, B lower and upper physical parameter limits; 5660/// and sets up (updates) the parameter lists.; 5661/// Output:; 5662/// - IERFLG=0 if no problems; 5663/// - >0 if MNPARM unable to implement definition; 5664 ; 5665void TMinuit::mnparm(Int_t k1, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t &ierflg); 5666{; 5667 /* Local variables */; 5668 Double_t vplu, a_small, gsmin, pinti, vminu, danger, sav, sav2;; 5669 Int_t ierr, kint, in, ix, ktofix, lastin, kinfix, nvl;; 5670 TString cnamk, chbufi;; 5671 ; 5672 Int_t k = k1+1;; 5673 cnamk = cnamj;; 5674 kint = fNpar;; 5675 if (k < 1 || k > fMaxext) {; 5676// parameter number exceeds allowed maximum value; 5677 Printf("" MINUIT USER ERROR. PARAMETER NUMBER IS %3d ALLOWED RANGE IS ONE TO %4d"",k,fMaxext);; 5678 goto L800;; 5679 }; 5680// normal parameter request; 5681 ktofix = 0;; 5682 if (fNvarl[k-1] < 0) goto L50;; 5683// previously defined parameter is being redefined; 5684// find if parameter was fixed; 5685 for (ix = 1; ix <= fNpfix; ++ix) {; 5686 if (fIpfix[ix-1] == k) ktofix = k;; 5687 }; 5688 if (ktofix > 0) {; 5689 mnwarn(""W"", ""PARAM DEF"", ""REDEFINING A FIXED PARAMETER."");; 5690 if (kint >= fMaxint) {; 5691 Printf("" CANNOT RELEASE. MAX NPAR EXCEEDED."");; 5692 goto L800;; 5693 }; 5694 mnfree(-k);; 5695 }; 5696// if redefining previously variable parameter; 5697 if (fNiofex[k-1] > 0) kint = fNpar - 1;; 5698L50:;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:184925,variab,variables,184925,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"56789);; Note that majorname and minorname may be expressions using original tree variables e.g.: “run-90000”, “event +3*xx”. In case an expression is specified, the equivalent expression must be computed when calling GetEntryWithIndex(). To build an index with only majorname, specify minorname=""0"" (default).; Note that once the index is built, it can be saved with the TTree object with:; tree.Write(); //if the file has been open in ""update"" mode; The most convenient place to create the index is at the end of the filling process just before saving the tree header. If a previous index was computed, it is redefined by this new call.; Note that this function can also be applied to a TChain. The return value is the number of entries in the Index (< 0 indicates failure).; 12.8 Branches; The organization of branches allows the designer to optimize the data for the anticipated use. The class for a branch is called TBranch. If two variables are independent, and the designer knows the variables will not be used together, they should be placed on separate branches. If, however, the variables are related, such as the coordinates of a point, it is most efficient to create one branch with both coordinates on it. A variable on a TBranch is called a leaf (yes - TLeaf). Another point to keep in mind when designing trees is that branches of the same TTree can be written to separate files. To add a TBranch to a TTree we call the method TTree::Branch(). Note that we DO NOT use the TBranch constructor.; The TTree::Branch method has several signatures. The branch type differs by what is stored in it. A branch can hold an entire object, a list of simple variables, contents of a folder, contents of a TList, or an array of objects. Let’s see some examples. To follow along you will need the shared library libEvent.so. First, check if it is in $ROOTSYS/test. If it is, copy it to your own area. If it is not there, you have to build it by typing make in $ROOTSYS/test.; 12.9 Adding a Branch to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:536524,variab,variables,536524,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"56~~~~~~~~~~~~~~~; 157 ; 158In case you already have two filled histograms and you only want to; 159plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); 160to create a graph object.; 161 ; 162\anchor EFF03; 163## III. Filling with events; 164You can fill the TEfficiency object by calling the TEfficiency::Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; 165The ""bPassed"" boolean flag indicates whether the current event is good; 166(both histograms are filled) or not (only TEfficiency::fTotalHistogram is filled).; 167The x, y and z variables determine the bin which is filled. For lower dimensions, the z- or even the y-value may be omitted.; 168 ; 169Begin_Macro(source); 170{; 171 //canvas only needed for this documentation; 172 TCanvas* c1 = new TCanvas(""example"","""",600,400);; 173 c1->SetFillStyle(1001);; 174 c1->SetFillColor(kWhite);; 175 ; 176 //create one-dimensional TEfficiency object with fixed bin size; 177 TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; 178 TRandom3 rand3;; 179 ; 180 bool bPassed;; 181 double x;; 182 for(int i=0; i<10000; ++i); 183 {; 184 //simulate events with variable under investigation; 185 x = rand3.Uniform(10);; 186 //check selection: bPassed = DoesEventPassSelection(x); 187 bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; 188 pEff->Fill(bPassed,x);; 189 }; 190 ; 191 pEff->Draw(""AP"");; 192}; 193End_Macro; 194 ; 195You can also set the number of passed or total events for a bin directly by; 196using the TEfficiency::SetPassedEvents or TEfficiency::SetTotalEvents method.; 197 ; 198\anchor EFF04; 199## IV. Statistic options; 200The calculation of the estimated efficiency depends on the chosen statistic; 201option. Let k denotes the number of passed events and N the number of total; 202events.; 203 ; 204\anchor EFF04a; 205### Frequentist methods; 206The expectation value of the number of passed events is given by the true; 207",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:7982,variab,variable,7982,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,"5767 fU[k-1] = uk;; 5768 fAlim[k-1] = a;; 5769 fBlim[k-1] = b;; 5770 fNvarl[k-1] = nvl;; 5771 mnrset(1);; 5772// K is external number of new parameter; 5773// LASTIN is the number of var. params with ext. param. no.< K; 5774 lastin = 0;; 5775 for (ix = 1; ix <= k-1; ++ix) { if (fNiofex[ix-1] > 0) ++lastin; }; 5776// KINT is new number of variable params, NPAR is old; 5777 if (kint == fNpar) goto L280;; 5778 if (kint > fNpar) {; 5779// insert new variable parameter in list; 5780 for (in = fNpar; in >= lastin + 1; --in) {; 5781 ix = fNexofi[in-1];; 5782 fNiofex[ix-1] = in + 1;; 5783 fNexofi[in] = ix;; 5784 fX[in] = fX[in-1];; 5785 fXt[in] = fXt[in-1];; 5786 fDirin[in] = fDirin[in-1];; 5787 fG2[in] = fG2[in-1];; 5788 fGstep[in] = fGstep[in-1];; 5789 fWerr[in] = fWerr[in-1];; 5790 fGrd[in] = fGrd[in-1];; 5791 }; 5792 } else {; 5793// remove variable parameter from list; 5794 for (in = lastin + 1; in <= kint; ++in) {; 5795 ix = fNexofi[in];; 5796 fNiofex[ix-1] = in;; 5797 fNexofi[in-1] = ix;; 5798 fX[in-1] = fX[in];; 5799 fXt[in-1] = fXt[in];; 5800 fDirin[in-1] = fDirin[in];; 5801 fG2[in-1] = fG2[in];; 5802 fGstep[in-1] = fGstep[in];; 5803 fWerr[in-1] = fWerr[in];; 5804 fGrd[in-1] = fGrd[in];; 5805 }; 5806 }; 5807L280:; 5808 ix = k;; 5809 fNiofex[ix-1] = 0;; 5810 fNpar = kint;; 5811// lists are now arranged; 5812 if (nvl > 0) {; 5813 in = lastin + 1;; 5814 fNexofi[in-1] = ix;; 5815 fNiofex[ix-1] = in;; 5816 sav = fU[ix-1];; 5817 mnpint(sav, ix-1, pinti);; 5818 fX[in-1] = pinti;; 5819 fXt[in-1] = fX[in-1];; 5820 fWerr[in-1] = wk;; 5821 sav2 = sav + wk;; 5822 mnpint(sav2, ix-1, pinti);; 5823 vplu = pinti - fX[in-1];; 5824 sav2 = sav - wk;; 5825 mnpint(sav2, ix-1, pinti);; 5826 vminu = pinti - fX[in-1];; 5827 fDirin[in-1] = (TMath::Abs(vplu) + TMath::Abs(vminu))*.5;; 5828 fG2[in-1] = fUp*2 / (fDirin[in-1]*fDirin[in-1]);; 5829 gsmin = fEpsma2*8*TMath::Abs(fX[in-1]);; 5830 fGstep[in-1] = TMath::Max(gsmin,fDirin[in-1]*.1);; 5831 if (fAmin != fUndefi) {; 5832 a_small = TMath::Sq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:188305,variab,variable,188305,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,3,['variab'],['variable']
Modifiability,58 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103029,config,configuration,103029,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,5832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100052,config,configuration,100052,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:119803,config,configuration,119803,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"5class RGeomShapeRenderInfo : public RGeomRenderInfo {; 136public:; 137 TGeoShape *shape{nullptr}; ///< original shape - can be much less than binary data; 138 ~RGeomShapeRenderInfo() override = default;; 139};; 140 ; 141 ; 142/** RGeomVisible contains description of visible node; 143 * It is path to the node plus reference to shape rendering data */; 144 ; 145class RGeomVisible {; 146public:; 147 int nodeid{0}; ///< selected node id,; 148 int seqid{0}; ///< sequence id, used for merging later; 149 std::vector<int> stack; ///< path to the node, index in list of childs; 150 std::string color; ///< color in rgb format; 151 double opacity{1}; ///< opacity; 152 RGeomRenderInfo *ri{nullptr}; ///< render information for the shape, can be same for different nodes; 153 ; 154 RGeomVisible() = default;; 155 RGeomVisible(int _nodeid, int _seqid, const std::vector<int> &_stack) : nodeid(_nodeid), seqid(_seqid), stack(_stack) {}; 156};; 157 ; 158 ; 159/** Configuration parameters which can be configured on the client; 160 * Send as is to-from client */; 161 ; 162class RGeomConfig {; 163public:; 164 int vislevel{0}; ///< visible level; 165 int maxnumnodes{0}; ///< maximal number of nodes; 166 int maxnumfaces{0}; ///< maximal number of faces; 167 bool showtop{false}; ///< show geometry top volume, off by default; 168 int build_shapes{1}; ///< when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all; 169 int nsegm{0}; ///< number of segments for cylindrical shapes; 170 std::string drawopt; ///< draw options for TGeoPainter; 171};; 172 ; 173 ; 174/** Object with full description for drawing geometry; 175 * It includes list of visible items and list of nodes required to build them */; 176 ; 177class RGeomDrawing {; 178public:; 179 RGeomConfig *cfg{nullptr}; ///< current configurations; 180 int numnodes{0}; ///< total number of nodes in description; 181 std::vector<RGeomNode*> nodes; ///< all used nodes to display visible items and not known for clien",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:5530,config,configured,5530,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,2,['config'],['configured']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:36377,inherit,inherited,36377,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,4,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:32832,inherit,inherited,32832,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,4,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveCompound.h>. Inheritance diagram for TEveCompound:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveCompound() [1/2]. TEveCompound::TEveCompound ; (; const TEveCompound & ; ). private . ◆ TEveCompound() [2/2]. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:32587,inherit,inherited,32587,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveElement.h>. Inheritance diagram for TEveElementList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveElementList() [1/2]. TEveElementList::TEveElementList ; (; const char * ; n = ""TEveElementList"", . const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:31831,inherit,inherited,31831,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveEventManager.h>. Inheritance diagram for TEveEventManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveEventManager(). TEveEventManager::TEveEventManager ; (; const char * ; n = ""TEveEventManager"", . const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveEventManager.html:32724,inherit,inherited,32724,doc/master/classTEveEventManager.html,https://root.cern,https://root.cern/doc/master/classTEveEventManager.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEvePlot3D.h>. Inheritance diagram for TEvePlot3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEvePlot3D() [1/2]. TEvePlot3D::TEvePlot3D ; (; const TEvePlot3D & ; ). private . ◆ TEvePlot3D() [2/2]. TEvePlot3D::TEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePlot3D.html:32608,inherit,inherited,32608,doc/master/classTEvePlot3D.html,https://root.cern,https://root.cern/doc/master/classTEvePlot3D.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UCh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneList.html:31394,inherit,inherited,31394,doc/master/classTEveSceneList.html,https://root.cern,https://root.cern/doc/master/classTEveSceneList.html,2,['inherit'],['inherited']
Modifiability,"6 // std::endl;; 1147 if (iposBefore >= 0) {; 1148 assert(iposBefore < formula.Length());; 1149 //if (isalpha(formula[iposBefore])) {; 1150 if (IsFunctionNameChar(formula[iposBefore])) {; 1151 // std::cout << ""previous character for function "" << funName << "" is "" << formula[iposBefore] << ""- skip; 1152 // "" << std::endl;; 1153 funPos = formula.Index(funName, lastFunPos);; 1154 continue;; 1155 }; 1156 }; 1157 ; 1158 Bool_t isNormalized = false;; 1159 if (lastFunPos < formula.Length()) {; 1160 // check if function is normalized by looking at ""n"" character after function name (e.g. gausn); 1161 isNormalized = (formula[lastFunPos] == 'n');; 1162 if (isNormalized); 1163 lastFunPos += 1;; 1164 if (lastFunPos < formula.Length()) {; 1165 char c = formula[lastFunPos];; 1166 // check if also last character is not alphanumeric or is not an operator and not a parenthesis ( or [.; 1167 // Parenthesis [] are used to express the variables; 1168 if (isalnum(c) || (!IsOperator(c) && c != '(' && c != ')' && c != '[' && c != ']')) {; 1169 // std::cout << ""last character for function "" << funName << "" is "" << c << "" skip .."" << std::endl;; 1170 funPos = formula.Index(funName, lastFunPos);; 1171 continue;; 1172 }; 1173 }; 1174 }; 1175 ; 1176 if (isNormalized) {; 1177 SetBit(kNormalized, true);; 1178 }; 1179 std::vector<TString> variables;; 1180 Int_t dim = 0;; 1181 TString varList = """";; 1182 Bool_t defaultVariables = false;; 1183 ; 1184 // check if function has specified the [...] e.g. gaus[x,y]; 1185 Int_t openingBracketPos = funPos + funName.Length() + (isNormalized ? 1 : 0);; 1186 Int_t closingBracketPos = kNPOS;; 1187 if (openingBracketPos > formula.Length() || formula[openingBracketPos] != '[') {; 1188 dim = funDim;; 1189 variables.resize(dim);; 1190 for (Int_t idim = 0; idim < dim; ++idim); 1191 variables[idim] = defaultVariableNames[idim];; 1192 defaultVariables = true;; 1193 } else {; 1194 // in case of [..] found, assume they specify all the variables. Use it to get function d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:43675,variab,variables,43675,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.02,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80692,config,configuration,80692,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.395,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83633,config,configuration,83633,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,6 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.02565 3.406 0.0200479 0.00175462 43732 3; : 1050 | 3.16008 3.99499 0.0202749 0.00175016 43185.5 4; : 1051 | 3.00714 3.41105 0.0202798 0.00177822 43239.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 |,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:116569,config,configuration,116569,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"6 small scalable dot kFullDotSmall; 7 medium scalable dot kFullDotMedium; 8 large scalable dot kFullDotLarge; 9 -->19 dot; 20 full circle kFullCircle; 21 full square kFullSquare; 22 full triangle up kFullTriangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 open star kOpenStar; 30 full star kFullStar. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; return c;; }. Marker size; Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can be; specified. The marker size does not refer to any coordinate systems, it is an; absolute value. Therefore the marker size is not affected by any change ; in TPad's scale.; The marker size of any class inheriting from TAttMarker can ; be changed using the method SetMarkerSize and retrieved using the ; method GetMarkerSize. Picture; Source. {; c = new TCanvas(""c"",""Marker sizes"",0,0,500,200);; TMarker marker;; marker.SetMarkerStyle(3);; Double_t x = 0;; Double_t dx = 1/6.0;; for (Int_t i=1; i<6; i++) {; x += dx;; marker.SetMarkerSize(i*0.2); marker.DrawMarker(x,.165);; marker.SetMarkerSize(i*0.8); marker.DrawMarker(x,.495);; marker.SetMarkerSize(i*1.0); marker.DrawMarker(x,.835);; }; return c;; }. Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled. They ; are meant to be very fast to draw and are always drawn with the same number of; pixels; therefore SetMarkerSize does not apply on them. To have a ; ""scalable dot"" a filled circle should be used instead, i.e. the marker style; number 20. By default (if SetMarkerStyle is not specified), the marker ; style used is 1. That's the most common one to draw scatter plots.; . Function Members (Methods); public:. TAttMarker(); TAttMarker(const TAttMarker&); TAttMarker",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAttMarker.html:2494,inherit,inheriting,2494,root/html526/TAttMarker.html,https://root.cern,https://root.cern/root/html526/TAttMarker.html,1,['inherit'],['inheriting']
Modifiability,"6 splitSpecs.DeclareOptionRef( nEventRequests.at(cl).nTrainingEventsRequested, TString(""nTrain_"")+clName, titleTrain );; 687 splitSpecs.DeclareOptionRef( nEventRequests.at(cl).nTestingEventsRequested , TString(""nTest_"")+clName , titleTest );; 688 splitSpecs.DeclareOptionRef( nEventRequests.at(cl).TrainTestSplitRequested , TString(""TrainTestSplit_"")+clName , titleTest );; 689 }; 690 ; 691 splitSpecs.DeclareOptionRef( fVerbose, ""V"", ""Verbosity (default: true)"" );; 692 ; 693 splitSpecs.DeclareOptionRef( fVerboseLevel=TString(""Info""), ""VerboseLevel"", ""VerboseLevel (Debug/Verbose/Info)"" );; 694 splitSpecs.AddPreDefVal(TString(""Debug""));; 695 splitSpecs.AddPreDefVal(TString(""Verbose""));; 696 splitSpecs.AddPreDefVal(TString(""Info""));; 697 ; 698 fCorrelations = kTRUE;; 699 splitSpecs.DeclareOptionRef(fCorrelations, ""Correlations"", ""Boolean to show correlation output (Default: true)"");; 700 fComputeCorrelations = kTRUE;; 701 splitSpecs.DeclareOptionRef(fComputeCorrelations, ""CalcCorrelations"", ""Compute correlations and also some variable statistics, e.g. min/max (Default: true )"");; 702 ; 703 splitSpecs.ParseOptions();; 704 splitSpecs.CheckForUnusedOptions();; 705 ; 706 // output logging verbosity; 707 if (Verbose()) fLogger->SetMinType( kVERBOSE );; 708 if (fVerboseLevel.CompareTo(""Debug"") ==0) fLogger->SetMinType( kDEBUG );; 709 if (fVerboseLevel.CompareTo(""Verbose"") ==0) fLogger->SetMinType( kVERBOSE );; 710 if (fVerboseLevel.CompareTo(""Info"") ==0) fLogger->SetMinType( kINFO );; 711 ; 712 // put all to upper case; 713 splitMode.ToUpper(); mixMode.ToUpper(); normMode.ToUpper();; 714 // adjust mixmode if same as splitmode option has been set; 715 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 716 << ""\tSplitmode is: \"""" << splitMode << ""\"" the mixmode is: \"""" << mixMode << ""\"""" << Endl;; 717 if (mixMode==""SAMEASSPLITMODE"") mixMode = splitMode;; 718 else if (mixMode!=splitMode); 719 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""DataSet splitmode=""<<s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:29107,variab,variable,29107,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6#endif; 16227 return ret;; 16228}; 16229#else; 16230static long; 16231ssl_get_protocol(int version_id); 16232{; 16233 unsigned long ret = (unsigned long)SSL_OP_ALL;; 16234 if (version_id > 0); 16235 ret |= SSL_OP_NO_SSLv2;; 16236 if (version_id > 1); 16237 ret |= SSL_OP_NO_SSLv3;; 16238 if (version_id > 2); 16239 ret |= SSL_OP_NO_TLSv1;; 16240 if (version_id > 3); 16241 ret |= SSL_OP_NO_TLSv1_1;; 16242 if (version_id > 4); 16243 ret |= SSL_OP_NO_TLSv1_2;; 16244#if defined(SSL_OP_NO_TLSv1_3); 16245 if (version_id > 5); 16246 ret |= SSL_OP_NO_TLSv1_3;; 16247#endif; 16248 return (long)ret;; 16249}; 16250#endif /* OPENSSL_API_1_1 */; 16251 ; 16252 ; 16253/* SSL callback documentation:; 16254 * https://www.openssl.org/docs/man1.1.0/ssl/SSL_set_info_callback.html; 16255 * https://wiki.openssl.org/index.php/Manual:SSL_CTX_set_info_callback(3); 16256 * https://linux.die.net/man/3/ssl_set_info_callback */; 16257/* Note: There is no ""const"" for the first argument in the documentation; 16258 * examples, however some (maybe most, but not all) headers of OpenSSL; 16259 * versions / OpenSSL compatibility layers have it. Having a different; 16260 * definition will cause a warning in C and an error in C++. Use ""const SSL; 16261 * *"", while automatical conversion from ""SSL *"" works for all compilers,; 16262 * but not other way around */; 16263static void; 16264ssl_info_callback(const SSL *ssl, int what, int ret); 16265{; 16266 (void)ret;; 16267 ; 16268 if (what & SSL_CB_HANDSHAKE_START) {; 16269 SSL_get_app_data(ssl);; 16270 }; 16271 if (what & SSL_CB_HANDSHAKE_DONE) {; 16272 /* TODO: check for openSSL 1.1 */; 16273 //#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS 0x0001; 16274 // ssl->s3->flags |= SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS;; 16275 }; 16276}; 16277 ; 16278 ; 16279static int; 16280ssl_servername_callback(SSL *ssl, int *ad, void *arg); 16281{; 16282#if defined(GCC_DIAGNOSTIC); 16283#pragma GCC diagnostic push; 16284#pragma GCC diagnostic ignored ""-Wcast-align""; 16285#endif /* defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:480262,layers,layers,480262,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['layers'],['layers']
Modifiability,"6.43e-20 6.43E-20 6,43e-20. TString Itoa(Int_t value, Int_t base); Converts an Int_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; Usage: the following statement produce the same output, namely ""1111""; std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; In case of error returns the ""!"" string. TString UItoa(UInt_t value, Int_t base); Converts a UInt_t (twice the range of an Int_t) to a TString with respect; to the base specified (2-36). Thus it is an enhanced version of sprintf; (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString LLtoa(Long64_t value, Int_t base); Converts a Long64_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString ULLtoa(ULong64_t value, Int_t base); Converts a ULong64_t (twice the range of an Long64_t) to a TString with; respect to the base specified (2-36). Thus it is an enhanced version of; sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Converts string from base base_in to base base_out. Supported bases; are 2-36. At most 64 bit data can be converted. Bool_t EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Return true if string ends with the specified string. TObjArray * Tokenize(const TString& delim) const; This function is used to isolate sequential tokens in a TString.; These tokens are separated in the string by at least one of the; characters in delim. The returned array contains the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TString.html:19146,enhance,enhanced,19146,root/html602/TString.html,https://root.cern,https://root.cern/root/html602/TString.html,4,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"6/// second is the name of the ROOT file where the friend tree is saved.; 1287/// AddFriend automatically opens the friend file. If no file name is given,; 1288/// the tree called ft1 is assumed to be in the same file as the original tree.; 1289///; 1290/// tree.AddFriend(""ft1"",""friendfile1.root"");; 1291/// If the friend tree has the same name as the original tree, you can give it; 1292/// an alias in the context of the friendship:; 1293///; 1294/// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; 1295/// Once the tree has friends, we can use TTree::Draw as if the friend's; 1296/// variables were in the original tree. To specify which tree to use in; 1297/// the Draw method, use the syntax:; 1298/// ~~~ {.cpp}; 1299/// <treeName>.<branchname>.<varname>; 1300/// ~~~; 1301/// If the variablename is enough to uniquely identify the variable, you can; 1302/// leave out the tree and/or branch name.; 1303/// For example, these commands generate a 3-d scatter plot of variable ""var""; 1304/// in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; 1305/// TTree ft2.; 1306/// ~~~ {.cpp}; 1307/// tree.AddFriend(""ft1"",""friendfile1.root"");; 1308/// tree.AddFriend(""ft2"",""friendfile2.root"");; 1309/// tree.Draw(""var:ft1.v1:ft2.v2"");; 1310/// ~~~; 1311/// \image html ttree_friend2.png; 1312///; 1313/// The picture illustrates the access of the tree and its friends with a; 1314/// Draw command.; 1315/// When AddFriend is called, the ROOT file is automatically opened and the; 1316/// friend tree (ft1) is read into memory. The new friend (ft1) is added to; 1317/// the list of friends of tree.; 1318/// The number of entries in the friend must be equal or greater to the number; 1319/// of entries of the original tree. If the friend tree has fewer entries a; 1320/// warning is given and the missing entries are not included in the histogram.; 1321/// To retrieve the list of friends from a tree use TTree::GetListOfFriends.; 1322/// When the tree is written to file (TTree:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:47207,variab,variable,47207,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,3,['variab'],['variable']
Modifiability,"603&p=83973#p83973”>here. THStack. Implement GetNhists() to return the number of histograms in the stack.; New drawing option NOSTACKB. histograms are drawn next to each other as bar charts.; Example:; TCanvas* nostackb() {; TCanvas *cst0 = new TCanvas(""cst0"",""cst0"",600,400);; THStack *hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. TH1F *h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. TH1F *h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. TH1F *h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; return cst0;; }. NOSTACKB plot example. GUI Libraries; TGTextViewostream. A new TGTextViewostream class has been added. It is a text viewer widget and is a specialization of TGTextView and std::ostream. It uses a TGTextViewStreamBuf, which inherits from std::streambuf, allowing to stream text directly to the text view in a cout - like fashion. A new tutorial showing how to use the TGTextViewostream widget has also been added. FitPanel. Add the functionality for composing function using convolution and for normalized sums using the new TF1NormSum and TF1Convolution classes. 2D Graphics Libraries; TText. The character position was not correct with the Cocoa backend. (see https://sft.its.cern.ch/jira/browse/ROOT-6561); Interactive update of TText position did not work in NDC mode. (se https://sft.its.cern.ch/jira/browse/ROOT-7284). TLegend. Use the new TStyle global attribute gStyle->GetLegendTextSize() to set the legend item text size. If this value is 0 and if the text size directly set on the TLegend object is also 0, then the text size is automatically computed to fit the legend box. If gStyle->GetLegendTextSize() is non equal to 0 and if text size directly set on the TLegend object is 0, then the gStyle value is used to draw the legend text. If the tex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:20314,inherit,inherits,20314,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['inherit'],['inherits']
Modifiability,6037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:102859,config,configuration,102859,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100557,config,configuration,100557,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"60; TMinuit::Evalvirtual Int_t Eval(Int_t npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)Evaluate the minimisation function Input parameters:Definition TMinuit.cxx:800; TMinuit::fFIXPyyDouble_t * fFIXPyyDefinition TMinuit.h:102; TMinuit::fStatusInt_t fStatusDefinition TMinuit.h:154; TMinuit::fGstepDouble_t * fGstepDefinition TMinuit.h:83; TMinuit::fXtDouble_t * fXtDefinition TMinuit.h:76; TMinuit::mnmigrvirtual void mnmigr()Performs a local function minimization.Definition TMinuit.cxx:5048; TMinuit::fIstratInt_t fIstratDefinition TMinuit.h:150; TMinuit::fCwordTString fCwordDefinition TMinuit.h:169; TMinuit::fPlotTObject * fPlotDefinition TMinuit.h:176; TMinuit::fPSDFsDouble_t * fPSDFsDefinition TMinuit.h:116; TMinuit::fMIGRgsDouble_t * fMIGRgsDefinition TMinuit.h:110; TMinuit::mnematvirtual void mnemat(Double_t *emat, Int_t ndim)Calculates the external error matrix from the internal matrix.Definition TMinuit.cxx:2501; TMinuit::mnrn15virtual void mnrn15(Double_t &val, Int_t &inseed)This is a super-portable random number generator.Definition TMinuit.cxx:6619; TMinuit::mnerrsvirtual void mnerrs(Int_t number, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &gcc)Utility routine to get MINOS errors.Definition TMinuit.cxx:2578; TMinuit::Classstatic TClass * Class(); TMinuit::fMIGRstepDouble_t * fMIGRstepDefinition TMinuit.h:109; TMinuit::fEpsiDouble_t fEpsiDefinition TMinuit.h:53; TMinuit::fWord7Double_t * fWord7Definition TMinuit.h:96; TMinuit::mnexinvirtual void mnexin(Double_t *pint)Transforms the external parameter values U to internal values.Definition TMinuit.cxx:3151; TMinuit::fCovmesTString fCovmes[4]Definition TMinuit.h:172; TMinuit::fIstkwrInt_t fIstkwr[10]Definition TMinuit.h:139; TMinuit::fNparInt_t fNparDefinition TMinuit.h:41; TMinuit::mnexcmvirtual void mnexcm(const char *comand, Double_t *plist, Int_t llist, Int_t &ierflg)Interprets a command and takes appropriate action.Definition TMinuit.cxx:2664; TMinuit::fPbarDouble_t * fPb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:268897,portab,portable,268897,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['portab'],['portable']
Modifiability,"60; TMinuit::Evalvirtual Int_t Eval(Int_t npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)Evaluate the minimisation function Input parameters:Definition TMinuit.cxx:800; TMinuit::fFIXPyyDouble_t * fFIXPyyDefinition TMinuit.h:102; TMinuit::fStatusInt_t fStatusDefinition TMinuit.h:154; TMinuit::fGstepDouble_t * fGstepDefinition TMinuit.h:83; TMinuit::fXtDouble_t * fXtDefinition TMinuit.h:76; TMinuit::mnmigrvirtual void mnmigr()Performs a local function minimization.Definition TMinuit.cxx:5048; TMinuit::fIstratInt_t fIstratDefinition TMinuit.h:150; TMinuit::fCwordTString fCwordDefinition TMinuit.h:169; TMinuit::fPlotTObject * fPlotDefinition TMinuit.h:176; TMinuit::fPSDFsDouble_t * fPSDFsDefinition TMinuit.h:116; TMinuit::fMIGRgsDouble_t * fMIGRgsDefinition TMinuit.h:110; TMinuit::mnematvirtual void mnemat(Double_t *emat, Int_t ndim)Calculates the external error matrix from the internal matrix.Definition TMinuit.cxx:2501; TMinuit::mnrn15virtual void mnrn15(Double_t &val, Int_t &inseed)This is a super-portable random number generator.Definition TMinuit.cxx:6619; TMinuit::mnerrsvirtual void mnerrs(Int_t number, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &gcc)Utility routine to get MINOS errors.Definition TMinuit.cxx:2578; TMinuit::fMIGRstepDouble_t * fMIGRstepDefinition TMinuit.h:109; TMinuit::fEpsiDouble_t fEpsiDefinition TMinuit.h:53; TMinuit::fWord7Double_t * fWord7Definition TMinuit.h:96; TMinuit::mnexinvirtual void mnexin(Double_t *pint)Transforms the external parameter values U to internal values.Definition TMinuit.cxx:3151; TMinuit::fCovmesTString fCovmes[4]Definition TMinuit.h:172; TMinuit::fIstkwrInt_t fIstkwr[10]Definition TMinuit.h:139; TMinuit::fNparInt_t fNparDefinition TMinuit.h:41; TMinuit::mnexcmvirtual void mnexcm(const char *comand, Double_t *plist, Int_t llist, Int_t &ierflg)Interprets a command and takes appropriate action.Definition TMinuit.cxx:2664; TMinuit::fPbarDouble_t * fPbarDefinition TMinuit.h:94; TMinuit::mnh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:27045,portab,portable,27045,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['portab'],['portable']
Modifiability,"61 ; 1362 ; 1363 ; 1364 ; 1365 ; 1366////////////////////////////////////////////////////////////////////////////////; 1367/// Generate a new dataset containing the specified variables with; 1368/// events sampled from our distribution.; 1369///; 1370/// \param[in] whatVars Generate a dataset with the variables (and categories) in this set.; 1371/// Any variables of this PDF that are not in `whatVars` will use their; 1372/// current values and be treated as fixed parameters.; 1373/// \param[in] nEvents Generate the specified number of events or else try to use; 1374/// expectedEvents() if nEvents <= 0 (default).; 1375/// \param[in] verbose Show which generator strategies are being used.; 1376/// \param[in] autoBinned If original distribution is binned, return bin centers and randomise weights; 1377/// instead of generating single events.; 1378/// \param[in] binnedTag; 1379/// \param[in] expectedData Call setExpectedData on the genContext.; 1380/// \param[in] extended Randomise number of events generated according to Poisson(nEvents). Only useful; 1381/// if PDF is extended.; 1382/// \return New dataset. Returns zero in case of an error. The caller takes ownership of the returned; 1383/// dataset.; 1384 ; 1385RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(const RooArgSet &whatVars, double nEvents, bool verbose, bool autoBinned, const char* binnedTag, bool expectedData, bool extended) const; 1386{; 1387 if (nEvents==0 && extendMode()==CanNotBeExtended) {; 1388 return RooFit::makeOwningPtr(std::make_unique<RooDataSet>(""emptyData"",""emptyData"",whatVars));; 1389 }; 1390 ; 1391 // Request for binned generation; 1392 std::unique_ptr<RooAbsGenContext> context{autoGenContext(whatVars,nullptr,nullptr,verbose,autoBinned,binnedTag)};; 1393 if (expectedData) {; 1394 context->setExpectedData(true) ;; 1395 }; 1396 ; 1397 std::unique_ptr<RooDataSet> generated;; 1398 if(nullptr != context && context->isValid()) {; 1399 generated = std::unique_ptr<RooDataSet>{context->generate(nEven",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:68102,extend,extended,68102,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"61 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vector<double> *const vec = (std::vector<double>*)(((char*)addr)+config->fOffset);; 1967 Int_t nvalues;; 1968 buf.ReadInt(nvalues);; 1969 vec->resize(nvalues);; 1970 ; 1971#ifdef R__VISUAL_CPLUSPLUS; 1972 if (nvalues <= 0) {; 1973 buf.CheckByteCount(start,count,config->fTypeName);; 1974 return 0;; 1975 }; 1976#endif; 1977 double *begin = &(*vec->begin());; 1978 buf.ReadFastArrayDouble32(begin, nvalues);; 1979 ; 1980 buf.CheckByteCount(start,count,config->fTypeName);; 1981 return 0;; 1982 }; 1983 ; 1984 template <typename From, typename To>; 1985 struct ConvertCollectionBasicType {; 1986 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 1987 {; 1988 // Collection of numbers. Memberwise or not, it is all the same.; 1989 ; 1990 TConfigSTL *config = (TConfigSTL*)conf;; 1991 UInt_t start, count;; 1992 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1993 ; 1994 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 1995 Int_t nvalues;; 1996 buf.ReadInt(nvalues);; 1997 vec->resize(nvalues);; 1998 ; 1999 From *temp = new From[nvalues];; 2000 buf.ReadFastArray(temp, nvalues);; 2001 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2002 (*vec)[ind] = (To)temp[ind];; 2003 }; 2004 delete [] temp;; 2005 ; 2006 buf.CheckByteCount(start,count,config->fTypeName);; 2007 return 0;; 2008 }; 2009 };; 2010 ; 2011 template <typename From, typename To>; 2012 struct ConvertCollectionBasicType<NoFactorMarker<From>,To> {; 2013 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 2014 {; 2015 // Collection of numbers. Memberwise or not, it is all the same.; 2016 ; 2017 TConfigSTL *config = (TConfigSTL*)conf;; 2018 UInt_t start, count;; 2019 /* Version_t vers = */ buf.ReadVersion(&start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:82548,config,config,82548,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network tr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16986,config,configuration,16986,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"6312 mg_lock_context(conn->phys_ctx);; 16313 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16314 mg_unlock_context(conn->phys_ctx);; 16315 return SSL_TLSEXT_ERR_NOACK;; 16316 }; 16317 ; 16318 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16319 ; 16320 while (conn->dom_ctx) {; 16321 if (!mg_strcasecmp(servername,; 16322 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16323 /* Found matching domain */; 16324 DEBUG_TRACE(""TLS domain %s found"",; 16325 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16326 break;; 16327 }; 16328 mg_lock_context(conn->phys_ctx);; 16329 conn->dom_ctx = conn->dom_ctx->next;; 16330 mg_unlock_context(conn->phys_ctx);; 16331 }; 16332 ; 16333 if (conn->dom_ctx == NULL) {; 16334 /* Default domain */; 16335 DEBUG_TRACE(""TLS default domain %s used"",; 16336 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16337 conn->dom_ctx = &(conn->phys_ctx->dd);; 16338 }; 16339 mg_lock_context(conn->phys_ctx);; 16340 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16341 mg_unlock_context(conn->phys_ctx);; 16342 return SSL_TLSEXT_ERR_OK;; 16343}; 16344 ; 16345 ; 16346#if defined(USE_ALPN); 16347static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16348static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16349 alpn_proto_list + 3 + 8,; 16350 NULL};; 16351#if defined(USE_HTTP2); 16352static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16353 alpn_proto_list + 3,; 16354 alpn_proto_list + 3 + 8,; 16355 NULL};; 16356#endif; 16357 ; 16358static int; 16359alpn_select_cb(SSL *ssl,; 16360 const unsigned char **out,; 16361 unsigned char *outlen,; 16362 const unsigned char *in,; 16363 unsigned int inlen,; 16364 void *arg); 16365{; 16366 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16367 unsigned int i, j, enable_http2 = 0;; 16368 const char **alpn_proto_order = alpn_proto_order_http1;; 16369 ; 16370 struct mg_workerTLS *tls =; 16371 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 163",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:482983,config,config,482983,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"6313 mg_lock_context(conn->phys_ctx);; 16314 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16315 mg_unlock_context(conn->phys_ctx);; 16316 return SSL_TLSEXT_ERR_NOACK;; 16317 }; 16318 ; 16319 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16320 ; 16321 while (conn->dom_ctx) {; 16322 if (!mg_strcasecmp(servername,; 16323 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16324 /* Found matching domain */; 16325 DEBUG_TRACE(""TLS domain %s found"",; 16326 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16327 break;; 16328 }; 16329 mg_lock_context(conn->phys_ctx);; 16330 conn->dom_ctx = conn->dom_ctx->next;; 16331 mg_unlock_context(conn->phys_ctx);; 16332 }; 16333 ; 16334 if (conn->dom_ctx == NULL) {; 16335 /* Default domain */; 16336 DEBUG_TRACE(""TLS default domain %s used"",; 16337 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16338 conn->dom_ctx = &(conn->phys_ctx->dd);; 16339 }; 16340 mg_lock_context(conn->phys_ctx);; 16341 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16342 mg_unlock_context(conn->phys_ctx);; 16343 return SSL_TLSEXT_ERR_OK;; 16344}; 16345 ; 16346 ; 16347#if defined(USE_ALPN); 16348static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16349static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16350 alpn_proto_list + 3 + 8,; 16351 NULL};; 16352#if defined(USE_HTTP2); 16353static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16354 alpn_proto_list + 3,; 16355 alpn_proto_list + 3 + 8,; 16356 NULL};; 16357#endif; 16358 ; 16359static int; 16360alpn_select_cb(SSL *ssl,; 16361 const unsigned char **out,; 16362 unsigned char *outlen,; 16363 const unsigned char *in,; 16364 unsigned int inlen,; 16365 void *arg); 16366{; 16367 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16368 unsigned int i, j, enable_http2 = 0;; 16369 const char **alpn_proto_order = alpn_proto_order_http1;; 16370 ; 16371 struct mg_workerTLS *tls =; 16372 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 163",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:483016,config,config,483016,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,64.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91771,config,configuration,91771,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files); Create in each worker sandbox symlinks to the files in the list; Used to make the caceh information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0); Copy a macro, and its possible associated .h[h] file,; to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:27910,sandbox,sandbox,27910,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,3,['sandbox'],['sandbox']
Modifiability,"64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files); Create in each worker sandbox symlinks to the files in the list; Used to make the cache information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0); Copy a macro, and its possible associated .h[h] file,; to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofLite.html:31907,sandbox,sandbox,31907,root/html602/TProofLite.html,https://root.cern,https://root.cern/root/html602/TProofLite.html,1,['sandbox'],['sandbox']
Modifiability,"64_t GetCapacity () const;  Return capacity of the block. ;  ; Long64_t GetDataSize () const;  Return size of the data in the block. ;  ; Int_t * GetLen () const;  Get pointer to the array of lengths. ;  ; Int_t GetLen (Int_t) const;  Get length of the element at index i. ;  ; Int_t GetNoElem () const;  Return number of elements in the block. ;  ; Long64_t * GetPos () const;  Get pointer to the array of postions. ;  ; Long64_t GetPos (Int_t) const;  Get position of the element at index i. ;  ; char * GetPtrToPiece (Int_t index) const;  Get block buffer. ;  ; TClass * IsA () const override;  ; void ReallocBlock (Long64_t *, Int_t *, Int_t);  Reallocate the block's buffer based on the length of the elements it will contain. ;  ; void SetBuffer (char *);  Set block buffer. ;  ; void SetPos (Int_t, Long64_t);  Set pos value for index idx. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFPBlock.html:1803,inherit,inherited,1803,doc/master/classTFPBlock.html,https://root.cern,https://root.cern/doc/master/classTFPBlock.html,1,['inherit'],['inherited']
Modifiability,"64_t fSizeMin;  ; TGraph * fSizeP;  ; Float_t fStart;  ; Float_t fStop;  ; TList fWrkList;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TProofPerfAnalysis::TFileInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html:10252,inherit,inherited,10252,doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,2,['inherit'],['inherited']
Modifiability,65.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90087,config,configuration,90087,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,65.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84707,config,configuration,84707,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"663e-18 9.36796e-18 1. MnGlobalCorrelationCoeff:. 0.408248; 0.547723; 0.621261; 0; 3.3 CVS code repository; How to check out (–in) code from the CVS code repository is described at the M homepage @bib-C++MINUIT. To get the source code from the CVS repository one needs to do:; Kerberos IV authorization:; $ setenv CVSROOT :kserver:SEAL.cvs.cern.ch:/cvs/SEAL. $ cvs co MathLibs/Minuit; Anonymous read-only access (if it’s enabled by the librarian, see details):; $ setenv CVSROOT :pserver:anonymous@SEAL.cvs.cern.ch:/cvs/SEAL. $ cvs login; (Logging in to :pserver:anonymous@seal.cvs.cern.ch:2401/cvs/SEAL) CVS password:cvs; $ cvs co MathLibs/Minuit; (If you want to check out a tagged version SEAL_x_x_x of MINUIT, then do; $ cvs co -r SEAL\_x\_x\_x MathLibs/Minuit ); 3.4 Create a tar.gz from CVS; Once the sources are checked out from the CVS code repository,. change to the directory:; $ cd MathLibs/Minuit; run autogen:; $ ./autogen; create a new directory:; $ cd ..; $ mkdir Minuit-BUILD; $ cd Minuit-BUILD/; run configure:; $ ../Minuit/configure; create the tar.gz:; $ make dist. This will create a Minuit-x.x.x.tar.gz which can be distributed and used as described above.; 3.5 M versions; The version numbers of M follow the release numbers of the SEAL project @bib-SEAL at CERN @bib-CERN.; 3.5.1 From to; The program is entirely written in standard portable . M does not depend on any external library. In its minimal usage the user must only provide an implementation of the FCNBase class to M and parameters and uncertainties in form of std::vector containers.; 3.5.2 Memory allocation and thread safety; Differently to the version of M , the version has its own memory manager (StackAllocator. The user can select between the standard dynamic memory allocation and deallocation (default) and performance-optimized stack–like allocation (optional). However, the library is not thread save using stack–allocation.; 3.5.3 M parameters; Differently to the version of M there is no limit on the n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:30083,config,configure,30083,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['config'],['configure']
Modifiability,"664 of file RooAbsPdf.cxx. ◆ setNormRange(). void RooAbsPdf::setNormRange ; (; const char * ; rangeName). Definition at line 2726 of file RooAbsPdf.cxx. ◆ setNormRangeOverride(). void RooAbsPdf::setNormRangeOverride ; (; const char * ; rangeName). Definition at line 2746 of file RooAbsPdf.cxx. ◆ setTraceCounter(). void RooAbsPdf::setTraceCounter ; (; Int_t ; value, . bool ; allNodes = false . ). Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ; Definition at line 598 of file RooAbsPdf.cxx. ◆ specialGeneratorConfig() [1/2]. RooNumGenConfig * RooAbsPdf::specialGeneratorConfig ; (; ); const. Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned ; Definition at line 2623 of file RooAbsPdf.cxx. ◆ specialGeneratorConfig() [2/2]. RooNumGenConfig * RooAbsPdf::specialGeneratorConfig ; (; bool ; createOnTheFly). Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned, unless createOnTheFly is true in which case a clone of the default integrator configuration is created, installed as specialized configuration, and returned ; Definition at line 2636 of file RooAbsPdf.cxx. ◆ Streamer(). void RooAbsPdf::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in RooArgusBG, RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBernstein, RooBifurGauss, RooBMixDecay, RooBreitWigner, RooBukinPdf, RooCBShape, RooCFunction1PdfBinding< VO, VI >, RooCFunction2PdfBinding< VO, VI1, VI2 >, RooCFunction3PdfBinding< VO, VI1, VI2, VI3 >, RooCFunction4PdfBinding< VO, VI1, VI2, VI3, VI4 >, RooChebychev, RooChiSquarePdf, RooCrystalBall, RooDecay, RooDstD0BG, RooExponential, RooFunctor1DPdfBinding, RooFunctorPdfBinding, RooGamma, RooGaussian, RooGaussModel, RooGExpModel, RooHistConstraint, R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:154174,config,configuration,154174,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['config'],['configuration']
Modifiability,667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:17570,variab,variables,17570,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variables']
Modifiability,66865 1.0000 [ -2.9882 3.3086 ]; : var4: -0.20593 1.0000 [ -3.3088 2.8423 ]; : -----------------------------------------------------------; : Preparing the Principle Component (PCA) transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 5.7502e-10 1.8064 [ -8.0344 7.8312 ]; : var2:-1.6078e-11 0.90130 [ -2.6765 2.7523 ]; : var3: 3.0841e-10 0.73386 [ -2.6572 2.2255 ]; : var4:-2.6886e-10 0.62168 [ -1.7384 2.2297 ]; : -----------------------------------------------------------; : Preparing the Gaussian transformation...; : Preparing the Decorrelation transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.013510 1.0000 [ -2.6520 6.2074 ]; : var2: 0.0096839 1.0000 [ -2.8402 6.3073 ]; : var3: 0.010397 1.0000 [ -3.0251 5.8860 ]; : var4: 0.0053980 1.0000 [ -3.0998 5.7078 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; Factory : Train method: BDTG for Multiclass classification; : ; : Training 1000 Decision Trees ... patience please; : Elapsed time for training with 4000 events: 5.42 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of BDTG on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 1.89 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.class.C␛[0m; : TMVAMulticlass.root:/dataset/Method_BDT/BDTG; Factory : Training finished; : ; Factory : Train method: MLP for Multiclass classification; : ; : Training Network; : ; : Elapsed time for training with 4000 events: 23.9 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Mult,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:10336,variab,variables,10336,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variables']
Modifiability,67 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97303,config,configuration,97303,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,67 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80804,config,configuration,80804,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"67 return std::string(cwd);; 1468}; 1469 ; 1470//////////////////////////////////////////////////////////////////////////////; 1471/// Fill buffer with current working directory.; 1472 ; 1473void TUnixSystem::FillWithCwd(char *cwd) const; 1474{; 1475 if (::getcwd(cwd, kMAXPATHLEN) == nullptr) {; 1476 Error(""WorkingDirectory"", ""getcwd() failed"");; 1477 }; 1478}; 1479 ; 1480////////////////////////////////////////////////////////////////////////////////; 1481/// Return the user's home directory.; 1482 ; 1483const char *TUnixSystem::HomeDirectory(const char *userName); 1484{; 1485 return UnixHomedirectory(userName);; 1486}; 1487 ; 1488//////////////////////////////////////////////////////////////////////////////; 1489/// Return the user's home directory.; 1490 ; 1491std::string TUnixSystem::GetHomeDirectory(const char *userName) const; 1492{; 1493 char path[kMAXPATHLEN], mydir[kMAXPATHLEN] = { '\0' };; 1494 auto res = UnixHomedirectory(userName, path, mydir);; 1495 if (res) return std::string(res);; 1496 else return std::string();; 1497}; 1498 ; 1499////////////////////////////////////////////////////////////////////////////////; 1500/// Return a user configured or systemwide directory to create; 1501/// temporary files in.; 1502 ; 1503const char *TUnixSystem::TempDirectory() const; 1504{; 1505 const char *dir = gSystem->Getenv(""TMPDIR"");; 1506 if (!dir || gSystem->AccessPathName(dir, kWritePermission)); 1507 dir = ""/tmp"";; 1508 ; 1509 return dir;; 1510}; 1511 ; 1512////////////////////////////////////////////////////////////////////////////////; 1513/// Create a secure temporary file by appending a unique; 1514/// 6 letter string to base. The file will be created in; 1515/// a standard (system) directory or in the directory; 1516/// provided in dir. Optionally one can provide suffix; 1517/// append to the final name - like extension "".txt"" or "".html"".; 1518/// The full filename is returned in base; 1519/// and a filepointer is returned for safely writing to the file; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:45602,config,configured,45602,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['config'],['configured']
Modifiability,"675{; 3676 if (GetDimension() < 2) {; 3677 return fXaxis.FindBin(x);; 3678 }; 3679 if (GetDimension() < 3) {; 3680 Int_t nx = fXaxis.GetNbins()+2;; 3681 Int_t binx = fXaxis.FindBin(x);; 3682 Int_t biny = fYaxis.FindBin(y);; 3683 return binx + nx*biny;; 3684 }; 3685 if (GetDimension() < 4) {; 3686 Int_t nx = fXaxis.GetNbins()+2;; 3687 Int_t ny = fYaxis.GetNbins()+2;; 3688 Int_t binx = fXaxis.FindBin(x);; 3689 Int_t biny = fYaxis.FindBin(y);; 3690 Int_t binz = fZaxis.FindBin(z);; 3691 return binx + nx*(biny +ny*binz);; 3692 }; 3693 return -1;; 3694}; 3695 ; 3696////////////////////////////////////////////////////////////////////////////////; 3697/// Return Global bin number corresponding to x,y,z.; 3698///; 3699/// 2-D and 3-D histograms are represented with a one dimensional; 3700/// structure. This has the advantage that all existing functions, such as; 3701/// GetBinContent, GetBinError, GetBinFunction work for all dimensions.; 3702/// This function DOES NOT try to extend the axis if the given point belongs; 3703/// to an under-/overflow bin.; 3704///; 3705/// See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin; 3706 ; 3707Int_t TH1::FindFixBin(Double_t x, Double_t y, Double_t z) const; 3708{; 3709 if (GetDimension() < 2) {; 3710 return fXaxis.FindFixBin(x);; 3711 }; 3712 if (GetDimension() < 3) {; 3713 Int_t nx = fXaxis.GetNbins()+2;; 3714 Int_t binx = fXaxis.FindFixBin(x);; 3715 Int_t biny = fYaxis.FindFixBin(y);; 3716 return binx + nx*biny;; 3717 }; 3718 if (GetDimension() < 4) {; 3719 Int_t nx = fXaxis.GetNbins()+2;; 3720 Int_t ny = fYaxis.GetNbins()+2;; 3721 Int_t binx = fXaxis.FindFixBin(x);; 3722 Int_t biny = fYaxis.FindFixBin(y);; 3723 Int_t binz = fZaxis.FindFixBin(z);; 3724 return binx + nx*(biny +ny*binz);; 3725 }; 3726 return -1;; 3727}; 3728 ; 3729////////////////////////////////////////////////////////////////////////////////; 3730/// Find first bin with content > threshold for axis (1=x, 2=y, 3=z); 3731/// if no bins with content > threshold i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:146985,extend,extend,146985,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extend']
Modifiability,"6760 } else if (callback_ret > 0) {; 16761 /* Callback > 0: Consider init done. */; 16762 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16763 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16764 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16765 return 0;; 16766 }; 16767 return 1;; 16768 }; 16769 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16770 * 0, CivetWeb should continue initializing SSL */; 16771 ; 16772 /* If PEM file is not specified and the init_ssl callbacks; 16773 * are not specified, setup will fail. */; 16774 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16775 && (phys_ctx->callbacks.init_ssl == NULL); 16776 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16777 /* No certificate and no init_ssl callbacks:; 16778 * Essential data to set up TLS is missing.; 16779 */; 16780 mg_cry_ctx_internal(phys_ctx,; 16781 ""Initializing SSL failed: -%s is not set"",; 16782 config_options[SSL_CERTIFICATE].name);; 16783 return 0;; 16784 }; 16785 ; 16786 /* If a certificate chain is configured, use it. */; 16787 chain = dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 16788 if (chain == NULL) {; 16789 /* Default: certificate chain in PEM file */; 16790 chain = pem;; 16791 }; 16792 if ((chain != NULL) && (*chain == 0)) {; 16793 /* If the chain is an empty string, don't use it. */; 16794 chain = NULL;; 16795 }; 16796 ; 16797 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16798 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16799 return 0;; 16800 }; 16801 ; 16802 return init_ssl_ctx_impl(phys_ctx, dom_ctx, pem, chain);; 16803}; 16804 ; 16805 ; 16806static void; 16807uninitialize_openssl(void); 16808{; 16809#if defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0); 16810 ; 16811 if (mg_atomic_dec(&cryptolib_users) == 0) {; 16812 ; 16813 /* Shutdown according to; 16814 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16815 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16816 */; 16817 CONF_modul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:498393,config,configured,498393,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"6761 } else if (callback_ret > 0) {; 16762 /* Callback > 0: Consider init done. */; 16763 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16764 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16765 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16766 return 0;; 16767 }; 16768 return 1;; 16769 }; 16770 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16771 * 0, CivetWeb should continue initializing SSL */; 16772 ; 16773 /* If PEM file is not specified and the init_ssl callbacks; 16774 * are not specified, setup will fail. */; 16775 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16776 && (phys_ctx->callbacks.init_ssl == NULL); 16777 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16778 /* No certificate and no init_ssl callbacks:; 16779 * Essential data to set up TLS is missing.; 16780 */; 16781 mg_cry_ctx_internal(phys_ctx,; 16782 ""Initializing SSL failed: -%s is not set"",; 16783 config_options[SSL_CERTIFICATE].name);; 16784 return 0;; 16785 }; 16786 ; 16787 /* If a certificate chain is configured, use it. */; 16788 chain = dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 16789 if (chain == NULL) {; 16790 /* Default: certificate chain in PEM file */; 16791 chain = pem;; 16792 }; 16793 if ((chain != NULL) && (*chain == 0)) {; 16794 /* If the chain is an empty string, don't use it. */; 16795 chain = NULL;; 16796 }; 16797 ; 16798 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16799 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16800 return 0;; 16801 }; 16802 ; 16803 return init_ssl_ctx_impl(phys_ctx, dom_ctx, pem, chain);; 16804}; 16805 ; 16806 ; 16807static void; 16808uninitialize_openssl(void); 16809{; 16810#if defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0); 16811 ; 16812 if (mg_atomic_dec(&cryptolib_users) == 0) {; 16813 ; 16814 /* Shutdown according to; 16815 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16816 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16817 */; 16818 CONF_modul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:498426,config,configured,498426,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"68 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 300 ) Batch size = 256 Loss function = C; Layer 0 DENSE Layer: ( Input = 300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:17263,config,configuration,17263,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,68 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100838,config,configuration,100838,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"68 case 3:; 3169 equi_bins = equi_bins && !fTotalHistogram->GetZaxis()->GetXbins()->fArray; 3170 && !fTotalHistogram->GetZaxis()->GetXbins()->fN;; 3171 case 2:; 3172 equi_bins = equi_bins && !fTotalHistogram->GetYaxis()->GetXbins()->fArray; 3173 && !fTotalHistogram->GetYaxis()->GetXbins()->fN;; 3174 case 1:; 3175 equi_bins = equi_bins && !fTotalHistogram->GetXaxis()->GetXbins()->fArray; 3176 && !fTotalHistogram->GetXaxis()->GetXbins()->fN;; 3177 }; 3178 ; 3179 //create arrays containing the variable binning; 3180 if(!equi_bins) {; 3181 Int_t i;; 3182 ++naxis;; 3183 sxaxis += naxis;; 3184 syaxis += naxis;; 3185 szaxis += naxis;; 3186 //x axis; 3187 out << indent << ""Double_t "" << sxaxis << ""[""; 3188 << fTotalHistogram->GetXaxis()->GetXbins()->fN << ""] = {"";; 3189 for (i = 0; i < fTotalHistogram->GetXaxis()->GetXbins()->fN; ++i) {; 3190 if (i != 0) out << "", "";; 3191 out << fTotalHistogram->GetXaxis()->GetXbins()->fArray[i];; 3192 }; 3193 out << ""}; "" << std::endl;; 3194 //y axis; 3195 if(GetDimension() > 1) {; 3196 out << indent << ""Double_t "" << syaxis << ""[""; 3197 << fTotalHistogram->GetYaxis()->GetXbins()->fN << ""] = {"";; 3198 for (i = 0; i < fTotalHistogram->GetYaxis()->GetXbins()->fN; ++i) {; 3199 if (i != 0) out << "", "";; 3200 out << fTotalHistogram->GetYaxis()->GetXbins()->fArray[i];; 3201 }; 3202 out << ""}; "" << std::endl;; 3203 }; 3204 //z axis; 3205 if(GetDimension() > 2) {; 3206 out << indent << ""Double_t "" << szaxis << ""[""; 3207 << fTotalHistogram->GetZaxis()->GetXbins()->fN << ""] = {"";; 3208 for (i = 0; i < fTotalHistogram->GetZaxis()->GetXbins()->fN; ++i) {; 3209 if (i != 0) out << "", "";; 3210 out << fTotalHistogram->GetZaxis()->GetXbins()->fArray[i];; 3211 }; 3212 out << ""}; "" << std::endl;; 3213 }; 3214 }//creating variable binning; 3215 ; 3216 //TEfficiency pointer has efficiency name + counter; 3217 static Int_t eff_count = 0;; 3218 ++eff_count;; 3219 TString eff_name = GetName();; 3220 eff_name += eff_count;; 3221 ; 3222 const char* name = eff_name.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:127038,variab,variable,127038,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6856 [ 0.38503 6.4013 ]; : m_wwbb: 0.96265 0.31608 [ 0.43228 4.5350 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; IdTransformation : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Separation; : -------------------------------; : 1 : m_bb : 9.511e-02; : 2 : m_wbb : 4.268e-02; : 3 : m_wwbb : 4.178e-02; : 4 : m_jjj : 2.825e-02; : 5 : m_jlv : 1.999e-02; : 6 : m_jj : 3.834e-03; : 7 : m_lv : 3.699e-03; : -------------------------------; Factory : Train method: Likelihood for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Likelihood ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:16642,variab,variables,16642,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,2,['variab'],['variables']
Modifiability,69.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96177,config,configuration,96177,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"692 goto L800;; 5693 }; 5694 mnfree(-k);; 5695 }; 5696// if redefining previously variable parameter; 5697 if (fNiofex[k-1] > 0) kint = fNpar - 1;; 5698L50:; 5699 ; 5700// print heading; 5701 if (fLphead && fISW[4] >= 0) {; 5702 Printf("" PARAMETER DEFINITIONS:"");; 5703 Printf("" NO. NAME VALUE STEP SIZE LIMITS"");; 5704 fLphead = kFALSE;; 5705 }; 5706 if (wk > 0) goto L122;; 5707// constant parameter; 5708 if (fISW[4] >= 0) {; 5709 Printf("" %5d %-10s %13.5e constant"",k,(const char*)cnamk,uk);; 5710 }; 5711 nvl = 0;; 5712 goto L200;; 5713L122:; 5714 if (a == 0 && b == 0) {; 5715// variable parameter without limits; 5716 nvl = 1;; 5717 if (fISW[4] >= 0) {; 5718 Printf("" %5d %-10s %13.5e%13.5e no limits"",k,(const char*)cnamk,uk,wk);; 5719 }; 5720 } else {; 5721// variable parameter with limits; 5722 nvl = 4;; 5723 fLnolim = kFALSE;; 5724 if (fISW[4] >= 0) {; 5725 Printf("" %5d %-10s %13.5e%13.5e %13.5e%13.5e"",k,(const char*)cnamk,uk,wk,a,b);; 5726 }; 5727 }; 5728// request for another variable parameter; 5729 ++kint;; 5730 if (kint > fMaxint) {; 5731 Printf("" MINUIT USER ERROR. TOO MANY VARIABLE PARAMETERS."");; 5732 goto L800;; 5733 }; 5734 if (nvl == 1) goto L200;; 5735 if (a == b) {; 5736 Printf("" USER ERROR IN MINUIT PARAMETER"");; 5737 Printf("" DEFINITION"");; 5738 Printf("" UPPER AND LOWER LIMITS EQUAL."");; 5739 goto L800;; 5740 }; 5741 if (b < a) {; 5742 sav = b;; 5743 b = a;; 5744 a = sav;; 5745 mnwarn(""W"", ""PARAM DEF"", ""PARAMETER LIMITS WERE REVERSED."");; 5746 if (fLwarn) fLphead = kTRUE;; 5747 }; 5748 if (b - a > 1e7) {; 5749 mnwarn(""W"", ""PARAM DEF"", TString::Format(""LIMITS ON PARAM%d TOO FAR APART."",k));; 5750 if (fLwarn) fLphead = kTRUE;; 5751 }; 5752 danger = (b - uk)*(uk - a);; 5753 if (danger < 0) {; 5754 mnwarn(""W"", ""PARAM DEF"", ""STARTING VALUE OUTSIDE LIMITS."");; 5755 }; 5756 if (danger == 0) {; 5757 mnwarn(""W"", ""PARAM DEF"", ""STARTING VALUE IS AT LIMIT."");; 5758 }; 5759L200:; 5760// input OK, set values, arrange lists,; 5761// calculate step sizes GSTEP, DIRIN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:186818,variab,variable,186818,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6: ""myArr[myvar]/d[0,10]""; 113 - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I).; 114 ; 115- If the address points to a single numerical variable, the leaflist is optional:; 116~~~ {.cpp}; 117 int value;; 118 tree->Branch(branchname, &value);; 119~~~; 120- If the address points to more than one numerical variable, we strongly recommend; 121 that the variable be sorted in decreasing order of size. Any other order will; 122 result in a non-portable TTree (i.e. you will not be able to read it back on a; 123 platform with a different padding strategy).; 124 We recommend to persistify objects rather than composite leaflists.; 125- In case of the truncated floating point types (Float16_t and Double32_t) you can; 126 furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; 127 the type character. For example, for storing a variable size array `myArr` of; 128 `Double32_t` with values within a range of `[0, 2*pi]` and the size of which is stored; 129 in an `Int_t` (/I) branch called `myArrSize`, the syntax for the `leaflist` string would; 130 be: `myArr[myArrSize]/d[0,twopi]`. Of course the number of bits could be specified,; 131 the standard rules of opaque typedefs annotation are valid. For example, if only; 132 18 bits were sufficient, the syntax would become: `myArr[myArrSize]/d[0,twopi,18]`; 133 ; 134\anchor addingacolumnofstl; 135## Adding a column holding STL collection instances (e.g. std::vector, std::list, std::unordered_map); 136 ; 137~~~ {.cpp}; 138 auto branch = tree.Branch( branchname, STLcollection, buffsize, splitlevel);; 139~~~; 140STLcollection is the address of a pointer to std::vector, std::list,; 141std::deque, std::set or std::multiset containing pointers to objects.; 142If the splitlevel is a value bigger than 100 (TTree::kSplitCollectionOfPointers); 143then the collection will be written in split mode, e.g. if it contains objects of; 144any types deriving from TTrack this function will sort the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:6729,variab,variable,6729,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6; kBlue@ kBlueDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooKeysPdfClass RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution of...Definition RooKeysPdf.h:24; RooKeysPdf::NoMirror@ NoMirrorDefinition RooKeysPdf.h:26; RooKeysPdf::MirrorBoth@ MirrorBothDefinition RooKeysPdf.h:26; RooNDKeysPdfGeneric N-dimensional implementation of a kernel estimation p.d.f.Definition RooNDKeysPdf.h:44; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf707__kernelestimation_8C.html:5316,variab,variable,5316,doc/master/rf707__kernelestimation_8C.html,https://root.cern,https://root.cern/doc/master/rf707__kernelestimation_8C.html,1,['variab'],['variable']
Modifiability,"6] - build failure with mysql 8.3; [#14372] - File with mtime equal to 0 are ignored by Cling.; [#14333] - “Empty plot” for df014_CSVDataSource.C; [#14331] - Unexpected behaviour when using the Project3D function to make a TH2 from a TH3; [#14329] - [RF] RDataFrameToRooFit - Clarification on returned object; [#14324] - Compatibility Issue with thisroot.sh and zsh; [#14320] - [RF] Wrong analytic integrals when using Gaussians with sigma depending on the observable; [#14303] - Test failure with nbconvert-7.14; [#14302] - The command “root –notebook” is not allowed on Windows 11; [#14277] - Cling triggers a huge number of openat calls when loading libraries; [#14263] - [tmva] When using DNN_USE_CBLAS, CMakeLists should link publicly to gsl instead of privately; [#14256] - TAxis::GetTicks and TAxis::SetTicks are inconsistent. Significantly so.; [#14244] - String comparison operators defined in TString.h should be defined as constexpr; [#14229] - [6.30] root-config –git-revision broken; [#14225] - [RF] Segmentation fault in ROOT 6.30 workspace creation; [#14223] - Extremely long startup time when loading dictionaries with pyroot; [#14219] - [cling] Use deduction guides for llvm::ArrayRef; [#14211] - Implement value printing for std::source_location; [#14205] - [cling] Replace llvm::Optional and llvm::None with std::optional; [#14199] - Memory hoarding triggered by the TPluginManager; [#14188] - cmake find_package ROOT 6.30 broken: it requires nlohmann-json; [#14163] - cmake find_package ROOT broken with 6.30, nlohmann and vdt are builtin but not found; [#14162] - RooFFTConvPdf is not working for ROOT 6.30/02; [#14157] - Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; [#14113] - The find_package(root) command fails when using Root installed via Homebrew.; [#14101] - Missing documentation for RDataSetSpec; [#14097] - Cleaner stack traces in python; [#14085] - thisroot.sh does not recognize bash when running in qemu-x86_64; [#14084] - [n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:29860,config,config,29860,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['config'],['config']
Modifiability,"6} // namespace TMVA; CudaMatrix.h; CUDACHECK#define CUDACHECK(ans)Definition CudaMatrix.h:34; Device.h; Bool_tbool Bool_tDefinition RtypesCore.h:63; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; indexOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t indexDefinition TGWin32VirtualXProxy.cxx:168; TMVA::DNN::TCudaDeviceBufferTCudaDeviceBuffer.Definition CudaBuffers.h:101; TMVA::DNN::TCudaMatrixTCudaMatrix Class.Definition CudaMatrix.h:103; TMVA::DNN::TCudaMatrix::fElementBufferTCudaDeviceBuffer< AFloat > fElementBufferDefinition CudaMatrix.h:119; TMVA::DNN::TCudaMatrix::TCudaMatrixTCudaMatrix()Definition CudaMatrix.cu:57; TMVA::DNN::TCudaMatrix::InitializeCudavoid InitializeCuda()Initializes all shared devices resource and makes sure that a sufficient number of curand states are ...Definition CudaMatrix.cu:103; TMVA::DNN::TCudaMatrix::fNRowssize_t fNRowsDefinition CudaMatrix.h:117; TMVA::DNN::TCudaMatrix::fNColssize_t fNColsDefinition CudaMatrix.h:118; TMVA::DNN::TCudaMatrix::InitializeCurandStatesvoid InitializeCurandStates()Definition CudaMatrix.cu:140; TMVA::DNN::TDevice::BlockDims2Dstatic dim3 BlockDims2D()Definition Device.h:55; TMVA::DNN::TDevice::GridDims2Dstatic dim3 GridDims2D(int nrows, int ncols)Definition Device.h:74; TMVA::DNN::TDevice::NThreadsstatic int NThreads(const AMatrix &A)Definition Device.h:101; TMatrixTTMatrixT.Definition TMatrixT.h:40; double; nconst Int_t nDefinition legend1.C:16; TMVA::DNN::CurandInitializationKernel__global__ void CurandInitializationKernel(unsigned long long seed, curandState_t *state)Definition CudaMatrix.cu:26; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; mTMarker mDefinition textangle.C:8. tmvatmvasrcDNNArchitecturesCudaCudaMatrix.cu. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8cu_source.html:7907,variab,variable,7907,doc/master/CudaMatrix_8cu_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8cu_source.html,1,['variab'],['variable']
Modifiability,"6~~~ {.cpp}; 57 align = 10*HorizontalAlign + VerticalAlign; 58~~~; 59 ; 60For horizontal alignment the following convention applies:; 61 ; 62~~~ {.cpp}; 63 1=left adjusted, 2=centered, 3=right adjusted; 64~~~; 65 ; 66For vertical alignment the following convention applies:; 67 ; 68~~~ {.cpp}; 69 1=bottom adjusted, 2=centered, 3=top adjusted; 70~~~; 71 ; 72For example:; 73 ; 74~~~ {.cpp}; 75 align = 11 = left adjusted and bottom adjusted; 76 align = 32 = right adjusted and vertically centered; 77~~~; 78 ; 79Begin_Macro(source); 80textalign.C; 81End_Macro; 82 ; 83Mnemonic constants are available:; 84 ; 85~~~ {.cpp}; 86kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; 87kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; 88~~~; 89 ; 90They allow to write:; 91 ; 92~~~ {.cpp}; 93object->SetTextAlign(kHAlignLeft+kVAlignTop);; 94~~~; 95 ; 96\anchor ATTTEXT2; 97## Text Angle; 98 ; 99Text angle in degrees.; 100The text angle of any class inheriting from `TAttText` can; 101be changed using the method `SetTextAngle` and retrieved using the; 102method `GetTextAngle`.; 103The following picture shows the text angle:; 104 ; 105Begin_Macro(source); 106textangle.C; 107End_Macro; 108 ; 109\anchor ATTTEXT3; 110## Text Color; 111 ; 112The text color is a color index (integer) pointing in the ROOT; 113color table.; 114The text color of any class inheriting from `TAttText` can; 115be changed using the method `SetTextColor` and retrieved using the; 116method `GetTextColor`.; 117The following table shows the first 50 default colors.; 118 ; 119Begin_Macro; 120{; 121 TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; 122 c->DrawColorTable();; 123 return c;; 124}; 125End_Macro; 126 ; 127### Color transparency; 128`SetTextColorAlpha()`, allows to set a transparent color.; 129In the following example the text color of the text `text`; 130is set to blue with an opacity of 35% (i.e. a transparency of 65%).; 131(The color `kBlue` itself is internally stored as fully opaque.); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8cxx_source.html:2888,inherit,inheriting,2888,doc/master/TAttText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:26442,inherit,inherited,26442,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,8,['inherit'],['inherited']
Modifiability,7 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80351,config,configuration,80351,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7 DefaultDataSetInfo().AddSpectator( expression, title, unit, min, max );; 528}; 529 ; 530////////////////////////////////////////////////////////////////////////////////; 531/// default creation; 532 ; 533TMVA::DataSetInfo& TMVA::DataLoader::DefaultDataSetInfo(); 534{; 535 return AddDataSet( fName );; 536}; 537 ; 538////////////////////////////////////////////////////////////////////////////////; 539/// fill input variables in data set; 540 ; 541void TMVA::DataLoader::SetInputVariables( std::vector<TString>* theVariables ); 542{; 543 for (std::vector<TString>::iterator it=theVariables->begin();; 544 it!=theVariables->end(); ++it) AddVariable(*it);; 545}; 546 ; 547////////////////////////////////////////////////////////////////////////////////; 548 ; 549void TMVA::DataLoader::SetSignalWeightExpression( const TString& variable); 550{; 551 DefaultDataSetInfo().SetWeightExpression(variable, ""Signal"");; 552}; 553 ; 554////////////////////////////////////////////////////////////////////////////////; 555 ; 556void TMVA::DataLoader::SetBackgroundWeightExpression( const TString& variable); 557{; 558 DefaultDataSetInfo().SetWeightExpression(variable, ""Background"");; 559}; 560 ; 561////////////////////////////////////////////////////////////////////////////////; 562 ; 563void TMVA::DataLoader::SetWeightExpression( const TString& variable, const TString& className ); 564{; 565 //Log() << kWarning << DefaultDataSetInfo().GetNClasses() /*fClasses.size()*/ << Endl;; 566 if (className=="""") {; 567 SetSignalWeightExpression(variable);; 568 SetBackgroundWeightExpression(variable);; 569 }; 570 else DefaultDataSetInfo().SetWeightExpression( variable, className );; 571}; 572 ; 573////////////////////////////////////////////////////////////////////////////////; 574 ; 575void TMVA::DataLoader::SetCut( const TString& cut, const TString& className ) {; 576 SetCut( TCut(cut), className );; 577}; 578 ; 579////////////////////////////////////////////////////////////////////////////////; 580 ; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:21897,variab,variable,21897,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,2,['variab'],['variable']
Modifiability,"7 Int_t fBeepFreq{0}; //Used by Beep(); 288 Int_t fBeepDuration{0}; //Used by Beep(); 289 ; 290 Bool_t fInControl{kFALSE}; //True if in eventloop; 291 Bool_t fDone{kFALSE}; //True if eventloop should be finished; 292 Int_t fLevel{0}; //Level of nested eventloops; 293 ; 294 TList *fTimers{nullptr}; //List of timers; 295 TSeqCollection *fSignalHandler{nullptr}; //List of signal handlers; 296 TSeqCollection *fFileHandler{nullptr}; //List of file handlers; 297 TSeqCollection *fStdExceptionHandler{nullptr}; //List of std::exception handlers; 298 TSeqCollection *fOnExitList{nullptr}; //List of items to be cleaned-up on exit; 299 ; 300 TString fListLibs; //List shared libraries, cache used by GetLibraries; 301 ; 302 TString fBuildArch; //Architecture for which ROOT was built (passed to ./configure); 303 TString fBuildCompiler; //Compiler used to build this ROOT; 304 TString fBuildCompilerVersion; //Compiler version used to build this ROOT; 305 TString fBuildCompilerVersionStr; //Compiler version identifier string used to build this ROOT; 306 TString fBuildNode; //Detailed information where ROOT was built; 307 TString fBuildDir; //Location where to build ACLiC shared library and use as scratch area.; 308 TString fFlagsDebug; //Flags for debug compilation; 309 TString fFlagsOpt; //Flags for optimized compilation; 310 TString fListPaths; //List of all include (fIncludePath + interpreter include path). Cache used by GetIncludePath; 311 TString fIncludePath; //Used to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; 312 TString fLinkedLibs; //Used to expand $LinkedLibs in the directives given to SetMakeSharedLib and SetMakeExe; 313 TString fSoExt; //Extension of shared library (.so, .sl, .a, .dll, etc.); 314 TString fObjExt; //Extension of object files (.o, .obj, etc.); 315 EAclicMode fAclicMode{kDefault}; //Whether the compilation should be done debug or opt; 316 TString fMakeSharedLib; //Directive used to build a shared library; 317 TString fMake",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:11698,config,configure,11698,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['config'],['configure']
Modifiability,"7 Ssiz_t parStart = tdef.Index( ""("" );; 108 Ssiz_t parLen = tdef.Index( "")"", parStart )-parStart+1;; 109 ; 110 variables = tdef(parStart,parLen);; 111 tdef.Remove(parStart,parLen);; 112 variables.Remove(parLen-1,1);; 113 variables.Remove(0,1);; 114 }; 115 ; 116 TList* trClsList = gTools().ParseFormatLine( tdef, ""_"" ); // split entry to get trf-name and class-name; 117 TListIter trClsIt(trClsList);; 118 if (trClsList->GetSize() < 1); 119 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Incorrect transformation string provided."" << Endl;; 120 const TString& trName = ((TObjString*)trClsList->At(0))->GetString();; 121 ; 122 if (trClsList->GetEntries() > 1) {; 123 TString trCls = ""AllClasses"";; 124 ClassInfo *ci = NULL;; 125 trCls = ((TObjString*)trClsList->At(1))->GetString();; 126 if (trCls != ""AllClasses"") {; 127 ci = dataInfo.GetClassInfo( trCls );; 128 if (ci == NULL); 129 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Class "" << trCls << "" not known for variable transformation ""; 130 << trName << "", please check."" << Endl;; 131 else; 132 idxCls = ci->GetNumber();; 133 }; 134 }; 135 ; 136 VariableTransformBase* transformation = NULL;; 137 if (trName == ""I"" || trName == ""Ident"" || trName == ""Identity"") {; 138 if (variables.Length() == 0) variables = ""_V_"";; 139 transformation = new VariableIdentityTransform(dataInfo);; 140 }; 141 else if (trName == ""D"" || trName == ""Deco"" || trName == ""Decorrelate"") {; 142 if (variables.Length() == 0) variables = ""_V_"";; 143 transformation = new VariableDecorrTransform(dataInfo);; 144 }; 145 else if (trName == ""P"" || trName == ""PCA"") {; 146 if (variables.Length() == 0) variables = ""_V_"";; 147 transformation = new VariablePCATransform(dataInfo);; 148 }; 149 else if (trName == ""U"" || trName == ""Uniform"") {; 150 if (variables.Length() == 0) variables = ""_V_,_T_"";; 151 transformation = new VariableGaussTransform(dataInfo, ""Uniform"" );; 152 }; 153 else if (trName == ""G"" || trName == ""Gauss"") {; 154 if (variables.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:5365,variab,variable,5365,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['variab'],['variable']
Modifiability,"7 of file RGeomData.cxx. ◆ ProduceDrawData(). void RGeomDescription::ProduceDrawData ; (; ). Collect all information required to draw geometry on the client This includes list of each visible nodes, meshes and matrixes. ; Definition at line 1358 of file RGeomData.cxx. ◆ ProduceDrawingFor(). bool RGeomDescription::ProduceDrawingFor ; (; int ; nodeid, . std::string & ; json, . bool ; check_volume = false . ). Produce shape rendering data for given stack All nodes, which are referencing same shape will be transferred Returns true if new render information provided. ; Definition at line 1757 of file RGeomData.cxx. ◆ ProduceIdShifts(). void RGeomDescription::ProduceIdShifts ; (; ). private . Count total number of visible childs under each node. ; Definition at line 629 of file RGeomData.cxx. ◆ ProduceJson(). std::string RGeomDescription::ProduceJson ; (; bool ; all_nodes = false). Produce JSON string which can be directly used with build function from JSROOT to create three.js model of configured geometry. ; Collect all information required to draw geometry on the client This includes list of each visible nodes, meshes and matrixes IfParameters. all_nodesis true, all existing nodes will be provided, which allows to create complete nodes hierarchy on client side. Example of usage:; void geom() { auto f = TFile::Open(""file_name.root""); auto vol = f->Get<TGeoVolume>(""object_name""); ROOT::RGeomDescription desc; desc.Build(vol); std::ofstream fout(""geom.json""); fout << desc.ProduceJson(); }; In JSROOT one loads data from JSON file and call build function to produce three.js model. Also see example in tutorials/webgui/geom/ folder ; Definition at line 1230 of file RGeomData.cxx. ◆ ProduceModifyReply(). std::string RGeomDescription::ProduceModifyReply ; (; int ; nodeid). Return string with only part of nodes description which were modified Checks also volume. ; Definition at line 1734 of file RGeomData.cxx. ◆ ProduceSearchData(). void RGeomDescription::ProduceSearchData ; (; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html:22519,config,configured,22519,doc/v632/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html,2,['config'],['configured']
Modifiability,"7 of file TStreamerInfoActions.cxx. ◆ ReadTextObject(). Int_t TStreamerInfoActions::ReadTextObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 293 of file TStreamerInfoActions.cxx. ◆ ReadTextStreamer(). Int_t TStreamerInfoActions::ReadTextStreamer ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 315 of file TStreamerInfoActions.cxx. ◆ ReadTextTNamed(). Int_t TStreamerInfoActions::ReadTextTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 335 of file TStreamerInfoActions.cxx. ◆ ReadTextTObject(). Int_t TStreamerInfoActions::ReadTextTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 300 of file TStreamerInfoActions.cxx. ◆ ReadTextTObjectBase(). Int_t TStreamerInfoActions::ReadTextTObjectBase ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 327 of file TStreamerInfoActions.cxx. ◆ ReadTNamed(). Int_t TStreamerInfoActions::ReadTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 950 of file TStreamerInfoActions.cxx. ◆ ReadTObject(). Int_t TStreamerInfoActions::ReadTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 940 of file TStreamerInfoActions.cxx. ◆ ReadTString(). Int_t TStreamerInfoActions::ReadTString ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 930 of file TStreamerInfoActions.cxx. ◆ SelectLooper(). ESelectLooper TStreamerInfoActions::SelectLooper ; (; TVirtualCollectionProxy & ; proxy). Definition at line 1699 of file TStreamerInfoActions.cxx. ◆ UseCache(). Int_t TStreamerInfoActions::UseCache ; (; TBuffer & ; b, . void * ; addr, . const TConfiguration * ; conf . ). inline . Definition a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:16219,config,config,16219,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"7 virtual bool selfNormalized() const {; 208 return false ;; 209 }; 210 ; 211 // Support for extended maximum likelihood, switched off by default; 212 enum ExtendMode { CanNotBeExtended, CanBeExtended, MustBeExtended } ;; 213 /// Returns ability of PDF to provide extended likelihood terms. Possible; 214 /// answers are in the enumerator RooAbsPdf::ExtendMode.; 215 /// This default implementation always returns CanNotBeExtended.; 216 virtual ExtendMode extendMode() const { return CanNotBeExtended; }; 217 /// If true, PDF can provide extended likelihood term.; 218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirects; 230 /// to the actual virtual function but takes a RooArgSet reference instead of; 231 /// pointer. \see expectedEvents(const RooArgSet*) const; 232 double expectedEvents(const RooArgSet& nset) const {; 233 return expectedEvents(&nset) ;; 234 }; 235 ; 236 virtual std::unique_ptr<RooAbsReal> createExpectedEventsFunc(const RooArgSet* nset) const;; 237 ; 238 // Printing interface (human readable); 239 void printValue(std::ostream& os) const override ;; 240 void printMultiline(std::ostream& os, Int_t contents, bool verbose=false, TString indent="""") const override ;; 241 ; 242 static void verboseEval(Int_t stat) ;; 243 static int verboseEval() ;; 244 ; 245 double extendedTerm(double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;; 246 double extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:11041,extend,extended,11041,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['extend'],['extended']
Modifiability,"7 void *x = (void *)(((char *)addr) + config->fOffset);; 278 // Idea: Implement buf.ReadBasic/Primitive to avoid the return value; 279 ((TBufferText *)&buf)->WriteBaseClass(x, (TStreamerBase *)config->fCompInfo->fElem);; 280 return 0;; 281 }; 282 ; 283 INLINE_TEMPLATE_ARGS Int_t WriteTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config); 284 {; 285 void *x = (void *)(((char *)addr) + config->fOffset);; 286 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 287 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 288 (*pstreamer)(buf, x, config->fCompInfo->fLength);; 289 buf.SetByteCount(pos, kTRUE);; 290 return 0;; 291 }; 292 ; 293 INLINE_TEMPLATE_ARGS Int_t ReadTextObject(TBuffer &buf, void *addr, const TConfiguration *config); 294 {; 295 void *x = (void *)(((char *)addr) + config->fOffset);; 296 buf.ReadFastArray(x, config->fCompInfo->fClass, config->fCompInfo->fLength, config->fCompInfo->fStreamer);; 297 return 0;; 298 }; 299 ; 300 INLINE_TEMPLATE_ARGS Int_t ReadTextTObject(TBuffer &buf, void *addr, const TConfiguration *config); 301 {; 302 void *x = (void *)(((char *)addr) + config->fOffset);; 303 buf.StreamObject(x, TObject::Class(), TObject::Class());; 304 return 0;; 305 }; 306 ; 307 INLINE_TEMPLATE_ARGS Int_t ReadTextBaseClass(TBuffer &buf, void *addr, const TConfiguration *config); 308 {; 309 void *x = (void *)(((char *)addr) + config->fOffset);; 310 // Idea: Implement buf.ReadBasic/Primitive to avoid the return value; 311 ((TBufferText *)&buf)->ReadBaseClass(x, (TStreamerBase *)config->fCompInfo->fElem);; 312 return 0;; 313 }; 314 ; 315 INLINE_TEMPLATE_ARGS Int_t ReadTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config); 316 {; 317 void *x = (void *)(((char *)addr) + config->fOffset);; 318 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 319 ; 320 UInt_t start, count;; 321 /* Version_t v = */ buf.ReadVersion(&start, &count, config->fCompInfo->fClass);; 322 (*pstreamer)(buf, x, config->fCompInfo->fLen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:11045,config,config,11045,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,5,['config'],['config']
Modifiability,"7#include ""TH2.h""; 18#include ""TVirtualPad.h""; 19#include <iostream>; 20#include ""TColor.h""; 21#include ""TVirtualFitter.h""; 22#include ""Math/IntegratorOptions.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TF2);; 26 ; 27/** \class TF2; 28 \ingroup Functions; 29 \brief A 2-Dim function with parameters.; 30 ; 31The following types of functions can be created:; 32 ; 331. [Expression using variables x and y](\ref TF2a); 342. [Expression using a user defined function](\ref TF2b); 353. [Lambda Expression with x and y variables and parameters](\ref TF2c); 36 ; 37\anchor TF2a; 38### Expression using variables x and y; 39 ; 40Begin_Macro (source); 41{; 42 auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; 43 f2->Draw();; 44}; 45End_Macro; 46 ; 47\anchor TF2b; 48### Expression using a user defined function; 49 ; 50~~~~{.cpp}; 51Double_t func(Double_t *val, Double_t *par); 52{; 53 Float_t x = val[0];; 54 Float_t y = val[1];; 55 Double_t f = x*x-y*y;; 56 return f;; 57}; 58 ; 59void fplot(); 60{; 61 auto f = new TF2(""f"",func,-1,1,-1,1);; 62 f->Draw(""surf1"");; 63}; 64~~~~; 65 ; 66\anchor TF2c; 67### Lambda Expression with x and y variables and parameters; 68 ; 69~~~~{.cpp}; 70root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1); 71(TF2 &) Name: f2 Title: f2; 72root [1] f2.SetParameter(0, 1.); 73root [2] f2.Eval(1., 2.); 74(double) 3.0000000; 75~~~~; 76 ; 77See TF1 class for the list of functions formats; 78*/; 79 ; 80////////////////////////////////////////////////////////////////////////////////; 81/// TF2 default constructor; 82 ; 83TF2::TF2(): fYmin(0),fYmax(0),fNpy(100); 84{; 85}; 86 ; 87 ; 88////////////////////////////////////////////////////////////////////////////////; 89/// F2 constructor using a formula definition; 90///; 91/// See TFormula constructor for explanation of the formula syntax.; 92///; 93/// If formula has the form ""fffffff;xxxx;yyyy"", it is assumed that; 94/// the formula string is ""fffffff"" and ""xxxx"" and ""yyy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8cxx_source.html:1858,variab,variables,1858,doc/master/TF2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF2_8cxx_source.html,1,['variab'],['variables']
Modifiability,7.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88333,config,configuration,88333,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7/// instead of a TH2F histogram by specifying option=prof or option=profs; 4308/// or option=profi or option=profg ; the trailing letter select the way; 4309/// the bin error are computed, See TProfile2D::SetErrorOption for; 4310/// details on the differences.; 4311/// The option=prof is automatically selected in case of y:x>>pf; 4312/// where pf is an existing TProfile histogram.; 4313///; 4314/// ### Making a 2D Profile histogram; 4315///; 4316/// In case of a 3-Dim expression, one can generate a TProfile2D histogram; 4317/// instead of a TH3F histogram by specifying option=prof or option=profs.; 4318/// or option=profi or option=profg ; the trailing letter select the way; 4319/// the bin error are computed, See TProfile2D::SetErrorOption for; 4320/// details on the differences.; 4321/// The option=prof is automatically selected in case of z:y:x>>pf; 4322/// where pf is an existing TProfile2D histogram.; 4323///; 4324/// ### Making a 5D plot using GL; 4325///; 4326/// If option GL5D is specified together with 5 variables, a 5D plot is drawn; 4327/// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; 4328///; 4329/// ### Making a parallel coordinates plot; 4330///; 4331/// In case of a 2-Dim or more expression with the option=para, one can generate; 4332/// a parallel coordinates plot. With that option, the number of dimensions is; 4333/// arbitrary. Giving more than 4 variables without the option=para or; 4334/// option=candle or option=goff will produce an error.; 4335///; 4336/// ### Making a candle sticks chart; 4337///; 4338/// In case of a 2-Dim or more expression with the option=candle, one can generate; 4339/// a candle sticks chart. With that option, the number of dimensions is; 4340/// arbitrary. Giving more than 4 variables without the option=para or; 4341/// option=candle or option=goff will produce an error.; 4342///; 4343/// ### Normalizing the output histogram to 1; 4344///; 4345/// When option contains ""norm"" the output histogram is norm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:174353,variab,variables,174353,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"7/// macrofilename_methodname in each of 6 main selector methods if the method; 6728/// macrofilename_methodname exist (Where macrofilename is stripped of its; 6729/// extension).; 6730///; 6731/// Concretely, with the script named h1analysisProxy.C,; 6732///; 6733/// - The method calls the method (if it exist); 6734/// - Begin -> void h1analysisProxy_Begin(TTree*);; 6735/// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; 6736/// - Notify -> bool h1analysisProxy_Notify();; 6737/// - Process -> bool h1analysisProxy_Process(Long64_t);; 6738/// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; 6739/// - Terminate -> void h1analysisProxy_Terminate();; 6740///; 6741/// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; 6742/// it is included before the declaration of the proxy class. This can; 6743/// be used in particular to insure that the include files needed by; 6744/// the macro file are properly loaded.; 6745///; 6746/// The default histogram is accessible via the variable named 'htemp'.; 6747///; 6748/// If the library of the classes describing the data in the branch is; 6749/// loaded, the skeleton will add the needed `include` statements and; 6750/// give the ability to access the object stored in the branches.; 6751///; 6752/// To draw px using the file hsimple.root (generated by the; 6753/// hsimple.C tutorial), we need a file named hsimple.cxx:; 6754/// ~~~ {.cpp}; 6755/// double hsimple() {; 6756/// return px;; 6757/// }; 6758/// ~~~; 6759/// MakeProxy can then be used indirectly via the TTree::Draw interface; 6760/// as follow:; 6761/// ~~~ {.cpp}; 6762/// new TFile(""hsimple.root""); 6763/// ntuple->Draw(""hsimple.cxx"");; 6764/// ~~~; 6765/// A more complete example is available in the tutorials directory:; 6766/// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; 6767/// which reimplement the selector found in h1analysis.C; 6768 ; 6769Int_t TTree::MakeProxy(const char* proxyClassname, const char* macrofil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:263906,variab,variable,263906,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,71.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91884,config,configuration,91884,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"72 TVirtualStreamerInfo *sinfo = ((TClass *)this)->GetCurrentStreamerInfo();; 2273 if (sinfo==nullptr) sinfo = GetStreamerInfo();; 2274 TIter next(sinfo->GetElements());; 2275 TStreamerElement *element;; 2276 while ((element = (TStreamerElement*)next())) {; 2277 if (element->IsA() == TStreamerBase::Class()) {; 2278 TClass *clbase = element->GetClassPointer();; 2279 if (!clbase) {; 2280 // If there is a missing base class, we can't split the immediate; 2281 // derived class.; 2282 fCanSplit = 0;; 2283 return kFALSE;; 2284 } else if (!clbase->CanSplitBaseAllow()) {; 2285 fCanSplit = 2;; 2286 return kFALSE;; 2287 }; 2288 }; 2289 }; 2290 }; 2291 ; 2292 // If we don't have data member info there is no more information; 2293 // we can find out.; 2294 if (!HasDataMemberInfo()) return kTRUE;; 2295 ; 2296 TObjLink *lnk = GetListOfBases() ? fBase.load()->FirstLink() : nullptr;; 2297 ; 2298 // Look at inheritance tree; 2299 while (lnk) {; 2300 TBaseClass *base = (TBaseClass*) lnk->GetObject();; 2301 TClass *c = base->GetClassPointer();; 2302 if(!c) {; 2303 // If there is a missing base class, we can't split the immediate; 2304 // derived class.; 2305 fCanSplit = 0;; 2306 return kFALSE;; 2307 } else if (!c->CanSplitBaseAllow()) {; 2308 fCanSplit = 2;; 2309 return kFALSE;; 2310 }; 2311 lnk = lnk->Next();; 2312 }; 2313 return kTRUE;; 2314}; 2315 ; 2316////////////////////////////////////////////////////////////////////////////////; 2317/// Return true if the data member of this TClass can be saved separately.; 2318 ; 2319Bool_t TClass::CanSplit() const; 2320{; 2321 // Note: add the possibility to set it for the class and the derived class.; 2322 // save the info in TVirtualStreamerInfo; 2323 // deal with the info in MakeProject; 2324 if (fCanSplit >= 0) {; 2325 // The user explicitly set the value; 2326 return (fCanSplit & 0x1) == 1;; 2327 }; 2328 ; 2329 R__LOCKGUARD(gInterpreterMutex);; 2330 TClass *This = const_cast<TClass*>(this);; 2331 ; 2332 if (this == TObject::Class()) { T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:86817,inherit,inheritance,86817,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"72 of file VavilovAccuratePdf.h. Public Member Functions;  VavilovAccuratePdf ();  Default constructor. ;  ;  VavilovAccuratePdf (const double *p);  Constructor with parameter values. ;  ;  ~VavilovAccuratePdf () override;  Destructor. ;  ; IBaseFunctionOneDim * Clone () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  . Private Attributes; double fP [5];  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/VavilovAccuratePdf.h>. Inheritance diagram for ROOT::Math::VavilovAccuratePdf:. This browser is not able to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html:2037,inherit,inherited,2037,doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,1,['inherit'],['inherited']
Modifiability,"721///; 722/// See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset),; 723/// which takes a dataset to extract \f$N_\mathrm{observed}\f$ and the; 724/// normalization set.; 725double RooAbsPdf::extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW2, bool doOffset) const; 726{; 727 return extendedTerm(sumEntries, expectedEvents(nset), sumEntriesW2, doOffset);; 728}; 729 ; 730double RooAbsPdf::extendedTerm(double sumEntries, double expected, double sumEntriesW2, bool doOffset) const; 731{; 732 // check if this PDF supports extended maximum likelihood fits; 733 if(!canBeExtended()) {; 734 coutE(InputArguments) << GetName() << "": this PDF does not support extended maximum likelihood""; 735 << std::endl;; 736 return 0.0;; 737 }; 738 ; 739 if(expected < 0.0) {; 740 coutE(InputArguments) << GetName() << "": calculated negative expected events: "" << expected; 741 << std::endl;; 742 logEvalError(""extendedTerm #expected events is <0 return a NaN"");; 743 return TMath::QuietNaN();; 744 }; 745 ; 746 ; 747 // Explicitly handle case Nobs=Nexp=0; 748 if (std::abs(expected)<1e-10 && std::abs(sumEntries)<1e-10) {; 749 return 0.0;; 750 }; 751 ; 752 // Check for errors in Nexpected; 753 if (TMath::IsNaN(expected)) {; 754 logEvalError(""extendedTerm #expected events is a NaN"") ;; 755 return TMath::QuietNaN() ;; 756 }; 757 ; 758 double extra = doOffset; 759 ? (expected - sumEntries) - sumEntries * (std::log(expected) - std::log(sumEntries)); 760 : expected - sumEntries * std::log(expected);; 761 ; 762 if(sumEntriesW2 != 0.0) {; 763 extra *= sumEntriesW2 / sumEntries;; 764 }; 765 ; 766 return extra;; 767}; 768 ; 769////////////////////////////////////////////////////////////////////////////////; 770/// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); 771/// of this PDF for the given number of observed events.; 772///; 773/// This function is a wrapper around; 774/// Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:29639,extend,extendedTerm,29639,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extendedTerm']
Modifiability,724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.53,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95499,config,configuration,95499,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91602,config,configuration,91602,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92221,config,configuration,92221,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"73///; 2474/// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.; 2475 ; 2476TH1D *TH2::ProjectionY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 2477{; 2478 return DoProjection(false, name, firstxbin, lastxbin, option);; 2479}; 2480 ; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Replace current statistics with the values in array stats; 2484 ; 2485void TH2::PutStats(Double_t *stats); 2486{; 2487 TH1::PutStats(stats);; 2488 fTsumwy = stats[4];; 2489 fTsumwy2 = stats[5];; 2490 fTsumwxy = stats[6];; 2491}; 2492 ; 2493 ; 2494////////////////////////////////////////////////////////////////////////////////; 2495/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a normal distribution.; 2504 ; 2505TH1D* TH2::QuantilesX( Double_t prob, const char * name) const; 2506{; 2507 return DoQuantiles(true, name, prob);; 2508}; 2509 ; 2510 ; 2511////////////////////////////////////////////////////////////////////////////////; 2512/// Compute the Y distribution of quantiles in the other variable X; 2513/// name is the name of the returned histogram; 2514/// prob is the probability content for the quantile (0.5 is the default for the median); 2515/// An approxima",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:102549,variab,variable,102549,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"740///; 2741/// If dirmode is not zero and we need to create the target directory, the; 2742/// file mode bit will be change to 'dirmode' using chmod.; 2743///; 2744/// If library_specified is not specified, CompileMacro generate a default name; 2745/// for library by taking the name of the file ""filename"" but replacing the; 2746/// dot before the extension by an underscore and by adding the shared; 2747/// library extension for the current platform.; 2748/// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; 2749///; 2750/// It uses the directive fMakeSharedLibs to create a shared library.; 2751/// If loading the shared library fails, it tries to output a list of missing; 2752/// symbols by creating an executable (on some platforms like OSF, this does; 2753/// not HAVE to be an executable) containing the script. It uses the; 2754/// directive fMakeExe to do so.; 2755/// For both directives, before passing them to TSystem::Exec, it expands the; 2756/// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; 2757/// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; 2758/// information on those variables.; 2759///; 2760/// This method is used to implement the following feature:; 2761///; 2762/// Synopsis:; 2763///; 2764/// The purpose of this addition is to allow the user to use an external; 2765/// compiler to create a shared library from its C++ macro (scripts).; 2766/// Currently in order to execute a script, a user has to type at the root; 2767/// prompt; 2768/// ~~~ {.cpp}; 2769/// .X myfunc.C(arg1,arg2); 2770/// ~~~; 2771/// We allow them to type:; 2772/// ~~~ {.cpp}; 2773/// .X myfunc.C++(arg1,arg2); 2774/// ~~~; 2775/// or; 2776/// ~~~ {.cpp}; 2777/// .X myfunc.C+(arg1,arg2); 2778/// ~~~; 2779/// In which case an external compiler will be called to create a shared; 2780/// library. This shared library will then be loaded and the function; 2781/// myfunc will be called with the two arguments. With '++' t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:90055,variab,variables,90055,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,74992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107353,config,configuration,107353,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,75 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.722,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:101737,config,configuration,101737,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"75 for (unsigned int i = 1; i < n; ++i) {; 376 prod *= 1.0 - a[i];; 377 }; 378 ; 379 return prod;; 380}; 381 ; 382inline double cbShape(double m, double m0, double sigma, double alpha, double n); 383{; 384 double t = (m - m0) / sigma;; 385 if (alpha < 0); 386 t = -t;; 387 ; 388 double absAlpha = std::abs((double)alpha);; 389 ; 390 if (t >= -absAlpha) {; 391 return std::exp(-0.5 * t * t);; 392 } else {; 393 double a = std::pow(n / absAlpha, n) * std::exp(-0.5 * absAlpha * absAlpha);; 394 double b = n / absAlpha - absAlpha;; 395 ; 396 return a / std::pow(b - t, n);; 397 }; 398}; 399 ; 400// For RooCBShape; 401inline double approxErf(double arg); 402{; 403 if (arg > 5.0); 404 return 1.0;; 405 if (arg < -5.0); 406 return -1.0;; 407 ; 408 return TMath::Erf(arg);; 409}; 410 ; 411/// @brief Function to calculate the integral of an un-normalized RooGaussian over x. To calculate the integral over; 412/// mean, just interchange the respective values of x and mean.; 413/// @param xMin Minimum value of variable to integrate wrt.; 414/// @param xMax Maximum value of of variable to integrate wrt.; 415/// @param mean Mean.; 416/// @param sigma Sigma.; 417/// @return The integral of an un-normalized RooGaussian over the value in x.; 418inline double gaussianIntegral(double xMin, double xMax, double mean, double sigma); 419{; 420 // The normalisation constant 1./sqrt(2*pi*sigma^2) is left out in evaluate().; 421 // Therefore, the integral is scaled up by that amount to make RooFit normalise; 422 // correctly.; 423 double resultScale = 0.5 * std::sqrt(TMath::TwoPi()) * sigma;; 424 ; 425 // Here everything is scaled and shifted into a standard normal distribution:; 426 double xscale = TMath::Sqrt2() * sigma;; 427 double scaledMin = 0.;; 428 double scaledMax = 0.;; 429 scaledMin = (xMin - mean) / xscale;; 430 scaledMax = (xMax - mean) / xscale;; 431 ; 432 // Here we go for maximum precision: We compute all integrals in the UPPER; 433 // tail of the Gaussian, because erfc has the highes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:12819,variab,variable,12819,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,1,['variab'],['variable']
Modifiability,"76 of file RooPlot.cxx. ◆ RooPlot() [3/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var, . double ; xmin, . double ; xmax, . Int_t ; nBins . ). Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ; Definition at line 199 of file RooPlot.cxx. ◆ RooPlot() [4/9]. RooPlot::RooPlot ; (; double ; xmin, . double ; xmax, . int ; nBins = 100 . ). Constructor of RooPlot with range [xmin,xmax]. ; Definition at line 96 of file RooPlot.cxx. ◆ RooPlot() [5/9]. RooPlot::RooPlot ; (; double ; xmin, . double ; xmax, . double ; ymin, . double ; ymax . ). Construct of a two-dimensional RooPlot with ranges [xmin,xmax] x [ymin,ymax]. ; Definition at line 113 of file RooPlot.cxx. ◆ RooPlot() [6/9]. Use RooPlot::RooPlot ; (; double ; xmin, . double ; xmax . ). ◆ RooPlot() [7/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var1, . const RooAbsRealLValue & ; var2 . ). Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2. ; Definition at line 145 of file RooPlot.cxx. ◆ RooPlot() [8/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var1, . const RooAbsRealLValue & ; var2, . double ; xmin, . double ; xmax, . double ; ymin, . double ; ymax . ). Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2 but with an overriding range definition of [xmin,xmax] x [ymin,ymax]. ; Definition at line 161 of file RooPlot.cxx. ◆ ~RooPlot(). RooPlot::~RooPlot ; (; ). override . Destructor. ; Definition at line 314 of file RooPlot.cxx. ◆ RooPlot() [9/9]. RooPlot::RooPlot ; (; const RooPlot & ; other). delete . Member Function Documentation. ◆ AddDirectory(). static void RooPlot::AddDirectory ; (; bool ; add = true). inlinestatic . Configure whether new instances of RooPlot will add themselves to gDirectory. ; Like TH1::AddDirectory(). ; Definition at line 197 of file RooPlot.h. ◆ addDirectoryStatus(). bool RooPlot::addDirectoryS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:28679,variab,variables,28679,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variables']
Modifiability,76259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:108976,config,configuration,108976,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7668 /* port remains 0 if the protocol is not found */; 17669 return 0;; 17670 }; 17671 ; 17672 /* Check if the request is directed to a different server. */; 17673 /* First check if the port is the same. */; 17674 if (ntohs(USA_IN_PORT_UNSAFE(&conn->client.lsa)) != port) {; 17675 /* Request is directed to a different port */; 17676 return 0;; 17677 }; 17678 ; 17679 /* Finally check if the server corresponds to the authentication; 17680 * domain of the server (the server domain).; 17681 * Allow full matches (like http://mydomain.com/path/file.ext), and; 17682 * allow subdomain matches (like http://www.mydomain.com/path/file.ext),; 17683 * but do not allow substrings (like; 17684 * http://notmydomain.com/path/file.ext; 17685 * or http://mydomain.com.fake/path/file.ext).; 17686 */; 17687 if (auth_domain_check_enabled) {; 17688 server_domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 17689 server_domain_len = strlen(server_domain);; 17690 if ((server_domain_len == 0) || (hostbegin == NULL)) {; 17691 return 0;; 17692 }; 17693 if ((request_domain_len == server_domain_len); 17694 && (!memcmp(server_domain, hostbegin, server_domain_len))) {; 17695 /* Request is directed to this server - full name match. */; 17696 } else {; 17697 if (request_domain_len < (server_domain_len + 2)) {; 17698 /* Request is directed to another server: The server name; 17699 * is longer than the request name.; 17700 * Drop this case here to avoid overflows in the; 17701 * following checks. */; 17702 return 0;; 17703 }; 17704 if (hostbegin[request_domain_len - server_domain_len - 1] != '.') {; 17705 /* Request is directed to another server: It could be a; 17706 * substring; 17707 * like notmyserver.com */; 17708 return 0;; 17709 }; 17710 if (0; 17711 != memcmp(server_domain,; 17712 hostbegin + request_domain_len - server_domain_len,; 17713 server_domain_len)) {; 17714 /* Request is directed to another server:; 17715 * The server name is different. */; 17716 return 0;; 17717 }; 17718 }; 17719 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:525673,config,config,525673,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"7669 /* port remains 0 if the protocol is not found */; 17670 return 0;; 17671 }; 17672 ; 17673 /* Check if the request is directed to a different server. */; 17674 /* First check if the port is the same. */; 17675 if (ntohs(USA_IN_PORT_UNSAFE(&conn->client.lsa)) != port) {; 17676 /* Request is directed to a different port */; 17677 return 0;; 17678 }; 17679 ; 17680 /* Finally check if the server corresponds to the authentication; 17681 * domain of the server (the server domain).; 17682 * Allow full matches (like http://mydomain.com/path/file.ext), and; 17683 * allow subdomain matches (like http://www.mydomain.com/path/file.ext),; 17684 * but do not allow substrings (like; 17685 * http://notmydomain.com/path/file.ext; 17686 * or http://mydomain.com.fake/path/file.ext).; 17687 */; 17688 if (auth_domain_check_enabled) {; 17689 server_domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 17690 server_domain_len = strlen(server_domain);; 17691 if ((server_domain_len == 0) || (hostbegin == NULL)) {; 17692 return 0;; 17693 }; 17694 if ((request_domain_len == server_domain_len); 17695 && (!memcmp(server_domain, hostbegin, server_domain_len))) {; 17696 /* Request is directed to this server - full name match. */; 17697 } else {; 17698 if (request_domain_len < (server_domain_len + 2)) {; 17699 /* Request is directed to another server: The server name; 17700 * is longer than the request name.; 17701 * Drop this case here to avoid overflows in the; 17702 * following checks. */; 17703 return 0;; 17704 }; 17705 if (hostbegin[request_domain_len - server_domain_len - 1] != '.') {; 17706 /* Request is directed to another server: It could be a; 17707 * substring; 17708 * like notmyserver.com */; 17709 return 0;; 17710 }; 17711 if (0; 17712 != memcmp(server_domain,; 17713 hostbegin + request_domain_len - server_domain_len,; 17714 server_domain_len)) {; 17715 /* Request is directed to another server:; 17716 * The server name is different. */; 17717 return 0;; 17718 }; 17719 }; 17720 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:525706,config,config,525706,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"77 UInt_t n = (((char*)end)-((char*)start))/incr;; 1878 char **arrptr = new char*[n];; 1879 UInt_t i = 0;; 1880 for(void *iter = start; iter != end; iter = (char*)iter + incr, ++i ) {; 1881 arrptr[i] = (char*)iter;; 1882 }; 1883 ((TStreamerInfo*)config->fInfo)->ReadBuffer(buf, arrptr, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, /*narr*/ n, config->fOffset, 1|2 );; 1884 delete [] arrptr;; 1885 return 0;; 1886 }; 1887 ; 1888 static INLINE_TEMPLATE_ARGS Int_t GenericWrite(TBuffer &buf, void *start, const void *end, const TLoopConfiguration * loopconfig, const TConfiguration *config); 1889 {; 1890 // Well the implementation is non trivial. For now punt.; 1891 ; 1892 UInt_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1893 UInt_t n = (((char*)end)-((char*)start))/incr;; 1894 char **arrptr = new char*[n];; 1895 UInt_t i = 0;; 1896 for(void *iter = start; iter != end; iter = (char*)iter + incr, ++i ) {; 1897 arrptr[i] = (char*)iter;; 1898 }; 1899 ((TStreamerInfo*)config->fInfo)->WriteBufferAux(buf, arrptr, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, n, config->fOffset, 1|2 );; 1900 delete [] arrptr;; 1901 return 0;; 1902 }; 1903 ; 1904 template <typename T>; 1905 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionBasicType(TBuffer &buf, void *addr, const TConfiguration *conf); 1906 {; 1907 // Collection of numbers. Memberwise or not, it is all the same.; 1908 ; 1909 TConfigSTL *config = (TConfigSTL*)conf;; 1910 UInt_t start, count;; 1911 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1912 ; 1913 std::vector<T> *const vec = (std::vector<T>*)(((char*)addr)+config->fOffset);; 1914 Int_t nvalues;; 1915 buf.ReadInt(nvalues);; 1916 vec->resize(nvalues);; 1917 ; 1918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fType",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:79445,config,config,79445,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"77216 (\ref floatmax ""***""); 128 - TH3D : histograms with one double per channel. Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax ""****""); 129 - Profile histograms: See classes TProfile, TProfile2D and TProfile3D.; 130 Profile histograms are used to display the mean value of Y and its standard deviation; 131 for each bin in X. Profile histograms are in many cases an elegant; 132 replacement of two-dimensional histograms : the inter-relation of two; 133 measured quantities X and Y can always be visualized by a two-dimensional; 134 histogram or scatter-plot; If Y is an unknown (but single-valued); 135 approximate function of X, this function is displayed by a profile; 136 histogram with much better precision than by a scatter-plot.; 137 ; 138<sup>; 139\anchor intmax (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 140\anchor llongmax (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 141\anchor floatmax (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; 142\anchor doublemax (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); 143</sup>; 144 ; 145The inheritance hierarchy looks as follows:; 146 ; 147\image html classTH1__inherit__graph_org.svg width=100%; 148 ; 149\anchor creating-histograms; 150## Creating histograms; 151 ; 152Histograms are created by invoking one of the constructors, e.g.; 153~~~ {.cpp}; 154 TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; 155 TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);; 156~~~; 157Histograms may also be created by:; 158 ; 159 - ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:6736,variab,variable,6736,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"78 fU[ke1-1] = xsav;; 1279 fU[ke2-1] = ysav;; 1280 ierrf = 0;; 1281 return;; 1282L1350:; 1283 Printf("" INVALID PARAMETER NUMBER(S) REQUESTED. IGNORED."");; 1284 ierrf = 1;; 1285}; 1286 ; 1287////////////////////////////////////////////////////////////////////////////////; 1288/// Reads a command string and executes; 1289///; 1290/// Called by user. 'Reads' a command string and executes.; 1291/// Equivalent to MNEXCM except that the command is given as a; 1292/// character string.; 1293///; 1294/// ICONDN =; 1295/// - 0: command executed normally; 1296/// - 1: command is blank, ignored; 1297/// - 2: command line unreadable, ignored; 1298/// - 3: unknown command, ignored; 1299/// - 4: abnormal termination (e.g., MIGRAD not converged); 1300/// - 5: command is a request to read PARAMETER definitions; 1301/// - 6: 'SET INPUT' command; 1302/// - 7: 'SET TITLE' command; 1303/// - 8: 'SET COVAR' command; 1304/// - 9: reserved; 1305/// - 10: END command; 1306/// - 11: EXIT or STOP command; 1307/// - 12: RETURN command; 1308///; 1309 ; 1310void TMinuit::mncomd(const char *crdbin, Int_t &icondn); 1311{; 1312 /* Local variables */; 1313 Int_t ierr, ipos, i, llist, lenbuf, lnc;; 1314 Bool_t leader;; 1315 TString comand, crdbuf, ctemp;; 1316 ; 1317 crdbuf = crdbin;; 1318 crdbuf.ToUpper();; 1319 lenbuf = crdbuf.Length();; 1320 icondn = 0;; 1321// record not case-sensitive, get upper case, strip leading blanks; 1322 leader = kTRUE;; 1323 ipos = 1;; 1324 for (i = 1; i <= TMath::Min(20,lenbuf); ++i) {; 1325 if (crdbuf[i-1] == '\'') break;; 1326 if (crdbuf[i-1] == ' ') {; 1327 if (leader) ++ipos;; 1328 continue;; 1329 }; 1330 leader = kFALSE;; 1331 }; 1332 ; 1333// blank or null command; 1334 if (ipos > lenbuf) {; 1335 Printf("" BLANK COMMAND IGNORED."");; 1336 icondn = 1;; 1337 return;; 1338 }; 1339// preemptive commands; 1340// if command is 'PARAMETER'; 1341 if (crdbuf(ipos-1,3) == ""PAR"") {; 1342 icondn = 5;; 1343 fLphead = kTRUE;; 1344 return;; 1345 }; 1346// if command is 'SET INPUT'",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:45610,variab,variables,45610,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"78/// Note that the mouse does not need to be in the pad or even canvas; 279/// when it is released.; 280 ; 281void TAxis::ExecuteEvent(Int_t event, Int_t px, Int_t py); 282{; 283 if (!gPad) return;; 284 gPad->ExecuteEventAxis(event,px,py,this);; 285}; 286 ; 287////////////////////////////////////////////////////////////////////////////////; 288/// Find bin number corresponding to abscissa x. NOTE: this method does not work with alphanumeric bins !!!; 289///; 290/// If x is underflow or overflow, attempt to extend the axis if TAxis::kCanExtend is true.; 291/// Otherwise, return 0 or fNbins+1.; 292 ; 293Int_t TAxis::FindBin(Double_t x); 294{; 295 Int_t bin;; 296 // NOTE: This should not be allowed for Alphanumeric histograms,; 297 // but it is heavily used (legacy) in the TTreePlayer to fill alphanumeric histograms.; 298 // but in case of alphanumeric do-not extend the axis. It makes no sense; 299 if (IsAlphanumeric() && gDebug) Info(""FindBin"",""Numeric query on alphanumeric axis - Sorting the bins or extending the axes / rebinning can alter the correspondence between the label and the bin interval."");; 300 if (x < fXmin) { //*-* underflow; 301 bin = 0;; 302 if (fParent == nullptr) return bin;; 303 if (!CanExtend() || IsAlphanumeric() ) return bin;; 304 ((TH1*)fParent)->ExtendAxis(x,this);; 305 return FindFixBin(x);; 306 } else if ( !(x < fXmax)) { //*-* overflow (note the way to catch NaN); 307 bin = fNbins+1;; 308 if (fParent == nullptr) return bin;; 309 if (!CanExtend() || IsAlphanumeric() ) return bin;; 310 ((TH1*)fParent)->ExtendAxis(x,this);; 311 return FindFixBin(x);; 312 } else {; 313 if (!fXbins.fN) { //*-* fix bins; 314 bin = 1 + int (fNbins*(x-fXmin)/(fXmax-fXmin) );; 315 } else { //*-* variable bin sizes; 316 //for (bin =1; x >= fXbins.fArray[bin]; bin++);; 317 bin = 1 + TMath::BinarySearch(fXbins.fN,fXbins.fArray,x);; 318 }; 319 }; 320 return bin;; 321}; 322 ; 323////////////////////////////////////////////////////////////////////////////////; 324/// Find",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:8894,extend,extending,8894,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['extend'],['extending']
Modifiability,78412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.974,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:109593,config,configuration,109593,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"79 ; 780 // Compute the first endpoint codes.; 781 Int_t code1 = ClippingCode(x[0],y[0],xclipl,yclipb,xclipr,yclipt);; 782 Int_t code2 = ClippingCode(x[1],y[1],xclipl,yclipb,xclipr,yclipt);; 783 ; 784 Double_t xt=0, yt=0;; 785 Int_t clipped = 0; //this variable could be used in a future version; 786 while(code1 + code2) {; 787 clipped = 1;; 788 ; 789 // The line lies entirely outside the clipping boundary; 790 if (code1&code2) {; 791 clip = 2;; 792 return clip;; 793 }; 794 ; 795 // The line is subdivided into several parts; 796 Int_t ic = code1;; 797 if (ic == 0) ic = code2;; 798 if (ic & 0x1) {; 799 yt = y[0] + (y[1]-y[0])*(xclipl-x[0])/(x[1]-x[0]);; 800 xt = xclipl;; 801 }; 802 if (ic & 0x2) {; 803 yt = y[0] + (y[1]-y[0])*(xclipr-x[0])/(x[1]-x[0]);; 804 xt = xclipr;; 805 }; 806 if (ic & 0x4) {; 807 xt = x[0] + (x[1]-x[0])*(yclipb-y[0])/(y[1]-y[0]);; 808 yt = yclipb;; 809 }; 810 if (ic & 0x8) {; 811 xt = x[0] + (x[1]-x[0])*(yclipt-y[0])/(y[1]-y[0]);; 812 yt = yclipt;; 813 }; 814 if (ic == code1) {; 815 x[0] = xt;; 816 y[0] = yt;; 817 code1 = ClippingCode(xt,yt,xclipl,yclipb,xclipr,yclipt);; 818 } else {; 819 x[1] = xt;; 820 y[1] = yt;; 821 code2 = ClippingCode(xt,yt,xclipl,yclipb,xclipr,yclipt);; 822 }; 823 }; 824 clip = clipped;; 825 return clip;; 826}; 827 ; 828/// @copydoc TPad::Clip(Float_t*,Float_t*,Float_t,Float_t,Float_t,Float_t); 829 ; 830Int_t TPad::Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt); 831{; 832 const Double_t kP = 10000;; 833 Int_t clip = 0;; 834 ; 835 for (Int_t i=0;i<2;i++) {; 836 if (TMath::Abs(xclipl-x[i]) <= TMath::Abs(xclipr-xclipl)/kP) x[i] = xclipl;; 837 if (TMath::Abs(xclipr-x[i]) <= TMath::Abs(xclipr-xclipl)/kP) x[i] = xclipr;; 838 if (TMath::Abs(yclipb-y[i]) <= TMath::Abs(yclipt-yclipb)/kP) y[i] = yclipb;; 839 if (TMath::Abs(yclipt-y[i]) <= TMath::Abs(yclipt-yclipb)/kP) y[i] = yclipt;; 840 }; 841 ; 842 // Compute the first endpoint codes.; 843 Int_t code1 = 0;; 844 if (x[0] < xclipl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:24581,variab,variable,24581,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['variab'],['variable']
Modifiability,796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.02,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95385,config,configuration,95385,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,79972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.218,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:105334,config,configuration,105334,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7; TMVA::Types::kMaxAnalysisType@ kMaxAnalysisTypeDefinition Types.h:131; TMVA::Types::kRegression@ kRegressionDefinition Types.h:128; TMVA::Types::fLoggerMsgLogger * fLogger! message loggerDefinition Types.h:181; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kMaxTreeType@ kMaxTreeTypealso used as temporary storage for trees not yet assigned for testing;training...Definition Types.h:145; TMVA::Types::kTrainingOriginal@ kTrainingOriginalever neededDefinition Types.h:147; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TMVA::Types::kValidation@ kValidationthese are placeholders... currently not used, but could be moved ""forward"" ifDefinition Types.h:146; TMVA::Types::kTesting@ kTestingDefinition Types.h:144; TMVA::Types::LogMsgLogger & Log() constDefinition Types.h:182; TMVA::Types::TypesTypes()constructorDefinition Types.cxx:56; TMVA::VITypeVITypeDefinition Types.h:69; TMVA::kRandom@ kRandomDefinition Types.h:69; TMVA::kAll@ kAllDefinition Types.h:69; TMVA::kShort@ kShortDefinition Types.h:69; TMVA::EMsgTypeEMsgTypeDefinition Types.h:55; TMVA::kSILENT@ kSILENTDefinition Types.h:62; TMVA::kDEBUG@ kDEBUGDefinition Types.h:56; TMVA::kVERBOSE@ kVERBOSEDefinition Types.h:57; TMVA::kHEADER@ kHEADERDefinition Types.h:63; TMVA::kERROR@ kERRORDefinition Types.h:60; TMVA::kINFO@ kINFODefinition Types.h:58; TMVA::kWARNING@ kWARNINGDefinition Types.h:59; TMVA::kFATAL@ kFATALDefinition Types.h:61; TMVA::HistTypeHistTypeDefinition Types.h:66; TMVA::kRarityType@ kRarityTypeDefinition Types.h:66; TMVA::kCompareType@ kCompareTypeDefinition Types.h:66; TMVA::kProbaType@ kProbaTypeDefinition Types.h:66; TMVA::kMVAType@ kMVATypeDefinition Types.h:66; TMVA::TMVAVersion_tUInt_t TMVAVersion_tDefinition Types.h:49; TStringBasic string class.Definition TString.h:139; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22. tmvatmvaincTMVATypes.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html:11032,variab,variable,11032,doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,1,['variab'],['variable']
Modifiability,"7={}, const RooCmdArg& arg8={}) const ;; 205 ; 206 /// Create integral over observables in iset in range named rangeName.; 207 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const char* rangeName) const {; 208 return createIntegral(iset,nullptr,nullptr,rangeName) ;; 209 }; 210 /// Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset; 211 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooArgSet& nset, const char* rangeName=nullptr) const {; 212 return createIntegral(iset,&nset,nullptr,rangeName) ;; 213 }; 214 /// Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while; 215 /// using specified configuration for any numeric integration.; 216 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooArgSet& nset, const RooNumIntConfig& cfg, const char* rangeName=nullptr) const {; 217 return createIntegral(iset,&nset,&cfg,rangeName) ;; 218 }; 219 /// Create integral over observables in iset in range named rangeName using specified configuration for any numeric integration.; 220 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooNumIntConfig& cfg, const char* rangeName=nullptr) const {; 221 return createIntegral(iset,nullptr,&cfg,rangeName) ;; 222 }; 223 virtual RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooArgSet* nset=nullptr, const RooNumIntConfig* cfg=nullptr, const char* rangeName=nullptr) const ;; 224 ; 225 ; 226 void setParameterizeIntegral(const RooArgSet& paramVars) ;; 227 ; 228 // Create running integrals; 229 RooFit::OwningPtr<RooAbsReal> createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset={}) ;; 230 RooFit::OwningPtr<RooAbsReal> createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2={},; 231 const RooCmdArg& arg3={}, const RooCmdArg& arg4={},; 232 const RooCmdA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:10711,config,configuration,10711,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['config'],['configuration']
Modifiability,8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85161,config,configuration,85161,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89522,config,configuration,89522,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,8 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83859,config,configuration,83859,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"8 [[maybe_unused]] static const auto _res = []() {; 1609 gROOT->ProcessLine(""TF1::InitStandardFunctions();"");; 1610 isInited = true;; 1611 return true;; 1612 }();; 1613 return fFunctions->FindObject(name);; 1614}; 1615 ; 1616////////////////////////////////////////////////////////////////////////////////; 1617 ; 1618TFunctionTemplate *TROOT::GetFunctionTemplate(const char *name); 1619{; 1620 if (!gInterpreter) return nullptr;; 1621 ; 1622 if (!fFuncTemplate) fFuncTemplate = new TListOfFunctionTemplates(nullptr);; 1623 ; 1624 return (TFunctionTemplate*)fFuncTemplate->FindObject(name);; 1625}; 1626 ; 1627////////////////////////////////////////////////////////////////////////////////; 1628/// Return pointer to global variable by name. If load is true force; 1629/// reading of all currently defined globals from CINT (more expensive).; 1630 ; 1631TGlobal *TROOT::GetGlobal(const char *name, Bool_t load) const; 1632{; 1633 return (TGlobal *)gROOT->GetListOfGlobals(load)->FindObject(name);; 1634}; 1635 ; 1636////////////////////////////////////////////////////////////////////////////////; 1637/// Return pointer to global variable with address addr.; 1638 ; 1639TGlobal *TROOT::GetGlobal(const TObject *addr, Bool_t /* load */) const; 1640{; 1641 if (addr == nullptr || ((Longptr_t)addr) == -1) return nullptr;; 1642 ; 1643 TInterpreter::DeclId_t decl = gInterpreter->GetDataMemberAtAddr(addr);; 1644 if (decl) {; 1645 TListOfDataMembers *globals = ((TListOfDataMembers*)(gROOT->GetListOfGlobals(kFALSE)));; 1646 return (TGlobal*)globals->Get(decl);; 1647 }; 1648 // If we are actually looking for a global that is held by a global; 1649 // pointer (for example gRandom), we need to find a pointer with the; 1650 // correct value.; 1651 decl = gInterpreter->GetDataMemberWithValue(addr);; 1652 if (decl) {; 1653 TListOfDataMembers *globals = ((TListOfDataMembers*)(gROOT->GetListOfGlobals(kFALSE)));; 1654 return (TGlobal*)globals->Get(decl);; 1655 }; 1656 return nullptr;; 1657}; 1658 ; 165",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:63032,variab,variable,63032,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"8 errdef = 0; // ??; 909 nparx = fNpar;; 910 nvpar = 0;; 911 for(Int_t ii=0; ii<fNpar; ii++) {; 912 if(fPL0[ii]>0.) nvpar++;; 913 }; 914 return 0;; 915}; 916 ; 917////////////////////////////////////////////////////////////////////////////////; 918/// Return Sum(log(i) i=0,n; 919/// used by log-likelihood fits; 920 ; 921Double_t TFumili::GetSumLog(Int_t n); 922{; 923 if (n < 0) return 0;; 924 if (n > fNlog) {; 925 if (fSumLog) delete [] fSumLog;; 926 fNlog = 2*n+1000;; 927 fSumLog = new Double_t[fNlog+1];; 928 Double_t fobs = 0;; 929 for (Int_t j=0;j<=fNlog;j++) {; 930 if (j > 1) fobs += TMath::Log(j);; 931 fSumLog[j] = fobs;; 932 }; 933 }; 934 if (fSumLog) return fSumLog[n];; 935 return 0;; 936}; 937 ; 938////////////////////////////////////////////////////////////////////////////////; 939/// Inverts packed diagonal matrix Z by square-root method.; 940/// Matrix elements corresponding to; 941/// fix parameters are removed.; 942///; 943/// - n: number of variable parameters; 944 ; 945void TFumili::InvertZ(Int_t n); 946{; 947 static Double_t am = 3.4e138;; 948 static Double_t rp = 5.0e-14;; 949 Double_t ap, aps, c, d;; 950 Double_t *r_1=fR;; 951 Double_t *pl_1=fPL;; 952 Double_t *z_1=fZ;; 953 Int_t i, k, l, ii, ki, li, kk, ni, ll, nk, nl, ir, lk;; 954 if (n < 1) {; 955 return;; 956 }; 957 --pl_1;; 958 --r_1;; 959 --z_1;; 960 aps = am / n;; 961 aps = sqrt(aps);; 962 ap = 1.0e0 / (aps * aps);; 963 ir = 0;; 964 for (i = 1; i <= n; ++i) {; 965 L1:; 966 ++ir;; 967 if (pl_1[ir] <= 0.0e0) goto L1;; 968 else goto L2;; 969 L2:; 970 ni = i * (i - 1) / 2;; 971 ii = ni + i;; 972 k = n + 1;; 973 if (z_1[ii] <= rp * TMath::Abs(r_1[ir]) || z_1[ii] <= ap) {; 974 goto L19;; 975 }; 976 z_1[ii] = 1.0e0 / sqrt(z_1[ii]);; 977 nl = ii - 1;; 978 L3:; 979 if (nl - ni <= 0) goto L5;; 980 else goto L4;; 981 L4:; 982 z_1[nl] *= z_1[ii];; 983 if (TMath::Abs(z_1[nl]) >= aps) {; 984 goto L16;; 985 }; 986 --nl;; 987 goto L3;; 988 L5:; 989 if (i - n >= 0) goto L12;; 990 else goto L6;; 991 L6:; 992 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:28028,variab,variable,28028,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['variab'],['variable']
Modifiability,"8 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [4/7]. RooSimultaneous::RooSimultaneous ; (; const char * ; name, . const char * ; title, . RooFit::Detail::FlatMap< std::string, RooAbsPdf * > const & ; pdfMap, . RooAbsCategoryLValue & ; inIndexCat . ). For internal use in RooFit. ; Definition at line 155 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [5/7]. RooSimultaneous::RooSimultaneous ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inPdfList, . RooAbsCategoryLValue & ; inIndexCat . ). Constructor from index category and full list of PDFs. ; In this constructor form, a PDF must be supplied for each indexCat state to avoid ambiguities. The PDFs are associated with the states of the index category as they appear when iterating through the category states with RooAbsCategory::begin() and RooAbsCategory::end(). This usually means they are associated by ascending index numbers.; PDFs may not overlap (i.e. share any variables) with the index category (function) ; Definition at line 132 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [6/7]. RooSimultaneous::RooSimultaneous ; (; const RooSimultaneous & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 339 of file RooSimultaneous.cxx. ◆ ~RooSimultaneous(). RooSimultaneous::~RooSimultaneous ; (; ). override . Destructor. ; Definition at line 358 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [7/7]. RooSimultaneous::RooSimultaneous ; (; const char * ; name, . const char * ; title, . RooSimultaneous::InitializationOutput && ; initInfo . ). private . Private internal constructor. ; Definition at line 162 of file RooSimultaneous.cxx. Member Function Documentation. ◆ addPdf(). bool RooSimultaneous::addPdf ; (; const RooAbsPdf & ; pdf, . const char * ; catLabel . ). Associate given PDF with index category state label 'catLabel'. ; The name state must be already defined in the index category.; RooSimultaneous can function without having a PDF associated with eve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:80522,variab,variables,80522,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['variab'],['variables']
Modifiability,"8 of file TProof.cxx. ◆ LoadPackage(). Int_t TProof::LoadPackage ; (; const char * ; package, . Bool_t ; notOnClient = kFALSE, . TList * ; loadopts = 0, . TList * ; workers = 0 . ). private . Load specified package. ; Executes the PROOF-INF/SETUP.C script on all active nodes. If notOnClient = true, don't load package on the client. The default is to load the package also on the client. The argument 'loadopts' specify a list of objects to be passed to the SETUP. The objects in the list must be streamable; the SETUP macro will be executed like this: SETUP.C(loadopts). Returns 0 in case of success and -1 in case of error. ; Definition at line 8069 of file TProof.cxx. ◆ LogMessage(). void TProof::LogMessage ; (; const char * ; msg, . Bool_t ; all . ). Log a message into the appropriate window by emitting a signal. ; Definition at line 6414 of file TProof.cxx. ◆ LogViewer(). void TProof::LogViewer ; (; const char * ; url = 0, . Int_t ; sessionidx = 0 . ). static . Start the log viewer window usign the plugin manager. ; Definition at line 12470 of file TProof.cxx. ◆ MakePlayer(). TVirtualProofPlayer * TProof::MakePlayer ; (; const char * ; player = 0, . TSocket * ; s = 0 . ). protectedvirtual . Construct a TProofPlayer object. ; The player string specifies which player should be created: remote, slave, sm (supermaster) or base. Default is remote. Socket is needed in case a slave player is created. ; Reimplemented in TProofSuperMaster.; Definition at line 10211 of file TProof.cxx. ◆ MarkBad() [1/2]. void TProof::MarkBad ; (; TSlave * ; wrk, . const char * ; reason = 0 . ). private . Add a bad slave server to the bad slave list and remove it from the active list and from the two monitor objects. ; Assume that the work done by this worker was lost and ask packerizer to reassign it. ; Definition at line 4521 of file TProof.cxx. ◆ MarkBad() [2/2]. void TProof::MarkBad ; (; TSocket * ; s, . const char * ; reason = 0 . ). private . Add slave with socket s to the bad slave list a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:115859,plugin,plugin,115859,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['plugin'],['plugin']
Modifiability,"8 virtual double getNorm(const RooArgSet* set=nullptr) const ;; 199 ; 200 virtual void resetErrorCounters(Int_t resetValue=10) ;; 201 void setTraceCounter(Int_t value, bool allNodes=false) ;; 202 ; 203 double analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName=nullptr) const override ;; 204 ; 205 /// Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term.; 206 /// Always returns false, unless a PDF overrides this function.; 207 virtual bool selfNormalized() const {; 208 return false ;; 209 }; 210 ; 211 // Support for extended maximum likelihood, switched off by default; 212 enum ExtendMode { CanNotBeExtended, CanBeExtended, MustBeExtended } ;; 213 /// Returns ability of PDF to provide extended likelihood terms. Possible; 214 /// answers are in the enumerator RooAbsPdf::ExtendMode.; 215 /// This default implementation always returns CanNotBeExtended.; 216 virtual ExtendMode extendMode() const { return CanNotBeExtended; }; 217 /// If true, PDF can provide extended likelihood term.; 218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirects; 230 /// to the actual virtual function but takes a RooArgSet reference instead of; 231 /// pointer. \see expectedEvents(const RooArgSet*) const; 232 double expectedEvents(const RooArgSet& nset) const {; 233 return expectedEvents(&nset) ;; 234 }; 235 ; 236 virtual std::unique_ptr<RooAbsReal> createExpectedEventsFunc(const RooArgSet* nset) const;; 23",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:10442,extend,extendMode,10442,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,2,['extend'],"['extendMode', 'extended']"
Modifiability,"8 }; 889 ; 890 class TConfWithFactor : public TConfiguration {; 891 // Configuration object for the Float16/Double32 where a factor has been specified.; 892 public:; 893 Double_t fFactor;; 894 Double_t fXmin;; 895 TConfWithFactor(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset, Double_t factor, Double_t xmin) : TConfiguration(info,id,compinfo,offset),fFactor(factor),fXmin(xmin) {};; 896 TConfiguration *Copy() override { return new TConfWithFactor(*this); }; 897 };; 898 ; 899 template <typename T>; 900 INLINE_TEMPLATE_ARGS Int_t ReadBasicType_WithFactor(TBuffer &buf, void *addr, const TConfiguration *config); 901 {; 902 // Stream a Float16 or Double32 where a factor has been specified.; 903 //a range was specified. We read an integer and convert it back to a double.; 904 ; 905 TConfWithFactor *conf = (TConfWithFactor *)config;; 906 buf.ReadWithFactor((T*)( ((char*)addr) + config->fOffset ), conf->fFactor, conf->fXmin);; 907 return 0;; 908 }; 909 ; 910 class TConfNoFactor : public TConfiguration {; 911 // Configuration object for the Float16/Double32 where a factor has been specified.; 912 public:; 913 Int_t fNbits;; 914 TConfNoFactor(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset, Int_t nbits) : TConfiguration(info,id,compinfo,offset),fNbits(nbits) {};; 915 TConfiguration *Copy() override { return new TConfNoFactor(*this); }; 916 };; 917 ; 918 template <typename T>; 919 INLINE_TEMPLATE_ARGS Int_t ReadBasicType_NoFactor(TBuffer &buf, void *addr, const TConfiguration *config); 920 {; 921 // Stream a Float16 or Double32 where a factor has not been specified.; 922 ; 923 TConfNoFactor *conf = (TConfNoFactor *)config;; 924 Int_t nbits = conf->fNbits;; 925 ; 926 buf.ReadWithNbits( (T*)( ((char*)addr) + config->fOffset ), nbits );; 927 return 0;; 928 }; 929 ; 930 INLINE_TEMPLATE_ARGS Int_t ReadTString(TBuffer &buf, void *addr, const TConfiguration *config); 931 {; 932 // Read in a TString object.; 933 ; 934 // Idea: We c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:36838,config,config,36838,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"8. Double_t Interpolate(Double_t x, Double_t y, Double_t z); illegal for a TH2. Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test.; Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test; ""O"" include Overflows; ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. The returned function value is the probability of test; (much less than one means NOT compatible). The KS test uses the distance between the pseudo-CDF's obtained; from the histogram. Since in 2D the order for generating the pseudo-CDF is; arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; other from the y axis and the maximum distance is the average of the two maximum; distances obtained. Code adapted by Rene Brun from original HBOOK routine HDIFF. Long64_t Merge(TCollection* list); Add all histograms in the collection to this histogram.; This function computes the min/max for the axes,; compute a new number of bins, if necessary,; add bin contents, errors and statistics.; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH2 * RebinX(Int_t ngroup = 2, const char* newname = """"); Rebin only the X axis; see Rebin2D. TH2 * RebinY(Int_t ngroup = 2, const char* newname = """"); Rebin only the Y axis; see Rebin2D. TH2 * Rebin2D(Int_t nxgroup = 2, Int_t nygroup = 2, const char* newname = """"); -*-*-*Rebin this histogram grouping nxgroup/nygroup ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2.html:40367,adapt,adapted,40367,root/html528/TH2.html,https://root.cern,https://root.cern/root/html528/TH2.html,4,['adapt'],['adapted']
Modifiability,"8. Double_t Interpolate(Double_t x, Double_t y, Double_t z); illegal for a TH2. Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test.; Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test; ""O"" include Overflows; ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. The returned function value is the probability of test; (much less than one means NOT compatible). The KS test uses the distance between the pseudo-CDF's obtained; from the histogram. Since in 2D the order for generating the pseudo-CDF is; arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; other from the y axis and the maximum distance is the average of the two maximum; distances obtained. Code adapted by Rene Brun from original HBOOK routine HDIFF. Long64_t Merge(TCollection* list); Add all histograms in the collection to this histogram.; This function computes the min/max for the axes,; compute a new number of bins, if necessary,; add bin contents, errors and statistics.; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH2 * RebinX(Int_t ngroup = 2, const char* newname = """"); Rebin only the X axis; see Rebin2D. TH2 * RebinY(Int_t ngroup = 2, const char* newname = """"); Rebin only the Y axis; see Rebin2D. TH2 * Rebin2D(Int_t nxgroup = 2, Int_t nygroup = 2, const char* newname = """"); Rebin this histogram grouping nxgroup/nygroup bins a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2.html:44837,adapt,adapted,44837,root/html602/TH2.html,https://root.cern,https://root.cern/root/html602/TH2.html,2,['adapt'],['adapted']
Modifiability,8.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95727,config,configuration,95727,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"80 ""Trying to read an emulated class (%s) to store in a compiled pointer (%s)"",; 1081 cl->GetName(),expectedClass->GetName());; 1082 }; 1083 }; 1084 // Create an instance of this class; 1085 ; 1086 void *pobj = cl->New();; 1087 if (!pobj) {; 1088 Error(""ReadObjectAny"", ""Cannot create new object of class %s"", fClassName.Data());; 1089 return 0;; 1090 }; 1091 ; 1092 if (kvers > 1); 1093 bufferRef.MapObject(pobj,cl); //register obj in map to handle self reference; 1094 ; 1095 if (fObjlen > fNbytes-fKeylen) {; 1096 char *objbuf = bufferRef.Buffer() + fKeylen;; 1097 UChar_t *bufcur = (UChar_t *)&compressedBuffer[fKeylen];; 1098 Int_t nin, nout = 0, nbuf;; 1099 Int_t noutot = 0;; 1100 while (1) {; 1101 Int_t hc = R__unzip_header(&nin, bufcur, &nbuf);; 1102 if (hc!=0) break;; 1103 R__unzip(&nin, bufcur, &nbuf, (unsigned char*) objbuf, &nout);; 1104 if (!nout) break;; 1105 noutot += nout;; 1106 if (noutot >= fObjlen) break;; 1107 bufcur += nin;; 1108 objbuf += nout;; 1109 }; 1110 if (nout) {; 1111 cl->Streamer((void*)pobj, bufferRef, clOnfile); //read object; 1112 } else {; 1113 cl->Destructor(pobj);; 1114 return nullptr;; 1115 }; 1116 } else {; 1117 cl->Streamer((void*)pobj, bufferRef, clOnfile); //read object; 1118 }; 1119 ; 1120 if (cl->IsTObject()) {; 1121 auto tobjBaseOffset = cl->GetBaseClassOffset(TObject::Class());; 1122 if (tobjBaseOffset == -1) {; 1123 Fatal(""ReadObj"",""Incorrect detection of the inheritance from TObject for class %s.\n"",; 1124 fClassName.Data());; 1125 }; 1126 TObject *tobj = (TObject*)( ((char*)pobj) + tobjBaseOffset);; 1127 ; 1128 // See similar adjustments in ReadObj; 1129 if (gROOT->GetForceStyle()) tobj->UseCurrentStyle();; 1130 ; 1131 if (cl->InheritsFrom(TDirectoryFile::Class())) {; 1132 TDirectory *dir = static_cast<TDirectoryFile*>(tobj);; 1133 dir->SetName(GetName());; 1134 dir->SetTitle(GetTitle());; 1135 dir->SetMother(fMotherDir);; 1136 fMotherDir->Append(dir);; 1137 }; 1138 }; 1139 ; 1140 {; 1141 // Append the object to the directory ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:40340,inherit,inheritance,40340,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"80 // special handling for the text-based streamers; 581 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx); 582 buf.WriteFastArray((void *)nullptr, cl, -1, nullptr);; 583 }; 584 //} // k; 585 }; 586 else {; 587 // -- Older versions do *not* allow polymorphic pointers to objects.; 588 // Loop over the entries in the clones array or the STL container.; 589 //for (int k = 0; k < narr; ++k) {; 590 // Get the counter for the varying length array.; 591 Int_t vlen = *((Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/));; 592 //b << vlen;; 593 if (vlen) {; 594 // Get a pointer to the array of pointers.; 595 char** pp = (char**) ((char *) addr /*entry pointer*/ + ioffset /*object offset*/);; 596 // -- Older versions do *not* allow polymorphic pointers to objects.; 597 // Loop over each element of the array of pointers to varying-length arrays.; 598 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx) {; 599 if (!pp[ndx]) {; 600 // -- We do not have a pointer to a varying-length array.; 601 //Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; 602 // ::ErrorHandler(kError, ""::WriteTextStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));; 603 printf(""WriteStreamerLoop - The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName());; 604 continue;; 605 }; 606 if (!isPtrPtr) {; 607 // -- We are a varying-length array of objects.; 608 // Loop over the elements of the varying length array.; 609 for (Int_t v = 0; v < vlen; ++v) {; 610 // Write the object to the buffer.; 611 cl->Streamer(pp[ndx] + (v * cl->Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:24440,config,config,24440,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"8000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  VariableRearrangeTransform (DataSetInfo &dsi);  constructor ;  ; virtual ~VariableRearrangeTransform (void);  ; virtual void AttachXMLTo (void *parent);  create XML description of Rearrange transformation ;  ; std::vector< TString > * GetTransformationStrings (Int_t cls) const;  creates string with variable transformations applied ;  ; void Initialize ();  initialization of the rearrangement transformation (nothing to do) ;  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates a normalizing function ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  prepare transformation --> (nothing to do) ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation ranges ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  ; void WriteTransformationToStream (std::ostream &) const;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:1689,variab,variable,1689,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,1,['variab'],['variable']
Modifiability,"807/// #### Notes:; 2808///; 2809/// - If an attribute should not be changed just give the value ""-1"".; 2810/// - To erase a label set labSize to 0; 2811/// - If labText is not specified or is an empty string, the text label is not changed.; 2812 ; 2813void TGaxis::ChangeLabelByValue(Double_t labValue, Double_t labAngle, Double_t labSize,; 2814 Int_t labAlign, Int_t labColor, Int_t labFont,; 2815 const TString &labText); 2816{; 2817 // special situation when mod labs taken from axis - one have to reset pointer; 2818 if (fModLabs && !IsOwnedModLabs()) {; 2819 fModLabs = nullptr;; 2820 fNModLabs = 0;; 2821 }; 2822 ; 2823 fNModLabs++;; 2824 if (!fModLabs) {; 2825 fModLabs = new TList();; 2826 fModLabs->SetOwner(kTRUE);; 2827 }; 2828 ; 2829 TAxisModLab *ml = FindModLab(0, 0, labValue, 0.);; 2830 if (!ml) {; 2831 ml = new TAxisModLab();; 2832 ml->SetLabValue(labValue);; 2833 fModLabs->Add(ml);; 2834 }; 2835 ; 2836 ml->SetAngle(labAngle);; 2837 ml->SetSize(labSize);; 2838 ml->SetAlign(labAlign);; 2839 ml->SetColor(labColor);; 2840 ml->SetFont(labFont);; 2841 ml->SetText(labText);; 2842}; 2843 ; 2844 ; 2845static TAttText SavedAttText; ///< Global variable saving the current label's text angle. Used by TGaxis::ChangeLabelAttributes.; 2846 ; 2847////////////////////////////////////////////////////////////////////////////////; 2848/// Helper method used by TGaxis::ChangeLabel.; 2849/// Change the label attributes of label number i. If needed.; 2850///; 2851/// \param[in] i Current label number to be changed if needed; 2852/// \param[in] nlabels Totals number of labels for this axis (useful when i is counted from the end); 2853/// \param[in] t Original TLatex string holding the label to be changed; 2854/// \param[in] c Text string to be drawn; 2855/// \param[in] value Axis value which should be changed; 2856/// \param[in] eps Epsilon parameter for axis value, -1 means ignore axis value at all; 2857 ; 2858 ; 2859void TGaxis::ChangeLabelAttributes(Int_t i, Int_t nlabels, TLatex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:96416,variab,variable,96416,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['variab'],['variable']
Modifiability,"81 of file RooProdPdf.cxx. ◆ DeclFileName(). static const char * RooProdPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 190 of file RooProdPdf.h. ◆ doEvalImpl(). void RooProdPdf::doEvalImpl ; (; RooAbsArg const * ; caller, . const RooProdPdf::CacheElem & ; cache, . RooFit::EvalContext & ; ctx . ); const. private . Evaluate product of PDFs in batch mode. ; Definition at line 413 of file RooProdPdf.cxx. ◆ evaluate(). double RooProdPdf::evaluate ; (; ); const. overrideprivatevirtual . Calculate current value of object. ; Implements RooAbsReal.; Definition at line 371 of file RooProdPdf.cxx. ◆ expectedEvents(). double RooProdPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the expected number of events associated with the extendable input PDF in the product. ; If there is no extendable term, abort. ; Reimplemented from RooAbsPdf.; Definition at line 1671 of file RooProdPdf.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooProdPdf::extendMode ; (; ); const. overridevirtual . If this product contains exactly one extendable p.d.f return the extension abilities of that p.d.f, otherwise return CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 1660 of file RooProdPdf.cxx. ◆ factorizeProduct(). void RooProdPdf::factorizeProduct ; (; const RooArgSet & ; normSet, . const RooArgSet & ; intSet, . RooLinkedList & ; termList, . RooLinkedList & ; normList, . RooLinkedList & ; impDepList, . RooLinkedList & ; crossDepList, . RooLinkedList & ; intList . ); const. private . Factorize product in irreducible terms for given choice of integration/normalization. ; Definition at line 472 of file RooProdPdf.cxx. ◆ fillNormSetForServer(). std::unique_ptr< RooArgSet > RooProdPdf::fillNormSetForServer ; (; RooArgSet const & ; normSet, . RooAbsArg const & ; server . ); const. private . Definition at line 2281 of file RooProdPdf.cxx. ◆ findPdfNSet(). RooArgSet * RooProdPdf::find",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:89137,extend,extendMode,89137,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['extend'],['extendMode']
Modifiability,"82 template <typename From, typename To, template <typename F, typename T> class Converter >; 2483 struct ConvertBasicType<WithFactorMarker<From>,To,Converter > {; 2484 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2485 {; 2486 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2487 ; 2488 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2489 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2490 Int_t nvalues = proxy->Size();; 2491 ; 2492 TConfSTLWithFactor *conf = (TConfSTLWithFactor *)config;; 2493 ; 2494 From *items = new From[nvalues];; 2495 buf.ReadFastArrayWithFactor(items, nvalues, conf->fFactor, conf->fXmin);; 2496 Converter<From,To>::ConvertAction(items,start,end,loopconfig,config);; 2497 delete [] items;; 2498 return 0;; 2499 }; 2500 };; 2501 ; 2502 template <typename From, typename To, template <typename F, typename T> class Converter >; 2503 struct ConvertBasicType<NoFactorMarker<From>,To,Converter > {; 2504 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2505 {; 2506 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2507 ; 2508 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2509 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2510 Int_t nvalues = proxy->Size();; 2511 ; 2512 TConfSTLNoFactor *conf = (TConfSTLNoFactor *)config;; 2513 ; 2514 From *items = new From[nvalues];; 2515 buf.ReadFastArrayWithNbits(items, nvalues, conf->fNbits);; 2516 Converter<From,To>::ConvertAction(items,start,end,loopconfig,config);; 2517 delete [] items;; 2518 return 0;; 2519 }; 2520 };; 2521 ; 2522 static INLINE_TEMPLATE_ARGS Int_t ReadBase(TBuffer &buf, void *start, const void *end, const TLoopConfiguration * loopconfig, const TConfiguration *config); 2523 {; 2524 // Well the implementation is no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:100860,config,config,100860,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,82242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:98932,config,configuration,98932,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,83.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88446,config,configuration,88446,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"836 ; 837Double_t TProfile::GetBinEntries(Int_t bin) const; 838{; 839 if (fBuffer) ((TProfile*)this)->BufferEmpty();; 840 ; 841 if (bin < 0 || bin >= fNcells) return 0;; 842 return fBinEntries.fArray[bin];; 843}; 844 ; 845////////////////////////////////////////////////////////////////////////////////; 846/// Return bin effective entries for a weighted filled Profile histogram.; 847/// In case of an unweighted profile, it is equivalent to the number of entries per bin; 848/// The effective entries is defined as the square of the sum of the weights divided by the; 849/// sum of the weights square.; 850/// TProfile::Sumw2() must be called before filling the profile with weights.; 851/// Only by calling this method the sum of the square of the weights per bin is stored.; 852 ; 853Double_t TProfile::GetBinEffectiveEntries(Int_t bin) const; 854{; 855 return TProfileHelper::GetBinEffectiveEntries((TProfile*)this, bin);; 856}; 857 ; 858////////////////////////////////////////////////////////////////////////////////; 859/// Return bin error of a Profile histogram; 860///; 861/// Computing errors: A moving field; 862///; 863/// The computation of errors for a TProfile has evolved with the versions; 864/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 865///; 866/// - prior to version 3.00, we had no special treatment of low statistic bins.; 867/// As a result, these bins had huge errors. The reason is that the; 868/// expression eprim2 is very close to 0 (rounding problems) or 0.; 869/// - in version 3.00 (18 Dec 2000), the algorithm is protected for values of; 870/// eprim2 very small and the bin errors set to the average bin errors, following; 871/// recommendations from a group of users.; 872/// - in version 3.01 (19 Apr 2001), it is realized that the algorithm above; 873/// should be applied only to low statistic bins.; 874/// - in version 3.02 (26 Sep 2001), the same group of users recommend instead; 875/// to take two times the average er",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:31253,evolve,evolved,31253,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['evolve'],['evolved']
Modifiability,"836///; 1837/// A simple modification of the ideas described above can be used for the; 1838/// comparison of the usual (unweighted) and weighted histograms. Let us; 1839/// denote the number of events in the ith bin in the unweighted; 1840/// histogram as ni and the common weight of events in the ith bin of the; 1841/// weighted histogram as wi. The total number of events in the; 1842/// unweighted histogram is equal to; 1843///\f[; 1844/// N = \sum_{i=1}^{r} n_{i}; 1845///\f]; 1846/// and the total weight of events in the weighted histogram is equal to; 1847///\f[; 1848/// W = \sum_{i=1}^{r} w_{i}; 1849///\f]; 1850/// Let us formulate the hypothesis of identity of an unweighted histogram; 1851/// to a weighted histogram so that there exist r constants p1,...,pr, such; 1852/// that; 1853///\f[; 1854/// \sum_{i=1}^{r} p_{i} = 1; 1855///\f]; 1856/// for the unweighted histogram. The weight wi is a random variable with a; 1857/// distribution approximated by the normal probability distribution; 1858/// \f$ N(Wp_{i},\sigma_{i}^{2}) \f$ where \f$ \sigma_{i}^{2} \f$ is the variance of the weight wi.; 1859/// If we replace the variance \f$ \sigma_{i}^{2} \f$; 1860/// with estimate \f$ s_{i}^{2} \f$ (sum of squares of weights of; 1861/// events in the ith bin) and the hypothesis of identity is valid, then the; 1862/// maximum likelihood estimator of pi,i=1,...,r, is; 1863///\f[; 1864/// \hat{p}_{i} = \frac{Ww_{i}-Ns_{i}^{2}+\sqrt{(Ww_{i}-Ns_{i}^{2})^{2}+4W^{2}s_{i}^{2}n_{i}}}{2W^{2}}; 1865///\f]; 1866/// We may then use the test statistic; 1867///\f[; 1868/// X^{2} = \sum_{i=1}^{r} \frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r} \frac{(w_{i}-W\hat{p}_{i})^{2}}{s_{i}^{2}}; 1869///\f]; 1870/// and it has approximately a \f$ \sigma^{2}_{(r-1)} \f$ distribution [2]. This test, as well; 1871/// as the original one [3], has a restriction on the expected frequencies. The; 1872/// expected frequencies recommended for the weighted histogram is more than 25.; 1873/// T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:73469,variab,variable,73469,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"84 if (new_dom->config[idx] != NULL) {; 20385 /* Duplicate option: Later values overwrite earlier ones. */; 20386 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 20387 mg_free(new_dom->config[idx]);; 20388 }; 20389 new_dom->config[idx] = mg_strdup_ctx(value, ctx);; 20390 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 20391 }; 20392 ; 20393 /* Authentication domain is mandatory */; 20394 /* TODO: Maybe use a new option hostname? */; 20395 if (!new_dom->config[AUTHENTICATION_DOMAIN]) {; 20396 mg_cry_ctx_internal(ctx, ""%s"", ""authentication domain required"");; 20397 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20398 mg_snprintf(NULL,; 20399 NULL, /* No truncation check for error buffers */; 20400 error->text,; 20401 error->text_buffer_size,; 20402 ""Mandatory option %s missing"",; 20403 config_options[AUTHENTICATION_DOMAIN].name);; 20404 }; 20405 mg_free(new_dom);; 20406 return -4;; 20407 }; 20408 ; 20409 /* Set default value if needed. Take the config value from; 20410 * ctx as a default value. */; 20411 for (i = 0; config_options[i].name != NULL; i++) {; 20412 default_value = ctx->dd.config[i];; 20413 if ((new_dom->config[i] == NULL) && (default_value != NULL)) {; 20414 new_dom->config[i] = mg_strdup_ctx(default_value, ctx);; 20415 }; 20416 }; 20417 ; 20418 new_dom->handlers = NULL;; 20419 new_dom->next = NULL;; 20420 new_dom->nonce_count = 0;; 20421 new_dom->auth_nonce_mask =; 20422 (uint64_t)get_random() ^ ((uint64_t)get_random() << 31);; 20423 ; 20424#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20425 new_dom->shared_lua_websockets = NULL;; 20426#endif; 20427 ; 20428#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20429 if (!init_ssl_ctx(ctx, new_dom)) {; 20430 /* Init SSL failed */; 20431 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20432 mg_snprintf(NULL,; 20433 NULL, /* No truncation check for error buffers */; 20434 error->text,; 20435 error->text_buffer_size,; 20436 ""%s"",; 20437 ""Initializing SSL context failed"");; 20438 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:610311,config,config,610311,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"85 ; 1186 if (col) {; 1187 TString colbuf;; 1188 colbuf.Form(""#%02x%02x%02x"", (int)(col->GetRed() * 255), (int)(col->GetGreen() * 255),; 1189 (int)(col->GetBlue() * 255));; 1190 node.color = colbuf.Data();; 1191 if (node.opacity == 1.); 1192 node.opacity = col->GetAlpha();; 1193 } else {; 1194 node.color.clear();; 1195 }; 1196}; 1197 ; 1198/////////////////////////////////////////////////////////////////////; 1199/// Reset shape info, which used to pack binary data; 1200 ; 1201void RGeomDescription::ResetRndrInfos(); 1202{; 1203 for (auto &s : fShapes); 1204 s.reset();; 1205}; 1206 ; 1207/////////////////////////////////////////////////////////////////////; 1208/// Produce JSON string which can be directly used with `build`; 1209/// function from JSROOT to create three.js model of configured geometry; 1210///; 1211/// Collect all information required to draw geometry on the client; 1212/// This includes list of each visible nodes, meshes and matrixes; 1213/// If @param all_nodes is true, all existing nodes will be provided,; 1214/// which allows to create complete nodes hierarchy on client side; 1215///; 1216/// Example of usage:; 1217///; 1218/// void geom() {; 1219/// auto f = TFile::Open(""file_name.root"");; 1220/// auto vol = f->Get<TGeoVolume>(""object_name"");; 1221/// ROOT::RGeomDescription desc;; 1222/// desc.Build(vol);; 1223/// std::ofstream fout(""geom.json"");; 1224/// fout << desc.ProduceJson();; 1225/// }; 1226///; 1227/// In JSROOT one loads data from JSON file and call `build` function to; 1228/// produce three.js model. Also see example in tutorials/webgui/geom/ folder; 1229 ; 1230std::string RGeomDescription::ProduceJson(bool all_nodes); 1231{; 1232 TLockGuard lock(fMutex);; 1233 ; 1234 std::vector<int> viscnt(fDesc.size(), 0);; 1235 ; 1236 int level = GetVisLevel();; 1237 ; 1238 // first count how many times each individual node appears; 1239 int numnodes = ScanNodes(true, level, [&viscnt](RGeomNode &node, std::vector<int> &, bool, int) {; 1240 viscnt[n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:36465,config,configured,36465,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configured']
Modifiability,"85 if (new_dom->config[idx] != NULL) {; 20386 /* Duplicate option: Later values overwrite earlier ones. */; 20387 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 20388 mg_free(new_dom->config[idx]);; 20389 }; 20390 new_dom->config[idx] = mg_strdup_ctx(value, ctx);; 20391 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 20392 }; 20393 ; 20394 /* Authentication domain is mandatory */; 20395 /* TODO: Maybe use a new option hostname? */; 20396 if (!new_dom->config[AUTHENTICATION_DOMAIN]) {; 20397 mg_cry_ctx_internal(ctx, ""%s"", ""authentication domain required"");; 20398 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20399 mg_snprintf(NULL,; 20400 NULL, /* No truncation check for error buffers */; 20401 error->text,; 20402 error->text_buffer_size,; 20403 ""Mandatory option %s missing"",; 20404 config_options[AUTHENTICATION_DOMAIN].name);; 20405 }; 20406 mg_free(new_dom);; 20407 return -4;; 20408 }; 20409 ; 20410 /* Set default value if needed. Take the config value from; 20411 * ctx as a default value. */; 20412 for (i = 0; config_options[i].name != NULL; i++) {; 20413 default_value = ctx->dd.config[i];; 20414 if ((new_dom->config[i] == NULL) && (default_value != NULL)) {; 20415 new_dom->config[i] = mg_strdup_ctx(default_value, ctx);; 20416 }; 20417 }; 20418 ; 20419 new_dom->handlers = NULL;; 20420 new_dom->next = NULL;; 20421 new_dom->nonce_count = 0;; 20422 new_dom->auth_nonce_mask =; 20423 (uint64_t)get_random() ^ ((uint64_t)get_random() << 31);; 20424 ; 20425#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20426 new_dom->shared_lua_websockets = NULL;; 20427#endif; 20428 ; 20429#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20430 if (!init_ssl_ctx(ctx, new_dom)) {; 20431 /* Init SSL failed */; 20432 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20433 mg_snprintf(NULL,; 20434 NULL, /* No truncation check for error buffers */; 20435 error->text,; 20436 error->text_buffer_size,; 20437 ""%s"",; 20438 ""Initializing SSL context failed"");; 20439 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:610344,config,config,610344,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"86/// Mutual Information method for non-linear correlations estimates in 2D histogram; 587/// Author: Moritz Backes, Geneva (2009); 588 ; 589Double_t TMVA::Tools::GetMutualInformation( const TH2F& h_ ); 590{; 591 Double_t hi = h_.Integral();; 592 if (hi == 0) return -1;; 593 ; 594 // copy histogram and rebin to speed up procedure; 595 TH2F h( h_ );; 596 h.RebinX(2);; 597 h.RebinY(2);; 598 ; 599 Double_t mutualInfo = 0.;; 600 Int_t maxBinX = h.GetNbinsX();; 601 Int_t maxBinY = h.GetNbinsY();; 602 for (Int_t x = 1; x <= maxBinX; x++) {; 603 for (Int_t y = 1; y <= maxBinY; y++) {; 604 Double_t p_xy = h.GetBinContent(x,y)/hi;; 605 Double_t p_x = h.Integral(x,x,1,maxBinY)/hi;; 606 Double_t p_y = h.Integral(1,maxBinX,y,y)/hi;; 607 if (p_x > 0. && p_y > 0. && p_xy > 0.){; 608 mutualInfo += p_xy*TMath::Log(p_xy / (p_x * p_y));; 609 }; 610 }; 611 }; 612 ; 613 return mutualInfo;; 614}; 615 ; 616////////////////////////////////////////////////////////////////////////////////; 617/// Compute Correlation Ratio of 2D histogram to estimate functional dependency between two variables; 618/// Author: Moritz Backes, Geneva (2009); 619 ; 620Double_t TMVA::Tools::GetCorrelationRatio( const TH2F& h_ ); 621{; 622 Double_t hi = h_.Integral();; 623 if (hi == 0.) return -1;; 624 ; 625 // copy histogram and rebin to speed up procedure; 626 TH2F h( h_ );; 627 h.RebinX(2);; 628 h.RebinY(2);; 629 ; 630 Double_t corrRatio = 0.;; 631 Double_t y_mean = h.ProjectionY()->GetMean();; 632 for (Int_t ix=1; ix<=h.GetNbinsX(); ix++) {; 633 corrRatio += (h.Integral(ix,ix,1,h.GetNbinsY())/hi)*pow((GetYMean_binX(h,ix)-y_mean),2);; 634 }; 635 corrRatio /= pow(h.ProjectionY()->GetRMS(),2);; 636 return corrRatio;; 637}; 638 ; 639////////////////////////////////////////////////////////////////////////////////; 640/// Compute the mean in Y for a given bin X of a 2D histogram; 641 ; 642Double_t TMVA::Tools::GetYMean_binX( const TH2& h, Int_t bin_x ); 643{; 644 if (h.Integral(bin_x,bin_x,1,h.GetNbinsY()) == 0.) {r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:21433,variab,variables,21433,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['variab'],['variables']
Modifiability,"87 fBuffer = 0;; 788 return 0;; 789 }; 790 memcpy(bufferRef.Buffer(),fBuffer,fKeylen);; 791 } else {; 792 fBuffer = bufferRef.Buffer();; 793 if( !ReadFile() ) { //Read object structure from file; 794 ; 795 fBuffer = 0;; 796 return 0;; 797 }; 798 }; 799 fBuffer = storeBuffer;; 800 ; 801 // get version of key; 802 bufferRef.SetBufferOffset(sizeof(fNbytes));; 803 Version_t kvers = bufferRef.ReadVersion();; 804 ; 805 bufferRef.SetBufferOffset(fKeylen);; 806 TObject *tobj = 0;; 807 // Create an instance of this class; 808 ; 809 char *pobj = (char*)cl->New();; 810 if (!pobj) {; 811 Error(""ReadObj"", ""Cannot create new object of class %s"", fClassName.Data());; 812 return 0;; 813 }; 814 Int_t baseOffset = cl->GetBaseClassOffset(TObject::Class());; 815 if (baseOffset==-1) {; 816 // cl does not inherit from TObject.; 817 // Since this is not possible yet, the only reason we could reach this code; 818 // is because something is screw up in the ROOT code.; 819 Fatal(""ReadObj"",""Incorrect detection of the inheritance from TObject for class %s.\n"",; 820 fClassName.Data());; 821 }; 822 tobj = (TObject*)(pobj+baseOffset);; 823 if (kvers > 1); 824 bufferRef.MapObject(pobj,cl); //register obj in map to handle self reference; 825 ; 826 if (fObjlen > fNbytes-fKeylen) {; 827 char *objbuf = bufferRef.Buffer() + fKeylen;; 828 UChar_t *bufcur = (UChar_t *)&compressedBuffer[fKeylen];; 829 Int_t nin, nout = 0, nbuf;; 830 Int_t noutot = 0;; 831 while (1) {; 832 Int_t hc = R__unzip_header(&nin, bufcur, &nbuf);; 833 if (hc!=0) break;; 834 R__unzip(&nin, bufcur, &nbuf, (unsigned char*) objbuf, &nout);; 835 if (!nout) break;; 836 noutot += nout;; 837 if (noutot >= fObjlen) break;; 838 bufcur += nin;; 839 objbuf += nout;; 840 }; 841 compressedBuffer.reset(nullptr);; 842 if (nout) {; 843 tobj->Streamer(bufferRef); //does not work with example 2 above; 844 } else {; 845 // Even-though we have a TObject, if the class is emulated the virtual; 846 // table may not be 'right', so let's go via the TClass.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:29235,inherit,inheritance,29235,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"87 of file TSessionViewer.cxx. ◆ ShowStatus(). void TSessionViewer::ShowStatus ; (; ). Retrieve and display Proof status. ; Definition at line 5454 of file TSessionViewer.cxx. ◆ StartupMessage(). void TSessionViewer::StartupMessage ; (; char * ; msg, . Bool_t ; stat, . Int_t ; curr, . Int_t ; total . ). Handle startup message (connection progress) coming from Proof session. ; Definition at line 5490 of file TSessionViewer.cxx. ◆ StartViewer(). void TSessionViewer::StartViewer ; (; ). Start TreeViewer from selected TChain. ; Definition at line 5265 of file TSessionViewer.cxx. ◆ Streamer(). void TSessionViewer::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGMainFrame. ◆ StreamerNVirtual(). void TSessionViewer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 631 of file TSessionViewer.h. ◆ Terminate(). void TSessionViewer::Terminate ; (; ). Terminate Session : save configuration, clean temporary files and close Proof connections. ; Definition at line 4918 of file TSessionViewer.cxx. ◆ UpdateListOfPackages(). void TSessionViewer::UpdateListOfPackages ; (; ). Update the list of packages. ; Definition at line 5324 of file TSessionViewer.cxx. ◆ UpdateListOfProofs(). void TSessionViewer::UpdateListOfProofs ; (; ). Update list of existing Proof sessions. ; Definition at line 3904 of file TSessionViewer.cxx. ◆ UpdateListOfSessions(). void TSessionViewer::UpdateListOfSessions ; (; ). Update list of existing Proof sessions. ; Definition at line 4128 of file TSessionViewer.cxx. ◆ WriteConfiguration(). void TSessionViewer::WriteConfiguration ; (; const char * ; filename = nullptr). Save actual configuration in config file ""filename"". ; Definition at line 4205 of file TSessionViewer.cxx. Member Data Documentation. ◆ fActDesc. TSessionDescription* TSessionViewer::fActDesc. private . Definition at line 530 of file TSessionViewer.h. ◆ fActFrame. TGFrame* TSessionViewer::fActFrame.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:50415,config,configuration,50415,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['config'],['configuration']
Modifiability,87.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82330,config,configuration,82330,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"89; TMVA::MethodBase::EWeightFileTypeEWeightFileTypeDefinition MethodBase.h:122; TMVA::MethodBase::kTEXT@ kTEXTDefinition MethodBase.h:122; TMVA::MethodBase::kROOT@ kROOTDefinition MethodBase.h:122; TMVA::MethodBase::fMeanBDouble_t fMeanBmean (background)Definition MethodBase.h:662; TMVA::MethodBase::GetTransformationHandlerconst TransformationHandler & GetTransformationHandler(Bool_t takeReroutedIfAvailable=true) constDefinition MethodBase.h:398; TMVA::MethodBase::fNsmoothMVAPdfInt_t fNsmoothMVAPdfDefinition MethodBase.h:727; TMVA::MethodBase::SetSignalReferenceCutOrientationvoid SetSignalReferenceCutOrientation(Double_t cutOrientation)Definition MethodBase.h:365; TMVA::MethodBase::fBaseDirTDirectory * fBaseDirDefinition MethodBase.h:625; TMVA::MethodBase::fIgnoreNegWeightsInTrainingBool_t fIgnoreNegWeightsInTrainingIf true, events with negative weights are not used in training.Definition MethodBase.h:682; TMVA::MethodBase::WriteStateToFilevoid WriteStateToFile() constwrite options and weights to file note that each one text file for the main configuration information...Definition MethodBase.cxx:1404; TMVA::MethodBase::AddClassesXMLTovoid AddClassesXMLTo(void *parent) constwrite class info to XMLDefinition MethodBase.cxx:1801; TMVA::MethodBase::GetInputLabelconst TString & GetInputLabel(Int_t i) constDefinition MethodBase.h:350; TMVA::MethodBase::GetCutOrientationECutOrientation GetCutOrientation() constDefinition MethodBase.h:552; TMVA::MethodBase::fRankingRanking * fRankingDefinition MethodBase.h:587; TMVA::MethodBase::fTrainHistoryTrainingHistory fTrainHistoryDefinition MethodBase.h:425; TMVA::MethodBase::SetMethodBaseDirvoid SetMethodBaseDir(TDirectory *methodDir)Definition MethodBase.h:374; TMVA::MethodBase::AddClassifierOutputvirtual void AddClassifierOutput(Types::ETreeType type)prepare tree branch with the method's discriminating variableDefinition MethodBase.cxx:869; TMVA::MethodBase::fMVAPdfBPDF * fMVAPdfBbackground MVA PDFDefinition MethodBase.h:646; TMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:63792,config,configuration,63792,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['config'],['configuration']
Modifiability,"9 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classifier: DL_CPU; TH1.Print Name = TrainingHistory_DL_CPU_trainingError, Entries= 0, Total sum= 7.41943; TH1.Print Name = TrainingHistory_DL_CPU_valError, Entries= 0, Total sum= 7.13905; Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.weights.xml␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_MLP.wei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:17944,variab,variable,17944,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variable']
Modifiability,9 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83292,config,configuration,83292,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"9 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLFunctionWrapper; 32#define ROOT_Math_GSLFunctionWrapper; 33 ; 34#include ""gsl/gsl_math.h""; 35 ; 36#include ""Math/GSLFunctionAdapter.h""; 37 ; 38#include <cassert>; 39 ; 40namespace ROOT {; 41namespace Math {; 42 ; 43 ; 44 ; 45typedef double ( * GSLFuncPointer ) ( double, void *);; 46typedef void ( * GSLFdfPointer ) ( double, void *, double *, double *);; 47 ; 48 ; 49/**; 50 Wrapper class to the gsl_function C structure.; 51 This class to fill the GSL C structure gsl_function with; 52 the C++ function objcet.; 53 Use the class ROOT::Math::GSLFunctionAdapter to adapt the; 54 C++ function object to the right signature (function pointer type); 55 requested by GSL; 56*/; 57class GSLFunctionWrapper {; 58 ; 59public:; 60 ; 61 GSLFunctionWrapper(); 62 {; 63 fFunc.function = nullptr;; 64 fFunc.params = nullptr;; 65 }; 66 ; 67 /// set in the GSL C struct the pointer to the function evaluation; 68 void SetFuncPointer( GSLFuncPointer f) { fFunc.function = f; }; 69 ; 70 /// set in the GSL C struct the extra-object pointer; 71 void SetParams ( void * p) { fFunc.params = p; }; 72 ; 73 /// fill the GSL C struct from a generic C++ callable object; 74 /// implementing operator(); 75 template<class FuncType>; 76 void SetFunction(const FuncType &f) {; 77 const void * p = &f;; 78 assert (p != nullptr);; 79 SetFuncPointer(&GSLFunctionAdapter<FuncType >::F);; 80 SetParams(const_cast<void *>(p));; 81 }; 82 ; 83 gsl_function * GetFunc() { return &fFunc; }; 84 ; 85 GSLFuncPointer FunctionPtr() { return fFunc.function; }; 86 ; 87 // evaluate the function; 88 double operator() (double x) { return GSL_FN_EVAL(&fFunc, x); }; 89 ; 90 /// check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html:2083,adapt,adapt,2083,doc/master/GSLFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html,1,['adapt'],['adapt']
Modifiability,"9 newFuncs.SetOwner(kTRUE);; 610 TObjArray coeffNames;; 611 coeffNames.SetOwner(kTRUE);; 612 TString fullFormula;; 613 for (int i = 0; i < formDense.Length(); ++i) {; 614 if (formDense[i] == '('); 615 parenCount++;; 616 else if (formDense[i] == ')'); 617 parenCount--;; 618 else if (formDense[i] == delimiter && parenCount == 0) {; 619 // term goes from termStart to i; 620 DefineNSUMTerm(&newFuncs, &coeffNames, fullFormula, formDense, termStart, i, xmin, xmax);; 621 termStart = i + 1;; 622 }; 623 }; 624 DefineNSUMTerm(&newFuncs, &coeffNames, fullFormula, formDense, termStart, formDense.Length(), xmin, xmax);; 625 ; 626 TF1NormSum *normSum = new TF1NormSum(fullFormula, xmin, xmax);; 627 ; 628 if (xmin == 0 && xmax == 1.) Info(""TF1"",""Created TF1NormSum object using the default [0,1] range"");; 629 ; 630 fNpar = normSum->GetNpar();; 631 fNdim = 1; // (note: may want to extend functionality in the future); 632 ; 633 fType = EFType::kCompositionFcn;; 634 fComposition = std::unique_ptr<TF1AbsComposition>(normSum);; 635 ; 636 fParams = std::make_unique<TF1Parameters>(fNpar);; 637 fParams->SetParameters(&(normSum->GetParameters())[0]); // inherit default parameters from normSum; 638 ; 639 // Parameter names; 640 for (int i = 0; i < fNpar; i++) {; 641 if (coeffNames.At(i)) {; 642 this->SetParName(i, coeffNames.At(i)->GetName());; 643 } else {; 644 this->SetParName(i, normSum->GetParName(i));; 645 }; 646 }; 647 ; 648 } else { // regular TFormula; 649 fFormula = std::make_unique<TFormula>(name, formula, false, vectorize);; 650 fNpar = fFormula->GetNpar();; 651 // TFormula can have dimension zero, but since this is a TF1 minimal dim is 1; 652 fNdim = fFormula->GetNdim() == 0 ? 1 : fFormula->GetNdim();; 653 }; 654 if (fNpar) {; 655 fParErrors.resize(fNpar);; 656 fParMin.resize(fNpar);; 657 fParMax.resize(fNpar);; 658 }; 659 // do we want really to have this un-documented feature where we accept cases where dim > 1; 660 // by setting xmin >= xmax ??; 661 if (fNdim > 1 && xmin < xmax)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:20681,extend,extend,20681,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,2,"['extend', 'inherit']","['extend', 'inherit']"
Modifiability,"9 of file BinarySearchTree.h. ◆ Min(). Float_t TMVA::BinarySearchTree::Min ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to Minimum for signal and background for each variable ; Definition at line 125 of file BinarySearchTree.h. ◆ NormalizeTree() [1/2]. void TMVA::BinarySearchTree::NormalizeTree ; (; ). Normalisation of tree. ; Definition at line 343 of file BinarySearchTree.cxx. ◆ NormalizeTree() [2/2]. void TMVA::BinarySearchTree::NormalizeTree ; (; std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator ; leftBound, . std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator ; rightBound, . UInt_t ; actDim . ). private . normalises the binary-search tree to reduce the branch length and hence speed up the search procedure (on average). ; Definition at line 286 of file BinarySearchTree.cxx. ◆ RMS() [1/2]. Float_t TMVA::BinarySearchTree::RMS ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to RMS for signal and background for each variable ; Definition at line 122 of file BinarySearchTree.h. ◆ RMS() [2/2]. Float_t TMVA::BinarySearchTree::RMS ; (; UInt_t ; var). inline . access to RMS for each variable ; Definition at line 133 of file BinarySearchTree.h. ◆ Search() [1/2]. TMVA::BinarySearchTreeNode * TMVA::BinarySearchTree::Search ; (; Event * ; event, . Node * ; node . ); const. private . Private, recursive, function for searching. ; Definition at line 201 of file BinarySearchTree.cxx. ◆ Search() [2/2]. TMVA::BinarySearchTreeNode * TMVA::BinarySearchTree::Search ; (; Event * ; event); const. search the tree to find the node matching ""event"" ; Definition at line 193 of file BinarySearchTree.cxx. ◆ SearchVolume() [1/2]. Double_t TMVA::BinarySearchTree::SearchVolume ; (; Node * ; t, . Volume * ; volume, . Int_t ; depth, . std::vector< const TMVA::BinarySearchTreeNode * > * ; events . ). private . recursively walk through the daughter nodes and add up all weights of events that lie within the given volume ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:13703,variab,variable,13703,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,1,['variab'],['variable']
Modifiability,"9 of file DataSetInfo.cxx. ◆ AddTarget() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddTarget ; (; const TString & ; expression, . const TString & ; title, . const TString & ; unit, . Double_t ; min, . Double_t ; max, . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a variable (can be a complex expression) to the set of variables used in the MV analysis ; Definition at line 272 of file DataSetInfo.cxx. ◆ AddTarget() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddTarget ; (; const VariableInfo & ; varInfo). add target with given VariableInfo ; Definition at line 292 of file DataSetInfo.cxx. ◆ AddVariable() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddVariable ; (; const TString & ; expression, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0, . char ; varType = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a variable (can be a complex expression) to the set of variables used in the MV analysis ; Definition at line 207 of file DataSetInfo.cxx. ◆ AddVariable() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddVariable ; (; const VariableInfo & ; varInfo). add variable with given VariableInfo ; Definition at line 226 of file DataSetInfo.cxx. ◆ AddVariablesArray(). void TMVA::DataSetInfo::AddVariablesArray ; (; const TString & ; expression, . Int_t ; size, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0, . char ; type = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add an array of variables identified by an expression corresponding to an array entry in the tree ; Definition at line 235 of file DataSetInfo.cxx. ◆ Class(). static TClass * TMVA::DataSetInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataSetInfo::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:19114,variab,variable,19114,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,2,['variab'],"['variable', 'variables']"
Modifiability,"9,beta2=0.999,eps=1e-07) Learning rate = 0.01 regularization 0 minimum error = 0.699892; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.548477 0.466013 0.191275 0.014698 9061.23 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.431501 0.379356 0.191981 0.0145985 9020.06 0; : 3 | 0.40241 0.379482 0.19151 0.014162 9021.8 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.408996 0.379041 0.192713 0.0146534 8985.76 0; : 5 | 0.41143 0.414316 0.191728 0.014237 9014.55 1; : 6 | 0.385066 0.478603 0.19226 0.0142608 8988.82 2; : 7 | 0.404168 0.388159 0.192259 0.0142353 8987.58 3; : 8 Minimum Test error found - save the configuration ; : 8 | 0.394387 0.377539 0.19273 0.0147168 8988.1 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.386834 0.375541 0.192946 0.014741 8978.44 0; : 10 | 0.381359 0.385778 0.195351 0.0142527 8835 1; : 11 | 0.391916 0.415129 0.193961 0.0143386 8907.56 2; : 12 | 0.390755 0.379468 0.194376 0.0145555 8897.75 3; : 13 | 0.409355 0.396515 0.195082 0.0144231 8856.49 4; : 14 | 0.400917 0.375809 0.194321 0.0142902 8887.36 5; : 15 | 0.384495 0.401588 0.194138 0.0144019 8901.96 6; : 16 | 0.400658 0.401489 0.198047 0.014311 8708.13 7; : 17 Minimum Test error found - save the configuration ; : 17 | 0.386851 0.371455 0.194859 0.0148291 8887.42 0; : 18 | 0.389253 0.376491 0.196282 0.0143574 8794.87 1; : 19 | 0.378227 0.384958 0.199317 0.0143422 8649.85 2; : 20 | 0.387911 0.390858 0.193697 0.0144047 8923.97 3; : 21 | 0.391998 0.3743 0.194318 0.0146357 8904.63 4; : 22 | 0.396695 0.384671 0.194406 0.0145452 8895.77 5; : 23 | 0.38744 0.376683 0.195092 0.0143629 8853.03 6; : 24 | 0.38501 0.377878 0.194456 0.0147282 8902.35 7; : 25 | 0.389388 0.376148 0.201694 0.0152248 858",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:48065,config,configuration,48065,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['config'],['configuration']
Modifiability,9.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81653,config,configuration,81653,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"9// //; 120// TEnv //; 121// //; 122//////////////////////////////////////////////////////////////////////////; 123 ; 124class TEnv : public TObject {; 125 ; 126private:; 127 THashList *fTable; // hash table containing env records; 128 TString fRcName; // resource file base name; 129 Bool_t fIgnoreDup; // ignore duplicates, don't issue warning; 130 ; 131 TEnv(const TEnv&) = delete;; 132 TEnv& operator=(const TEnv&) = delete;; 133 ; 134 const char *Getvalue(const char *name) const;; 135 ; 136public:; 137 TEnv(const char *name="""");; 138 virtual ~TEnv();; 139 ; 140 THashList *GetTable() const { return fTable; }; 141 Bool_t Defined(const char *name) const; 142 { return Getvalue(name) != nullptr; }; 143 ; 144 virtual const char *GetRcName() const { return fRcName; }; 145 virtual void SetRcName(const char *name) { fRcName = name; }; 146 ; 147 virtual Int_t GetValue(const char *name, Int_t dflt) const;; 148 virtual Double_t GetValue(const char *name, Double_t dflt) const;; 149 virtual const char *GetValue(const char *name, const char *dflt) const;; 150 ; 151 virtual void SetValue(const char *name, const char *value,; 152 EEnvLevel level = kEnvChange,; 153 const char *type = nullptr);; 154 virtual void SetValue(const char *name, EEnvLevel level = kEnvChange);; 155 virtual void SetValue(const char *name, Int_t value);; 156 virtual void SetValue(const char *name, Double_t value);; 157 ; 158 virtual TEnvRec *Lookup(const char *n) const;; 159 virtual Int_t ReadFile(const char *fname, EEnvLevel level);; 160 virtual Int_t WriteFile(const char *fname, EEnvLevel level = kEnvAll);; 161 virtual void Save();; 162 virtual void SaveLevel(EEnvLevel level);; 163 void Print(Option_t *option="""") const override;; 164 virtual void PrintEnv(EEnvLevel level = kEnvAll) const;; 165 Bool_t IgnoreDuplicates(Bool_t ignore);; 166 ; 167 ClassDefOverride(TEnv,2) // Handle ROOT configuration resources; 168};; 169 ; 170R__EXTERN TEnv *gEnv;; 171 ; 172#endif; R__EXTERN#define R__EXTERNDefinition DllImport.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8h_source.html:6400,config,configuration,6400,doc/master/TEnv_8h_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8h_source.html,1,['config'],['configuration']
Modifiability,"91 ; 292inline TIter TCollection::begin() const { return ++(TIter(this)); }; 293inline TIter TCollection::end() const { return TIter::End(); }; 294 ; 295namespace ROOT {; 296namespace Internal {; 297 ; 298const TCollection &EmptyCollection();; 299bool ContaineeInheritsFrom(TClass *cl, TClass *base);; 300 ; 301} // namespace Internal; 302 ; 303/// Special implementation of ROOT::RRangeCast for TCollection, including a; 304/// check that the cast target type inherits from TObject and a new constructor; 305/// that takes the TCollection by pointer.; 306/// \tparam T The new type to convert to.; 307/// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.; 308namespace Detail {; 309 ; 310template <typename T, bool isDynamic>; 311class TRangeCast : public ROOT::RRangeCast<T*, isDynamic, TCollection const&> {; 312public:; 313 TRangeCast(TCollection const& col) : ROOT::RRangeCast<T*, isDynamic, TCollection const&>{col} {; 314 static_assert(std::is_base_of<TObject, T>::value, ""Containee type must inherit from TObject"");; 315 }; 316 TRangeCast(TCollection const* col) : TRangeCast{col != nullptr ? *col : ROOT::Internal::EmptyCollection()} {}; 317};; 318 ; 319/// @brief TRangeStaticCast is an adapter class that allows the typed iteration; 320/// through a TCollection. This requires the collection to contain elements; 321/// of the type requested (or a derived class). Any deviation from this expectation; 322/// will only be caught/reported by an assert in debug builds.; 323///; 324/// This is best used with a TClonesArray, for other cases prefered TRangeDynCast.; 325///; 326/// The typical use is:; 327/// ```{.cpp}; 328/// for(auto bcl : TRangeStaticCast<TBaseClass>( *tbaseClassClonesArrayPtr )) {; 329/// ... use bcl as a TBaseClass*; 330/// }; 331/// for(auto bcl : TRangeStaticCast<TBaseClass>( tbaseClassClonesArrayPtr )) {; 332/// ... use bcl as a TBaseClass*; 333/// }; 334/// ```; 335/// \tparam T The new type to convert to.; 336template <type",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h_source.html:12254,inherit,inherit,12254,doc/master/TCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8h_source.html,2,"['adapt', 'inherit']","['adapter', 'inherit']"
Modifiability,"91 }; 3992 } else if (fType == 3) {; 3993 printf("" %-15s = %d\n"", GetName(), fNdata);; 3994 } else if (fType == 31) {; 3995 TClonesArray* clones = (TClonesArray*) object;; 3996 if (GetInfoImp()) {; 3997 GetInfoImp()->PrintValueClones(GetName(), clones, prID, fOffset, lenmax);; 3998 }; 3999 } else if (fType == 41) {; 4000 TVirtualCollectionProxy::TPushPop helper(((TBranchElement*) this)->GetCollectionProxy(), object);; 4001 if (GetInfoImp()) {; 4002 GetInfoImp()->PrintValueSTL(GetName(), ((TBranchElement*) this)->GetCollectionProxy(), prID, fOffset, lenmax);; 4003 }; 4004 } else {; 4005 if (GetInfoImp()) {; 4006 GetInfoImp()->PrintValue(GetName(), object, prID, -1, lenmax);; 4007 }; 4008 }; 4009}; 4010 ; 4011////////////////////////////////////////////////////////////////////////////////; 4012/// Unconfiguration Read Leave function.; 4013 ; 4014void TBranchElement::ReadLeavesImpl(TBuffer&); 4015{; 4016 Fatal(""ReadLeaves"",""The ReadLeaves function has not been configured for %s"",GetName());; 4017}; 4018 ; 4019////////////////////////////////////////////////////////////////////////////////; 4020/// Read leaves into i/o buffers for this branch.; 4021/// For the case where the branch is set in MakeClass mode (decomposed object).; 4022 ; 4023void TBranchElement::ReadLeavesMakeClass(TBuffer& b); 4024{; 4025 ValidateAddress();; 4026 ; 4027 if (fType == 3 || fType == 4) {; 4028 // Top level branch of a TClonesArray.; 4029 Int_t *n = (Int_t*) fAddress;; 4030 b >> n[0];; 4031 if ((n[0] < 0) || (n[0] > fMaximum)) {; 4032 if (IsMissingCollection()) {; 4033 n[0] = 0;; 4034 b.SetBufferOffset(b.Length() - sizeof(n));; 4035 } else {; 4036 Error(""ReadLeaves"", ""Incorrect size read for the container in %s\nThe size read is %d when the maximum is %d\nThe size is reset to 0 for this entry (%lld)"", GetName(), n[0], fMaximum, GetReadEntry());; 4037 n[0] = 0;; 4038 }; 4039 }; 4040 fNdata = n[0];; 4041 if (fType == 4) {; 4042 Int_t nbranches = fBranches.GetEntriesFast();; 4043 switch(fSTLtype",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:147722,config,configured,147722,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['config'],['configured']
Modifiability,"91/// Normal Constructor for Profile histograms.; 92///; 93/// The first eleven parameters are similar to TH3D::TH3D.; 94/// All values of t are accepted at filling time.; 95/// To fill a profile3D histogram, one must use TProfile3D::Fill function.; 96///; 97/// Note that when filling the profile histogram the function Fill; 98/// checks if the variable t is between fTmin and fTmax.; 99/// If a minimum or maximum value is set for the T scale before filling,; 100/// then all values below tmin or above tmax will be discarded.; 101/// Setting the minimum or maximum value for the T scale before filling; 102/// has the same effect as calling the special TProfile3D constructor below; 103/// where tmin and tmax are specified.; 104///; 105/// H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; 106/// (spread option), or e(I,J,K) if CHOPT=' ' (error on mean).; 107///; 108/// See TProfile3D::BuildOptions for explanation of parameters; 109///; 110/// see other constructors below with all possible combinations of; 111/// fix and variable bin size like in TH3D.; 112 ; 113TProfile3D::TProfile3D(const char *name,const char *title,Int_t nx,Double_t xlow,Double_t xup,Int_t ny,Double_t ylow,Double_t yup,Int_t nz, Double_t zlow,Double_t zup,Option_t *option); 114 : TH3D(name,title,nx,xlow,xup,ny,ylow,yup,nz,zlow,zup); 115{; 116 BuildOptions(0,0,option);; 117 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 118}; 119 ; 120////////////////////////////////////////////////////////////////////////////////; 121/// Create a 3-D Profile with variable bins in X , Y and Z.; 122 ; 123TProfile3D::TProfile3D(const char *name,const char *title,Int_t nx,const Double_t *xbins,Int_t ny,const Double_t *ybins,Int_t nz,const Double_t *zbins,Option_t *option); 124 : TH3D(name,title,nx,xbins,ny,ybins,nz,zbins); 125{; 126 BuildOptions(0,0,option);; 127}; 128 ; 129////////////////////////////////////////////////////////////////////////////////; 130",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:4513,variab,variable,4513,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fTypeName);; 1928 return 0;; 1929 }; 1930 ; 1931 ; 1932 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf); 1933 {; 1934 // Collection of numbers. Memberwise or not, it is all the same.; 1935 ; 1936 TConfigSTL *config = (TConfigSTL*)conf;; 1937 UInt_t start, count;; 1938 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1939 ; 1940 std::vector<float> *const vec = (std::vector<float>*)(((char*)addr)+config->fOffset);; 1941 Int_t nvalues;; 1942 buf.ReadInt(nvalues);; 1943 vec->resize(nvalues);; 1944 ; 1945#ifdef R__VISUAL_CPLUSPLUS; 1946 if (nvalues <= 0) {; 1947 buf.CheckByteCount(start,count,config->fTypeName);; 1948 return 0;; 1949 }; 1950#endif; 1951 float *begin = &(*vec->begin());; 1952 buf.ReadFastArrayFloat16(begin, nvalues);; 1953 ; 1954 buf.CheckByteCount(start,count,config->fTypeName);; 1955 return 0;; 1956 }; 1957 ; 1958 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 1959 {; 1960 // Collection of numbers. Memberwise or not, it is all the same.; 1961 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vector<double> *const vec = (std::vector<double>*)(((char*)addr)+config->fOffset);; 1967 Int_t nvalues;; 1968 buf.ReadInt(nvalues);; 1969 vec->resize(nvalues);; 1970 ; 1971#ifdef R__VISUAL_CPLUSPLUS; 1972 if (nvalues <= 0) {; 1973 buf.CheckByteCount(start,count,config->fTypeName);; 1974 return 0;; 1975 }; 1976#endif; 1977 double *begin = &(*vec->begin());; 1978 buf.ReadFastArrayDouble32(begin, nvalues);; 1979 ; 1980 buf.Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:81142,config,config,81142,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,91864 0.689576 0.189646 0.0148842 14648.6 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.689168 0.677551 0.190642 0.015026 14577.3 0; : 5 | 0.686885 0.678678 0.189865 0.0148775 14629.7 1; : 6 | 0.68905 0.681357 0.189104 0.014885 14694.1 2; : 7 | 0.687138 0.683485 0.19023 0.0152893 14633.6 3; : 8 | 0.686429 0.685529 0.189996 0.0147979 14612 4; : 9 | 0.685179 0.683467 0.190317 0.0152552 14623.4 5; : 10 Minimum Test error found - save the configuration ; : 10 | 0.684262 0.673795 0.18992 0.0153518 14664.7 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.682907 0.671521 0.194162 0.0155002 14328.7 0; : 12 | 0.693473 0.677553 0.188937 0.0147664 14698.2 1; : 13 | 0.695581 0.671789 0.190501 0.0149406 14581.9 2; : 14 | 0.68024 0.680521 0.188432 0.0146998 14735.3 3; : 15 | 0.68435 0.688062 0.189615 0.0147881 14643.1 4; : 16 | 0.686476 0.675588 0.190015 0.0152195 14645.7 5; : 17 | 0.677004 0.674528 0.190369 0.0146787 14571.1 6; : 18 Minimum Test error found - save the configuration ; : 18 | 0.670403 0.662 0.188594 0.0151297 14758.1 0; : 19 | 0.673327 0.684121 0.189356 0.0146185 14650.5 1; : 20 | 0.68729 0.678527 0.188558 0.0148948 14741.2 2; : ; : Elapsed time for training with 3200 events: 3.82 sec ; : Evaluate deep neural network on CPU using batches with size = 256; : ; TMVA_DNN : [dataset] : Evaluation of TMVA_DNN on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.0999 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: PyKeras_LSTM for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ PyKeras_LSTM ] :␛[0m; : ; : Keras is a high-level API for the Theano and Tensorflow packages.; : This method wraps the training and predi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:19609,config,configuration,19609,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"94 ; 16295 (void)ad;; 16296 (void)arg;; 16297 ; 16298 if ((conn == NULL) || (conn->phys_ctx == NULL)) {; 16299 DEBUG_ASSERT(0);; 16300 return SSL_TLSEXT_ERR_NOACK;; 16301 }; 16302 conn->dom_ctx = &(conn->phys_ctx->dd);; 16303 ; 16304 /* Old clients (Win XP) will not support SNI. Then, there; 16305 * is no server name available in the request - we can; 16306 * only work with the default certificate.; 16307 * Multiple HTTPS hosts on one IP+port are only possible; 16308 * with a certificate containing all alternative names.; 16309 */; 16310 if ((servername == NULL) || (*servername == 0)) {; 16311 DEBUG_TRACE(""%s"", ""SSL connection not supporting SNI"");; 16312 mg_lock_context(conn->phys_ctx);; 16313 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16314 mg_unlock_context(conn->phys_ctx);; 16315 return SSL_TLSEXT_ERR_NOACK;; 16316 }; 16317 ; 16318 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16319 ; 16320 while (conn->dom_ctx) {; 16321 if (!mg_strcasecmp(servername,; 16322 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16323 /* Found matching domain */; 16324 DEBUG_TRACE(""TLS domain %s found"",; 16325 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16326 break;; 16327 }; 16328 mg_lock_context(conn->phys_ctx);; 16329 conn->dom_ctx = conn->dom_ctx->next;; 16330 mg_unlock_context(conn->phys_ctx);; 16331 }; 16332 ; 16333 if (conn->dom_ctx == NULL) {; 16334 /* Default domain */; 16335 DEBUG_TRACE(""TLS default domain %s used"",; 16336 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16337 conn->dom_ctx = &(conn->phys_ctx->dd);; 16338 }; 16339 mg_lock_context(conn->phys_ctx);; 16340 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16341 mg_unlock_context(conn->phys_ctx);; 16342 return SSL_TLSEXT_ERR_OK;; 16343}; 16344 ; 16345 ; 16346#if defined(USE_ALPN); 16347static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16348static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16349 alpn_proto_list + 3 + 8,; 16350 NULL};; 16351#if defined(USE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:482513,config,config,482513,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['config'],['config']
Modifiability,"94 ; 95 typedef ROOT::Math::IMultiGenFunction BaseFunc;; 96 typedef ROOT::Math::IMultiGradFunction BaseGradFunc;; 97 ; 98 ; 99 /**; 100 Default constructor; 101 */; 102 Fitter () {}; 103 ; 104 /**; 105 Constructor from a result; 106 */; 107 Fitter (const std::shared_ptr<FitResult> & result);; 108 ; 109 ; 110 /**; 111 Destructor.; 112 Make it virtual in case users derive from Fitter class to extend it by adding new methods.; 113 This is needed to avoid a warning seen when doing from Python; 114 (see ROOT issue [#12391](https://github.com/root-project/root/issues/12391) ).; 115 Note that the Fitter class does not provide virtual functions to be re-implemented by derived classes.; 116 */; 117 virtual ~Fitter () {}; 118 ; 119 /**; 120 Copy constructor (disabled, class is not copyable); 121 */; 122 Fitter(const Fitter &) = delete;; 123 ; 124 /**; 125 Assignment operator (disabled, class is not copyable); 126 */; 127 Fitter & operator = (const Fitter &) = delete;; 128 ; 129 ; 130public:; 131 ; 132 /**; 133 fit a data set using any generic model function; 134 If data set is binned a least square fit is performed; 135 If data set is unbinned a maximum likelihood fit (not extended) is done; 136 Pre-requisite on the function:; 137 it must implement the 1D or multidimensional parametric function interface.; 138 Note that both the input data and the function object are copied by the Fitter.; 139 */; 140 template <class Data, class Function,; 141 class cond = typename std::enable_if<!(std::is_same<Function, ROOT::EExecutionPolicy>::value ||; 142 std::is_same<Function, int>::value),; 143 Function>::type>; 144 bool Fit(const Data &data, const Function &func,; 145 const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential); 146 {; 147 SetFunction(func);; 148 return Fit(data, executionPolicy);; 149 }; 150 ; 151 /**; 152 Fit a binned data set using a least square fit.; 153 Note that the provided input data are copied in the Fitter class.; 154 Use the next func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:4454,extend,extended,4454,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['extend'],['extended']
Modifiability,"94) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 16 of file TSpectrum2Transform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSpectrum2Transform ();  Default constructor. ;  ;  TSpectrum2Transform (Int_t sizeX, Int_t sizeY);  The constructor creates TSpectrum2Transform object. ;  ;  ~TSpectrum2Transform () override;  Destructor. ;  ; void Enhance (const Double_t **fSource, Double_t **fDest);  This function transforms the source spectrum. ;  ; void FilterZonal (const Double_t **fSource, Double_t **fDest);  This function transforms the source spe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:2340,inherit,inherited,2340,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['inherit'],['inherited']
Modifiability,"945/// Static function returning `gStyle->GetAxisMaxDigits()`.; 946 ; 947Int_t TGaxis::GetMaxDigits(); 948{; 949 return gStyle->GetAxisMaxDigits();; 950}; 951 ; 952////////////////////////////////////////////////////////////////////////////////; 953/// Internal method to import TAxis attributes to this TGaxis.; 954 ; 955void TGaxis::ImportAxisAttributes(TAxis *axis); 956{; 957 // cleanup previously configured custom labels; 958 CleanupModLabs();; 959 ; 960 fAxis = axis;; 961 SetLineColor(axis->GetAxisColor());; 962 SetTextColor(axis->GetTitleColor());; 963 SetTextFont(axis->GetTitleFont());; 964 SetLabelColor(axis->GetLabelColor());; 965 SetLabelFont(axis->GetLabelFont());; 966 SetLabelSize(axis->GetLabelSize());; 967 SetLabelOffset(axis->GetLabelOffset());; 968 SetTickSize(axis->GetTickLength());; 969 SetTitle(axis->GetTitle());; 970 SetTitleOffset(axis->GetTitleOffset());; 971 SetTitleSize(axis->GetTitleSize());; 972 SetBit(TAxis::kCenterTitle, axis->TestBit(TAxis::kCenterTitle));; 973 SetBit(TAxis::kCenterLabels, axis->TestBit(TAxis::kCenterLabels));; 974 SetBit(TAxis::kRotateTitle, axis->TestBit(TAxis::kRotateTitle));; 975 SetBit(TAxis::kNoExponent, axis->TestBit(TAxis::kNoExponent));; 976 SetBit(TAxis::kTickPlus, axis->TestBit(TAxis::kTickPlus));; 977 SetBit(TAxis::kTickMinus, axis->TestBit(TAxis::kTickMinus));; 978 SetBit(TAxis::kMoreLogLabels, axis->TestBit(TAxis::kMoreLogLabels));; 979 if (axis->GetDecimals()) SetBit(TAxis::kDecimals); //the bit is in TAxis::fAxis2; 980 SetTimeFormat(axis->GetTimeFormat());; 981}; 982 ; 983////////////////////////////////////////////////////////////////////////////////; 984/// Draw this axis with its current attributes.; 985 ; 986void TGaxis::Paint(Option_t *); 987{; 988 if (!gPad) return;; 989 ; 990 Double_t wmin = fWmin;; 991 Double_t wmax = fWmax;; 992 Int_t ndiv = fNdiv;; 993 ; 994 // following code required to support toggle of lin/log scales; 995 Double_t x1 = gPad->XtoPad(fX1);; 996 Double_t y1 = gPad->YtoPad(fY1);; 9",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:32989,config,configured,32989,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['config'],['configured']
Modifiability,"949/// - pary2p(i) y value of point i; 5950///; 5951/// - coef2p(1...3) coefficients of the fitted parabola; 5952/// - y=coef2p(1) + coef2p(2)*x + coef2p(3)*x**2; 5953/// - sdev2p= variance; 5954/// - method : chi**2 = min equation solved explicitly; 5955 ; 5956void TMinuit::mnpfit(Double_t *parx2p, Double_t *pary2p, Int_t npar2p, Double_t *coef2p, Double_t &sdev2p); 5957{; 5958 /* Local variables */; 5959 Double_t a, f, s, t, y, s2, x2, x3, x4, y2, cz[3], xm, xy, x2y;; 5960 x2 = x3 = 0;; 5961 Int_t i;; 5962 ; 5963 /* Parameter adjustments */; 5964 --coef2p;; 5965 --pary2p;; 5966 --parx2p;; 5967 ; 5968 /* Function Body */; 5969 for (i = 1; i <= 3; ++i) { cz[i-1] = 0; }; 5970 sdev2p = 0;; 5971 if (npar2p < 3) goto L10;; 5972 f = (Double_t) (npar2p);; 5973// center x values for reasons of machine precision; 5974 xm = 0;; 5975 for (i = 1; i <= npar2p; ++i) { xm += parx2p[i]; }; 5976 xm /= f;; 5977 x2 = 0;; 5978 x3 = 0;; 5979 x4 = 0;; 5980 y = 0;; 5981 y2 = 0;; 5982 xy = 0;; 5983 x2y = 0;; 5984 for (i = 1; i <= npar2p; ++i) {; 5985 s = parx2p[i] - xm;; 5986 t = pary2p[i];; 5987 s2 = s*s;; 5988 x2 += s2;; 5989 x3 += s*s2;; 5990 x4 += s2*s2;; 5991 y += t;; 5992 y2 += t*t;; 5993 xy += s*t;; 5994 x2y += s2*t;; 5995 }; 5996 a = (f*x4 - x2*x2)*x2 - f*(x3*x3);; 5997 if (a == 0) goto L10;; 5998 cz[2] = (x2*(f*x2y - x2*y) - f*x3*xy) / a;; 5999 cz[1] = (xy - x3*cz[2]) / x2;; 6000 cz[0] = (y - x2*cz[2]) / f;; 6001 if (npar2p == 3) goto L6;; 6002 sdev2p = y2 - (cz[0]*y + cz[1]*xy + cz[2]*x2y);; 6003 if (sdev2p < 0) sdev2p = 0;; 6004 sdev2p /= f - 3;; 6005L6:; 6006 cz[0] += xm*(xm*cz[2] - cz[1]);; 6007 cz[1] -= xm*2*cz[2];; 6008L10:; 6009 for (i = 1; i <= 3; ++i) { coef2p[i] = cz[i-1]; }; 6010}; 6011 ; 6012////////////////////////////////////////////////////////////////////////////////; 6013/// Calculates the internal parameter value PINTI; 6014///; 6015/// corresponding to the external value PEXTI for parameter I.; 6016 ; 6017void TMinuit::mnpint(Double_t &pexti, Int_t i1, Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:193917,variab,variables,193917,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"94939 a=0.0002833, ; prevFCN = 1659.944972 a=-0.0002833, ; prevFCN = 1659.919376 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001207, ; prevFCN = 1659.902797 a=-0.001266, ; prevFCN = 1659.902798 [#1] INFO:Minimization -- Command timer: Real time 0:00:02, CP time 2.710; [#1] INFO:Minimization -- Session timer: Real time 0:00:02, CP time 2.710; a=-0.001237, ; prevFCN = 1659.902781 a=-0.001207, ; prevFCN = 1659.902797 a=-0.001266, ; prevFCN = 1659.902798 a=-0.001231, ; prevFCN = 1659.902782 a=-0.001243, ; prevFCN = 1659.902782 [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.960; [#1] INFO:Minimization -- Session timer: Real time 0:00:03, CP time 3.670, 2 slices; a=-0.001237, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:NumericIntegration -- RooAdaptiveIntegratorND::dtor(model) WARNING: Number of suppressed warningings about integral evaluations where target precision was not reached is 17; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(x,y,z); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y,z]_Norm[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(y,z); [#0] WARNING:NumericIntegration -- RooAdaptiveIntegratorND::dtor(model) WARNING: Number of suppressed warningings about integral evaluations where target precision was not reached is 1; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf903_numintcache.py. tutorialsroofitrf903_numintcache.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf903__numintcache_8py.html:5855,variab,variables,5855,doc/master/rf903__numintcache_8py.html,https://root.cern,https://root.cern/doc/master/rf903__numintcache_8py.html,1,['variab'],['variables']
Modifiability,"95 ; 16296 (void)ad;; 16297 (void)arg;; 16298 ; 16299 if ((conn == NULL) || (conn->phys_ctx == NULL)) {; 16300 DEBUG_ASSERT(0);; 16301 return SSL_TLSEXT_ERR_NOACK;; 16302 }; 16303 conn->dom_ctx = &(conn->phys_ctx->dd);; 16304 ; 16305 /* Old clients (Win XP) will not support SNI. Then, there; 16306 * is no server name available in the request - we can; 16307 * only work with the default certificate.; 16308 * Multiple HTTPS hosts on one IP+port are only possible; 16309 * with a certificate containing all alternative names.; 16310 */; 16311 if ((servername == NULL) || (*servername == 0)) {; 16312 DEBUG_TRACE(""%s"", ""SSL connection not supporting SNI"");; 16313 mg_lock_context(conn->phys_ctx);; 16314 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16315 mg_unlock_context(conn->phys_ctx);; 16316 return SSL_TLSEXT_ERR_NOACK;; 16317 }; 16318 ; 16319 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16320 ; 16321 while (conn->dom_ctx) {; 16322 if (!mg_strcasecmp(servername,; 16323 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16324 /* Found matching domain */; 16325 DEBUG_TRACE(""TLS domain %s found"",; 16326 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16327 break;; 16328 }; 16329 mg_lock_context(conn->phys_ctx);; 16330 conn->dom_ctx = conn->dom_ctx->next;; 16331 mg_unlock_context(conn->phys_ctx);; 16332 }; 16333 ; 16334 if (conn->dom_ctx == NULL) {; 16335 /* Default domain */; 16336 DEBUG_TRACE(""TLS default domain %s used"",; 16337 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16338 conn->dom_ctx = &(conn->phys_ctx->dd);; 16339 }; 16340 mg_lock_context(conn->phys_ctx);; 16341 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16342 mg_unlock_context(conn->phys_ctx);; 16343 return SSL_TLSEXT_ERR_OK;; 16344}; 16345 ; 16346 ; 16347#if defined(USE_ALPN); 16348static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16349static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16350 alpn_proto_list + 3 + 8,; 16351 NULL};; 16352#if defined(USE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:482546,config,config,482546,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['config']
Modifiability,"96 // Booking Seed; 2297 BookMethod(seedloader, theMethod, methodTitle, theOption);; 2298 ; 2299 // Train/Test/Evaluation; 2300 TrainAllMethods();; 2301 TestAllMethods();; 2302 EvaluateAllMethods();; 2303 ; 2304 // getting ROC; 2305 ROC[x] = GetROCIntegral(xbitset.to_string(), methodTitle);; 2306 ; 2307 // cleaning information to process sub-seeds; 2308 TMVA::MethodBase *smethod = dynamic_cast<TMVA::MethodBase *>(fMethodsMap[xbitset.to_string().c_str()][0][0]);; 2309 TMVA::ResultsClassification *sresults = (TMVA::ResultsClassification *)smethod->Data()->GetResults(; 2310 smethod->GetMethodName(), Types::kTesting, Types::kClassification);; 2311 delete sresults;; 2312 delete seedloader;; 2313 this->DeleteAllMethods();; 2314 ; 2315 fMethodsMap.clear();; 2316 // removing global result because it is requiring a lot of RAM for all seeds; 2317 }; 2318 ; 2319 for (x = 0; x < range; x++) {; 2320 SROC = ROC[x];; 2321 for (uint32_t i = 0; i < VIBITS; ++i) {; 2322 if (x & (uint64_t(1) << i)) {; 2323 y = x & ~(1 << i);; 2324 std::bitset<VIBITS> ybitset(y);; 2325 // need at least one variable; 2326 // NOTE: if sub-seed is zero then is the special case; 2327 // that count in xbitset is 1; 2328 uint32_t ny = static_cast<uint32_t>( log(x - y) / 0.693147 ) ;; 2329 if (y == 0) {; 2330 importances[ny] = SROC - 0.5;; 2331 continue;; 2332 }; 2333 ; 2334 // getting ROC; 2335 SSROC = ROC[y];; 2336 importances[ny] += SROC - SSROC;; 2337 // cleaning information; 2338 }; 2339 }; 2340 }; 2341 std::cout << ""--- Variable Importance Results (All)"" << std::endl;; 2342 return GetImportance(nbits, importances, varNames);; 2343}; 2344 ; 2345static uint64_t sum(uint64_t i); 2346{; 2347 // add a limit for overflows; 2348 if (i > 62) return 0;; 2349 return static_cast<uint64_t>( std::pow(2, i + 1)) - 1;; 2350 // uint64_t _sum = 0;; 2351 // for (uint64_t n = 0; n < i; n++); 2352 // _sum += pow(2, n);; 2353 // return _sum;; 2354}; 2355 ; 2356/////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:97676,variab,variable,97676,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"96 return mg_get_var2(data, data_len, name, dst, dst_len, 0);; 6997}; 6998 ; 6999 ; 7000int; 7001mg_get_var2(const char *data,; 7002 size_t data_len,; 7003 const char *name,; 7004 char *dst,; 7005 size_t dst_len,; 7006 size_t occurrence); 7007{; 7008 const char *p, *e, *s;; 7009 size_t name_len;; 7010 int len;; 7011 ; 7012 if ((dst == NULL) || (dst_len == 0)) {; 7013 len = -2;; 7014 } else if ((data == NULL) || (name == NULL) || (data_len == 0)) {; 7015 len = -1;; 7016 dst[0] = '\0';; 7017 } else {; 7018 name_len = strlen(name);; 7019 e = data + data_len;; 7020 len = -1;; 7021 dst[0] = '\0';; 7022 ; 7023 /* data is ""var1=val1&var2=val2..."". Find variable first */; 7024 for (p = data; p + name_len < e; p++) {; 7025 if (((p == data) || (p[-1] == '&')) && (p[name_len] == '='); 7026 && !mg_strncasecmp(name, p, name_len) && 0 == occurrence--) {; 7027 /* Point p to variable value */; 7028 p += name_len + 1;; 7029 ; 7030 /* Point s to the end of the value */; 7031 s = (const char *)memchr(p, '&', (size_t)(e - p));; 7032 if (s == NULL) {; 7033 s = e;; 7034 }; 7035 DEBUG_ASSERT(s >= p);; 7036 if (s < p) {; 7037 return -3;; 7038 }; 7039 ; 7040 /* Decode variable into destination buffer */; 7041 len = mg_url_decode(p, (int)(s - p), dst, (int)dst_len, 1);; 7042 ; 7043 /* Redirect error code from -1 to -2 (destination buffer too; 7044 * small). */; 7045 if (len == -1) {; 7046 len = -2;; 7047 }; 7048 break;; 7049 }; 7050 }; 7051 }; 7052 ; 7053 return len;; 7054}; 7055 ; 7056 ; 7057/* split a string ""key1=val1&key2=val2"" into key/value pairs */; 7058int; 7059mg_split_form_urlencoded(char *data,; 7060 struct mg_header *form_fields,; 7061 unsigned num_form_fields); 7062{; 7063 char *b;; 7064 int i;; 7065 int num = 0;; 7066 ; 7067 if (data == NULL) {; 7068 /* parameter error */; 7069 return -1;; 7070 }; 7071 ; 7072 if ((form_fields == NULL) && (num_form_fields == 0)) {; 7073 /* determine the number of expected fields */; 7074 if (data[0] == 0) {; 7075 return 0;; 7076 }; 7077 /* count ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:202757,variab,variable,202757,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,3,['variab'],['variable']
Modifiability,"9616 TBasket CX = 1.08; 20010404/150441 At:214574 N=29075 TBasket CX = 1.10; 20010404/150441 At:243649 N=9583 TBasket CX = 3.34; 20010404/150442 At:253232 N=28324 TBasket CX = 1.13; 20010404/150442 At:281556 N=29641 TBasket CX = 1.08; 20010404/150442 At:311197 N=29633 TBasket CX = 1.08; 20010404/150442 At:340830 N=29091 TBasket CX = 1.10; 20010404/150442 At:369921 N=10341 TBasket CX = 3.09; 20010404/150442 At:380262 N=509 TH1F CX = 1.93; 20010404/150442 At:380771 N=1769 TH2F CX = 4.32; 20010404/150442 At:382540 N=1849 TProfile CX = 1.65; 20010404/150442 At:384389 N=18434 TNtuple CX = 4.51; 20010404/150442 At:402823 N=307 KeysList; 20010404/150443 At:403130 N=4548 StreamerInfo CX = 3.65; 20010404/150443 At:407678 N=86 FreeSegments; 20010404/150443 At:407764 N=1 END; If the parameter opt contains ""forComp"", the Date/Time is omitted and the decompressed size is also printed.; Record_Adress Logical_Record_Length Key_Length Object_Record_Length ClassName CompressionFactor; If the parameter opt contains ""extended"", the name and title of the keys are added: 20200820/155031 At:100 N=180 TFile name: hsimple.root title: Demo ROOT file with histograms 220200820/155032 At:280 N=28880 TBasket CX = 1.11 name: random title: ntuple 220200820/155032 At:29160 N=29761 TBasket CX = 1.08 name: px title: ntuple 220200820/155032 At:58921 N=29725 TBasket CX = 1.08 name: py title: ntuple 220200820/155032 At:88646 N=29209 TBasket CX = 1.10 name: pz title: ntuple 220200820/155032 At:117855 N=10197 TBasket CX = 3.14 name: i title: ntuple ... 20200820/155032 At:405110 N=808 TNtuple CX = 3.53 name: ntuple title: Demo ntuple 20200820/155706 At:405918 N=307 KeysList name: hsimple.root title: Demo ROOT file with histograms 20200820/155032 At:406225 N=8556 StreamerInfo CX = 3.42 name: StreamerInfo title: Doubly linked list 20200820/155708 At:414781 N=86 FreeSegments name: hsimple.root title: Demo ROOT file with histograms 20200820/155708 At:414867 N=1 END; Note: The combined size of the classname, n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:62791,extend,extended,62791,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,4,['extend'],['extended']
Modifiability,"97 return mg_get_var2(data, data_len, name, dst, dst_len, 0);; 6998}; 6999 ; 7000 ; 7001int; 7002mg_get_var2(const char *data,; 7003 size_t data_len,; 7004 const char *name,; 7005 char *dst,; 7006 size_t dst_len,; 7007 size_t occurrence); 7008{; 7009 const char *p, *e, *s;; 7010 size_t name_len;; 7011 int len;; 7012 ; 7013 if ((dst == NULL) || (dst_len == 0)) {; 7014 len = -2;; 7015 } else if ((data == NULL) || (name == NULL) || (data_len == 0)) {; 7016 len = -1;; 7017 dst[0] = '\0';; 7018 } else {; 7019 name_len = strlen(name);; 7020 e = data + data_len;; 7021 len = -1;; 7022 dst[0] = '\0';; 7023 ; 7024 /* data is ""var1=val1&var2=val2..."". Find variable first */; 7025 for (p = data; p + name_len < e; p++) {; 7026 if (((p == data) || (p[-1] == '&')) && (p[name_len] == '='); 7027 && !mg_strncasecmp(name, p, name_len) && 0 == occurrence--) {; 7028 /* Point p to variable value */; 7029 p += name_len + 1;; 7030 ; 7031 /* Point s to the end of the value */; 7032 s = (const char *)memchr(p, '&', (size_t)(e - p));; 7033 if (s == NULL) {; 7034 s = e;; 7035 }; 7036 DEBUG_ASSERT(s >= p);; 7037 if (s < p) {; 7038 return -3;; 7039 }; 7040 ; 7041 /* Decode variable into destination buffer */; 7042 len = mg_url_decode(p, (int)(s - p), dst, (int)dst_len, 1);; 7043 ; 7044 /* Redirect error code from -1 to -2 (destination buffer too; 7045 * small). */; 7046 if (len == -1) {; 7047 len = -2;; 7048 }; 7049 break;; 7050 }; 7051 }; 7052 }; 7053 ; 7054 return len;; 7055}; 7056 ; 7057 ; 7058/* split a string ""key1=val1&key2=val2"" into key/value pairs */; 7059int; 7060mg_split_form_urlencoded(char *data,; 7061 struct mg_header *form_fields,; 7062 unsigned num_form_fields); 7063{; 7064 char *b;; 7065 int i;; 7066 int num = 0;; 7067 ; 7068 if (data == NULL) {; 7069 /* parameter error */; 7070 return -1;; 7071 }; 7072 ; 7073 if ((form_fields == NULL) && (num_form_fields == 0)) {; 7074 /* determine the number of expected fields */; 7075 if (data[0] == 0) {; 7076 return 0;; 7077 }; 7078 /* count ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:202789,variab,variable,202789,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,3,['variab'],['variable']
Modifiability,98 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80124,config,configuration,80124,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"99 of file TH3.cxx. ◆ TH3S() [2/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup, . Int_t ; nbinsz, . Double_t ; zlow, . Double_t ; zup . ). Constructor for fix bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3818 of file TH3.cxx. ◆ TH3S() [3/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Float_t * ; xbins, . Int_t ; nbinsy, . const Float_t * ; ybins, . Int_t ; nbinsz, . const Float_t * ; zbins . ). Constructor for variable bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3834 of file TH3.cxx. ◆ TH3S() [4/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins, . Int_t ; nbinsz, . const Double_t * ; zbins . ). Constructor for variable bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3848 of file TH3.cxx. ◆ TH3S() [5/5]. TH3S::TH3S ; (; const TH3S & ; h3s). Copy Constructor. ; The list of functions is not copied. (Use Clone() if needed) ; Definition at line 3862 of file TH3.cxx. ◆ ~TH3S(). TH3S::~TH3S ; (; ). override . Destructor. ; Definition at line 3809 of file TH3.cxx. Member Function Documentation. ◆ AddBinContent() [1/4]. void TH3S::AddBinContent ; (; Int_t ; bin). overridevirtual . Increment bin content by 1. ; Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH3.; Definition at line 3872 of file TH3.cxx. ◆ AddBinContent() [2/4]. void TH3S::AddBinContent ; (; Int_t ; bin, . Double_t ; w . ). overridevirtual . Increment bin content by w. ; WarningThe value of w is cast to Int_t before being added. Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH3.; Definition at line 3883 of file TH3.cxx. ◆ AddBinContent() [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:62436,variab,variable,62436,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['variab'],['variable']
Modifiability,"994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSpectrumTransform ();  default constructor ;  ;  TSpectrumTransform (Int_t size);  the constructor creates TSpectrumTransform object. ;  ;  ~TSpectrumTransform () override;  Destructor. ;  ; void Enhance (const Double_t *source, Double_t *destVector);  This function transforms the source spectrum. ;  ; void FilterZonal (const Double_t *source, Double_t *destVector);  This function transforms the source spectrum. ;  ; TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:2334,inherit,inherited,2334,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['inherit'],['inherited']
Modifiability,"9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. leg = new TLegend(0.1,0.7,0.48,0.9);; leg->SetHeader(""The Legend Title"");; leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; leg->Draw();. return c1;; }; Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l""); ; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }. Function Members (Methods); public:. TLegend(); TLegend(const TLegend& legend); TLegend(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* header = """", Option_t* option = ""brNDC""); virtual~TLegend(); voidTObject::AbstractMethod(const char* method) const; TLegendEntry*AddEntry(const TObject* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegend.html:2658,inherit,inherits,2658,root/html528/TLegend.html,https://root.cern,https://root.cern/root/html528/TLegend.html,6,['inherit'],['inherits']
Modifiability,"9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. leg = new TLegend(0.1,0.7,0.48,0.9);; leg->SetHeader(""The Legend Title"");; leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; leg->Draw();. return c1;; }; Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l""); ; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }; It is possible to draw the legend entries over several columns using; the method SetNColumns() like in the following example. Picture; Source. {; TCanvas *c3 = new TCanvas(""c2"",""c2"",500,300);; ; TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);; ; leg-> SetNColumns(2);; ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLegend.html:2658,inherit,inherits,2658,root/html532/TLegend.html,https://root.cern,https://root.cern/root/html532/TLegend.html,3,['inherit'],['inherits']
Modifiability,"9void TMVA::MethodCuts::GetHelpMessage() const; 1720{; 1721 TString bold = gConfig().WriteOptionsReference() ? ""<b>"" : """";; 1722 TString resbold = gConfig().WriteOptionsReference() ? ""</b>"" : """";; 1723 TString brk = gConfig().WriteOptionsReference() ? ""<br>"" : """";; 1724 ; 1725 Log() << Endl;; 1726 Log() << gTools().Color(""bold"") << ""--- Short description:"" << gTools().Color(""reset"") << Endl;; 1727 Log() << Endl;; 1728 Log() << ""The optimisation of rectangular cuts performed by TMVA maximises "" << Endl;; 1729 Log() << ""the background rejection at given signal efficiency, and scans "" << Endl;; 1730 Log() << ""over the full range of the latter quantity. Three optimisation"" << Endl;; 1731 Log() << ""methods are optional: Monte Carlo sampling (MC), a Genetics"" << Endl;; 1732 Log() << ""Algorithm (GA), and Simulated Annealing (SA). GA and SA are"" << Endl;; 1733 Log() << ""expected to perform best."" << Endl;; 1734 Log() << Endl;; 1735 Log() << ""The difficulty to find the optimal cuts strongly increases with"" << Endl;; 1736 Log() << ""the dimensionality (number of input variables) of the problem."" << Endl;; 1737 Log() << ""This behavior is due to the non-uniqueness of the solution space.""<< Endl;; 1738 Log() << Endl;; 1739 Log() << gTools().Color(""bold"") << ""--- Performance optimisation:"" << gTools().Color(""reset"") << Endl;; 1740 Log() << Endl;; 1741 Log() << ""If the dimensionality exceeds, say, 4 input variables, it is "" << Endl;; 1742 Log() << ""advisable to scrutinize the separation power of the variables,"" << Endl;; 1743 Log() << ""and to remove the weakest ones. If some among the input variables"" << Endl;; 1744 Log() << ""can be described by a single cut (e.g., because signal tends to be"" << Endl;; 1745 Log() << ""larger than background), this can be indicated to MethodCuts via"" << Endl;; 1746 Log() << ""the \""Fsmart\"" options (see option string). Choosing this option"" << Endl;; 1747 Log() << ""reduces the number of requirements for the variable from 2 (min/max)"" << Endl;; 1748 Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:67836,variab,variables,67836,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['variab'],['variables']
Modifiability,": """",; 15394 ri->http_version,; 15395 conn->status_code,; 15396 conn->num_bytes_sent,; 15397 referer,; 15398 user_agent);; 15399 }; 15400 ; 15401 /* Here we have a log message in log_buf. Call the callback */; 15402 if (conn->phys_ctx->callbacks.log_access) {; 15403 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15404 /* do not log if callack returns non-zero */; 15405 if (fi.access.fp) {; 15406 mg_fclose(&fi.access);; 15407 }; 15408 return;; 15409 }; 15410 }; 15411 ; 15412 /* Store in file */; 15413 if (fi.access.fp) {; 15414 int ok = 1;; 15415 flockfile(fi.access.fp);; 15416 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15417 ok = 0;; 15418 }; 15419 if (fflush(fi.access.fp) != 0) {; 15420 ok = 0;; 15421 }; 15422 funlockfile(fi.access.fp);; 15423 if (mg_fclose(&fi.access) != 0) {; 15424 ok = 0;; 15425 }; 15426 if (!ok) {; 15427 mg_cry_internal(conn,; 15428 ""Error writing log file %s"",; 15429 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15430 }; 15431 }; 15432}; 15433#else; 15434#error ""Either enable filesystems or provide a custom log_access implementation""; 15435#endif /* Externally provided function */; 15436 ; 15437 ; 15438/* Verify given socket address against the ACL.; 15439 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15440 */; 15441static int; 15442check_acl(struct mg_context *phys_ctx, const union usa *sa); 15443{; 15444 int allowed, flag, matched;; 15445 struct vec vec;; 15446 ; 15447 if (phys_ctx) {; 15448 const char *list = phys_ctx->dd.config[ACCESS_CONTROL_LIST];; 15449 ; 15450 /* If any ACL is set, deny by default */; 15451 allowed = (list == NULL) ? '+' : '-';; 15452 ; 15453 while ((list = next_option(list, &vec, NULL)) != NULL) {; 15454 flag = vec.ptr[0];; 15455 matched = -1;; 15456 if ((vec.len > 0) && ((flag == '+') || (flag == '-'))) {; 15457 vec.ptr++;; 15458 vec.len--;; 15459 matched = parse_match_net(&vec, sa, 1);; 15460 }; 15461 if (matched < 0) {; 15462 mg_cry_ctx_internal(phys_ctx,; 15463 ""%s: su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:456155,config,config,456155,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,": """",; 15395 ri->http_version,; 15396 conn->status_code,; 15397 conn->num_bytes_sent,; 15398 referer,; 15399 user_agent);; 15400 }; 15401 ; 15402 /* Here we have a log message in log_buf. Call the callback */; 15403 if (conn->phys_ctx->callbacks.log_access) {; 15404 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15405 /* do not log if callack returns non-zero */; 15406 if (fi.access.fp) {; 15407 mg_fclose(&fi.access);; 15408 }; 15409 return;; 15410 }; 15411 }; 15412 ; 15413 /* Store in file */; 15414 if (fi.access.fp) {; 15415 int ok = 1;; 15416 flockfile(fi.access.fp);; 15417 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15418 ok = 0;; 15419 }; 15420 if (fflush(fi.access.fp) != 0) {; 15421 ok = 0;; 15422 }; 15423 funlockfile(fi.access.fp);; 15424 if (mg_fclose(&fi.access) != 0) {; 15425 ok = 0;; 15426 }; 15427 if (!ok) {; 15428 mg_cry_internal(conn,; 15429 ""Error writing log file %s"",; 15430 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15431 }; 15432 }; 15433}; 15434#else; 15435#error ""Either enable filesystems or provide a custom log_access implementation""; 15436#endif /* Externally provided function */; 15437 ; 15438 ; 15439/* Verify given socket address against the ACL.; 15440 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15441 */; 15442static int; 15443check_acl(struct mg_context *phys_ctx, const union usa *sa); 15444{; 15445 int allowed, flag, matched;; 15446 struct vec vec;; 15447 ; 15448 if (phys_ctx) {; 15449 const char *list = phys_ctx->dd.config[ACCESS_CONTROL_LIST];; 15450 ; 15451 /* If any ACL is set, deny by default */; 15452 allowed = (list == NULL) ? '+' : '-';; 15453 ; 15454 while ((list = next_option(list, &vec, NULL)) != NULL) {; 15455 flag = vec.ptr[0];; 15456 matched = -1;; 15457 if ((vec.len > 0) && ((flag == '+') || (flag == '-'))) {; 15458 vec.ptr++;; 15459 vec.len--;; 15460 matched = parse_match_net(&vec, sa, 1);; 15461 }; 15462 if (matched < 0) {; 15463 mg_cry_ctx_internal(phys_ctx,; 15464 ""%s: su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:456188,config,config,456188,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,": +1.000 +0.854 +0.917 +0.965; : var2: +0.854 +1.000 +0.926 +0.934; : var3: +0.917 +0.926 +1.000 +0.972; : var4: +0.965 +0.934 +0.972 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [tmva003_BDT] : ; : ; <HEADER> Factory : Train all methods; <HEADER> Factory : [tmva003_BDT] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.017312 1.6864 [ -5.8991 4.7639 ]; : var2: 0.0068952 1.5665 [ -5.2454 4.6508 ]; : var3: 0.0094455 1.7427 [ -5.3563 4.6430 ]; : var4: 0.16960 2.1719 [ -6.9675 4.9600 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Separation; : -----------------------------; : 1 : var4 : 3.564e-01; : 2 : var3 : 2.899e-01; : 3 : var1 : 2.792e-01; : 4 : var2 : 2.260e-01; : -----------------------------; <HEADER> Factory : Train method: BDT for Classification; : ; <HEADER> BDT : #events: (reweighted) sig: 3000 bkg: 3000; : #events: (unweighted) sig: 3000 bkg: 3000; : Training 300 Decision Trees ... patience please; : Elapsed time for training with 6000 events: 0.538 sec ; <HEADER> BDT : [tmva003_BDT] : Evaluation of BDT on training sample (6000 events); : Elapsed time for evaluation of 6000 events: 0.0709 sec ; : Creating xml weight file: tmva003_BDT/weights/tmva003_BDT.weights.xml; : Creating standalone class: tmva003_BDT/weights/tmva003_BDT.class.C; : TMVARR.root:/tmva003_BDT/Method_BDT/BDT; <HEADER> Factory : Training finished",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva003__RReader_8C.html:9512,variab,variables,9512,doc/master/tmva003__RReader_8C.html,https://root.cern,https://root.cern/doc/master/tmva003__RReader_8C.html,1,['variab'],['variables']
Modifiability,: --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for traini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16428,config,configuration,16428,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,": 0.132 (0.121) 0.404 (0.410) 0.669 (0.673); : dataset BDT : 0.098 (0.099) 0.393 (0.402) 0.657 (0.681); : dataset Likelihood : 0.085 (0.082) 0.355 (0.363) 0.580 (0.596); : dataset Fisher : 0.015 (0.015) 0.121 (0.131) 0.487 (0.506); : -------------------------------------------------------------------------------------------------------------------; : ; Dataset:dataset : Created tree 'TestTree' with 6000 events; : ; Dataset:dataset : Created tree 'TrainTree' with 14000 events; : ; Factory : ␛[1mThank you for using TMVA!␛[0m; : ␛[1mFor citation information, please visit: http://tmva.sf.net/citeTMVA.html␛[0m; ; /***; ## Declare Factory; ; Create the Factory class. Later you can choose the methods; whose performance you'd like to investigate.; ; The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ; - The first argument is the base of the name of all the output; weightfiles in the directory weight/ that will be created with the; method parameters; ; - The second argument is the output file for the training results; ; - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string; ; **/; ; void TMVA_Higgs_Classification() {; ; // options to control used methods; ; bool useLikelihood = true; // likelihood based discriminant; bool useLikelihoodKDE = false; // likelihood based discriminant; bool useFischer = true; // Fischer discriminant; bool useMLP = false; // Multi Layer Perceptron (old TMVA NN implementation); bool useBDT = true; // Boosted Decision Tree; bool useDL = true; // TMVA Deep learning ( CPU or GPU); bool useKeras = true; // Keras Deep learning; bool usePyTorch = true; // PyTorch Deep learning; ; TMVA::Tools::Instance();; ; #ifdef R__HAS_PYMVA; gSystem->Setenv(""KERAS_BACKEND"", ""tensorflow"");; // for using Keras; TMVA::PyMethodBase::PyInitializ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:57583,config,configuration,57583,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['config'],['configuration']
Modifiability,: 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23710,config,configuration,23710,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24505,config,configuration,24505,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33437,config,configuration,33437,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38538,config,configuration,38538,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46245,config,configuration,46245,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46359,config,configuration,46359,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46473,config,configuration,46473,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46587,config,configuration,46587,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46701,config,configuration,46701,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46815,config,configuration,46815,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46929,config,configuration,46929,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54294,config,configuration,54294,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70386,config,configuration,70386,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoEltu (const TGeoEltu &)=delete;  ; TGeoEltu & operator= (const TGeoEltu &)=delete;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoEltu.html:21587,inherit,inherited,21587,doc/master/classTGeoEltu.html,https://root.cern,https://root.cern/doc/master/classTGeoEltu.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoHalfSpace (const TGeoHalfSpace &)=delete;  ; TGeoHalfSpace & operator= (const TGeoHalfSpace &)=delete;  . Private Attributes; Double_t fN [3];  ; Double_t fP [3];  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHalfSpace.html:19507,inherit,inherited,19507,doc/master/classTGeoHalfSpace.html,https://root.cern,https://root.cern/doc/master/classTGeoHalfSpace.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoParaboloid (const TGeoParaboloid &)=delete;  ; TGeoParaboloid & operator= (const TGeoParaboloid &)=delete;  . Private Attributes; Double_t fA;  ; Double_t fB;  ; Double_t fDz;  ; Double_t fRhi;  ; Double_t fRlo;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoParaboloid.html:17998,inherit,inherited,17998,doc/master/classTGeoParaboloid.html,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoTessellated (const TGeoTessellated &)=delete;  Temporary map used to deduplicate vertices. ;  ; TGeoTessellated & operator= (const TGeoTessellated &)=delete;  . Private Attributes; bool fClosedBody = false;  Shape fully defined. ;  ; bool fDefined = false;  ; std::vector< TGeoFacet > fFacets;  ; int fNfacets = 0;  ; int fNseg = 0;  ; int fNvert = 0;  ; std::vector< Vertex_t > fVertices;  ; std::multimap< long, int > fVerticesMap;  . Additional Inherited Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTessellated.html:21739,inherit,inherited,21739,doc/master/classTGeoTessellated.html,https://root.cern,https://root.cern/doc/master/classTGeoTessellated.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoVGShape (TGeoShape *shape, vecgeom::cxx::VPlacedVolume *vgshape);  Default constructor. ;  . Static Private Member Functions; static vecgeom::cxx::VPlacedVolume * CreateVecGeomSolid (TGeoShape *shape);  Conversion method to create VecGeom solid corresponding to TGeoShape. ;  . Private Attributes; TGeoShape * fShape;  VecGeom placed solid. ;  ; vecgeom::cxx::VPlacedVolume * fVGShape;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVGShape.html:18105,inherit,inherited,18105,doc/master/classTGeoVGShape.html,https://root.cern,https://root.cern/doc/master/classTGeoVGShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fBBoxOK;  ; TGeoVolumeAssembly * fVolume;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShapeAssembly.html:19127,inherit,inherited,19127,doc/master/classTGeoShapeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoShapeAssembly.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fAlpha1;  ; Double_t fAlpha2;  ; Double_t fBl1;  ; Double_t fBl2;  ; Double_t fH1;  ; Double_t fH2;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTl1;  ; Double_t fTl2;  ;  Protected Attributes inherited from TGeoArb8; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrap.html:20391,inherit,inherited,20391,doc/master/classTGeoTrap.html,https://root.cern,https://root.cern/doc/master/classTGeoTrap.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fNhigh [3];  ; Double_t fNlow [3];  ;  Protected Attributes inherited from TGeoTubeSeg; Double_t fC1;  ; Double_t fC2;  ; Double_t fCdfi;  ; Double_t fCm;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fS1;  ; Double_t fS2;  ; Double_t fSm;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCtub.html:23582,inherit,inherited,23582,doc/master/classTGeoCtub.html,https://root.cern,https://root.cern/doc/master/classTGeoCtub.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHype.html:22331,inherit,inherited,22331,doc/master/classTGeoHype.html,https://root.cern,https://root.cern/doc/master/classTGeoHype.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fTwistAngle;  ;  Protected Attributes inherited from TGeoTrap; Double_t fAlpha1;  ; Double_t fAlpha2;  ; Double_t fBl1;  ; Double_t fBl2;  ; Double_t fH1;  ; Double_t fH2;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTl1;  ; Double_t fTl2;  ;  Protected Attributes inherited from TGeoArb8; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGtra.html:22363,inherit,inherited,22363,doc/master/classTGeoGtra.html,https://root.cern,https://root.cern/doc/master/classTGeoGtra.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGeoScale * fScale;  ; TGeoShape * fShape;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoScaledShape.html:19564,inherit,inherited,19564,doc/master/classTGeoScaledShape.html,https://root.cern,https://root.cern/doc/master/classTGeoScaledShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShape.html:24041,inherit,inherited,24041,doc/master/classTGeoShape.html,https://root.cern,https://root.cern/doc/master/classTGeoShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoCone;  TGeoCone (const TGeoCone &)=delete;  ; TGeoCone & operator= (const TGeoCone &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoConeSeg.html:21061,inherit,inherited,21061,doc/master/classTGeoConeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoConeSeg.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTubeSeg.html:20171,inherit,inherited,20171,doc/master/classTGeoTubeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoTubeSeg.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoCompositeShape (const TGeoCompositeShape &)=delete;  ; TGeoCompositeShape & operator= (const TGeoCompositeShape &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCompositeShape.html:29054,inherit,inherited,29054,doc/master/classTGeoCompositeShape.html,https://root.cern,https://root.cern/doc/master/classTGeoCompositeShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoCone (const TGeoCone &)=delete;  ; TGeoCone & operator= (const TGeoCone &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCone.html:18974,inherit,inherited,18974,doc/master/classTGeoCone.html,https://root.cern,https://root.cern/doc/master/classTGeoCone.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPara.html:18062,inherit,inherited,18062,doc/master/classTGeoPara.html,https://root.cern,https://root.cern/doc/master/classTGeoPara.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPcon (const TGeoPcon &)=delete;  Cosine of dphi. ;  ; Bool_t HasInsideSurface () const;  ; TGeoPcon & operator= (const TGeoPcon &)=delete;  ; void SetSegsAndPolsNoInside (TBuffer3D &buff) const;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPcon.html:18485,inherit,inherited,18485,doc/master/classTGeoPcon.html,https://root.cern,https://root.cern/doc/master/classTGeoPcon.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPgon (const TGeoPgon &)=delete;  ; Int_t GetPhiCrossList (const Double_t *point, const Double_t *dir, Int_t istart, Double_t *sphi, Int_t *iphi, Double_t stepmax=TGeoShape::Big()) const;  Mutex for thread data. ;  ; Bool_t IsCrossingSlice (const Double_t *point, const Double_t *dir, Int_t iphi, Double_t sstart, Int_t &ipl, Double_t &snext, Double_t stepmax) const;  ; void LocatePhi (const Double_t *point, Int_t &ipsec) const;  ; TGeoPgon & operator= (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPgon.html:19358,inherit,inherited,19358,doc/master/classTGeoPgon.html,https://root.cern,https://root.cern/doc/master/classTGeoPgon.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoSphere (const TGeoSphere &)=delete;  ; TGeoSphere & operator= (const TGeoSphere &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:18540,inherit,inherited,18540,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTorus (const TGeoTorus &)=delete;  ; TGeoTorus & operator= (const TGeoTorus &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTorus.html:18422,inherit,inherited,18422,doc/master/classTGeoTorus.html,https://root.cern,https://root.cern/doc/master/classTGeoTorus.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTrd1 (const TGeoTrd1 &)=delete;  ; TGeoTrd1 & operator= (const TGeoTrd1 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd1.html:17988,inherit,inherited,17988,doc/master/classTGeoTrd1.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd1.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTrd2 (const TGeoTrd2 &)=delete;  ; TGeoTrd2 & operator= (const TGeoTrd2 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd2.html:18048,inherit,inherited,18048,doc/master/classTGeoTrd2.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd2.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTube.html:18514,inherit,inherited,18514,doc/master/classTGeoTube.html,https://root.cern,https://root.cern/doc/master/classTGeoTube.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoXtru (const TGeoXtru &)=delete;  mutex for thread data ;  ; Double_t DistToPlane (const Double_t *point, const Double_t *dir, Int_t iz, Int_t ivert, Double_t stepmax, Bool_t in) const;  ; void GetPlaneNormal (const Double_t *vert, Double_t *norm) const;  ; void GetPlaneVertices (Int_t iz, Int_t ivert, Double_t *vert) const;  ; Bool_t IsPointInsidePlane (const Double_t *point, Double_t *vert, Double_t *norm) const;  ; TGeoXtru & operator= (const TGeoXtru &)=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoXtru.html:18262,inherit,inherited,18262,doc/master/classTGeoXtru.html,https://root.cern,https://root.cern/doc/master/classTGeoXtru.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoArb8Type { kArb8Trap = (1ULL << ( 27 )); , kArb8Tra = (1ULL << ( 28 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoArb8 (const TGeoArb8 &)=delete;  ; void CopyTwist (Double_t *twist=nullptr);  ; TGeoArb8 & operator= (const TGeoArb8 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:20749,inherit,inherited,20749,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  . Protected Member Functions;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBBox.html:17203,inherit,inherited,17203,doc/master/classTGeoBBox.html,https://root.cern,https://root.cern/doc/master/classTGeoBBox.html,2,['inherit'],['inherited']
Modifiability,: Elapsed time for evaluation of 9000 events: 0.0705 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: KNN for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of KNN on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.0918 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: LD for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of LD on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.00483 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: DNN_CPU for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of DNN_CPU on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.231 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: BDTG for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of BDTG on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 2.1 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : ␛[1mEvaluate all methods␛[0m; : Evaluate regression method: PDEFoam; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.0447 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time fo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:128155,variab,variable,128155,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,": Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 6 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.0154708 7245.63 4; : 10 | 0.224257 0.809455 0.18089 0.0153446 7248.78 5; : ; : Elapsed time for training with 1600 events: 1.86 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_DNN_CPU : [dataset] : Evaluation of TMVA_DNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.0796 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_DNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11818,config,configuration,11818,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,": Reading weightfile: datasetcv/weights/TMVACrossValidation_Fisher_fold1.weights.xml; : Reading weight file: datasetcv/weights/TMVACrossValidation_Fisher_fold1.weights.xml; : Reading weightfile: datasetcv/weights/TMVACrossValidation_Fisher_fold2.weights.xml; : Reading weight file: datasetcv/weights/TMVACrossValidation_Fisher_fold2.weights.xml; : ; : ; : ========================================; : Folds processed for all methods, evaluating.; : ========================================; : ; <HEADER> Factory : [datasetcv] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'x' <---> Output : variable 'x'; : Input : variable 'y' <---> Output : variable 'y'; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : x: -0.014284 1.4061 [ -4.1075 4.0969 ]; : y: -0.0066370 1.4204 [ -4.8520 4.0761 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : --------------------------; : Rank : Variable : Separation; : --------------------------; : 1 : x : 5.429e-01; : 2 : y : 5.230e-01; : --------------------------; : Elapsed time for training with 1998 events: 4.05e-06 sec ; <HEADER> BDTG : [datasetcv] : Evaluation of BDTG on training sample (1998 events); : Elapsed time for evaluation of 1998 events: 0.00616 sec ; : Creating xml weight file: datasetcv/weights/TMVACrossValidation_BDTG.weights.xml; : Creating standalone class: datasetcv/weights/TMVACrossValidation_BDTG.class.C; <WARNING> <WARNING> : MakeClassSpecificHeader not implemented for CrossValidation; <WARNING> <WARNING> : MakeClassSpecific not implemented for CrossValidation; : Elapsed time for training with 1998 events: 3.81e-06 sec ; <HEADER> Fisher : [datasetcv] : Evaluation of Fisher on training sample (1998 events); : Elapsed time for eval",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:14219,variab,variables,14219,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,1,['variab'],['variables']
Modifiability,: [dataset] : Evaluation of PyKeras_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.273 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_PyKeras_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_PyKeras_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: BDTG for Classification; : ; BDTG : #events: (reweighted) sig: 1600 bkg: 1600; : #events: (unweighted) sig: 1600 bkg: 1600; : Training 100 Decision Trees ... patience please; : Elapsed time for training with 3200 events: 1.67 sec ; BDTG : [dataset] : Evaluation of BDTG on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.0185 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_BDTG.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_BDTG.class.C␛[0m; : data_RNN_CPU.root:/dataset/Method_BDT/BDTG; Factory : Training finished; : ; : Ranking input variables (method specific)...; : No variable ranking supplied by classifier: TMVA_LSTM; : No variable ranking supplied by classifier: TMVA_DNN; : No variable ranking supplied by classifier: PyKeras_LSTM; BDTG : Ranking result (top variable is best ranked); : --------------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------------; : 1 : vars_time9 : 2.245e-02; : 2 : vars_time8 : 2.023e-02; : 3 : vars_time7 : 1.907e-02; : 4 : vars_time7 : 1.907e-02; : 5 : vars_time8 : 1.847e-02; : 6 : vars_time7 : 1.771e-02; : 7 : vars_time9 : 1.708e-02; : 8 : vars_time6 : 1.653e-02; : 9 : vars_time0 : 1.650e-02; : 10 : vars_time7 : 1.626e-02; : 11 : vars_time8 : 1.623e-02; : 12 : vars_time6 : 1.532e-02; : 13 : vars_time8 : 1.530e-02; : 14 : vars_time9 : 1.520e-02; : 15 : vars_time8 : 1.487e-02; : 16 : vars_time6 : 1.421e-02; : 17 : vars_time6 : 1.421e-02; : 18 : vars_time8 : 1.381e-02; : 19 : vars_time8 : 1.379e-02;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:41476,variab,variables,41476,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['variab'],['variables']
Modifiability,": generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenMapProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenMapProxy(). TGenMapProxy::TGenMapProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 280 of file TGenCollectionProxy.cxx. ◆ ~TGenMapProxy(). TGenMapProxy::~TGenMapProxy ; (; ). inlineoverride . Definition at line 284 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ DeleteItem(). void TGenMapProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct individual item. ; Reimplemented from TGenCollectionProxy.; Definition at line 288 of file TGenCollectionProxy.cxx. io/io/src/TGenCollectionProxy.cxx. TGenMapProxy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy.html:12030,inherit,inherited,12030,doc/master/classTGenMapProxy.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . #include <TEmulatedCollectionProxy.h>. Inheritance diagram for TEmulatedCollectionProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Cont_t. typedef std::vector<char> TEmulatedCollectionProxy::Cont_t. Definition at line 25 of file TEmulatedCollectionProxy.h. ◆ PCont_t. typedef Cont_t* TEmulatedCollectionProxy::PCont_t. Definition at line 27 of file TEmulatedCollectionProxy.h. Constructor & Destructor Documentation. ◆ TEmulatedCollectionProxy() [1/2]. TEmulatedCollectionProxy::TEmulatedCollectionProxy ; (; const TEmulatedCollectionProxy & ; copy). Definition at line 43 of file TEmulatedCollectionProxy.cxx. ◆ TEmulatedCollectionProxy() [2/2]. TEmulatedCollectionProxy::TEmulatedCollectionProxy ; (; const char * ; cl_name, . Bool_t ; silent . ). Definition at line 50 of file TEmulatedCollectionProxy.cxx. ◆ ~TEmulatedColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:13304,inherit,inherited,13304,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . #include <TEmulatedMapProxy.h>. Inheritance diagram for TEmulatedMapProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEmulatedMapProxy() [1/2]. TEmulatedMapProxy::TEmulatedMapProxy ; (; const TEmulatedMapProxy & ; copy). Definition at line 39 of file TEmulatedMapProxy.cxx. ◆ TEmulatedMapProxy() [2/2]. TEmulatedMapProxy::TEmulatedMapProxy ; (; const char * ; cl_name, . Bool_t ; silent . ). Definition at line 48 of file TEmulatedMapProxy.cxx. ◆ ~TEmulatedMapProxy(). TEmulatedMapProxy::~TEmulatedMapProxy ; (; ). override . Definition at line 57 of file TEmulatedMapProxy.cxx. Member Function Documentation. ◆ At(). void * TEmulatedMapProxy::At ; (; UInt_t ; idx). overridevirtual . Return the address of the value at index idx ; Reimplemented from TEmulatedCollectionProxy.; Definition at line 69 of file TEmulate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedMapProxy.html:13442,inherit,inherited,13442,doc/master/classTEmulatedMapProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedMapProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenBitsetProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenBitsetProxy(). TGenBitsetProxy::TGenBitsetProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 138 of file TGenCollectionProxy.cxx. ◆ ~TGenBitsetProxy(). TGenBitsetProxy::~TGenBitsetProxy ; (; ). inlineoverride . Definition at line 142 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenBitsetProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index idx ; Implements TVirtualCollectionProxy.; Definition at line 146 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenBitsetProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct individual item. ; Reimplemented from TGenCol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:11458,inherit,inherited,11458,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenVectorBoolProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenVectorBoolProxy(). TGenVectorBoolProxy::TGenVectorBoolProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 92 of file TGenCollectionProxy.cxx. ◆ ~TGenVectorBoolProxy(). TGenVectorBoolProxy::~TGenVectorBoolProxy ; (; ). inlineoverride . Definition at line 96 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenVectorBoolProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index 'idx'. ; Reimplemented from TGenCollectionProxy.; Definition at line 100 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenVectorBoolProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct indi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorBoolProxy.html:11653,inherit,inherited,11653,doc/master/classTGenVectorBoolProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorBoolProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenVectorProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenVectorProxy(). TGenVectorProxy::TGenVectorProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 42 of file TGenCollectionProxy.cxx. ◆ ~TGenVectorProxy(). TGenVectorProxy::~TGenVectorProxy ; (; ). inlineoverride . Definition at line 46 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenVectorProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index 'idx'. ; Reimplemented from TGenCollectionProxy.; Definition at line 50 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenVectorProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct individual item. ; Reimplemented from TGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorProxy.html:11573,inherit,inherited,11573,doc/master/classTGenVectorProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Private Member Functions; TGenCollectionStreamer & operator= (const TGenCollectionStreamer &);  . Additional Inherited Members;  Public Types inherited from TGenCollectionProxy; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000; };  ; typedef const std::type_info & Info_t;  ;  Public Types inherited from TVirtualCollectionProxy; typedef void *(* CopyIterator_t) (void *dest, const void *source);  Copy the iterator source into dest. ;  ; typedef void(* CreateIterators_t) (void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy);  *begin_arena and *end_arena should contain the location of a memory arena of size fgIteratorArenaSize. ;  ; typedef void(* DeleteIterator_t) (void *iter);  If the size of the iterator is greater than fgIteratorArenaSize, call delete on the addresses; otherwise, just call the iterator's destructor. ;  ; typedef void(* DeleteTwoIter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionStreamer.html:11947,inherit,inherited,11947,doc/master/classTGenCollectionStreamer.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionStreamer.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Private Member Functions;  TGenCollectionProxy ();  ; TGenCollectionProxy & operator= (const TGenCollectionProxy &);  . Friends; class TCollectionProxyFactory;  . Additional Inherited Members;  Static Public Attributes inherited from TVirtualCollectionProxy; static const Int_t fgIteratorArenaSize = 16;  The size of a small buffer that can be allocated on the stack to store iterator-specific information. ;  . #include <TGenCollectionProxy.h>. Inheritance diagram for TGenCollectionProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ArrIterfunc_t. typedef void *(* TGenCollectionProxy::ArrIterfunc_t) (void *from, size_t size). protected . Definition at line 297 of file TGenCollectionProxy.h. ◆ Collectfunc_t. typedef void *(* TGenCollectionProxy::Collectfunc_t) (void *from, void *to). protected . Definition at line 296 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionProxy.html:12009,inherit,inherited,12009,doc/master/classTGenCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,": tmp) {; 88 std::stringstream reader;; 89 reader << ""0x"" << std::hex << r;; 90 ::Error(function, "" Readers includes %s"", reader.str().c_str());; 91 }; 92 gSystem->StackTrace();; 93}; 94 ; 95void TCollection::TErrorLock::Lock(const TCollection *collection, const char *function); 96{; 97 auto local = std::this_thread::get_id();; 98 ; 99 std::thread::id holder;; 100 ; 101 if (fWriteCurrent.compare_exchange_strong(holder, local)) {; 102 // fWriteCurrent was the default id and is now local.; 103 ++fWriteCurrentRecurse;; 104 // std::cerr << ""#"" << ""0x"" << std::hex << local << "" acquired first "" << collection << "" lock:"" << this <<; 105 // std::endl;; 106 ; 107 // Now check if there is any readers lingering; 108 if (fReadCurrentRecurse) {; 109 if (fReadSet.size() > 1 || fReadSet.find(local) != fReadSet.end()) {; 110 ConflictReport(std::thread::id(), ""WriteLock while ReadLock taken"", collection, function);; 111 }; 112 }; 113 } else {; 114 // fWriteCurrent was not the default id and is still the 'holder' thread id; 115 // this id is now also in the holder variable; 116 if (holder == local) {; 117 // The holder was actually this thread, no problem there, we; 118 // allow re-entrancy.; 119 // std::cerr << ""#"" << ""0x"" << std::hex << local << "" re-entered "" << fWriteCurrentRecurse << "" "" << collection; 120 // << "" lock:"" << this << std::endl;; 121 } else {; 122 ConflictReport(holder, ""WriteLock"", collection, function);; 123 }; 124 ++fWriteCurrentRecurse;; 125 }; 126}; 127 ; 128void TCollection::TErrorLock::Unlock(); 129{; 130 auto local = std::this_thread::get_id();; 131 auto none = std::thread::id();; 132 ; 133 --fWriteCurrentRecurse;; 134 if (fWriteCurrentRecurse == 0) {; 135 if (fWriteCurrent.compare_exchange_strong(local, none)) {; 136 // fWriteCurrent was local and is now none.; 137 ; 138 // std::cerr << ""#"" << ""0x"" << std::hex << local << "" zero and cleaned : "" << std::dec << fWriteCurrentRecurse; 139 // << "" 0x"" << std::hex << fWriteCurrent.load() << "" lock:"" << this << s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:4558,variab,variable,4558,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['variab'],['variable']
Modifiability,": ␛[0;36mdataset/weights/TMVAClassification_FDA_GA.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_FDA_GA.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: MLPBNN for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ MLPBNN ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The MLP artificial neural network (ANN) is a traditional feed-; : forward multilayer perceptron implementation. The MLP has a user-; : defined hidden layer architecture, while the number of input (output); : nodes is determined by the input variables (output classes, i.e., ; : signal and one background). ; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Neural networks are stable and performing for a large variety of ; : linear and non-linear classification problems. However, in contrast; : to (e.g.) boosted decision trees, the user is advised to reduce the ; : number of input variables that have only little discrimination power. ; : ; : In the tests we have carried out so far, the MLP and ROOT networks; : (TMlpANN, interfaced via TMVA) performed equally well, with however; : a clear speed advantage for the MLP. The Clermont-Ferrand neural ; : net (CFMlpANN) exhibited worse classification performance in these; : tests, which is partly due to the slow convergence of its training; : (at least 10k training cycles are required to achieve approximately; : competitive results).; : ; : ␛[1mOvertraining: ␛[0monly the TMlpANN performs an explicit separation of the; : full training sample into independent training and validation samples.; : We have found that in most high-energy physics applications the ; : available degrees of freedom (training events) are sufficient to ; : constrain the weights of the relatively simple architectures required; : to achieve good performance. Hence no overtraining should occur, and ; : the use of validation samples would o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:42367,variab,variables,42367,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,":(anonymous)TObject::kNotDeleted; static TFormula::(anonymous)TFormula::kNotGlobal; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObjArrayfAliases! List of TTreeFormula for each alias used.; vector<string>fAliasesUsed! List of aliases used during the parsing of the expression.; TBitsTFormula::fAlreadyFound! cache for information; TAxis*fAxis! pointer to histogram axis if this is a string; TObjArrayfBranches! List of branches to read. Similar to fLeaces but duplicates are zeroed out.; Int_tfCodes[500]List of leaf numbers referenced in formula; Double_t*TFormula::fConst[fNconst] Array of fNconst formula constants; LongDouble_t*fConstLDlocal version of fConsts able to store bigger numbers; Int_tfCumulSizes[500][5]Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated; TObjArrayfDataMembers! List of leaf data members; Bool_tfDidBooleanOptimization! True if we executed one boolean optimization since the last time instance number 0 was evaluated; TList*fDimensionSetup! list of dimension setups, for delayed creation of the dimension information.; TString*TFormula::fExpr[fNoper] List of expressions; TString*TFormula::fExprOptimized![fNOperOptimized] List of expressions; TObjArrayfExternalCuts! List of TCutG and TEntryList used in the formula; Int_tfFixedSizes[500][5]Physical sizes of lower dimensions for each leaf; TObjArrayTFormula::fFunctionsArray of function calls to make; Bool_tfHasCastRecord whether the formula contain a cast operation or not; UChar_tfHasMultipleVarDim[500]True if the corresponding variable is an array with more than one variable dimension.; Int_tfIndexes[500][5]Index of array selected by user for each leaf; TObjArrayfLeafNamesList of TNamed describing leaves; TObjArrayfLeaves! List of leaf used in this fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:14867,variab,variable,14867,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,1,['variab'],['variable']
Modifiability,":. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const TString& name); Fill out the preliminary TProofNodeInfo structure. EInfoType GetInfoType(const TString& word). TProofResourcesStatic(). TString GetFileName() const; { return fFileName; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-03-14 16:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofResourcesStatic.html:7367,config,config,7367,root/html534/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html534/TProofResourcesStatic.html,2,['config'],['config']
Modifiability,":. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const TString& name); Fill out the preliminary TProofNodeInfo structure. EInfoType GetInfoType(const TString& word). TProofResourcesStatic(). TString GetFileName() const; { return fFileName; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-02 16:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofResourcesStatic.html:7924,config,config,7924,root/html604/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html604/TProofResourcesStatic.html,2,['config'],['config']
Modifiability,":. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const TString& name); Fill out the preliminary TProofNodeInfo structure. EInfoType GetInfoType(const TString& word). TProofResourcesStatic(). TString GetFileName() const; { return fFileName; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofResourcesStatic.html:7924,config,config,7924,root/html602/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html602/TProofResourcesStatic.html,2,['config'],['config']
Modifiability,":. TEnv(const TEnv&); const char*Getvalue(const char* name); TEnv&operator=(const TEnv&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIgnoreDupignore duplicates, don't issue warning; TStringfRcNameresource file base name; THashList*fTablehash table containing env records. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnv(const char* name = """"); Create a resource table and read the (possibly) three resource files, i.e; $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and; ./<name>. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; read additional user defined resource files by creating addtional TEnv; objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful in; case the home directory resides on an automounted remote file system; and one wants to avoid the file system from being mounted. ~TEnv(); Delete the resource table. const char * Getvalue(const char* name); Returns the character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a resource. If the resource is not found; return the dflt value. const char * GetValue(const char* name, const char* dflt); Returns the character value for a named resouce. If the resource is; not found the dflt value is returned. TEnvRec * Lookup(const char* n); Loop over all resource records and return the one with name.; Return 0 in case name is not in the resoucre table. void Print(Option_t* option = """") const; Print all resources or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEnv.html:8432,variab,variable,8432,root/html528/TEnv.html,https://root.cern,https://root.cern/root/html528/TEnv.html,4,['variab'],['variable']
Modifiability,":. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TString*fAllVarsIwhat to do with variables; TMVA::BinarySearchTree*fBinaryTreeB; TMVA::BinarySearchTree*fBinaryTreeS; Double_t**fCutMaxmaximum requirement; Double_t**fCutMinminimum requirement; vector<Interval*>fCutRangeallowed ranges for cut optimisation; Double_t*fCutRangeMaxmaximum of allowed cut range; Double_t*fCutRangeMinminimum of allowed cut range; TH1*fEffBvsSLocalintermediate eff. background versus eff signal histo; TMVA::MethodCuts::EEffMethodfEffMethodchosen efficiency calculation method; TStringfEffMethodSchosen efficiency calculation method (string); Double_tfEffRefreference efficiency; Double_tfEffSMaxused to test optimized signal efficiency; Double_tfEffSMinused to test optimized signal efficiency; TMVA::MethodCuts::EFitMethodTypefFitMethodchosen fit method; TStringfFitMethodSchosen fit method (string); vector<EFitParameters>*fFitParamsvector for series of fit methods; vector<Double_t>*fMeanBmeans of variables (background); vector<Double_t>*fMeanSmeans of variables (signal); Bool_tfNegEffWarningflag risen in case of negative efficiency warning; Int_tfNparnumber of parameters in fit (default: 2*Nvar); TRandom*fRandomrandom generator for MC optimisation method; ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCuts.html:18486,variab,variables,18486,root/html528/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCuts.html,1,['variab'],['variables']
Modifiability,":. double hsimple() {; return px;; }. MakeProxy can then be used indirectly via the TTree::Draw interface; as follow:; new TFile(""hsimple.root""); ntuple->Draw(""hsimple.cxx"");. A more complete example is available in the tutorials directory:; h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:76779,variab,variables,76779,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['variab'],['variables']
Modifiability,":101; RooDataSet.h; RooFitResult.h; RooGaussian.h; RooGenericPdf.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf103_interprfunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf103__interprfuncs_8C.html:4910,variab,variable,4910,doc/master/rf103__interprfuncs_8C.html,https://root.cern,https://root.cern/doc/master/rf103__interprfuncs_8C.html,1,['variab'],['variable']
Modifiability,":219; ROOT::Experimental::RNTupleLocator::kTypeUnknown@ kTypeUnknownDefinition RNTupleUtil.hxx:227; ROOT::Experimental::RNTupleLocator::kLastSerializableType@ kLastSerializableTypeDefinition RNTupleUtil.hxx:225; ROOT::Experimental::RNTupleLocator::kTypeDAOS@ kTypeDAOSDefinition RNTupleUtil.hxx:223; ROOT::Experimental::RNTupleLocator::kTypeFile@ kTypeFileDefinition RNTupleUtil.hxx:222; ROOT::Experimental::RNTupleLocator::kTypePageZero@ kTypePageZeroDefinition RNTupleUtil.hxx:226; ROOT::Experimental::RNTupleLocator::fReservedstd::uint8_t fReservedReserved for use by concrete storage backends.Definition RNTupleUtil.hxx:238; ROOT::Experimental::RNTupleLocator::fTypeELocatorType fTypeFor non-disk locators, the value for the Type field.Definition RNTupleUtil.hxx:236; ROOT::Experimental::RNTupleLocator::operator==bool operator==(const RNTupleLocator &other) constDefinition RNTupleUtil.hxx:240; ROOT::Experimental::RNTupleLocator::fPositionstd::variant< std::uint64_t, RNTupleLocatorObject64 > fPositionSimple on-disk locators consisting of a 64-bit offset use variant type uint64_t; extended locators ha...Definition RNTupleUtil.hxx:233; ROOT::Experimental::RNTupleLocator::GetPositionconst T & GetPosition() constDefinition RNTupleUtil.hxx:245; ROOT::Experimental::RNTupleOpenSpecUsed to specify the underlying RNTuples in RNTupleProcessor and RNTupleReader::OpenFriends()Definition RNTupleUtil.hxx:252; ROOT::Experimental::RNTupleOpenSpec::fStoragestd::string fStorageDefinition RNTupleUtil.hxx:254; ROOT::Experimental::RNTupleOpenSpec::fOptionsRNTupleReadOptions fOptionsDefinition RNTupleUtil.hxx:255; ROOT::Experimental::RNTupleOpenSpec::fNTupleNamestd::string fNTupleNameDefinition RNTupleUtil.hxx:253; ROOT::Experimental::RNTupleOpenSpec::RNTupleOpenSpecRNTupleOpenSpec(std::string_view n, std::string_view s)Definition RNTupleUtil.hxx:257; ROOT::RNTupleCardinalityHelper types to present an offset column as array of collection sizes.Definition RNTupleUtil.hxx:32; ROOT::RNTupleCardinali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html:20907,extend,extended,20907,doc/master/RNTupleUtil_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html,1,['extend'],['extended']
Modifiability,":229; TPrincipal::GetCovarianceMatrixconst TMatrixD * GetCovarianceMatrix() constReturn the covariance matrix.Definition TPrincipal.h:60; TPrincipal::Clearvoid Clear(Option_t *option="""") overrideClear the data in Object.Definition TPrincipal.cxx:494; TPrincipal::MakeHistogramsvirtual void MakeHistograms(const char *name=""pca"", Option_t *option=""epsdx"")Make histograms of the result of the analysis.Definition TPrincipal.cxx:587; TPrincipal::Printvoid Print(Option_t *opt=""MSE"") const overridePrint the statistics Options are.Definition TPrincipal.cxx:1094; TPrincipal::fUserDataTVectorD fUserDataVector of original data points.Definition TPrincipal.h:36; TPrincipal::MakeCodevirtual void MakeCode(const char *filename=""pca"", Option_t *option="""")Generates the file <filename>, with .C appended if it does argument doesn't end in ....Definition TPrincipal.cxx:562; TPrincipal::fCovarianceMatrixTMatrixD fCovarianceMatrixCovariance matrix.Definition TPrincipal.h:29; TPrincipal::fNumberOfVariablesInt_t fNumberOfVariablesNumber of variables.Definition TPrincipal.h:25; TPrincipal::fSigmasTVectorD fSigmasvector of sigmasDefinition TPrincipal.h:28; TPrincipal::fOffDiagonalTVectorD fOffDiagonalElements of the tridiagonal.Definition TPrincipal.h:34; TPrincipal::fEigenValuesTVectorD fEigenValuesEigenvalue vector of trans.Definition TPrincipal.h:32; TPrincipal::GetMeanValuesconst TVectorD * GetMeanValues() constDefinition TPrincipal.h:64; TPrincipal::fMeanValuesTVectorD fMeanValuesMean value over all data points.Definition TPrincipal.h:27; TPrincipal::fHistogramsTList * fHistogramsList of histograms.Definition TPrincipal.h:40; TPrincipal::GetEigenVectorsconst TMatrixD * GetEigenVectors() constDefinition TPrincipal.h:62; TPrincipal::IsFolderBool_t IsFolder() const overrideReturns kTRUE in case object contains browsable objects (like containers or lists of other objects).Definition TPrincipal.h:68; TPrincipal::MakeRealCodevoid MakeRealCode(const char *filename, const char *prefix, Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPrincipal_8h_source.html:6774,variab,variables,6774,doc/master/TPrincipal_8h_source.html,https://root.cern,https://root.cern/doc/master/TPrincipal_8h_source.html,1,['variab'],['variables']
Modifiability,":23; TProfile2D::TProfile2DTProfile2D()Default constructor for Profile2D histograms.Definition TProfile2D.cxx:88; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; int; c1return c1Definition legend1.C:41. Definition at line 27 of file TProfile2D.h. Public Member Functions;  TProfile2D ();  Default constructor for Profile2D histograms. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Option_t *option="""");  Create a 2-D Profile with variable bins in X and variable bins in Y. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, Double_t ylow, Double_t yup, Option_t *option="""");  Create a 2-D Profile with variable bins in X and fix bins in Y. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins, Option_t *option="""");  Create a 2-D Profile with fix bins in X and variable bins in Y. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Double_t zlow, Double_t zup, Option_t *option="""");  Constructor for Profile2D histograms with range in z. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Option_t *option="""");  Normal Constructor for Profile histograms. ;  ;  TProfile2D (const TProfile2D &profile);  Copy constructor. ;  ;  ~TProfile2D () override;  Default destructor for Profile2D histograms. ;  ; Bool_t Add (const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) override;  Replace contents of this profile2D by the addition of h1 and h2. ;  ; Bool_t Add (const TH1 *h1, Double_t c1=1) override;  Performs the operation: this = this + c1*h1 . ;  ; Bool_t Add (TF1 *h1, Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:4079,variab,variable,4079,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,":2782; In order to have more flexibility, there are in fact several alternative ways of initializing a modeller state:; // Setting the point and finding the state in one step:; gGeoManager->FindNode(Double_t x,Double_t y,Double_t z);; gGeoManager->FindNode(Double_t *point[3]);; // Setting both initial point and direction and finding the state:; gGeoManager->InitTrack(Double_t x,Double_t y,Double_t z,; Double_t nx, Double_t ny, Double_t nz);; gGeoManager->InitTrack(Double_t *point[3],Double_t *dir[3]);; TGeoManager::InitTrackTGeoNode * InitTrack(const Double_t *point, const Double_t *dir)Initialize current point and current direction vector (normalized) in MARS.Definition TGeoManager.cxx:2856; Note that the current point coordinates can be changed and the state re-initialized at any time. This represents the ‘‘Where am I?’` geometrical query representing the basic navigation functionality provided by the modeller. Checking the Current State; The current state and all variables related to this are essential during tracking and have to be checked several times. Besides the current point and direction, the following additional information can be retrieved from TGeoManager interface:. The current path. This represents a string containing the names and copy numbers of all positioned objects in the current branch written in the /folder/folder/.../folder/file fashion. The final node pointed by the path is the deepest object containing the current point and is representative for the current state. All intermediate folders in the path are in fact also nodes ""touched"" by the current point, but having some ""touched"" containment. The current path can be retrieved only after the state was initialized and is useful for getting an idea of the current point location. const char *path = gGeoManager->GetPath();; cout << ""Current path is: "" << path << endl;; /A_1/B_34/C_3/D_1; TGeoManager::GetPathconst char * GetPath() constGet path to the current node in the form /node0/node1/...Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:72842,variab,variables,72842,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['variab'],['variables']
Modifiability,":70; TMath.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; ROOT::Math::beta_pdfdouble beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf105__funcbinding_8C.html:4325,variab,variable,4325,doc/master/rf105__funcbinding_8C.html,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html,1,['variab'],['variable']
Modifiability,":820; TGeoPainter::GetDrawnVolumeTGeoVolume * GetDrawnVolume() const overrideGet currently drawn volume.Definition TGeoPainter.cxx:338; TGeoPainter::DrawPolygonvoid DrawPolygon(const TGeoPolygon *poly) overrideDraw a polygon in 3D.Definition TGeoPainter.cxx:770; TGeoPainter::fNsegmentsInt_t fNsegmentsDefinition TGeoPainter.h:47; TGeoPainter::Testvoid Test(Int_t npoints, Option_t *option) overrideCheck time of finding ""Where am I"" for n points.Definition TGeoPainter.cxx:2170; TGeoPainter::PaintVolumevoid PaintVolume(TGeoVolume *vol, Option_t *option="""", TGeoMatrix *global=nullptr) overridePaint recursively a node and its content according to visualization options.Definition TGeoPainter.cxx:1384; TGeoPainter::fVolInfoTString fVolInfoDefinition TGeoPainter.h:58; TGeoPainter::CheckShapevoid CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTest for shape navigation methods.Definition TGeoPainter.cxx:254; TGeoPainter::SetIteratorPluginvoid SetIteratorPlugin(TGeoIteratorPlugin *plugin) overrideDefinition TGeoPainter.h:165; TGeoPainter::RandomPointsvoid RandomPoints(const TGeoVolume *vol, Int_t npoints, Option_t *option="""") overrideDraw random points in the bounding box of a volume.Definition TGeoPainter.cxx:1693; TGeoPainter::fTopVisibleBool_t fTopVisibleDefinition TGeoPainter.h:53; TGeoPainter::GetTopVolumeTGeoVolume * GetTopVolume() const overrideDefinition TGeoPainter.h:129; TGeoPainter::fGlobalTGeoHMatrix * fGlobalDefinition TGeoPainter.h:61; TGeoPainter::GetBombFactorsvoid GetBombFactors(Double_t &bombx, Double_t &bomby, Double_t &bombz, Double_t &bombr) const overrideDefinition TGeoPainter.h:116; TGeoPainter::fVisLevelInt_t fVisLevelDefinition TGeoPainter.h:49; TGeoPainter::Lockvoid Lock(Bool_t flag=kTRUE)Definition TGeoPainter.h:142; TGeoPainter::SetNsegmentsvoid SetNsegments(Int_t nseg=20) overrideSet number of segments to approximate circles.Definition TGeoPainter.cxx:1992; TGeoPainter::CheckBoundaryReferencevoid CheckBoundaryRef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8h_source.html:22285,plugin,plugin,22285,doc/master/TGeoPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8h_source.html,1,['plugin'],['plugin']
Modifiability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TList* GetStaged(TCollection* pathlist); Retrieves the staging (online) status for a list of path names. Path names; must be of type TUrl, TFileInfo or TObjString. The returned list is the list; of staged files as TObjString (we use TObjString, because you can do a FindObject; on that list using the file name, which is not possible with TUrl objects. Bool_t Stage(TCollection* pathlist, Option_t* opt = 0); Issue a stage request for a list of files.; Return the '&' of all single Prepare commands. TFileStager * Open(const char* stager); Open a stager, after having loaded the relevant plug-in.; The format of 'stager' depends on the plug-in. Bool_t IsStaged(const char* ); Just check if the file exists locally. Int_t Locate(const char* u, TString& f); Just check if the file exists locally. Int_t LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); Massive location of files. Returns < 0 on error, or number of files; processed. Results are returned on the TFileCollection itself. TString GetPathName(TObject* o); Return the path name contained in object 'o' allowing for; TUrl, TObjString or TFileInfo. TFileStager(const char* stager); { }. virtual ~TFileStager(); { }. Bool_t Matches(const char* s); { return ((s && (fName == s)) ? kTRUE : kFALSE); }. Bool_t Stage(const char* , Option_t* = 0); { return kTRUE; }. Bool_t IsValid() const; { return kTRUE; }. » Author: A. Peters, G. Ganis 7/2/2007 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-30 14:49; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileStager.html:7415,plug-in,plug-in,7415,root/html602/TFileStager.html,https://root.cern,https://root.cern/root/html602/TFileStager.html,1,['plug-in'],['plug-in']
Modifiability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TList* GetStaged(TCollection* pathlist); Retrieves the staging (online) status for a list of path names. Path names; must be of type TUrl, TFileInfo or TObjString. The returned list is the list; of staged files as TObjString (we use TObjString, because you can do a FindObject; on that list using the file name, which is not possible with TUrl objects. Bool_t Stage(TCollection* pathlist, Option_t* opt = 0); Issue a stage request for a list of files.; Return the '&' of all single Prepare commands. TFileStager * Open(const char* stager); Open a stager, after having loaded the relevant plug-in.; The format of 'stager' depends on the plug-in. Bool_t IsStaged(const char* ); Just check if the file exists locally. Int_t Locate(const char* u, TString& f); Just check if the file exists locally. Int_t LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); Massive location of files. Returns < 0 on error, or number of files; processed. Results are returned on the TFileCollection itself. TString GetPathName(TObject* o); Return the path name contained in object 'o' allowing for; TUrl, TObjString or TFileInfo. TFileStager(const char* stager); { }. virtual ~TFileStager(); { }. Bool_t Matches(const char* s); { return ((s && (fName == s)) ? kTRUE : kFALSE); }. Bool_t Stage(const char* , Option_t* = 0); { return kTRUE; }. Bool_t IsValid() const; { return kTRUE; }. » Author: A. Peters, G. Ganis 7/2/2007 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-09-08 17:43; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFileStager.html:7415,plug-in,plug-in,7415,root/html604/TFileStager.html,https://root.cern,https://root.cern/root/html604/TFileStager.html,1,['plug-in'],['plug-in']
Modifiability,::(anonymous)kLogScale; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TParallelCoordVar::(anonymous)kShowBarHisto; static TParallelCoordVar::(anonymous)kShowBox; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_tfHistoHeightHistogram Height.; Int_tfHistoLWLine width used to draw the histogram line.; TH1F*fHistogram! Histogram holding the variable distribution.; Int_tfIdId identifying the variable for the editor.; Double_tfMaxCurrentCurrent used maximum.; Double_tfMaxInitMemory of the maximum when first initialized.; Double_tfMeanAverage.; Double_tfMedMedian value (Q2).; Double_tfMinCurrentCurrent used minimum.; Double_tfMinInitMemory of the minimum when first initialized.; Int_tfNbinsNumber of bins in fHistogram.; Long64_tfNentriesNumber of stored entries values.; TParallelCoord*fParallelPointer to the TParallelCoord which owns the TParallelCoordVar.; Double_tfQua1First quantile (Q1).; Double_tfQua3Third quantile (Q3).; TList*fRangesList of the TParallelRange owned by TParallelCoordVar.; Double_t*fVal![fNentries] Entries values for the variable.; Double_tfX1x1 coordinate of the axis.; Double_tfX2x2 coordinate of the axis.; Double_tfY1y1 coordinate of the axis.; Double_tfY2y2 coordinate of the axis. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordVar(); Default constructor. ~TParallelCoordVar(); Destructor. TPar,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParallelCoordVar.html:9930,variab,variable,9930,root/html602/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html602/TParallelCoordVar.html,2,['variab'],['variable']
Modifiability,"::AClean@ ACleanDefinition RooAbsArg.h:362; RooAbsArg::getStringAttributeconst Text_t * getStringAttribute(const Text_t *key) constGet string attribute mapped under key 'key'.Definition RooAbsArg.cxx:275; RooAbsArg::getComponentsRooFit::OwningPtr< RooArgSet > getComponents() constCreate a RooArgSet with all components (branch nodes) of the expression tree headed by this object.Definition RooAbsArg.cxx:802; RooAbsArg::serversconst RefCountList_t & servers() constList of all servers of this object.Definition RooAbsArg.h:180; RooAbsArg::dependsOnValuebool dependsOnValue(const RooAbsCollection &serverList, const RooAbsArg *ignoreArg=nullptr) constCheck whether this object depends on values from an element in the serverList.Definition RooAbsArg.h:108; RooAbsArg::setValueDirtyvoid setValueDirty()Mark the element dirty. This forces a re-evaluation when a value is requested.Definition RooAbsArg.h:462; RooAbsArg::getVariablesRooFit::OwningPtr< RooArgSet > getVariables(bool stripDisconnected=true) constReturn RooArgSet with all variables (tree leaf nodes of expression tree)Definition RooAbsArg.cxx:2154; RooAbsArg::printMultilinevoid printMultiline(std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const overrideImplement multi-line detailed printing.Definition RooAbsArg.cxx:1589; RooAbsArg::cloneTreevirtual RooAbsArg * cloneTree(const char *newname=nullptr) constClone tree expression of objects.Definition RooAbsArg.cxx:2293; RooAbsArg::cleanBranchNameTString cleanBranchName() constConstruct a mangled name from the actual name that is free of any math symbols that might be interpre...Definition RooAbsArg.cxx:2075; RooAbsArg::numProxiesInt_t numProxies() constReturn the number of registered proxies.Definition RooAbsArg.cxx:1457; RooAbsArg::_inhibitDirtystatic bool _inhibitDirtyDefinition RooAbsArg.h:668; RooAbsArg::setAttributevoid setAttribute(const Text_t *name, bool value=true)Set (default) or clear a named boolean attribute of this object.Definition Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:205296,variab,variables,205296,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2118; TStreamerInfoActions::VectorPtrLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:2080; TStreamerInfoActions::VectorPtrLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2081; TStreamerInfoActions::VectorPtrLooperDefinition TStreamerInfoActions.cxx:2065; TStreamerInfoActions::VectorPtrLooper::ReadActionstatic Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2163; TStreamerInfoActions::VectorPtrLooper::ReadBasestatic Int_t ReadBase(TBuffer &buf, void *start, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2171; TStreamerInfoActions::VectorPtrLooper::ReadBasicTypestatic Int_t ReadBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2068; TStreamerInfoActions::VectorPtrLooper::GenericReadstatic Int_t GenericRead(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2179; TStreamerInfoActions::VectorPtrLooper::WriteBasicTypestatic Int_t WriteBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2151; TStreamerInfoActions::VectorPtrLooper::GenericWritestatic Int_t GenericWrite(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2186; TStreamerInfoActions::WithFactorMarkerDefinition TStreamerInfoActions.cxx:58; TStreamerInfoActions::WithFactorMarker::Value_tFrom Value_tDefinition TStreamerInfoActions.cxx:59; vecDefinition civetweb.c:1855. ioiosrcTStreamerInfoActions.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:38 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:277122,config,config,277122,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"::AdoptMemberStreamer ; (; const char * ; name, . TMemberStreamer * ; strm . ). Adopt the TMemberStreamer pointer to by p and use it to Stream non basic member name. ; Definition at line 6703 of file TClass.cxx. ◆ AdoptReferenceProxy(). void TClass::AdoptReferenceProxy ; (; TVirtualRefProxy * ; proxy). Adopt the Reference proxy pointer to indicate that this class represents a reference. ; When a new proxy is adopted, the old one is deleted. ; Definition at line 6685 of file TClass.cxx. ◆ AdoptSchemaRules(). void TClass::AdoptSchemaRules ; (; ROOT::Detail::TSchemaRuleSet * ; rules). Adopt a new set of Data Model Evolution rules. ; Definition at line 1920 of file TClass.cxx. ◆ AdoptStreamer(). void TClass::AdoptStreamer ; (; TClassStreamer * ; str). Adopt a TClassStreamer object. ; Ownership is transfered to this TClass object. ; Definition at line 6894 of file TClass.cxx. ◆ AutoBrowse(). Int_t TClass::AutoBrowse ; (; TObject * ; obj, . TBrowser * ; b . ). static . Browse external object inherited from TObject. ; It passes through inheritance tree and calls TBrowser::Add in appropriate cases. Static function. ; Definition at line 1966 of file TClass.cxx. ◆ Browse() [1/2]. void TClass::Browse ; (; TBrowser * ; b). overridevirtual . This method is called by a browser to get the class information. ; Reimplemented from TObject.; Definition at line 2010 of file TClass.cxx. ◆ Browse() [2/2]. Int_t TClass::Browse ; (; void * ; obj, . TBrowser * ; b . ); const. Browse objects of of the class described by this TClass object. ; Definition at line 1978 of file TClass.cxx. ◆ BuildEmulatedRealData(). void TClass::BuildEmulatedRealData ; (; const char * ; name, . Longptr_t ; offset, . TClass * ; cl, . Bool_t ; isTransient = kFALSE . ). Build the list of real data for an emulated class. ; Definition at line 2112 of file TClass.cxx. ◆ BuildRealData(). void TClass::BuildRealData ; (; void * ; pointer = nullptr, . Bool_t ; isTransient = kFALSE . ). Build a full list of persistent data m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:57375,inherit,inherited,57375,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inherited']
Modifiability,"::AdoptMemberStreamer ; (; const char * ; name, . TMemberStreamer * ; strm . ). Adopt the TMemberStreamer pointer to by p and use it to Stream non basic member name. ; Definition at line 6770 of file TClass.cxx. ◆ AdoptReferenceProxy(). void TClass::AdoptReferenceProxy ; (; TVirtualRefProxy * ; proxy). Adopt the Reference proxy pointer to indicate that this class represents a reference. ; When a new proxy is adopted, the old one is deleted. ; Definition at line 6752 of file TClass.cxx. ◆ AdoptSchemaRules(). void TClass::AdoptSchemaRules ; (; ROOT::Detail::TSchemaRuleSet * ; rules). Adopt a new set of Data Model Evolution rules. ; Definition at line 1987 of file TClass.cxx. ◆ AdoptStreamer(). void TClass::AdoptStreamer ; (; TClassStreamer * ; str). Adopt a TClassStreamer object. ; Ownership is transfered to this TClass object. ; Definition at line 6961 of file TClass.cxx. ◆ AutoBrowse(). Int_t TClass::AutoBrowse ; (; TObject * ; obj, . TBrowser * ; b . ). static . Browse external object inherited from TObject. ; It passes through inheritance tree and calls TBrowser::Add in appropriate cases. Static function. ; Definition at line 2033 of file TClass.cxx. ◆ Browse() [1/2]. void TClass::Browse ; (; TBrowser * ; b). overridevirtual . This method is called by a browser to get the class information. ; Reimplemented from TObject.; Definition at line 2077 of file TClass.cxx. ◆ Browse() [2/2]. Int_t TClass::Browse ; (; void * ; obj, . TBrowser * ; b . ); const. Browse objects of of the class described by this TClass object. ; Definition at line 2045 of file TClass.cxx. ◆ BuildEmulatedRealData(). void TClass::BuildEmulatedRealData ; (; const char * ; name, . Longptr_t ; offset, . TClass * ; cl, . Bool_t ; isTransient = kFALSE . ). Build the list of real data for an emulated class. ; Definition at line 2179 of file TClass.cxx. ◆ BuildRealData(). void TClass::BuildRealData ; (; void * ; pointer = nullptr, . Bool_t ; isTransient = kFALSE . ). Build a full list of persistent data m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:57376,inherit,inherited,57376,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inherited']
Modifiability,"::BinarySearchTree& b); copy constructor that creates a true copy, i.e. a completely independent tree. ~BinarySearchTree( void ); destructor. TMVA::BinarySearchTree* CreateFromXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); re-create a new tree (decision tree or search tree) from XML. void Insert(const TMVA::Event* ); insert a new ""event"" in the binary tree. void Insert(const TMVA::Event* , TMVA::Node* ); private internal function to insert a event (node) at the proper position. TMVA::BinarySearchTreeNode* Search(TMVA::Event* event) const; search the tree to find the node matching ""event"". TMVA::BinarySearchTreeNode* Search(TMVA::Event* , TMVA::Node* ) const; Private, recursive, function for searching. Double_t GetSumOfWeights(Int_t theType) const; return the sum of event (node) weights. Double_t GetSumOfWeights(Int_t theType) const; return the sum of event (node) weights. Double_t Fill(const vector<TMVA::Event*>& events, const vector<Int_t>& theVars, Int_t theType = -1); create the search tree from the event collection; using ONLY the variables specified in ""theVars"". Double_t Fill(const vector<TMVA::Event*>& events, Int_t theType = -1); create the search tree from the events in a TTree; using ALL the variables specified included in the Event. void NormalizeTree(vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator , vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator , UInt_t ). void NormalizeTree(); Normalisation of tree. void Clear(TMVA::Node* n = 0); clear nodes. Double_t SearchVolume(TMVA::Volume* , vector<const TMVA::BinarySearchTreeNode*>* events = 0); search the whole tree and add up all weigths of events that; lie within the given voluem. Double_t SearchVolume(TMVA::Node* , TMVA::Volume* , Int_t , vector<const TMVA::BinarySearchTreeNode*>* events); recursively walk through the daughter nodes and add up all weigths of events that; lie within the given volume. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__BinarySearchTree.html:6003,variab,variables,6003,root/html528/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html528/TMVA__BinarySearchTree.html,4,['variab'],['variables']
Modifiability,"::CladStorage &result);  Compute the gradient employing automatic differentiation. ;  ; TClass * IsA () const override;  ; Bool_t IsLinear () const;  ; Bool_t IsValid () const;  ; Bool_t IsVectorized () const;  ; TFormula & operator= (const TFormula &rhs);  = operator. ;  ; void Print (Option_t *option="""") const override;  Print the formula and its attributes. ;  ; void SetName (const char *name) override;  Set the name of the formula. ;  ; void SetParameter (const char *name, Double_t value);  Sets parameter value. ;  ; void SetParameter (Int_t param, Double_t value);  Set a parameter given a parameter index. ;  ; void SetParameters (const Double_t *params);  Set a vector of parameters value. ;  ; template<typename... Args> ; void SetParameters (Double_t arg1, Args &&... args);  Set a list of parameters. ;  ; void SetParName (Int_t ipar, const char *name);  ; template<typename... Args> ; void SetParNames (Args &&... args);  Set parameter names. ;  ; void SetVariable (const TString &name, Double_t value);  Sets variable value. ;  ; void SetVariables (const std::pair< TString, Double_t > *vars, const Int_t size);  Sets multiple variables. ;  ; void SetVectorized (Bool_t vectorized);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:13267,variab,variable,13267,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"::Closevoid Close(Option_t *option="""") overrideClose a file.Definition TFile.cxx:950; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::FactoryThis is the main MVA steering class.Definition Factory.h:80; TMVA::Factory::TrainAllMethodsvoid TrainAllMethods()Iterates through all booked methods and calls training.Definition Factory.cxx:1114; TMVA::Factory::BookMethodMethodBase * BookMethod(DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""")Book a classifier or regression method.Definition Factory.cxx:352; TMVA::Factory::TestAllMethodsvoid TestAllMethods()Evaluates all booked methods on the testing data and adds the output to the Results in the corresponi...Definition Factory.cxx:1271; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::GeneticFitterFitter using a Genetic Algorithm.Definition GeneticFitter.h:44; TMVA::IFitterTarget",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:49802,variab,variable,49802,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,1,['variab'],['variable']
Modifiability,"::Configurable::SetConfigNamevoid SetConfigName(const char *n)Definition Configurable.h:63; TMVA::Configurable::ParseOptionsvirtual void ParseOptions()options parserDefinition Configurable.cxx:124; TMVA::DataSetInfo::AddVariableVariableInfo & AddVariable(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0, char varType='F', Bool_t normalized=kTRUE, void *external=nullptr)add a variable (can be a complex expression) to the set of variables used in the MV analysisDefinition DataSetInfo.cxx:207; TMVA::DataSetManagerClass that contains all the data information.Definition DataSetManager.h:51; TMVA::DataSetManager::AddDataSetInfoDataSetInfo & AddDataSetInfo(DataSetInfo &dsi)stores a copy of the dataset info objectDefinition DataSetManager.cxx:105; TMVA::EventDefinition Event.h:51; TMVA::Event::GetValueFloat_t GetValue(UInt_t ivar) constreturn value of i'th variableDefinition Event.cxx:236; TMVA::Event::GetNVariablesUInt_t GetNVariables() constaccessor to the number of variablesDefinition Event.cxx:316; TMVA::IMethodInterface for all concrete MVA method implementations.Definition IMethod.h:53; TMVA::MethodBaseVirtual base Class for all MVA method.Definition MethodBase.h:111; TMVA::MethodBase::GetRegressionValuesconst std::vector< Float_t > & GetRegressionValues(const TMVA::Event *const ev)Definition MethodBase.h:214; TMVA::MethodBase::GetMvaValuevirtual Double_t GetMvaValue(Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0; TMVA::MethodBase::DeclareCompatibilityOptionsvirtual void DeclareCompatibilityOptions()options that are used ONLY for the READER to ensure backward compatibility they are hence without any...Definition MethodBase.cxx:596; TMVA::MethodBase::GetMethodTypeNameTString GetMethodTypeName() constDefinition MethodBase.h:332; TMVA::MethodBase::GetProbavirtual Double_t GetProba(const Event *ev)Definition MethodBase.cxx:2247; TMVA::MethodBase::GetMulticlassValuesvirtual const std::vector< Float_t > & Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:35175,variab,variablesDefinition,35175,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variablesDefinition']
Modifiability,"::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidInit(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Bool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample ; Double_tfDeltaPruneStrengthstep size in pruning, is adjusted according to experience of previous trees ; Double_tfErrorFractionntuple var: misclassification error fraction ; vector<TMVA::Event*,allocator<TMVA::Event*> >fEventSamplethe training events; UInt_tfMaxDepthmax depth; Int_tfNCutsgrid used in cut applied in node splitting; UInt_tfNNodesMaxmax # of nodes; Int_tfNodeMinEventsmin number of events in node ; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBefor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodDT.html:17902,variab,variables,17902,root/html528/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodDT.html,1,['variab'],['variables']
Modifiability,"::ConvertFromXMLAny ; (; const char * ; str, . TClass ** ; cl = nullptr, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). static . Read object of any class from XML, produced by ConvertToXML() method. ; If cl!=0, return actual class of object. GenericLayout and UseNamespaces should be the same as in ConvertToXML() ; Definition at line 177 of file TBufferXML.cxx. ◆ ConvertFromXMLChecked(). void * TBufferXML::ConvertFromXMLChecked ; (; const char * ; xml, . const TClass * ; expectedClass, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). staticprotected . Convert from XML and check if object derived from specified class When possible, cast to given class. ; Definition at line 201 of file TBufferXML.cxx. ◆ ConvertToXML() [1/2]. TString TBufferXML::ConvertToXML ; (; const TObject * ; obj, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). static . Converts object, inherited from TObject class, to XML string GenericLayout defines layout choice for XML file UseNamespaces allow XML namespaces. ; See TXMLSetup class for details ; Definition at line 105 of file TBufferXML.cxx. ◆ ConvertToXML() [2/2]. TString TBufferXML::ConvertToXML ; (; const void * ; obj, . const TClass * ; cl, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). static . Converts any type of object to XML string. ; GenericLayout defines layout choice for XML file UseNamespaces allow XML namespaces. See TXMLSetup class for details ; Definition at line 127 of file TBufferXML.cxx. ◆ CreateElemNode(). void TBufferXML::CreateElemNode ; (; const TStreamerElement * ; elem). protected . Create xml node correspondent to TStreamerElement object. ; Definition at line 702 of file TBufferXML.cxx. ◆ CreateItemNode(). XMLNodePointer_t TBufferXML::CreateItemNode ; (; const char * ; name). protected . Create item node of specified name. ; Definition at line 675 of file TBufferXML.cxx. ◆ DeclFileName(). static const char * TBufferX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:58876,inherit,inherited,58876,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['inherit'],['inherited']
Modifiability,"::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:524; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::FactoryThis is the main MVA steering class.Definition Factory.h:80; TMVA::Factory::TrainAllMethodsvoid TrainAllMethods()Iterates through all booked methods and calls training.Definition Factory.cxx:1114; TMVA::Factory::BookMethodMethodBase * BookMethod(DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""")Book a classifier or regression method.Definition Factory.cxx:352; TMVA::Factory::TestAllMethodsvoid TestAllMethods()Evaluates all booked methods on the testing data and adds the output to the Results in the corresponi...Definition Factory.cxx:1271; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::MethodBaseVirtual base Class for all MVA method.Definition MethodBase.h:111; TMVA::MethodCategor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:35998,variab,variable,35998,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['variab'],['variable']
Modifiability,"::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:524; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Types::kFisher@ kFisherDefinition Types.h:82; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; TMVA::TMVAGuivoid TMVAGui(const char *fName=""TMVA.root"", TString dataset=""""); Factory.h; AuthorKim Albertsson (adapted from code originally by Andreas Hoecker) ; Definition in file TMVACrossValidation.C. tutorialstmvaTMVACross",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:29396,variab,variable,29396,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,1,['variab'],['variable']
Modifiability,"::DataPtrstd::shared_ptr< DataType > DataPtr() constaccess to data pointerDefinition BasicFCN.h:75; ROOT::Fit::BasicFCN::ModelFunctionvirtual const IModelFunction & ModelFunction() constaccess to const reference to the model functionDefinition BasicFCN.h:78; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::PoissonLikelihoodFCNclass evaluating the log likelihood for binned Poisson likelihood fits it is template to distinguish ...Definition PoissonLikelihoodFCN.h:46; ROOT::Fit::PoissonLikelihoodFCN::NFitPointsvirtual unsigned int NFitPoints() constDefinition PoissonLikelihoodFCN.h:118; ROOT::Fit::PoissonLikelihoodFCN::IModelFunction::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunctionDefinition PoissonLikelihoodFCN.h:55; ROOT::Fit::PoissonLikelihoodFCN::PoissonLikelihoodFCNPoissonLikelihoodFCN(const BinData &data, const IModelFunction &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)Constructor from unbin data set and model function (pdf) managed by the users.Definition PoissonLikelihoodFCN.h:73; ROOT::Fit::PoissonLikelihoodFCN::DoDerivativevirtual double DoDerivative(const double *x, unsigned int icoord) constDefinition PoissonLikelihoodFCN.h:195; ROOT::Fit::PoissonLikelihoodFCN::BaseObjFunction::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunctionDefinition PoissonLikelihoodFCN.h:52; ROOT::Fit::PoissonLikelihoodFCN::PoissonLikelihoodFCNPoissonLikelihoodFCN(const PoissonLikelihoodFCN &f)Copy constructor.Definition PoissonLikelihoodFCN.h:91; ROOT::Fit::PoissonLikelihoodFCN::Clonevirtual BaseFunction * Clone() constclone the function (need to return Base for Windows)Definition PoissonLikelihoodFCN.h:115; ROOT::Fit::PoissonLikelihoodFCN::UseSumOfWeightSquarevoid UseSumOfWeightSquare(bool on=true)Definition PoissonLikelihoodFCN.h:173; ROOT::Fit::PoissonLikelihoodFCN::Is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html:10224,extend,extended,10224,doc/master/PoissonLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html,1,['extend'],['extended']
Modifiability,"::DataSetInfofDataSetInfothe data set; TMVA::DataSetManager*fDataSetManagerDSMTEST; TMVA::MsgLogger*fLoggermessage logger; map<TString,IMethod*>fMethodMapmap of methods; Double_tfMvaEventErrorper-event error returned by MVA; Double_tfMvaEventErrorUpperper-event error returned by MVA; Bool_tfSilentsilent mode; vector<Float_t>fTmpEvalVectemporary evaluation vector (if user input is v<double>); Bool_tfVerboseverbosity. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Reader(const TString& theOption = """", Bool_t verbose = 0); constructor. Reader(vector<TString>& varNames, const TString& theOption = """", Bool_t verbose = 0); constructor. Reader(vector<std::string>& varNames, const TString& theOption = """", Bool_t verbose = 0); constructor. Reader( const std::string& varNames, const TString& theOption, Bool_t verbose ); constructor. Reader(const TString& varNames, const TString& theOption, Bool_t verbose = 0); constructor. void DeclareOptions(); declaration of configuration options. ~Reader( void ); destructor. void Init( void ); default initialisation (no member variables); default initialisation (no member variables). void AddVariable(const TString& expression, Float_t* ); Add a float variable or expression to the reader. void AddVariable(const TString& expression, Int_t* ). void AddSpectator(const TString& expression, Float_t* ); Add a float spectator or expression to the reader. void AddSpectator(const TString& expression, Int_t* ); Add an integer spectator or expression to the reader. TString GetMethodTypeFromFile(const TString& filename); read the method type from the file. TMVA::IMethod* BookMVA(const TString& methodTag, const TString& weightfile); read method name from weight file. TMVA::IMethod* BookMVA(TMVA::Types::EMVA method, const TString& weightfile); books MVA method from weightfile. TMVA::IMethod* BookMVA(TMVA::Types::EMVA methodType, const char* xmlstr). Double_t EvaluateMVA( const std::vector<Float_t>& inputVec, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Reader.html:11431,config,configuration,11431,root/html528/TMVA__Reader.html,https://root.cern,https://root.cern/root/html528/TMVA__Reader.html,4,['config'],['configuration']
Modifiability,"::DecisionTree::GetRandomisedVariables ; (; Bool_t * ; useVariable, . UInt_t * ; variableMap, . UInt_t & ; nVars . ). Definition at line 1247 of file DecisionTree.cxx. ◆ GetRoot(). virtual DecisionTreeNode * TMVA::DecisionTree::GetRoot ; (; ); const. inlinevirtual . Reimplemented from TMVA::BinaryTree.; Definition at line 94 of file DecisionTree.h. ◆ GetSumWeights(). Double_t TMVA::DecisionTree::GetSumWeights ; (; const EventConstList * ; validationSample); const. calculate the normalization factor for a pruning validation sample ; Definition at line 1118 of file DecisionTree.cxx. ◆ GetTreeID(). Int_t TMVA::DecisionTree::GetTreeID ; (; ). inline . Definition at line 186 of file DecisionTree.h. ◆ GetVariableImportance() [1/2]. vector< Double_t > TMVA::DecisionTree::GetVariableImportance ; (; ). Return the relative variable importance, normalized to all variables together having the importance 1. ; The importance in evaluated as the total separation-gain that this variable had in the decision trees (weighted by the number of events) ; Definition at line 2745 of file DecisionTree.cxx. ◆ GetVariableImportance() [2/2]. Double_t TMVA::DecisionTree::GetVariableImportance ; (; UInt_t ; ivar). returns the relative importance of variable ivar ; Definition at line 2766 of file DecisionTree.cxx. ◆ IsA(). virtual TClass * TMVA::DecisionTree::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::BinaryTree.; Definition at line 243 of file DecisionTree.h. ◆ PruneNode(). void TMVA::DecisionTree::PruneNode ; (; TMVA::DecisionTreeNode * ; node). prune away the subtree below the node ; Definition at line 1194 of file DecisionTree.cxx. ◆ PruneNodeInPlace(). void TMVA::DecisionTree::PruneNodeInPlace ; (; TMVA::DecisionTreeNode * ; node). prune a node temporarily (without actually deleting its descendants which allows testing the pruned tree quality for many different pruning stages without ""touching"" the tree. ; Definition at line 1217 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:22263,variab,variable,22263,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"::EKernel. Member Enumeration Documentation. ◆ EKernel. enum TMVA::MethodPDEFoam::EKernel. EnumeratorkNone ; kGaus ; kLinN . Definition at line 74 of file MethodPDEFoam.h. Constructor & Destructor Documentation. ◆ MethodPDEFoam() [1/2]. TMVA::MethodPDEFoam::MethodPDEFoam ; (; const TString & ; jobName, . const TString & ; methodTitle, . DataSetInfo & ; dsi, . const TString & ; theOption = ""PDEFoam"" . ). init PDEFoam objects ; Definition at line 85 of file MethodPDEFoam.cxx. ◆ MethodPDEFoam() [2/2]. TMVA::MethodPDEFoam::MethodPDEFoam ; (; DataSetInfo & ; dsi, . const TString & ; theWeightFile . ). constructor from weight file ; Definition at line 123 of file MethodPDEFoam.cxx. ◆ ~MethodPDEFoam(). TMVA::MethodPDEFoam::~MethodPDEFoam ; (; void ; ). virtual . destructor ; Definition at line 310 of file MethodPDEFoam.cxx. Member Function Documentation. ◆ AddWeightsXMLTo(). void TMVA::MethodPDEFoam::AddWeightsXMLTo ; (; void * ; parent); const. virtual . create XML output of PDEFoam method variables ; Implements TMVA::MethodBase.; Definition at line 1152 of file MethodPDEFoam.cxx. ◆ CalculateMVAError(). Double_t TMVA::MethodPDEFoam::CalculateMVAError ; (; ). protected . Calculate the error on the Mva value. ; If fSigBgSeparated == true the error is calculated from the number of events in the signal and background PDEFoam cells.; If fSigBgSeparated == false, the error is taken directly from the PDEFoam cell. ; Definition at line 755 of file MethodPDEFoam.cxx. ◆ CalcXminXmax(). void TMVA::MethodPDEFoam::CalcXminXmax ; (; ). protected . Determine foam range [fXmin, fXmax] for all dimensions, such that a fraction of 'fFrac' events lie outside the foam. ; Definition at line 322 of file MethodPDEFoam.cxx. ◆ Class(). static TClass * TMVA::MethodPDEFoam::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodPDEFoam::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::Meth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html:34278,variab,variables,34278,doc/master/classTMVA_1_1MethodPDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html,1,['variab'],['variables']
Modifiability,"::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). unsigned int NDim() const; { return fChi2->NDim(); }. GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limited variable. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limited variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper); set upper/lower limited variable. bool SetFixedVariable(unsigned int ivar, const string& name, double val); set fixed variable. bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html:6667,variab,variable,6667,root/html528/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html,3,['variab'],['variable']
Modifiability,"::EProperty) ;  ; char * operator[] (UInt_t idx) const;  Return the address of the value at index idx ;  . Protected Member Functions; void Expand (UInt_t nCurr, UInt_t left);  ; TGenCollectionProxy * InitializeEx (Bool_t silent) override;  Proxy initializer. ;  ; void ReadItems (int nElements, TBuffer &b);  ; void Shrink (UInt_t nCurr, UInt_t left, Bool_t force);  ; void WriteItems (int nElements, TBuffer &b);  ;  Protected Member Functions inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; virtual void DeleteItem (Bool_t force, void *ptr) const;  Call to delete/destruct individual item. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  . Private Member Functions; TEmulatedCollectionProxy & operator= (const TEmulatedCollectionProxy &);  . Friends; class TCollectionProxy;  . Additional Inherited Members;  Static Public Attributes inherited from TVirtualCollectionProxy; static const Int_t fgIteratorArenaSize = 16;  The size of a small buffer that can be allocated on the stack to store iterator-specific information. ;  ;  Protected Types inherited from TGenCollectionProxy; typedef void *(* ArrIterfunc_t) (void *from, size_t size);  ; typedef void *(* Collectfunc_t) (void *from, void *to);  ; typedef ROOT::Detail::TCollectionProxyInfo::Environ< char[64]> Env_t;  ; typedef ROOT::Detail::TCollectionProxyInfo::EnvironBase EnvironBase_t;  ; typedef void *(* Feedfunc_t) (void *from, void *to, size_t size);  ; typedef std::vector< EnvironBase_t * > Proxies_t;  ; typedef void(* Sizing_t) (void *obj, size_t size);  ; typedef std::vector< TStaging * > Staged_t;  Collection of pre-allocated staged array for associative containers. ;  ;  Protected Attributes inherited from TGenCollectionProxy; Method fClear;  Method cache for container accessors: clear container. ;  ; Collectfunc_t fCollect;  Method to collect objects from container. ;  ; ArrIterfunc_t fConstruct;  Container accessors: bl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:10352,inherit,inherited,10352,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,"::ESTLtypeTStreamerElement::kSTLstring; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Int_tfCounter!value of data member when referenced by an array; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerBasicType. Function documentation; TStreamerBasicType(); Default ctor. TStreamerBasicType(const char* name, const char* title, Int_t offset, Int_t dtype, const char* typeName); Create a TStreamerBasicType object. ~TStreamerBasicType(); TStreamerBasicType dtor. ULong_t GetMethod() const; return addr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerBasicType.html:10118,inherit,inherits,10118,root/html602/TStreamerBasicType.html,https://root.cern,https://root.cern/root/html602/TStreamerBasicType.html,1,['inherit'],['inherits']
Modifiability,"::ESTLtypeTStreamerElement::kSTLstring; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Int_tfCtypeSTL contained type; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tfSTLtypetype of STL vector; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. private:. static TStreamerSTL::(anonymous)kWarned. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerSTL. ←. TStreamerSTLstring. Function documentation; TStreamerSTL(); Default ctor. TStreamerSTL(const char* name, const char* title, Int_t offset, const char* typeName, const TVirtualCollectionProxy& proxy, Bool_t dmPointer); Create a TStreamerSTL o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerSTL.html:10233,inherit,inherits,10233,root/html602/TStreamerSTL.html,https://root.cern,https://root.cern/root/html602/TStreamerSTL.html,1,['inherit'],['inherits']
Modifiability,"::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawHist.html:7764,variab,variable,7764,root/html534/TProofDrawHist.html,https://root.cern,https://root.cern/root/html534/TProofDrawHist.html,1,['variab'],['variable']
Modifiability,"::ETextMode mode). void GetCharacterUp(Float_t& chupx, Float_t& chupy); Return character up vector. QPaintDevice * GetDoubleBuffer(Int_t wid); Query the pointer to the dev offscreen buffer if any. void GetGeometry(Int_t wid, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); Returns the global cooordinate of the window ""wd"". const char * DisplayName(const char* = 0); { return ""localhost""; }. ULong_t GetPixel(Color_t cindex); Return pixel value associated to specified ROOT color number.; see: GQTGUI.cxx:QtColor() also. void GetRGB(Int_t index, Float_t& r, Float_t& g, Float_t& b); Get rgb values for color ""index"". Float_t GetTextMagnitude(); {return fTextMagnitude;}. void SetTextMagnitude(Float_t mgn); { fTextMagnitude = mgn;}. void GetTextExtent(UInt_t& w, UInt_t& h, char* mess); Return the size of a character string.; iw : text width; ih : text height; mess : message. Int_t GetFontAscent() const; Returns ascent of the current font (in pixels).; The ascent of a font is the distance from the baseline; to the highest position characters extend to. Int_t GetFontDescent() const; Returns the descent of the current font (in pixels.; The descent is the distance from the base line; to the lowest point characters extend to. Bool_t HasTTFonts() const; {return fUseTTF;}. void MoveWindow(Int_t wid, Int_t x, Int_t y); Move the window wd.; wd : Window identifier.; x : x new window position; y : y new window position. void PutByte(Byte_t b). void QueryPointer(Int_t& ix, Int_t& iy); Query pointer position.; ix : X coordinate of pointer; iy : Y coordinate of pointer. Pixmap_t ReadGIF(Int_t x0, Int_t y0, const char* file, Window_t id = 0); If id is NULL - loads the specified gif file at position [x0,y0] in the; current window. Otherwise creates pixmap from gif file. Int_t RequestLocator(Int_t mode, Int_t ctyp, Int_t& x, Int_t& y); deprecated. Int_t RequestString(Int_t x, Int_t y, char* text); Request string*-*-*-*-*-*-*-; *-* ==============; *-* x,y : position where text is displayed; *-* text",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGQt.html:27041,extend,extend,27041,root/html528/TGQt.html,https://root.cern,https://root.cern/root/html528/TGQt.html,3,['extend'],['extend']
Modifiability,"::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TGeoManager * fGeoManager {nullptr};  ; Int_t fTopVisible {-1};  ! is s ;  ; std::shared_ptr< RGeomViewer > fViewer;  . Additional Inherited Members;  Public Types inherited from TVirtualGeoPainter; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:13425,inherit,inherited,13425,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,2,['inherit'],['inherited']
Modifiability,"::GetMethodTypeFromFile ; (; const TString & ; filename). private . read the method type from the file ; Definition at line 337 of file Reader.cxx. ◆ GetMVAError(). Double_t TMVA::Reader::GetMVAError ; (; ); const. inline . Definition at line 94 of file Reader.h. ◆ GetMVAErrorLower(). Double_t TMVA::Reader::GetMVAErrorLower ; (; ); const. inline . Definition at line 95 of file Reader.h. ◆ GetMVAErrorUpper(). Double_t TMVA::Reader::GetMVAErrorUpper ; (; ); const. inline . Definition at line 96 of file Reader.h. ◆ GetName(). virtual const char * TMVA::Reader::GetName ; (; ); const. inlinevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 113 of file Reader.h. ◆ GetProba(). Double_t TMVA::Reader::GetProba ; (; const TString & ; methodTag, . Double_t ; ap_sig = 0.5, . Double_t ; mvaVal = -9999999 . ). evaluates probability of MVA for given set of input variables ; Definition at line 706 of file Reader.cxx. ◆ GetRarity(). Double_t TMVA::Reader::GetRarity ; (; const TString & ; methodTag, . Double_t ; mvaVal = -9999999 . ). evaluates the MVA's rarity ; Definition at line 737 of file Reader.cxx. ◆ Init(). void TMVA::Reader::Init ; (; void ; ). private . default initialisation (no member variables) ; Definition at line 292 of file Reader.cxx. ◆ IsA(). virtual TClass * TMVA::Reader::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::Configurable.; Definition at line 164 of file Reader.h. ◆ Log(). MsgLogger & TMVA::Reader::Log ; (; ); const. inlineprivate . Definition at line 162 of file Reader.h. ◆ SetVerbose(). void TMVA::Reader::SetVerbose ; (; Bool_t ; v). inline . Definition at line 115 of file Reader.h. ◆ Streamer(). virtual void TMVA::Reader::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::Configurable. ◆ StreamerNVirtual(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:28929,variab,variables,28929,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['variab'],['variables']
Modifiability,"::GetSourceFileKind ; (; const char * ; filename); const. private . Check whether the file's extension is compatible with C or C++. ; Return whether source, header, Linkdef or nothing. ; Definition at line 102 of file TModuleGenerator.cxx. ◆ GetUmbrellaName(). const std::string & ROOT::TModuleGenerator::GetUmbrellaName ; (; ); const. inline . Definition at line 76 of file TModuleGenerator.h. ◆ IsPCH(). bool ROOT::TModuleGenerator::IsPCH ; (; ); const. inline . Definition at line 52 of file TModuleGenerator.h. ◆ ParseArgs(). void TModuleGenerator::ParseArgs ; (; const std::vector< std::string > & ; args). Parse -I -D -U headers.h SomethingLinkdef.h. ; Definition at line 180 of file TModuleGenerator.cxx. ◆ WriteContentHeader(). void TModuleGenerator::WriteContentHeader ; (; std::ostream & ; out); const. Write a header file describing the content of this module through a series of variables inside the namespace ROOT::Dict::[DictionaryName]. ; Each variable is an array of string literals, with a const char* of 0 being the last element, e.g. ROOT::Dict::_DictName::arrIncludes[] = { ""A.h"", ""B.h"", 0 }; ; Definition at line 543 of file TModuleGenerator.cxx. ◆ WriteDefinesArray(). std::ostream & ROOT::TModuleGenerator::WriteDefinesArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 133 of file TModuleGenerator.h. ◆ WriteHeaderArray(). std::ostream & ROOT::TModuleGenerator::WriteHeaderArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 125 of file TModuleGenerator.h. ◆ WriteIncludePathArray(). std::ostream & ROOT::TModuleGenerator::WriteIncludePathArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 129 of file TModuleGenerator.h. ◆ WritePPCode(). std::ostream & ROOT::TModuleGenerator::WritePPCode ; (; std::ostream & ; out); const. inlineprivate . Definition at line 117 of file TModuleGenerator.h. ◆ WritePPDefines(). std::ostream & TModuleGenerator::WritePPDefines ; (; std::ostream & ; out); const. Write #i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html:7905,variab,variable,7905,doc/v632/classROOT_1_1TModuleGenerator.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html,2,['variab'],['variable']
Modifiability,"::IBaseFunctionMultiDim>&); ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>(int dim, int npoint); virtual ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction*Clone() const; virtual const ROOT::Fit::BinData&Data() const; virtual doubleDataElement(const double* x, unsigned int i, double* g) const; virtual voidGradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(); ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(const ROOT::Math::IBaseFunctionMultiDim&); boolIsWeighted() const; virtual const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&ModelFunction() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::BinData& data, const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = true); virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeights(); voidUseSumOfWeightSquare(bool on = true).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:2630,extend,extended,2630,root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,1,['extend'],['extended']
Modifiability,"::IMultiGenFunction * chi2func) {; 837 // perform the minimization initializing the minimizer starting from a given obj function; 838 fFitType = objFunc->Type();; 839 fExtObjFunction = nullptr;; 840 fObjFunction = std::move(objFunc);; 841 if (!DoInitMinimizer()) return false;; 842 return DoMinimization(chi2func);; 843}; 844template<class ObjFunc_t>; 845bool Fitter::DoWeightMinimization(std::unique_ptr<ObjFunc_t> objFunc, const ROOT::Math::IMultiGenFunction * chi2func) {; 846 // perform the minimization initializing the minimizer starting from a given obj function; 847 // and apply afterwards the correction for weights. This applies only for logL fitting; 848 this->fFitType = objFunc->Type();; 849 fExtObjFunction = nullptr;; 850 // need to use a temporary shared pointer to the objective function since we cannot use the unique pointer when it has been moved; 851 std::shared_ptr<ObjFunc_t> sObjFunc{ std::move(objFunc)};; 852 fObjFunction = sObjFunc;; 853 if (!DoInitMinimizer()) return false;; 854 if (!DoMinimization(chi2func)) return false;; 855 sObjFunc->UseSumOfWeightSquare();; 856 return ApplyWeightCorrection(*sObjFunc);; 857}; 858 ; 859 ; 860void Fitter::DoUpdateFitConfig() {; 861 // update the fit configuration after a fit using the obtained result; 862 if (fResult->IsEmpty() || !fResult->IsValid() ) return;; 863 for (unsigned int i = 0; i < fConfig.NPar(); ++i) {; 864 ParameterSettings & par = fConfig.ParSettings(i);; 865 par.SetValue( fResult->Value(i) );; 866 if (fResult->Error(i) > 0) par.SetStepSize( fResult->Error(i) );; 867 }; 868}; 869 ; 870int Fitter::GetNCallsFromFCN() {; 871 // retrieve ncalls from the fit method functions; 872 // this function is called when minimizer does not provide a way of returning the number of function calls; 873 int ncalls = 0;; 874 if (!fUseGradient) {; 875 const ROOT::Math::FitMethodFunction * fcn = dynamic_cast<const ROOT::Math::FitMethodFunction *>(fObjFunction.get());; 876 if (fcn) ncalls = fcn->NCalls();; 877 }; 878 else ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:33531,config,configuration,33531,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['config'],['configuration']
Modifiability,::InitArrays(Int_t newsize); voidTObject::MakeZombie(). private:. TEveSelectorToEventList(const TEveSelectorToEventList&); TEveSelectorToEventList&operator=(const TEveSelectorToEventList&). Data Members; public:. enum TSelectorDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTSelectorDraw::fAction! Action type; Bool_tTSelectorDraw::fCleanElisttrue if original Tree elist must be saved; Int_tTSelectorDraw::fDimensionDimension of the current expression; Long64_tTSelectorDraw::fDraw! Last entry loop number when object was drawn; TEventList*fEvList; Int_tTSelectorDraw::fForceReadForce Read flag; TListfInput; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TSelectorDraw::fManagerPointer to the formula manager; Int_tTSelectorDraw::fMultiplicityIndicator of the variability of the size of entries; Int_t*TSelectorDraw::fNbins![fDimension] Number of bins per dimension; Int_tTSelectorDraw::fNfill! Total number of histogram fills; Bool_tTSelectorDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); Long64_tTSelectorDraw::fOldEstimatevalue of Tree fEstimate when selector is called; TH1*TSelectorDraw::fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TSelectorDraw::fSelectPointer to selection formula; Bool_tTSelectorDraw::fSelectMultipletrue if selection has a variable index; Long64_tTSelectorDraw::fSelectedRowsNumber of selected entries; Long64_tTSelector,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSelectorToEventList.html:8546,variab,variability,8546,root/html528/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html528/TEveSelectorToEventList.html,2,['variab'],['variability']
Modifiability,"::IntegratorMultiDim&). Data Members; private:. ROOT::Math::VirtualIntegratorMultiDim*fIntegratorpointer to multi-dimensional integrator base class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IntegratorMultiDim(ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Generic constructor of multi dimensional Integrator. By default uses the Adaptive integration method. @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. IntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). SetFunction(const ROOT::Math::IMultiGenFunction& f). IntegratorMultiDim(const Function & f, unsigned int dim, IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Template Constructor of multi dimensional Integrator passing a generic function. By default uses the adaptive integration method. @param f integration function (generic function implementin operator()(const double *); @param dim function dimension; @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__IntegratorMultiDim.html:2888,adapt,adaptive,2888,root/html526/ROOT__Math__IntegratorMultiDim.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__IntegratorMultiDim.html,1,['adapt'],['adaptive']
Modifiability,"::InvReLUstd::shared_ptr< std::function< double(double)> > InvReLUDefinition NeuralNet.cxx:17; TMVA::DNN::GaussComplementstd::shared_ptr< std::function< double(double)> > GaussComplementDefinition NeuralNet.cxx:13; TMVA::DNN::Gaussstd::shared_ptr< std::function< double(double)> > GaussDefinition NeuralNet.cxx:12; TMVA::DNN::MinimizerTypeMinimizerType< list all the minimizer typesDefinition NeuralNet.h:321; TMVA::DNN::Sigmoidstd::shared_ptr< std::function< double(double)> > SigmoidDefinition NeuralNet.cxx:26; TMVA::DNN::gaussDoubledouble gaussDouble(double mean, double sigma)Definition NeuralNet.cxx:35; TMVA::DNN::ModeOutputValuesModeOutputValuesDefinition NeuralNet.h:179; TMVA::DNN::ModeOutputValues::SOFTMAX@ SOFTMAX; TMVA::DNN::ModeOutputValues::DIRECT@ DIRECT; TMVA::DNN::ModeOutputValues::SIGMOID@ SIGMOID; TMVA::DNN::SoftSignstd::shared_ptr< std::function< double(double)> > SoftSignDefinition NeuralNet.cxx:32; TMVA::DNN::InvSoftPlusstd::shared_ptr< std::function< double(double)> > InvSoftPlusDefinition NeuralNet.cxx:19; TMVA::DNN::ReLUstd::shared_ptr< std::function< double(double)> > ReLUDefinition NeuralNet.cxx:25; TMVA::DNN::isFlagSetbool isFlagSet(T flag, T value)Definition NeuralNet.h:212; TMVA::DNN::randomIntint randomInt(int maxValue)Definition NeuralNet.cxx:52; TMVA::DNN::InvTanhShiftstd::shared_ptr< std::function< double(double)> > InvTanhShiftDefinition NeuralNet.cxx:23; TMVA::DNN::DropContainerstd::vector< char > DropContainerDefinition NeuralNet.h:227; TMVA::DNN::InvSymmReLUstd::shared_ptr< std::function< double(double)> > InvSymmReLUDefinition NeuralNet.cxx:21; TMVA::DNN::InvLinearstd::shared_ptr< std::function< double(double)> > InvLinearDefinition NeuralNet.cxx:16; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; sumstatic uint64_t sum(uint64_t i)Definition Factory.cxx:2345; outputstatic void output(). tmvatmvasrcNeuralNet.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8cxx_source.html:32209,variab,variable,32209,doc/master/NeuralNet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8cxx_source.html,1,['variab'],['variable']
Modifiability,::MCFitter::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 65 of file MCFitter.h. ◆ DeclareOptions(). void TMVA::MCFitter::DeclareOptions ; (; ). privatevirtual . Declare MCFitter options. ; Implements TMVA::FitterBase.; Definition at line 67 of file MCFitter.cxx. ◆ DeclFileName(). static const char * TMVA::MCFitter::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 65 of file MCFitter.h. ◆ IsA(). virtual TClass * TMVA::MCFitter::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::FitterBase.; Definition at line 65 of file MCFitter.h. ◆ Run(). Double_t TMVA::MCFitter::Run ; (; std::vector< Double_t > & ; pars). virtual . Execute fitting. ; Implements TMVA::FitterBase.; Definition at line 86 of file MCFitter.cxx. ◆ SetParameters(). void TMVA::MCFitter::SetParameters ; (; Int_t ; cycles). set MC fitter configuration parameters ; Definition at line 78 of file MCFitter.cxx. ◆ Streamer(). virtual void TMVA::MCFitter::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::FitterBase. ◆ StreamerNVirtual(). void TMVA::MCFitter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 65 of file MCFitter.h. Member Data Documentation. ◆ fSamples. Int_t TMVA::MCFitter::fSamples. private . number of MC samples ; Definition at line 61 of file MCFitter.h. ◆ fSeed. UInt_t TMVA::MCFitter::fSeed. private . Seed for the random generator (0 takes random seeds) ; Definition at line 63 of file MCFitter.h. ◆ fSigma. Double_t TMVA::MCFitter::fSigma. private . new samples are generated randomly with a gaussian probability with fSigma around the current best value ; Definition at line 62 of file MCFitter.h. Libraries for TMVA::MCFitter:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MCFitter.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MCFitter.html:17412,config,configuration,17412,doc/master/classTMVA_1_1MCFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MCFitter.html,1,['config'],['configuration']
Modifiability,"::MakeZombie(); voidReadLeaves0Impl(TBuffer& b); voidReadLeaves1Impl(TBuffer& b); voidReadLeaves2Impl(TBuffer& b); voidReadLeavesImpl(TBuffer& b); voidSetSkipZip(Bool_t skip = kTRUE); Int_tWriteBasket(TBasket* basket, Int_t where). private:. TBranch(const TBranch&); Int_tFillEntryBuffer(TBasket* basket, TBuffer* buf, Int_t& lnew); TBranch&operator=(const TBranch&). Data Members; public:. enum EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fAddress! Address of 1st leaf (variable or object); Int_t*fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tfBasketSizeInitial Size of Basket Buffer; TObjArrayfBaskets-> List of baskets of this branch; TObjArrayfBranches-> List of Branches of this branch; TList*fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tfCompressCompression level and algorithm; TBasket*fCurrentBasket! Pointer to the current basket.; TDirectory*fDirectory! Pointer to directory where this branch buffers are stored; Long64_tfEntriesNumber of entries; TBuffer*fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tfEntryNumberCurrent entry number (last one filled in this branch); Int_tfEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringfFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; G__p2memfuncfFillLeaves! Pointer to the FillLeaves implementation to use. ; Style_tTAttFill::fFillStylefill area style; Long64_tfFirstBasketEntry! First entry in the current basket.; Long64_tfFirstEntryNumber of the firs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranch.html:10010,variab,variable,10010,root/html532/TBranch.html,https://root.cern,https://root.cern/root/html532/TBranch.html,1,['variab'],['variable']
