quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_distance. template<class DataTypes > . Data<Real> sofa::component::engine::generate::JoinPoints< DataTypes >::f_distance. Distance to merge points. . ◆ f_mergedPoints. template<class DataTypes > . Data<VecCoord > sofa::component::engine::generate::JoinPoints< DataTypes >::f_mergedPoints. Merged Points. . ◆ f_points. template<class DataTypes > . Data<VecCoord > sofa::component::engine::generate::JoinPoints< DataTypes >::f_points. Points. . Constructor detai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:15542,inherit,inherited,15542,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_elementsGroup. template<class DataTypes > . Data<type::vector<int > > sofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >::f_elementsGroup. Vector of groups (each element gives its group. . ◆ f_groups. template<class DataTypes > . Data<type::vector<sofa::type::PrimitiveGroup > > sofa::component::engine::generate::GroupFilterYoungModulus< DataTypes >::f_groups. Groups. . ◆ f_primitives. template<class DataTypes > . Data<type::vector<unsi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html:16315,inherit,inherited,16315,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_extrudedHexas. template<class DataTypes > . Data< type::vector<sofa::core::topology::BaseMeshTopology::Hexa> > sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::f_extrudedHexas. List of hexahedra generated during the extrusion. . ◆ f_extrudedQuads. template<class DataTypes > . Data< type::vector<sofa::core::topology::BaseMeshTopology::Quad> > sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::f_extrude",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:17052,inherit,inherited,17052,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_extrusionTriangles. template<class DataTypes > . Data< type::vector<sofa::core::topology::BaseMeshTopology::Triangle> > sofa::component::engine::generate::ExtrudeSurface< DataTypes >::f_extrusionTriangles. Subset triangle topology used for the extrusion. . ◆ f_extrusionVertices. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::ExtrudeSurface< DataTypes >::f_extrusionVertices. Position coordinates of the extrusion. . ◆ f_surfac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html:16365,inherit,inherited,16365,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_global. template<class T > . core::objectmodel::Data<VecValue> sofa::component::engine::select::IndicesFromValues< T >::f_global. Global values, in which the input values are searched. . ◆ f_indices. template<class T > . core::objectmodel::Data<VecIndex> sofa::component::engine::select::IndicesFromValues< T >::f_indices. Output indices of the given values, searched in global. . ◆ f_otherIndices. template<class T > . core::objectmodel::Data<VecIndex> sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values.html:16193,inherit,inherited,16193,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_in. template<class T > . Data<VecValue> sofa::component::engine::select::ValuesFromIndices< T >::f_in. input values . ◆ f_indices. template<class T > . Data<VecIndex> sofa::component::engine::select::ValuesFromIndices< T >::f_indices. Indices of the values. . ◆ f_out. template<class T > . Data<VecValue> sofa::component::engine::select::ValuesFromIndices< T >::f_out. Output values corresponding to the indices. . ◆ f_outStr. template<class T > . Data<std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html:15901,inherit,inherited,15901,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_in. template<class T > . core::objectmodel::Data<VecValue> sofa::component::engine::transform::MapIndices< T >::f_in. input indices . ◆ f_indices. template<class T > . core::objectmodel::Data<VecIndex> sofa::component::engine::transform::MapIndices< T >::f_indices. array containing in ith cell the input index corresponding to the output index i (or reversively if transpose=true) . ◆ f_out. template<class T > . core::objectmodel::Data<VecValue> sofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:16267,inherit,inherited,16267,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_in1. template<class T > . Data<VecIndex> sofa::component::engine::generate::MergeSets< T >::f_in1. first set of indices . ◆ f_in2. template<class T > . Data<VecIndex> sofa::component::engine::generate::MergeSets< T >::f_in2. second set of indices . ◆ f_op. template<class T > . Data<std::string> sofa::component::engine::generate::MergeSets< T >::f_op. name of operation to compute (union, intersection, difference, symmetric_difference) . ◆ f_out. template<cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html:15763,inherit,inherited,15763,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_indices. core::objectmodel::vectorData<type::vector<sofa::Index> > sofa::component::engine::transform::ROIValueMapper::f_indices. ◆ f_outputValues. Data<sofa::type::vector<SReal> > sofa::component::engine::transform::ROIValueMapper::f_outputValues. New vector of values. . ◆ f_value. core::objectmodel::vectorData<SReal> sofa::component::engine::transform::ROIValueMapper::f_value. ◆ nbROIs. Data<unsigned int> sofa::component::engine::transform::ROIValueMappe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:16064,inherit,inherited,16064,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_indices. template<class DataTypes > . Data<SetIndex> sofa::component::engine::select::PointsFromIndices< DataTypes >::f_indices. Indices of the points. . ◆ f_indices_position. template<class DataTypes > . Data<VecCoord> sofa::component::engine::select::PointsFromIndices< DataTypes >::f_indices_position. Coordinates of the points contained in indices. . ◆ f_X. template<class DataTypes > . Data<VecCoord> sofa::component::engine::select::PointsFromIndices< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices.html:15828,inherit,inherited,15828,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_indices. template<class DataTypes > . Data<sofa::type::vector<Index> > sofa::component::engine::transform::IndexValueMapper< DataTypes >::f_indices. Indices to map value on. . ◆ f_inputValues. template<class DataTypes > . Data<sofa::type::vector<Real> > sofa::component::engine::transform::IndexValueMapper< DataTypes >::f_inputValues. Already existing values (can be empty) . ◆ f_outputValues. template<class DataTypes > . Data<sofa::type::vector<Real> > sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:15848,inherit,inherited,15848,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_indices. template<class DataTypes > . Data<sofa::type::vector<Real> > sofa::component::engine::transform::Indices2ValuesMapper< DataTypes >::f_indices. Indices to map value on. . ◆ f_inputValues. template<class DataTypes > . Data<sofa::type::vector<Real> > sofa::component::engine::transform::Indices2ValuesMapper< DataTypes >::f_inputValues. Already existing values (can be empty) . ◆ f_outputValues. template<class DataTypes > . Data<sofa::type::vector<Real>",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html:15899,inherit,inherited,15899,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_indices1. template<class DataTypes > . Data<SetIndex> sofa::component::engine::generate::MergePoints< DataTypes >::f_indices1. Indices of the points of the first object. . ◆ f_indices2. template<class DataTypes > . Data<SetIndex> sofa::component::engine::generate::MergePoints< DataTypes >::f_indices2. Indices of the points of the second object. . ◆ f_noUpdate. template<class DataTypes > . Data<bool> sofa::component::engine::generate::MergePoints< DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html:16219,inherit,inherited,16219,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_nbInputs. template<class VecT > . Data<unsigned int> sofa::component::engine::generate::MergeVectors< VecT >::f_nbInputs. Number of input vectors. . ◆ f_output. template<class VecT > . Data<VecValue> sofa::component::engine::generate::MergeVectors< VecT >::f_output. Output vector. . ◆ vf_inputs. template<class VecT > . core::objectmodel::vectorData<VecValue> sofa::component::engine::generate::MergeVectors< VecT >::vf_inputs. Constructor details. ◆ MergeVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:15890,inherit,inherited,15890,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_nbInputs. template<class VecT > . Data<unsigned int> sofa::component::engine::transform::MathOp< VecT >::f_nbInputs. Number of input values. . ◆ f_op. template<class VecT > . sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > sofa::component::engine::transform::MathOp< VecT >::f_op. Selected operation to apply. . ◆ f_output. template<class VecT > . Data<VecValue> sofa::component::engine::transform::MathOp< VecT >::f_output. Output values. . ◆ vf_i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:15979,inherit,inherited,15979,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_nbMeshes. template<class DataTypes > . Data<unsigned int> sofa::component::engine::generate::MergeMeshes< DataTypes >::f_nbMeshes. number of meshes to merge . ◆ f_output_edges. template<class DataTypes > . Data< type::vector< type::fixed_array <unsigned int,2> > > sofa::component::engine::generate::MergeMeshes< DataTypes >::f_output_edges. Output Edges of the merged mesh. . ◆ f_output_hexahedra. template<class DataTypes > . Data< type::vector< type::fixed_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html:17881,inherit,inherited,17881,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_orientations. template<class DataTypes > . Data<type::vector<Quat> > sofa::component::engine::transform::RigidToQuatEngine< DataTypes >::f_orientations. Orientations (Quaternion) . ◆ f_orientationsEuler. template<class DataTypes > . Data<type::vector<Vec3> > sofa::component::engine::transform::RigidToQuatEngine< DataTypes >::f_orientationsEuler. Orientations (Euler angle) . ◆ f_positions. template<class DataTypes > . Data<type::vector<Vec3 > > sofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html:15736,inherit,inherited,15736,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ invertNormals. template<class DataTypes > . Data<bool> sofa::component::engine::generate::NormalsFromPoints< DataTypes >::invertNormals. Swap normals. . ◆ normals. template<class DataTypes > . Data< VecCoord > sofa::component::engine::generate::NormalsFromPoints< DataTypes >::normals. Computed vertex normals of the mesh. . ◆ position. template<class DataTypes > . Data< VecCoord > sofa::component::engine::generate::NormalsFromPoints< DataTypes >::position. Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html:16107,inherit,inherited,16107,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ DataEngine(). sofa::core::DataEngine::DataEngine ; (; ). protected . Constructor. . ◆ ~DataEngine(). sofa::core::DataEngine::~DataEngine ; (; ). overrideprotected . Destructor. Do nothing. . Function details. ◆ addInput(). void sofa::core::DataEngine::addInput ; (; sofa::core::objectmodel::BaseData * ; data). Add a new input to this engine. ; Add a new input to this engine Automatically adds the input fields to the datatracker . ◆ addOutput(). void sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html:15400,inherit,inherited,15400,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ InvertTransformMatrixEngine(). sofa::component::engine::transform::InvertTransformMatrixEngine::InvertTransformMatrixEngine ; (; ). inlineprotected . ◆ ~InvertTransformMatrixEngine(). sofa::component::engine::transform::InvertTransformMatrixEngine::~InvertTransformMatrixEngine ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). void sofa::component::engine::transform::InvertTransformMatrixEngine::doUpdate ; (; ). overrideprotectedvirtual . Up",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:16077,inherit,inherited,16077,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; void setInverse (type::Mat4x4 &inv, const Coord &x0);  functions that depends on OutputType and must be specialized More...;  ; void setInverse (Rigid3Types::Coord &inv, const Coord &x0);  ; void setInverse (Mat4x4 &inv, const Coord &x0);  ; void setInverse (defaulttype::Rigid3Types::Coord &inv, const Coord &x0);  ; void setInverse (type::Mat4x4 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:14646,inherit,inherited,14646,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:14389,inherit,inherited,14389,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,5,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  PairStateAccessor (MechanicalState< TDataTypes > *mm1=nullptr, MechanicalState< TDataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Friends; template<typename > ; class BilateralLagrangianConstraintSpecialization;  That any templates variation of BilateralLagrangianConstraintSpecialization are friend. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:23278,inherit,inherited,23278,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PlaneProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:3045,variab,variable,3045,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['variab'],['variable']
Modifiability,"inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ; virtual std::string getOperationType ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html:1786,inherit,inherited,1786,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,1,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:12361,inherit,inherited,12361,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,6,['inherit'],['inherited']
Modifiability,"inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:25668,inherit,inherited,25668,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,2,['inherit'],['inherited']
Modifiability,"ining all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doUpdate ()=0;  Where you put your engine's impl. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html:11685,inherit,inherited,11685,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,1,['inherit'],['inherited']
Modifiability,"inished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:5025,inherit,inherited,5025,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['inherit'],['inherited']
Modifiability,"initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contactIndex. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . ContactIndexMap sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::contactIndex. protected . Mapping of contactids to force element (+1, so that 0 means not active).",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:14724,inherit,inherited,14724,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,1,['inherit'],['inherited']
Modifiability,"initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< true >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::Mapping< TIn, TOut >; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_fileRigidMapping. template<class TIn , class TOut > . sofa::core::objectmodel::DataFileName sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::d_fileRigidMapping. Filename. . ◆ d_globalToL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:23657,inherit,inherited,23657,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,2,['inherit'],['inherited']
Modifiability,"initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static void buildHashTable (linearalgebra::CompressedRowSparseMatrix< SReal > &M, ConstantCRSMapping &mapping);  ;  Static Protected Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; template<core::matrixaccumulator::Contribution c> ; static SReal getContributionFactor (const sofa::core::MechanicalParams *mparams, const sofa::core::matrixaccumulator::get_component_type< c > *object);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; Data< bool > d_assembleStiffness;  If true, the stiffness is added to the global matrix. More...;  ; Data< bool > d_assembleMass;  If true, the mass is added to the global matrix. More...;  ; Data< bool > d_assembleDamping;  If true, the damping is added to the global matrix. More...;  ; Data< bool > d_assembleGeometricStiffness;  If true, the geometric stiffness of mappings is added to the global matrix. More...;  ; Data< bool > d_applyProjectiveConstraints;  If true, projective constraints are applied on the global matrix. More...;  ; Data< bool > d_applyMappedComponents;  If true, mapped components contribute to the global matrix. More...;  ; Data< bool > d_checkIndices;  If true, indices are verified before being added in to the global matrix, favoring security over speed. More...;  ; Data< bool > d_parallelAssemblyIndependentMatrices;  If true, independent matrices (global matrix vs mapped matrices) are assembled in parallel. More...;  ;  Public Attributes ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:24711,inherit,inherited,24711,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['inherit'],['inherited']
Modifiability,"initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; template class SOFA_COMPONENT_ENGINE_GENERATE_API ExtrudeEdgesAndGenerateQuads< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API ExtrudeQuadsAndGenerateHexas< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API ExtrudeSurface< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API GenerateCylinder< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API GenerateGrid< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API GenerateGrid< Vec2Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API GenerateRigidMass< Rigid3Types, Rigid3Mass >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API GenerateSphere< Vec3Types >;  ; const unsigned int adjacentVerticesToEdges [6][2] = {{2,3}, {1,3}, {1,2}, {0,3}, {0,2}, {0,1}};  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API GroupFilterYoungModulus< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API JoinPoints< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API MergeSets< int >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API MergeSets< unsigned int >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API MeshBarycentricMapperEngine< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API NormalsFromPoints< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API RandomPointDistributionInSurface< Vec3Types >;  ; template class SOFA_COMPONENT_ENGINE_GENERATE_API Spiral< Vec3Types >;  . Function Documentation. ◆ getModuleName(). const char * sofa::component::engine::generate::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::engine::generate::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_ENGINE_GENERATE_API void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1engine_1_1generate.html:2816,Variab,Variables,2816,api/master/sofa/html/namespacesofa_1_1component_1_1engine_1_1generate.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1engine_1_1generate.html,1,['Variab'],['Variables']
Modifiability,initExternalModule(). void sofa::component::constraint::lagrangian::correction::initExternalModule ; (; ). ◆ registerGenericConstraintCorrection(). void sofa::component::constraint::lagrangian::correction::registerGenericConstraintCorrection ; (; sofa::core::ObjectFactory * ; factory). ◆ registerLinearSolverConstraintCorrection(). void sofa::component::constraint::lagrangian::correction::registerLinearSolverConstraintCorrection ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::constraint::lagrangian::correction::registerObjects ; (; sofa::core::ObjectFactory * ; factory). ◆ registerPrecomputedConstraintCorrection(). void sofa::component::constraint::lagrangian::correction::registerPrecomputedConstraintCorrection ; (; sofa::core::ObjectFactory * ; factory). ◆ registerUncoupledConstraintCorrection(). void sofa::component::constraint::lagrangian::correction::registerUncoupledConstraintCorrection ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ LinearSolverConstraintCorrection< Rigid3Types >. template class SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< Rigid3Types >. ◆ LinearSolverConstraintCorrection< Vec1Types >. template class SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< Vec1Types >. ◆ LinearSolverConstraintCorrection< Vec2Types >. template class SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< Vec2Types >. ◆ LinearSolverConstraintCorrection< Vec3Types >. template class SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< Vec3Types >. ◆ PrecomputedConstraintCorrection< Rigid3Types >. template class SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1lagrangian_1_1correction.html:4083,Variab,Variable,4083,api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1lagrangian_1_1correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1lagrangian_1_1correction.html,1,['Variab'],['Variable']
Modifiability,"ink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Indices2ValuesMapper ();  ;  ~Indices2ValuesMapper () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html:13169,inherit,inherited,13169,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,1,['inherit'],['inherited']
Modifiability,"ink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static OglColorMap * getDefault ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  OglColorMap ();  ;  ~OglColorMap () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:13663,inherit,inherited,13663,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,1,['inherit'],['inherited']
Modifiability,"ink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html:9258,inherit,inherited,9258,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,1,['inherit'],['inherited']
Modifiability,"ink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TransformEngine ();  ;  ~TransformEngine () override;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures tha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html:13058,inherit,inherited,13058,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,1,['inherit'],['inherited']
Modifiability,"ink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html:11425,inherit,inherited,11425,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,2,['inherit'],['inherited']
Modifiability,"ink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  InvertTransformMatrixEngine ();  ;  ~InvertTransformMatrixEngine () override;  ; void doUpdate () override;  ;  Protected Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:11611,inherit,inherited,11611,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,2,['inherit'],['inherited']
Modifiability,"ink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RotateTransformMatrixEngine ();  ;  ~RotateTransformMatrixEngine () override;  ; void doUpdate () override;  ;  Protected Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:12881,inherit,inherited,12881,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,2,['inherit'],['inherited']
Modifiability,"ink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:20324,inherit,inherited,20324,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,1,['inherit'],['inherited']
Modifiability,"ink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  QuadPressureForceField ();  ; virtual ~QuadPressureForceField ();  ; void selectQuadsAlongPlane ();  ; void selectQuadsFromString ();  ; void updateQuadInformation ();  ; void initQuadInformation ();  ; bool isPointInPlane (Coord p);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html:17896,inherit,inherited,17896,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html,4,['inherit'],['inherited']
Modifiability,"ink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ~CollisionGroupManager () override;  Destructor. More...;  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:11371,inherit,inherited,11371,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,2,['inherit'],['inherited']
Modifiability,"ink);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RuleBasedContactManager ();  ;  ~RuleBasedContactManager () override;  ; std::string replaceVariables (std::string response);  ;  Protected Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse;  CollisionResponse ();  ;  ~CollisionResponse () override=default;  ; void changeInstance (Instance inst) override;  ; void contactCreationError (std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed);  Write messages in stringstream in case a contact failed to be created. More...;  ; void createNewContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  Create contacts if it has not been created before. More...;  ; void removeInactiveContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  ; void setNumberOfContacts () const;  ;  Protected Member Functions inherited from sofa::core::collision::ContactManager;  ContactManager ();  Constructor. More...;  ;  ~ContactManager () override;  Destructor. More...;  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:14849,inherit,inherited,14849,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['inherit'],['inherited']
Modifiability,"ink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::gl::component::shader::OglTexture; static void setActiveTexture (unsigned short unit);  Utility function to set current active texture. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglTexture;  OglTexture ();  ;  ~OglTexture () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Pro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html:15618,inherit,inherited,15618,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,2,['inherit'],['inherited']
Modifiability,"ink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >; SingleLink< PairStateAccessor< DataTypes, DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes, DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_distances. template<class DataTypes > . Data< type::vector<Real> > sofa::component::engine::select::NearestPointROI< DataTypes >::d_distances. List of distances between pairs",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:19164,inherit,inherited,19164,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,3,['inherit'],['inherited']
Modifiability,"inkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html:13560,inherit,inherited,13560,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,6,['inherit'],['inherited']
Modifiability,"inkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TransformPosition ();  ;  ~TransformPosition () override;  ; void getTransfoFromTxt ();  ; void getTransfoFromTrm ();  ; void getTransfoFromTfm ();  ; void selectTransformationMethod ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:14547,inherit,inherited,14547,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,1,['inherit'],['inherited']
Modifiability,"inked when using the src="""" syntax. More...;  ; bool isRequired () const;  Return whether the Data has to be set by the user for the owner component to be valid. More...;  ; void setDisplayed (bool b);  Set whether this Data should be displayed in GUIs. More...;  ; void setReadOnly (bool b);  Set whether this Data is read-only. More...;  ; void setPersistent (bool b);  Set whether this Data contains persistent information. More...;  ; void setAutoLink (bool b);  Set whether this data should be autolinked when using the src="""" syntax. More...;  ; void setRequired (bool b);  Set whether the Data has to be set by the user for the owner component to be valid. More...;  ; bool isSet () const;  ; void unset ();  Reset the isSet flag to false, to indicate that the current value is the default for this Data. More...;  ; void forceSet ();  Reset the isSet flag to true, to indicate that the current value has been modified. More...;  ; int getCounter () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty fla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:8654,inherit,inherited,8654,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,8,['inherit'],['inherited']
Modifiability,"inks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ProjectiveTransformEngine ();  ;  ~ProjectiveTransformEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:13229,inherit,inherited,13229,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['inherit'],['inherited']
Modifiability,"input points indices to input new coords. Also propagate event and update edgesAroundVertex and trianglesAroundVertex for data handling. ; Parameters. id: list of indices to move ; ancestors list of ancestors to define relative new position ; coefs: barycoef to locate new coord relatively to ancestors. @moveDOF bool allowing the move (default true) . Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ propagateTopologicalEngineChanges(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::propagateTopologicalEngineChanges ; (; ). overrideprotectedvirtual . function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ reinit(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeEdgesProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeEdgesProcess ; (; const sofa::type::vector< EdgeID > & ; indices, . const bool ; removeIsolatedItems = false . ). overrideprotectedvirtual . Remove a subset of edges. ; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. See alsoremoveEdgesWarning; Parameters. removeIsolatedItemsif true isolated vertices are also removed Important : parameter indices is not const because it is actually sorted from the highest index to the lowest one. . Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ removeItems(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeItems ; (; const sofa::type::vector< Triangl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:37007,variab,variables,37007,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['variab'],['variables']
Modifiability,"inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TransformEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html:2491,variab,variables,2491,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,1,['variab'],['variables']
Modifiability,"int a, int b, int c, int d, int e=-1);  Should the diagonal of abcd should be bd instead of ac ? More...;  ; bool needFlip (int p1, int p2, int p3, int p4, int q1, int q2, int q3, int q4);  Is the two given vertices order flipped. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html:6000,inherit,inherited,6000,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html,1,['inherit'],['inherited']
Modifiability,"int matrixSize, const int *inPermutation, int *outInversePermutation);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html:10410,inherit,inherited,10410,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,1,['inherit'],['inherited']
Modifiability,"int< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Vec3R m_locP1;  the 3 points projected in the parabol plan More...;  ; Vec3R m_locP2;  ; Vec3R m_locP3;  ; QuatR m_projection;  the quaternion doing the projection More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ParabolicProjectiveConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, DataTypes));  ; void addConstraint (unsigned index);  ; void setP1 (const Vec3R &p);  ; void setP2 (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:2435,inherit,inherited,2435,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"intLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:18830,inherit,inherited,18830,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,10,['inherit'],['inherited']
Modifiability,"ints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseInteractionConstraint(). sofa::core::behavior::BaseInteractionConstraint::BaseInteractionConstraint ; (; ). inlineprotected . ◆ ~BaseInteractionConstraint(). sofa::core::behavior::BaseInteractionConstraint::~BaseInteractionConstraint ; (; ). inlineoverrideprotected . Function details. ◆ getBaseConstraintIdentifiers(). virtual type::vector<std::string> sofa::core::behav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html:16147,inherit,inherited,16147,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,2,['inherit'],['inherited']
Modifiability,"io in Hooke's law (vector) More...;  ; Data< type::vector< Real > > d_young;  Young modulus in Hooke's law (vector) More...;  ; Data< Real > d_thickness;  Thickness of the elements. More...;  ; SingleLink< QuadBendingFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html:3031,inherit,inherited,3031,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"io::Image * image;  ; helper::io::Image * segmentation;  ; int bpp;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VoxelGridLoader, VoxelLoader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void clear ();  ; bool load () override;  ; bool canLoad () override;  ; void setVoxelSize (const type::Vec3 vSize);  ; type::Vec3 getVoxelSize () const override;  ; void addBackgroundValue (const int value);  ; int getBackgroundValue (const unsigned int idx=0) const;  ; void addActiveDataValue (const int value);  ; int getActiveDataValue (const unsigned int idx=0) const;  ; void getResolution (Vec3i &res) const;  ; int getDataSize () const override;  ; unsigned char * getData () override;  ; unsigned char * getSegmentID () override;  ; type::vector< unsigned int > getHexaIndicesInGrid () const override;  ; Vec6i getROI () const override;  ; void createSegmentation3DTexture (unsigned char **textureData, int &width, int &height, int &depth) override;  ;  Public Member Functions inherited from sofa::core::loader::VoxelLoader;  SOFA_ABSTRACT_CLASS (VoxelLoader, BaseLoader);  ; void addHexahedron (type::vector< Hexahed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:4177,variab,variables,4177,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['variab'],['variables']
Modifiability,"ion at some points of an object. /moving-a-model-with-key-controls; ; SOFA - Topic: [SOLVED] Moving a model with key controls. /moving-an-object-by-keyboard; ; SOFA - Topic: [SOLVED] Moving an object by keyboard. /moving-the-starting-point-of-a-beam; ; SOFA - Topic: [SOLVED] Moving the starting point of a beam. /moving-to-github-discussions-lets-vote; ; SOFA - Topic: Moving to GitHub discussions –> let’s vote!. /multimaterial-soft-robotic-finger-simulation-issue; ; SOFA - Topic: Multimaterial soft robotic finger simulation issue. /multiple-errors-when-building-sofa-on-win7-vs2012; ; SOFA - Topic: [SOLVED] Multiple Errors when building SOFA on Win7, VS2012. /multiple-objects-in-a-obj-file; ; SOFA - Topic: Multiple objects in a .obj file. /multiple-tags-for-an-object; ; SOFA - Topic: [SOLVED] Multiple tags for an object?. /multithreading-in-python; ; SOFA - Topic: [SOLVED] Multithreading in Python; SOFA - Topic: [SOLVED] Multithreading in Python. /multithreading-plugin-in-pyscn; ; SOFA - Topic: [SOLVED] Multithreading plugin in .pyscn. /muscle-contraction-simulation; ; SOFA - Topic: [SOLVED] Muscle contraction simulation. /narrow-phases; ; SOFA - Topic: Narrow phases ?. /natural-vibration-problem-using-a-cantilever-beam; ; SOFA - Topic: Natural vibration problem using a cantilever beam. /navigation-recorded-camera; ; SOFA - Topic: Navigation Recorded Camera. /navigationrecordedcamera-scn-not-working; ; SOFA - Topic: [SOLVED] NavigationRecordedCamera.scn not working ?. /ncremental-iterative-nonlinear-fea-with-deformation-dependent-loads; ; SOFA - Topic: Incremental-Iterative Nonlinear FEA with deformation-dependent loads. /need-help-with-the-rigidify-function-from-stlib-physics-mixedmaterial; ; SOFA - Topic: Need Help With the Rigidify function from stlib.physics.mixedmaterial. /needle-insertion-into-soft-tissue; ; SOFA - Topic: [SOLVED] Needle Insertion into Soft Tissue. /needle-insertion-simulation; ; SOFA - Topic: Needle Insertion Simulation. /needle-insertion-simula",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:352285,plugin,plugin-in-pyscn,352285,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-in-pyscn']"
Modifiability,"ion. More...;  ; Data< Real > d_drawForceScale;  DEBUG: scale used to render force vectors. More...;  ; Data< sofa::type::RGBAColor > d_drawForceColor;  DEBUG: color used to render force vectors. More...;  ; Data< Real > d_volumeAfterTC;  OUT: Volume after a topology change. More...;  ; Data< Real > d_surfaceAreaAfterTC;  OUT: Surface area after a topology change. More...;  ; SingleLink< TaitSurfacePressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology;  ; int lastTopolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:4655,inherit,inherited,4655,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"ion. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::grid::RegularGridTopology Class Reference . #include <RegularGridTopology.h>. Inheritance diagram for sofa::component::topology::container::grid::RegularGridTopology:. [legend]; Detailed Description; Regular grid in space. In c++, resolution is set in the constructor or using method setSize of the parent class, while the spatial extent is set using method setPos. In xml, see example files. . Public Attributes; Data< type::Vec3 > d_min;  Data storing min and max 3D position of the grid bounding box. More...;  ; Data< type::Vec3 > d_max;  Max end of the diagonal. More...;  ; Data< type::Vec3 > d_p0;  Data storing Position of point 0. More...;  ; Data< SReal > d_cellWidth;  Data if > 0 : dimension of each cell in the created grid. More...;  ;  Public Attributes inherited from sofa::component::topology::container::grid::GridTopology; Data< type::Vec3i > d_n;  Data storing the size of the grid in the 3 directions. More...;  ; Data< bool > d_computeHexaList;  Data bool to set option to compute topological elements. More...;  ; Data< bool > d_computeQuadList;  put true if the list of Quad is needed during init (default=true) More...;  ; Data< bool > d_computeTriangleList;  put true if the list of Triangles is needed during init (default=true) More...;  ; Data< bool > d_computeEdgeList;  put true if the list of Lines is needed during init (default=true) More...;  ; Data< bool > d_computePointList;  ; Data< bool > d_createTexCoords;  Data bool to set option to compute texcoords. More...;  ;  Public Attributes inherited from sofa::component::topology::container::constant::MeshTopology; sofa::core::objectmodel::RenamedData< SeqPoints > seqPoints;  ; sofa::core::objectmodel::RenamedData< SeqEdges > seqEdges;  ; sofa::core::objectmodel::RenamedData< SeqTriangles > seqTriangles;  ; sofa::core::objectmodel::RenamedDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html:1099,inherit,inherited,1099,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"ion. Public Member Functions |; List of all members . sofa::simulation::StoreResetStateVisitor Class Reference . #include <ResetVisitor.h>. Inheritance diagram for sofa::simulation::StoreResetStateVisitor:. [legend]. Public Member Functions;  StoreResetStateVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html:1035,inherit,inherited,1035,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,2,['inherit'],['inherited']
Modifiability,"ion::detection::intersection::TetrahedronDiscreteIntersection:. [legend]. Public Member Functions;  TetrahedronDiscreteIntersection (DiscreteIntersection *intersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &)=delete;  ; int computeIntersection (collision::geometry::Tetrahedron &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Tetrahedron &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ TetrahedronDiscreteIntersection(). sofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html:1700,inherit,inherited,1700,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_tetrahedron_discrete_intersection.html,1,['inherit'],['inherited']
Modifiability,"ion; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1473,variab,variable,1473,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,2,['variab'],['variable']
Modifiability,"ionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15979,inherit,inherited,15979,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,4,['inherit'],['inherited']
Modifiability,"ionSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; type::vector< type::Vec3f > m_normals;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS2 (DataDisplay, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Publ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:3764,inherit,inherited,3764,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,2,['inherit'],['inherited']
Modifiability,"ionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MultiVecDeriv x;  the solution vector is stored for warm-start More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolverAccessor; SingleLink< LinearSolverAccessor, LinearSolver, BaseLink::FLAG_STRONGLINK > l_linearSolver;  . Public Member Functions;  SOFA_CLASS2 (EulerImplicitSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getVelocityIntegrationFactor () const override;  ; SReal getPositionIntegrationFactor () const override;  ; virtual SReal getPositionIntegrationFactor (SReal dt) const;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative, SReal dt) const;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:4707,inherit,inherited,4707,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['inherit'],['inherited']
Modifiability,"ionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:24952,inherit,inherited,24952,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['inherit'],['inherited']
Modifiability,"ionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html:12701,inherit,inherited,12701,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,2,['inherit'],['inherited']
Modifiability,"ions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  . Protected Member Functions;  IncrSAP ();  ;  ~IncrSAP () override;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplaye",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:12236,inherit,inherited,12236,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,3,['inherit'],['inherited']
Modifiability,"ions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::State< TDataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessary for some shader types such as geometry or tessellation) More...;  ; Data< sofa::helper::OptionsGroup > blendEquation;  if alpha blendin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:27270,inherit,inherited,27270,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,"ions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SingleStateAccessor (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileNa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:16975,inherit,inherited,16975,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,ions |; List of all members . sofa::core::topology::EdgesRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesRemoved:. [legend]; Detailed Description; indicates that some edges are about to be removed . Public Attributes; sofa::type::vector< Topology::EdgeID > removedEdgesArray;  . Public Member Functions;  EdgesRemoved (const sofa::type::vector< Topology::EdgeID > _eArray);  ;  ~EdgesRemoved () override;  ; virtual const sofa::type::vector< Topology::EdgeID > & getArray () const;  ; virtual std::size_t getNbRemovedEdges () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedEdgesArray. sofa::type::vector<Topology::EdgeID> sofa::core::topology::EdgesRemoved::removedEdgesArray. Constructor details. ◆ EdgesRemoved(). sofa::core::topology::EdgesRemoved::EdgesRemoved ; (; const sofa::type::vector< Topology::EdgeID > ; _eArray). inline . ◆ ~EdgesRemoved(). sofa::core::topology::EdgesRemoved::~EdgesRemoved ; (; ). override . Function details. ◆ getArray(). virtual const sofa::type::vector<Topology::EdgeID>& sofa::core::topology::EdgesRemoved::getArray ; (; ); const. inlinevirtual . ◆ getNbRemovedEdges(). virtual std::size_t sofa::core::topology::EdgesRemoved::getNbRemovedEdges ; (; ); const. inlinevirtual . sofacoretopologyEdgesRemoved; Generated on Mon Nov 11 2024 03:16:03 for,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html:1121,inherit,inherited,1121,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html,1,['inherit'],['inherited']
Modifiability,"ions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer Class Reference . #include <MultilevelHexahedronSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer:. [legend]. Public Attributes; Data< int > _level;  Number of resolution levels between the fine and coarse mesh. More...;  ; Data< Vec3i > fineResolution;  fine resolution More...;  ; Data< type::vector< Index > > hexaIndexInRegularGrid;  indices of the hexa in the grid. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:1176,inherit,inherited,1176,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"ions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io::FileAccess::streambuf ; (; ); const. overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ write(). void sofa::helper::io::FileAccess::write",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:1060,inherit,inherited,1060,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,3,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"ions |; Protected Member Functions |; List of all members . sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes > Class Template Reference . #include <OscillatorProjectiveConstraint.h>. Inheritance diagram for sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; Apply sinusoidal trajectories to particles. Defined as where are the mean value, the amplitude, the pulsation and the phase, respectively. . Classes; struct  Oscillator;  . Protected Attributes; sofa::core::objectmodel::RenamedData< type::vector< Oscillator > > constraints;  ; Data< type::vector< Oscillator > > d_constraints;  Define a sequence of oscillating particules: [index, Mean(x,y,z), amplitude(x,y,z), pulsation, phase]. More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:1202,inherit,inherited,1202,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ions)> m_positions;  ; WriteOnlyAccessor< decltype(m_data->d_edges)> m_edges;  . Public Member Functions;  MeshXspLoadDataHook (MeshXspLoader *data);  ;  ~MeshXspLoadDataHook () override;  ; void setNumMasses (size_t n) override;  Called by the XspLoader to specify before loading the number of masses. More...;  ; void setNumSprings (size_t n) override;  Called by the XspLoader to specify before loading the number of springs. More...;  ; void finalizeLoading (bool isOk) override;  Called by the XspLoader when the loading is done. More...;  ; void addMass (SReal px, SReal py, SReal pz, SReal, SReal, SReal, SReal, SReal, bool, bool) override;  Add a new mass. More...;  ; void addSpring (size_t index1, size_t index2, SReal, SReal, SReal) override;  Add a new spring. More...;  ; void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal) override;  Add an extended spring. More...;  ;  Public Member Functions inherited from sofa::helper::io::XspLoaderDataHook; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  . Attribute details. ◆ m_data. MeshXspLoader* sofa::component::io::mesh::MeshXspLoadDataHook::m_data. ◆ m_edges. WriteOnlyAccessor<decltype(m_data->d_edges)> sofa::component::io::mesh::MeshXspLoadDataHook::m_edges. ◆ m_positions. WriteOnlyAccessor<decltype(m_data->d_positions)> sofa::component::io::mesh::MeshXspLoadDataHook::m_positions. Constructor details. ◆ MeshXspLoadDataHook(). sofa::component::io::mesh::MeshXspLoadDataHook::MeshXspLoadDataHook ; (; MeshXspLoader * ; data). ◆ ~MeshXspLoadDataHook(). sofa::component::io::mesh::MeshXspLoadDataHook::~MeshXspLoadDataHook ; (; ). override . Function details. ◆ addMass(). void sofa::component::io::mesh::MeshXspLoadDataHook::addMass ; (; SRe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_load_data_hook.html:1415,inherit,inherited,1415,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_load_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_load_data_hook.html,1,['inherit'],['inherited']
Modifiability,"ions;  CollisionResponse ();  ;  ~CollisionResponse () override=default;  ; void changeInstance (Instance inst) override;  ; void contactCreationError (std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed);  Write messages in stringstream in case a contact failed to be created. More...;  ; void createNewContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  Create contacts if it has not been created before. More...;  ; void removeInactiveContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  ; void setNumberOfContacts () const;  ;  Protected Member Functions inherited from sofa::core::collision::ContactManager;  ContactManager ();  Constructor. More...;  ;  ~ContactManager () override;  Destructor. More...;  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:14764,inherit,inherited,14764,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,2,['inherit'],['inherited']
Modifiability,"ions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html:4429,inherit,inherited,4429,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"ior::BaseInteractionConstraint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::BaseInteractionConstraint Class Reference . #include <BaseInteractionConstraint.h>; BaseInteractionConstraint is a constraint linking several bodies (MechanicalState) together. ; More... Inheritance diagram for sofa::core::behavior::BaseInteractionConstraint:. [legend]; Detailed Description; BaseInteractionConstraint is a constraint linking several bodies (MechanicalState) together. ; A BaseInteractionConstraint computes constraints applied to several simulated bodies given their current positions and velocities. . Public Member Functions;  SOFA_ABSTRACT_CLASS2 (BaseInteractionConstraint, BaseConstraint, StateAccessor);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; virtual type::vector< std::string > getBaseConstraintIdentifiers () override final;  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraint;  SOFA_ABSTRACT_CLASS (BaseConstraint, BaseConstraintSet);  ; int getGroup () const;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintInfo (const ConstraintParams *cParams, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &directions, VecConstArea &areas);  ; virtual void getConstraintResolution (const ConstraintParams *cParams, std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html:1098,inherit,inherited,1098,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,1,['inherit'],['inherited']
Modifiability,"ior::ConstraintResolution * > &resTab, unsigned int &offset) override;  ; bool isActive () const override;  if false, the constraint does nothing More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionConstraint, DataTypes), BaseInteractionConstraint, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v) override;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; void buildConstraintMatrix (const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) override;  ; void storeLambda (const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionConstraint;  SOFA_ABSTRACT_CLASS2 (BaseInteractionConstraint, BaseConstraint, StateAccessor);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; virtual type::vector< std::string > getBaseConstraintIdentifiers () override final;  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraint;  SOFA_ABSTRACT_CLASS (BaseConstraint, BaseConstraintSet);  ; int getGroup () const;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:5663,inherit,inherited,5663,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,3,['inherit'],['inherited']
Modifiability,"iption *=nullptr);  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ accumulatedForces. template<class TDataTypes > . AccumulationVecId<TDataTypes, V_DERIV, V_READ> sofa::core::State< TDataTypes >::accumulatedForces. Stores all the VecDerivId corresponding to a force. They can then be accumulated. . Constructor details. ◆ State(). template<class TDataTypes > . sofa::core::State< TDataTypes >::State. protected . ◆ ~State(). template<class TDataTypes > . sofa::core::State< TDataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html:17089,inherit,inherited,17089,api/master/sofa/html/classsofa_1_1core_1_1_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html,1,['inherit'],['inherited']
Modifiability,"iption; template<class TIn, class TOut>; class sofa::component::mapping::linear::CenterOfMassMapping< TIn, TOut >; mapping computing the center of mass of an object. the output of the mapping has to be a single dof. Its position is then set from the input DOFs, proportionally to their mass. This allow to control an object by setting forces on its center of mass. . Protected Attributes; sofa::core::behavior::BaseMass * masses;  pointer on the input DOFs mass More...;  ; double totalMass;  the total mass of the input object More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(CenterOfMassMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut));  ; void init () override;  ; void apply (const sofa::core::MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in) override;  ; void applyJ (const sofa::core::MechanicalParams *mparams, OutDataVecDeriv &out, const InDataVecDeriv &in) override;  ; void applyJT (const sofa::core::MechanicalParams *mparams, InDataVecDeriv &out, const OutDataVecDeriv &in) override;  ; void applyJT (const sofa::core::ConstraintParams *, InDataMatrixDeriv &, const OutDataMatrixDeriv &) override;  ; void draw (const core::visual::VisualParams *vparams) override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  CenterOfMassMapping ();  ; virtual ~CenterOfMassMapping ();  . Attribute details. ◆ masses. template<class TIn , class TOut > . sofa::core::behavior::BaseMass* sofa::component::mapping::linear::CenterOfMassMapping< TIn, TOut >::masses. protected . pointer on the input DOFs mass . ◆ totalMass. template<class TIn , class TOut > . double sofa::component::mapping::linear::CenterOfMassMapping< TIn, TOut >::totalMass. protected . the total mass of the input object . Constructor details. ◆ CenterOfMassMapping()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping.html:1789,inherit,inherited,1789,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_center_of_mass_mapping.html,1,['inherit'],['inherited']
Modifiability,"iptor< Real, 1 > & getEdgeNumericalIntegrationDescriptor ();  ; bool computeEdgeSegmentIntersection (EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b, Real &baryCoef);  ; sofa::type::vector< SReal > compute2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; sofa::type::vector< SReal > computeRest2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord, CPos &maxCoord) const;  Returns the axis aligned bounding box. More...;  ; const Coord & getPointPosition (const PointID pointId) const;  ; const Coord & getPointRestPosition (const PointID pointId) const;  ; sofa::core::State< DataTypes > * getDOF () const;  Returns the object where the DOFs are stored. More...;  ; float getIndicesScale () const;  ; void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< core::topology::PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs) override;  Called by the state change callback to initialize added points according to th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:15981,variab,variables,15981,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,3,['variab'],['variables']
Modifiability,"iptor< Real, 1 > & getEdgeNumericalIntegrationDescriptor ();  ; bool computeEdgeSegmentIntersection (EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b, Real &baryCoef);  ; sofa::type::vector< SReal > compute2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; sofa::type::vector< SReal > computeRest2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord, CPos &maxCoord) const;  Returns the axis aligned bounding box. More...;  ; const Coord & getPointPosition (const PointID pointId) const;  ; const Coord & getPointRestPosition (const PointID pointId) const;  ; sofa::core::State< DataTypes > * getDOF () const;  Returns the object where the DOFs are stored. More...;  ; float getIndicesScale () const;  ; void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< core::topology::PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:6683,variab,variables,6683,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,1,['variab'],['variables']
Modifiability,"ir respective mechanical states is added to an output list. . Public Attributes; SetIndex d_inputIndices1;  Only these indices are considered in the first model. More...;  ; SetIndex d_inputIndices2;  Only these indices are considered in the second model. More...;  ; Data< Real > f_radius;  Radius to search corresponding fixed point. More...;  ; Data< bool > d_useRestPosition;  If true will use restPosition only at init. More...;  . SetIndex f_indices1;  Indices of the source points on the first model. More...;  ; SetIndex f_indices2;  Indices of the fixed points on the second model. More...;  ; Data< sofa::type::vector< sofa::topology::Edge > > d_edges;  List of edge indices. More...;  ; Data< type::vector< unsigned > > d_indexPairs;  list of couples (parent index + index in the parent) More...;  ; Data< type::vector< Real > > d_distances;  List of distances between pairs of points. More...;  ; Data< bool > d_drawPairs;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(NearestPointROI, DataType",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:1974,inherit,inherited,1974,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,1,['inherit'],['inherited']
Modifiability,ire-modelling; ; SOFA - Topic: [SOLVED] Cardiac Guide-Wire Modelling. /carving-algorithm; ; SOFA - Topic: Carving algorithm ?. /carving-grid-topology; ; SOFA - Topic: Carving Grid topology. /carving-into-model-does-not-work-when-using-another-model; ; SOFA - Topic: Carving into model does not work when using another model. /carvingmanager-omnievent-applications-who-wrote-these-can-we-chat; . /page; . /3; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /4; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /5; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /c-code-in-tetrahedralcorotationalfemforcefield-cpp-h-inl; ; SOFA - Topic: [SOLVED] C++ code in TetrahedralCorotationalFEMForceField.cpp/.h/.inl. /cgal-configuration; ; SOFA - Topic: CGAL Configuration. /cgal-plugin-4-7-v21-06; ; SOFA - Topic: [SOLVED] CGAL plugin 4.7 v21.06. /cgalplugin-errors-when-i-compiled; ; SOFA - Topic: [SOLVED] comiling errors about CGALplugin. /cgal-plugin-install; ; SOFA - Topic: [SOLVED] CGAL plugin install. /cgalpluginmeshgenerationfromimageerror-in-creating-file-dataoutput-vtu; ; SOFA - Topic: [SOLVED] CGALplugin(MeshGenerationFromImage):Error in creating file data/output.vtu. /change-default-pose-of-scene; ; SOFA - Topic: Change default pose of scene. /change-point-indices-when-using-partiallinearmovementconstraint; ; SOFA - Topic: [SOLVED] Change point indices when using PartialLinearMovementConstraint. /changing-object-positions-after-every-reset; ; SOFA - Topic: [SOLVED] Changing object positions after every reset. /changing-tetra-mesh-topology-collisions; . /feed; ; [SOLVED] changing tetra mesh topology + collisions – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. /11; ; SOFA - Topic: [SOLVED] changing tetra mesh topology + collisions. /12; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:271857,plugin,plugin-,271857,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-']"
Modifiability,"irection. More...;  ; Data< Real > d_dmax;  Maximum distance from the origin along the normal direction. More...;  ; Data< bool > d_showForces;  draw quads which have a given pressure More...;  ; SingleLink< QuadPressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< QuadPressureInformation > > quadPressureMap;  ; sofa::core::topology::QuadSubsetData< sofa::type::vector< QuadPressureInformation > > d_quadPressureMap;  Map between quad indices and their pressure. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html:2657,inherit,inherited,2657,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"irection. More...;  ; Data< SReal > d_arrowSizeCoef;  Size of the drawn arrows (0->no arrows, sign->direction of drawing. More...;  ; Data< type::vector< Real > > d_intensity;  pressure intensity on edge normal More...;  ; Data< Coord > d_binormal;  Binormal of the 2D plane. More...;  ; Data< bool > d_showForces;  draw arrows of edge pressures More...;  ; SingleLink< EdgePressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EdgePressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html:2878,inherit,inherited,2878,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,3,['inherit'],['inherited']
Modifiability,"irstExport;  ; bool periodicExport;  ; bool validInit;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (WriteState, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:3929,variab,variables,3929,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['variab'],['variables']
Modifiability,"irtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doUpdate ()=0;  Where you put your engine's impl. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html:12038,inherit,inherited,12038,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,1,['inherit'],['inherited']
Modifiability,"irtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  . Protected Member Functions;  OglOITShader ();  ;  ~OglOITShader () override;  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglShader;  OglShader ();  ;  ~OglShader () override;  ;  Protected Member Functions inherited from sofa::core::visual::Shader;  Shader ();  ;  ~Shader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:14995,inherit,inherited,14995,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,4,['inherit'],['inherited']
Modifiability,"irtual void itIncRowBlock (InternalRowBlockIterator *it) const;  ; virtual void itDecRowBlock (InternalRowBlockIterator *it) const;  ; virtual bool itEqRowBlock (const InternalRowBlockIterator *it, const InternalRowBlockIterator *it2) const;  ; virtual bool itLessRowBlock (const InternalRowBlockIterator *it, const InternalRowBlockIterator *it2) const;  ; RowBlockConstIterator createRowBlockConstIterator (void *internalPtr) const;  ; RowBlockConstIterator createRowBlockConstIterator (Index internalData0, Index internalData1) const;  . Friends; std::ostream & operator (std::ostream &out, const RotationMatrix< Real > &v);  . Additional Inherited Members;  Static Protected Member Functions inherited from sofa::linearalgebra::BaseMatrix; static InternalBlockAccessor * getInternal (BlockConstAccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockConstAccessor *b);  ; static InternalBlockAccessor * getInternal (BlockAccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockAccessor *b);  ; static InternalColBlockIterator * getInternal (ColBlockConstIterator *b);  ; static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ data. template<class TReal > . type::vector<Real> sofa::linearalgebra::RotationMatrix< TReal >::data. protected . Function details. ◆ add() [1/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [2/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:14842,inherit,inherited,14842,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,3,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"irtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:13027,inherit,inherited,13027,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"irty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Protected Member Functions; virtual void readFromData ();  Implements how update the widgets knowing the data value. More...;  ; virtual void writeToData ();  Implements how to update the data, knowing the widget value. More...;  . Protected Slots; virtual void raiseDialog ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< std::string >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ openFileButton. QPushButton* sofa::gui::qt::DataFileNameWidget::openFileButton. protected . ◆ openFilePath. QLineEdit* sofa::gui::qt::DataFileNameWidget::openFilePath. protected . Constructor details. ◆ DataFileNameWidget(). sofa::gui::qt::DataFileNameWidget::DataFileNameWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< std::string > * ; data . ). inline . Function details. ◆ createWidgets(). bool sofa::gui::qt::DataFileNameWidget::createWidgets ; (; ). virtual . The implementation of this method holds the widget creation and the signal / slot connections. ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html:2675,inherit,inherited,2675,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_data_file_name_widget.html,9,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"irty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SphereGridTopology, GridTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; type::Vec3 getPoint (Index i) const override;  Overload method of. More...;  ; type::Vec3 getPointInGrid (int i, int j, int k) const override;  Overload method of. More...;  ; void setCenter (SReal x, SReal y, SReal z);  Set Sphere grid center by. More...;  ; void setAxis (SReal x, SReal y, SReal z);  Set Sphere axis center by. More...;  ; void setRadius (SReal radius);  Set Sphere radius from. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::grid::GridTopology;  SOFA_CLASS (GridTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3i, sofa::type::Vec3i);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void init () override;  BaseObject method should be overwritten by children. More...;  ; void reinit () override;  BaseObject method should be overwritten by children. More...;  ; void setSize (int nx, int ny, int nz);  Set grid resolution in the 3 directions. More...;  ; void setSize (type::Vec3i nXnYnZ);  Set grid resolution in the 3 directions, similar to. More...;  ; void setNx (int value);  Set grid X resolution,. More...;  ; void setNy (int value);  Set grid Y resolution,. More...;  ; void setNz (int value);  Set grid Z resolution,. More...;  ; int getNx () const;  Get X grid resolution,. More...;  ; int getNy () const;  Get Y grid resolution,. More...;  ; int getNz () const;  Get Z grid resolution,. More...;  ; Index getIndex (int i, int j, int k) const;  Get the one-dimensional index of a grid point given its. More...;  ; bool hasPos () cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html:5055,inherit,inherited,5055,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of li",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1793,inherit,inherited,1793,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['inherit'],['inherited']
Modifiability,"is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< T >; static constexpr bool isCopyOnWrite ();  ; static std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:19992,inherit,inherited,19992,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,1,['inherit'],['inherited']
Modifiability,"is function is use for the preconditioner it must be called at each time step event if setSystemMBKMatrix is not called. More...;  ; virtual void init_partial_solve ();  ; virtual void partial_solve (std::list< linearalgebra::BaseMatrix::Index > &, std::list< linearalgebra::BaseMatrix::Index > &, bool);  ; virtual linearalgebra::BaseMatrix * getSystemInverseBaseMatrix ();  Get the linear system inverse matrix, or nullptr if this solver does not build it. More...;  ; virtual bool readFile (std::istream &);  Read the Matrix solver from a file. More...;  ; virtual bool writeFile (std::ostream &);  Read the Matrix solver from a file. More...;  ; virtual void freezeSystemMatrix ();  Ask the solver to no longer update the system matrix. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseLinearSolver;  SOFA_ABSTRACT_CLASS (BaseLinearSolver, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html:8253,inherit,inherited,8253,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,2,['inherit'],['inherited']
Modifiability,"is object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergeMeshes, DataTypes), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html:3873,variab,variables,3873,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,1,['variab'],['variables']
Modifiability,"is object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  ConicalForceField ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:15909,inherit,inherited,15909,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,4,['inherit'],['inherited']
Modifiability,"is object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  SphereForceField ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field.html:16687,inherit,inherited,16687,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field.html,4,['inherit'],['inherited']
Modifiability,"isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >;  PairStateAccessor (MechanicalState< TDataTypes1 > *mm1=nullptr, MechanicalState< TDataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bDraw. template<typename TDataTypes1 , typename TDataTypes2 > . Data<bool> sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::bDraw. enable/disable drawing of the ellipsoid . ◆ center. template<typename TDataTypes1 , typename TDataTypes2 > . Data<VecCoord1> sofa::component::mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:20317,inherit,inherited,20317,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,2,['inherit'],['inherited']
Modifiability,"isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  ;  Protected Attributes inherited from sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:18276,inherit,inherited,18276,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['inherit'],['inherited']
Modifiability,"isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  ;  Static Public Member Functions inherited f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html:19191,inherit,inherited,19191,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,1,['inherit'],['inherited']
Modifiability,"ise a block factorisation is computed. More...;  ; sofa::Data< bool > d_constraintRestPos;  if false, constrains the pos to be zero / if true constraint the current position to stay at rest position More...;  ;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UniformLagrangianConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Constraint, DataTypes));  ; void buildConstraintMatrix (const sofa::core::ConstraintParams *cParams, DataMatrixDeriv &c, unsigned int &cIndex, const DataV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html:1601,inherit,inherited,1601,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"isionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TPoint() [1/3]. template<class DataTypes > . sofa::component::collision::geometry::TPoint< DataTypes >::TPoint ; (; ParentModel * ; model, . sofa::Index ; index . ). inline . ◆ TPoint() [2/3]. template<class TDataTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point.html:3330,inherit,inherited,3330,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point.html,1,['inherit'],['inherited']
Modifiability,"isionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< SphereCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TSphere() [1/2]. template<class DataTypes > . sofa::component::collision::geometry::TSphere< DataTypes >::TSphere ; (; ParentModel * ; model, . Index ; index . ). inline . ◆ TSphere() [2/2]. template<class DataTypes ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_sphere.html:3921,inherit,inherited,3921,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_sphere.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_sphere.html,1,['inherit'],['inherited']
Modifiability,"isplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_input. template<class TDataType > . Data<VecData> sofa::component::engine::generate::NormEngine< TDataType >::d_input. protected . input array of 3d points . ◆ d_normType. template<class TDataType > . Data<int> sofa::component::engine::generate::NormEngine< TDataType >::d_normType. protected . The type of norm. Use a negative value for the infinite norm. . ◆ d_output. template<class TDataType > . Data<VecReal> sofa::component::engine::generate::NormEngine< TDataType >::d_output. protected . output array of scalar norms . Constructor details. ◆ NormEngine(). template<class DataTypes > . sofa::component::engine::generate::NormEngine< DataTypes >::NormEngine. ◆ ~NormEngine(). template<class TDataType > . sofa::component::engine::generate::NormEngine< TDataType >::~NormEngine ; (; ). inlineoverride . Function details. ◆ doUpdate(). template<class DataType > . void sofa::component::engine::generate::NormEngine< DataType >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataType > . void sofa::component::engine::generate::NormEngine< DataType >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataType > . void sofa::component::engine::generate::NormEngine< DataType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class TDataType > . sofa::component::engine::generate::NormEngine< TDataType >::SOFA_CLASS ; (; SOFA_TEMPLATE(NormEngine< TDataType >, TDataType) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateNormEngine; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine.html:17880,variab,variables,17880,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine.html,1,['variab'],['variables']
Modifiability,"ist of all members . sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference . #include <QtGLViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qgl::QtGLViewer:. [legend]. Public Member Functions; virtual void drawColourPicking (common::ColourPickingVisitor::ColourCode code) override;  ;  QtGLViewer (QWidget *parent, const char *name="""");  ;  ~QtGLViewer () override;  ; QWidget * getQWidget () override;  ; int getWidth () override;  ; int getHeight () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void setCameraMode (core::visual::VisualParams::CameraType mode) override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ; QString helpString () const override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual sofa::simulation::Node * getScene ();  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:1192,inherit,inherited,1192,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,4,['inherit'],['inherited']
Modifiability,"ist of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PrimitiveUpdate, sofa::core::DataEngine);  ;  PrimitiveUpdate (MeshTopology *t);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:2414,inherit,inherited,2414,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,1,['inherit'],['inherited']
Modifiability,"ist of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVNormVisitor (const sofa::core::ExecParams *params, sofa::core::ConstMultiVecId a, unsigned l);  ; SReal getResult () const;  ; Result fwdMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the Cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_norm_visitor.html:1610,inherit,inherited,1610,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_norm_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_norm_visitor.html,2,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html:2914,inherit,inherited,2914,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,1,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point rendering. More...;  ; DeprecatedAndRemoved isEnabled;  ; Data< sofa::helper::OptionsGroup > primitiveType;  Select types of primitives to send (necessar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html:7381,inherit,inherited,7381,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,1,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; GLuint abo;  ; OglShader * shader;  ; int restPosition_lastUpdate;  ;  Protected Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFace;  Face culling (0 = no culling, 1 = cull back faces, 2 = cull front faces) More...;  ; Data< GLfloat > lineWidth;  Line width (set if != 1, only for lines rendering) More...;  ; Data< GLfloat > pointSize;  Point size (set if != 1, only for points rendering) More...;  ; Data< bool > lineSmooth;  Enable smooth line rendering. More...;  ; Data< bool > pointSmooth;  Enable smooth point re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:7415,inherit,inherited,7415,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,2,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; std::set< sofa::core::topology::BaseMeshTopology::TriangleID > m_dirtyTriangles;  ; std::set< sofa::core::topology::BaseMeshTopology::QuadID > m_dirtyQuads;  Internal buffer similar to. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:6816,inherit,inherited,6816,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; type::vector< type::Vec3f > m_normals;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS2 (DataDisplay, core::visual::VisualModel, Vec3State);  ; void init () overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:3467,inherit,inherited,3467,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Public Member Functions;  SOFA_CLASS (MergeVisualModels, Inherit);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:7503,inherit,inherited,7503,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,"ist of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:16759,inherit,inherited,16759,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['inherit'],['inherited']
Modifiability,"istream & sofa::core::topology::operator>> ; (; std::istream & ; in, . PointAncestorElem & ;  . ). ◆ operator>>() [4/5]. SOFA_CORE_API std::istream & sofa::core::topology::operator>> ; (; std::istream & ; in, . TopologyChange *& ; t . ). Input (empty) stream. . ◆ operator>>() [5/5]. SOFA_CORE_API std::istream & sofa::core::topology::operator>> ; (; std::istream & ; in, . TopologyElemID & ;  . ). ◆ parseElementTypeFromString(). SOFA_CORE_API geometry::ElementType sofa::core::topology::parseElementTypeFromString ; (; const std::string & ; s). ◆ parseElementTypeToString(). SOFA_CORE_API std::string sofa::core::topology::parseElementTypeToString ; (; geometry::ElementType ; t). ◆ parseTopologyChangeTypeFromString(). SOFA_CORE_API TopologyChangeType sofa::core::topology::parseTopologyChangeTypeFromString ; (; const std::string & ; s). ◆ parseTopologyChangeTypeToString(). SOFA_CORE_API std::string sofa::core::topology::parseTopologyChangeTypeToString ; (; TopologyChangeType ; t). Variable Documentation. ◆ EdgesAdded. class SOFA_CORE_API sofa::core::topology::EdgesAdded. ◆ EdgesIndicesSwap. class SOFA_CORE_API sofa::core::topology::EdgesIndicesSwap. ◆ edgesInHexahedronArray. SOFA_CORE_API const unsigned int sofa::core::topology::edgesInHexahedronArray = {{0,1},{0,3},{0,4},{1,2},{1,5},{2,3},{2,6},{3,7},{4,5},{4,7},{5,6},{6,7}}. List of pair of vertex indices (edge) in a hexahedron. . ◆ edgesInTetrahedronArray. SOFA_CORE_API const unsigned int sofa::core::topology::edgesInTetrahedronArray = {{0,1}, {0,2}, {0,3}, {1,2}, {1,3}, {2,3}}. List of pair of vertex indices (edge) in a tetrahedron. . ◆ EdgesMoved_Adding. class SOFA_CORE_API sofa::core::topology::EdgesMoved_Adding. ◆ EdgesMoved_Removing. class SOFA_CORE_API sofa::core::topology::EdgesMoved_Removing. ◆ EdgesRemoved. class SOFA_CORE_API sofa::core::topology::EdgesRemoved. ◆ EdgesRenumbering. class SOFA_CORE_API sofa::core::topology::EdgesRenumbering. ◆ EndingEvent. class SOFA_CORE_API sofa::core::topology::EndingEvent. ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1topology.html:17508,Variab,Variable,17508,api/master/sofa/html/namespacesofa_1_1core_1_1topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1topology.html,1,['Variab'],['Variable']
Modifiability,"it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SlidingLagrangianConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionConstraint, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void buildConstraintMatrix (const core::ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2) override;  ; void getConstraintViolation (const core::ConstraintParams *cParams, linearalgebra::BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void getConstr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:1963,inherit,inherited,1963,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UnilateralLagrangianConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionConstraint, DataTypes));  ; void setCustomTolerance (SReal tol);  ; void clear (int reserve=0);  ; virtual void addContact (SReal mu, Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, Coord Pfree, Coord Qfree, long id=0, PersistentID localid=0);  ; void addContact (SReal mu, Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void addContact (SReal mu, Deriv norm, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void buildConstraintMatrix (const core::Constrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:3436,inherit,inherited,3436,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"it()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; removeOnPluginCleanupCallbacks(const std::string &key)sofa::helper::system::PluginManager; removeOnPluginLoadedCallback(const std::string &key)sofa::helper::system::PluginManager; s_gui_postfixsofa::helper::system::PluginManagerstatic; unloadedPlugins() constsofa::helper::system::PluginManager; unloadPlugin(const std::string &path, std::ostream *errlog=",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:2453,plugin,pluginIsLoaded,2453,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,2,['plugin'],['pluginIsLoaded']
Modifiability,"itData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseContext; static BaseContext * getDefault ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ animate_. Data<bool> sofa::core::objectmodel::Context::animate_. Animate the Simulation(applied at initialization only) . ◆ d_canChangeSleepingState. Data<bool> sofa::core::objectmodel::Context::d_canChangeSleepingState. The node can change its sleeping state. . ◆ d_isSleeping. Data<bool> sofa::core::objectmodel::Context::d_isSleeping. The node is sleeping, and thus ignored by visitors. . ◆ dt_. Data<SReal> sofa::core::objectmodel::Context::dt_. Time step. . ◆ is_activated. Data<bool> sofa::core::objectmodel::Context::is_activated. To Activate a node. . ◆ time_. Data<SReal> sofa::core::objectmodel::Context::time_. Current time. . ◆ worldGravity_. Data<Vec3> sofa::core::objectmodel::Context::worldGravity_. Gravity in the world coordinate system. . Constructor details. ◆ Context(). sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:17866,inherit,inherited,17866,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,2,['inherit'],['inherited']
Modifiability,"itance diagram for sofa::core::behavior::ListDampingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >; void push_back (DampingMatrixAccumulator *m);  ; void remove (DampingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListDampingMatrixAccumulator; Generated on Mon Nov 11 2024 03:15",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html:428,inherit,inherited,428,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html,2,['inherit'],['inherited']
Modifiability,"itance diagram for sofa::helper::WriteAccessor< core::objectmodel::Data< T > >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteAccessor< core::objectmodel::Data< T > >; Read/Write Accessor. The Data is updated before being accessible. This means an expensive chain of Data link and Engine updates can be called For a pure write only Accessor, prefer WriteOnlyAccessor< core::objectmodel::Data<T> > Warningthe Data is updated (if needed) only by the Accessor constructor . Protected Attributes; data_container_type & data;  ;  Protected Attributes inherited from sofa::helper::WriteAccessor< T, Enable >; container_type * vref;  . Public Member Functions;  WriteAccessor (const WriteAccessor &)=delete;  ; WriteAccessor & operator= (const WriteAccessor &)=delete;  ;  WriteAccessor (data_container_type &d);  ;  WriteAccessor (data_container_type *d);  ;  ~WriteAccessor ();  ;  Public Member Functions inherited from sofa::helper::WriteAccessor< T, Enable >;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  ;  operator reference ();  ; pointer operator-> ();  ; reference operator* ();  ; template<class T2 > ; void operator= (const T2 &v);  . Protected Member Functions;  WriteAccessor (container_type *c, data_container_type &d);  . Attribute details. ◆ data. template<class T > . data_container_type& sofa::helper::WriteAccessor< core::objectmodel::Data< T > >::data. protected . Constructor details. ◆ WriteAccessor() [1/4]. template<class T > . sofa::helper::WriteAccessor< core::objectmodel::Data< T > >::WriteAccessor ; (; const WriteAccessor< core::objectmodel::Data< T > > & ; ). delete . ◆ WriteAccessor() [2/4]. template<class T > . sofa::helper::WriteAccessor< core::objectmodel::Data< T > >::WriteAccessor ; (; container_type * ; c, . data_container_type & ; d . ). inlineprotected . ◆ Wri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html:1319,inherit,inherited,1319,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,2,['inherit'],['inherited']
Modifiability,"ited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_gravity. Data<sofa::type::Vec3> sofa::component::mechanicalload::Gravity::f_gravity. Gravity in the world coordinate system. . Constructor details. ◆ Gravity(). sofa::component::mechanicalload::Gravity::Gravity ; (; ). protected . Function details. ◆ apply(). void sofa::component::mechanicalload::Gravity::apply ; (; ). overridevirtual . Modify the context of the Node. ; Implements sofa::core::objectmodel::ContextObject. ◆ SOFA_CLASS(). sofa::component::mechanicalload::Gravity::SOFA_CLASS ; (; Gravity ; , . core::objectmodel::ContextObject ;  . ). sofacomponentmechanicalloadGravity; Generated on Mon Nov 11 2024 02:52:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html:13067,inherit,inherited,13067,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,1,['inherit'],['inherited']
Modifiability,"ited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ ~MechanicalState(). template<class TDataTypes > . sofa::core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:25228,inherit,inherited,25228,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html:15048,inherit,inherited,15048,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  Pre-construction check method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:18313,inherit,inherited,18313,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html:15042,inherit,inherited,15042,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ _indexNodeSparseCompliance. template<class TDataTypes > . type::vector<int> sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::_indexNodeSparseCompliance. ◆ _sparseCompliance. template<class TDataTypes > . type::vector<Deriv> sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >::_sparseCompliance. ◆ active_local_forc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:20702,inherit,inherited,20702,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Unbuilt constraint system during resolution; Data< bool > wire_optimization;  constraints are reordered along a wire-like topology (from tip to base) More...;  ; SingleLink< LinearSolverConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:13992,inherit,inherited,13992,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >; SingleLink< PairStateAccessor< TDataTypes, TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< TDataTypes, TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BilateralLagrangianConstraint, DataTypes), SOFA_TEMPLATE(PairInteractionConstraint, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void buildConstraintMatrix (const ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2) override;  ; void getConstraintViolation (const ConstraintParams *cParams, BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void getVelocityViolation (BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2);  ; void getConstraintResolution (const ConstraintParams *cParams, std::vector< ConstraintResolution * > &resTab, unsigned int &offset) override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; virtual voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:4190,variab,variables,4190,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['variab'],['variables']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DifferenceEngine, TDataType), core::DataEngine);  ;  DifferenceEngine ();  ;  ~DifferenceEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html:2313,inherit,inherited,2313,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,1,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ _forceBinary. sofa::core::objectmodel::RenamedData<bool> sofa::component::io::mesh::MeshSTLLoader::_forceBinary. ◆ _headerSize. sofa::core::objectmodel::RenamedData<unsigned int> sofa::component::io::mesh::MeshSTLLoader::_headerSize. ◆ d_forceBinary. Data<bool> sofa::component::io::mesh::MeshSTLLoader::d_forceBinary. Force reading in binary mode. Even in first keyword of the file is solid. . ◆ d_headerSize. Data<unsigned int> sofa::component::io::mesh::MeshSTLLoader::d_headerSize. Size of the header binary file (just before the number of facet). . ◆ d_mergePositionUsingMap. Data<bool> sofa::component::io::mesh::MeshSTLLoader::d_mergePositionUsingMap. Since positions are duplicated in a STL, they have to be merged. Using a map to do so will temporarily duplicate mem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:20515,inherit,inherited,20515,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ d_edgesOnBorder. Data<type::vector< type::vector<unsigned int> > > sofa::component::io::mesh::MeshTrianLoader::d_edgesOnBorder. List of edges which are on the border of the mesh loaded. . ◆ d_neighborTable. Data<type::vector< type::fixed_array <int,3> > > sofa::component::io::mesh::MeshTrianLoader::d_neighborTable. Table of neighborhood triangle indices for each triangle. . ◆ d_trian2. Data<bool> sofa::component::io::mesh::MeshTrianLoader::d_trian2. Set to true if the mesh is a trian2 format. . ◆ d_trianglesOnBorderList. Data<type::vector<unsigned int> > sofa::component::io::mesh::MeshTrianLoader::d_trianglesOnBorderList. List of triangle indices which are on the border of the mesh loaded. . ◆ edgesOnBorder. sofa::core::objectmodel::RenamedData<type::vector< type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html:21190,inherit,inherited,21190,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ d_resolution. Data< unsigned > sofa::component::io::mesh::StringMeshCreator::d_resolution. Number of vertices. . ◆ resolution. sofa::core::objectmodel::RenamedData< unsigned > sofa::component::io::mesh::StringMeshCreator::resolution. Constructor details. ◆ StringMeshCreator(). sofa::component::io::mesh::StringMeshCreator::StringMeshCreator ; (; ). protected . Function details. ◆ canLoad(). bool sofa::component::io::mesh::StringMeshCreator::canLoad ; (; ). inlineoverridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ doClearBuffers(). void sofa::component::io::mesh::StringMeshCreator::doClearBuffers ; (; ). overrideprotectedvirtual . Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::StringMeshCreator::doLoad ; (; )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html:20362,inherit,inherited,20362,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ hexahedra. Data< type::vector<Hexahedron > > sofa::core::loader::VoxelLoader::hexahedra. Hexahedra loaded. . ◆ positions. Data< type::vector<sofa::type::Vec3 > > sofa::core::loader::VoxelLoader::positions. Coordinates of the nodes loaded. . Constructor details. ◆ VoxelLoader(). sofa::core::loader::VoxelLoader::VoxelLoader ; (; ). protected . ◆ ~VoxelLoader(). sofa::core::loader::VoxelLoader::~VoxelLoader ; (; ). overrideprotected . Function details. ◆ addHexahedron() [1/2]. void sofa::core::loader::VoxelLoader::addHexahedron ; (; type::vector< Hexahedron > * ; pHexahedra, . const type::fixed_array< unsigned int, 8 > & ; p . ). ◆ addHexahedron() [2/2]. void sofa::core::loader::VoxelLoader::addHexahedron ; (; type::vector< Hexahedron > * ; pHexahedra, . unsigned int ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html:14121,inherit,inherited,14121,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ GIDMeshLoader(). sofa::component::io::mesh::GIDMeshLoader::GIDMeshLoader ; (; ). protected . ◆ ~GIDMeshLoader(). sofa::component::io::mesh::GIDMeshLoader::~GIDMeshLoader ; (; ). overrideprotected . Function details. ◆ doClearBuffers(). void sofa::component::io::mesh::GIDMeshLoader::doClearBuffers ; (; ). overrideprotectedvirtual . Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::GIDMeshLoader::doLoad ; (; ). overridevirtual . Implements sofa::core::loader::MeshLoader. ◆ readGID(). bool sofa::component::io::mesh::GIDMeshLoader::readGID ; (; std::ifstream & ; file). protected . ◆ SOFA_CLASS(). sofa::component::io::mesh::GIDMeshLoader::SOFA_CLASS ; (; GIDMeshLoader ; , . sofa::core::loader::MeshLoader ;  . ). Enum details. ◆ Ele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:19923,inherit,inherited,19923,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ OffSequenceLoader(). sofa::component::io::mesh::OffSequenceLoader::OffSequenceLoader ; (; ). protected . Function details. ◆ clear(). void sofa::component::io::mesh::OffSequenceLoader::clear ; (; ). ◆ handleEvent(). void sofa::component::io::mesh::OffSequenceLoader::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::io::mesh::OffSequenceLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::OffSequenceLoader::load ; (; const char * ; filename). virtual . ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:20476,inherit,inherited,20476,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ SceneLoader(). sofa::core::loader::SceneLoader::SceneLoader ; (; ). protected . Constructor. . ◆ ~SceneLoader(). sofa::core::loader::SceneLoader::~SceneLoader ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ canLoad(). bool sofa::core::loader::SceneLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::SceneLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::SceneLoader::reinit ; (; ). overridevirtual . Update method called when variables us",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:13246,inherit,inherited,13246,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,2,['inherit'],['inherited']
Modifiability,"ited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Function details. ◆ addInGroup(). void sofa::component::io::mesh::MeshGmshLoader::addInGroup ; (; type::vector< sofa::core::loader::PrimitiveGroup > & ; group, . int ; tag, . int ; eid . ). protected . ◆ doClearBuffers(). void sofa::component::io::mesh::MeshGmshLoader::doClearBuffers ; (; ). overrideprotectedvirtual . Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::MeshGmshLoader::doLoad ; (; ). overridevirtual . Implements sofa::core::loader::MeshLoader. ◆ normalizeGroup(). void sofa::component::io::mesh::MeshGmshLoader::normalizeGroup ; (; type::vector< sofa::core::loader::PrimitiveGroup > & ; group). protected . ◆ readGmsh(). bool sofa::component::io::mesh::MeshGmshLoader::readGmsh ; (; std::ifstream & ; file, . const unsigned int ; gmshFormat ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html:20088,inherit,inherited,20088,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html,2,['inherit'],['inherited']
Modifiability,"itialized. template<class DataTypes > . bool sofa::component::engine::generate::ExtrudeSurface< DataTypes >::initialized. ◆ isVisible. template<class DataTypes > . Data<bool> sofa::component::engine::generate::ExtrudeSurface< DataTypes >::isVisible. is Visible ? . Constructor details. ◆ ExtrudeSurface(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeSurface< DataTypes >::ExtrudeSurface. protected . ◆ ~ExtrudeSurface(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeSurface< DataTypes >::~ExtrudeSurface ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeSurface< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeSurface< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeSurface< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeSurface< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeSurface< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ExtrudeSurface< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateExtrudeSurface; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html:19910,variab,variables,19910,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,1,['variab'],['variables']
Modifiability,"itialized;  ; helper::RandomGenerator rg;  ; Data< unsigned int > randomSeed;  Set a specified seed for random generation (0 for ""true pseudo-randomness"". More...;  ; Data< bool > isVisible;  is Visible ? More...;  ; Data< bool > drawOutputPoints;  Output points visible ? More...;  ; Data< Real > minDistanceBetweenPoints;  Min Distance between 2 points (-1 for true randomness) More...;  ; Data< unsigned int > numberOfInPoints;  Number of points inside. More...;  ; Data< unsigned int > numberOfTests;  Number of tests to find if the point is inside or not (odd number) More...;  ; Data< VecCoord > f_vertices;  Vertices. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Triangle > > f_triangles;  Triangles indices. More...;  ; Data< VecCoord > f_inPoints;  Points inside the surface. More...;  ; Data< VecCoord > f_outPoints;  Points outside the surface. More...;  ; unsigned int safeCounter;  ; unsigned int safeLimit;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecCoord directions;  ; helper::TriangleOc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:1755,inherit,inherited,1755,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['inherit'],['inherited']
Modifiability,"itializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AttachBodyButtonSetting()sofa::gui::component::AttachBodyButtonSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizesofa::gui::component::AttachBodyButtonSetting; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showFactorSizesofa::gui::component::AttachBodyButtonSetting; d_stiffnesssofa::gui::component::AttachBodyButtonSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::stri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html:2195,Config,ConfigurationSetting,2195,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,1,['Config'],['ConfigurationSetting']
Modifiability,"ities. It introduces Datas for the alarm distance and contact distance. Cubes intersection is modified to use proximities. . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if us",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:1524,inherit,inherited,1524,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['inherit'],['inherited']
Modifiability,"itional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (incl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:12754,inherit,inherited,12754,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,2,['inherit'],['inherited']
Modifiability,"itive semi-definite) More...;  ; static void PSDProjection (Real &A00, Real &A01, Real &A10, Real &A11);  ; static void PSDProjection (type::Mat< 1, 1, Real > &);  ; static void NSDProjection (type::Mat< 3, 3, Real > &A);  project a symmetric 3x3 matrix to a NSD (symmetric, negative semi-definite) More...;  ; static void NSDProjection (type::Mat< 2, 2, Real > &A);  project a symmetric 2x2 matrix to a NSD (symmetric, negative semi-definite) More...;  ; static void NSDProjection (Real &A00, Real &A01, Real &A10, Real &A11);  ; static void NSDProjection (type::Mat< 1, 1, Real > &);  . Function details. ◆ eigenDecomposition() [1/2]. template<typename Real > . void sofa::helper::Decompose< Real >::eigenDecomposition ; (; const type::Mat< 2, 2, Real > & ; A, . type::Mat< 2, 2, Real > & ; V, . type::Vec< 2, Real > & ; diag . ). static . Non-iterative Eigensystem decomposition: eigenvaluesParameters. diagand eigenvectors (columns of; V)of the 2x2 Real Matrix; A. Warningthis method is instable in specific configurations TODO . ◆ eigenDecomposition() [2/2]. template<typename Real > . void sofa::helper::Decompose< Real >::eigenDecomposition ; (; const type::Mat< 3, 3, Real > & ; A, . type::Mat< 3, 3, Real > & ; V, . type::Vec< 3, Real > & ; diag . ). static . Non-iterative & faster Eigensystem decomposition: eigenvaluesParameters. diagand eigenvectors (columns of; V)of the 3x3 Real Matrix; ADerived from Wild Magic Library . ◆ eigenDecomposition_iterative() [1/2]. template<class Real > . void sofa::helper::Decompose< Real >::eigenDecomposition_iterative ; (; const type::Mat< 2, 2, Real > & ; M, . type::Mat< 2, 2, Real > & ; V, . type::Vec< 2, Real > & ; diag . ). static . Eigensystem decomposition: eigenvaluesParameters. diagand eigenvectors (columns of; V)of the 2x2 Real Matrix; MDerived from Wild Magic Library . ◆ eigenDecomposition_iterative() [2/2]. template<class Real > . void sofa::helper::Decompose< Real >::eigenDecomposition_iterative ; (; const type::Mat< 3, 3, Real > &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html:8160,config,configurations,8160,api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,2,['config'],['configurations']
Modifiability,"itor:. [legend]; Detailed Description; propagating position and velocity through non-mechanical mappings (while MechanicalPropagateOnlyPositionAndVelocityVisitor is propagating mechanical mappings) . Public Member Functions;  UpdateMappingVisitor (const sofa::core::ExecParams *params);  ; void processMapping (simulation::Node *node, core::BaseMapping *obj);  ; void processMechanicalMapping (simulation::Node *, core::BaseMapping *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html:1192,inherit,inherited,1192,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,2,['inherit'],['inherited']
Modifiability,"itor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalAccumulateJacobian (const core::ConstraintParams *_cparams, core::MultiMatrixDerivId _res);  ; void bwdMechanicalMapping (simulation::Node *node, core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this visitor can be parallelized. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, core::BaseMapping *) override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the Constrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html:1623,inherit,inherited,1623,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html,2,['inherit'],['inherited']
Modifiability,"itorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual void bwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual void bwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the ConstraintSolver. More...;  ; virtual void bwdConstraintSet (simulation::Node *, sofa::core::behavior::BaseConstraintSet *);  Process all the BaseConstraintSet. More...;  ; virtual void bwdProjectiveConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseProjectiveConstraintSet *c);  Process all the BaseProjectiveConstraintSet. More...;  ; virtual void bwdConstraintSet (VisitorContext *ctx, sofa::core::behavior::BaseConstraintSet *c);  Process all the BaseConstraintSet. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; Visitor & setTags (const TagSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html:8512,inherit,inherited,8512,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,2,['inherit'],['inherited']
Modifiability,"itory::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar and the relative paths specified by the parameter paths. . ◆ FileRepository() [5/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const char * ; relativePath, . const fileKeysMap & ; iniFilesAndKeys . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar, the relative path specified by the parameter relativePath and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ FileRepository() [6/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths, . const fileKeysMap & ; iniFilesAndKeys . ). Initialize the set of paths using the environment variable specified by the parameter envVar, the relative paths specified by the parameter paths and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ ~FileRepository(). sofa::helper::system::FileRepository::~FileRepository ; (; ). Function details. ◆ addFirstPath(). void sofa::helper::system::FileRepository::addFirstPath ; (; const std::string & ; path). Adds a path to the front of the set of paths. . ◆ addLastPath(). void sofa::helper::system::FileRepository::addLastPath ; (; const std::string & ; path). Adds a path to the back of the set of paths. . ◆ cleanPath(). std::string sofa::helper::system::FileRepository::cleanPath ; (; const std::string & ; path). static . Replaces every occurrences of ""//"" by ""/"" . ◆ clear(). void sofa::helper::system::FileRepository::clear ; (; ). Remove all known paths. . ◆ displayPaths(). void sofa::helper::system::FileRepository::displayPaths ; (; ); const. inline . ◆ entrySeparator(). static char sofa::helper::system::FileRepository::entrySeparator ; (; ). inlinestatic . OS-dependan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:5867,variab,variable,5867,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,2,['variab'],['variable']
Modifiability,"its extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; size_t m_systemSize;  Save system size for update of indices (doUpdateInternal) More...;  ; bool m_isTotalForceUsed;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ConstantForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Init function. More...;  ; void addForce (const core::MechanicalParams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:3285,inherit,inherited,3285,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,3,['inherit'],['inherited']
Modifiability,"its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Protected Attributes; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologyData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data);  Constructor. More...;  ;  ~TopologyData ();  Default Destructor. More...;  ; virtual void createTopologyHandler (sofa::core::topology::BaseMeshTopology *_topology);  Function to create topology handler to manage this Data. More...;  ; void linkToPointDataArray ();  Link Data to topology arrays. More...;  ; void linkToEdgeDataArray ();  Method used to link Data to edge Data array, using the TopologyHandler's method. More...;  ; void linkToTriangleDataArray ();  Method used to link Data to triangle Data array, using the TopologyHandler's method. More...;  ; void linkToQuadDataArray ();  Method used to link Data to quad Data array, using the TopologyHandler's method. More...;  ; void linkToTetrahedronDataArray ();  Method used to link Data to tetrahedron Data array, using the TopologyHandler's method. Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:2814,inherit,inherited,2814,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,1,['inherit'],['inherited']
Modifiability,"iv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &d_x) const override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< _DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, _DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, _DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addBToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset);  ; void addToMatrix (sofa::linearalgebra::BaseMatrix *bm, unsigned offset, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:5298,inherit,inherited,5298,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,1,['inherit'],['inherited']
Modifiability,"ivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId) override;  ; void projectJacobianMatrix (const MechanicalParams *mparams, MultiMatrixDerivId cId) override;  ; void projectVelocity (const MechanicalParams *mparams, MultiVecDerivId vId) override;  ; void projectPosition (const MechanicalParams *mparams, MultiVecCoordId xId) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:8331,inherit,inherited,8331,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"ivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId) override;  ; void projectJacobianMatrix (const MechanicalParams *mparams, MultiMatrixDerivId cId) override;  ; void projectVelocity (const MechanicalParams *mparams, MultiVecDerivId vId) override;  ; void projectPosition (const MechanicalParams *mparams, MultiVecCoordId xId) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:5662,inherit,inherited,5662,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"ivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId) override;  ; void projectJacobianMatrix (const MechanicalParams *mparams, MultiMatrixDerivId cId) override;  ; void projectVelocity (const MechanicalParams *mparams, MultiVecDerivId vId) override;  ; void projectPosition (const MechanicalParams *mparams, MultiVecCoordId xId) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:10288,inherit,inherited,10288,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId) override;  ; void projectJacobianMatrix (const MechanicalParams *mparams, MultiMatrixDerivId cId) override;  ; void projectVelocity (const MechanicalParams *mparams, MultiVecDerivId vId) override;  ; void projectPosition (const MechanicalParams *mparams, MultiVecCoordId xId) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:8329,inherit,inherited,8329,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ivated item by its value (string) More...;  ; void readFromStream (std::istream &stream);  ; getting information operators; unsigned int getSelectedId () const;  ; const std::string & getSelectedItem () const;  ; const std::string & operator[] (const unsigned int i) const;  ; size_t size () const;  ; void writeToStream (std::ostream &stream) const;  ; OptionsGroup & operator= (const OptionsGroup &m_radiotrick)=default;  . Protected Member Functions; template<class T > ; void buildFromContainer (const T &list);  . Attribute details. ◆ selectedItem. unsigned int sofa::helper::OptionsGroup::selectedItem. protected . ◆ textItems. type::vector<std::string> sofa::helper::OptionsGroup::textItems. protected . Constructor details. ◆ OptionsGroup() [1/5]. sofa::helper::OptionsGroup::OptionsGroup ; (; ). ◆ OptionsGroup() [2/5]. sofa::helper::OptionsGroup::OptionsGroup ; (; int ; nbofRadioButton, .  ; ... . ). explicit . Constructor by given the number of argument following by the variable arguments Example OptionsGroup m_options(4,""button0"",""button1"",""button2"",""button3""); . ◆ OptionsGroup() [3/5]. template<class T , typename > . sofa::helper::OptionsGroup::OptionsGroup ; (; const T & ; list). explicit . generic constructor taking other string container like list<string>, set<string>, vector<string> . ◆ OptionsGroup() [4/5]. template<class T > . sofa::helper::OptionsGroup::OptionsGroup ; (; const std::initializer_list< T > & ; list). ◆ OptionsGroup() [5/5]. sofa::helper::OptionsGroup::OptionsGroup ; (; const OptionsGroup & ; m_radiotrick). Copy constructor. . Function details. ◆ buildFromContainer(). template<class T > . void sofa::helper::OptionsGroup::buildFromContainer ; (; const T & ; list). protected . ◆ getSelectedId(). unsigned int sofa::helper::OptionsGroup::getSelectedId ; (; ); const. ◆ getSelectedItem(). const std::string & sofa::helper::OptionsGroup::getSelectedItem ; (; ); const. ◆ isInOptionsList(). int sofa::helper::OptionsGroup::isInOptionsList ; (; const std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_options_group.html:2826,variab,variable,2826,api/master/sofa/html/classsofa_1_1helper_1_1_options_group.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_options_group.html,2,['variab'],['variable']
Modifiability,"ix is not invertible ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ applyConstraintForce(). virtual void sofa::core::behavior::LinearSolver::applyConstraintForce ; (; const sofa::core::ConstraintParams * ; , . sofa::core::MultiVecDerivId ; , . const linearalgebra::BaseVector * ;  . ). inlinevirtual . Apply the contactforce dx = Minv * J^t * f and store the result in dx VecId. ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ buildComplianceMatrix(). virtual bool sofa::core::behavior::LinearSolver::buildComplianceMatrix ; (; const sofa::core::ConstraintParams * ; cparams, . linearalgebra::BaseMatrix * ; result, . SReal ; fact . ). inlinevirtual . Build the jacobian of the constraints using a visitor; Parameters. cparamscontains the MultiMatrixDerivId which allows to retrieve the constraint jacobian to use for each mechanical object. ; resultthe variable where the result will be added ; factintegrator parameter . Returnsfalse if the solver does not support this operation, of it the system matrix is not invertible ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ computeResidual(). virtual void sofa::core::behavior::LinearSolver::computeResidual ; (; const core::ExecParams * ; , . linearalgebra::BaseVector * ;  . ). inlinevirtual . Compute the residual in the newton iterations due to the constraints forces i.e. compute mparams->dF() = J^t lambda the result is written in mparams->dF() ; Reimplemented in sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >. ◆ freezeSystemMatrix(). virtual void sofa::core::behavior::LinearSolver::freezeSystemMatrix ; (; ). inlinevirtual . Ask the solver to no longer update the system matrix. . ◆ getSystemBaseMatrix(). virtual linearalgebra::BaseMatrix* sofa::core::behavior::LinearSolver::getSystemBaseMatrix ; (; ). inlinevirtual . Get th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html:18758,variab,variable,18758,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,1,['variab'],['variable']
Modifiability,"ix(), . bool ; = true . ). ◆ getPluginByName(). Plugin * sofa::helper::system::PluginManager::getPluginByName ; (; const std::string & ; pluginName). ◆ getPluginMap(). PluginMap& sofa::helper::system::PluginManager::getPluginMap ; (; ). inline . ◆ GetPluginNameFromPath(). std::string sofa::helper::system::PluginManager::GetPluginNameFromPath ; (; const std::string & ; pluginPath). static . ◆ init() [1/2]. void sofa::helper::system::PluginManager::init ; (; void ; ). ◆ init() [2/2]. void sofa::helper::system::PluginManager::init ; (; const std::string & ; pluginPath). ◆ isPluginLoaded(). std::pair< std::string, bool > sofa::helper::system::PluginManager::isPluginLoaded ; (; const std::string & ; plugin). Determine if a plugin name or plugin path is known from the plugin manager (i.e. has been loaded by the plugin manager) with the found path. Parameters. pluginA path to a plugin or a plugin name . ReturnsA pair consisting of the found plugin path (or the plugin path that was last tried) and a bool value set to true if the plugin has been found in the plugin registration map . ◆ isPluginUnloaded(). bool sofa::helper::system::PluginManager::isPluginUnloaded ; (; const std::string & ; pluginName); const. ◆ loadPlugin(). auto sofa::helper::system::PluginManager::loadPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:5936,plugin,plugin,5936,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,8,['plugin'],['plugin']
Modifiability,"ix;  . Public Member Functions;  SOFA_CLASS (AssemblingMappedMatrixAccumulator, AssemblingMatrixAccumulator< c >);  ; void clear () override;  ; void shareMatrix (const std::shared_ptr< LocalMappedMatrixType< TBlockType > > &m);  ; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & getMatrix () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  . Prote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:1519,inherit,inherited,1519,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,2,['inherit'],['inherited']
Modifiability,"ization techniques.; This method must be implemented by the component, and is usually called by the generic MixedInteractionForceField::getPotentialEnergy() method. ; Implements sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >. ◆ init(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initCalcF(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::initCalcF. protected . ◆ reinit(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setDamping(). template<typename TDataTypes1 , typename TDataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::setDamping ; (; Real1 ; damp). inline . ◆ setStiffness(). template<typename TDataTypes1 , typename TDataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::setStiffness ; (; Real1 ; stiff). inline . ◆ SOFA_CLASS(). template<typename TDataTypes1 , typename TDataTypes2 > . sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::SOFA_CLASS ; (; SOFA_TEMPLATE2(InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >, TDataTypes1, TDataTypes2) ; , . SOFA_TEMPLATE2(core::behavior::MixedInteractionForceField, TDataTypes1, TDataTypes2) ;  . ). Enum details. ◆ anonymous enum. template<typename TDataTypes1 , typename TDataTypes2 > . anonymo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:28904,variab,variables,28904,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,1,['variab'],['variables']
Modifiability,"ize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [SOLVED] Installing v17.12 from DMG package on Mac OS. /install-wants-administrative-privileges; ; SOFA - Topic: [SOLVED] Install wants administrative privileges. /interaction-with-geomagic-touch-using-sofapython3; ; SOFA - Topic: Interaction with Geomagic Touch using SofaPython3. /interactiverecorded-camera; . /feed; ; [SOLVED] Interactive/Recorded Camera – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /4; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /interactive-training-system-for-interventional-electrocardiology-procedures; ; SOFA - Topic: [SOLVED] Interactive Training System for Inter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:334759,plugin,plugin-,334759,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-']"
Modifiability,"ize_type i) const;  ; constexpr const T * data () const noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::Vec< N, T >; ArrayType elems;  ;  Static Public Attributes inherited from sofa::type::Vec< N, T >; static constexpr sofa::Size static_size;  ; static constexpr Size total_size;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  ;  Static Public Member Functions inherited from sofa::type::Vec< N, T >; static constexpr sofa::Size size ();  . Function details. ◆ Nrows(). template<std::size_t N, typename T > . Index sofa::linearalgebra::BlockVector< N, T >::Block::Nrows ; (; ); const. inline . ◆ operator=() [1/4]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockVector< N, T >::Block::operator= ; (; const type::Vec< N, T > & ; v). inline . ◆ operator=() [2/4]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockVector< N, T >::Block::operator= ; (; double ; v). inline . ◆ operator=() [3/4]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockVector< N, T >::Block::operator= ; (; float ; v). inline . ◆ operator=() [4/4]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockVector< N, T >::Block::operator= ; (; int ; v). inline . ◆ resize(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockVector< N, T >::Block::resize ; (; Index ; ). inline . sofalinearalgebraBlockVectorBloc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html:7261,inherit,inherited,7261,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html,2,['inherit'],['inherited']
Modifiability,"ject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::BaseMechanicalVisitor; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_constraint_visitor.html:9624,inherit,inherited,9624,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_constraint_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_constraint_visitor.html,4,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"ject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::BaseMechanicalVisitor; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html:10272,inherit,inherited,10272,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html,9,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"ject belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping);  ; virtual void setModels (State< In > *from, State< Out > *to);  Specify the input and output models. More...;  ; bool setFrom (BaseState *from) override;  If the type is compatible set the input model and return true, otherwise do nothing and return false. More...;  ; bool setTo (BaseState *to) override;  If the type is compatible set the output model and return true, otherwise do nothing and return false. More...;  ; void setPathInputObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:2617,inherit,inherited,2617,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,2,['inherit'],['inherited']
Modifiability,"ject belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglColorMap, sofa::core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ; Color getColor (unsigned int i);  ; template<class Real > ; helper::ColorMap::evaluator< Real > getEvaluator (Real vmin, Real vmax);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:3164,inherit,inherited,3164,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,1,['inherit'],['inherited']
Modifiability,"ject or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object. More...;  ; Data< bool > alphaBlend;  Enable alpha blending. More...;  ; Data< bool > depthTest;  Enable depth testing. More...;  ; Data< int > cullFa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html:6940,inherit,inherited,6940,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,1,['inherit'],['inherited']
Modifiability,"ject or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; GLuint abo;  ; OglShader * shader;  ; int restPosition_lastUpdate;  ;  Protected Attributes inherited from sofa::gl::component::rendering3d::OglModel; Data< bool > premultipliedAlpha;  is alpha premultiplied ? More...;  ; Data< bool > writeZTransparent;  Write into Z Buffer for Transparent Object.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:6974,inherit,inherited,6974,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,2,['inherit'],['inherited']
Modifiability,"ject or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; std::set< sofa::core::topology::BaseMeshTopology::TriangleID > m_dirtyTriangles;  ; std::set< sofa::core::topology::BaseMeshTopology::QuadID > m_dirtyQuads;  Internal buffer similar to. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:6375,inherit,inherited,6375,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['inherit'],['inherited']
Modifiability,"ject or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; type::vector< type::Vec3f > m_normals;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:3026,inherit,inherited,3026,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['inherit'],['inherited']
Modifiability,"ject or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Public Member Functions;  SOFA_CLASS (MergeVisualModels, Inherit);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:7062,inherit,inherited,7062,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,"ject or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:16318,inherit,inherited,16318,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['inherit'],['inherited']
Modifiability,"ject. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Vertex2Frame ();  ;  ~Vertex2Frame () override;  ; type::Quat< SReal > computeOrientation (const CPos &xAxis, const CPos &yAxis, const CPos &zAxis);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:13945,inherit,inherited,13945,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['inherit'],['inherited']
Modifiability,"ject. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Spiral ();  ;  ~Spiral () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html:13009,inherit,inherited,13009,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html,1,['inherit'],['inherited']
Modifiability,"ject. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Protected Member Functions;  OglAttribute ();  ;  ~OglAttribute () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:13805,inherit,inherited,13805,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,2,['inherit'],['inherited']
Modifiability,"jectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ; virtual void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual type::vector< std::string > getConstraintIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:15314,inherit,inherited,15314,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,3,['inherit'],['inherited']
Modifiability,"jectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:7976,inherit,inherited,7976,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,1,['inherit'],['inherited']
Modifiability,"jectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (GridMeshCreator, sofa::core::loader::MeshLoader);  ; virtual std::string type ();  ; bool canLoad () override;  ; bool doLoad () override;  create the grid More...;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:6484,inherit,inherited,6484,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['inherit'],['inherited']
Modifiability,"jectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; Inherit typedefsofa::simulation::DefaultVisualManagerLoop; init() overridesofa::simulation::DefaultVisualManagerLoopvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::In",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:7071,Inherit,Inherit,7071,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,1,['Inherit'],['Inherit']
Modifiability,"jectmodel::DataFileName f_filename;  ; sofa::core::objectmodel::RenamedData< double > f_interval;  ; sofa::core::objectmodel::RenamedData< double > f_shift;  ; sofa::core::objectmodel::RenamedData< bool > f_loop;  ; sofa::core::objectmodel::DataFileName d_filename;  ; Data< double > d_interval;  time duration between inputs More...;  ; Data< double > d_shift;  shift between times in the file and times when they will be read More...;  ; Data< bool > d_loop;  set to 'true' to re-read the file when reaching the end More...;  ; SingleLink< ReadTopology, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 2 > > > edges;  ; Data< type::vector< type::fixed_array< unsigned int, 3 > > > triangles;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > quads;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > tetrahedra;  ; Data< type::vector< type::fixed_array< unsigned int, 8 > > > hexahedra;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:14939,inherit,inherited,14939,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,2,['inherit'],['inherited']
Modifiability,"k *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:12804,inherit,inherited,12804,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,2,['inherit'],['inherited']
Modifiability,"k *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html:9443,variab,variables,9443,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,1,['variab'],['variables']
Modifiability,"k > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RandomPointDistributionInSurface, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:4320,inherit,inherited,4320,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['inherit'],['inherited']
Modifiability,"k for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof Class Reference . #include <BilateralConstraintResolution.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof:. [legend]. Protected Attributes; EigenMatrixX wBlock;  ; Eigen::LDLT< EigenMatrixX > wBlockInv;  . Public Member Functions;  BilateralConstraintResolutionNDof (unsigned blockSize);  ; void init (int line, SReal **w, SReal *) override;  The resolution object can do precomputation with the compliance matrix, and give an initial guess. More...;  ; void resolution (int line, SReal **, SReal *displacement, SReal *force, SReal *) override;  Resolution of the constraint for one Gauss-Seidel iteration. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintResolution;  ConstraintResolution (unsigned int nbLines, SReal tolerance=0.0);  ; virtual ~ConstraintResolution ();  ; virtual void initForce (int, SReal *);  The resolution object can provide an initial guess. More...;  ; virtual void store (int, SReal *, bool);  Called after Gauss-Seidel last iteration, in order to store last computed forces for the initial guess. More...;  ; void setNbLines (unsigned int nbLines);  ; unsigned int getNbLines () const;  ; void setTolerance (SReal tolerance);  ; SReal getTolerance () const;  . Attribute details. ◆ wBlock. EigenMatrixX sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof::wBlock. protected . ◆ wBlockInv. Eigen::LDLT< EigenMatrixX > sofa::component::constraint::lagrangian::model::bilateralconstraintresolution::BilateralConstraintResolutionNDof::wBlockInv. protected . Constructor details. ◆ BilateralConstraintResolutionNDof(). sofa::component::constraint::lagrangian::model::bila",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_109f686c762b26e457e3030f3b670e53b.html:1140,inherit,inherited,1140,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_109f686c762b26e457e3030f3b670e53b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1bilateralconstraintresolution_1_109f686c762b26e457e3030f3b670e53b.html,1,['inherit'],['inherited']
Modifiability,"k for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitTexturesDoneEvent Class Reference . #include <SimulationInitTexturesDoneEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitTexturesDoneEvent:. [legend]; Detailed Description; Event fired when sofa::simulation::Simulation::initTextures has been called. . Public Member Functions;  SimulationInitTexturesDoneEvent ()=default;  ;  ~SimulationInitTexturesDoneEvent () override=default;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitTexturesDoneEvent(). sofa::simulation::SimulationInitTexturesDoneEvent::SimulationInitTexturesDoneEvent ; (; ). default . ◆ ~SimulationInitTexturesDoneEvent(). sofa::simulation::SimulationInitTexturesDoneEvent::~SimulationInitTexturesDoneEvent ; (; ). overridedefault . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitTexturesDoneEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationInitTexturesDoneEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html:1166,inherit,inherited,1166,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html,7,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"k);  . Protected Member Functions;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html:9981,inherit,inherited,9981,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting.html,1,['inherit'],['inherited']
Modifiability,"k);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ProximityROI ();  ;  ~ProximityROI () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html:14255,inherit,inherited,14255,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"k. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t index);  ; void removed (DestPtr val, std::size_t index);  ;  Protected Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; DestType * getIndex (std::size_t index) const;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseLink; void updateCounter ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; static constexpr unsigned ActiveFlags;  ; static constexpr bool IsStrongLink;  ; static constexpr bool IsMultiLink;  ; static constexpr bool StorePath;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseLink; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData (BaseData *data);  ; static std::string CreateString (Base *object, Base *from);  ; static std::string CreateString (BaseData *data, Base *from);  ; static std::string CreateString (Base *object, BaseData *data, Base *from);  . Attribute details. ◆ m_validator. template<class TOwnerType , class TDestType , unsigned TFlags> . ValidatorFn sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >::m_validator. protected . Constructor details. ◆ MultiLink() [1/3]. template<class TOwnerType , class TDestType , unsigned TFlags> . sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >::MultiLink ; (; ). inline . ◆ MultiLink() [2/3]. template<class TOwnerType , class TDestType , unsigned TFlags> . sofa::core::objectmodel::MultiLink<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:4997,inherit,inherited,4997,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,2,['inherit'],['inherited']
Modifiability,"k. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html:10644,inherit,inherited,10644,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,1,['inherit'],['inherited']
Modifiability,"k;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, OutputType), sofa::core::DataEngine);  ;  DisplacementTransformEngine ();  DisplacementTransformEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html:3638,inherit,inherited,3638,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,1,['inherit'],['inherited']
Modifiability,"kContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RandomPointDistributionInSurface, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:4024,variab,variables,4024,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['variab'],['variables']
Modifiability,"kDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:15807,inherit,inherited,15807,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['inherit'],['inherited']
Modifiability,"ke one after, without actually storing a string. More...;  ;  Id (const char *s);  An Id is constructed from a string and appears like one after, without actually storing a string. More...;  ;  Id (unsigned int id);  This constructor should be used only if really necessary. More...;  ;  operator unsigned int () const;  Any operation requiring an int can be used on an id using this conversion. More...;  ;  operator std::string () const;  Any operation requiring a string can be used on an id using this conversion. More...;  ; bool operator== (const Id< Base > &t) const;  ; bool operator!= (const Id< Base > &t) const;  ; bool operator< (const Id< Base > &t) const;  ; bool operator> (const Id< Base > &t) const;  ; bool operator<= (const Id< Base > &t) const;  ; bool operator>= (const Id< Base > &t) const;  ; bool operator! () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; virtual std::string getPathName () const;  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id.html:1903,inherit,inherited,1903,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id.html,2,['inherit'],['inherited']
Modifiability,"ked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; static void setContactTags (core::CollisionModel *model1, core::CollisionModel *model2, core::collision::Contact::SPtr contact);  ; static sofa::helper::OptionsGroup initializeResponseOptions (sofa::core::objectmodel::BaseConte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:16661,inherit,inherited,16661,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,2,['inherit'],['inherited']
Modifiability,"kerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseInteractionConstraint(). sofa::core::behavior::BaseInteractionConstraint::BaseInteractionConstraint ; (; ). inlineprotected . ◆ ~BaseInteractionConstraint(). sofa::core::behavior::BaseInteractionConstraint::~BaseInteractionConstraint ; (; ). inlineoverrideprotected . Function details. ◆ getBaseConstraintIdentifiers(). virtual type::vector<std::string> sofa::core::behavior::BaseInteractionConstraint::getBaseConstraintIdentifiers ; (; ). inlinefinaloverridevirtual . Implements sofa::core::behavior::BaseConstraint. ◆ getInteractionIdentifiers(). virtual type::vector<std::string> sofa::core::behavior::BaseInteractionConstraint::getInteractionIdentifiers ; (; ). inlineprotectedvirtual . Reimplemented in sofa::core::behavior::PairInteractionConstraint< TDataTypes >, sofa::core::behavior::PairInteractionConstraint< sofa::defaulttype::StdVectorTypes >,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html:16728,inherit,inherited,16728,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,1,['inherit'],['inherited']
Modifiability,"know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static constexpr bool isPointOutside (const Coord &value, const Vec6 &bb);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_borders. template<class DataTypes > . Data<Vec6> sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >::d_borders. List of boxes defined by xmin,ymin,zmin, xmax,ymax,zmax. . ◆ d_drawBox. template<class DataTypes > . Data<bool> sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >::d_drawBox. Draw bounding box (default = false) . ◆ d_positions. template<class DataTypes > . Data<VecCoord> sofa::component::to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:14003,inherit,inherited,14003,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['inherit'],['inherited']
Modifiability,"ks. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ProjectiveTransformEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:2833,inherit,inherited,2833,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['inherit'],['inherited']
Modifiability,"k m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GearSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; sofa::type::vector< Spring > * getSprings ();  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:4838,variab,variables,4838,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['variab'],['variables']
Modifiability,"l *model2, sofa::Index index2) override;  Test if two elements can collide with each other. More...;  ; core::behavior::MechanicalState< DataTypes > * getMechanicalState ();  ; const core::behavior::MechanicalState< DataTypes > * getMechanicalState () const;  ; const VecCoord & getX () const;  ; const sofa::core::topology::BaseMeshTopology::SeqTriangles & getTriangles () const;  ; const VecDeriv & getNormals () const;  ; int getTriangleFlags (sofa::core::topology::BaseMeshTopology::TriangleID i);  ; Deriv velocity (sofa::Index index) const;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; sofa::core::topology::BaseMeshTopology * getCollisionTopology () override;  BaseMeshTopology associated to the collision model. TODO: epernod remove virtual pure method by l_topology.get as soons as new link will be available. More...;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; CollisionModel * getPrevious ();  Return the p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:7821,inherit,inherited,7821,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,3,['inherit'],['inherited']
Modifiability,"l isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  PairStateAccessor (MechanicalState< TDataTypes > *mm1=nullptr, MechanicalState< TDataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Friends; template<typename > ; class BilateralLagrangianConstraintSpecialization;  That any templates variation of BilateralLagrangianConstraintSpecialization are friend. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Inv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:22970,inherit,inherited,22970,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"l length for springs More...;  ; Data< VecReal > d_zeroLength;  initial length for springs More...;  ; Data< bool > d_recomputeIndices;  Recompute indices (should be false for BBOX) More...;  ; Data< bool > d_compressible;  Indicates if object compresses without any reaction force. More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color More...;  ; Data< float > d_showIndicesScale;  Scale for indices display (default=0.02) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecIndex m_firstObjectIndices;  ; VecIndex m_secondObjectIndices;  ; t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:2249,inherit,inherited,2249,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['inherit'],['inherited']
Modifiability,"l members . sofa::component::engine::transform::DifferenceEngine< TDataType > Class Template Reference . #include <DifferenceEngine.h>. Inheritance diagram for sofa::component::engine::transform::DifferenceEngine< TDataType >:. [legend]; Detailed Description; template<class TDataType>; class sofa::component::engine::transform::DifferenceEngine< TDataType >; Computing the difference between two vector of dofs output = input - substractor . Protected Attributes; Data< VecData > d_input;  input vector More...;  ; Data< VecData > d_substractor;  vector to subtract to input More...;  ; Data< VecData > d_output;  output vector = input-substractor More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DifferenceEngine, TDataType), core::DataEngine);  ;  DifferenceEngine ();  ;  ~DifferenceEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html:923,inherit,inherited,923,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,4,['inherit'],['inherited']
Modifiability,"l members . sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon No",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html:1169,config,configuration,1169,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,2,['config'],['configuration']
Modifiability,"l members . sofa::component::topology::mapping::IdentityTopologicalMapping Class Reference . #include <IdentityTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::IdentityTopologicalMapping:. [legend]; Detailed Description; This class is a specific implementation of TopologicalMapping where the destination topology should be kept identical to the source topology. The implementation currently assumes that both topology have been initialized identically. . Public Member Functions;  SOFA_CLASS (IdentityTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputToOutputModel ();  Return true if this mapping is able to propagate topological changes from input to output model. More...;  ; virtual bool propagateFromOutputToInputModel ();  Return true if this mapping is able to propagate topological changes from output to input model. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping.html:1165,inherit,inherited,1165,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_identity_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,"l path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:4702,variab,variables,4702,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['variab'],['variables']
Modifiability,"l points have been renumbered . Public Attributes; sofa::type::vector< Topology::TetrahedronID > indexArray;  ; sofa::type::vector< Topology::TetrahedronID > inv_indexArray;  . Public Member Functions;  TetrahedraRenumbering ();  ;  TetrahedraRenumbering (const sofa::type::vector< Topology::TetrahedronID > &indices, const sofa::type::vector< Topology::TetrahedronID > &inv_indices);  ;  ~TetrahedraRenumbering () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::TetrahedronID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::TetrahedronID> sofa::core::topology::TetrahedraRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::TetrahedronID> sofa::core::topology::TetrahedraRenumbering::inv_indexArray. Constructor details. ◆ TetrahedraRenumbering() [1/2]. sofa::core::topology::TetrahedraRenumbering::TetrahedraRenumbering ; (; ). inline . ◆ TetrahedraRenumbering() [2/2]. sofa::core::topology::TetrahedraRenumbering::TetrahedraRenumbering ; (; const sofa::type::vector< Topology::TetrahedronID > & ; indices, . const sofa::type::vector< Topology::TetrahedronID > & ; inv_indices . ). inline . ◆ ~TetrahedraRenumbering(). sofa::core::topology::TetrahedraRenumbering::~TetrahedraRenum",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering.html:1385,inherit,inherited,1385,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_renumbering.html,1,['inherit'],['inherited']
Modifiability,"l the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ROIValueMapper ();  ;  ~ROIValueMapper () override;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:13334,inherit,inherited,13334,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,1,['inherit'],['inherited']
Modifiability,"l the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SelectLabelROI ();  ;  ~SelectLabelROI () override;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html:13229,inherit,inherited,13229,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"l val);  ; void setQuadsStiffness (Real val);  ; void setTetrahedraStiffness (Real val);  ; void setCubesStiffness (Real val);  ; Real getDamping () const;  ; Real getLinesDamping () const;  ; Real getTrianglesDamping () const;  ; Real getQuadsDamping () const;  ; Real getTetrahedraDamping () const;  ; Real getCubesDamping () const;  ; void setDamping (Real val);  ; void setLinesDamping (Real val);  ; void setTrianglesDamping (Real val);  ; void setQuadsDamping (Real val);  ; void setTetrahedraDamping (Real val);  ; void setCubesDamping (Real val);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html:5248,inherit,inherited,5248,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"l void accumulateForcePolar (WDataRefVecDeriv &f, RDataRefVecCoord &p, sofa::Index i, const Element &elem);  ; void initSmall (sofa::Index i, const Element &elem);  ; virtual void accumulateForceSmall (WDataRefVecDeriv &f, RDataRefVecCoord &p, sofa::Index i, const Element &elem);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:24829,inherit,inherited,24829,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability,"l void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Friends; class OperationFactory;  . Attribute details. ◆ button. MOUSE_BUTTON sofa::gui::common::Operation::button. protected . ◆ mbsetting. sofa::component::setting::MouseButtonSetting::SPtr sofa::gui::common::Operation::mbsetting. protected . ◆ performer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::Operation::performer. ◆ pickHandle. PickHandler* sofa::gui::common::Operation::pickHandle. protected . Constructor details. ◆ Operation(). sofa::gui::common::Operation::Operation ; (; sofa::component::setting::MouseButtonSetting::SPtr ; s = nullptr). inline . ◆ ~Operation(). virtual sofa::gui::common::Operation::~Operation ; (; ). inlinevirtual . Function details. ◆ configure() [1/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . MOUSE_BUTTON ; b . ). inlinevirtual . Reimplemented in sofa::gui::qt::QAddSutureOperation, sofa::gui::qt::QTopologyOperation, and sofa::gui::qt::QInciseOperation. ◆ configure() [2/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; s . ). inlinevirtual . Reimplemented in sofa::gui::qt::QFixOperation, sofa::gui::qt::QStartNavigationOperation, sofa::gui::qt::QAddRecordedCameraOperation, and sofa::gui::qt::QAttachOperation. ◆ configurePerformer(). void sofa::gui::common::Operation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). virtual . Reimplemented in sofa::gui::common::AddSutureOperation, sofa::gui::common::StartNavigationOperation, sofa::gui::common::AddRecordedCameraOperation, sofa::gui::common::AddFrameOperation, sofa::gui::common::FixOperation, and sofa::gui::common::AttachOperation. ◆ createPerformer(). InteractionP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html:2480,config,configure,2480,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,2,['config'],['configure']
Modifiability,"l void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html:18528,inherit,inherited,18528,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,1,['inherit'],['inherited']
Modifiability,"l void moveRayPickInteractor (int, int);  RayCasting PickHandler. More...;  ; PickHandler * getPickHandler ();  ; virtual void drawScene (void)=0;  the rendering pass is done here (have to be called in a loop) More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::viewer::SofaViewer; std::unique_ptr< EngineBackend > m_backend;  ; QTimer captureTimer;  ; bool m_isControlPressed;  ; ColourPickingRenderCallBack colourPickingRenderCallBack;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewer; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  ;  Protected Member Functions inherited from sofa::gui::qt::viewer::SofaViewer; void redraw () override;  internally called while the actual viewer needs a redraw (ie the camera changed) More...;  ;  Signals inherited from sofa::gui::qt::viewer::SofaViewer; virtual void redrawn ()=0;  ; virtual void resizeW (int)=0;  ; virtual void resizeH (int)=0;  . Constructor details. ◆ CustomPolicySofaViewer(). template<typename VisualModelPolicyType > . sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >::CustomPolicySofaViewer ; (; ). inline . ◆ ~CustomPolicySofaViewer(). template<typename VisualModelPolicyType > . sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >::~CustomPolicySofaViewer ; (; ). inlineoverride . sofaguiqtviewerCustomPolicySofaViewer; Generated on Mon Nov 11 2024 03:25:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html:4694,inherit,inherited,4694,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,2,['inherit'],['inherited']
Modifiability,"l void vMultiOp (const ExecParams *params, const VMultiOp &ops);  Perform a sequence of linear vector accumulation operation $r_i = sum_j (v_j*f_{ij})$. More...;  ; virtual SReal vDot (const ExecParams *params, ConstVecId a, ConstVecId b)=0;  Compute the scalar products between two vectors. More...;  ; virtual SReal vSum (const ExecParams *params, ConstVecId a, unsigned l)=0;  Sum of the entries of state vector a at the power of l>0. This is used to compute the l-norm of the vector. More...;  ; virtual SReal vMax (const ExecParams *params, ConstVecId a)=0;  Maximum of the absolute values of the entries of state vector a. This is used to compute the infinite-norm of the vector. More...;  ; virtual Size vSize (const ExecParams *params, ConstVecId v)=0;  Get vector size. More...;  ; virtual void vThreshold (VecId a, SReal threshold)=0;  Apply a threshold (lower bound) to all entries. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Singl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:20671,inherit,inherited,20671,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['inherit'],['inherited']
Modifiability,l-for-flat-element; . /feed; ; FEM model for flat element – SOFA. SOFA - Topic Tag: FEM model for flat element. /ffmpeg; . /feed; ; FFMPEG – SOFA. SOFA - Topic Tag: FFMPEG. /fibers; . /feed; ; fibers – SOFA. SOFA - Topic Tag: fibers. /final; . /feed; ; final – SOFA. SOFA - Topic Tag: final. /finite-element-method; . /feed; ; finite element method – SOFA. SOFA - Topic Tag: finite element method. /fisheye-camera; . /feed; ; fisheye camera – SOFA. SOFA - Topic Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:443926,flexible,flexible,443926,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['flexible'],['flexible']
Modifiability,"l::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::State< TDataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ colorMap. gl::component::rendering2d::OglColorMap* sofa::gl::component::rendering3d::DataDisplay::colorMap. ◆ d_currentMax. Data<Real> sofa::gl::component::rendering3d::DataDisplay::d_currentMax. Current max range. . ◆ d_currentMin. Data<Real> sofa::gl::component::rendering3d::DataDisplay::d_currentMin. Current min range. . ◆ d_shininess. Data<float> sofa::gl::component::rendering3d::DataDisplay::d_shininess. Shininess for rendering point-based ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:19296,inherit,inherited,19296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['inherit'],['inherited']
Modifiability,"l::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html:5452,inherit,inherited,5452,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,4,['inherit'],['inherited']
Modifiability,"l::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:6959,inherit,inherited,6959,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,28,['inherit'],['inherited']
Modifiability,"l::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ; virtual void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual type::vector< std::string > getConstraintIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:14769,inherit,inherited,14769,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,1,['inherit'],['inherited']
Modifiability,"l::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >; table_data_widget_container< T, TABLE_NORMAL > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:2183,inherit,inherited,2183,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,7,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html:2223,inherit,inherited,2223,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 dx;  Distance between points in the grid. Must be perpendic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html:3598,inherit,inherited,3598,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< type::vector< Connexion * > > _connexions;  ; std::map< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html:5717,inherit,inherited,5717,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CylinderGridTopology, GridTopology);  ;  SOFA_ATTRIBUT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html:3575,inherit,inherited,3575,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (GridTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLAC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_grid_topology.html:3079,inherit,inherited,3079,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SphereGridTopology, GridTopology);  ;  SOFA_ATTRIBUTE_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html:3509,inherit,inherited,3509,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const float WEIGHT27 [8][27];  ; static const Index cornerI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html:5276,inherit,inherited,5276,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::component::topology::container::grid::SparseG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:47249,inherit,inherited,47249,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,1,['inherit'],['inherited']
Modifiability,"l::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:36089,inherit,inherited,36089,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,2,['inherit'],['inherited']
Modifiability,"l::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_force. template<class DataTypes > . Data<Deriv> sofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >::d_force. protected . force (impulse) used to solve the constraint . ◆ d_m1. template<class DataTypes > . Data<int> sofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >::d_m1. protected . index of the spliding point on the first model . ◆ d_m2a. template<class DataTypes > . Data<int> so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:21425,inherit,inherited,21425,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"l::VisualParams * ; ). overridevirtual . Called instead of rendering the scene. ; Return true if this object actually did the rendering, or false if it wasn't done. ; Reimplemented from sofa::core::visual::VisualManager. ◆ drawTransparents(). void sofa::gl::component::shader::OrderIndependentTransparencyManager::drawTransparents ; (; core::visual::VisualParams * ; vp, . sofa::gl::GLSLShader * ; oitShader . ). protected . ◆ fwdDraw(). void sofa::gl::component::shader::OrderIndependentTransparencyManager::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::gl::component::shader::OrderIndependentTransparencyManager::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ postDrawScene(). void sofa::gl::component::shader::OrderIndependentTransparencyManager::postDrawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called after rendering the scene. ; Reimplemented from sofa::core::visual::VisualManager. ◆ preDrawScene(). void sofa::gl::component::shader::OrderIndependentTransparencyManager::preDrawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called before rendering the scene. ; Reimplemented from sofa::core::visual::VisualManager. ◆ reinit(). void sofa::gl::component::shader::OrderIndependentTransparencyManager::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::gl::component::shader::OrderIndependentTransparencyManager::SOFA_CLASS ; (; OrderIndependentTransparencyManager ; , . core::visual::VisualManager ;  . ). sofaglcomponentshaderOrderIndependentTransparencyManager; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:19680,variab,variables,19680,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,2,['variab'],['variables']
Modifiability,"lForceField< DataTypes >:. [legend]. Classes; class  Contact;  . Public Attributes; Data< Coord > coneCenter;  cone center More...;  ; Data< Coord > coneHeight;  cone height More...;  ; Data< Real > coneAngle;  cone angle More...;  ; Data< Real > stiffness;  force stiffness More...;  ; Data< Real > damping;  force damping More...;  ; Data< sofa::type::RGBAColor > color;  cone color. (default=0.0,0.0,0.0,1.0,1.0) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< sofa::type::vector< Contact > > contacts;  ; ConicalForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:1416,inherit,inherited,1416,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,1,['inherit'],['inherited']
Modifiability,"lLabel::m_stepCounter. protected . Constructor details. ◆ OglLabel(). sofa::gl::component::rendering2d::OglLabel::OglLabel ; (; ). protected . ◆ ~OglLabel(). sofa::gl::component::rendering2d::OglLabel::~OglLabel ; (; ). inlineoverrideprotected . Function details. ◆ doDrawVisual(). void sofa::gl::component::rendering2d::OglLabel::doDrawVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). void sofa::gl::component::rendering2d::OglLabel::doUpdateVisual ; (; const core::visual::VisualParams * ; ). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ handleEvent(). void sofa::gl::component::rendering2d::OglLabel::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::gl::component::rendering2d::OglLabel::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). void sofa::gl::component::rendering2d::OglLabel::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::gl::component::rendering2d::OglLabel::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setColor(). void sofa::gl::component::rendering2d::OglLabel::setColor ; (; float ; r, . float ; g, . float ; b, . float ; a . ). ◆ SOFA_CLASS(). sofa::gl::component::rendering2d::OglLabel::SOFA_CLASS ; (; OglLabel ; , . core::visual::VisualModel ;  . ). sofaglcomponentrendering2dOglLabel; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html:19220,variab,variables,19220,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,1,['variab'],['variables']
Modifiability,"lOperation () const;  ; virtual double getScale () const;  ; virtual bool getVolumicMesh () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ firstClick. bool sofa::gui::common::TopologyOperation::firstClick. protected . ◆ scale. double sofa::gui::common::TopologyOperation::scale. protected . ◆ topologicalOperation. int sofa::gui::common::TopologyOperation::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::common::TopologyOperation::volumicMesh. protected . Constructor details. ◆ TopologyOperation(). sofa::gui::common::TopologyOperation::TopologyOperation ; (; ). inline . ◆ ~TopologyOperation(). sofa::gui::common::TopologyOperation::~TopologyOperation ; (; ). inlineoverride . Function details. ◆ end(). void sofa::gui::common::TopologyOperation::end ; (; ). overridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ endO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html:2161,inherit,inherited,2161,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,2,['inherit'],['inherited']
Modifiability,"lParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual Real getKs () const;  Getter/setter on the mesh spring stiffness. More...;  ; void setKs (const Real ks);  ; virtual Real getKd () const;  Getter/setter on the mesh spring damping. More...;  ; void setKd (const Real kd);  ; SReal getAccumulatedPotentialEnergy () const;  Getter to global potential energy accumulated. More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &d_x) const override;  Getter on the potential energy. More...;  ; sofa::core::topology::EdgeData< type::vector< EdgeInformation > > & getEdgeInfo ();  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset);  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addBToMatrix (sofa::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html:6049,inherit,inherited,6049,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,1,['inherit'],['inherited']
Modifiability,"lShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:12900,inherit,inherited,12900,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,16,['inherit'],['inherited']
Modifiability,"lShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:4290,inherit,inherited,4290,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,2,['inherit'],['inherited']
Modifiability,"lState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< TDataTypes2 > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< TDataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions;  MixedInteractionForceField (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~MixedInteractionForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *fie",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:13249,inherit,inherited,13249,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,3,['inherit'],['inherited']
Modifiability,"lState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdInteractionForceField (simulation::Node *node, sofa::core::behavior::BaseInteractionForceField *ff) override;  Process all the InteractionForceField. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the Cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_free_visitor.html:1909,inherit,inherited,1909,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_free_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_free_visitor.html,2,['inherit'],['inherited']
Modifiability,"lState< defaulttype::Vec3Types > * _higher_mstate;  ;  Public Attributes inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TriangleModelInRegularGrid, TriangleCollisionModel< so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:1593,inherit,inherited,1593,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['inherit'],['inherited']
Modifiability,"lag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  ; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:2398,variab,variable,2398,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['variab'],['variable']
Modifiability,"lagrangian::solver::ConstraintProblem; int dimension;  ; unsigned int problemId;  . Public Member Functions;  GenericConstraintProblem ();  ;  ~GenericConstraintProblem () override;  ; void clear (int nbConstraints) override;  ; void freeConstraintResolutions ();  ; void solveTimed (SReal tol, int maxIt, SReal timeout) override;  ; void gaussSeidel (SReal timeout=0, GenericConstraintSolver *solver=nullptr);  Projective Gauss Seidel method building the compliance matrix. More...;  ; void unbuiltGaussSeidel (SReal timeout=0, GenericConstraintSolver *solver=nullptr);  Projective Gauss Seidel unbuilt method. More...;  ; void NNCG (GenericConstraintSolver *solver=nullptr, int iterationNewton=1);  ; void gaussSeidel_increment (bool measureError, SReal *dfree, SReal *force, SReal **w, SReal tol, SReal *d, int dim, bool &constraintsAreVerified, SReal &error, sofa::type::vector< SReal > &tabErrors) const;  ; void result_output (GenericConstraintSolver *solver, SReal *force, SReal error, int iterCount, bool convergence);  ; int getNumConstraints ();  ; int getNumConstraintGroups ();  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; int getDimension ();  ; SReal ** getW ();  ; SReal * getDfree ();  ; SReal * getF ();  ; unsigned int getProblemId ();  . Attribute details. ◆ _d. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::_d. ◆ allVerified. bool sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::allVerified. ◆ cclist_elems. std::vector< ConstraintCorrections > sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::cclist_elems. ◆ change_sequence. bool sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::change_sequence. ◆ constraints_sequence. std::list<unsigned int> sofa::component::constraint::lagrangian::solver::GenericConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:2677,inherit,inherited,2677,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['inherit'],['inherited']
Modifiability,"lass Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags > Class Template Reference . #include <Link.h>; Container of single links in the scenegraph, from a given type of object (Owner) to another (Dest) ; More... Inheritance diagram for sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >:. [legend]; Detailed Description; template<class TOwnerType, class TDestType, unsigned TFlags>; class sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; Container of single links in the scenegraph, from a given type of object (Owner) to another (Dest) . Protected Attributes; ValidatorFn m_validator;  ;  Protected Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; OwnerType * m_owner;  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:947,inherit,inherited,947,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,2,['inherit'],['inherited']
Modifiability,"lass Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::BaseMatrixAccumulatorComponent< c > Class Template Reference . #include <BaseMatrixAccumulatorComponent.h>. Inheritance diagram for sofa::core::BaseMatrixAccumulatorComponent< c >:. [legend]; Detailed Description; template<matrixaccumulator::Contribution c>; class sofa::core::BaseMatrixAccumulatorComponent< c >; Matrix accumulator which is also a BaseObject. It is designed to be associated with another component. . Public Attributes; SingleLink< MyType, ComponentType, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_associatedComponent;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMatrixAccumulatorComponent, objectmodel::BaseObject);  ;  ~BaseMatrixAccumulatorComponent () override=default;  ;  BaseMatrixAccumulatorComponent ();  ; void associateObject (ComponentType *object);  ;  Public Member Functions inher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html:980,inherit,inherited,980,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,1,['inherit'],['inherited']
Modifiability,"late Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 > Class Template Reference . #include <StickContactConstraint.h>. Inheritance diagram for sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_keepAlive;  ; Data< bool > d_keepAlive;  set to true to keep this contact alive even after collisions are no longer detected More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; CollisionModel1 * model1;  ; CollisionModel2 * model2;  ; Intersection * intersectionMethod;  ; mapper::ContactMapper< CollisionModel1, DataTypes1 > mapper1;  ; mapper::ContactMapper< CollisionModel2, DataTypes2 > mapper2;  ; constraint::lagrangian::model::Bila",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html:1049,inherit,inherited,1049,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,1,['inherit'],['inherited']
Modifiability,"late<class DataTypes>; class sofa::component::engine::select::MeshROI< DataTypes >; This class find all the points/edges/triangles/tetrahedra located inside a given Mesh. . Public Attributes; Data< VecCoord > d_roiPositions;  ROI position coordinates of the degrees of freedom. More...;  ; Data< type::vector< Edge > > d_roiEdges;  ROI Edge Topology. More...;  ; Data< type::vector< Triangle > > d_roiTriangles;  ROI Triangle Topology. More...;  ; Data< bool > d_computeTemplateTriangles;  Compute with the mesh (not only bounding box) More...;  ; Data< type::Vec6 > d_box;  Bounding box defined by xmin,ymin,zmin, xmax,ymax,zmax. More...;  ; Data< bool > d_drawOut;  Draw the data not contained in the ROI. More...;  ; Data< bool > d_drawBox;  Draw the Bounding box around the mesh used for the ROI. More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0_i;  ; sofa::core::objectmodel::RenamedData< type::vector< Edge > > d_edges_i;  ; sofa::core::objectmodel::RenamedData< type::vector< Triangle > > d_triangles_i;  ;  Public Attributes inherited from sofa::component::engine::select::BaseROI< DataTypes >; Data< VecCoord > d_positions;  ; Data< VecEdge > d_edges;  Edge Topology. More...;  ; Data< VecTriangle > d_triangles;  Triangle Topology. More...;  ; Data< VecQuad > d_quads;  Quad Topology. More...;  ; Data< VecTetra > d_tetrahedra;  Tetrahedron Topology. More...;  ; Data< VecHexa > d_hexahedra;  Hexahedron Topology. More...;  ; Data< bool > d_computeEdges;  If true, will compute edge list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeTriangles;  If true, will compute triangle list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeQuads;  If true, will compute quad list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeTetrahedra;  If true, will compute tetrahedra list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeHexahedra;  If true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:1570,inherit,inherited,1570,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"late<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; virtual void updateFromTopology ();  ;  LineCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:20367,inherit,inherited,20367,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,1,['inherit'],['inherited']
Modifiability,lateralInteractionConstraint. /issue-when-changing-object-position-via-python-scene; . /embed; ; SOFA - Topic: Issue when changing object position via python scene. SOFA - Topic: Issue when changing object position via python scene. /issue-while-exporting-tetrahedron-mesh-generated-from-polyhedron; ; SOFA - Topic: [SOLVED] Issue while exporting tetrahedron mesh generated from polyhedron. /issue-with-cuda-examples; ; SOFA - Topic: Issue with CUDA examples. /issue-with-initializing-stiffspringforcefied; ; SOFA - Topic: [SOLVED] Issue with initializing StiffSpringForceFied. /issue-with-the-update-of-the-stiffness-variable-in-stiffspringff; ; SOFA - Topic: [SOLVED] Issue with the update of the stiffness variable in StiffSpringFF. /is-there-any-method-to-apply-inital-stress-state-in-sofa; ; SOFA - Topic: Is there any method to apply inital stress state in SOFA?. /is-there-any-plugin-for-leapmotion; . /feed; ; [SOLVED] Is there any plugin for LeapMotion? – SOFA. SOFA - Topic: [SOLVED] Is there any plugin for LeapMotion?. /is-trianglesettopologymodifierremovetrianglespostprocessing-empty; . /page; . /10; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /3; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /7; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /i-want-to-study-all-about-sofa; . /feed; ; [SOLVED] I want to study about SOFA – SOFA. SOFA - Topic: [SOLVED] I want to study about SOFA. /join-our-linkedin-group; ; SOFA - Topic: Join our LinkedIn group!. /join-the-community-at-the-stc5; ; SOFA - Topic: Join the community at the STC#5. /join-the-stc7-on-the-french-riviera; ; SOFA - Topic: Join the STC#7 on the French Riviera. /join-the-stc9-online; ; SOFA - Topic: Join the STC#9 online. /jointspringforcefield-problems; ; SOFA - Topic: Joi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:338692,plugin,plugin,338692,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"lay shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Eve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:5409,inherit,inherited,5409,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,9,['inherit'],['inherited']
Modifiability,"lay shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyCh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:5844,inherit,inherited,5844,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,5,['inherit'],['inherited']
Modifiability,"layed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subs",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:19491,inherit,inherited,19491,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"lback)sofa::helper::system::PluginManager; checkDuplicatedPlugin(const Plugin &plugin, const std::string &pluginPath)sofa::helper::system::PluginManager; cleanup()sofa::helper::system::PluginManager; findPlugin(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, int maxRecursiveDepth=3)sofa::helper::system::PluginManager; getDefaultSuffix()sofa::helper::system::PluginManagerstatic; getEntryFromPlugin(const Plugin *plugin, Entry &entry)sofa::helper::system::PluginManagerinline; getInstance()sofa::helper::system::PluginManagerstatic; getPlugin(const std::string &plugin, const std::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:1486,Plugin,PluginManager,1486,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['Plugin'],['PluginManager']
Modifiability,"ld, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html:13493,inherit,inherited,13493,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,3,['inherit'],['inherited']
Modifiability,"ld, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:14535,inherit,inherited,14535,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,1,['inherit'],['inherited']
Modifiability,"ld, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:9369,inherit,inherited,9369,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,3,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"ld, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Topology ();  ; virtual ~Topology ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html:9928,inherit,inherited,9928,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,1,['inherit'],['inherited']
Modifiability,"ld. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  IndexValueMapper ();  ;  ~IndexValueMapper () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:12802,inherit,inherited,12802,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['inherit'],['inherited']
Modifiability,"ld. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshSubsetEngine ();  ;  ~MeshSubsetEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:13914,inherit,inherited,13914,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['inherit'],['inherited']
Modifiability,"ld. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SmoothMeshEngine ();  ;  ~SmoothMeshEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:14294,inherit,inherited,14294,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; InternalData data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:3224,inherit,inherited,3224,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecMaterialStiffness _materialsStiffnesses;  the material stiffness matrices vector More...;  ; sofa::core::objectmodel::RenamedData< VecElementStiffness > _elementStiffnesses;  ; Data< VecElementStiffness > d_elementStiffnesses;  Stiffness matrices per element",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:3644,inherit,inherited,3644,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecMaterialStiffness materialsStiffnesses;  Vector of material stiffness matrices of each tetrahedron. More...;  ; VecStrainDisplacement strainDisplacements;  the strain-displacement matrices vector More...;  ; type::vector< Transformation > rotations;  ; type:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:6353,inherit,inherited,6353,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool _anisotropicMaterial;  ; bool updateMatrix;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html:4774,inherit,inherited,4774,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool updateMatrix;  ; ExtraData m_data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html:3501,inherit,inherited,3501,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:3085,inherit,inherited,3085,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralCorotationalFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved _youngModulus;  ; void se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:4276,inherit,inherited,4276,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularAnisotropicFEMForceField, DataTypes), SOFA_TEMPLATE(TriangularFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:5032,inherit,inherited,5032,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ld< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int SMALL = 1;  Symbol of small displacements triangle solver. More...;  ; static const int LARGE = 0;  Symbol of large displacements triangle solver. More...;  . Protected Attributes; VecMaterialStiffness _materialsStiffnesses;  the material s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html:2853,inherit,inherited,2853,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"lds () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Tetra2TriangleTopologicalMapping ();  Constructor. More...;  ;  ~Tetra2TriangleTopologicalMapping () override=default;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologicalMapping;  TopologicalMapping ();  ;  ~TopologicalMapping () override;  ; bool checkTopologyInputTypes ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html:13290,inherit,inherited,13290,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,2,['inherit'],['inherited']
Modifiability,"lds () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html:12198,inherit,inherited,12198,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,3,['inherit'],['inherited']
Modifiability,"le an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:11330,inherit,inherited,11330,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,12,['inherit'],['inherited']
Modifiability,"le objects. /9; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /permission-denied-in-video-recording; ; SOFA - Topic: Permission denied in Video recording. /persistent-contact-plugin-compile-fail; . /feed; ; [SOLVED] Persistent Contact Plugin Compile Fail – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /8; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /physics-slow-down-at-large-youngs-modulus; . /feed; ; [SOLVED] Physics slow down at large Young’s modulus – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /3; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /plugin-creation; ; SOFA - Topic: [SOLVED] plugin creation. /plugin-creation-cmake-error; . /feed; ; [SOLVED] Plugin creation CMake error – SOFA. SOFA - Topic: [SOLVED] Plugin creation CMake error. /plugin-loading-failed; ; SOFA - Topic: [SOLVED] Plugin Loading failed. /plugin-loading-failed-2; ; SOFA - Topic: [SOLVED] Plugin loading failed. /plugin-not-found-pluginexample; ; SOFA - Topic: [SOLVED] Plugin not found: ""PluginExample"". /plugin-not-loaded-after-setting-path; ; SOFA - Topic: [SOLVED] Plugin not loaded after setting path. /pneumatic-actuator-soft-robots-plugin; ; SOFA - Topic: [SOLVED] Pneumatic actuator – Soft Robots plugin. /pneumatic-actuator-using-surfacepressureconstraint; ; SOFA - Topic: Pneumatic Actuator using SurfacePressureConstraint. /point-sets-in-registration-examples; ; SOFA - Topic: point sets in Registration examples. /precomputedconstraintcorrection; ; SOFA - Topic: PrecomputedConstraintCorrection. /precomputedconstraintcorrection-issue; ; SOFA - Topic: [SOLVED] PrecomputedConstraintCorrection issue. /preconditioner-for-an-iterativ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:362017,plugin,plugin-creation-cmake-error,362017,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-creation-cmake-error']
Modifiability,"le the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialFixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes));  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:3363,variab,variables,3363,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['variab'],['variables']
Modifiability,"le::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology::SPtr m_topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyChecker, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:2704,inherit,inherited,2704,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,2,['inherit'],['inherited']
Modifiability,"le::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< sofa::type::Vec3 > m_savedPositions;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SphereLoader, sofa::core::loader::BaseLoader);  ; bool load () override;  ; void applyTransform ();  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html:2036,inherit,inherited,2036,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,2,['inherit'],['inherited']
Modifiability,"le::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html:2090,inherit,inherited,2090,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,1,['inherit'],['inherited']
Modifiability,leEvent engine – SOFA. SOFA - Topic Tag: scenegraph events handleEvent engine. /scene-in-cpp; . /feed; ; scene in cpp – SOFA. SOFA - Topic Tag: scene in cpp. /scenes; . /feed; ; scenes – SOFA. SOFA - Topic Tag: scenes. /scene-xml-pose; . /feed; ; Scene; XML; Pose – SOFA. SOFA - Topic Tag: Scene; XML; Pose. /screenshot; . /feed; ; screenshot – SOFA. SOFA - Topic Tag: screenshot. /screenshots; . /feed; ; screenshots – SOFA. SOFA - Topic Tag: screenshots. /script; . /feed; ; script – SOFA. SOFA - Topic Tag: script. /search-node; . /feed; ; search node – SOFA. SOFA - Topic Tag: search node. /segfault; . /feed; ; segfault – SOFA. SOFA - Topic Tag: segfault. /segmentation-fault; . /feed; ; segmentation fault – SOFA. SOFA - Topic Tag: segmentation fault. /segmentation-fault-11; . /feed; ; segmentation fault 11 – SOFA. SOFA - Topic Tag: segmentation fault 11. /sensable; . /feed; ; Sensable – SOFA. SOFA - Topic Tag: Sensable. /sensable-plugin; . /feed; ; Sensable plugin – SOFA. SOFA - Topic Tag: Sensable plugin. /sensable-sofa-plugin; . /feed; ; sensable sofa plugin – SOFA. SOFA - Topic Tag: sensable sofa plugin. /sensible; . /feed; ; sensible – SOFA. SOFA - Topic Tag: sensible. /sensing; . /feed; ; Sensing – SOFA. SOFA - Topic Tag: Sensing. /separate; . /feed; ; separate – SOFA. SOFA - Topic Tag: separate. /server; . /feed; ; server – SOFA. SOFA - Topic Tag: server. /servo; . /feed; ; Servo – SOFA. SOFA - Topic Tag: Servo. /servoing; . /feed; ; servoing – SOFA. SOFA - Topic Tag: servoing. /setting_up; . /feed; ; Setting_Up – SOFA. SOFA - Topic Tag: Setting_Up. /setting-up; . /feed; ; Setting up – SOFA. SOFA - Topic Tag: Setting up. /shader; . /feed; ; shader – SOFA. SOFA - Topic Tag: shader. /shadow; . /feed; ; shadow – SOFA. SOFA - Topic Tag: shadow. /shadows; . /feed; ; shadows – SOFA. SOFA - Topic Tag: shadows. /showing-indexes-and-vertices-in-run-window; . /feed; ; Showing indexes and vertices in run window – SOFA. SOFA - Topic Tag: Showing indexes and vertices in run wi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:470884,plugin,plugin,470884,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"leModelInRegularGrid:. [legend]. Public Attributes; sofa::core::topology::BaseMeshTopology * _topology;  ; sofa::core::topology::BaseMeshTopology * _higher_topo;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * _higher_mstate;  ;  Public Attributes inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1}",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:1385,inherit,inherited,1385,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['inherit'],['inherited']
Modifiability,"leName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< LineProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:3401,inherit,inherited,3401,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"lePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes));  ; void roiInit () override;  ; bool roiDoUpdate () override;  ; void roiDraw (const core::visual::VisualParams *vparams) override;  ; void roiComputeBBox (const core::ExecParams *params, type::BoundingBox &bbox) override;  ;  Public Member Functions inherited from sofa::component::engine::select::BaseROI< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(BaseROI, DataTypes), Inherit);  ; void init () final;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) final;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) final;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void del",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:7725,inherit,inherited,7725,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"leSetTopologyContainer; sofa::type::vector< EdgesInTriangle > m_edgesInTriangle;  provides the 3 edges in each triangle. More...;  ; sofa::type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex. More...;  ; sofa::type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge. More...;  ; sofa::type::vector< TriangleID > m_trianglesOnBorder;  Set of triangle indices on topology border. More...;  ; sofa::type::vector< EdgeID > m_edgesOnBorder;  Set of edge indices on topology border. More...;  ; sofa::type::vector< PointID > m_pointsOnBorder;  Set of point indices on topology border. More...;  ; bool m_triangleTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:5320,inherit,inherited,5320,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"leStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class FixedPlaneProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_direction. template<class DataTypes > . Data<Coord> sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::d_direction. normal direction of the plane . ◆ d_dmax. template<class DataTypes > . Data<Real> sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::d_dmax. Maximum plane distance from the origin. . ◆ d_dmin. template<class DataTypes > . Data<Real> sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::d_dmin. Minimum plane distance from the origin. . ◆ d_indices. template<class DataTypes > . SetIndex sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::d_indices. the set of vertex indices . ◆ data. template<class DataTypes > . FixedPlaneProjectiveConstraintInternalData<DataTypes> sofa::component::constraint::projectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:19608,inherit,inherited,19608,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,led Description; indicates that some quads are about to be removed . Protected Attributes; sofa::type::vector< Topology::QuadID > removedQuadsArray;  ;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  . Public Member Functions;  QuadsRemoved (const sofa::type::vector< Topology::QuadID > _qArray);  ;  ~QuadsRemoved () override;  ; std::size_t getNbRemovedQuads () const;  ; const sofa::type::vector< Topology::QuadID > & getArray () const;  ; Topology::QuadID & getQuadIndices (const Topology::QuadID i);  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedQuadsArray. sofa::type::vector<Topology::QuadID> sofa::core::topology::QuadsRemoved::removedQuadsArray. protected . Constructor details. ◆ QuadsRemoved(). sofa::core::topology::QuadsRemoved::QuadsRemoved ; (; const sofa::type::vector< Topology::QuadID > ; _qArray). inline . ◆ ~QuadsRemoved(). sofa::core::topology::QuadsRemoved::~QuadsRemoved ; (; ). override . Function details. ◆ getArray(). const sofa::type::vector<Topology::QuadID>& sofa::core::topology::QuadsRemoved::getArray ; (; ); const. inline . ◆ getNbRemovedQuads(). std::size_t sofa::core::topology::QuadsRemoved::getNbRemovedQuads ; (; ); const. inline . ◆ getQuadIndices(). Topology::QuadID& sofa::core::topology::QuadsRemoved::getQuadIndices ; (; const Topology::QuadID ; i). inline . sofacoretopologyQuadsRemoved; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed.html:1387,inherit,inherited,1387,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_removed.html,1,['inherit'],['inherited']
Modifiability,"legend]; Detailed Description; \Compositing visual loop: render multiple passes and composite them into one single rendered frame . Public Attributes; sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::simulation::DefaultVisualManagerLoop; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CompositingVisualLoop, simulation::DefaultVisualManagerLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void drawStep (sofa::core::visual::VisualParams *vpa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:1356,inherit,inherited,1356,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,1,['inherit'],['inherited']
Modifiability,lemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; . /feed; ; [SOLVED] Performance issues with haptics and deformable objects – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /3; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /8; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /9; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /permission-denied-in-video-recording; ; SOFA - Topic: Permission denied in Video recording. /persistent-contact-plugin-compile-fail; . /feed; ; [SOLVED] Persistent Contact Plugin Compile Fail – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /8; ; SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. SOFA - Topic: [SOLVED] Persistent Contact Plugin Compile Fail. /physics-slow-down-at-large-youngs-modulus; . /feed; ; [SOLVED] Physics slow down at large Young’s modulus – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /3; ; SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. SOFA - Topic: [SOLVED] Physics slow down at large Young’s modulus. /plugin-creation; ; SOFA - Topic: [SOLVED] plugin creation. /plugin-creation-cmake-error; . /feed; ; [SOLVED] Plugin creation CMake error – SOFA. SOFA - Topic: [SOLVED] Plugin creation CMake error. /plugin-loading-failed; ; SOFA - Topic: [SOLVED] Plugin Loading failed. /plugin-loading-failed-2; ; SOFA - Topic: [SOLVED] Plugin loading failed. /plugin-not-found-plu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:361320,plugin,plugin-compile-fail,361320,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-compile-fail']
Modifiability,"lement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< float > * beginEdit ();  ; void endEdit ();  ; const type::vector< float > & getValue () const;  ; void setValue (const type::vector< float > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html:1849,variab,variable,1849,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,2,['variab'],['variable']
Modifiability,"lete;  ; template<class T > ; bool testIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; template<class T > ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::TSphere< T > &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Line &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; template<class T > ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::TSphere< T > &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html:4582,inherit,inherited,4582,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_mesh_min_proximity_intersection.html,1,['inherit'],['inherited']
Modifiability,"levelModification:. [legend]; Detailed Description; notifies change in the multilevel structure other than adding or removing coarse hexahedra . Static Public Attributes; static const int MULTILEVEL_MODIFICATION = core::topology::TOPOLOGYCHANGE_LASTID + 1;  . Public Member Functions;  MultilevelModification (const sofa::type::vector< Index > &_tArray, const std::map< Index, std::list< Vec3i > > &removedVoxels);  ; const sofa::type::vector< Index > & getArray () const;  ; const std::list< Vec3i > & getRemovedVoxels (const Index hexaId) const;  ; size_t getNbModifiedHexahedra () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ MULTILEVEL_MODIFICATION. const int sofa::component::topology::container::dynamic::MultilevelModification::MULTILEVEL_MODIFICATION = core::topology::TOPOLOGYCHANGE_LASTID + 1. static . Constructor details. ◆ MultilevelModification(). sofa::component::topology::container::dynamic::MultilevelModification::MultilevelModification ; (; const sofa::type::vector< Index > & ; _tArray, . const std::map< Index, std::list< Vec3i > > & ; removedVoxels . ). inline . Function details. ◆ getArray(). const sofa::type::vector<Index>& sofa::component::topology::container::dynamic::MultilevelModification::getArray ; (; ); const. inline . ◆ getNbModifiedHexahedra(). size_t sofa::component::topology::container::dynamic::Multileve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification.html:1412,inherit,inherited,1412,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_modification.html,1,['inherit'],['inherited']
Modifiability,lexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc-4-8-5; . /feed; ; Gcc 4.8.5 – SOFA. SOFA - Topic Tag: Gcc 4.8.5. /geomagic; . /feed; ; geomagic – SOFA. SOFA - Topic Tag: geomagic. /geomagic-collision-error; . /feed; ; Geomagic collision error – SOFA. SOFA - Topic Tag: Geomagic collision error. /geomagic-plugin; . /feed; ; Geomagic plugin – SOFA. SOFA - Topic Tag: Geomagic plugin. /geomagic-rare-tool-behaviour; . /feed; ; [Geomagic] Rare tool behaviour – SOFA. SOFA - Topic Tag: [Geomagic] Rare tool behaviour. /geomagic-touch; . /feed; ; Geomagic touch – SOFA. SOFA - Topic,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:444957,plugin,plugin,444957,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"lgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; Vector operations; void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId) override;  ; void projectJacobianMatrix (const MechanicalParams *mparams, MultiMatrixDerivId cId) override;  ; void projectVelocity (const MechanicalParams *mparams, MultiVecDerivId vId) override;  ; void projectPosition (const MechanicalParams *mparams, MultiVecCoordId xId) override;  ; virtual void projectResponse (const MechanicalParams *mparams, DataVecDeriv &dx)=0;  ; virtual void projectVelocity (const MechanicalParams *mparams, DataVecDeriv &v)=0;  ; virtual void projectPosition (const MechanicalParams *mparams, DataVecCoord &x)=0;  ; virtual void projectJacobianMatrix (const MechanicalParams *, DataMatrixDeriv &cData)=0;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLIC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:3924,inherit,inherited,3924,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,"lias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  GeometryAlgorithms ();  Constructor. More...;  ;  ~GeometryAlgorithms () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html:9753,inherit,inherited,9753,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability,"lias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction.html:11292,inherit,inherited,11292,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"lias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static T swapT (T t, int nestedDataSize);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html:10895,inherit,inherited,10895,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,1,['inherit'],['inherited']
Modifiability,"lias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static std::string GetCustomClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html:10797,inherit,inherited,10797,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,2,['inherit'],['inherited']
Modifiability,"liases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:15615,inherit,inherited,15615,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['inherit'],['inherited']
Modifiability,"liases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html:14079,inherit,inherited,14079,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,1,['inherit'],['inherited']
Modifiability,"liases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  AverageCoord ();  ;  ~AverageCoord () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:13085,inherit,inherited,13085,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['inherit'],['inherited']
Modifiability,"liases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  FixedLagrangianConstraint (MechanicalState *object=nullptr);  ; virtual ~FixedLagrangianConstraint ();  ; virtual type::vector< std::string > getConstraintIdentifiers () override final;  ; virtual type::vector< std::string > getFixedIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::Constraint< DataTypes >;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:13910,inherit,inherited,13910,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"liases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  StopperLagrangianConstraint (MechanicalState *object=nullptr);  ; virtual ~StopperLagrangianConstraint ();  ; virtual type::vector< std::string > getConstraintIdentifiers () override final;  ; virtual type::vector< std::string > getStopperIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::Constraint< DataTypes >;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html:14085,inherit,inherited,14085,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"liases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  UniformLagrangianConstraint ();  ; virtual type::vector< std::string > getConstraintIdentifiers () override final;  ; virtual type::vector< std::string > getStopperIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::Constraint< DataTypes >;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ; virtual void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html:14088,inherit,inherited,14088,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"liases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * Ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:13749,inherit,inherited,13749,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,1,['inherit'],['inherited']
Modifiability,"liases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair)=0;  Add a new potentially colliding pairs of models. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html:2951,inherit,inherited,2951,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,1,['inherit'],['inherited']
Modifiability,"liases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(BarycentricPenalityContact, TCollisionModel1, TCollisionModel2, ResponseDataTypes), core::collision::Contact);  ; void cleanup () override;  ; std::pair< core::CollisionModel *, core::CollisionModel * > getCollisionModels () override;  Get the pair of collision models which are in contact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html:2501,inherit,inherited,2501,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,1,['inherit'],['inherited']
Modifiability,"liases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Static Protected Attributes; static constexpr type::fixed_array< bool, coord_total_size > s_defaultActiveDirections = sofa::type::makeHomogeneousArray<bool, coord_total_size>(true);  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void bwdInit () override;  BaseObject initialization method. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  Add the forces. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Brings ForceField contribution to the global system stiffness matrix. More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *matrix) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; const DataVecCoord * getExtPosition () const;  ; const VecI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html:6008,variab,variables,6008,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,1,['variab'],['variables']
Modifiability,"lic Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; static constexpr auto N = DataTypes::spatial_dimensions;  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html:26723,inherit,inherited,26723,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,4,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ areSpringIndicesDirty. template<class DataTypes > . bool sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::areSpringIndicesDirty { true }. protected . ◆ c_springCallBack. template<class DataTypes > . core::objectmodel::DataCallback sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::c_springCallBack. protected . ◆ d_drawMode. template<class DataTypes > . Data<int> sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::d_drawMode. The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. . ◆ d_elongationOnly. template<class DataTypes > . Data<type::vector<bool> > sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::d_elongationOnly. List of boolean stating on the fact that the spring should only apply forces on elongations. Must have the same size as indices1 & indic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:24900,inherit,inherited,24900,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. template<class DataTypes > . Data<sofa::type::vector<Contact> > sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::contacts. Contacts. . ◆ prevContacts. template<class DataTypes > . sofa::type::vector<Contact> sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::prevContacts. protected . Constructor details. ◆ PenalityContactForceField() [1/2]. template<class DataTypes > . sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::PenalityContactForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2 . ). inlineprotected . ◆ PenalityContactForceField() [2/2]. template<class DataTypes > . sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::PenalityContactForceField ; (; ). inlineprotected . F",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:21123,inherit,inherited,21123,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_compressible. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::d_compressible. Indicates if object compresses without any reaction force. . ◆ d_computeZeroLength. template<class DataTypes > . Data<int> sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::d_computeZeroLength. flag to compute initial length for springs . ◆ d_drawMode. template<class DataTypes > . Data<int> sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::d_drawMode. The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. . ◆ d_firstObjectPoints. template<class DataTypes > . Data<VecIndex> sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::d_firstObjectPoints. points related to the first object . ◆ d_polynom",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:22547,inherit,inherited,22547,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_filename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::d_filename. output file name . ◆ d_period. template<class DataTypes > . Data< Real > sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::d_period. period between outputs . ◆ d_reinit. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::d_reinit. flag enabling reinitialization of the output file at each timestep . ◆ d_showFactorSize. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::d_showFactorSize. bool to allow the display of the extra torsion . ◆ d_springs. template<class DataTypes > . Data<sofa::type::vector<Spring> > sofa::component::solidmec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:22394,inherit,inherited,22394,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_filename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::d_filename. the filename where to load the spring information . ◆ d_springArray. template<class DataTypes > . sofa::core::topology::EdgeData<sofa::type::vector<Spring> > sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::d_springArray. where the springs information are stored . ◆ d_stiffness. template<class DataTypes > . Data<SReal> sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::d_stiffness. By default, assume that all edges have the same stiffness. . ◆ d_useTopology. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::d_useTopology. Activate/Deactivate topology mode of the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:22382,inherit,inherited,22382,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_infilename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::d_infilename. input file containing constant joint force . ◆ d_outfilename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::d_outfilename. output file name . ◆ d_period. template<class DataTypes > . Data<Real > sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::d_period. period between outputs . ◆ d_reinit. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::d_reinit. flag enabling reinitialization of the output file at each timestep . ◆ d_showExtraTorsion. template<class DataTypes > . Data<bool> sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:22682,inherit,inherited,22682,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_showExtraTorsion. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::d_showExtraTorsion. protected . display the illicit part of the joint rotation . ◆ d_showLawfulTorsion. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::d_showLawfulTorsion. protected . bool to allow the display of the 2 parts of springs torsions . ◆ d_springs. template<class DataTypes > . Data<sofa::type::vector<Spring> > sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::d_springs. protected . the list of the springs . ◆ data. template<class DataTypes > . FrameSpringForceFieldInternalData<DataTypes> sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::data. protected . ◆ m_potentialEnergy. template",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:21833,inherit,inherited,21833,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:14346,inherit,inherited,14346,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,2,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html:14382,inherit,inherited,14382,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,2,['inherit'],['inherited']
Modifiability,"lic Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_flags. template<class DataTypes > . core::visual::DisplayFlags sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_flags. protected . ◆ m_interactionObject. template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_interactionObject. protected . ◆ m_mapper. template<class DataTypes > . MouseContactMapper* sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_mapper. protected . Constructor details. ◆ BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::BaseAttac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:2242,inherit,inherited,2242,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,7,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"lic Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_mstate1. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes>* sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::m_mstate1. protected . ◆ m_mstate2. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes> * sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::m_mstate2. protected . Constructor details. ◆ ConstraintAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::ConstraintAttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~ConstraintAttachBodyPerformer(). template<class DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html:2294,inherit,inherited,2294,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,7,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"lidmechanics::fem::hyperelastic::material::Costa< DataTypes >::Name = ""Costa"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlinevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . virtual Real sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ;  . ). inlinevirtual . returns the strain energy of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhype",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html:3112,config,configuration,3112,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_costa.html,1,['config'],['configuration']
Modifiability,"lidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::Name = ""Ogden"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ;  . ). inlineoverridevirtual . returns the strain energy of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhype",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html:3116,config,configuration,3116,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,1,['config'],['configuration']
Modifiability,lied by using virtual nodes) ; More... Inheritance diagram for sofa::component::topology::container::grid::SparseGridRamificationTopology:. [legend]; Detailed Description; a SparseGridTopology where each resulting cube contains only one independent connexe component (nodes can be multiplied by using virtual nodes) . Classes; struct  Connexion;  a connection corresponds to a connexe component in each regular hexa (each non-void hexa has at less one connection) More...;  . Public Attributes; sofa::core::objectmodel::RenamedData< bool > _finestConnectivity;  ; Data< bool > d_finestConnectivity;  Test for connectivity at the finest level? (more precise but slower by testing all intersections between the model mesh and the faces between boundary cubes) More...;  ; HierarchicalCubeMapRamification _hierarchicalCubeMapRamification;  ;  Public Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; HierarchicalCubeMap _hierarchicalCubeMap;  ; InverseHierarchicalCubeMap _inverseHierarchicalCubeMap;  ; HierarchicalPointMap _hierarchicalPointMap;  ; InverseHierarchicalPointMap _inverseHierarchicalPointMap;  ; PointMap _pointMap;  a coarse point indice -> corresponding point in finer level More...;  ; PointMap _inversePointMap;  a fine point indice -> corresponding point in coarser level More...;  ; NodeAdjacency _nodeAdjacency;  ; NodeCubesAdjacency _nodeCubesAdjacency;  ; NodeCornersAdjacency _nodeCornersAdjacency;  ; type::vector< SparseGridTopology::SPtr > _virtualFinerLevels;  saving the virtual levels (cf nbVirtualFinerLevels) More...;  ; sofa::core::sptr< RegularGridTopology > _regularGrid;  based on a corresponding RegularGrid More...;  ; type::vector< Index > _indicesOfRegularCubeInSparseGrid;  to redirect an indice of a cube in the regular grid to its indice in the sparse grid More...;  ; type::vector< Index > _indicesOfCubeinRegularGrid;  to redirect an indice of a cube in the sparse grid to its indice in the regular grid More...;  ; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html:1425,inherit,inherited,1425,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,1,['inherit'],['inherited']
Modifiability,lied. /deform-the-mesh-data; ; SOFA - Topic: [SOLVED] deform the mesh data. /deleting-springs-via-sofapython3; ; SOFA - Topic: [SOLVED] Deleting Springs via SofaPython3. /dependency-error-when-loading-softrobots-dll; . /feed; ; Dependency error when loading SoftRobots.dll – SOFA. SOFA - Topic: Dependency error when loading SoftRobots.dll. /deprecated-frame-plugin; . /feed; ; [SOLVED] Deprecated Frame plugin ? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /2; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /depth-of-field; ; SOFA - Topic: Depth Of Field. /detailed-document; ; SOFA - Topic: detailed document. /determine-visibility-of-objects-in-the-scene; ; SOFA - Topic: Determine Visibility of Objects in the Scene. /determining-if-the-include-file-pthread-h-exists-failed; ; SOFA - Topic: [SOLVED] Determining if the include file pthread.h exists failed. /develope-a-new-fem-plugin; . /feed; ; [SOLVED] Develop a new FEM plugin – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin. /difference-between-master-and-stable-versions; ; SOFA - Topic: [SOLVED] difference between master and stable versions. /differences-between-animationloops; . /feed; ; [SOLVED] Differences between AnimationLoops – SOFA. SOFA - Topic: [SOLVED] Differences between AnimationLoops. /difficulties-compiling-my-own-sofa-plugins-on-windows; ; SOFA - Topic: [SOLVED] Difficulties compiling my own SOFA plugins on Windows. /difficulty-compiling-applications-tutorials; ; SOFA - Topic: [SOLVED] Difficulty compiling applications/tutorials. /diffussion-for-tetrahedral-mesh; . /feed; ; [SOLVED] Diffusion for tetrahedral mesh – SOFA. SOFA - Topic: [SOLVED] Diffusion for tetrahedral mesh. /discover-the-new-release-v20-12; . /feed; ; Discover the new release v20.12! – SOFA. SOFA - Topic: Discover the new release v,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:287836,plugin,plugin,287836,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0;  Add data to a global BaseVector from the state stored in a local vector. More...;  ; virtual void addFromBaseVectorSameSize (VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0;  Perform dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) More...;  ; virtual void addFromBaseVectorDifferentSize (VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0;  Perform dest[ offset + i ][j] += src[i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects) More...;  ; Data output; virtual void printDOF (ConstVecId v, std::ostream &out=std::cerr, int firstIndex=0, int range=-1) const =0;  ; virtual unsigned printDOFWithElapsedTime (ConstVecId, unsigned=0, unsigned=0, std::ostream &=std::cerr);  ; virtual void initGnuplot (const std::string);  ; virtual void exportGnuplot (SReal);  ; virtual void writeVec (ConstVecId v, std::ostream &out)=0;  ; virtual void readVec (VecId v, std::istream &in)=0;  ; virtual SReal compareVec (ConstVecId v, std::istream &in)=0;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:7383,inherit,inherited,7383,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['inherit'],['inherited']
Modifiability,"linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet Struct Referencefinal . #include <MatrixLinearSystem.h>. Inheritance diagram for sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet:. [legend]; Detailed Description; template<class TMatrix, class TVector>; struct sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet; Define how zero Dirichlet boundary conditions are applied on the global matrix . Public Attributes; sofa::type::Vec2u m_offset;  ; TMatrix * m_globalMatrix { nullptr };  The matrix to apply a zero Dirichlet boundary condition. More...;  . Public Member Functions;  ~Dirichlet () override=default;  ; void discardRowCol (sofa::Index row, sofa::Index col) override;  ;  Public Member Functions inherited from sofa::core::behavior::ZeroDirichletCondition; virtual ~ZeroDirichletCondition ()=default;  . Attribute details. ◆ m_globalMatrix. template<class TMatrix , class TVector > . TMatrix* sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_globalMatrix { nullptr }. The matrix to apply a zero Dirichlet boundary condition. . ◆ m_offset. template<class TMatrix , class TVector > . sofa::type::Vec2u sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::m_offset. Constructor details. ◆ ~Dirichlet(). template<class TMatrix , class TVector > . sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::~Dirichlet ; (; ). overridedefault . Function details. ◆ discardRowCol(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::Dirichlet::discardRowCol ; (; sofa::Index ; , . sofa::Index ;  . ). overridevirtual . Zero ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html:1054,inherit,inherited,1054,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system_1_1_dirichlet.html,2,['inherit'],['inherited']
Modifiability,"linestatic; CreateDataWidget(const DataWidget::CreatorArgument &dwarg)sofa::gui::qt::DataWidgetstatic; createWidgets()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; data_type typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; DataOwnerDirty(bool)sofa::gui::qt::DataWidgetsignal; dataValueChanged(QString dataValueString)sofa::gui::qt::DataWidgetsignal; DataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::DataWidget; dirtysofa::gui::qt::DataWidgetprotected; fillFromData()sofa::gui::qt::DataWidgetslot; getBaseData() constsofa::gui::qt::DataWidgetinline; getBaseData()sofa::gui::qt::DataWidgetinline; getData()sofa::gui::qt::TDataWidget< T >inline; getData() constsofa::gui::qt::TDataWidget< T >inline; GraphDataWidget(QWidget *parent, const char *name, MyData *d)sofa::gui::qt::GraphDataWidget< T >inline; helper typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >protected; Inherit typedefsofa::gui::qt::GraphDataWidget< T >; isDirty()sofa::gui::qt::DataWidgetinline; isFilled()sofa::gui::qt::DataWidgetinline; m_isFilledsofa::gui::qt::DataWidgetprotected; m_toFillsofa::gui::qt::DataWidgetprotected; MyData typedefsofa::gui::qt::GraphDataWidget< T >; MyTData typedefsofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; numColumnWidget()sofa::gui::qt::GraphDataWidget< T >inlinevirtual; readFromData()sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setData(MyTData *d)sofa::gui::qt::TDataWidget< T >inlinevirtual; setData(MyData *d)sofa::gui::qt::TDataWidget< T >; sofa::gui::qt::DataWidget::setData(MyData *d)sofa::gui::qt::DataWidgetvirtual; setDataReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual; setFilled(bool value)sofa::gui::qt::DataWidgetinline; setReadOnly(bool readOnly)sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >inlinevirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html:1614,Inherit,Inherit,1614,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget-members.html,1,['Inherit'],['Inherit']
Modifiability,"linevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3188,extend,extended,3188,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,2,['extend'],['extended']
Modifiability,"link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions;  DistanceMapping ();  ; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const Coord_t< In > &a, const Coord_t< In > &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:20452,inherit,inherited,20452,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,1,['inherit'],['inherited']
Modifiability,"lisionElementIterator &i);  ; const Coord & center () const;  ; const TDataTypes::Coord & rigidCenter () const;  ; const Coord & p () const;  ; const Coord & pFree () const;  ; const Coord & v () const;  ; bool hasFreePosition () const;  Return true if the element stores a free position vector. More...;  ; Real r () const;  ; sofa::type::Vec3 getContactPointByNormal (const sofa::type::Vec3 &contactNormal);  ; sofa::type::Vec3 getContactPointWithSurfacePoint (const sofa::type::Vec3 &surfacePoint);  ; SOFA_COMPONENT_COLLISION_GEOMETRY_API Vec3 getContactPointByNormal (const Vec3 &);  ; SOFA_COMPONENT_COLLISION_GEOMETRY_API Vec3 getContactPointWithSurfacePoint (const Vec3 &);  ; SOFA_COMPONENT_COLLISION_GEOMETRY_API sofa::type::Vec3 getContactPointByNormal (const sofa::type::Vec3 &);  ; SOFA_COMPONENT_COLLISION_GEOMETRY_API sofa::type::Vec3 getContactPointWithSurfacePoint (const sofa::type::Vec3 &);  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< SphereCollisionModel< TDataTypes > >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_sphere.html:1466,inherit,inherited,1466,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_sphere.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_sphere.html,1,['inherit'],['inherited']
Modifiability,"lisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< LineCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TLine() [1/3]. template<class DataTypes > . sofa::component::collision::geometry::TLine< DataTypes >::TLine ; (; ParentModel * ; model, . Index ; index . ). inline . ◆ TLine() [2/3]. template<class TDataTypes > . sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_line.html:3452,inherit,inherited,3452,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_line.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_line.html,1,['inherit'],['inherited']
Modifiability,"lisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ; int addRay (const type::Vec3 &origin, const type::Vec3 &direction, SReal length);  ; Ray getRay (int index);  ; int getNbRay () const;  ; void setNbRay (int n);  ; void applyTranslation (const double dx, const double dy, const double dz);  ; virtual void addContact (response::contact::BaseRayContact *contact);  ; virtual void removeContact (response::contact::BaseRayContact *contact);  ; virtual const std::set< response::contact::BaseRayContact * > & getContacts () const;  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:4499,inherit,inherited,4499,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,1,['inherit'],['inherited']
Modifiability,"list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< type::vector< EdgeSpring > > d_edgeSprings;  The list of edge springs, one for each edge between two triangles. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FastTriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Searches triangle topology and c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:3127,inherit,inherited,3127,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,3,['inherit'],['inherited']
Modifiability,"list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshSubsetEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:3503,inherit,inherited,3503,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['inherit'],['inherited']
Modifiability,"listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html:18254,inherit,inherited,18254,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,9,['inherit'],['inherited']
Modifiability,"ll entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path, . type::vector< std::string > & ; listLoadedPlugins . ). ◆ registerPlugin(). auto sofa::helper::system::PluginManager::registerPlugin ; (; const std::string & ; plu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7758,plugin,plugin,7758,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['plugin'],['plugin']
Modifiability,"ll members . sofa::component::collision::geometry::TPoint< TDataTypes > Class Template Reference . #include <PointModel.h>. Inheritance diagram for sofa::component::collision::geometry::TPoint< TDataTypes >:. [legend]. Public Member Functions;  TPoint (ParentModel *model, sofa::Index index);  ;  TPoint ();  ;  TPoint (const core::CollisionElementIterator &i);  ; const Coord & p () const;  ; const Coord & pFree () const;  ; const Deriv & v () const;  ; Deriv n () const;  ; bool hasFreePosition () const;  Return true if the element stores a free position vector. More...;  ; bool testLMD (const sofa::type::Vec3 &, double &, double &);  ;  Public Member Functions inherited from sofa::core::TCollisionElementIterator< PointCollisionModel< TDataTypes > >;  TCollisionElementIterator (Model *model=nullptr, Index index=0);  ;  TCollisionElementIterator (Model *model, Index index, VIterator it, VIterator itend);  ;  TCollisionElementIterator (Model *model, VIterator it, VIterator itend);  ; bool isActive (core::CollisionModel *cm=nullptr) const;  ; bool operator== (const TCollisionElementIterator< Model2 > &i) const;  ; bool operator!= (const TCollisionElementIterator< Model2 > &i) const;  ; TCollisionElementIterator & operator+= (int n);  ; TCollisionElementIterator operator+ (int n) const;  ; bool valid () const;  ; Model * getCollisionModel () const;  Return the CollisionModel containing the referenced element. More...;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getInternalChildren () const;  ; std::pair< CollisionElementIterator, CollisionElementIterator > getExternalChildren () const;  ; bool isLeaf () const;  ; bool canCollideWith (const TCollisionElementIterator< Model > &elem) const;  ; SReal getProximity () const;  Distance to the actual (visual) surface. More...;  ; SReal getContactStiffness () const;  Contact stiffness. More...;  ; SReal getContactFriction () const;  Contact friction (damping) coefficient. More...;  ; void draw (const core::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point.html:876,inherit,inherited,876,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_point.html,1,['inherit'],['inherited']
Modifiability,"lled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ GraphDataWidget(). template<class T > . sofa::gui::qt::GraphDataWidget< T >::GraphDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ numColumnWidget(). template<class T > . virtual unsigned int sofa::gui::qt::GraphDataWidget< T >::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >. ◆ sizeWidget(). template<class T > . virtual unsigned int sofa::gui::qt::GraphDataWidget< T >::sizeWidget ; (; ). inlinevirtual . Helper method to give",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html:2722,inherit,inherited,2722,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,8,['inherit'],['inherited']
Modifiability,"lled at constructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >; graph_data_widget_container< T > container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  ;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Constructor details. ◆ GraphDataWidget_Linear(). template<class T > . sofa::gui::qt::GraphDataWidget_Linear< T >::GraphDataWidget_Linear ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T > . virtual bool sofa::gui::qt::GraphDataWidget_Linear< T >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Reimplemented from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >. sofaguiqtGraphDataWidget_Linear; Generated on Mon Nov 11 2024 03:2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html:2895,inherit,inherited,2895,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,8,['inherit'],['inherited']
Modifiability,"lled at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html:1933,variab,variable,1933,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,2,['variab'],['variable']
Modifiability,"lled at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html:1933,variab,variable,1933,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,2,['variab'],['variable']
Modifiability,"lled at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html:1933,variab,variable,1933,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,2,['variab'],['variable']
Modifiability,"llision::NarrowPhaseDetection:. [legend]; Detailed Description; Given a set of potentially colliding pairs of models, compute set of contact points. . Protected Attributes; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair)=0;  Add a new potentially colliding pairs of models. More...;  ; virtual void addCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html:1285,inherit,inherited,1285,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,2,['inherit'],['inherited']
Modifiability,"llisionVisitor Class Reference . #include <CollisionVisitor.h>; Compute collision reset, detection and response in one step. ; More... Inheritance diagram for sofa::simulation::CollisionVisitor:. [legend]; Detailed Description; Compute collision reset, detection and response in one step. . Public Member Functions;  CollisionVisitor (const core::ExecParams *params);  ; virtual void fwdConstraintSet (simulation::Node *node, core::behavior::BaseConstraintSet *cSet);  ; virtual void processCollisionPipeline (simulation::Node *node, core::collision::Pipeline *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; size_t getPrimitiveTestCount () const;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::Visit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_visitor.html:1129,inherit,inherited,1129,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_visitor.html,2,['inherit'],['inherited']
Modifiability,"llisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  GLPickHandler (double defaultLength=1000000);  ; virtual ~GLPickHandler () override;  ; void allocateSelectionBuffer (int width, int height) override;  ; void destroySelectionBuffer () override;  ; common::BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction) override;  ;  Public Member Functions inherited from sofa::gui::common::PickHandler;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::PickHandler; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html:1559,inherit,inherited,1559,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,2,['inherit'],['inherited']
Modifiability,"llptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  DirectSAP ()=default;  ;  ~DirectSAP () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:10717,inherit,inherited,10717,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,1,['inherit'],['inherited']
Modifiability,"load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path, . type::vector< std::string > & ; listLoadedPlugins . ). ◆ registerPlugin(). auto sofa::helper::system::PluginManager::registerPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7839,plugin,plugin,7839,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['plugin'],['plugin']
Modifiability,"logy ();  ; virtual ~Topology ();  . Friends; class HexahedronSetTopologyModifier;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:43068,inherit,inherited,43068,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,3,['inherit'],['inherited']
Modifiability,"logy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::playback::CompareTopology Class Reference . #include <CompareTopology.h>. Inheritance diagram for sofa::component::playback::CompareTopology:. [legend]; Detailed Description; Compare Topology vectors from file at each timestep . Protected Attributes; unsigned int EdgesError;  Number of error by container. More...;  ; unsigned int TrianglesError;  ; unsigned int QuadsError;  ; unsigned int TetrahedraError;  ; unsigned int HexahedraError;  ; unsigned int TotalError;  ; std::vector< unsigned int > listError;  ;  Protected Attributes inherited from sofa::component::playback::ReadTopology; core::topology::BaseMeshTopology * m_topology;  ; std::ifstream * infile;  ; double nextTime;  ; double lastTime;  ; double loopTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CompareTopology, playback::ReadTopology);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processCompareTopology ();  Compute the total number of errors. More...;  ; unsigned int getTotalError ();  Return the total number of errors. More...;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:837,inherit,inherited,837,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,3,['inherit'],['inherited']
Modifiability,"logy. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:19961,inherit,inherited,19961,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,2,['inherit'],['inherited']
Modifiability,"logy::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; SingleLink< MeshMatrixMass< DataTypes, GeometricalTypes >, sofa::core::behavior::MechanicalState< GeometricalTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_geometryState;  Link to be set to the MechanicalObject associated with the geometry. More...;  ; Data of mass information; Mass density of the object . Data< sofa::type::vector< MassType > > d_massDensity;  ; Data< MassType > d_totalMass;  Total mass of the object. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:3299,inherit,inherited,3299,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['inherit'],['inherited']
Modifiability,"logyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void clear () override;  ; void getHexaNeighbors (const Index hexaId, type::vector< Index > &neighbors);  ; void getHexaFaceNeighbors (const Index hexaId, const Index faceId, type::vector< Index > &neighbors);  ; void getHexaVertexNeighbors (const Index hexaId, const Index vertexId, type::vector< Index > &neighbors);  ; void addTopologyChangeFine (const core::topology::TopologyChange *topologyChange);  ; void resetTopologyChangeListFine ();  ; std::list< const core::topology::TopologyChange * >::const_iterator beginChangeFine () const;  ; std::list< const core::topology::TopologyChange * >::const_iterator endChangeFine () const;  ; const std::list< const core::topology::TopologyChange * > & getChangeListFine () const;  ; int getLevel () const;  ; const Vec3i & getCoarseResolution () const;  ; bool getHexaContainsPosition (const Index hexaId, const type::Vec3 &baryC) const;  ; const Vec3i & getHexaIdxInCoarseRegularGrid (const Index hexaId) const;  ; int getHexaIdInCoarseRegularGrid (const Index hexaId) const;  ; const Vec3i & getHexaIdxInFineRegularGrid (const Index hexaId) const;  ; Index getHexaIdInFineRegularGrid (const Index hexaId) const;  ; Index getHexaChildren (const Index hexaId, type::vector< Index > &children) const;  ; Index getHexaParent (const Index hexaId) const;  ; Index getHexaInFineRegularGrid (const Vec3i &id) const;  ; const std::set< Vec3i > & getHexaVoxels (const Index hexaId) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfEle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:5310,inherit,inherited,5310,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"logyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads);  add a set of quads More...;  ; virtual void addQuads (const sofa::type::vector< Quad > &quads, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of quads More...;  ; void addQuadProcess (Quad e);  Effectively Add a quad. More...;  ; virtual void removeQuads (const sofa::type::vector< QuadID > &quadIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of quads. More...;  ; void removeItems (const sofa::type::vector< QuadID > &items) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  SOFA_CLASS (EdgeSetTopologyModifier, PointSetTopologyModifier);  ; virtual void addEdges (const sofa::type::vector< Edge > &edges);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of edges More...;  ; virtual void addEdges (const sofa::type::vector< Edge > &edges, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  add a set of edges More...;  ; void addEdgeProcess (Edge e);  Effectively add an edge. More...;  ; virtual void swapEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs);  Swap the edges. More...;  ; virtual void fuseEdgesProcess (const sofa::type::vector< sofa::type::vector< EdgeID > > &edgesPairs, const bool removeIsolatedPoints=true);  Fuse the edges. More...;  ; virtual void splitEdgesProcess (sofa::type::vector< EdgeID > &indices, const boo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:3596,inherit,inherited,3596,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['inherit'],['inherited']
Modifiability,"longation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawMaxElongationRange;  Max range of elongation (red eongation - blue neutral - green compression) More...;  ; Data< Real > d_drawSpringSize;  Size of drawed lines. More...;  ; Data< type::Vec< 2, sofa::Index > > d_localRange;  optional range of local DOF indices. Any computation involving only indices outside of this range are discarded (useful for parallelization using mesh partitioning) More...;  ; SingleLink< MeshSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) Mor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html:2136,inherit,inherited,2136,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ; SingleLink< SquareDistanceMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Static Public Attributes; static constexpr ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html:2096,inherit,inherited,2096,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,1,['inherit'],['inherited']
Modifiability,"lower, mapped) model. More...;  ; sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) override;  ; void disable () override;  ;  Public Member Functions inherited from sofa::core::BaseMapping;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:11621,inherit,inherited,11621,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,1,['inherit'],['inherited']
Modifiability,"lp, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:24663,inherit,inherited,24663,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,3,['inherit'],['inherited']
Modifiability,"ls how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  . Additional Inherited Members;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ m_data. template<class DATA , class WIDGET > . MyData* sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::m_data. protected . ◆ m_widget. template<class DATA , class WIDGET > . MyWidget* sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::m_widget. protected . Constructor details. ◆ GenericDataWidget(). template<class DATA , class WIDGET > . sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::GenericDataWidget ; (; QWidget * ; p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html:2183,inherit,inherited,2183,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,2,['inherit'],['inherited']
Modifiability,"lse);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Friends; class JointSpringForceFieldInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_infilename. template<cla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:21782,inherit,inherited,21782,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"lse);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class FixedPlaneProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_direction. template<class DataTypes > . Data<Coord> sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::d_direction. normal direction of the plane . ◆ d_dmax. template<class DataTypes > . Data<Real> sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::d_dmax. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:18968,inherit,inherited,18968,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"lse);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ constraintId. template<class DataTypes > . unsigned int sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::constraintId. ◆ contacts. template<class DataTypes > . sofa::type::vector<Contact> sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::contacts. protected . ◆ contactsStatus. template<class DataTypes > . bool* sofa::component::constraint::lagrangian::model::UnilateralLagr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:21682,inherit,inherited,21682,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"lti-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod; static void computeInverseFromPermutation (int matrixSize, const int *inPermutation, int *outInversePermutation);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html:11804,inherit,inherited,11804,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,8,['inherit'],['inherited']
Modifiability,"lti-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::Pipeline Class Referenceabstract . #include <Pipeline.h>; Pipeline component gather list of collision models and control the sequence of computations. ; More... Inheritance diagram for sofa::core::collision::Pipeline:. [legend]; Detailed Description; Pipeline component gather list of collision models and control the sequence of computations. . Protected Attributes; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersection * intersectionMethod;  ; BroadPhaseDetection * broadPhaseDetection;  ; NarrowPhaseDetection * narrowPhaseDetection;  ; ContactManager * contactManager;  ; CollisionGroupManager * groupManager;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void reset () override=0;  Reset to initial state. More...;  ; virtual void computeCollisionReset ()=0;  Remove collision response from last step. More...;  ; virtual voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html:1185,inherit,inherited,1185,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,2,['inherit'],['inherited']
Modifiability,"lude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - Topic: [SOLVED] How to figure out the available options of xml tags?. /how-to-fix-the-orientation-of-the-instrument-dof-in-geomagic-plugin; ; SOFA - Topic: [SOLVED] How to fix the orientation of the instrument dof？. /how-to-generate-msh-file; ; SOFA - Topic: [SOLVED] How to generate .msh file?. /how-to-generate-one-specific-deformation-in-two-different-mesh-resolutions; ; SOFA - Topic: [SOLVED] How to generate one specific deformation in two different mesh resolutions?. /how-to-genuinely-increase-the-friction-in-a-frictioncontact-scene; ; SOFA - Topic: How to genuinely increase the friction in a frictionContact scene?. /how-to-get-access-to-the-indices-in-a-map; ; SOFA - Topic: [SOLVED] How to get access to the indices in a Map?. /how-to-get-indices-in-fixedconstraint; ; SOFA - Topic: [SOLVED] How to get indices in FixedConstraint. /how-to-get-strain-output-in-sofa; ; SOFA - Topic: How to get Strain output in SOFA. /how-to-get-stress-strain-on-surface; ; SOFA - Topic: How to get Stress strain on surface. /how-to-get-the-3d-position-of-mouse-interaction-in-sofapython; ; SOFA - Topic: How to get the 3d position of mouse intera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:322287,plugin,plugin,322287,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"lue)sofa::gl::GLSLShader; SetFloatVector2(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector3(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector4(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFragmentShaderFileName(const std::string &fileName)sofa::gl::GLSLShaderinline; SetFragmentShaderFromString(const std::string &string)sofa::gl::GLSLShaderinline; SetInt(GLint variable, int newValue)sofa::gl::GLSLShader; SetInt2(GLint variable, int i1, int i2)sofa::gl::GLSLShader; SetInt3(GLint variable, int i1, int i2, int i3)sofa::gl::GLSLShader; SetInt4(GLint variable, int i1, int i2, int i3, int i4)sofa::gl::GLSLShader; SetIntVector(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector2(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector3(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector4(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetMatrix2(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix2x3(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix2x4(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix3(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix3x2(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix3x4(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix4(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix4x2(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix4x3(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetShaderFileName(GLint target, const std::string &fileName)sofa::gl::GLSLShader; SetShaderFromString(GLint target, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html:3303,variab,variable,3303,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,2,['variab'],['variable']
Modifiability,"lue, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Attribute details. ◆ endTime. template<class DataTypes > . Data<Real> sofa::core::behavior::ProjectiveConstraintSet< DataTypes >::endTime. The constraint stops acting after the given value. Use a negative value for infinite constraints. . Constructor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:16823,inherit,inherited,16823,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,3,['inherit'],['inherited']
Modifiability,"lue, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Pu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:18651,inherit,inherited,18651,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"lueMapper(). sofa::component::engine::transform::ROIValueMapper::~ROIValueMapper ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). void sofa::component::engine::transform::ROIValueMapper::doUpdate ; (; ). inlineoverrideprotectedvirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). void sofa::component::engine::transform::ROIValueMapper::init ; (; void ; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). void sofa::component::engine::transform::ROIValueMapper::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). inlineoverridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ parseFields(). void sofa::component::engine::transform::ROIValueMapper::parseFields ; (; const std::map< std::string, std::string * > & ; str). inlineoverridevirtual . Assign the field values stored in the given map of name -> value pairs. ; Reimplemented from sofa::core::objectmodel::Base. ◆ reinit(). void sofa::component::engine::transform::ROIValueMapper::reinit ; (; ). inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER() [1/2]. sofa::component::engine::transform::ROIValueMapper::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Index ; , . sofa::Index ;  . ). ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER() [2/2]. sofa::component::engine::transform::ROIValueMapper::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Real ; , . SReal ;  . ). ◆ SOFA_CLASS(). sofa::component::engine::transform::ROIValueMapper::SOFA_CLASS ; (; ROIValueMapper ; , . Inherited ;  . ). sofacomponentenginetransformROIValueMapper; Generated on Mon Nov 11 2024 02:44:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:18796,variab,variables,18796,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,1,['variab'],['variables']
Modifiability,"lugin &plugin, const std::string &pluginPath)sofa::helper::system::PluginManager; cleanup()sofa::helper::system::PluginManager; findPlugin(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, int maxRecursiveDepth=3)sofa::helper::system::PluginManager; getDefaultSuffix()sofa::helper::system::PluginManagerstatic; getEntryFromPlugin(const Plugin *plugin, Entry &entry)sofa::helper::system::PluginManagerinline; getInstance()sofa::helper::system::PluginManagerstatic; getPlugin(const std::string &plugin, const std::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:1558,Plugin,PluginManager,1558,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['Plugin'],['PluginManager']
Modifiability,"lugin, const std::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; removeOnPluginCleanupCa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:2122,Plugin,PluginManager,2122,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['Plugin'],['PluginManager']
Modifiability,"luginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path, . type::vector< std::string > & ; listLoadedPlugins . ). ◆ registerPlugin(). auto sofa::helper::system::PluginManager::registerPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Register a plugin. Merely an alias for loadPlugin() . ◆ removeOnPluginCleanupCallbacks(). void sofa::helper::system::PluginManager::removeOnPluginCleanupCallbacks ; (; const std::string & ; key). ◆ removeOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::removeOnPluginLoadedCallback ; (; const std::string & ; key). ◆ unloadedPlugins(). const std::unordered_set< std::string > & sofa::helper::system::PluginManager::unloadedPlugins ; (; ); const. ◆ unloadPlugin(). bool sofa::helper::system::PluginManager::unloadPlugin ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Unloads a plugin from the map Warning: a previously loaded plugin will always be in process memory. . ◆ writeToIniFile(). void sofa::helper::system::PluginManager::writeToIniFile ; (; const std::string & ; path). Enum details. ◆ PluginLoadStatus. enum sofa::helper::system::PluginManager::PluginLoadStatus : unsigned char. strong . EnumeratorSUCCESS ; ALREADY_LOADED ; PLUGIN_FILE_NOT_FOUND ; INVALID_LOADING ; MISSING_SYMBOL ; INIT_ERROR . Related details. ◆ operator<<. std::ostream& operator<< ; (; std::ostream & ; os, . const PluginManager & ; pluginManager . ). friend . ◆ operator>>. std::istream& operator>> ; (; std::istream & ; in, . PluginManager & ; pluginManager . ). friend . sofahelpersystemPluginManager; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:9552,plugin,plugin,9552,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,16,"['Plugin', 'plugin']","['PluginLoadStatus', 'PluginManager', 'plugin', 'pluginManager']"
Modifiability,"luginManagerstatic; getEntryFromPlugin(const Plugin *plugin, Entry &entry)sofa::helper::system::PluginManagerinline; getInstance()sofa::helper::system::PluginManagerstatic; getPlugin(const std::string &plugin, const std::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:1919,Plugin,PluginManager,1919,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['Plugin'],['PluginManager']
Modifiability,"lugins-leapmotion-and-sensable-phantom-omni; ; SOFA - Topic: [SOLVED] Building SOFA with both plugins: LeapMotion and Sensable (Phantom Omni). /building-sofa-with-ninja; ; SOFA - Topic: [SOLVED] Building SOFA with ninja. /building-sofa-with-windows10-and-vs2015; . /feed; ; [SOLVED] Building SOFA with Windows10 and VS2015 – SOFA. SOFA - Topic: [SOLVED] Building SOFA with Windows10 and VS2015. /building-stlib-and-integration-with-sofa-in-windows-10; ; SOFA - Topic: Building Stlib and integration with sofa in windows 10. /building-the-tutorials; ; SOFA - Topic: [SOLVED] Building the tutorials. /building-v16-08-cmake-errors; . /feed; ; [SOLVED] Building v16.08, Cmake Errors – SOFA. SOFA - Topic: [SOLVED] Building v16.08, Cmake Errors. /building-v16-08-sofa-errors-in-sensable-plugin; . /feed; ; [SOLVED] Building v16.08 sofa, errors in sensable plugin. – SOFA. SOFA - Topic: [SOLVED] Building v16.08 sofa, errors in sensable plugin. /building-vrpn-plugin-on-linux; . /feed; ; [SOLVED] Building VRPN plugin on linux – SOFA. SOFA - Topic: [SOLVED] Building VRPN plugin on linux. /build-problem-for-advancedfem-plugin; ; SOFA - Topic: [SOLVED] Build problem for AdvancedFEM plugin. /build-problem-for-pardisio-solver-plugin; ; SOFA - Topic: [SOLVED] Build problem for Pardisio solver plugin. /build-sofa; . /page; . /11; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /12; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /3; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /build-with-qt-on-macos; . /page; . /2; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. /7; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. SOFA - Topic: [SOLVED] build with Qt on MacOs. /c11-flag-added-to-c-files-compilation; . /feed; ; [SOLVED] c++11 flag added to c files compilation – SOFA. SOFA - Topic: [SOLVED] c++11 flag added to c files compilation. /cable-drive",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:267054,plugin,plugin,267054,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"lver ();  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html:12250,inherit,inherited,12250,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,2,['inherit'],['inherited']
Modifiability,"lver ();  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::LinearSolverAccessor;  LinearSolverAccessor (LinearSolver *linearSolver=nullptr);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<cla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:15598,inherit,inherited,15598,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,2,['inherit'],['inherited']
Modifiability,"lver, BaseLink::FLAG_STRONGLINK > l_linearSolver;  . Public Member Functions;  SOFA_CLASS2 (EulerImplicitSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getVelocityIntegrationFactor () const override;  ; SReal getPositionIntegrationFactor () const override;  ; virtual SReal getPositionIntegrationFactor (SReal dt) const;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative, SReal dt) const;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative, SReal dt) const;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:5839,inherit,inherited,5839,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,2,['inherit'],['inherited']
Modifiability,"ly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class FixedProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_drawSize. template<class DataTypes > . Data<SReal> sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::d_drawSize. Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) . ◆ d_fixAll. template<class DataTypes > . Data<bool> sofa::component::constraint::projective::Fix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:19485,inherit,inherited,19485,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"ly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class PlaneProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_drawSize. template<class DataTypes > . Data<SReal> sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::d_drawSize. Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) . ◆ d_indices. template<class DataTypes > . IndexSubsetData sofa::component::constraint::projectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:19358,inherit,inherited,19358,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"ly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class PointProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_drawSize. template<class DataTypes > . Data<SReal> sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::d_drawSize. Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) . ◆ d_fixAll. template<class DataTypes > . Data<bool> sofa::component::constraint::projective::Poi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:19416,inherit,inherited,19416,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"lyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  MergeVisualModels ();  ;  ~MergeVisualModels () override;  ; void update ();  ;  Protected Member Functions inherited from sofa::gl::component::rendering3d::OglModel; void internalDraw (const core::visual::VisualParams *vparams, bool transparent) override;  Rendering method. More...;  ; void drawGroup (int ig, bool transparent);  ; void drawGroups (bool transparent);  ; virtual void pushTransformMatrix (float *matrix);  ; virtual void popTransformMatrix ();  ; GLenum getGLenum (const char *c) const;  ;  OglModel ();  ;  ~OglModel () override;  ;  Protected Member Functions inherited from sofa::component::visual::VisualModelImpl;  VisualModelImpl ();  Default constructor. More...;  ;  ~VisualModelImpl () override;  Default destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:24785,inherit,inherited,24785,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,"l addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; Visitors.; virtual void executeVisitor (simulation::Visitor *, bool precomputedOrder=false);  apply an action More...;  ; virtual void propagateEvent (const core::ExecParams *params, Event *);  Propagate an event. More...;  ; Notifications for graph change listeners; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyMoveSlave (core::objectmodel::BaseObject *previousMaster, core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; virtual std::string getPathName () const;  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:9320,inherit,inherited,9320,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['inherit'],['inherited']
Modifiability,"l b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDistance;  ; double currentZNear;  ; double currentZFar;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ Camera(). sofa::component::visual::Camera::Camera ; (; ). protected . ◆ ~Camera(). sofa::component::visual::Camera::~Camera ; (; ). overrideprotected . Function details. ◆ manageEvent(). void sofa::component::visual::Camera::manageEvent ; (; core::objectmodel::Event * ; e). inlineoverridevirtual . Implements sofa::component::visual::BaseCamera. ◆ SOFA_CLASS(). sofa::component::visual::Camera::SOFA_CLASS ; (; Camera ; , . BaseCamera ;  . ). sofacomponentvisualCamera; Generated on Mon Nov 11 2024 03:10:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:19101,inherit,inherited,19101,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,1,['inherit'],['inherited']
Modifiability,"l canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:15330,inherit,inherited,15330,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,11,['inherit'],['inherited']
Modifiability,"l isTetrahedronInROI (const Tetra &t) const;  ; virtual bool isTetrahedronInStrictROI (const Tetra &t) const;  ; virtual bool isHexahedronInROI (const Hexa &t) const;  ; virtual bool isHexahedronInStrictROI (const Hexa &t) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:20395,inherit,inherited,20395,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,3,['inherit'],['inherited']
Modifiability,"m &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::Name = ""Ogden"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html:2632,config,configuration,2632,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_ogden.html,1,['config'],['configuration']
Modifiability,"m for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path, . type::vector< std::string > & ; listLoadedPlugins . ). ◆ registerPlugin(). auto sofa::helper::system::PluginManager::registerPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Register a plugin. Merely an alias for loadPlugin() . ◆ removeOnPluginCleanupCallbacks(). void sofa::helper::system::PluginManager::removeOnPluginCleanupCallbacks ; (; const std::string & ; key). ◆ removeOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::removeOnPlugin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:8199,plugin,plugin,8199,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['plugin'],['plugin']
Modifiability,"m sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >; template<class RealObject > ; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ container. template<class T , class Container = data_widget_container<T>> . Container sofa::gui::qt::SimpleDataWidget< T, Container >::container. protected . Constructor details. ◆ SimpleDataWidget(). template<class T , class Container = data_widget_container<T>> . sofa::gui::qt::SimpleDataWidget< T, Container >::SimpleDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyTData * ; d . ). inline . Function details. ◆ createWidgets(). template<class T , class Container = data_widget_container<T>> . virtual bool sofa::gui::qt::SimpleDataWidget< T, Container >::createWidgets",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:2847,inherit,inherited,2847,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,9,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"m, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down trav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:2043,inherit,inherited,2043,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['inherit'],['inherited']
Modifiability,m-a-python-script-controller; ; SOFA - Topic: [SOLVED] End simulation from a python script controller. /error-adding-plugins; ; SOFA - Topic: Error adding plugins. /error-adding-sofapython3-and-stlib-plugin; ; SOFA - Topic: Error adding SofaPython3 and STlib plugin. /error-adding-sofapython3-plugin-to-sofa-21-12; ; SOFA - Topic: Error adding SofaPython3 plugin to SOFA 21.12. /error-after-compilation-help; ; SOFA - Topic: Error after compilation.[HELP]. /error-at-building-softrobots-with-ninja; ; SOFA - Topic: [SOLVED] Error at building SoftRobots with ninja. /error-at-installing-a-newer-cmake-version; ; SOFA - Topic: [SOLVED] Error at installing a newer CMake version. /errorbuilding-sofa-20-06-version-to-add-softrobot-plugin; ; SOFA - Topic: [SOLVED] Error:Building Sofa 20.06 version to add SoftRobot plugin. /error-building-sofa-constraintresolution-h-not-found; ; SOFA - Topic: [SOLVED] Error building SOFA : ConstraintResolution.h not found. /error-building-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Error building SofaCUDA Plugin. /error-building-sofa-v-17-12-on-windows-10-in-qt-ide; ; SOFA - Topic: Error Building SOFA V.17.12 on windows 10 in Qt IDE. /error-building-sofa-with-cuda-plugin; ; SOFA - Topic: [SOLVED] Error Building SOFA with CUDA Plugin. /error-compiling-with-cuda-plugin; ; SOFA - Topic: Error compiling with CUDA plugin. /error-configure-sofa-in-cmake-gui-about-lpthreads; . /page; . /2; ; SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. SOFA - Topic: [SOLVED] Error configure SOFA in cmake-gui about lpthreads. /error-configuring-cmake-sofarosconnector; ; SOFA - Topic: Error configuring (cmake) SofaROSConnector. /error-const-type-const-idmap-without-a-user-provided-default-constructor; ; SOFA - Topic: [SOLVED] error: const type ‘const IdMap’ without a user-provided default constructor. /error-could-not-find-either-qt5-or-qt6; ; SOFA - Topic: [SOLVED] Error: Could not find either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:292625,plugin,plugin,292625,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"m2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3127,inherit,inherited,3127,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,3,['inherit'],['inherited']
Modifiability,"m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::visual::VisualManager;  ~VisualManager () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html:14015,inherit,inherited,14015,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,4,['inherit'],['inherited']
Modifiability,"m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >; MechanicalState< DataTypes > * mstate;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  Pre-construction check method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ F. template<class TDataTypes > . linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::F. protected . forces c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:18145,inherit,inherited,18145,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE3(OglAttribute, size, type, TDataTypes), core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< TDataTypes > * beginEdit ();  ; void endEdit ();  ; const type::vector< TDataTypes > & getValue () const;  ; void setValue (const type::vector< TDataTypes > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () ov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:2274,variab,variables,2274,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,1,['variab'],['variables']
Modifiability,"m_isControlPressed;  ; ColourPickingRenderCallBack colourPickingRenderCallBack;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewer; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual QWidget * getQWidget ()=0;  ; virtual QString helpString () const =0;  ; void captureEvent () override;  ; virtual void keyPressEvent (QKeyEvent *e);  ; virtual void keyReleaseEvent (QKeyEvent *e);  ; bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html:1473,config,configureViewerTab,1473,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,2,['config'],['configureViewerTab']
Modifiability,"m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglShaderVisualModel, Inherit);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void handleTopologyChange () override;  ; void computeRestPositions ();  ; void computeRestNormals ();  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer (); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:11612,inherit,inherited,11612,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,3,"['Inherit', 'inherit']","['Inherit', 'inherited']"
Modifiability,"m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(MatrixLinearSystem, TMatrix, TVector), SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector));  ; const MappingGraph & getMappingGraph () const;  ; template<Contribution c> ; auto getSharedMatrix (sofa::core::matrixaccumulator::get_component_type< c > *object, const PairMechanicalStates &pair) -> std::shared_ptr< LocalMappedMatrixType< Real > >;  ; template<Contribution c> ; auto getSharedMatrixSize (sofa::core::matrixaccumulator::get_component_type< c > *object, const PairMechanicalStates &pair) -> std::optional< type::Vec2u >;  ; template<Contribution c> ; LocalMatrixMaps< c, typename MatrixLinearSystem< TMatrix, TVector >::Real > & getLocalMatrixMap ();  ; template<Contribution c> ; const LocalMatrixMaps< c, typename MatrixLinearSystem< TMatrix, TVector >::Real > & getLocalMatrixMap () const;  ; template<core::matrixaccumulator::Contribution c> ; AssemblingMappedMatrixAccumulator< c, typename MatrixLinearSystem< TMatrix, TVector >::Real > * createLocalMappedMatrixT (sofa::core::matrixaccumulator::get_component_type< c > *object, SReal factor);  ;  Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >;  SOFA_CLASS (SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem);  ; virtual TMatrix * getSystemMatrix () const;  Return the global matrix of the linear system. More...;  ; virtual TVector * getRHSVector () const;  Return the RHS of the linear system. More...;  ; virtual TVector * getSolutionVector () const;  Return the solution of the linear system. More...;  ; linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html:7954,inherit,inherited,7954,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,1,['inherit'],['inherited']
Modifiability,"m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:4963,variab,variables,4963,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['variab'],['variables']
Modifiability,"m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void applyConstraint (sofa::core::behavior::ZeroDirichletConditi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:4985,variab,variables,4985,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['variab'],['variables']
Modifiability,"m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::State< DataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html:13959,inherit,inherited,13959,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,4,['inherit'],['inherited']
Modifiability,mage. /plugin_multithreading; . /feed; ; Plugin_Multithreading – SOFA. SOFA - Topic Tag: Plugin_Multithreading. /plugin_other; . /feed; ; Plugin_other – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_other. /3; ; SOFA - Topic Tag: Plugin_other. /4; ; SOFA - Topic Tag: Plugin_other. /5; ; SOFA - Topic Tag: Plugin_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch –,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464196,plugin,plugin,464196,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"mall displacements More...;  ; Data< sofa::type::vector< type::fixed_array< Coord, 3 > > > d_rotatedInitialElements;  Initial strain parameters (if FEM is initialised with predefine values) More...;  ; Data< sofa::type::vector< Transformation > > d_initialTransformation;  Flag activating rendering of stress directions within each triangle. More...;  ; Data< Real > d_hosfordExponant;  Fracture parameters. More...;  ; Data< Real > d_criteriaValue;  Fracturable threshold used to draw fracturable triangles. More...;  ; Data< bool > d_showStressValue;  Display parameters. More...;  ; Data< bool > d_showStressVector;  Flag activating rendering of stress directions within each triangle. More...;  ; Data< bool > d_showFracturableTriangles;  Flag activating rendering of triangles to fracture. More...;  ; Data< bool > d_computePrincipalStress;  Compute principal stress for each triangle. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:4021,inherit,inherited,4021,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,2,['inherit'],['inherited']
Modifiability,"map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SphereQuadTopology, CubeTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; Vec3 getPoint (int x, int y, int z) const override;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::CubeTopology;  SOFA_CLASS (CubeTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void setSize (int nx, int ny, int nz);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; int getNx () const;  ; int getNy () const;  ; int getNz () const;  ; void setNx (int n);  ; void setNy (int n);  ; void setNz (int n);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; int point (int x, int y, int z, Plane p=PLANE_UNKNOWN) const;  ; void setP0 (const Vec3 &val);  ; void setDx (const Vec3 &val);  ; void setDy (const Vec3 &val);  ; void setDz (const Vec3 &val);  ; void setPos (SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax);  ; const Vec3 & getP0 () const;  ; const Vec3 & getDx () const;  ; const Vec3 & getDy () const;  ; const Vec3 & getDz () const;  ; Vec3 getMin () const;  ; Vec3 getMax () const;  ; Vec3 getPoint (int i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void setSplitNormals (bool b);  ;  Public Member Functions inherited from sofa::component::topology::container::constant::MeshTopology;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modific",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html:6414,variab,variables,6414,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,1,['variab'],['variables']
Modifiability,"map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RotateTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:2418,inherit,inherited,2418,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"mass matrices . Protected Attributes; Data< VecElementMass > d_elementMasses;  Mass matrices per element (M_i) More...;  ; Data< Real > d_density;  density == volumetric mass in english (kg.m-3) More...;  ; Data< bool > d_lumpedMass;  Does it use lumped masses? More...;  ; MassVector _particleMasses;  masses per particle in order to compute gravity More...;  ; type::vector< Coord > _lumpedMasses;  masses per particle computed by lumping mass matrices More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; VecMaterialStiffness _materialsStiffnesses;  the material stiffness matrices vector More...;  ; sofa::core::objectmodel::Renamed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:1534,inherit,inherited,1534,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,3,['inherit'],['inherited']
Modifiability,"master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:14789,inherit,inherited,14789,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,10,['inherit'],['inherited']
Modifiability,"material::BoyceAndArruda< DataTypes >::Name = ""ArrudaBoyce"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlinevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . virtual Real sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ;  . ). inlinevirtual . returns the strain energy of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html:3196,config,configuration,3196,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,1,['config'],['configuration']
Modifiability,"materialdatawidget_h::VectorMaterialDataWidget::_materialDataWidget. protected . ◆ _vectorEditedMaterial. VectorMaterial sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_vectorEditedMaterial. protected . Constructor details. ◆ VectorMaterialDataWidget(). sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::VectorMaterialDataWidget ; (; QWidget * ; parent, . const char * ; name, . Data< type::vector< Material > > * ; data . ). inline . Function details. ◆ changeMaterial. void sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::changeMaterial ; (; int ; index). protectedslot . ◆ createWidgets(). bool sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::createWidgets ; (; ). virtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget. ◆ numColumnWidget(). virtual unsigned int sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::numColumnWidget ; (; ). inlinevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::readFromData ; (; ). protectedvirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::writeToData ; (; ). protectedvirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtmaterialdatawidget_hVectorMaterialDataWidget; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html:5543,config,configure,5543,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,2,['config'],['configure']
Modifiability,"matrix) override;  Compute the system matrix corresponding to . More...;  ; void addToMatrix (sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale);  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual void buildDampingMatrix (DampingMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:7338,inherit,inherited,7338,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['inherit'],['inherited']
Modifiability,"matrixMappings;  ;  Protected Attributes inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; LinearSystemData< TMatrix, TVector > m_linearSystem;  ; MappingGraph m_mappingGraph;  Relationships between the mechanical states and their associated components. More...;  ; sofa::type::vector< sofa::core::behavior::BaseForceField * > m_forceFields;  The list of force fields contributing to the matrix assembly. More...;  ; sofa::type::vector< sofa::core::behavior::BaseMass * > m_masses;  The list of masses contributing to the matrix assembly. More...;  ; sofa::type::vector< sofa::core::BaseMapping * > m_mechanicalMappings;  The list of mechanical mappings contributing to the matrix assembly. More...;  ; sofa::type::vector< sofa::core::behavior::BaseProjectiveConstraintSet * > m_projectiveConstraints;  The list of projective constraints contributing to the matrix assembly. More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseMatrixLinearSystem; Data< sofa::type::Vec2u > d_matrixSize;  Size of the linear system. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(ConstantSparsityPatternSystem, TMatrix, TVector), SOFA_TEMPLATE2(MatrixLinearSystem, TMatrix, TVector));  ; void applyProjectiveConstraints (const core::MechanicalParams *mpa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:4658,inherit,inherited,4658,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['inherit'],['inherited']
Modifiability,"matrixMappings;  ;  Protected Attributes inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; LinearSystemData< TMatrix, TVector > m_linearSystem;  ; MappingGraph m_mappingGraph;  Relationships between the mechanical states and their associated components. More...;  ; sofa::type::vector< sofa::core::behavior::BaseForceField * > m_forceFields;  The list of force fields contributing to the matrix assembly. More...;  ; sofa::type::vector< sofa::core::behavior::BaseMass * > m_masses;  The list of masses contributing to the matrix assembly. More...;  ; sofa::type::vector< sofa::core::BaseMapping * > m_mechanicalMappings;  The list of mechanical mappings contributing to the matrix assembly. More...;  ; sofa::type::vector< sofa::core::behavior::BaseProjectiveConstraintSet * > m_projectiveConstraints;  The list of projective constraints contributing to the matrix assembly. More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseMatrixLinearSystem; Data< sofa::type::Vec2u > d_matrixSize;  Size of the linear system. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(MatrixLinearSystem, TMatrix, TVector), SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector));  ; const MappingGraph & getMappingGraph () const;  ; template<Contribution ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html:5982,inherit,inherited,5982,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,1,['inherit'],['inherited']
Modifiability,"matrixaccumulator::get_component_type< c > *object, const PairMechanicalStates &pair);  ; template<Contribution c> ; void setSharedMatrix (sofa::core::matrixaccumulator::get_component_type< c > *object, const PairMechanicalStates &pair, std::shared_ptr< LocalMappedMatrixType< Real > > matrix);  ; template<Contribution c> ; sofa::type::vector< sofa::core::matrixaccumulator::get_component_type< c > * > getContributors () const;  Get the list of components contributing to the global matrix through the contribution type . More...;  ; void buildGroupsOfComponentAssociatedToMechanicalStates (std::map< PairMechanicalStates, GroupOfComponentsAssociatedToAPairOfMechanicalStates > &groups);  ; virtual BaseMatrixProjectionMethod< LocalMappedMatrixType< Real > >::SPtr createMatrixMapping (const PairMechanicalStates &pair);  ; BaseMatrixProjectionMethod< LocalMappedMatrixType< Real > > * findProjectionMethod (const PairMechanicalStates &pair);  ; void assemblePrecomputedMappedMassMatrix (const core::MechanicalParams *mparams, linearalgebra::BaseMatrix *destination);  ; void recomputeMappedMassMatrix (const core::MechanicalParams *mparams, BaseMass *mass);  ;  Protected Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; void preAssembleSystem (const core::MechanicalParams *) override;  ; virtual void allocateSystem ();  ; virtual void resizeVectors (sofa::Size n);  Set the size of RHS and solution to n. More...;  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, TVector *globalVector);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  BaseMatrixLinearSystem ();  ; virtual void postAssembleSystem (const core::MechanicalParams *); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:21935,inherit,inherited,21935,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['inherit'],['inherited']
Modifiability,"mber Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:8076,inherit,inherited,8076,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,5,['inherit'],['inherited']
Modifiability,"mber Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:16511,inherit,inherited,16511,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,2,['inherit'],['inherited']
Modifiability,"mber Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html:18919,inherit,inherited,18919,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,4,['inherit'],['inherited']
Modifiability,"mber Functions inherited from sofa::core::objectmodel::BaseContext;  BaseContext ();  ;  ~BaseContext () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseContext; static BaseContext * getDefault ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ animate_. Data<bool> sofa::core::objectmodel::Context::animate_. Animate the Simulation(applied at initialization only) . ◆ d_canChangeSleepingState. Data<bool> sofa::core::objectmodel::Context::d_canChangeSleepingState. The no",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:17315,inherit,inherited,17315,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,2,['inherit'],['inherited']
Modifiability,"mber Functions |; List of all members . sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference . #include <SuturePointPerformer.h>. Inheritance diagram for sofa::gui::component::performer::SuturePointPerformer< DataTypes >:. [legend]. Protected Attributes; bool first;  ; unsigned int fixedIndex;  ; sofa::type::vector< Spring > addedSprings;  ; BodyPicked firstPicked;  ; SpringObjectType * SpringObject;  ; FixObjectType * FixObject;  ;  Protected Attributes inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; double stiffness;  ; double damping;  . Public Member Functions;  SuturePointPerformer (BaseMouseInteractor *i);  ;  ~SuturePointPerformer ();  ; void start ();  ; void execute ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; void setStiffness (double f);  ; void setDamping (double f);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html:1003,inherit,inherited,1003,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,6,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"mber Functions |; Protected Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes > Class Template Reference . #include <UnilateralLagrangianConstraint.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >:. [legend]. Classes; struct  Contact;  . Public Attributes; unsigned int constraintId;  ;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:1267,inherit,inherited,1267,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"mber Functions;  SOFA_CLASS (CollisionResponse, sofa::core::collision::ContactManager);  ; void createContacts (const DetectionOutputMap &outputs) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void reset () override;  Reset to initial state. More...;  ; void cleanup () override;  ; virtual std::string getContactResponse (core::CollisionModel *model1, core::CollisionModel *model2) override;  ; void removeContacts (const ContactVector &) override;  virtual methods used for cleaning the pipeline after a dynamic graph node deletion. More...;  ; void setDefaultResponseType (const std::string &responseT);  ; std::string getDefaultResponseType () const;  ;  Public Member Functions inherited from sofa::core::collision::ContactManager;  SOFA_ABSTRACT_CLASS (ContactManager, CollisionAlgorithm);  ; virtual const ContactVector & getContacts ();  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:4278,inherit,inherited,4278,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['inherit'],['inherited']
Modifiability,mbers . sofa::core::topology::EdgesRemoved Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::EdgesRemoved:. [legend]; Detailed Description; indicates that some edges are about to be removed . Public Attributes; sofa::type::vector< Topology::EdgeID > removedEdgesArray;  . Public Member Functions;  EdgesRemoved (const sofa::type::vector< Topology::EdgeID > _eArray);  ;  ~EdgesRemoved () override;  ; virtual const sofa::type::vector< Topology::EdgeID > & getArray () const;  ; virtual std::size_t getNbRemovedEdges () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ removedEdgesArray. sofa::type::vector<Topology::EdgeID> sofa::core::topology::EdgesRemoved::removedEdgesArray. Constructor details. ◆ EdgesRemoved(). sofa::core::topology::EdgesRemoved::EdgesRemoved ; (; const sofa::type::vector< Topology::EdgeID > ; _eArray). inline . ◆ ~EdgesRemoved(). sofa::core::topology::EdgesRemoved::~EdgesRemoved ; (; ). override . Function details. ◆ getArray(). virtual const sofa::type::vector<Topology::EdgeID>& sofa::core::topology::EdgesRemoved::getArray ; (; ); const. inlinevirtual . ◆ getNbRemovedEdges(). virtual std::size_t sofa::core::topology::EdgesRemoved::getNbRemovedEdges ; (; ); const. inlinevirtual . sofacoretopologyEdgesRemoved; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html:1332,inherit,inherited,1332,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_removed.html,1,['inherit'],['inherited']
Modifiability,"mbers;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html:12413,inherit,inherited,12413,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,1,['inherit'],['inherited']
Modifiability,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:21327,variab,variables,21327,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,2,['variab'],['variables']
Modifiability,"me () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:14131,variab,variables,14131,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,284,['variab'],['variables']
Modifiability,"me of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:4774,inherit,inherited,4774,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,2,['inherit'],['inherited']
Modifiability,"me of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (StringMeshCreator, sofa::core::loader::MeshLoader);  ; virtual std::string type ();  ; bool canLoad () override;  ; bool doLoad () override;  create the string More...;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html:5281,inherit,inherited,5281,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,1,['inherit'],['inherited']
Modifiability,"me step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  . Protected Attributes; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener * > listener;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  . Public Member Functions;  SOFA_ABSTRACT_CLASS2 (Node, BaseNode, Context);  ; virtual Node::SPtr createChild (const std::string &nodeName)=0;  Create, add, then return the new child of this Node. More...;  ; virtual void removeControllers ();  Remove odesolvers and mastercontroler. More...;  ; Node * getChild (const std::string &name) const;  Find a child node given its name. More...;  ; Node * getTreeNode (const std::string &name) const;  Get a descendant node given its name. More...;  ; Node * getNodeInGraph (const std::string &absolutePath) const;  Get a node in the scene graph matching the given absolute path. More...;  ; Children getChildren () const override;  Get children nodes. More...;  ; BaseContext * getRootContext () const override;  Get the root context of the graph. More...;  ; Node * setDebug (bool);  ; bool getDebug () const;  ; void printComponents ();  ; const BaseContext * getContext () const override;  Get th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:4572,inherit,inherited,4572,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,2,['inherit'],['inherited']
Modifiability,"me(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(ConstraintAttachButtonSetting, MouseButtonSetting)sofa::gui::component::ConstraintAttachButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa::core::objectmodel::ConfigurationSettingprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html:10132,Config,ConfigurationSetting,10132,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting-members.html,3,['Config'],"['ConfigurationSetting', 'ConfigurationSettingprotected']"
Modifiability,"me. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RequiredPlugin, core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadPlugin ();  load a list of plugins requested in Data More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:2955,inherit,inherited,2955,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['inherit'],['inherited']
Modifiability,"mechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >. ◆ initTextures(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::initTextures ; (; ). inlinevirtual . ◆ integrateMass(). template<class DataTypes > . HexahedronFEMForceFieldAndMass< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::integrateMass ; (; int ; signx, . int ; signy, . int ; signz, . Real ; l0, . Real ; l1, . Real ; l2 . ). ◆ isDiagonal(). template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::isDiagonal ; (; ); const. inlineoverridevirtual . Implements sofa::core::behavior::BaseMass. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >. ◆ setDensity(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::setDensity ; (; Real ; d). inline . ◆ SOFA_CLASS2(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::SOFA_CLASS2 ; (; SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes) ; , . SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes) ;  . ). ◆ update(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::elastic:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:40272,variab,variables,40272,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['variab'],['variables']
Modifiability,"medData< VecCoord > f_fiberCenter;  ; sofa::core::objectmodel::RenamedData< bool > showFiber;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< TriangleFiberDirection > > localFiberDirection;  ; Data< type::vector< Real > > f_poisson2;  ; Data< type::vector< Real > > d_young2;  Young modulus along transverse direction. More...;  ; Data< Real > d_theta;  Fiber angle in global reference frame (in degrees) More...;  ; Data< VecCoord > d_fiberCenter;  Concentric fiber center in global reference frame. More...;  ; Data< bool > d_showFiber;  Flag activating rendering of fiber directions within each triangle. More...;  ; core::topology::TriangleData< sofa::type::vector< TriangleFiberDirection > > d_localFiberDirection;  Computed fibers direction within each triangle. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; sofa::core::objectmodel::RenamedData< sofa::type::vector< TriangleInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< VertexInformation > > vertexInfo;  ; core::topology::TriangleData< sofa::type::vector< TriangleInformation > > d_triangleInfo;  Topology Data. More...;  ; core::topology::PointData< sofa::type::vector< VertexInformation > > d_vertexInfo;  Internal point data. More...;  ; int method;  Forcefield intern parameters. More...;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_poisson;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_young;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< type::fixed_array< Coord, 3 > > > m_rotatedInitialElements;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Transformation > > m_initialTransformation;  ; sofa::core::objectmodel::RenamedData< Real > hosfordExponant;  ; sofa::core::objectmodel::RenamedData< Real > criteriaValue;  ; sofa::core::objectmodel::RenamedData<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:1602,inherit,inherited,1602,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"members . sofa::gl::component::shader::OglFloatVector2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector2Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector2Variable, OglVariable< type::vector< type::Vec2f > >);  ;  OglFloatVector2Variable ();  ; virtual ~OglFloatVector2Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec2f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html:1236,variab,variables,1236,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,2,['variab'],['variables']
Modifiability,"members . sofa::gl::component::shader::OglFloatVector3Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector3Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector3Variable, OglVariable< type::vector< type::Vec3f > >);  ;  OglFloatVector3Variable ();  ; virtual ~OglFloatVector3Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec3f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html:1236,variab,variables,1236,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,2,['variab'],['variables']
Modifiability,"members . sofa::gl::component::shader::OglFloatVector4Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglFloatVector4Variable:. [legend]. Public Member Functions;  SOFA_CLASS (OglFloatVector4Variable, OglVariable< type::vector< type::Vec4f > >);  ;  OglFloatVector4Variable ();  ; virtual ~OglFloatVector4Variable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Vec4f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html:1236,variab,variables,1236,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,2,['variab'],['variables']
Modifiability,"mentation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglUInt2Attribute(). sofa::gl::component::shader::OglUInt2Attribute::OglUInt2Attribute ; (; ). inline . ◆ ~OglUInt2Attribute(). virtual sofa::gl::component::shader::OglUInt2Attribute::~OglUInt2Attribute ; (; ). inlinevirtual . Function details. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglUInt2Attribute::SOFA_CLASS ; (; OglUInt2Attribute ; , . SOFA_TEMPLATE3(OglAttribute, 2, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 2, unsigned int)) ;  . ). sofaglcomponentshaderOglUInt2Attribute; Generated on Mon Nov 11 2024 03:19:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html:17564,inherit,inherited,17564,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,2,['inherit'],['inherited']
Modifiability,"mentation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglUInt3Attribute(). sofa::gl::component::shader::OglUInt3Attribute::OglUInt3Attribute ; (; ). inline . ◆ ~OglUInt3Attribute(). virtual sofa::gl::component::shader::OglUInt3Attribute::~OglUInt3Attribute ; (; ). inlinevirtual . Function details. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglUInt3Attribute::SOFA_CLASS ; (; OglUInt3Attribute ; , . SOFA_TEMPLATE3(OglAttribute, 3, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 3, unsigned int)) ;  . ). sofaglcomponentshaderOglUInt3Attribute; Generated on Mon Nov 11 2024 03:19:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html:17564,inherit,inherited,17564,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,2,['inherit'],['inherited']
Modifiability,"mentation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglUInt4Attribute(). sofa::gl::component::shader::OglUInt4Attribute::OglUInt4Attribute ; (; ). inline . ◆ ~OglUInt4Attribute(). virtual sofa::gl::component::shader::OglUInt4Attribute::~OglUInt4Attribute ; (; ). inlinevirtual . Function details. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglUInt4Attribute::SOFA_CLASS ; (; OglUInt4Attribute ; , . SOFA_TEMPLATE3(OglAttribute, 4, GL_UNSIGNED_INT, SOFA_TEMPLATE2(sofa::type::Vec, 4, unsigned int)) ;  . ). sofaglcomponentshaderOglUInt4Attribute; Generated on Mon Nov 11 2024 03:19:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html:17564,inherit,inherited,17564,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,2,['inherit'],['inherited']
Modifiability,"ments sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::select::PlaneROI< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::select::PlaneROI< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isEdgeInPlane(). template<class DataTypes > . bool sofa::component::engine::select::PlaneROI< DataTypes >::isEdgeInPlane ; (; const Edge & ; e). protected . ◆ isPointInPlane() [1/2]. template<class DataTypes > . bool sofa::component::engine::select::PlaneROI< DataTypes >::isPointInPlane ; (; const CPos & ; p). protected . ◆ isPointInPlane() [2/2]. template<class DataTypes > . bool sofa::component::engine::select::PlaneROI< DataTypes >::isPointInPlane ; (; const PointID & ; pid). protected . ◆ isTetrahedronInPlane(). template<class DataTypes > . bool sofa::component::engine::select::PlaneROI< DataTypes >::isTetrahedronInPlane ; (; const Tetra & ; t). protected . ◆ isTriangleInPlane(). template<class DataTypes > . bool sofa::component::engine::select::PlaneROI< DataTypes >::isTriangleInPlane ; (; const Triangle & ; t). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::PlaneROI< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::select::PlaneROI< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PlaneROI< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentengineselectPlaneROI; Generated on Mon Nov 11 2024 02:41:26 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html:24869,variab,variables,24869,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,1,['variab'],['variables']
Modifiability,"ments. The material properties are uniform across the domain. Two methods are proposed, one for small displacements and one for large displacements. The method for small displacements has not been validated and we suspect that it is broke. Use it very carefully, and compare with the method for large displacements. . Public Attributes; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poisson;  ; sofa::core::objectmodel::RenamedData< Real > f_young;  ; sofa::core::objectmodel::RenamedData< Real > f_thickness;  ; sofa::core::objectmodel::RenamedData< bool > f_planeStrain;  ; Data< std::string > d_method;  large: large displacements, small: small displacements More...;  ; Data< Real > d_thickness;  Thickness of the elements. More...;  ; Data< bool > d_planeStrain;  Plane strain or plane stress assumption. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html:1842,inherit,inherited,1842,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"ments.; Then, at each propagation of topological changes, it translates the topological change events that are propagated from the INPUT topology into specific actions that call element adding or element removal methods on the OUTPUT topology, and it updates the Index Maps.; So, at each time step, the geometrical and adjacency information are consistent in both topologies. . Public Attributes; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:1960,inherit,inherited,1960,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,"mer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::FixParticlePerformerConfiguration; void setStiffness (SReal s);  . Static Public Member Functions; static MapTypeFunction * getMapInstance ();  ; template<typename TCollisionModel > ; static int RegisterSupportedModel (GetFixationPointsOnModelFunction func);  ; template<typename TTriangleCollisionModel > ; static void getFixationPointsTriangle (sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint);  ; static void getFixationPointsSphere (sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Protected Member Functions; MouseContainer * getFixationPoints (const BodyPicked &b, type::vector< unsigned int > &points, typename DataTypes::Coord &fixPoint);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Attribute details. ◆ fixations. template<class DataTypes > . std::vector< simulation::Node * > sofa::gui::component::performer::FixParticlePerformer< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html:2466,inherit,inherited,2466,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,4,['inherit'],['inherited']
Modifiability,"messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  ;  Protected Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; SparseMatrixEigen m_jacobian;  Jacobian of the mapping. More...;  ;  Protected Attributes inherited from sofa::core::Mapping< TIn, TOut >; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:19338,inherit,inherited,19338,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['inherit'],['inherited']
Modifiability,"messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 dx;  Distance between points in the grid. Must be perpendicular to each other. More...;  ; type::Vec3 dy;  ; type::Vec3 dz;  ; SReal inv_dx2;  Inverse value of dx, dy and dz. More...;  ; SReal inv_dy2;  ; SReal inv_dz2;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::MeshTopology; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; type::vector< EdgesAroundVertex > m_orientedEdgesAroundVertex;  ; type::vector< EdgesInTriangle > m_edgesInTriangle;  ; type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad More...;  ; type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set of edges for each tetrahedron More...;  ; type::vector< EdgesInHexahedron > m_edgesInHexahedron;  provides the set of edges for each hexahedron More...;  ; type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex More...;  ; type::vector< TrianglesAroundVertex > m_orientedTrianglesAroundVertex;  for each vertex provides the set of oriented triangles adjacent to that vertex More...;  ; type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge More...;  ; type::vector< TrianglesInTetrahedron > m_trianglesInTetrahedron;  provides the se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html:4842,inherit,inherited,4842,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"meters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:6710,inherit,inherited,6710,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,2,['inherit'],['inherited']
Modifiability,"method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglIntVectorVariable;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:1655,variab,variable,1655,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,6,['variab'],['variable']
Modifiability,"method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; virtual bool load (const char *filename);  ; void clear ();  ;  Public Member Functions inherited from sofa::component::io::mesh::MeshOffLoader;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:1627,variab,variables,1627,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['variab'],['variables']
Modifiability,"method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:11601,inherit,inherited,11601,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,6,['inherit'],['inherited']
Modifiability,"mical-model-in-sofa; ; SOFA - Topic: Fish eye cameras and anatomical model in SOFA. /fixedconstraint-not-fixed; . /feed; ; [SOLVED] FixedConstraint not fixed – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] FixedConstraint not fixed. /5; ; SOFA - Topic: [SOLVED] FixedConstraint not fixed. SOFA - Topic: [SOLVED] FixedConstraint not fixed. /fixedconstraint-not-working-with-model-order-reduction; ; SOFA - Topic: FixedConstraint Not working with Model Order Reduction. /fixed-constraints-not-so-fixed-with-genericconstraintsolver; ; SOFA - Topic: [SOLVED] Fixed constraints not so fixed with GenericConstraintSolver. /fixedrotationconstraint-and-linearmovementconstraint-not-working; ; SOFA - Topic: [SOLVED] FixedRotationConstraint and LinearMovementConstraint not working. /fixing-collision-for-a-static-floor; ; SOFA - Topic: [SOLVED] Fixing Collision for a static floor. /flexible-plugin-fails-to-compile-in-v17-12; ; SOFA - Topic: [SOLVED] Flexible plugin fails to compile in v17.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:305375,flexible,flexible-plugin-or-core,305375,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['flexible'],['flexible-plugin-or-core']
Modifiability,"mization Tips. /sofa-installation; . /page; . /13; ; SOFA - Topic: [SOLVED] SOFA installation. /14; ; SOFA - Topic: [SOLVED] SOFA installation. /4; ; SOFA - Topic: [SOLVED] SOFA installation. SOFA - Topic: [SOLVED] SOFA installation. /sofa-in-your-browser; . /page; . /11; ; SOFA - Topic: SOFA in your browser !. /14; ; SOFA - Topic: SOFA in your browser !. /4; ; SOFA - Topic: SOFA in your browser !. SOFA - Topic: SOFA in your browser !. /sofa-launcher-and-modelorderreduction-problems; ; SOFA - Topic: sofa-launcher and modelOrderReduction problems. /sofa-libraries-headers-files-on-different-versions; ; SOFA - Topic: SOFA libraries/headers/files on different versions. /sofa-needs-your-support; ; SOFA - Topic: SOFA needs your support. /sofaphysicsapi-improvementsbackward-compatibility; ; SOFA - Topic: SofaPhysicsAPI improvements/backward compatibility. /sofapluginmanager-h-building; ; SOFA - Topic: [SOLVED] SofaPluginManager.h (building). /sofa-plugin-with-some-additional-libraries; ; SOFA - Topic: SOFA plugin with some additional libraries. /sofapython; . /feed; ; [SOLVED] sofa+python – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] sofa+python. /5; ; SOFA - Topic: [SOLVED] sofa+python. /7; ; SOFA - Topic: [SOLVED] sofa+python. SOFA - Topic: [SOLVED] sofa+python. /sofapython3-compatibility-with-sofapython-and-other-plugins; ; SOFA - Topic: SofaPython3 – Compatibility with SofaPython and other plugins. /sofapython3-controllers-documentation; ; SOFA - Topic: SofaPython3 controllers documentation. /sofapython3-getobjects; ; SOFA - Topic: [SOLVED] SofaPython3 getObjects. /sofapython3-install-fatal-error-filesystem; ; SOFA - Topic: [SOLVED] SofaPython3 Install, fatal error: filesystem. /sofapython3-module-not-found; ; SOFA - Topic: [SOLVED] SofaPython3 module not found. /sofapython3-on-win-11; ; SOFA - Topic: [SOLVED] SofaPython3 on Win 11. /sofapython3-pygame-rendering-example-not-working; ; SOFA - Topic: [SOLVED] SofaPython3 pygame rendering example not working. /sofapython3-",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:393532,plugin,plugin-with-some-additional-libraries,393532,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-with-some-additional-libraries']"
Modifiability,"mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ constraintId. template<class DataTypes > . unsigned int sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::constraintId. ◆ contacts. template<class DataTypes > . sofa::type::vector<Contact> sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::contacts. protected . ◆ contactsStatus. template<class DataTypes > . bool* sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::contactsStatus. protected . ◆ customTolerance. template<class DataTypes > . SReal sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::customTolerance. protected . ◆ epsilon. template<class DataTypes > . Real sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::epsilon. protected . ◆ prev",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:22082,inherit,inherited,22082,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"mmunicate with the GUI; Do one step of the GUI loop . virtual void stepMainLoop ();  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  ; virtual void showFPS (double);  Force the displayed FPS value (if any) More...;  . Static Public Member Functions; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Attribute details. ◆ configDirectoryPath. std::string sofa::gui::common::BaseGUI::configDirectoryPath = ""."". staticprotected . ◆ mArgumentParser. ArgumentParser * sofa::gui::common::BaseGUI::mArgumentParser = nullptr. staticprotected . ◆ mGuiName. std::string sofa::gui::common::BaseGUI::mGuiName = """". staticprotected . ◆ mProgramName. const char * sofa::gui::common::BaseGUI::mProgramName = nullptr. staticprotected . ◆ screenshotDirectoryPath. std::string sofa::gui::common::BaseGUI::screenshotDirectoryPath = ""."". staticprotected . Constructor details. ◆ BaseGUI(). sofa::gui::common::BaseGUI::BaseGUI ; (; ). protected . ◆ ~BaseGUI(). sofa::gui::common::BaseGUI::~BaseGUI ; (; ). protectedvirtual . The destructor should not be called directly. Use the closeGUI() method instead. . Function details. ◆ canBeDefaultGUI(). virtual bool sofa::gui::common::BaseGUI::canBeDefaultGUI ; (; ); const. inlinevirtual . If the function returns true: when the GUI is created, its name will be saved so that it will be created when no GUI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html:3253,config,configDirectoryPath,3253,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,2,['config'],['configDirectoryPath']
Modifiability,"model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  . Protected Member Functions;  OglOITShader ();  ;  ~OglOITShader () override;  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglShader;  OglShader ();  ;  ~OglShader () override;  ;  Protected Member Functions inherited from sofa::core::visual::Shader;  Shader ();  ;  ~Shader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:15257,inherit,inherited,15257,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,2,['inherit'],['inherited']
Modifiability,"model::Base *, std::string > names;  None names in output. More...;  ; std::map< std::string, int > nextIndex;  Next indice available for duplicated names. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportDotVisitor (const sofa::core::ExecParams *params, std::ostream *out);  ;  ~ExportDotVisitor () override;  ; void processObject (Node *node, core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html:2268,inherit,inherited,2268,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,2,['inherit'],['inherited']
Modifiability,"model::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddFrameButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overridesofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html:10104,Config,ConfigurationSetting,10104,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting-members.html,1,['Config'],['ConfigurationSetting']
Modifiability,"model::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingTopDown ()=0;  Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputToOutputModel ();  Return true if this mapping is able to propagate topological changes from input to output model. More...;  ; virtual bool propagateFromOutputToInputModel ();  Return true if this mapping is able to propagate topological changes from output to input model. More...;  ; virtual bool isTheOutputTopologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; virtual Index getFromIndex (Index ind);  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:4375,adapt,adapt,4375,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['adapt'],['adapt']
Modifiability,"model::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:21760,inherit,inherited,21760,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,3,['inherit'],['inherited']
Modifiability,"model::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  TopologicalChangeProcessor ();  ;  ~TopologicalChangeProcessor () override;  ; std::vector< SReal > getValuesInLine (std::string line, size_t nbElements);  ; void findElementIndex (type::Vec3 coord, Index &triangleIndex, Index oldTriangleIndex);  ; void saveIndices ();  ; void inciseWithSavedIndices ();  ; Index findIndexInListOfTime (SReal time);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html:16001,inherit,inherited,16001,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,1,['inherit'],['inherited']
Modifiability,"model::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ m_colorPicker. QRGBAColorPicker* sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget::m_colorPicker. protected . ◆ m_nameEdit. QLineEdit* sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget::m_nameEdit. protected . Constructor details. ◆ RGBAColorDataWidget(). sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget::RGBAColorDataWidget ; (; QWidget * ; parent, . const char * ; name, . Data< RGBAColor > * ; data . ). inline . Function details. ◆ createWidgets(). bool sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget::createWidgets ; (; ). virtual . The implementation of ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html:2609,inherit,inherited,2609,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,9,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"model::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MapIndices, T), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; template<class V > ; void applyIndex (V &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:2822,inherit,inherited,2822,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['inherit'],['inherited']
Modifiability,"model::RenamedData< Vec3Real > m_rotation;  ; sofa::core::objectmodel::RenamedData< Vec3Real > m_scale;  ; sofa::core::objectmodel::RenamedData< TexCoord > m_scaleTex;  ; sofa::core::objectmodel::RenamedData< TexCoord > m_translationTex;  ; Data< Vec3Real > d_translation;  Initial Translation of the object. More...;  ; Data< Vec3Real > d_rotation;  Initial Rotation of the object. More...;  ; Data< Vec3Real > d_scale;  Initial Scale of the object. More...;  ; Data< TexCoord > d_scaleTex;  Scale of the texture. More...;  ; Data< TexCoord > d_translationTex;  Translation of the texture. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:6243,inherit,inherited,6243,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,4,['inherit'],['inherited']
Modifiability,"model::RenamedData< bool > f_computeDistance;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_restLengths;  ; Data< bool > d_computeDistance;  if 'computeDistance = true', then rest length of each element equal 0, otherwise rest length is the initial length of each of them More...;  ; Data< type::vector< Real > > d_restLengths;  Rest lengths of the connections. More...;  ; Data< Real > d_showObjectScale;  Scale for object display. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ; Data< type::vector< type::Vec2i > > d_indexPairs;  list of couples (parent index + index in the parent) More...;  ; SingleLink< DistanceMultiMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::MultiMapping< TIn, TOut >; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::Bo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:2179,inherit,inherited,2179,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,1,['inherit'],['inherited']
Modifiability,"model::lifecycle::DeprecatedData d_applyPermutation;  ; Data< int > d_L_nnz;  Number of non-zero values in the lower triangular matrix of the factorization. The lower, the faster the system is solved. More...;  ; type::vector< Real > Tmp;  ; type::vector< Real > Y;  ; type::vector< int > Lnz;  ; type::vector< int > Flag;  ; type::vector< int > Pattern;  ; type::vector< int > tran_countvec;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(SparseLDLSolver, TMatrix, TVector, TThreadManager), SOFA_TEMPLATE3(SparseLDLSolverImpl, TMatrix, TVector, TThreadManager));  ; void init () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  ; void solve (Matrix &M, Vector &x, Vector &b) override;  ; void invert (Matrix &M) override;  ; bool doAddJMInvJtLocal (ResMatrixType *result, const JMatrixType *J, SReal fact, InvertData *data);  ; bool addJMInvJtLocal (TMatrix *M, ResMatrixType *result, const JMatrixType *J, SReal fact) override;  ; MatrixInvertData * createInvertData () override;  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::SparseLDLSolverImpl< TMatrix, TVector, NoThreadManager >;  SOFA_CLASS (SOFA_TEMPLATE3(SparseLDLSolverImpl, TMatrix, TVector, NoThreadManager),);  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< TBase >;  SOFA_CLASS (OrderingMethodAccessor, TBase);  ;  OrderingMethodAccessor ();  ;  ~OrderingMethodAccessor () override=default;  ; void init () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  . Protected Member Functions;  SparseLDLSolver ();  ; bool factorize (Matrix &M, InvertData *invertData);  ; void showInvalidSystemMessage (const std::string &reason) const;  ;  Protected Member Functions inherited from sofa::component::linearsolver::direct::SparseLDLSolverImpl< TMatrix, TVector, NoThreadManager >;  SparseLDLSolverImpl ();  ; void solve_cpu (Real *x, const Real *b, SparseLDLIm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_sparse_l_d_l_solver.html:2495,inherit,inherited,2495,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_sparse_l_d_l_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_sparse_l_d_l_solver.html,2,['inherit'],['inherited']
Modifiability,"modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 2, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 2, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 2, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html:2011,variab,variable,2011,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,2,['variab'],['variable']
Modifiability,"modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 3, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 3, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 3, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html:2011,variab,variable,2011,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,2,['variab'],['variable']
Modifiability,"modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< sofa::type::Vec< 4, unsigned int > > * beginEdit ();  ; void endEdit ();  ; const type::vector< sofa::type::Vec< 4, unsigned int > > & getValue () const;  ; void setValue (const type::vector< sofa::type::Vec< 4, unsigned int > > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html:2011,variab,variable,2011,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,2,['variab'],['variable']
Modifiability,"modulus);  ; void setPoissonRatio (const Real ratio);  ; void includeAngularSprings (const bool useAngularSprings);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateLameCoefficients ();  compute lambda and mu based on the Young modulus and Poisson ratio More...;  ; void applyEdgeCreation (Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &edge, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs);  ; void applyTriangleCreation (Index triangleIndex, TriangleRestInformation &tinfo, const core::topology::BaseMeshTopology::Triangle &triangle, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs);  ; void applyTriangleDestruction (Index triangleIndex, TriangleRestInformation &tinfo);  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html:5057,inherit,inherited,5057,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,1,['inherit'],['inherited']
Modifiability,"mong (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CylinderGridTopology, GridTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; Vec3 getPointInGrid (int i, int j, int k) const override;  Overload method of. More...;  ; void setCenter (SReal x, SReal y, SReal z);  Set Cylinder grid center by. More...;  ; void setAxis (SReal x, SReal y, SReal z);  Set Cylinder axis center by. More...;  ; void setRadius (SReal radius);  Set Cylinder radius from. More...;  ; void setLength (SReal length);  Set Cylinder length from. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::grid::GridTopology;  SOFA_CLASS (GridTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3i, sofa::type::Vec3i);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void init () override;  BaseObject method should be overwritten by children. More...;  ; void reinit () override;  BaseObject method should be overwritten by children. More...;  ; void setSize (int nx, int ny, int nz);  Set grid resolution in the 3 directions. More...;  ; void setSize (type::Vec3i nXnYnZ);  Set grid resolution in the 3 directions, similar to. More...;  ; void setNx (int value);  Set grid X resolution,. More...;  ; void setNy (int value);  Set grid Y resolution,. More...;  ; void setNz (int value);  Set grid Z resolution,. More...;  ; int getNx () const;  Get X grid resolution,. More...;  ; int getNy () const;  Get Y grid resolution,. More...;  ; int getNz () const;  Get Z grid resolution,. More...;  ; Index getIndex (int i, int j, int k) const;  Get the one-dimensional index of a grid point given its. More...;  ; bool hasPos () cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html:5114,inherit,inherited,5114,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,1,['inherit'],['inherited']
Modifiability,"moryManager > >inline; begin()sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; clear()sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; const_iterator typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; const_reference typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; container_type typedefsofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; empty() constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; end() constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; end()sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; Index typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; Inherit typedefsofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; iterator typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; operator()(Index i) constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; operator()(Index i)sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; operator[](Index i) constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; operator[](Index i)sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; push_back(const_reference v)sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; ref() constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; reference typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_0a4a7b5a5eb0691d99c49ad8c448db38c.html:1439,Inherit,Inherit,1439,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_0a4a7b5a5eb0691d99c49ad8c448db38c.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_0a4a7b5a5eb0691d99c49ad8c448db38c.html,1,['Inherit'],['Inherit']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:14175,inherit,inherited,14175,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  AffineMovementProjectiveConstraint ();  ; virtual ~AffineMovementProjectiveConstraint ();  ; void projectResponseImpl (VecDeriv &dx);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:17364,inherit,inherited,17364,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  LinearMovementProjectiveConstraint ();  ;  ~LinearMovementProjectiveConstraint () override;  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if<!std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:17220,inherit,inherited,17220,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  LinearVelocityProjectiveConstraint ();  ; virtual ~LinearVelocityProjectiveConstraint ();  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~Stat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:14712,inherit,inherited,14712,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  PartialLinearMovementProjectiveConstraint ();  ;  ~PartialLinearMovementProjectiveConstraint () override;  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if<!std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:19256,inherit,inherited,19256,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  PatchTestMovementProjectiveConstraint ();  ; virtual ~PatchTestMovementProjectiveConstraint ();  ; void projectResponseImpl (VecDeriv &dx);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:16897,inherit,inherited,16897,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  SkeletalMotionProjectiveConstraint ();  ; virtual ~SkeletalMotionProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~Proje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html:15063,inherit,inherited,15063,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"moveData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:12604,inherit,inherited,12604,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,1,['inherit'],['inherited']
Modifiability,"moveInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  MergeVisualModels ();  ;  ~MergeVisualModels () override;  ; void update ();  ;  Protected Member Functions inherited from sofa::gl::component::rendering3d::OglModel; void internalDraw (const core::visual::VisualParams *vparams, bool transparent) override;  Rendering method. More...;  ; void drawGroup (int ig, bool transparent);  ; void drawGroups (bool transparent);  ; virtual void pushTransformMatrix (float *matrix);  ; virtual void popTransformMatrix ();  ; GLenum getGLenum (const char *c) const;  ;  OglModel ();  ;  ~OglModel () override;  ;  Protected Member Functions inherited from sofa::component::visual::VisualModelImpl;  VisualModelImpl ();  Default constructor. More...;  ;  ~VisualModelImpl () override;  Default destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:25461,inherit,inherited,25461,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,2,['inherit'],['inherited']
Modifiability,"moveSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:18947,inherit,inherited,18947,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,2,['inherit'],['inherited']
Modifiability,"moved, with new positions points . Public Attributes; sofa::type::vector< Topology::HexahedronID > hexahedraAroundVertexMoved;  ; const sofa::type::vector< Topology::Hexahedron > hexahedronArray2Moved;  . Public Member Functions;  HexahedraMoved_Adding (const sofa::type::vector< Topology::HexahedronID > &hexahedronShell, const sofa::type::vector< Topology::Hexahedron > &hexahedronArray);  ;  ~HexahedraMoved_Adding () override;  ; const sofa::type::vector< Topology::HexahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Hexahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ hexahedraAroundVertexMoved. sofa::type::vector< Topology::HexahedronID > sofa::core::topology::HexahedraMoved_Adding::hexahedraAroundVertexMoved. ◆ hexahedronArray2Moved. const sofa::type::vector< Topology::Hexahedron > sofa::core::topology::HexahedraMoved_Adding::hexahedronArray2Moved. Constructor details. ◆ HexahedraMoved_Adding(). sofa::core::topology::HexahedraMoved_Adding::HexahedraMoved_Adding ; (; const sofa::type::vector< Topology::HexahedronID > & ; hexahedronShell, . const sofa::type::vector< Topology::Hexahedron > & ; hexahedronArray . ). inline . ◆ ~HexahedraMoved_Adding(). sofa::core::topology::HexahedraMoved_Adding::~HexahedraMoved_Adding ; (; ). override . Function details. ◆ getElementArray()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding.html:1539,inherit,inherited,1539,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___adding.html,1,['inherit'],['inherited']
Modifiability,moved; ; SOFA - Topic: [SOLVED] Vertices from .obj are moved. /very-basic-doubts; ; SOFA - Topic: [SOLVED] very basic doubts. /video-recording-issue-wrong-path; ; SOFA - Topic: Video Recording Issue – Wrong Path. /viewall-function; . /feed; ; [SOLVED] viewAll() function – SOFA. /page; . /12; ; SOFA - Topic: [SOLVED] viewAll() function. /3; ; SOFA - Topic: [SOLVED] viewAll() function. SOFA - Topic: [SOLVED] viewAll() function. /view-port-via-hdmi-port; . /feed; ; [SOLVED] View Port via HDMI port – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] View Port via HDMI port. /5; ; SOFA - Topic: [SOLVED] View Port via HDMI port. SOFA - Topic: [SOLVED] View Port via HDMI port. /visualisation-of-2d-scenes-in-sofa; . /feed; ; [SOLVED] Visualisation of 2D scenes in SOFA – SOFA. SOFA - Topic: [SOLVED] Visualisation of 2D scenes in SOFA. /visualization-bug-with-a-softrobots-plugin-example; . /feed; ; [SOLVED] Visualization bug with a SoftRobots plugin example – SOFA. SOFA - Topic: [SOLVED] Visualization bug with a SoftRobots plugin example. /visualizing-diagonalcompliance-compliance-plugin; ; SOFA - Topic: [SOLVED] Visualizing DiagonalCompliance (Compliance Plugin). /visualizing-the-difference-between-two-models-as-a-hot-plot; ; SOFA - Topic: [SOLVED] visualizing the difference between two models as a hot plot. /visual-not-updated-using-python; . /feed; ; Visual not updated using python – SOFA. SOFA - Topic: Visual not updated using python. /visual-not-updating-when-using-with-a-glfw-window-imgui; ; SOFA - Topic: Visual not updating when using with a GLFW window (ImGUI). /visual-problem-tutorial-sofa-v-18-06; ; SOFA - Topic: [SOLVED] Visual Problem Tutorial SOFA v.18.06. /visual-studio-cant-work-with-more-than-260-character-length-variables; ; SOFA - Topic: visual studio cant work with more than 260 character-length variables. /volume-of-element; ; SOFA - Topic: Volume of element. /volumetric-mesh-generation-error; ; SOFA - Topic: [SOLVED] Volumetric Mesh Generation Error. /volumetric,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:417447,plugin,plugin,417447,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"mpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QMomentumStatWidget(). sofa::gui::qt::QMomentumStatWidget::QMomentumStatWidget ; (; QWidget * ; parent, . simulation::Node * ; node . ). ◆ ~QMomentumStatWidget(). sofa::gui::qt::QMomentumStatWidget::~QMomentumStatWidget ; (; ). virtual . Function details. ◆ stepImpl(). void sofa::gui::qt::QMomentumStatWidget::stepImpl ; (; ). overridevirtual . the only function that should be overloaded ; Implements sofa::gui::qt::QGraphStatWidget. sofaguiqtQMomentumStatWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html:1580,inherit,inherited,1580,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,2,['inherit'],['inherited']
Modifiability,"mplate<class DataTypes > . sofa::gl::component::shader::OglVariable< DataTypes >::OglVariable ; (; ). inlineprotected . ◆ ~OglVariable(). template<class DataTypes > . sofa::gl::component::shader::OglVariable< DataTypes >::~OglVariable ; (; ). inlineoverrideprotected . Function details. ◆ doInitVisual(). template<class DataTypes > . void sofa::gl::component::shader::OglVariable< DataTypes >::doInitVisual ; (; const core::visual::VisualParams * ; ). inlineoverridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). template<class DataTypes > . void sofa::gl::component::shader::OglVariable< DataTypes >::doUpdateVisual ; (; const core::visual::VisualParams * ; ). inlineoverridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ getSEType(). template<class DataTypes > . ShaderElementType sofa::gl::component::shader::OglVariable< DataTypes >::getSEType ; (; ); const. inlineoverridevirtual . Returns the type of shader element (texture, macro, variable, or attribute) ; Implements sofa::core::visual::ShaderElement. ◆ getSEValue() [1/2]. template<class DataTypes > . const core::objectmodel::BaseData* sofa::gl::component::shader::OglVariable< DataTypes >::getSEValue ; (; ); const. inlineoverridevirtual . Implements sofa::core::visual::ShaderElement. ◆ getSEValue() [2/2]. template<class DataTypes > . core::objectmodel::BaseData* sofa::gl::component::shader::OglVariable< DataTypes >::getSEValue ; (; ). inlineoverridevirtual . Implements sofa::core::visual::ShaderElement. ◆ init(). template<class DataTypes > . void sofa::gl::component::shader::OglVariable< DataTypes >::init ; (; void ; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement. ◆ pushValue(). template<class DataTypes > . virtual void sofa::gl::component::shader::OglVariable< DataTypes >::pushValue ; (; ). pure virtual . Implemented in sofa::gl::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:18118,variab,variable,18118,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,2,['variab'],['variable']
Modifiability,"mplate<class DataTypes>; class sofa::component::controller::MechanicalStateController< DataTypes >; MechanicalStateController Class. ; Provides a Mouse & Keyboard user control on a Mechanical State. On a Rigid Particle, relative and absolute control is available. . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateController, DataTypes), Controller);  ; void init () override;  SceneGraph callback initialization method. More...;  ; void applyController ();  ; void onMouseEvent (core::objectmodel::MouseEvent *mev);  Mouse event callback. More...;  ; void onMouseEvent (core::objectmodel::MouseEvent *mev);  Mouse event callback. More...;  ; Controller Interface; void onMouseEvent (core::objectmodel::MouseEvent *mev) override;  Mouse event callback. More...;  ; void onBeginAnimationStep (const double dt) override;  HapticDevice event callback. More...;  ;  Public Member Functions inherited from sofa::component::controller::Controller;  SOFA_CLASS (Controller, core::behavior::BaseController);  ; virtual void onHapticDeviceEvent (core::objectmodel::HapticDeviceEvent *);  HapticDevice event callback. More...;  ; virtual void onKeyPressedEvent (core::objectmodel::KeypressedEvent *);  Xitact event callback. More...;  ; virtual void onKeyReleasedEvent (core::objectmodel::KeyreleasedEvent *);  Key Release event callback. More...;  ; virtual void onJoystickEvent (core::objectmodel::JoystickEvent *);  Joystick event callback. More...;  ; virtual void onEndAnimationStep (const double);  End Animation event callback. More...;  ; virtual void onGUIEvent (core::objectmodel::GUIEvent *);  GUI event callback. More...;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:1471,inherit,inherited,1471,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,1,['inherit'],['inherited']
Modifiability,"mplate<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ExtrudeEdgesAndGenerateQuads ();  ;  ~ExtrudeEdgesAndGenerateQuads () override;  ; void checkInput ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html:14400,inherit,inherited,14400,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,1,['inherit'],['inherited']
Modifiability,"mplate<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static OglColorMap * getDefault ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  OglColorMap ();  ;  ~OglColorMap () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:13966,inherit,inherited,13966,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,2,['inherit'],['inherited']
Modifiability,"mplate<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::State< TDataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ colorMap. gl::component::rendering2d::OglColorMap* sofa::gl::component::rendering3d::DataDisplay::colorMap. ◆ d_currentMax. Data<Real> sofa::gl::component::rendering3d::DataDisplay::d_currentMax. Current max range. . ◆ d_currentMin. Data<Real> sofa::gl::component::rendering3d::DataDisplay::d_currentMin. Current min range. . ◆ d_shininess. Data<float> sofa::gl::component::rendering3d::DataDisplay::d_shininess. Shininess for rendering point-based data [0,128]. <0 means no specularity. . ◆ d_transparency. Data<Real> sofa::gl::component::rendering3d::DataDisplay::d_transparency. Add transparency when we draw triangles (this allows to see inside the volume). . ◆ d_userRange. Data<type::Vec2f> sofa::gl::component::rendering3d::DataDisplay::d_userRange. Clamp to this values (if max>min) . ◆ f_colorNaN. Data<sofa::type::RGBAColor> sofa::gl::component::render",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:19696,inherit,inherited,19696,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['inherit'],['inherited']
Modifiability,"mponent::controller::Controller;  Controller ();  Default constructor. More...;  ;  ~Controller () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Accessors; enum  MouseMode { ;   None =0; , BtLeft; , BtRight; , BtMiddle; , ;   Wheel. };  ; sofa::core::objectmodel::RenamedData< unsigned int > index;  ; sofa::core::objectmodel::RenamedData< bool > onlyTranslation;  ; sofa::core::objectmodel::RenamedData< bool > buttonDeviceState;  ; sofa::core::objectmodel::RenamedData< sofa::type::Vec< 3, Real > > mainDirection;  ; Data< unsigned int > d_index;  Index of the controlled DOF. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:11795,inherit,inherited,11795,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,1,['inherit'],['inherited']
Modifiability,"mponent::io::mesh::GIDMeshLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::GIDMeshLoader Class Reference . #include <GIDMeshLoader.h>. Inheritance diagram for sofa::component::io::mesh::GIDMeshLoader:. [legend]. Public Member Functions;  SOFA_CLASS (GIDMeshLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:1027,variab,variables,1027,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,1,['variab'],['variables']
Modifiability,"mponent::io::mesh::MeshOffLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::MeshOffLoader Class Reference . #include <MeshOffLoader.h>. Inheritance diagram for sofa::component::io::mesh::MeshOffLoader:. [legend]. Public Member Functions;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader.html:1027,variab,variables,1027,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader.html,1,['variab'],['variables']
Modifiability,"mponent::mass::initExternalModule ; (; ). ◆ MatrixFromEulerXYZ(). Mat3x3d sofa::component::mass::MatrixFromEulerXYZ ; (; double ; thetaX, . double ; thetaY, . double ; thetaZ . ). ◆ parseMassTemplate(). template<class MassType > . void sofa::component::mass::parseMassTemplate ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg, . const core::behavior::BaseMass * ; mass . ). Function used in parsing some classes derived from BaseMass to warn the user how the template attributes have changed since #2644 . ◆ registerDiagonalMass(). void sofa::component::mass::registerDiagonalMass ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMeshMatrixMass(). void sofa::component::mass::registerMeshMatrixMass ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::mass::registerObjects ; (; sofa::core::ObjectFactory * ; factory). ◆ registerUniformMass(). void sofa::component::mass::registerUniformMass ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ DiagonalMass< Rigid2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Rigid2Types >. ◆ DiagonalMass< Rigid2Types, Rigid3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Rigid2Types, Rigid3Types >. ◆ DiagonalMass< Rigid3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Rigid3Types >. ◆ DiagonalMass< Vec1Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec1Types >. ◆ DiagonalMass< Vec1Types, Vec2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec1Types, Vec2Types >. ◆ DiagonalMass< Vec1Types, Vec3Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec1Types, Vec3Types >. ◆ DiagonalMass< Vec2Types >. template class SOFA_COMPONENT_MASS_API sofa::component::mass::DiagonalMass< Vec2Types >. ◆ DiagonalMass< Vec2Types, Vec3Types >. template class SOFA_COMPONENT_MASS_API ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1mass.html:4057,Variab,Variable,4057,api/master/sofa/html/namespacesofa_1_1component_1_1mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1mass.html,1,['Variab'],['Variable']
Modifiability,"mponent::playback::CompareStateCreator:. [legend]; Detailed Description; Create CompareState component in the graph each time needed. . Protected Attributes; std::string sceneName;  ; std::string extension;  ; bool createInMapping;  ; bool init;  ; int counterCompareState;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  CompareStateCreator (const core::ExecParams *params);  ;  CompareStateCreator (const std::string &n, const core::ExecParams *params, bool i=true, int c=0);  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void setSceneName (std::string &n);  ; void setCounter (int c);  ; void setCreateInMapping (bool b);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_creator.html:1375,inherit,inherited,1375,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_creator.html,1,['inherit'],['inherited']
Modifiability,"mponent::playback::ReadTopology; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CompareTopology ();  ;  Protected Member Functions inherited from sofa::component::playback::ReadTopology;  ReadTopology ();  ;  ~ReadTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:12153,inherit,inherited,12153,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,2,['inherit'],['inherited']
Modifiability,mponent::solidmechanics::fem::elastic::registerTetrahedralCorotationalFEMForceField ; (; sofa::core::ObjectFactory * ; factory). ◆ registerTetrahedronFEMForceField(). void sofa::component::solidmechanics::fem::elastic::registerTetrahedronFEMForceField ; (; sofa::core::ObjectFactory * ; factory). ◆ registerTriangleFEMForceField(). void sofa::component::solidmechanics::fem::elastic::registerTriangleFEMForceField ; (; sofa::core::ObjectFactory * ; factory). ◆ registerTriangularAnisotropicFEMForceField(). void sofa::component::solidmechanics::fem::elastic::registerTriangularAnisotropicFEMForceField ; (; sofa::core::ObjectFactory * ; factory). ◆ registerTriangularFEMForceField(). void sofa::component::solidmechanics::fem::elastic::registerTriangularFEMForceField ; (; sofa::core::ObjectFactory * ; factory). ◆ registerTriangularFEMForceFieldOptim(). void sofa::component::solidmechanics::fem::elastic::registerTriangularFEMForceFieldOptim ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ FastTetrahedralCorotationalForceField< Vec3Types >. template class SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_API sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< Vec3Types >. ◆ HexahedralFEMForceField< Vec3Types >. template class SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_API sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< Vec3Types >. ◆ HexahedralFEMForceFieldAndMass< Vec3Types >. template class SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_API sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< Vec3Types >. ◆ HexahedronFEMForceField< Vec3Types >. template class SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_API sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< Vec3Types >. ◆ HexahedronFEMForceFieldAndMass< Vec3Types >. template class SOFA_COMPONENT_SOLIDMECHANICS_FEM_ELASTIC_API sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< Vec3Types >. ◆,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic.html:6893,Variab,Variable,6893,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic.html,1,['Variab'],['Variable']
Modifiability,"mponent::solidmechanics::spring::SpringForceField< DataTypes >; static constexpr auto N = DataTypes::spatial_dimensions;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndices, 2 > d_springsIndices;  ; std::ofstream * m_gnuplotFileEnergy;  stream to export Potential Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  ;  Static Public Member Functions inherited from s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:24107,inherit,inherited,24107,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,9,['inherit'],['inherited']
Modifiability,mponent::solidmechanics::tensormass Namespace Reference . Classes; class  TetrahedralTensorMassForceField;  ; class  TriangularTensorMassForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::Tetra Tetra;  ; typedef core::topology::BaseMeshTopology::EdgesInTetrahedron EdgesInTetrahedron;  ; typedef Tetra Tetrahedron;  ; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  . Functions; void registerTetrahedralTensorMassForceField (sofa::core::ObjectFactory *factory);  ; void registerTriangularTensorMassForceField (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; template class SOFA_COMPONENT_SOLIDMECHANICS_TENSORMASS_API TetrahedralTensorMassForceField< Vec3Types >;  ; template class SOFA_COMPONENT_SOLIDMECHANICS_TENSORMASS_API TriangularTensorMassForceField< Vec3Types >;  . Typedef Documentation. ◆ EdgesInTetrahedron. typedef EdgesInTetrahedron sofa::component::solidmechanics::tensormass::EdgesInTetrahedron. ◆ EdgesInTriangle. typedef core::topology::BaseMeshTopology::EdgesInTriangle sofa::component::solidmechanics::tensormass::EdgesInTriangle. ◆ Tetra. typedef core::topology::BaseMeshTopology::Tetra sofa::component::solidmechanics::tensormass::Tetra. ◆ Tetrahedron. typedef Tetra sofa::component::solidmechanics::tensormass::Tetrahedron. Function Documentation. ◆ getModuleName(). const char * sofa::component::solidmechanics::tensormass::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::solidmechanics::tensormass::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_SOLIDMECHANICS_TENSORMASS_API void sofa::component::solidmechanics::tensormass::init ; (; ). ◆ initExternalModule(). void sofa::component::solidmechanics::tenso,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1tensormass.html:1095,Variab,Variables,1095,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1tensormass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1tensormass.html,1,['Variab'],['Variables']
Modifiability,"mponent::visual::TrailRenderer< DataTypes >; Render a trail behind particles; It can be used to draw the trajectory of a dof. This component does not support topological changes (point removal or point addition) and list reordering. . Public Attributes; Data< sofa::type::vector< Coord > > d_position;  Position of the particles behind which a trail is rendered. More...;  ; Data< sofa::Size > d_nbSteps;  Number of time steps to use to render the trail. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the trail. More...;  ; Data< float > d_thickness;  Thickness of the trail. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< std::vector< sofa::type::Vec3 > > m_trail;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:1465,inherit,inherited,1465,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,1,['inherit'],['inherited']
Modifiability,"mponentMouseInteraction< DataTypes > Class Template Reference . #include <ComponentMouseInteraction.h>. Inheritance diagram for sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >:. [legend]. Protected Attributes; MouseMapping mouseMapping;  . Public Member Functions; void createInteractionComponents (sofa::simulation::Node *parent, sofa::simulation::Node *current) override;  ; bool isCompatible (core::objectmodel::BaseContext *context) const override;  ;  Public Member Functions inherited from sofa::gui::component::performer::ComponentMouseInteraction;  ComponentMouseInteraction ();  ; virtual ~ComponentMouseInteraction ();  ; void attach (simulation::Node *parentNode);  ; void detach ();  ; void reset ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::ComponentMouseInteraction; simulation::NodeSPtr nodeRayPick;  ; sofa::core::behavior::BaseMechanicalState::SPtr mouseInSofa;  ; sofa::gui::component::performer::BaseMouseInteractor::SPtr mouseInteractor;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::ComponentMouseInteraction; template<class RealObject > ; static RealObject * create (RealObject *, core::objectmodel::BaseContext *);  . Attribute details. ◆ mouseMapping. template<class DataTypes > . MouseMapping sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::mouseMapping. protected . Function details. ◆ createInteractionComponents(). template<class DataTypes > . void sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::createInteractionComponents ; (; sofa::simulation::Node * ; parent, . sofa::simulation::Node * ; current . ). overridevirtual . Implements sofa::gui::component::performer::ComponentMouseInteraction. ◆ isCompatible(). template<class DataTypes > . bool sofa::gui::component::performer::TComponentMouseInteraction< DataTypes >::isCompatible ; (; core::objectmodel::BaseContext * ; context); const. override",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html:1085,inherit,inherited,1085,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_component_mouse_interaction.html,5,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"mponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DisplacementMatrixEngine, DataTypes), SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4));  ;  DisplacementMatrixEngine ();  DisplacementMatrixEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >;  SOFA_CLASS (SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4), sofa::core::DataEngine);  ;  DisplacementTransformEngine ();  DisplacementTransformEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:2652,inherit,inherited,2652,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"mponentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:2806,inherit,inherited,2806,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['inherit'],['inherited']
Modifiability,"ms *, MultiVecId res1, MultiVecId res2);  ; bool applyCorrectionTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; MultiLink< ConstraintSolverImpl, core::behavior::BaseConstraintCorrection, BaseLink::FLAG_STOREPATH > l_constraintCorrections;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:17604,inherit,inherited,17604,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['inherit'],['inherited']
Modifiability,"ms *, MultiVecId res1, MultiVecId res2);  ; bool applyCorrectionTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html:11896,inherit,inherited,11896,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,2,['inherit'],['inherited']
Modifiability,"ms *, MultiVecId res1, MultiVecId res2);  ; bool applyCorrectionTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:19070,inherit,inherited,19070,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['inherit'],['inherited']
Modifiability,"ms *mparams) const override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const override;  ; type::Vec6 getMomentum (const MechanicalParams *mparams) const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addBToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addMToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Add Mass contribution to global Matrix assembling. More...;  ; void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addToMatrix (sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:13238,inherit,inherited,13238,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['inherit'],['inherited']
Modifiability,"ms, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecCoordId::position());  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_visitor.html:1468,inherit,inherited,1468,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_visitor.html,4,['inherit'],['inherited']
Modifiability,"ms, SReal time=0, sofa::core::MultiVecDerivId v=sofa::core::VecDerivId::velocity());  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor.html:1468,inherit,inherited,1468,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor.html,4,['inherit'],['inherited']
Modifiability,"ms;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm)=0;  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html:1269,inherit,inherited,1269,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,2,['inherit'],['inherited']
Modifiability,"muation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::CollisionGroupManager Class Referenceabstract . #include <CollisionGroupManager.h>; Given a set of contacts, create integration groups. ; More... Inheritance diagram for sofa::core::collision::CollisionGroupManager:. [legend]; Detailed Description; Given a set of contacts, create integration groups. ; For each pair of objects in contacts :. Look which mechanical integration algorithm is used; If they are “compatible”, create a algorithm merging them; Often simply the most stable of the two. Explicit Euler + Explicit Runge Kutta -> Explicit Runge Kutta; Explicit * + Implicit Euler -> Implicit Euler . Protected Attributes; sofa::type::vector< core::objectmodel::BaseContext::SPtr > groups;  integration groups More...;  ; std::map< Instance, sofa::type::vector< core::objectmodel::BaseContext::SPtr > > storedGroups;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:1123,inherit,inherited,1123,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['inherit'],['inherited']
Modifiability,"muation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::SlicedVolumetricModel Class Reference . #include <SlicedVolumetricModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::SlicedVolumetricModel:. [legend]. Protected Attributes; Data< float > alpha;  Opacity of the billboards. 1.0 is 100% opaque. More...;  ; Data< sofa::type::RGBAColor > color;  Billboard color.(default=1.0,1.0,1.0,1.0) More...;  ; Data< int > _nbPlanes;  Number of billboards. More...;  ; int _nbPlanesOld;  ; core::topology::BaseMeshTopology * _topology;  ; core::behavior::BaseMechanicalState * _mstate;  ; unsigned char * texture_data;  ; bool _first;  ; GLuint _texname;  ; int _width;  ; int _height;  ; int _depth;  ; Coord vRight;  ; Coord vUp;  ; Coord _planeNormal;  ; Real _radius;  ; Real _planeSeparations;  ; VecCoord _textureCoordinates;  ; double _minBBox [3];  ; double _maxBBox [3];  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:1154,inherit,inherited,1154,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,2,['inherit'],['inherited']
Modifiability,"mulateForceLarge (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ; void initPolar (const int i);  ; void computeRotationPolar (Transformation &r, type::Vec< 8, Coord > &nodes);  ; virtual void accumulateForcePolar (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:25024,inherit,inherited,25024,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['inherit'],['inherited']
Modifiability,"mulation::ExportGnuplotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::ExportGnuplotVisitor Class Reference . #include <ExportGnuplotVisitor.h>. Inheritance diagram for sofa::simulation::ExportGnuplotVisitor:. [legend]. Protected Attributes; SReal m_time;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportGnuplotVisitor (const core::ExecParams *params, SReal time);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html:921,inherit,inherited,921,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,2,['inherit'],['inherited']
Modifiability,"mulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:1271,plugin,plugin,1271,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['plugin'],['plugin']
Modifiability,"multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DifferenceEngine, TDataType), core::DataEngine);  ;  DifferenceEngine ();  ;  ~DifferenceEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html:2662,inherit,inherited,2662,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,1,['inherit'],['inherited']
Modifiability,"multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference . #include <DirectSAPNarrowPhase.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase:. [legend]; Detailed Description; This class is an implementation of sweep and prune in its ""direct"" version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1054,inherit,inherited,1054,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,2,['inherit'],['inherited']
Modifiability,"multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes > Class Template Reference . #include <UniformVelocityDampingForceField.h>; Apply damping forces to given degrees of freedom. ; More... Inheritance diagram for sofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; Apply damping forces to given degrees of freedom. . Public Attributes; sofa::core::objectmodel::RenamedData< Real > dampingCoefficient;  ; Data< Real > d_dampingCoefficient;  air drag coefficient. More...;  ; Data< bool > d_implicit;  should it generate damping matrix df/dv? (explicit otherwise, i.e. only generating a force) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html:1113,inherit,inherited,1113,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html,1,['inherit'],['inherited']
Modifiability,"n ();  ; const_iterator begin () const;  ; iterator end ();  ; const_iterator end () const;  . Static Public Member Functions; static SofaViewerFactory * getInstance ();  ; static Object * CreateObject (Key key, ArgumentRef arg);  ; static Object * CreateAnyObject (ArgumentRef arg);  ; static bool HasKey (Key key);  ; static const char * ViewerName (Key key);  ; static const char * AcceleratedName (Key key);  ;  Static Public Member Functions inherited from sofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; static Factory< Key, Object, Argument, ObjectPtr > * getInstance ();  ; static ObjectPtr CreateObject (Key key, Argument arg);  ; static ObjectPtr CreateAnyObject (Argument arg);  ; static bool HasKey (Key key);  ; static bool DuplicateEntry (Key existing, Key duplicate);  ; static bool ResetEntry (Key existing);  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; std::multimap< Key, Creator * > registry;  . Function details. ◆ AcceleratedName(). static const char* sofa::helper::SofaViewerFactory::AcceleratedName ; (; Key ; key). inlinestatic . ◆ CreateAnyObject(). static Object* sofa::helper::SofaViewerFactory::CreateAnyObject ; (; ArgumentRef ; arg). inlinestatic . ◆ CreateObject(). static Object* sofa::helper::SofaViewerFactory::CreateObject ; (; Key ; key, . ArgumentRef ; arg . ). inlinestatic . ◆ getAcceleratedViewerName(). const char * sofa::helper::SofaViewerFactory::getAcceleratedViewerName ; (; Key ; key). ◆ getInstance(). SofaViewerFactory * sofa::helper::SofaViewerFactory::getInstance ; (; ). static . ◆ getViewerName(). const char * sofa::helper::SofaViewerFactory::getViewerName ; (; Key ; key). ◆ HasKey(). static bool sofa::helper::SofaViewerFactory::HasKey ; (; Key ; key). inlinestatic . ◆ ViewerName(). static const char* sofa::helper::SofaViewerFactory::ViewerName ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html:1975,inherit,inherited,1975,api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html,3,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"n alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::LinearSolverAccessor; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:12791,inherit,inherited,12791,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['inherit'],['inherited']
Modifiability,"n box. More...;  ; Data< VecIndex > d_triangleIndices;  Indices of affected triangles. More...;  ; Data< VecIndex > d_quadIndices;  Indices of affected quads. More...;  ; Data< bool > d_pulseMode;  Cyclic pressure application. More...;  ; Data< Real > d_pressureLowerBound;  Pressure lower bound force per unit area (active in pulse mode) More...;  ; Data< Real > d_pressureSpeed;  Continuous pressure application in Pascal per second. Only active in pulse mode. More...;  ; Data< bool > d_volumeConservationMode;  Pressure variation follow the inverse of the volume variation. More...;  ; Data< bool > d_useTangentStiffness;  Whether (non-symmetric) stiffness matrix should be used. More...;  ; Data< Real > d_defaultVolume;  Default Volume. More...;  ; Data< Deriv > d_mainDirection;  Main direction for pressure application. More...;  ; Data< Real > d_drawForceScale;  DEBUG: scale used to render force vectors. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field.html:2893,inherit,inherited,2893,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"n check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doUpdate ()=0;  Where you put your engine's impl. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:14203,inherit,inherited,14203,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,1,['inherit'],['inherited']
Modifiability,"n into account? More...;  ; Data< int > d_drawType;  ; Data< int > d_drawColor;  ; Data< float > d_drawSize;  ; type::vector< type::vector< Weight > > _weights;  ; type::vector< std::pair< Index, Weight > > _finalWeights;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:2039,inherit,inherited,2039,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability,"n method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; bool prepareStates (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; bool buildSystem (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; void rebuildSystem (SReal massFactor, SReal forceFactor) override;  ; bool solveSystem (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; bool applyCorrection (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; void computeResidual (const core::ExecParams *) override;  ; ConstraintProblem * getConstraintProblem () override;  ; void lockConstraintProblem (sofa::core::objectmodel::BaseObject *from, ConstraintProblem *p1, ConstraintProblem *p2=nullptr) override;  ; sofa::core::MultiVecDerivId getLambda () const override;  ; sofa::core::MultiVecDerivId getDx () const override;  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl;  ConstraintSolverImpl ();  ;  ~ConstraintSolverImpl () override;  ; void removeConstraintCorrection (core::behavior::BaseConstraintCorrection *s) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:7699,inherit,inherited,7699,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,3,['inherit'],['inherited']
Modifiability,"n methods.; virtual void pushMatrix ()=0;  ; virtual void popMatrix ()=0;  ; virtual void multMatrix (float *)=0;  ; virtual void scale (float)=0;  ; virtual void translate (float x, float y, float z)=0;  ; Drawing style methods.; virtual void setMaterial (const RGBAColor &color)=0;  ; virtual void resetMaterial (const RGBAColor &color)=0;  ; virtual void resetMaterial ()=0;  ; virtual void setPolygonMode (int _mode, bool _wireframe)=0;  ; virtual void setLightingEnabled (bool _isAnabled)=0;  ; States (save/restore); virtual void saveLastState ()=0;  ; virtual void restoreLastState ()=0;  ; StateLifeCycle makeStateLifeCycle ();  ; Overlay methods; virtual void writeOverlayText (int x, int y, unsigned fontSize, const RGBAColor &color, const char *text)=0;  draw 2D text at position (x,y) from top-left corner More...;  ; virtual void enablePolygonOffset (float factor, float units)=0;  Allow a variable depth offset for polygon drawing. More...;  ; virtual void disablePolygonOffset ()=0;  Remove variable depth offset for polygon drawing. More...;  ; virtual void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr)=0;  . Constructor details. ◆ DrawTool(). sofa::helper::visual::DrawTool::DrawTool ; (; ). inline . ◆ ~DrawTool(). virtual sofa::helper::visual::DrawTool::~DrawTool ; (; ). inlinevirtual . ◆ ~StateLifeCycle(). sofa::helper::visual::DrawTool::~StateLifeCycle ; (; ). Function details. ◆ clear(). virtual void sofa::helper::visual::DrawTool::clear ; (; ). inlinevirtual . Reimplemented in sofa::gl::DrawToolGL. ◆ disableBlending(). virtual void sofa::helper::visual::DrawTool::disableBlending ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableDepthTest(). virtual void sofa::helper::visual::DrawTool::disableDepthTest ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableLighting(). virtual void sofa::helper::visual::DrawTool::disableLighting ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disablePolygonOffse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:9493,variab,variable,9493,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,2,['variab'],['variable']
Modifiability,"n precomputation are modified. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; Read and write access functions in mass information; virtual const Real & getMassDensity ();  ; virtual const Real & getTotalMass ();  ; virtual void setVertexMass (sofa::type::vector< Real > vertexMass);  ; virtual void setMassDensity (Real massDensityValue);  ; virtual void setTotalMass (Real totalMass);  ; Check and standard initialization functions from mass information; virtual bool checkVertexMass ();  ; virtual void initFromVertexMass ();  ; virtual bool checkMassDensity ();  ; virtual void initFromMassDensity ();  ; virtual bool checkTotalMass ();  ; virtual void checkTotalMassInit ();  ; virtual void initFromTotalMass ();  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:11610,inherit,inherited,11610,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['inherit'],['inherited']
Modifiability,"n source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::SingleStateAccessor< DataTypes > Class Template Reference . #include <SingleStateAccessor.h>. Inheritance diagram for sofa::core::behavior::SingleStateAccessor< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::core::behavior::SingleStateAccessor< DataTypes >; Base class for components having access to one mechanical state with a specific template parameter, in order to read and/or write state variables. . Protected Attributes; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html:897,inherit,inherited,897,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,3,['inherit'],['inherited']
Modifiability,"n the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CylinderCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TCylinder() [1/2]. template<class DataTypes > . sofa::component::collision::geometry::TCylinder< DataTypes >::TCylinder ; (; ParentModel * ; model, . Index ; index . ). inline . ◆ TCylinder() [2/2]. template<class DataTypes > . sofa::component::collision::geometry::TCylinder< DataTypes >::TCylinder ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ axis(). template<class DataTypes > . TCylinder< DataTypes >::Coord sofa::component::collision::geometry::TCylinder< DataTypes >::axis. ◆ point1(). template<class DataTypes > . TCylinder< DataTypes >::Coord sofa::component::collision::geometry::TCylinder< DataTypes >::point1. ◆ point2(). template<class DataTypes > . TCylinder< DataTypes >::Coord sofa::component::collision::geometry::TCylinder< DataTypes >::point2. ◆ radius(). template<class DataTypes > . TCylinder< DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_cylinder.html:4025,inherit,inherited,4025,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_cylinder.html,1,['inherit'],['inherited']
Modifiability,"n the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< TriangleCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TTriangle() [1/4]. template<class DataTypes > . sofa::component::collision::geometry::TTriangle< DataTypes >::TTriangle ; (; ParentModel * ; model, . Index ; index . ). inline . ◆ TTriangle() [2/4]. template<class TDataTypes > . sofa::component::collision::geometry::TTriangle< TDataTypes >::TTriangle ; (; ). inline . ◆ TTriangle() [3/4]. template<class DataTypes > . sofa::component::collision::geometry::TTriangle< DataTypes >::TTriangle ; (; const core::CollisionElementIterator & ; i). inlineexplicit . ◆ TTriangle() [4/4]. template<class DataTypes > . sofa::component::collision::geometry::TTriangle< DataTypes >::TTriangle ; (; ParentModel * ; model, . Index ; index, . helper::ReadAccessor< typename DataTypes::VecCoord > & ; x . ). inline . Function details. ◆ flags(). template<class DataTypes > . int sofa::component::collision::geometry::TTriangle< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_triangle.html:4566,inherit,inherited,4566,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_triangle.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_triangle.html,1,['inherit'],['inherited']
Modifiability,"n to visual elements rendering within a node or a sub-graph. This can be used to change where elements are rendered, but has no effect on the actual simulation. It can be used for example to correctly render forcefields applied to a mesh that is then transformed by a rigid DOF using DeformableOnRigidFrameMapping. . Public Attributes; sofa::core::objectmodel::RenamedData< Coord > transform;  ; sofa::core::objectmodel::RenamedData< bool > recursive;  ; Data< Coord > d_transform;  Transformation to apply. More...;  ; Data< bool > d_recursive;  True to apply transform to all nodes below. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; int nbpush;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_mas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:1428,inherit,inherited,1428,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,1,['inherit'],['inherited']
Modifiability,"n topology border. More...;  ; sofa::type::vector< PointID > m_pointsOnBorder;  Set of point indices on topology border. More...;  ; bool m_triangleTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyContainer, TriangleSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addRemovedTetraIndex (sofa::type::vector< TetrahedronID > &tetrahedra);  ; sofa::type::vector< TetrahedronID > & getRemovedTetraIndex ();  ; Size getNumberOfTetrahedra () co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:5840,inherit,inherited,5840,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,2,['inherit'],['inherited']
Modifiability,"n topology border. More...;  ; sofa::type::vector< PointID > m_pointsOnBorder;  Set of point indices on topology border. More...;  ; bool m_triangleTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyContainer, EdgeSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool hasTriangles () const;  ; bool hasEdgesInTriangle () const;  ; bool h",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:4586,inherit,inherited,4586,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,2,['inherit'],['inherited']
Modifiability,"n upper levels they are grouped globally independently of contact pairs. More...;  ; Data< type::vector< SReal > > d_constraintForces;  OUTPUT: constraint forces (stored only if computeConstraintForces=True) More...;  ; Data< bool > d_computeConstraintForces;  The indices of the constraintForces to store in the constraintForce data field. More...;  ; Data< std::set< int > > d_constraintGroups;  list of ID of groups of constraints to be handled by this solver. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graph;  Graph of residuals at each iteration. More...;  ; Data< int > d_showLevels;  Number of constraint levels to display. More...;  ; Data< SReal > d_showCellWidth;  Distance between each constraint cells. More...;  ; Data< type::Vec3 > d_showTranslation;  Position of the first cell. More...;  ; Data< type::Vec3 > d_showLevelTranslation;  Translation between levels. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LCPConstraintSolver, ConstraintSolverImpl);  ; bool pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:4192,inherit,inherited,4192,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['inherit'],['inherited']
Modifiability,"n values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:3506,inherit,inherited,3506,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,3,['inherit'],['inherited']
Modifiability,"n, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1660,inherit,inherited,1660,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,2,['inherit'],['inherited']
Modifiability,"n, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html:1674,inherit,inherited,1674,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,4,['inherit'],['inherited']
Modifiability,"n. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Public Member Functions inherited from sofa::core::objectmodel::Data< void * >;  Data (const Data &)=delete;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading strings. More...;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading booleans. More...;  ; bool read (const std::string &str);  Specialization for reading strings. More...;  ; bool read (const std::string &str);  Specialization for reading booleans. More...;  ; void printValue (std::ostream &out) const override;  General case for printing default value. More...;  ; std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html:1416,inherit,inherited,1416,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,1,['inherit'],['inherited']
Modifiability,"n::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; methods each GUI must implement; Start the GUI loop . virtual int mainLoop ()=0;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual int closeGUI ()=0;  Close the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual sofa::simulation::Node * currentSimulation ()=0;  Get the rootNode of the sofa scene. More...;  ; methods to configure the GUI; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPath (const std::string &);  ; virtual void initViewer (BaseViewer *);  ; virtual void setViewerConfiguration (sofa::component::setting::ViewerSetting *);  ; virtual void setViewerResolution (int, int);  ; virtual void setFullScreen ();  ; virtual void centerWindow ();  ; virtual void setBackgroundColor (const sofa::type::RGBAColor &);  ; virtual void setBackgroundImage (const std::string &);  ; virtual BaseViewer * getViewer ();  ; virtual void registerViewer (BaseViewer *);  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *);  ; methods to communicate with the GUI; Do one step of the GUI loop . virtual void stepMainLoop ();  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  ; virtual void showFPS (double);  Force the displayed FPS value (if any) More...;  . Static Public Member Functions; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html:1429,config,configure,1429,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,2,['config'],['configure']
Modifiability,"n::Operation::pickHandle. protected . Constructor details. ◆ Operation(). sofa::gui::common::Operation::Operation ; (; sofa::component::setting::MouseButtonSetting::SPtr ; s = nullptr). inline . ◆ ~Operation(). virtual sofa::gui::common::Operation::~Operation ; (; ). inlinevirtual . Function details. ◆ configure() [1/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . MOUSE_BUTTON ; b . ). inlinevirtual . Reimplemented in sofa::gui::qt::QAddSutureOperation, sofa::gui::qt::QTopologyOperation, and sofa::gui::qt::QInciseOperation. ◆ configure() [2/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; s . ). inlinevirtual . Reimplemented in sofa::gui::qt::QFixOperation, sofa::gui::qt::QStartNavigationOperation, sofa::gui::qt::QAddRecordedCameraOperation, and sofa::gui::qt::QAttachOperation. ◆ configurePerformer(). void sofa::gui::common::Operation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). virtual . Reimplemented in sofa::gui::common::AddSutureOperation, sofa::gui::common::StartNavigationOperation, sofa::gui::common::AddRecordedCameraOperation, sofa::gui::common::AddFrameOperation, sofa::gui::common::FixOperation, and sofa::gui::common::AttachOperation. ◆ createPerformer(). InteractionPerformer * sofa::gui::common::Operation::createPerformer ; (; ). virtual . ◆ defaultPerformerType(). virtual std::string sofa::gui::common::Operation::defaultPerformerType ; (; ). inlinevirtual . Reimplemented in sofa::gui::common::AddSutureOperation, sofa::gui::common::StartNavigationOperation, sofa::gui::common::AddRecordedCameraOperation, sofa::gui::common::AddFrameOperation, sofa::gui::common::FixOperation, sofa::gui::common::AttachOperation, and sofa::gui::common::ConstraintAttachOperation. ◆ end(). void sofa::gui::common::Operation::end ; (; ). virtual . Reimplemented in sofa::gui::common::TopologyOperation, and sofa::gui::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html:3090,config,configurePerformer,3090,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,2,['config'],['configurePerformer']
Modifiability,"n; Utility to manage lights into an Opengl scene. ; This class must be used with the Light class. It centralizes all the Lights and managed them. . Public Attributes; Data< bool > d_shadowsEnabled;  Enable Shadow in the scene. (default=0) More...;  ; Data< bool > d_softShadowsEnabled;  If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) More...;  ; Data< sofa::type::RGBAColor > d_ambient;  Ambient lights contribution (Vec4f)(default=[0.0f,0.0f,0.0f,0.0f]) More...;  ; Data< bool > d_drawIsEnabled;  enable/disable drawing of lights shadow textures. (default=false) More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LightManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:1405,inherit,inherited,1405,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['inherit'],['inherited']
Modifiability,"n; indicates that some points were added . Public Attributes; size_t nVertices;  ; sofa::type::vector< Topology::PointID > pointIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::PointID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< PointAncestorElem > ancestorElems;  . Public Member Functions;  PointsAdded (const size_t nV);  ;  PointsAdded (const size_t nV, const sofa::type::vector< Topology::PointID > &indices);  ;  PointsAdded (const size_t nV, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  PointsAdded (const size_t nV, const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  PointsAdded (const size_t nV, const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< PointAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~PointsAdded () override;  ; size_t getNbAddedVertices () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Point > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html:1871,inherit,inherited,1871,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html,1,['inherit'],['inherited']
Modifiability,"n;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; Data< bool > showQuadIndices;  Debug : view Quad indices. More...;  ; Data< bool > _drawQuads;  if true, draw the quads in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGB code color used to draw quads. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instanc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:2405,inherit,inherited,2405,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability,"nCollisionModel, DataTypes >;  Mapper for TetrahedronCollisionModel. More...;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; ContactMapperCreator< ContactMapper< LineCollisionModel< sofa::defaulttype::Vec3Types > > > LineContactMapperClass (""PenalityContactForceField"", true);  ; ContactMapperCreator< ContactMapper< TriangleCollisionModel< sofa::defaulttype::Vec3Types > > > TriangleContactMapperClass (""PenalityContactForceField"", true);  ; ContactMapperCreator< ContactMapper< SphereCollisionModel< sofa::defaulttype::Vec3Types > > > SphereContactMapperClass (""PenalityContactForceField"", true);  ; ContactMapperCreator< ContactMapper< PointCollisionModel< sofa::defaulttype::Vec3Types > > > PointContactMapperClass (""PenalityContactForceField"", true);  ; ContactMapperCreator< ContactMapper< CylinderCollisionModel< sofa::defaulttype::Rigid3Types >, Vec3Types > > CylinderModelContactMapperClass (""PenalityContactForceField"", true);  ; ContactMapperCreator< ContactMapper< RigidSphereModel, Vec3Types > > RigidSphereContactMapperClass (""PenalityContactForceField"", true);  ; template class SOFA_COMPONENT_COLLISION_RESPONSE_MAPPER_API ContactMapper< RigidSphereModel, Vec3Types >;  ; ContactMapperCreator< ContactMapper< collision::geometry::TetrahedronCollisionModel > > TetrahedronContactMapperClass (""PenalityContactForceField"", true);  . Function Documentation. ◆ getModuleName(). const char * sofa::component::collision::response::mapper::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::collision::response::mapper::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_COLLISION_RESPONSE_MAPPER_API void sofa::component::collision::response::mapper::init ; (; ). ◆ initExternalModule(). void sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1response_1_1mapper.html:2347,Variab,Variables,2347,api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1response_1_1mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1response_1_1mapper.html,1,['Variab'],['Variables']
Modifiability,"nID > tetrahedronIndexArray;  ; sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > coefs;  ; sofa::type::vector< TetrahedronAncestorElem > ancestorElems;  . Public Member Functions;  TetrahedraAdded (const size_t nT);  ;  TetrahedraAdded (const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex);  ;  TetrahedraAdded (const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  TetrahedraAdded (const size_t nT, const sofa::type::vector< Topology::Tetrahedron > &_tetrahedronArray, const sofa::type::vector< Topology::TetrahedronID > &tetrahedraIndex, const sofa::type::vector< TetrahedronAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~TetrahedraAdded () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getArray () const;  ; size_t getNbAddedTetrahedra () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Tetrahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html:2175,inherit,inherited,2175,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html,1,['inherit'],['inherited']
Modifiability,"nLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; removeOnPluginCleanupCallbacks(const std::string &key)sofa::helper::system::PluginManager; removeOnPluginLoadedCallback(const std::string &key)sofa::helper::system::PluginManager; s_gui_postfixsofa::helper::system::PluginManagerstatic; unloadedPlugins() constsofa::helper::system::PluginManager; unloadPlugin(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; writeToIniFile(const std::string &path)sofa::helper::system::PluginManager.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:2943,plugin,plugin,2943,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,16,"['Plugin', 'plugin']","['PluginLoadStatus', 'PluginManager', 'PluginManagerstatic', 'PluginMap', 'plugin']"
Modifiability,"nLoop Class Referenceabstract . #include <BaseAnimationLoop.h>; Component responsible for main animation algorithms, managing how and when mechanical computation happens in one animation step. ; More... Inheritance diagram for sofa::core::behavior::BaseAnimationLoop:. [legend]; Detailed Description; Component responsible for main animation algorithms, managing how and when mechanical computation happens in one animation step. ; This class can optionally replace the default computation scheme of computing collisions then doing an integration step.; Note that it is in a preliminary stage, hence its functionalities and API will certainly change soon. . Public Attributes; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_resetTime;  Stores starting time of the simulation. More...;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html:1244,inherit,inherited,1244,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,1,['inherit'],['inherited']
Modifiability,"nManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; removeOnPluginCleanupCallbacks(const std::string &key)sofa::helper::system::PluginManager; removeOnPluginLoadedCallback(const std::string &key)sofa::helper::system::PluginManager; s_gui_postfixsofa::helper::system::PluginManagerstatic; unloadedPlugins() constsofa::helper::system::PluginManager; unloadPlugin(const std::string &path, st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:2432,Plugin,PluginManagerfriend,2432,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['Plugin'],['PluginManagerfriend']
Modifiability,"nSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz)=0;  ; virtual void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &)=0;  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:2565,inherit,inherited,2565,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,2,['inherit'],['inherited']
Modifiability,"nSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ClusteringEngine, DataTypes), core::DataEngine);  ;  ClusteringEngine ();  ;  ~ClusteringEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:3491,inherit,inherited,3491,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,1,['inherit'],['inherited']
Modifiability,"nSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html:3263,inherit,inherited,3263,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,1,['inherit'],['inherited']
Modifiability,"nSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularAnisotropicFEMForceField, DataTypes), SOFA_TEMPLATE(TriangularFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeMaterialStiffness (int i, Index &a, Index &b, Index &c) override;  ; void getFiberDir (int element, Deriv &dir);  ; void createTriangleInfo (Index triangleIndex, TriangleFiberDirection &, const core::topology::BaseMeshTopology::Triangle &t, const sofa::type::vector< unsigned int > &, const sofa::type::vector< SReal > &);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void computeElementStiffnessMatrix (type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const Materi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:6727,inherit,inherited,6727,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,n_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch – SOFA. SOFA - Topic Tag: prestretch. /problem-configuring-sofa; . /feed; ; Problem configuring SOFA – SOFA. SOFA - Topic Tag: Problem configuring SOFA. /problem-for-beam-mass-simulation; . /feed; ; Problem for beam-mass simulation. – SOFA. SOFA - Topic Tag: Problem for beam-mass simulation. /problem-with-linea,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464502,plugin,plugins,464502,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"n_tristate (const tristate &lhs, const tristate &rhs);  ; tristate merge_tristate (const tristate &previous, const tristate &current);  ; tristate difference_tristate (const tristate &previous, const tristate &current);  . Variables; template class SOFA_CORE_API VisualState< Vec3Types >;  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. The enumeration used to describe potentially supported graphics API. . EnumeratorAPI_OpenGL ; API_OGRE ; API_OpenSceneGraph ; API_OpenSG . Function Documentation. ◆ difference_displayFlags(). SOFA_CORE_API DisplayFlags sofa::core::visual::difference_displayFlags ; (; const DisplayFlags & ; previous, . const DisplayFlags & ; current . ). ◆ difference_tristate(). tristate sofa::core::visual::difference_tristate ; (; const tristate & ; previous, . const tristate & ; current . ). inline . ◆ fusion_tristate(). tristate sofa::core::visual::fusion_tristate ; (; const tristate & ; lhs, . const tristate & ; rhs . ). inline . ◆ merge_displayFlags(). SOFA_CORE_API DisplayFlags sofa::core::visual::merge_displayFlags ; (; const DisplayFlags & ; previous, . const DisplayFlags & ; current . ). ◆ merge_tristate(). tristate sofa::core::visual::merge_tristate ; (; const tristate & ; previous, . const tristate & ; current . ). inline . ◆ operator<<() [1/2]. std::ostream & sofa::core::visual::operator<< ; (; std::ostream & ; os, . const DisplayFlags & ; flags . ). ◆ operator<<() [2/2]. std::ostream & sofa::core::visual::operator<< ; (; std::ostream & ; os, . const FlagTreeItem & ; root . ). ◆ operator>>() [1/2]. std::istream & sofa::core::visual::operator>> ; (; std::istream & ; in, . DisplayFlags & ; flags . ). ◆ operator>>() [2/2]. std::istream & sofa::core::visual::operator>> ; (; std::istream & ; in, . FlagTreeItem & ; root . ). Variable Documentation. ◆ VisualState< Vec3Types >. template class SOFA_CORE_API sofa::core::visual::VisualState< Vec3Types >. sofacorevisual; Generated on Mon Nov 11 2024 03:16:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html:3864,Variab,Variable,3864,api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,1,['Variab'],['Variable']
Modifiability,"nableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOptions. QGroupBox* sofa::gui::qt::QTopologyOperation::advancedOptions. protected . ◆ meshType1. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType1. protected . ◆ meshType2. QRadioButton* sofa::gui::qt::QTopologyOperation::meshType2. protected . ◆ operationChoice. QComboBox* sofa::gui::qt::QTopologyOperation::operationChoice. protected . ◆ scaleSlider. QSlider* sofa::gui::qt::QTopologyOperation::scaleSlider. protected . ◆ scaleValue. QSpinBox* sofa::gui::qt::QTopologyOperation::scaleValue. protected . Constructor details. ◆ QTopologyOperation(). sofa::gui::qt::QTopologyOperation::QTopologyOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QTopologyOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUTTON ; b . ). inlineoverridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ getScale(). double sofa::gui::qt::QTopologyOperation::getScale ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ getTopologicalOperation(). int sofa::gui::qt::QTopologyOperation::getTopologicalOperation ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ getVolumicMesh(). bool sofa::gui::qt::QTopologyOperation::getVolumicMesh ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::TopologyOperation. ◆ setEnableBox. void sofa::gui::qt::QTopologyOperation::setEnableBox ; (; int ; i). slot . sofaguiqtQTopologyOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:3538,config,configure,3538,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,4,['config'],['configure']
Modifiability,"nagerSecondaryPass Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::VisualManagerSecondaryPass Class Reference . #include <VisualManagerSecondaryPass.h>; Render pass element: render the relevant tagged objects in a FBO. ; More... Inheritance diagram for sofa::gl::component::shader::VisualManagerSecondaryPass:. [legend]; Detailed Description; Render pass element: render the relevant tagged objects in a FBO. . Public Attributes; Data< sofa::core::objectmodel::TagSet > input_tags;  list of input passes used as source textures More...;  ; Data< sofa::core::objectmodel::TagSet > output_tags;  output reference tag (use it if the resulting fbo is used as a source for another secondary pass) More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  ;  Public Attributes inherited from sofa::gl::component::shader::VisualManagerPass; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:1024,inherit,inherited,1024,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,2,['inherit'],['inherited']
Modifiability,"nal) More...;  ; bool m_isTotalForceUsed;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ConstantForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Init function. More...;  ; void addForce (const core::MechanicalParams *params, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  Add the forces. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  Constant force has null variation. More...;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  Constant force has null variation. More...;  ; virtual void addKToMatrix (const sofa::core::behavior::MultiMatrixAccessor *, SReal);  Constant force has null variation. More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; SReal getPotentialEnergy ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:4139,inherit,inherited,4139,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,1,['inherit'],['inherited']
Modifiability,"name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ComplementaryROI, DataTypes), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ;  ComplementaryROI ();  ;  ~ComplementaryROI () override;  ; void doUpdate () override;  Update. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i.html:2786,variab,variables,2786,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i.html,1,['variab'],['variables']
Modifiability,"name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::component::collision::response::contact::ContactIdentifier; sofa::core::collision::DetectionOutput::ContactId id;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(FrictionContact, TCollisionModel1, TCollisionModel2, ResponseDataTypes), core::collision::Contact);  ; void cleanup () override;  ; std::pair< core::CollisionModel *, core::CollisionModel * > getCollisionModels () override;  Get the pair of collision models which are in contact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:3055,inherit,inherited,3055,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,1,['inherit'],['inherited']
Modifiability,"name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(OscillatorProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes));  ;  OscillatorProjectiveConstraint (core::behavior::MechanicalState< TDataTypes > *mstate=nullptr);  ;  ~OscillatorProjectiveConstraint () override;  ; OscillatorProjectiveConstraint< TDataTypes > * addConstraint (unsigned index, const Coord &mean, const Deriv &amplitude, Real pulsation, Real phase);  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:3444,inherit,inherited,3444,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:12895,variab,variables,12895,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,2,['variab'],['variables']
Modifiability,"name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:7799,variab,variables,7799,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,8,['variab'],['variables']
Modifiability,"name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:4919,variab,variables,4919,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,4,['variab'],['variables']
Modifiability,"name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Static Protected Member Functions; template<class EigenSparseMatrixType > ; static EigenSparseMatrixType * getMatrix (const type::vector< sofa::linearalgebra::BaseMatrix * > *matrices);  Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::testing::NumericTest< _Mapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:6422,inherit,inherited,6422,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,2,['inherit'],['inherited']
Modifiability,"namedData< CPos > f_origin;  ; sofa::core::objectmodel::RenamedData< CPos > f_normal;  ; sofa::core::objectmodel::RenamedData< SReal > f_drawSize;  ; IndexSubsetData d_indices;  the particles to project More...;  ; Data< CPos > d_origin;  A point in the plane. More...;  ; Data< CPos > d_normal;  Normal vector to the plane. More...;  ; Data< SReal > d_drawSize;  Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) More...;  ; SingleLink< PlaneProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PlaneProjectiveConstraintInternalData< DataTypes > > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:1870,inherit,inherited,1870,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"namedData< type::vector< Real > > f_restDistances;  ; Data< type::vector< unsigned > > d_indices;  Indices of the parent points. More...;  ; Data< InVecCoord > d_targetPositions;  Positions to compute the distances from. More...;  ; Data< type::vector< Real > > d_restDistances;  Rest lengths of the connections. More...;  ; Data< float > d_showObjectScale;  Scale for object display. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:2269,inherit,inherited,2269,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['inherit'],['inherited']
Modifiability,"names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TetrahedronCollisionModel, core::CollisionModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void resize (sofa::Size size) override;  Set the number of elements. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void draw (const core::visual::VisualParams *, sofa::Index index) override;  Render an collision element. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * getMechanicalState ();  ;  Public Member Functions inherited from sofa::core::CollisionModel;  SOFA_ABSTRACT_CLASS (CollisionModel, objectmodel::BaseObject);  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; bool empty () const;  Return true if there are no elements. More...;  ; Size getSize () const;  Get the number of elements. More...;  ; bool getSelfCollision () const;  Return true if this model process self collision. More...;  ; void setSelfCollision (bool _bSelfCollision);  set a value to bSelfCollision More...;  ; Size getNumberOfContacts () const;  Get the number of contacts attached to the collision model. More...;  ; void setNumberOfContacts (Size i);  Set the number of contacts attached to the collision model. More...;  ; Iterator begin ();  Return an iterator to the first element. More...;  ; Iterator end ();  Return an iterator pointing after the last element. More...;  ; CollisionModel * getNext ();  Return the next (finer / lower / child level) CollisionModel in the hierarchy. More...;  ; Col",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:5524,inherit,inherited,5524,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,1,['inherit'],['inherited']
Modifiability,"names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; template<class Matrix > ; static void addToMatrix (Matrix *globalMatrix, const unsigned int offsetRow, const unsigned int offsetCol, const Mat &localMatrix);  . Attribute details. ◆ d_localRange. template<class DataTypes > . Data< type::Vec<2,int> > sofa::component::solidmechanics::spring::QuadBendingSprings",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:25881,inherit,inherited,25881,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,1,['inherit'],['inherited']
Modifiability,"names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; template<class Matrix > ; static void addToMatrix (Matrix *globalMatrix, const unsigned int offsetRow, const unsigned int offsetCol, const Mat &localMatrix);  . Attribute details. ◆ l_topology. template<class DataTypes > . SingleLink<TriangleBendingSprings<DataTypes>, sofa::core::topology::BaseMeshTopology, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html:25284,inherit,inherited,25284,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,1,['inherit'],['inherited']
Modifiability,"names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; template<class Matrix > ; static void addToMatrix (Matrix *globalMatrix, const unsigned int offsetRow, const unsigned int offsetCol, const Mat &localMatrix);  . Constructor details. ◆ RepulsiveSpringForceField() [1/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::RepulsiveSpringForce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html:25023,inherit,inherited,25023,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"namic::EdgeSetTopologyContainer Class Reference . #include <EdgeSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::EdgeSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of edges and provides access to the adjacency between points and edges . Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:1256,inherit,inherited,1256,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"napingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ; virtual int getIncisionMethod () const;  ; virtual int getSnapingBorderValue () const;  ; virtual int getSnapingValue () const;  ; virtual bool getCompleteIncision ();  ; virtual bool getKeepPoint ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional In",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html:1529,inherit,inherited,1529,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,6,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"nce diagram for sofa::component::collision::response::mapper::ContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::collision::response::mapper::ContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >; Mapper for LineModel. . Public Member Functions; sofa::Index addPoint (const Coord &P, sofa::Index index, Real &);  ; sofa::Index addPointB (const Coord &, sofa::Index index, Real &, const type::Vec3 &baryP);  ; sofa::Index addPointB (const Coord &P, sofa::Index index, Real &r);  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Size, sofa::Size);  ;  BarycentricContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; void cleanup () override;  ; MMechanicalState * createMapping (const char *name=""contactPoints"") override;  ; void resize (sofa::Size size) override;  ; void update () override;  ; void updateXfree () override;  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; virtual ~BaseContactMapper ();  ; virtual void resize (Size size)=0;  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >; MCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gea471e7548debf57be3bb96db0509f8cf.html:1244,inherit,inherited,1244,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gea471e7548debf57be3bb96db0509f8cf.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gea471e7548debf57be3bb96db0509f8cf.html,2,['inherit'],['inherited']
Modifiability,"nce diagram for sofa::simulation::BehaviorUpdatePositionVisitor:. [legend]; Detailed Description; Update the position of a new simulation step . Protected Attributes; SReal dt;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  BehaviorUpdatePositionVisitor (const core::ExecParams *params, SReal _dt);  ; void processBehaviorModel (simulation::Node *node, core::BehaviorModel *b);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setDt (SReal _dt);  ; SReal getDt ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::Vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html:1266,inherit,inherited,1266,api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,2,['inherit'],['inherited']
Modifiability,"nce. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::visual::VisualState< DataTypes > Class Template Reference . #include <VisualState.h>. Inheritance diagram for sofa::core::visual::VisualState< DataTypes >:. [legend]. Public Attributes; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (VisualState, SOFA_TEMPLATE(core::State, defaulttype::V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html:1021,inherit,inherited,1021,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,1,['inherit'],['inherited']
Modifiability,"nciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(NearestPointROI, DataTypes), sofa::core::DataEngine, SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes));  ;  NearestPointROI (core::behavior::MechanicalState< DataTypes > *=nullptr, core::behavior::MechanicalState< DataTypes > *mm2=nullptr);  ;  ~NearestPointROI () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:3770,inherit,inherited,3770,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"nciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(StartNavigationButtonSetting, MouseButtonSetting)sofa::gui::component::StartNavigationButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StartNavigationButtonSetting()sofa::gui::component::StartNavigationButtonSettinginlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html:10069,Config,ConfigurationSetting,10069,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,1,['Config'],['ConfigurationSetting']
Modifiability,"nclude <AssembleGlobalVectorFromLocalVectorVisitor.h>. Inheritance diagram for sofa::component::linearsystem::AssembleGlobalVectorFromLocalVectorVisitor:. [legend]; Detailed Description; Copy a vector stored in a BaseMechanicalState into a global vector of type BaseVector. The copy location is based on a built MappingGraph. . Protected Attributes; sofa::core::ConstMultiVecId m_src;  The vector id to copy in the global vector. More...;  ; sofa::linearalgebra::BaseVector * m_globalVector { nullptr};  The global vector where all the local vectors will be copied into. More...;  ; const MappingGraph & m_mappingGraph;  Structure used to identify where in the global vector the local vectors will be copied into. More...;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  AssembleGlobalVectorFromLocalVectorVisitor (const core::ExecParams *params, const MappingGraph &mappingGraph, sofa::core::ConstMultiVecId src, linearalgebra::BaseVector *globalVector);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assemble_global_vector_from_local_vector_visitor.html:1317,inherit,inherited,1317,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assemble_global_vector_from_local_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assemble_global_vector_from_local_vector_visitor.html,1,['inherit'],['inherited']
Modifiability,"nclude <DispatchFromGlobalVectorToLocalVectorVisitor.h>. Inheritance diagram for sofa::component::linearsystem::DispatchFromGlobalVectorToLocalVectorVisitor:. [legend]; Detailed Description; Copy the values stored in a global vector to the local vectors stored in teach BaseMechanicalState The copy location is based on a built MappingGraph. . Protected Attributes; sofa::core::MultiVecId m_dst;  The vector id to copy from the global vector. More...;  ; sofa::linearalgebra::BaseVector * m_globalVector { nullptr};  The global vector containing the values to be copied. More...;  ; const MappingGraph & m_mappingGraph;  Structure used to identify where in the global vector the local vectors will be copied from. More...;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DispatchFromGlobalVectorToLocalVectorVisitor (const core::ExecParams *params, const MappingGraph &mappingGraph, sofa::core::MultiVecId dst, linearalgebra::BaseVector *globalVector);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html:1321,inherit,inherited,1321,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html,1,['inherit'],['inherited']
Modifiability,"nclude <SolidTypes.h>; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Wrench:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Wrench; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Wrench (const Vec3 &force, const Vec3 &torque);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html:1047,inherit,inherited,1047,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Static Protected Member Functions; static unsigned int DerivConstrainedSize (bool freeRotations);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Attribute details. ◆ activeFlags. template<class",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:23030,inherit,inherited,23030,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisions. sofa::type::vector<core::collision::DetectionOutput*> sofa::component::collision::response::contact::BaseRayContact::collisions. protected . ◆ model1. CollisionModel1* sofa::component::collision::response::contact::BaseRayContact::model1. protected . Constructor details. ◆ BaseRayContact(). sofa::component::collision::response::contact::BaseRayContact::BaseRayContact ; (; CollisionModel1 * ; model1, . core::collision::Intersection * ; instersectionMethod . ). protected . ◆ ~BaseRayContact(). sofa::component::collision::response::contact::BaseRayContact::~BaseRayContact ; (; ). overrideprotected . Function details. ◆ createResponse(). void sofa::component::collision::response::contact::BaseRayContact::createResponse ; (; core::objectmodel::BaseContext * ; ). inlineoverridevirtual . Implements sofa::core::collision::Contact. ◆ getDetectionO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html:14327,inherit,inherited,14327,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contactIndex. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . ContactIndexMap sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::contactIndex. protected . Mapping of contactids to force element (+1, so that 0 means not active). This allows to ignore duplicate contacts, and preserve information associated with each contact point over time . ◆ ff. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . ResponseForceField::SPtr sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::ff. protected . ◆ intersectionMethod. template<class TCollisionModel1 , class TCollisionMo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html:14963,inherit,inherited,14963,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contactIndex. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . ContactIndexMap sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::contactIndex. protected . Mapping of contactids to force element (+1, so that 0 means not active). This allows to ignore duplicate contacts, and preserve information associated with each contact point over time . ◆ d_keepAlive. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . Data<bool> sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::d_keepAlive. set to true to keep this contact alive even after collisions are no longer detected . ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:15124,inherit,inherited,15124,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . std::vector< sofa::core::collision::DetectionOutput* > sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::contacts. protected . ◆ d_mu. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . Data<double> sofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::d_mu. protected . friction coefficient (0 for frictionless contacts) . ◆ d_tol. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . Data<double> sofa::component::collision::response::contact::FrictionContact< TCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:16053,inherit,inherited,16053,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. template<class TCollisionModel1 , class TCollisionModel2 > . std::vector< sofa::core::collision::DetectionOutput* > sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::contacts. protected . ◆ d_keepAlive. template<class TCollisionModel1 , class TCollisionModel2 > . Data<bool> sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::d_keepAlive. set to true to keep this contact alive even after collisions are no longer detected . ◆ f_keepAlive. template<class TCollisionModel1 , class TCollisionModel2 > . sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >::f_keepAlive. ◆ intersectionMethod. template<class TCollisionModel1 , class TCollis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html:15734,inherit,inherited,15734,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  MultiMapping ();  Constructor. More...;  ;  ~MultiMapping () override;  Destructor. More...;  ; void getVecInCoord (const MultiVecCoordId id, type::vector< InDataVecCoord * > &v) const;  ; void getConstVecInCoord (const ConstMultiVecCoordId id, type::vector< const InDataVecCoord * > &v) const;  ; void getVecInDeriv (const MultiVecDerivId id, type::vector< InDataVecDeriv * > &v) const;  ; void getConstVecInDeriv (const ConstMultiVecDerivId id, type::vector< const InDataVecDeriv * > &v) const;  ; void getMatInDeriv (const MultiMatrixDerivId id, type::vector< InDataMatrixDeriv * > &v) const;  ; void getConstMatInDeriv (const ConstMultiMatrixDerivId id, type::vector< const InDataMatrixDeriv * > &v) const;  ; void getVecOutCoord (const MultiVecCoordId id, type::vector< OutDataVecCoord * > &v) const;  ; void getConstVecOutCoord (const ConstMultiVecCoordId id, type::vector< const OutDataVecCoord * > &v) const;  ; void getVecOutDeriv (const MultiVecDerivId id, type::vector< OutDataVecDeriv * > &v) const;  ; void getConstVecOutDeriv (const ConstMultiVecDerivId id, type::vector< const OutDataVecDeriv * > &v) const;  ; void getMatOutDeriv (const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) const;  ; void getConstMatOutDeriv (const ConstMultiMatrixDerivId id, type::vector< const OutDataMatrixDeriv * > &v) const;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html:18686,inherit,inherited,18686,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:11035,inherit,inherited,11035,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,2,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ id. Data<std::string> sofa::gl::component::shader::OglShaderElement::id. protected . Name of element (corresponding with the shader) . ◆ indexShader. Data<unsigned int> sofa::gl::component::shader::OglShaderElement::indexShader. protected . Name of element (corresponding with the shader) . ◆ shaders. std::set<OglShader*> sofa::gl::component::shader::OglShaderElement::shaders. protected . Shader to use the elem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html:13424,inherit,inherited,13424,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,2,['inherit'],['inherited']
Modifiability,"nctions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ value. Data<std::string> sofa::gl::component::shader::OglShaderDefineMacro::value. protected . Set a value for define macro. . Constructor details. ◆ OglShaderDefineMacro(). sofa::gl::component::shader::OglShaderDefineMacro::OglShaderDefineMacro ; (; ). ◆ ~OglShaderDefineMacro(). sofa::gl::component::shader::OglShaderDefineMacro::~OglShaderDefineMacro ; (; ). override . Function details. ◆ getSEValue() [1/2]. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html:13728,inherit,inherited,13728,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,2,['inherit'],['inherited']
Modifiability,"nctions |; List of all members . sofa::simulation::MechanicalVisitor Class Reference . #include <MechanicalVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVisitor:. [legend]. Protected Attributes; const sofa::core::MechanicalParams * mparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html:893,inherit,inherited,893,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,2,['inherit'],['inherited']
Modifiability,"nctions |; Protected Member Functions |; List of all members . sofa::gui::component::AddFrameButtonSetting Class Reference . #include <AddFrameButtonSetting.h>. Inheritance diagram for sofa::gui::component::AddFrameButtonSetting:. [legend]. Public Member Functions;  SOFA_CLASS (AddFrameButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:1138,inherit,inherited,1138,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,2,['inherit'],['inherited']
Modifiability,"nctions;  VisualClearVisitor (core::visual::VisualParams *params);  ; void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html:1212,inherit,inherited,1212,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,2,['inherit'],['inherited']
Modifiability,"nd either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib3-physics-rigid; ; SOFA - Topic: Error: couldn’t import objects from stlib3.physics.rigid. /error-generating-sofa-vs2017; ; SOFA - Topic: [SOLVED] Error Generating Sofa VS2017. /error-in-building-sofa-20-06-version-on-ubuntu; ; SOFA - Topic: [SOLVED] Error in Building Sofa 20.06 version on Ubuntu. /error-in-building-sofa-using-cmake; . /feed; ; [SOLVED] Error in building SOFA using cmake – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /4; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /5; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /error-in-compiling-softrobots-plugin-cableconstraint-in-sofa-21-06-version; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED] ERROR in Simulation::animate() while testing. /error-into-use-the-linearsolverconstraintcorrection-with-sofacuda-types; ; SOFA - Topic: Error into use the LinearSolverConstraintCorrection with So",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:294590,config,configuring,294590,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['config'],['configuring']
Modifiability,"nd output types. ; More... Inheritance diagram for sofa::core::Mapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::Mapping< TIn, TOut >; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. . Public Attributes; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:1464,inherit,inherited,1464,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,1,['inherit'],['inherited']
Modifiability,nd sofa::core::objectmodel::DataFileName. ◆ getDefaultValueString(). template<class T > . std::string sofa::core::objectmodel::Data< T >::getDefaultValueString. overridevirtual . General case for printing default value. ; Implements sofa::core::objectmodel::BaseData. ◆ getNewInstance(). template<class T = void*> . BaseData* sofa::core::objectmodel::Data< T >::getNewInstance ; (; ). inlineoverridevirtual . Reimplemented from sofa::core::objectmodel::BaseData. ◆ getValue(). template<class T = void*> . const T& sofa::core::objectmodel::Data< T >::getValue ; (; ); const. inline . ◆ getValueString(). template<class T > . std::string sofa::core::objectmodel::Data< T >::getValueString. overridevirtual . General case for printing value. ; Implements sofa::core::objectmodel::BaseData. ◆ getValueTypeInfo(). template<class T = void*> . const sofa::defaulttype::AbstractTypeInfo* sofa::core::objectmodel::Data< T >::getValueTypeInfo ; (; ); const. inlineoverridevirtual . Get info about the value type of the associated variable. ; Implements sofa::core::objectmodel::BaseData. ◆ getValueTypeString(). template<class T > . std::string sofa::core::objectmodel::Data< T >::getValueTypeString ; (; ); const. overridevirtual . Get the name of the type of the value held in this Data. ; Implements sofa::core::objectmodel::BaseData. ◆ isCopyOnWrite(). template<class T = void*> . static constexpr bool sofa::core::objectmodel::Data< T >::isCopyOnWrite ; (; ). inlinestaticconstexpr . ◆ operator=() [1/2]. template<class T = void*> . Data& sofa::core::objectmodel::Data< T >::operator= ; (; const Data< T > & ; ). delete . ◆ operator=() [2/2]. template<class T = void*> . void sofa::core::objectmodel::Data< T >::operator= ; (; const T & ; value). inline . ◆ printValue(). template<class T > . void sofa::core::objectmodel::Data< T >::printValue ; (; std::ostream & ; out); const. overridevirtual . General case for printing default value. ; Implements sofa::core::objectmodel::BaseData. ◆ read() [1/5]. te,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:15799,variab,variable,15799,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['variab'],['variable']
Modifiability,"nd the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual void apply (const MechanicalParams *mparams=mechanicalparams::defaultInstance(), MultiVecCoordId outPos=VecCoordId::position(), ConstMultiVecCoordId in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:1671,inherit,inherited,1671,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['inherit'],['inherited']
Modifiability,"nd velocity vectors. ; More... Inheritance diagram for sofa::core::BaseState:. [legend]; Detailed Description; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel). . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html:1436,inherit,inherited,1436,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,1,['inherit'],['inherited']
Modifiability,"nd]; Detailed Description; This class, called Hexa2TetraTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = HexahedronSetTopology OUTPUT TOPOLOGY = TetrahedronSetTopology; Tetra2TriangleTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Attributes; sofa::core::objectmodel::RenamedData< bool > swapping;  ; sofa::core::objectmodel::Data< bool > d_swapping;  Boolean enabling to swapp hexa-edges in order to avoid bias effect. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Hexa2TetraTopologicalMappi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html:1461,inherit,inherited,1461,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,"nd]; Detailed Description; indicates that some triangles are about to be moved (i.e some/all of their vertices have just been moved) TrianglesMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::TriangleID > trianglesAroundVertexMoved;  . Public Member Functions;  TrianglesMoved_Removing (const sofa::type::vector< Topology::TriangleID > &triangleShell);  ;  ~TrianglesMoved_Removing () override;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ trianglesAroundVertexMoved. sofa::type::vector< Topology::TriangleID > sofa::core::topology::TrianglesMoved_Removing::trianglesAroundVertexMoved. Constructor details. ◆ TrianglesMoved_Removing(). sofa::core::topology::TrianglesMoved_Removing::TrianglesMoved_Removing ; (; const sofa::type::vector< Topology::TriangleID > & ; triangleShell). inline . ◆ ~TrianglesMoved_Removing(). sofa::core::topology::TrianglesMoved_Removing::~TrianglesMoved_Removing ; (; ). override . Function details. ◆ getIndexArray(). const sofa::type::vector< Topology::TriangleID >& sofa::core::topology::TrianglesMoved_Removing::getIndexArray ; (; ); const. inline . sofacoretopologyTrianglesMoved_Removing; Generated on Mon Nov 11 2024 03:1",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing.html:1332,inherit,inherited,1332,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___removing.html,1,['inherit'],['inherited']
Modifiability,"ndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override;  ;  Protected Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >; virtual void add (const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; void indexCheckedAdd (sofa::SignedIndex row, sofa::SignedIndex col, const T &value);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >; std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > indexVerificationStrategy;  ;  Static Public Attributes inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >; static constexpr core::matrixaccumulator::Contribution contribution = c;  ;  Static Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >; static std::string GetCustomTemplateName ();  . Attribute details. ◆ m_mappedMatrix. template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . std::shared_ptr<LocalMappedMatrixType<TBlockType> > sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::m_mappedMatrix. protected . Constructor details. ◆ AssemblingMappedMatrixAccumulator(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::AssemblingMappedMatrixAccumulator. protected . Function details. ◆ add() [1/4]. template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:5507,inherit,inherited,5507,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,3,['inherit'],['inherited']
Modifiability,"ndex, Weight > > _finalWeights;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:2205,inherit,inherited,2205,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability,"ndice node in the list of constrained nodes, which is imposed the maximum displacement. More...;  ; core::objectmodel::Data< type::vector< Real > > d_imposedDisplacmentOnMacroNodes;  and u1 u2 u3 u4 u5 u6 u7 u8 for 3d case More...;  ; Data< Real > d_X0;  Size of specimen in X-direction. More...;  ; Data< Real > d_Y0;  Size of specimen in Y-direction. More...;  ; Data< Real > d_Z0;  Size of specimen in Z-direction. More...;  ; sofa::core::objectmodel::RenamedData< VecBool > movedDirections;  ; core::objectmodel::Data< VecBool > d_movedDirections;  Defines the directions in which the particles are moved: true (or 1) for fixed, false (or 0) for free. More...;  ; SingleLink< PartialLinearMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:4050,inherit,inherited,4050,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ndices are numbered from the end of the MState DOFs vector. More...;  ; Data< VecDeriv > d_forces;  Per-point forces. More...;  ; sofa::core::objectmodel::lifecycle::RemovedData d_force {this, ""v23.12"", ""v24.06"", ""force"", ""Replace \""force\"" by using the \""forces\"" data (providing only one force value) (PR #4019)}""};  Force applied at each point, if per-point forces are not specified. More...;  ; Data< Deriv > d_totalForce;  Sum of the forces applied at each point, if per-point forces are not specified. More...;  ; Data< SReal > d_showArrowSize;  S for drawing. The sign changes the direction, 0 doesn't draw arrow. More...;  ; Data< sofa::type::RGBAColor > d_color;  display color More...;  ; SingleLink< ConstantForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:1850,inherit,inherited,1850,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,1,['inherit'],['inherited']
Modifiability,"ndices, keyTimes, keyVelocity More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyVelocities ();  ; void addKeyVelocity (Real time, Deriv movement);  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const Mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:4171,inherit,inherited,4171,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ndicesToRemove;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TopologyBoundingTrasher, DataTypes), core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:3934,variab,variables,3934,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['variab'],['variables']
Modifiability,"nding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  BaseMouseInteractor ();  ;  Protected Member Functions inherited from sofa::core::BehaviorModel;  BehaviorModel ();  ;  ~BehaviorModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:12726,inherit,inherited,12726,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,6,['inherit'],['inherited']
Modifiability,"nding to . More...;  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addToMatrix (sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale);  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:15609,inherit,inherited,15609,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,8,['inherit'],['inherited']
Modifiability,"ndle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; PositionBasedDynamicsProjectiveConstraintInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html:2830,inherit,inherited,2830,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ndow-filenew; ; SOFA - Topic: [SOLVED] Can not create ""New"" from RunSofa Window> File>New. /cannot-import-sofa-gui-in-python; ; SOFA - Topic: [SOLVED] Cannot import Sofa.Gui in python. /cannot-open-many-files; ; SOFA - Topic: cannot open many files. /can-not-open-the-editor-sofa-binaries-v19-04-on-win-10; ; SOFA - Topic: Can not open the editor Sofa BINARIES (v19.04) on win 10. /can-not-open-the-tutorials; . /feed; ; [SOLVED] Can not open the tutorials – SOFA. SOFA - Topic: [SOLVED] Can not open the tutorials. /cannot-run-the-simulation; . /embed; ; SOFA - Topic: [SOLVED] Cannot run the simulation. SOFA - Topic: [SOLVED] Cannot run the simulation. /cannot-use-add-node; ; SOFA - Topic: [SOLVED] Cannot use ‘Add Node’. /can-sofa-be-called-from-my-system-python-as-part-of-a-larger-tool-chain; ; SOFA - Topic: [SOLVED] Can SOFA be called from my system python as part of a larger tool chain?. /can-sofa-cut-the-volume-eg-liver; ; SOFA - Topic: Can Sofa cut the volume (eg liver)?. /cant-build-pluginexample; . /feed; ; [SOLVED] Can’t build PluginExample – SOFA. SOFA - Topic: [SOLVED] Can’t build PluginExample. /cant-build-sofa-with-the-stlib-and-soft-robots-plugin; ; SOFA - Topic: Cant build sofa with the STLIB and soft robots plugin. /cant-find-runsofa-in-bin-directory; . /feed; ; [SOLVED] can’t find runsofa in bin directory – SOFA. SOFA - Topic: [SOLVED] can’t find runsofa in bin directory. /cant-find-the-file-sofapython3_d-lib; ; SOFA - Topic: cant find the file SofaPython3_d.lib. /cant-launch-runsofa; . /feed; ; [SOLVED] Can’t launch runSofa – SOFA. SOFA - Topic: [SOLVED] Can’t launch runSofa. /cant-launch-runsofa-exe; ; SOFA - Topic: [SOLVED] can't launch runSofa.exe. /cant-load-my-off-file-using-meshoffloader; ; SOFA - Topic: [SOLVED] Can't load my .off file using MeshOffLoader. /cardiac-guide-wire-modelling; ; SOFA - Topic: [SOLVED] Cardiac Guide-Wire Modelling. /carving-algorithm; ; SOFA - Topic: Carving algorithm ?. /carving-grid-topology; ; SOFA - Topic: Carving Grid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:270059,plugin,pluginexample,270059,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['pluginexample']
Modifiability,"ne ();  DisplacementMatrixEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >;  SOFA_CLASS (SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4), sofa::core::DataEngine);  ;  DisplacementTransformEngine ();  DisplacementTransformEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:3172,inherit,inherited,3172,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"ne::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::isVisible. is Visible ? . Constructor details. ◆ ExtrudeQuadsAndGenerateHexas(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::ExtrudeQuadsAndGenerateHexas. protected . ◆ ~ExtrudeQuadsAndGenerateHexas(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::~ExtrudeQuadsAndGenerateHexas ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ExtrudeQuadsAndGenerateHexas< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateExtrudeQuadsAndGenerateHexas; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:22076,variab,variables,22076,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['variab'],['variables']
Modifiability,"nearElasticity_test, DataTypes);  ;  TYPED_TEST (LinearElasticity_test, testTractionTensorMass);  ;  TYPED_TEST (LinearElasticity_test, testTractionCorotational);  ; template<class DataTypes > ; PatchTestStruct< DataTypes > createRegularGridScene (simulation::Node::SPtr root, typename DataTypes::Coord startPoint, typename DataTypes::Coord endPoint, int numX, int numY, int numZ, sofa::type::Vec< 6, SReal > entireBoxRoi, sofa::type::Vec< 6, SReal > inclusiveBox, sofa::type::Vec< 6, SReal > includedBox);  Create a scene with a regular grid and an affine constraint for patch test. More...;  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initSofaConfig ();  ;  TEST_F (TemplateAliasTest, Register);  ;  TEST_F (AdvancedTimerTest, IsEnabled);  ;  TEST_F (AdvancedTimerTest, SetOutputType);  ;  TEST_F (AdvancedTimerTest, End);  ; template<class mat > ; helper::OwnershipSPtr< mat > convertSPtr (const linearalgebra::BaseMatrix *m);  ;  TEST_F (DefaultAnimationLoop_test, testOneStep);  . Variables; const double pressureArray [] = {0.6, 0.2, -0.2, -0.6};  ; const size_t sizePressureArray = sizeof(pressureArray)/sizeof(pressureArray[0]);  ; const double youngModulusArray [] = {1.0,2.0};  ; const size_t sizeYoungModulusArray = sizeof(youngModulusArray)/sizeof(youngModulusArray[0]);  ; const double poissonRatioArray [] = {0.0,0.3,0.49};  ; const size_t sizePoissonRatioArray = sizeof(poissonRatioArray)/sizeof(poissonRatioArray[0]);  . Typedef Documentation. ◆ Coord_t. template<typename DataTypes > . using sofa::Coord_t = typedef typename DataTypes::Coord. ◆ DataMatrixDeriv_t. template<typename DataTypes > . using sofa::DataMatrixDeriv_t = typedef core::objectmodel::Data<MatrixDeriv_t<DataTypes> >. ◆ DataTypes. typedef Types< Vec3Types > sofa::DataTypes. ◆ DataVecCoord_t. template<typename DataTypes > . using sofa::DataVecCoord_t = typedef core::objectmodel::Data<VecCoord_t<DataTypes> >. ◆ DataVecDeriv_t. template<typename DataTypes > . using sofa::DataVecDeriv_t = typedef core::objectmodel::Data<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html:4114,Variab,Variables,4114,api/master/sofa/html/namespacesofa.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html,1,['Variab'],['Variables']
Modifiability,"ned int > f_num;  Maximum number of points to select. More...;  ; Data< VecCoord > f_X0;  Rest position coordinates of the degrees of freedom. More...;  ; Data< SetIndex > f_indices;  Indices of the points contained in the ROI. More...;  ; Data< VecCoord > f_pointsInROI;  Points contained in the ROI. More...;  ; Data< type::vector< Real > > f_distanceInROI;  distance between the points contained in the ROI and the closest center. More...;  ; Data< SetIndex > f_indicesOut;  Indices of the points not contained in the ROI. More...;  ; Data< bool > p_drawSphere;  Draw sphere(s) More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< double > _drawSize;  rendering size for box and topological elements More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ProximityROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when var",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html:1800,inherit,inherited,1800,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"ned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageRAW(). sofa::helper::io::ImageRAW::ImageRAW ; (; ). ◆ ~ImageRAW(). sofa::helper::io::ImageRAW::~ImageRAW ; (; ). inlineoverride . Function details. ◆ getHeader() [1/2]. unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ). inline . ◆ getHeader() [2/2]. const unsigned char* sofa::helper::io::ImageRAW::getHeader ; (; ); const. inline . ◆ getHeaderSize(). unsigned sofa::helper::io::ImageRAW::getHeaderSize ; (; ); const. inline . ◆ initHeader(). void sofa::helper::io::ImageRAW::initHeader ; (; unsigned ; hsize). ◆ load(). bool sofa::helper::io::ImageRAW::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:2064,inherit,inherited,2064,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,7,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; virtual void swapPostProcess (Index i1, Index i2);  ; virtual void removePostProcess (sofa::Index elemId);  ; virtual void addPostProcess (sofa::Index dataLastId);  ; virtual void updateLastIndex (Index posLastIndex, Index newGlobalId);  ;  Protected Member Functions inherited from sofa::core::topology::TopologyData< ElementType, VecT >; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void linkToElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Point *);  Method to properly remove TopologyHandler. More...;  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Edge *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Triangle *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Quad *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Tetrahedron *);  ; void unlinkFromElementDataArray (sofa::core::topology::BaseMeshTopology::Hexahedron *);  ;  Protected Member Functions inherited from sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:17088,inherit,inherited,17088,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,1,['inherit'],['inherited']
Modifiability,"nent among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UniformVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void addForce (const core::MechanicalParams *, DataVecDeriv &, const DataVecCoord &, const DataVecDeriv &) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addBToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal bFact, unsigned int &offset) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *matrix) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *params, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix correspond",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html:3177,inherit,inherited,3177,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html,1,['inherit'],['inherited']
Modifiability,"nent; ; SOFA - Topic: [SOLVED] Question about variable meaning in collision component. /questionns-about-installation; ; SOFA - Topic: Questionns about installation. /question-on-tetrahedronhyperelasticityfemforcefield; ; SOFA - Topic: [SOLVED] Question on TetrahedronHyperelasticityFEMForceField. /questions-about-carvingmanager-omnisofa; . /feed; ; [SOLVED] Questions about CarvingManager & OmniSOFA – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Questions about CarvingManager & OmniSOFA. /5; ; SOFA - Topic: [SOLVED] Questions about CarvingManager & OmniSOFA. SOFA - Topic: [SOLVED] Questions about CarvingManager & OmniSOFA. /questions-about-setting-up-qtcreator; ; SOFA - Topic: [SOLVED] Questions about ""Setting up QtCreator"". /questions-about-sofa; . /feed; ; [SOLVED] What is SOFA dedicated to? How to use it as physics engine? – SOFA. SOFA - Topic: [SOLVED] What is SOFA dedicated to? How to use it as physics engine?. /questions-regarding-the-installation-of-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Questions regarding the installation of SofaPython3 plugin. /random-linear-force-field; ; SOFA - Topic: [SOLVED] Random Linear Force Field. /rayleigh-numerical-damping; . /feed; ; Rayleigh/Numerical damping – SOFA. SOFA - Topic: Rayleigh/Numerical damping. /read-data-from-external-file; ; SOFA - Topic: [SOLVED] Read data from external file. /reading-indices-of-fixedconstraint-from-an-ascii-file; ; SOFA - Topic: [SOLVED] Reading indices of FixedConstraint from an ascii file. /reading-stl-file-vertices-from-my-own-component; ; SOFA - Topic: [SOLVED] reading STL file vertices from my own component. /realistic-behavior-of-a-liver-and-its-skin; ; SOFA - Topic: [SOLVED] Realistic behavior of a liver and its skin. /realtime-fea-visualization-with-ros; ; SOFA - Topic: Realtime FEA visualization with ROS. /receive-realtime-force-feedback-in-batch-mode; ; SOFA - Topic: Receive realtime force feedback in batch mode. /recommendation-of-the-versions-for-sofa-dependencies; ; SOFA - Top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:374744,plugin,plugin,374744,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],['plugin']
Modifiability,"ner::dynamic::TriangleSetTopologyContainer Class Reference . #include <TriangleSetTopologyContainer.h>; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices ; More... Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyContainer:. [legend]; Detailed Description; : Object that stores a set of triangles and provides access to each triangle and its edges and vertices . Public Attributes; Data< sofa::type::vector< Triangle > > d_triangle;  provides the set of triangles. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the event",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:1281,inherit,inherited,1281,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"nergy (const MechanicalParams *mparams, const DataVecCoord &x1, const DataVecCoord &x2) const =0;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual void buildDampingMatrix (DampingMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange mul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html:2972,inherit,inherited,2972,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,1,['inherit'],['inherited']
Modifiability,"ners. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  MergeVisualModels ();  ;  ~MergeVisualModels () override;  ; void update ();  ;  Protected Member Functions inherited from sofa::gl::component::rendering3d::OglModel; void internalDraw (const core::visual::VisualParams *vparams, bool transparent) override;  Rendering method. More...;  ; void drawGroup (int ig, bool transparent);  ; void drawGroups (bool transparent);  ; virtual void pushTransformMatrix (float *matrix);  ; virtual void popTransformMatrix ();  ; GLenum getGLenum (const char *c) const;  ;  OglModel ();  ;  ~OglModel () override;  ;  Protected Member Functions inherited from sofa::component::visual::VisualModelImpl;  VisualModelImpl ();  Default constructor. More...;  ;  ~VisualModelImpl () override;  Default destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:25257,inherit,inherited,25257,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,"ner outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_average. template<class DataTypes > . Data<Coord> sofa::component::engine::analyze::AverageCoord< DataTypes >::d_average. result . ◆ d_indices. template<class DataTypes > . Data<VecIndex> sofa::component::engine::analyze::AverageCoord< DataTypes >::d_indices. indices of ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:17007,inherit,inherited,17007,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,3,['inherit'],['inherited']
Modifiability,"ner outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html:15464,inherit,inherited,15464,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,3,['inherit'],['inherited']
Modifiability,"ness &m, double youngModulus, double poissonRatio);  compute the hookean material matrix More...;  ; void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; void initLarge (const int i);  ; void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  ; virtual void accumulateForceLarge (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ; void initPolar (const int i);  ; void computeRotationPolar (Transformation &r, type::Vec< 8, Coord > &nodes);  ; virtual void accumulateForcePolar (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:24719,inherit,inherited,24719,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['inherit'],['inherited']
Modifiability,"ness > _elementStiffnesses;  ; Data< VecElementStiffness > d_elementStiffnesses;  Stiffness matrices per element (K_i) More...;  ; CompressedMatrix _stiffnesses;  ; SReal m_potentialEnergy;  ; topology::container::grid::SparseGridTopology * _sparseGrid;  ; sofa::core::objectmodel::RenamedData< VecCoord > _initialPoints;  ; Data< VecCoord > d_initialPoints;  Initial Position. More...;  ; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  ; HexahedronFEMForceFieldInternalData< DataTypes > * data;  ; type::vector< type::fixed_array< Coord, 8 > > _rotatedInitialElements;  The initials positions in its frame. More...;  ; type::vector< Transformation > _rotations;  ; type::vector< Transformation > _initialrotations;  ; bool _alreadyInit;  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:32572,inherit,inherited,32572,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,4,['inherit'],['inherited']
Modifiability,"ness. Default value is true. More...;  ; bool debug;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Tested API; }; { . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMax",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3325,inherit,inherited,3325,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,3,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:10624,inherit,inherited,10624,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,5,['inherit'],['inherited']
Modifiability,"new positions points . Public Attributes; sofa::type::vector< Topology::TetrahedronID > tetrahedraAroundVertexMoved;  ; const sofa::type::vector< Topology::Tetrahedron > tetrahedronArray2Moved;  . Public Member Functions;  TetrahedraMoved_Adding (const sofa::type::vector< Topology::TetrahedronID > &tetrahedronShell, const sofa::type::vector< Topology::Tetrahedron > &tetrahedronArray);  ;  ~TetrahedraMoved_Adding () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Tetrahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ tetrahedraAroundVertexMoved. sofa::type::vector< Topology::TetrahedronID > sofa::core::topology::TetrahedraMoved_Adding::tetrahedraAroundVertexMoved. ◆ tetrahedronArray2Moved. const sofa::type::vector< Topology::Tetrahedron > sofa::core::topology::TetrahedraMoved_Adding::tetrahedronArray2Moved. Constructor details. ◆ TetrahedraMoved_Adding(). sofa::core::topology::TetrahedraMoved_Adding::TetrahedraMoved_Adding ; (; const sofa::type::vector< Topology::TetrahedronID > & ; tetrahedronShell, . const sofa::type::vector< Topology::Tetrahedron > & ; tetrahedronArray . ). inline . ◆ ~TetrahedraMoved_Adding(). sofa::core::topology::TetrahedraMoved_Adding::~TetrahedraMoved_Adding ; (; ). override . Function details. ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding.html:1556,inherit,inherited,1556,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___adding.html,1,['inherit'],['inherited']
Modifiability,new-section-under-components-to-explain-how-to-makeedituse; ; SOFA - Topic: [SOLVED] Request for new Section under Components to explain how to make/edit/use. /request-to-complete-documentsusing-sofabasic-components; . /feed; ; [SOLVED] Request to complete Documents>Using SOFA>Basic Components – SOFA. SOFA - Topic: [SOLVED] Request to complete Documents>Using SOFA>Basic Components. /require-steps-to-build-sofa-on-windows-10; ; SOFA - Topic: Require steps to build Sofa on Windows 10. /reset-sofa-using-code; ; SOFA - Topic: Reset SOFA using code. /retrieve-sofa-scenes-opengl-viewport-from-within-a-component; ; SOFA - Topic: [SOLVED] Retrieve Sofa Scene's OpenGL Viewport from within a component. /reversing-the-direction-of-mesh-normals-and-changing-their-color; ; SOFA - Topic: [SOLVED] reversing the direction of mesh normals and changing their color. /rigid-body-on-floor; ; SOFA - Topic: [SOLVED] Rigid body on floor. /rigid-flexible-body-collisiondeformation-anatomy-modeling; ; SOFA - Topic: [SOLVED] Rigid flexible body collision/deformation (anatomy modeling). /rigidmapping-from-rigid3d-to-only-some-particles-of-fembody; . /embed; ; SOFA - Topic: [SOLVED] RigidMapping from Rigid3d to only some particles of FEMbody. SOFA - Topic: [SOLVED] RigidMapping from Rigid3d to only some particles of FEMbody. /rigid-models-flying-apart-when-colliding; ; SOFA - Topic: Rigid models flying apart when colliding. /rigid-multibody-modeling-in-sofa; ; SOFA - Topic: Rigid multibody modeling in SOFA. /rigid-objects-passing-through-deformable; ; SOFA - Topic: [SOLVED] Rigid objects passing through deformable. /robot-in-liquid-environment; ; SOFA - Topic: Robot in liquid environment. /rotate-boxroi-for-creating-force-fields-of-different-stiffness-in-actuator; ; SOFA - Topic: [SOLVED] Rotate BoxROI for creating force fields of different stiffness in actuator. /rotating-an-object-with-a-angular-velocity-and-conserving-collisions; ; SOFA - Topic: Rotating an object with an angular velocity and ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:377605,flexible,flexible-body-collisiondeformation-anatomy-modeling,377605,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['flexible'],"['flexible', 'flexible-body-collisiondeformation-anatomy-modeling']"
Modifiability,"next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CylinderCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TCylinder() [1/2]. template<class DataTypes > . sofa::component::collision::geometry::TCylinder< DataTypes >::TCylinder ; (; ParentModel * ; model, . Index ; index . ). inline . ◆ TCylinder() [2/2]. template<class DataTypes > . sofa::component::collision::geometry::TCylinder< DataTypes >::TCylinder ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ axis(). template<c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_cylinder.html:3593,inherit,inherited,3593,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_cylinder.html,1,['inherit'],['inherited']
Modifiability,"next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< TriangleCollisionModel< TDataTypes > >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ TTriangle() [1/4]. template<class DataTypes > . sofa::component::collision::geometry::TTriangle< DataTypes >::TTriangle ; (; ParentModel * ; model, . Index ; index . ). inline . ◆ TTriangle() [2/4]. template<class TDataTypes > . sofa::component::collision::geometry::TTriangle< TDataTypes >::TTriangle ; (; ). inline . ◆ TTriangle() [3/4]. template<class DataTypes > . sofa::component::collision::geometry",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_triangle.html:4134,inherit,inherited,4134,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_triangle.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_t_triangle.html,1,['inherit'],['inherited']
Modifiability,"nfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Constructor details. ◆ VisualClearVisitor(). sofa::simulation::VisualClearVisitor::VisualClearVisitor ; (; core::visual::VisualParams * ; params). inline . Function details. ◆ getClassName(). const char* sofa::simulation::VisualCle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html:3601,inherit,inherited,3601,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,6,['inherit'],['inherited']
Modifiability,"nfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Constructor details. ◆ VisualInitVisitor(). sofa::simulation::VisualInitVisitor::VisualInitVisitor ; (; core::visual::VisualParams * ; params). inline . Function details. ◆ getClassName(). const char* sofa::simulation::VisualInitVi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html:3605,inherit,inherited,3605,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,6,['inherit'],['inherited']
Modifiability,"nfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Protected Member Functions; void addCompareState (sofa::core::behavior::BaseMechanicalState *ms, simulation::Node *gnode);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Attribute details. ◆ counterCompareState. int sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_creator.html:3783,inherit,inherited,3783,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_creator.html,1,['inherit'],['inherited']
Modifiability,"nfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Protected Member Functions; void addCompareTopology (core::topology::BaseMeshTopology *topology, simulation::Node *gnode);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Attribute details. ◆ counterCompareTopology. int so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_creator.html:3810,inherit,inherited,3810,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_creator.html,1,['inherit'],['inherited']
Modifiability,"nformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ; void applyTriangleCreation (const type::vector< Index > &triangleAdded, const type::vector< core::topology::BaseMeshTopology::Triangle > &, const type::vector< type::vector< Index > > &, const type::vector< type::vector< SReal > > &);  ; void applyTriangleDestruction (const type::vector< Index > &triangleRemoved);  ; void applyPointDestruction (const type::vector< Index > &pointIndices);  Method to update. More...;  ; void applyPointRenumbering (const type::vector< Index > &pointToRenumber);  Method to update. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html:18182,inherit,inherited,18182,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,4,['inherit'],['inherited']
Modifiability,"ng &path, const BaseLink *link);  . Protected Member Functions;  TopologyChecker ();  } More...;  ;  ~TopologyChecker () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:14815,inherit,inherited,14815,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['inherit'],['inherited']
Modifiability,"ng &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedPlaneProjectiveConstraint ();  ;  ~FixedPlaneProjectiveConstraint ();  ; bool isPointInPlane (const Coord &p) const;  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:16678,inherit,inherited,16678,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,4,['inherit'],['inherited']
Modifiability,"ng &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  TriangularQuadraticSpringsForceField ();  ; virtual ~TriangularQuadraticSpringsForceField ();  ; sofa::core::topology::EdgeData< sofa::type::vector< EdgeRestInformation > > & getEdgeInfo ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html:16769,inherit,inherited,16769,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,4,['inherit'],['inherited']
Modifiability,"ng (SReal rayleighStiffness) const;  ; SReal mFactorIncludingRayleighDamping (SReal rayleighMass) const;  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to current position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to current velocity vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readF (const S *state) const;  Read access to current force vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDx (const S *state) const;  Read access to current dx vector (for implicit schemes) More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readDf (const S *state) const;  Read access to current df vector (for implicit schemes) More...;  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const MechanicalParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for meth",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:3808,inherit,inherited,3808,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['inherit'],['inherited']
Modifiability,"ng all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Friends; class PositionBasedDynamicsProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html:16449,inherit,inherited,16449,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"ng execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::helper::TriangleOctreeRoot; const SeqTriangles * octreeTriangles;  the triangles used as input to construct the octree More...;  ; const VecCoord * octreePos;  the positions of vertices used as input to construct the octree More...;  ; TriangleOctree * octreeRoot;  the first node of the octree More...;  ; int cubeSize;  the size of the octree cube More...;  . Public Member Functions;  SOFA_CLASS (TriangleOctreeModel, TriangleCollisionModel< sofa::defaulttype::Vec3Types >);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBoundingTree (int maxDepth=0) override;  Create or update the bounding volume hierarchy. More...;  ; void computeContinuousBoundingTree (SReal dt, int maxDepth=0) override;  Create or update the bounding volume hierarchy, accounting for motions within the given timestep. More...;  ; void buildOctree ();  init the octr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html:2433,inherit,inherited,2433,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,1,['inherit'],['inherited']
Modifiability,"ng long value) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *data, Index index, double value) const override;  Set the value at index of data from a scalar value. More...;  ; virtual void setTextValue (void *data, Index index, const std::string &value) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *data) const override;  ; void * getValuePtr (void *data) const override;  ; virtual const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Static Public Member Functions; static AbstractTypeInfo * get ();  . Protected Member Functions;  DataTypeInfoDynamicWrapper ();  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ DataTypeInfoDynamicWrapper(). template<class Info > . sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::DataTypeInfoDynamicWrapper ; (; ). inlineprotected . Function details. ◆ BaseType(). template<class Info > . const AbstractTypeInfo* sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). template<class Info > . sofa::Size sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::byteSize ; (; ); const. inlineoverridevirtual . The size in bytes of the ValueType For example, the size of a fixed_array<fixed_array<int, 2>, 3>` is 4 on most systems, as it is the",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html:3927,inherit,inherited,3927,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,1,['inherit'],['inherited']
Modifiability,"ng the environment variable specified by the parameter envVar. . ◆ FileRepository() [3/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const char * ; relativePath . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar and the relative path specified by the parameter relativePath. . ◆ FileRepository() [4/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar and the relative paths specified by the parameter paths. . ◆ FileRepository() [5/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const char * ; relativePath, . const fileKeysMap & ; iniFilesAndKeys . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar, the relative path specified by the parameter relativePath and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ FileRepository() [6/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths, . const fileKeysMap & ; iniFilesAndKeys . ). Initialize the set of paths using the environment variable specified by the parameter envVar, the relative paths specified by the parameter paths and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ ~FileRepository(). sofa::helper::system::FileRepository::~FileRepository ; (; ). Function details. ◆ addFirstPath(). void sofa::helper::system::FileRepository::addFirstPath ; (; const std::string & ; path). Adds a path to the front of the set of paths. . ◆ addLastPath(). void sofa::helper::system::FileRepository::addLastPath ; (; const std::string & ; path). Adds a path to the back of the set of paths. . ◆ cleanPath(). std::string sofa::helper::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:5433,variab,variable,5433,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,2,['variab'],['variable']
Modifiability,"ng with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ OglShaderMacro(). sofa::gl::component::shader::OglShaderMacro::OglShaderMacro ; (; ). protected . ◆ ~OglShaderMacro(). sofa::gl::component::shader::OglShaderMacro::~OglShaderMacro ; (; ). overrideprotected . Function details. ◆ getSEType(). ShaderElementType sofa::gl::component::shader::OglShaderMacro::getSEType ; (; ); const. inlineoverridevirtual . Returns the type of shader element (texture, macro, variable, or attribute) ; Implements sofa::core::visual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:13789,inherit,inherited,13789,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,2,['inherit'],['inherited']
Modifiability,ng-error-with-xitact-plugin; . /page; . /2; ; SOFA - Topic: Linking error with Xitact Plugin. /5; ; SOFA - Topic: Linking error with Xitact Plugin. /6; ; SOFA - Topic: Linking error with Xitact Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:341955,flexible,flexible-simulation,341955,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['flexible'],['flexible-simulation']
Modifiability,ng-examples-on-sofa_v20-12-02_defrost_linux; . /embed; ; SOFA - Topic: Issues with running examples on SOFA_v20.12.02_Defrost_Linux. SOFA - Topic: Issues with running examples on SOFA_v20.12.02_Defrost_Linux. /issue-using-bilateralinteractionconstraint; . /feed; ; Issue using BilateralInteractionConstraint – SOFA. SOFA - Topic: Issue using BilateralInteractionConstraint. /issue-when-changing-object-position-via-python-scene; . /embed; ; SOFA - Topic: Issue when changing object position via python scene. SOFA - Topic: Issue when changing object position via python scene. /issue-while-exporting-tetrahedron-mesh-generated-from-polyhedron; ; SOFA - Topic: [SOLVED] Issue while exporting tetrahedron mesh generated from polyhedron. /issue-with-cuda-examples; ; SOFA - Topic: Issue with CUDA examples. /issue-with-initializing-stiffspringforcefied; ; SOFA - Topic: [SOLVED] Issue with initializing StiffSpringForceFied. /issue-with-the-update-of-the-stiffness-variable-in-stiffspringff; ; SOFA - Topic: [SOLVED] Issue with the update of the stiffness variable in StiffSpringFF. /is-there-any-method-to-apply-inital-stress-state-in-sofa; ; SOFA - Topic: Is there any method to apply inital stress state in SOFA?. /is-there-any-plugin-for-leapmotion; . /feed; ; [SOLVED] Is there any plugin for LeapMotion? – SOFA. SOFA - Topic: [SOLVED] Is there any plugin for LeapMotion?. /is-trianglesettopologymodifierremovetrianglespostprocessing-empty; . /page; . /10; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /3; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /7; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /i-want-to-study-all-about-sofa; . /feed; ; [SOLVED] I want to study about SOFA – SOFA. SOFA - Topic: [SOLVED] I want to study about SOFA. /join-our-li,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:338303,variab,variable-in-stiffspringff,338303,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['variab'],"['variable', 'variable-in-stiffspringff']"
Modifiability,ng. /articulation; . /feed; ; Articulation – SOFA. SOFA - Topic Tag: Articulation. /articulationcenter; . /feed; ; ArticulationCenter – SOFA. SOFA - Topic Tag: ArticulationCenter. /articulation-rigid-orientation; . /feed; ; articulation; rigid; orientation – SOFA. SOFA - Topic Tag: articulation; rigid; orientation. /attach; . /feed; ; attach – SOFA. SOFA - Topic Tag: attach. /attachconstraint; . /feed; ; AttachConstraint – SOFA. SOFA - Topic Tag: AttachConstraint. /attachconstraint-surface-area-rigidmapping; . /feed; ; AttachConstraint surface area RigidMapping – SOFA. SOFA - Topic Tag: AttachConstraint surface area RigidMapping. /autocollision; . /feed; ; autocollision – SOFA. SOFA - Topic Tag: autocollision. /batch; . /feed; ; batch – SOFA. SOFA - Topic Tag: batch. /batch-analysis-python; . /feed; ; batch analysis python – SOFA. SOFA - Topic Tag: batch analysis python. /beam; . /feed; ; beam – SOFA. SOFA - Topic Tag: beam. /beam-adaptater-python-controller; . /feed; ; beam adaptater; Python controller – SOFA. SOFA - Topic Tag: beam adaptater; Python controller. /beamadapter; . /feed; ; BeamAdapter – SOFA. SOFA - Topic Tag: BeamAdapter. /beamadapter-controller; . /feed; ; BeamAdapter Controller – SOFA. SOFA - Topic Tag: BeamAdapter Controller. /beamfemforcefield; . /feed; ; BeamFEMForceField – SOFA. SOFA - Topic Tag: BeamFEMForceField. /beamfemforcefield-setting-problem; . /feed; ; BeamFEMForceField Setting Problem – SOFA. SOFA - Topic Tag: BeamFEMForceField Setting Problem. /beamfemforcefield-unstable; . /feed; ; BeamFEMForceField unstable – SOFA. SOFA - Topic Tag: BeamFEMForceField unstable. /beginners; . /feed; ; beginners – SOFA. SOFA - Topic Tag: beginners. /begin-start-sofa; . /feed; ; begin start sofa – SOFA. SOFA - Topic Tag: begin start sofa. /bilateralinteractionconstraint; . /feed; ; BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: BilateralInteractionConstraint. /binaries; . /feed; ; binaries – SOFA. SOFA - Topic Tag: binaries. /binary; . /feed; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:428419,adapt,adaptater,428419,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['adapt'],['adaptater']
Modifiability,"ng::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness > Class Template Referenceabstract . #include <BaseNonLinearMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, HasStabilizedGeometricStiffness >:. [legend]. Classes; struct  JacobianEntry;  Represents an entry in the Jacobian matrix. More...;  . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  . Protected Attributes; SparseMatrixEigen m_jacobian;  Jacobian of the mapping. More...;  ;  Protected Attributes inherited from sofa::core::Mapping< TIn, TOut >; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html:953,inherit,inherited,953,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,1,['inherit'],['inherited']
Modifiability,"ngMethodAccessor () override=default;  ; void init () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  . Protected Member Functions; bool isAsyncFactorizationFinished () const;  Return true if an asynchronous factorization has been launched and is finished. More...;  ; void launchAsyncFactorization ();  ; void asyncFactorization ();  ; void swapInvertData ();  Copy the invert data from the async thread to the main thread. More...;  ;  Protected Member Functions inherited from sofa::component::linearsolver::direct::SparseLDLSolver< TMatrix, TVector, NoThreadManager >;  SparseLDLSolver ();  ; bool factorize (Matrix &M, InvertData *invertData);  ; void showInvalidSystemMessage (const std::string &reason) const;  ;  Protected Member Functions inherited from sofa::component::linearsolver::direct::SparseLDLSolverImpl< TMatrix, TVector, NoThreadManager >;  SparseLDLSolverImpl ();  ; void solve_cpu (Real *x, const Real *b, SparseLDLImplInvertData< VecInt, VecReal > *data);  ; void LDL_ordering (int n, int nnz, int *M_colptr, int *M_rowind, Real *M_values, int *perm, int *invperm);  ; void LDL_symbolic (int n, int *M_colptr, int *M_rowind, int *colptr, int *perm, int *invperm, int *Parent);  ; void LDL_numeric (int n, int *M_colptr, int *M_rowind, Real *M_values, int *colptr, int *rowind, Real *values, Real *D, int *perm, int *invperm, int *Parent);  ; void factorize (int n, int *M_colptr, int *M_rowind, Real *M_values, SparseLDLImplInvertData< VecInt, VecReal > *data);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::linearsolver::direct::SparseLDLSolver< TMatrix, TVector, NoThreadManager >; int numStep;  ;  Public Attributes inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< TBase >; SingleLink< OrderingMethodAccessor, core::behavior::BaseOrderingMethod, BaseLink::FLAG_STRONGLINK > l_orderingMethod;  . Attribute details. ◆ m_asyncResult. template<class TMatrix , class TVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html:5445,inherit,inherited,5445,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,2,['inherit'],['inherited']
Modifiability,"nged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  PairStateAccessor (MechanicalState< TDataTypes > *mm1=nullptr, MechanicalState< TDataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; Map",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html:18941,inherit,inherited,18941,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,2,['inherit'],['inherited']
Modifiability,"nged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  PairStateAccessor (MechanicalState< TDataTypes > *mm1=nullptr, MechanicalState< TDataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Friends; template<typename > ; class BilateralLagrangianConstraintSpecialization;  That any templates variation of BilateralLagrangianConstraintSpecialization are friend. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:22139,inherit,inherited,22139,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"ngine::generate::NormalsFromPoints< DataTypes > Class Template Reference . #include <NormalsFromPoints.h>. Inheritance diagram for sofa::component::engine::generate::NormalsFromPoints< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::engine::generate::NormalsFromPoints< DataTypes >; This class compute vertex normals by averaging face normals . Public Attributes; Data< VecCoord > position;  Vertices of the mesh. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 3 > > > triangles;  Triangles of the mesh. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > quads;  Quads of the mesh. More...;  ; Data< VecCoord > normals;  Computed vertex normals of the mesh. More...;  ; Data< bool > invertNormals;  Swap normals. More...;  ; Data< bool > useAngles;  Use incident angles to weight faces normal contributions at each vertex. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NormalsFromPoints, DataTypes), core::Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html:1239,inherit,inherited,1239,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html,1,['inherit'],['inherited']
Modifiability,"ngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::component::visual::VisualModelImpl; static std::string GetCustomTemplateName ();  ; static Coord computeTangent (const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3);  Utility method to compute tangent from vertices and texture coordinates. More...;  ; static Coord computeBitangent (const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3);  Utility method to compute bitangent from vertices and texture coordinates. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_nbInput. Data<unsigned int> sofa::gl::component::rendering3d::MergeVisualModels::d_nbInput. number of input visual models to merge . ◆ vl_input. core::objectmodel::VectorLinks< LinkVisualModel, MergeVisualModels > sofa::gl::component::rendering3d::MergeVisualModels::vl_input. Constructor details. ◆ MergeVisualModels(). sofa::gl::component::rendering3d::MergeVisualModels::MergeVisualModels ; (; ). inlineprotected . ◆ ~MergeVisualModels(). sofa::gl::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:31109,inherit,inherited,31109,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,ngle. More...;  ; virtual void createTrianglesAroundVertexArray ();  Creates the TrianglesAroundVertex Array. More...;  ; virtual void createTrianglesAroundEdgeArray ();  Creates the TrianglesAroundEdge Array. More...;  ; void clearTriangles ();  ; void clearEdgesInTriangle ();  ; void clearTrianglesAroundVertex ();  ; void clearTrianglesAroundEdge ();  ; void clearBorderElementLists ();  ; virtual TrianglesAroundVertex & getTrianglesAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of triangle indices around a given DOF for subsequent modification. More...;  ; virtual TrianglesAroundEdge & getTrianglesAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of triangle indices around a given edge for subsequent modification. More...;  ; void setTriangleTopologyToDirty ();  ; void cleanTriangleTopologyFromDirty ();  ; const bool & isTriangleTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const PointID i);  Returns a non-const list of Edge indices around the ith DOF for subsequent modification. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  To,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:40578,inherit,inherited,40578,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,2,['inherit'],['inherited']
Modifiability,"ngleID > m_dirtyTriangles;  ; std::set< sofa::core::topology::BaseMeshTopology::QuadID > m_dirtyQuads;  Internal buffer similar to. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::component::visual::VisualModelImpl; static std::string GetCustomTemplateName ();  ; static Coord computeTangent (const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3);  Utility method to compute tangent from vertices and texture coordinates. More...;  ; static Coord computeBitangent (const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3);  Utility method to compute bitangent from vertices and texture coordinates. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:30514,inherit,inherited,30514,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['inherit'],['inherited']
Modifiability,"ngleIndex, . TriangleFiberDirection & ; , . const core::topology::BaseMeshTopology::Triangle & ; t, . const sofa::type::vector< unsigned int > & ; , . const sofa::type::vector< SReal > & ;  . ). Method to initialize See alsoTriangleFiberDirection when a new Triangle is created. Will be set as creation callback in the TriangleData . d_localFiberDirection . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFiberDir(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::getFiberDir ; (; int ; element, . Deriv & ; dir . ). ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TriangularAnisotropicFEMForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(TriangularFEMForceField, DataTypes) ;  . ). sofacomponentsolidmechanicsfemelasticTriangularAnisotropicFEMForceField; Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:32873,variab,variables,32873,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability,"ngleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:24961,inherit,inherited,24961,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,6,['inherit'],['inherited']
Modifiability,"ngleLink< TriangularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeInformation > > edgeInfo;  ; sofa::core::topology::EdgeData< type::vector< EdgeInformation > > d_edgeInfo;  Internal edge data. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  potential energy accumulate in method More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the linked topology used to create this spring forcefield. More...;  ;  Protected Attributes inherited from sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html:2428,inherit,inherited,2428,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,1,['inherit'],['inherited']
Modifiability,"ngleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Constraint (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Constraint () override;  ; virtual void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual type::vector< std::string > getConstraintIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:14369,inherit,inherited,14369,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,1,['inherit'],['inherited']
Modifiability,"ng getDefaultSuffix ();  ; static std::string GetPluginNameFromPath (const std::string &pluginPath);  . Friends; std::ostream & operator<< (std::ostream &os, const PluginManager &pluginManager);  ; std::istream & operator>> (std::istream &in, PluginManager &pluginManager);  . Attribute details. ◆ s_gui_postfix. std::string sofa::helper::system::PluginManager::s_gui_postfix = ""gui"". static . the postfix to gui plugin, default=""gui"" (e.g. myplugin_gui.so) . Function details. ◆ addOnPluginCleanupCallbacks(). void sofa::helper::system::PluginManager::addOnPluginCleanupCallbacks ; (; const std::string & ; key, . std::function< void()> ; callback . ). ◆ addOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::addOnPluginLoadedCallback ; (; const std::string & ; key, . std::function< void(const std::string &, const Plugin &)> ; callback . ). ◆ checkDuplicatedPlugin(). bool sofa::helper::system::PluginManager::checkDuplicatedPlugin ; (; const Plugin & ; plugin, . const std::string & ; pluginPath . ). ◆ cleanup(). void sofa::helper::system::PluginManager::cleanup ; (; ). ◆ findPlugin(). std::string sofa::helper::system::PluginManager::findPlugin ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . int ; maxRecursiveDepth = 3 . ). ◆ getDefaultSuffix(). std::string sofa::helper::system::PluginManager::getDefaultSuffix ; (; ). static . Get the default suffix applied to plugin names to find the actual lib to load Returns ""_d"" in debug configuration and an empty string otherwise . Get the default suffix applied to plugin names to find the actual lib to load (depends on platform, version, debug/release build) . ◆ getEntryFromPlugin(). template<typename Entry > . bool sofa::helper::system::PluginManager::getEntryFromPlugin ; (; const Plugin * ; plugin, . Entry & ; entry . ). inline . ◆ getInstance(). PluginManager & sofa::helper::system::PluginManager::getInstance ; (; ). st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:3840,plugin,pluginPath,3840,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['plugin'],['pluginPath']
Modifiability,ng getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::common::AddSutureOperation::~AddSutureOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AddSutureOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddSutureOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDamping(). virtual double sofa::gui::common::AddSutureOperation::getDamping ; (; ); const. inlinevirtual . Reimplemented in sofa::gui::qt::QAddSutureOperation. ◆ getDescription(). static std::string sofa::gui::common::AddSutureOperation::getDescription ; (; ). inlinestatic . ◆ getStiffness(). virtual double sofa::gui::common::AddSutureOperation::getStiffness ; (; ); const. inlinevirtual . Reimplemented in sofa::gui::qt::QAddSutureOperation. ◆ setDamping(). void sofa::gui::common::AddSutureOperation::setDamping ; (; double ; f). inline . ◆ setStiffness(). void sofa::gui::common::AddSuture,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:2786,config,configurePerformer,2786,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,2,['config'],['configurePerformer']
Modifiability,"nheritance diagram for sofa::core::behavior::Mass< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::core::behavior::Mass< DataTypes >; Component responsible for mass-related computations (gravity, acceleration). ; Mass can be defined either as a scalar, vector, or a full mass-matrix. It is responsible for converting forces to accelerations (for explicit integrators), or displacements to forces (for implicit integrators).; It is also a ForceField, computing gravity-related forces. . Protected Attributes; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files for",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:1141,inherit,inherited,1141,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,3,['inherit'],['inherited']
Modifiability,"nherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void integrateMesh ();  integrates the whole mesh More...;  ; void integrateTriangle (type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2);  ; void generateRigid ();  generates the RigidMass from the mesh integral More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:14500,inherit,inherited,14500,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['inherit'],['inherited']
Modifiability,"nherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (WriteState, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:4171,inherit,inherited,4171,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['inherit'],['inherited']
Modifiability,"nicalIdentityBlocksInJacobianVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalIdentityBlocksInJacobianVisitor:. [legend]. Public Member Functions; const char * getClassName () const override;  ;  MechanicalIdentityBlocksInJacobianVisitor (const sofa::core::ExecParams *params, sofa::core::MatrixDerivId id);  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState when it is mapped from parent level. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, core::BaseMapping *) override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the Constrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_identity_blocks_in_jacobian_visitor.html:1123,inherit,inherited,1123,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_identity_blocks_in_jacobian_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_identity_blocks_in_jacobian_visitor.html,2,['inherit'],['inherited']
Modifiability,"nicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< TDataTypes > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< TDataTypes > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairInteractionProjectiveConstraintSet (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAcces",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html:15082,inherit,inherited,15082,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,"nicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class LinearForceFieldInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_arrowSizeCoef. template<class DataTypes > . Data< SReal > sofa::component::mechanicalload::LinearForceField< DataTypes >::d_arrowSizeCoef. for drawing. The sign changes the direction, 0 doesn't draw arrow . ◆ d_force. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::LinearForceField< DataTypes >::d_force. applied force for all the points . ◆ d_keyForces. template<class DataTypes > . Data< VecDeriv > sofa::component::mechanicalload::LinearForceField< DataTypes >::d_keyForces. forces corresponding to the key frames . ◆ d_keyTimes. template<class DataTypes > . Data< type::vector< Real > > sofa::component::mechanicalload::LinearForceField< DataTypes >::d_keyTimes. the key frames when the forces are defined by the user . ◆ data. template<class DataTypes > . LinearForceFieldInternalData<DataTypes>* sofa::component::mechanicalloa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:20107,inherit,inherited,20107,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['inherit'],['inherited']
Modifiability,nicationcontroller – SOFA. SOFA - Topic Tag: #communicationcontroller. /compile; . /feed; ; compile – SOFA. SOFA - Topic Tag: compile. /compliance; . /feed; ; compliance – SOFA. SOFA - Topic Tag: compliance. /compliant; . /feed; ; Compliant – SOFA. SOFA - Topic Tag: Compliant. /complie-softrobots; . /feed; ; Complie SoftRobots – SOFA. SOFA - Topic Tag: Complie SoftRobots. /component; . /feed; ; component – SOFA. SOFA - Topic Tag: component. /component-declaration; . /feed; ; component declaration – SOFA. SOFA - Topic Tag: component declaration. /components; . /feed; ; Components – SOFA. SOFA - Topic Tag: Components. /computation-time; . /feed; ; Computation Time – SOFA. SOFA - Topic Tag: Computation Time. /comp-vtu-precomputedconstraintcorrection-dentistry-tongue; . /feed; ; .comp .vtu PrecomputedConstraintCorrection dentistry tongue – SOFA. SOFA - Topic Tag: .comp .vtu PrecomputedConstraintCorrection dentistry tongue. /configurations; . /feed; ; configurations – SOFA. SOFA - Topic Tag: configurations. /connect; . /feed; ; connect – SOFA. SOFA - Topic Tag: connect. /connect-sofa; . /feed; ; Connect SOFA – SOFA. SOFA - Topic Tag: Connect SOFA. /constraint; . /feed; ; constraint – SOFA. SOFA - Topic Tag: constraint. /constraint-forces; . /feed; ; Constraint Forces – SOFA. SOFA - Topic Tag: Constraint Forces. /constraintresolution-h; . /feed; ; ConstraintResolution.h – SOFA. SOFA - Topic Tag: ConstraintResolution.h. /constraints; . /feed; ; constraints – SOFA. SOFA - Topic Tag: constraints. /constraint-solver; . /feed; ; Constraint Solver – SOFA. SOFA - Topic Tag: Constraint Solver. /contact; . /feed; ; contact – SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; cons,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:436500,config,configurations,436500,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['config'],['configurations']
Modifiability,"nics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:27619,inherit,inherited,27619,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,6,['inherit'],['inherited']
Modifiability,"nimationLoop * getAnimationLoop () const override;  ; sofa::core::behavior::OdeSolver * getOdeSolver () const override;  ; sofa::core::collision::Pipeline * getCollisionPipeline () const override;  ; sofa::core::visual::VisualLoop * getVisualLoop () const override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseNode;  SOFA_ABSTRACT_CLASS (BaseNode, Base);  ; virtual BaseNode * getRoot () const;  returns the root by following up the first parent for multinodes More...;  ; virtual std::string getPathName () const override;  Return the full path name of this node. More...;  ; virtual std::string getRootPath () const;  Return the path from this node to the root node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:11289,inherit,inherited,11289,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['inherit'],['inherited']
Modifiability,"nisotropicMaterial;  ; bool updateMatrix;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void computeElementStiffnessMatrix (type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html:6524,inherit,inherited,6524,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"nitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:16912,inherit,inherited,16912,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"nitData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class EdgeSetGeometryAlgorithms;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:21912,inherit,inherited,21912,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['inherit'],['inherited']
Modifiability,"nitData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class QuadSetGeometryAlgorithms;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:23655,inherit,inherited,23655,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['inherit'],['inherited']
Modifiability,"nitData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:11331,inherit,inherited,11331,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,1,['inherit'],['inherited']
Modifiability,"nitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr unsigned int CoordSize = Coord::total_size;  . Protected Attributes; std::unique_ptr< PatchTestMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PatchTestMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:4057,inherit,inherited,4057,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"nitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MathOp, VecT), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:2671,inherit,inherited,2671,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,1,['inherit'],['inherited']
Modifiability,"nitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListOfListeners. typedef vector<FileEventListener*> sofa::helper::system::ListOfListeners. ◆ ListOfMonitors. typedef list< MonitoredFile > sofa::helper::system::ListOfMonitors. Function Documentation. ◆ addAFileListenerInDict(). void sofa::helper::system::addAFileListenerInDict ; (; string ; pathfilename, . FileEventListener * ; listener . ). ◆ catch_alarm(). void sofa::helper::system::catch_alarm ; (; int ; sig). ◆ cleanPath(). std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:1539,plugin,plugins,1539,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,4,"['Plugin', 'Variab', 'plugin']","['PluginRepository', 'Variables', 'plugins']"
Modifiability,"nk (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PointSplatModel ();  ;  ~PointSplatModel () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method use",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html:10933,inherit,inherited,10933,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,2,['inherit'],['inherited']
Modifiability,"nk (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  VisualTransform ();  ;  ~VisualTransform () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method use",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:13718,inherit,inherited,13718,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,2,['inherit'],['inherited']
Modifiability,"nk *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11037,inherit,inherited,11037,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['inherit'],['inherited']
Modifiability,"nk *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RandomPointDistributionInSurface ();  ;  ~RandomPointDistributionInSurface () override;  ; void getBBox (Vec3 &minBBox, Vec3 &maxBBox);  ; void generateRandomDirections ();  ; Vec3 generateRandomPoint (const Vec3 &minBBox, const Vec3 &maxBBox);  ; bool isInside (Coord p);  ; bool testDistance (Coord p);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:14850,inherit,inherited,14850,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['inherit'],['inherited']
Modifiability,"nk *link);  . Protected Member Functions;  TransformPosition ();  ;  ~TransformPosition () override;  ; void getTransfoFromTxt ();  ; void getTransfoFromTrm ();  ; void getTransfoFromTfm ();  ; void selectTransformationMethod ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:14900,inherit,inherited,14900,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,1,['inherit'],['inherited']
Modifiability,"nk *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::objectmodel::Context;  SOFA_CLASS (Context, BaseContext);  ; void copyContext (const Context &c);  Copy the context variables from the given instance. More...;  ; void copySimulationContext (const Context &c);  Copy the context variables of visualization from the given instance. More...;  ; bool isActive () const override;  The Context is active. More...;  ; void setActive (bool val) override;  State of the context. More...;  ; bool isSleeping () const override;  The Context is sleeping. More...;  ; bool canChangeSleepingState () const override;  The Context can change its sleeping state. More...;  ; const Vec3 & getGravity () const override;  Gravity in local coordinates. More...;  ; void setGravity (const Vec3 &) override;  Gravity in local coordinates. More...;  ; SReal getDt () const override;  Simulation timestep. More...;  ; SReal getTime () const override;  Simulation time. More...;  ; bool getAnimate () const override;  Animation flag. More...;  ; void setDt (SReal dt) override;  Simulation timestep. More...;  ; virtual void setTime (SReal t);  Simulation time. More...;  ; void setAnimate (bool val) override;  Animation flag. More...;  ; void setChangeSleepingState (bool val) override;  Sleep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:17670,variab,variables,17670,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,4,['variab'],['variables']
Modifiability,"nk multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RecordedCamera, BaseCamera);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::visual::BaseCamera;  SOFA_CLASS (BaseCamera, core::objectmodel::BaseObject);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Ray, sofa::type::Ray);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec4, sofa::type::Vec4);  ;  BaseCamera ();  ;  ~BaseCamera () override;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void activate ();  ; void desactivate ();  ; bool isActivated ();  ; bool exportParametersInFile (const std::string &viewFilename);  ; bool importParametersFromFile (const std::string &viewFilename);  ; void translate (const type::Vec3 &t);  ; void translateLookAt (const type::Vec3 &t);  ; void rotate (const Quat &r);  ; void moveCamera (const type::Vec3 &p, const Quat &q);  ; void rotateCameraAroundPoint (Quat &rotation, const type::Vec3 &point);  ; virtual void rotateWorldAroundPoint (Quat &rotation, const type::Vec3 &point, Quat orientationCam);  ; type::Vec3 screenToViewportPoint (const type::Vec3 &p) const;  ; type::Vec3 screenToWorldPoint (const type::Vec3 &p);  ; type::Vec3 viewportToSc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:8363,inherit,inherited,8363,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['inherit'],['inherited']
Modifiability,"nk::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void computeElementStiffnessMatrix (type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot);  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void createTriangleI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html:7044,variab,variables,7044,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability,"nk::FLAG_NONE)>; ValidatorFn m_validator;  ;  Protected Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseLink; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData (BaseData *data);  ; static std::string CreateString (Base *object, Base *from);  ; static std::string CreateString (BaseData *data, Base *from);  ; static std::string CreateString (Base *object, BaseData *data, Base *from);  ;  Protected Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; void added (DestPtr val, std::size_t);  ; void removed (DestPtr val, std::size_t);  ; void changed (DestPtr before, DestPtr val);  ;  Protected Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; DestType * getIndex (std::size_t index) const;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseLink; void updateCounter ();  . Constructor details. ◆ NodeSingle(). template<class T , bool duplicate = true> . sofa::simulation::NodeSingle< T, duplicate >::NodeSingle ; (; const BaseLink::InitLink< Node > & ; init). inline . Function details. ◆ operator T*(). template<class T , bool duplicate = true> . sofa::simulation::NodeSingle< T, duplicate >::operator T* ; (; ); const. inline . ◆ operator*(). template<class T , bool duplic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:5519,inherit,inherited,5519,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,8,['inherit'],['inherited']
Modifiability,"nk;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ReadState, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadState ();  ; void processReadState (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:3713,inherit,inherited,3713,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['inherit'],['inherited']
Modifiability,"nk;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NormEngine, TDataType), core::DataEngine);  ;  NormEngine ();  ;  ~NormEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine.html:2681,inherit,inherited,2681,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine.html,1,['inherit'],['inherited']
Modifiability,"nk< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FastTriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &d_x) const override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< _DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, _DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccesso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:4467,variab,variables,4467,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,1,['variab'],['variables']
Modifiability,"nk< TrianglePressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; core::objectmodel::lifecycle::DeprecatedData normal { this, ""v24.06"", ""v24.12"", ""normal"", ""Plan selection using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ; core::objectmodel::lifecycle::DeprecatedData dmin { this, ""v24.06"", ""v24.12"", ""dmin"", ""Plan selection using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ; core::objectmodel::lifecycle::DeprecatedData dmax { this, ""v24.06"", ""v24.12"", ""dmax"", ""Plan selection using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html:2459,inherit,inherited,2459,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"nkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::State< DataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html:13559,inherit,inherited,13559,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,1,['inherit'],['inherited']
Modifiability,"nkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html:11350,inherit,inherited,11350,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,6,['inherit'],['inherited']
Modifiability,"nkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  Thi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html:13027,inherit,inherited,13027,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,1,['inherit'],['inherited']
Modifiability,"nkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions;  DistanceFromTargetMapping ();  ;  ~DistanceFromTargetMapping () override;  ; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const InCoord &a, const InCoord &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:20717,inherit,inherited,20717,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['inherit'],['inherited']
Modifiability,"nkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  TriangularBiquadraticSpringsForceField ();  second Lame coefficient More...;  ; virtual ~TriangularBiquadraticSpringsForceField ();  ; sofa::core::topology::EdgeData< type::vector< EdgeRestInformation > > & getEdgeInfo ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html:18476,inherit,inherited,18476,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,4,['inherit'],['inherited']
Modifiability,"nly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class LineProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_direction. template<class DataTypes > . Data<CPos> sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::d_direction. Direction of the line. . ◆ d_drawSize. template<class DataTypes > . Data<SReal> sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::d_drawSize. Size of the",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:19604,inherit,inherited,19604,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,"nly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; stati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:19450,inherit,inherited,19450,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['inherit'],['inherited']
Modifiability,"nlyPositionAndVelocityVisitor Class Reference . #include <MechanicalPropagateOnlyPositionAndVelocityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor:. [legend]; Detailed Description; Propagate positions and velocities to all the levels of the hierarchy. At each level, the mappings form the parent to the child is applied. After the execution of this action, all the (mapped) degrees of freedom are consistent with the independent degrees of freedom. This action is typically applied after time integration of the independent degrees of freedom.; Note that this visitor only propagate through the mappings, and does not apply projective constraints as was previously done by MechanicalPropagatePositionAndVelocityVisitor. Use MechanicalProjectPositionAndVelocityVisitor before this visitor if projection is needed. . Public Attributes; SReal currentTime;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateOnlyPositionAndVelocityVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecId::position(), sofa::core::MultiVecDerivId v=sofa::core::VecId::velocity());  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level. More...;  ; bool stopAtMechanicalMap",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html:1337,inherit,inherited,1337,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,2,['inherit'],['inherited']
Modifiability,"node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DispatchFromGlobalVectorToLocalVectorVisitor (const core::ExecParams *params, const MappingGraph &mappingGraph, sofa::core::MultiVecId dst, linearalgebra::BaseVector *globalVector);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html:1875,inherit,inherited,1875,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html,1,['inherit'],['inherited']
Modifiability,"non-null initial velocity. See alsoFixedConstraint . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< Index > > f_indices;  ; sofa::core::objectmodel::RenamedData< Coord > f_point;  ; sofa::core::objectmodel::RenamedData< bool > f_fixAll;  ; sofa::core::objectmodel::RenamedData< SReal > f_drawSize;  ; SetIndex d_indices;  the indices of the points to project to the target More...;  ; Data< Coord > d_point;  Target of the projection. More...;  ; Data< bool > d_fixAll;  filter all the DOF to implement a fixed object More...;  ; Data< SReal > d_drawSize;  Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) More...;  ; SingleLink< PointProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:1794,inherit,inherited,1794,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"noreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path, . type::vector< std::string > & ; listLoadedPlugins . ). ◆ registerPlugin(). auto sofa::helper::system::PluginManager::registerPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Register a plugin. Merely an alias for loadPlugin() . ◆ removeOnPluginCleanupCallbacks(). void sofa::helper::system::PluginManager::removeOnPluginCleanupCallbacks ; (; const std::string & ; key). ◆ removeOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::removeOnPluginLoadedCallback ; (; const std::string & ; key). ◆ unloadedPlugins(). const std::unordered_set< std::string > & sofa::helper::system::PluginManager::unloadedPlugins ; (; ); const. ◆ unloadPlugin(). bool sofa::helper::system::PluginManager::unloadPlugin ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Unloads a plugin from the map Warning: a previously loaded plugin will always be in process memory. . ◆ writeToIniFile(). void sofa::helper::system::PluginManager::writeToIniFile ; (; const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:8773,plugin,plugin,8773,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,3,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"now TODO: compute Jacobians for non null restLength; AuthorMatthieu Nesme . Public Attributes; Data< Real > d_showObjectScale;  Scale for object display. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ; SingleLink< SquareDistanceMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html:1930,inherit,inherited,1930,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,1,['inherit'],['inherited']
Modifiability,"now if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Attribute details. ◆ d_useLineLine. Data<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::d_useLineLine. Line-line collision detection enabled. . ◆ useLineLine. sofa::core::objectmodel::RenamedData<bool> sofa::component::collision::detection::intersection::NewProximityIntersection::useLineLine. Constructor details. ◆ NewProximityIntersection(). sofa::component::collision::detection::intersection::NewProximityIntersection::NewProximityIntersection ; (; ). protected . Function details. ◆ com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:20648,inherit,inherited,20648,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,2,['inherit'],['inherited']
Modifiability,"now if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:12535,inherit,inherited,12535,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,70,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"nput: triangles of the mesh More...;  ; Data< type::vector< MQuad > > m_quads;  input: quads of the mesh More...;  ; Data< type::vector< MPolygon > > m_polygons;  input: polygons of the mesh More...;  ; Data< MassType > rigidMass;  output More...;  ; Data< Real > mass;  output: mass of the mesh More...;  ; Data< Real > volume;  output: volume of the mesh More...;  ; Data< Mat3x3 > inertiaMatrix;  output: the inertia matrix of the mesh More...;  ; Data< Vec3 > massCenter;  output: the gravity center of the mesh More...;  ; Data< type::Vec3 > centerToOrigin;  output: vector going from the mass center to the space origin More...;  ; type::fixed_array< SReal, 10 > afIntegral;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (GenerateRigidMass, core::DataEngine);  ;  GenerateRigidMass ();  ;  ~GenerateRigidMass () override;  ; void init () override;  Initialization method called at graph modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Update the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:1487,inherit,inherited,1487,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,4,['inherit'],['inherited']
Modifiability,"nputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SmoothMeshEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initiali",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:3704,variab,variables,3704,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['variab'],['variables']
Modifiability,"ns inherited from sofa::core::objectmodel::Context;  Context ();  ; virtual ~Context () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseContext;  BaseContext ();  ;  ~BaseContext () override;  . Friends; class VisitorScheduler;  . Attribute details. ◆ _context. BaseContext* sofa::simulation::Node::_context. protected . ◆ actionStack. std::stack<Visitor*> sofa::simulation::Node::actionStack. protected . ◆ animationManager. NodeSingle<sofa::core::behavior::BaseAnimationLoop> sofa::simulation::Node::animationManager. ◆ behaviorModel. NodeSequence<sofa::core::BehaviorModel> sofa::simulation::Node::behaviorModel. ◆ child. NodeSequence<Node,true> sofa::simulation::Node::child. ◆ collisionModel. NodeSequence<sofa::core::CollisionModel> sofa::simulation::Node::collisionModel. ◆ collisionPipeline. NodeSingle<sofa::core::collision::Pipeline> sofa::simulation::Node::collisionPipeline. ◆ configurationSetting. NodeSequence<sofa::core::objectmodel::ConfigurationSetting> sofa::simulation::Node::configurationSetting. ◆ constraintSet. NodeSequence<sofa::core::behavior::BaseConstraintSet> sofa::simulation::Node::constraintSet. ◆ constraintSolver. NodeSequence<sofa::core::behavior::ConstraintSolver> sofa::simulation::Node::constraintSolver. ◆ contextObject. NodeSequence<sofa::core::objectmodel::ContextObject> sofa::simulation::Node::contextObject. ◆ debug_. bool sofa::simulation::Node::debug_. protected . ◆ forceField. NodeSequence<sofa::core::behavior::BaseForceField> sofa::simulation::Node::forceField. ◆ initialized. bool sofa::simulation::Node::initialized. protected . ◆ interactionForceField. NodeSequence<sofa::core::behavior::BaseInteractionForceField> sofa::simulation::Node::interactionForceField. ◆ linearSolver. NodeSequence<sofa::core::behavior::BaseLinearSolver> sofa::simulation::Node::linearSolver. ◆ listener. type::vector<MutationListener*> sofa::simulation::Node::listener. protected . ◆ mapping. NodeSequence<sofa::core::BaseMapping> sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:30496,config,configurationSetting,30496,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,3,"['Config', 'config']","['ConfigurationSetting', 'configurationSetting']"
Modifiability,"ns; static void addSeparateGravity (sofa::simulation::common::MechanicalOperations *mop, SReal dt, core::MultiVecDerivId v);  ; static void computeForce (sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId f);  Assemble the force vector (right-hand side of the equation) More...;  ; static void computeAcceleration (sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc, core::ConstMultiVecDerivId f);  ; static void projectResponse (sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId vecId);  Apply projective constraints, such as FixedProjectiveConstraint. More...;  ; static void solveConstraints (sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:15460,inherit,inherited,15460,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,2,['inherit'],['inherited']
Modifiability,"ns;  SOFA_CLASS (SOFA_TEMPLATE(AverageCoord, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void handleEvent (core::objectmodel::Event *event) override;  Handle an event. More...;  ; void onBeginAnimationStep (const double);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:2828,inherit,inherited,2828,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['inherit'],['inherited']
Modifiability,"nsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Protected Attributes; std::unique_ptr< MatrixType > m_matrixJ;  ; bool m_updateJ;  ; SparseMatrixEigen m_eigenJacobian;  Jacobian of the mapping used by getJs. More...;  ; type::vector< sofa::linearalgebra::BaseMatrix * > m_eigenJacobians;  ; StiffnessSparseMatrixEigen m_geometricStiffnessMatrix;  ;  Protected Attributes inherited from sofa::core::Mapping< TIn, TOut >; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(RigidMapping, TIn, TOut), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use d_points instead"") DeprecatedAndRemoved points;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_rotatedPoints instead"") DeprecatedAndRemoved rotatedPoints;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_data instead"") DeprecatedAndRemoved data;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use d_index instead"") DeprecatedAndRemoved index;  ;  S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:3731,inherit,inherited,3731,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,2,['inherit'],['inherited']
Modifiability,"nsform::RotateTransformMatrixEngine Class Reference . #include <TransformMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::RotateTransformMatrixEngine:. [legend]; Detailed Description; This engine produces a rotation transformation matrix. It is composed with the input transform if any. T_output = T_input * T_rotate . Protected Attributes; Data< type::Vec3 > d_rotation;  rotation More...;  ;  Protected Attributes inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine; Data< type::Matrix4 > d_inT;  input transformation if any More...;  ; Data< type::Matrix4 > d_outT;  output transformation More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (RotateTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:982,inherit,inherited,982,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,4,['inherit'],['inherited']
Modifiability,"nsformMatrixEngine Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::engine::transform::InvertTransformMatrixEngine Class Reference . #include <TransformMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::InvertTransformMatrixEngine:. [legend]; Detailed Description; This engine inverts the input transform and outputs the resulting transformation matrix. T_output = T_input^-1 . Public Member Functions;  SOFA_CLASS (InvertTransformMatrixEngine, AbstractTransformMatrixEngine);  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:1064,variab,variables,1064,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['variab'],['variables']
Modifiability,"nsigned int,4> > > sofa::component::engine::generate::NormalsFromPoints< DataTypes >::quads. Quads of the mesh. . ◆ triangles. template<class DataTypes > . Data< type::vector< type::fixed_array <unsigned int,3> > > sofa::component::engine::generate::NormalsFromPoints< DataTypes >::triangles. Triangles of the mesh. . ◆ useAngles. template<class DataTypes > . Data<bool> sofa::component::engine::generate::NormalsFromPoints< DataTypes >::useAngles. Use incident angles to weight faces normal contributions at each vertex. . Constructor details. ◆ NormalsFromPoints(). template<class DataTypes > . sofa::component::engine::generate::NormalsFromPoints< DataTypes >::NormalsFromPoints. protected . ◆ ~NormalsFromPoints(). template<class DataTypes > . sofa::component::engine::generate::NormalsFromPoints< DataTypes >::~NormalsFromPoints ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::NormalsFromPoints< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::NormalsFromPoints< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::NormalsFromPoints< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::NormalsFromPoints< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(NormalsFromPoints< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginegenerateNormalsFromPoints; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html:18858,variab,variables,18858,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points.html,1,['variab'],['variables']
Modifiability,"nsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . /feed; ; [SOLVED] cmake error : cannot find Eigen3 – SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection for deformable objects. /collision-detection-of-interactive-trainin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:275520,config,configuring,275520,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['config'],['configuring']
Modifiability,"nst BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::grid::SparseGridRamificationTopology; sofa::core::objectmodel::RenamedData< bool > _finestConnectivity;  ; Data< bool > d_finestConnectivity;  Test for connectivity at the finest level? (more precise but slower by testing all intersections between the model mesh and the faces between boundary cubes) More...;  ; HierarchicalCubeMapRamification _hierarchicalCubeMapRamification;  ;  Public Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; HierarchicalCubeMap _hierarchicalCubeMap;  ; InverseHierarchicalCubeMap _inverseHierarchicalCubeMap;  ; HierarchicalPointMap _hierarchicalPointMap;  ; InverseHierarchicalPointMap _inverseHierarchicalPointMap;  ; PointMap _pointMap;  a coarse point indice -> corresponding point in finer level More...;  ; PointMap _inversePointMap;  a fine point indice -> corresponding point in coarser level More...;  ; NodeAdjacency _nodeAdjacency;  ; NodeCubesAdjacency _nodeCubesAdjacency;  ; NodeCornersAdjacency _nodeCornersAdjacency;  ; type::vector< SparseGridTopology::SPtr > _virtualFinerLevels;  saving the virtual levels (cf n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:42503,inherit,inherited,42503,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,1,['inherit'],['inherited']
Modifiability,"nst BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >;  PairStateAccessor (MechanicalState< TDataTypes1 > *mm1=nullptr, MechanicalState< TDataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:18729,inherit,inherited,18729,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,2,['inherit'],['inherited']
Modifiability,"nst BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:13051,variab,variables,13051,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,2,['variab'],['variables']
Modifiability,"nst BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:14769,inherit,inherited,14769,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,4,['inherit'],['inherited']
Modifiability,"nst Block &b);  ; void beginBlockRow (unsigned row);  ; void createBlock (unsigned column, const Block &b);  ; void endBlockRow ();  ; void endSortedBlockRow ();  ; template<class AnyReal > ; void copyFrom (const CompressedRowSparseMatrix< type::Mat< Nout, Nin, AnyReal > > &crs);  ; void mult (OutVecDeriv &result, const InVecDeriv &data) const;  compute result = A * data More...;  ; void addMult (OutVecDeriv &result, const InVecDeriv &data) const;  compute result += A * data More...;  ; void addMult (OutVecDeriv &result, const InVecDeriv &data, const OutReal fact) const;  compute result += A * data * fact More...;  ; void addMultTranspose (InVecDeriv &result, const OutVecDeriv &data) const;  compute result += A^T * data More...;  ; void addMultTranspose (InVecDeriv &result, const OutVecDeriv &data, const OutReal fact) const;  compute result += A^T * data * fact More...;  ;  Public Member Functions inherited from sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >;  EigenBaseSparseMatrix (Index nbRow=0, Index nbCol=0);  ;  EigenBaseSparseMatrix (const ThisMatrix &m);  copy constructor More...;  ; void operator= (const ThisMatrix &m);  copy operator More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setIdentity ();  ; void add (Index row, Index col, double value) override;  Schedule the addition of the value at the given place. Scheduled additions must be finalized using function compress(). More...;  ; void beginRow (Index index);  ; void insertBack (Index row, Index col, Real value);  ; Real & coeffRef (Index i, Index j);  Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:3117,inherit,inherited,3117,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ _class_info. const sofa::core::objectmodel::ClassInfo& sofa::simulation::graph::GetDownObjectsVisitor::_class_info. protected . ◆ _container. DAGNode::GetObjectsCallBack& sofa::simulation::graph::GetDownObjectsVisitor::_container. protected . ◆ _tags. const sofa::core::objectmodel::TagSet& sofa::simulation::graph::Get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html:3813,inherit,inherited,3813,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ _class_info. const sofa::core::objectmodel::ClassInfo& sofa::simulation::graph::GetUpObjectsVisitor::_class_info. protected . ◆ _container. DAGNode::GetObjectsCallBack& sofa::simulation::graph::GetUpObjectsVisitor::_container. protected . ◆ _searchNode. DAGNode* sofa::simulation::graph::GetUpObjectsVisitor::_searchNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_up_objects_visitor.html:3846,inherit,inherited,3846,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_up_objects_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_up_objects_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ active. bool sofa::simulation::DeactivationVisitor::active. protected . Constructor details. ◆ DeactivationVisitor(). sofa::simulation::DeactivationVisitor::DeactivationVisitor ; (; const core::ExecParams * ; params, . bool ; _active = false . ). inline . Function details. ◆ getCategoryName(). const char* sofa::simula",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html:3457,inherit,inherited,3457,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ count_. unsigned sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor::count_. protected . ◆ out_. std::ostream& sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor::out_. protected . ◆ time_. unsigned sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor::time_. protected . ◆ v_. sofa::core::ConstMultiVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html:3734,inherit,inherited,3734,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ dofname_. const std::string& sofa::simulation::DofPrintVisitor::dofname_. protected . ◆ out_. std::ostream& sofa::simulation::DofPrintVisitor::out_. protected . ◆ v_. sofa::core::ConstMultiVecId sofa::simulation::DofPrintVisitor::v_. protected . Constructor details. ◆ DofPrintVisitor(). sofa::simulation::DofPrintVisit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html:3523,inherit,inherited,3523,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ dt. SReal sofa::simulation::AnimateVisitor::dt. protected . ◆ firstNodeVisited. bool sofa::simulation::AnimateVisitor::firstNodeVisited. protected . Constructor details. ◆ AnimateVisitor(). sofa::simulation::AnimateVisitor::AnimateVisitor ; (; const core::ExecParams * ; params, . SReal ; dt . ). Function details. ◆ fw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_visitor.html:3647,inherit,inherited,3647,api/master/sofa/html/classsofa_1_1simulation_1_1_animate_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ dt. SReal sofa::simulation::BehaviorUpdatePositionVisitor::dt. protected . Constructor details. ◆ BehaviorUpdatePositionVisitor(). sofa::simulation::BehaviorUpdatePositionVisitor::BehaviorUpdatePositionVisitor ; (; const core::ExecParams * ; params, . SReal ; _dt . ). inline . Function details. ◆ getCategoryName(). co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html:3627,inherit,inherited,3627,api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ error. double sofa::component::playback::CompareStateResult::error. protected . ◆ errorByDof. double sofa::component::playback::CompareStateResult::errorByDof. protected . ◆ numCompareState. unsigned int sofa::component::playback::CompareStateResult::numCompareState. protected . Constructor details. ◆ CompareStateResu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html:3537,inherit,inherited,3537,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state_result.html,1,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetAssembledSizeVisitor::independentOnly { false }. protected . ◆ vsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::vsize { 0 }. protected . ◆ xsize. std::size_t sofa::component::odesolver::testing::GetAssembledSizeVisitor::xsize",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:3767,inherit,inherited,3767,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,1,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ independentOnly. bool sofa::component::odesolver::testing::GetVectorVisitor::independentOnly {false}. protected . ◆ offset. unsigned sofa::component::odesolver::testing::GetVectorVisitor::offset {0}. protected . ◆ src. core::ConstVecId sofa::component::odesolver::testing::GetVectorVisitor::src. protected . ◆ vec. line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:3716,inherit,inherited,3716,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,1,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ level. int sofa::simulation::PrintVisitor::level. protected . ◆ verbose. int sofa::simulation::PrintVisitor::verbose. protected . ◆ visitingOrder. bool sofa::simulation::PrintVisitor::visitingOrder. protected . by default print the graph organisation but can print the graph visiting by setting visitingOrder at true . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html:3715,inherit,inherited,3715,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ level. int sofa::simulation::XMLPrintVisitor::level. protected . ◆ m_out. std::ostream& sofa::simulation::XMLPrintVisitor::m_out. protected . Constructor details. ◆ XMLPrintVisitor(). sofa::simulation::XMLPrintVisitor::XMLPrintVisitor ; (; const sofa::core::ExecParams * ; params, . std::ostream & ; out . ). inline . F",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html:3641,inherit,inherited,3641,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ listError. std::vector<unsigned int> sofa::component::playback::CompareTopologyResult::listError. protected . ◆ numCompareTopology. unsigned int sofa::component::playback::CompareTopologyResult::numCompareTopology. protected . ◆ TotalError. unsigned int sofa::component::playback::CompareTopologyResult::TotalError. pro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_result.html:3620,inherit,inherited,3620,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_result.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology_result.html,1,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ m_event. sofa::core::objectmodel::Event* sofa::simulation::PropagateEventVisitor::m_event. protected . Constructor details. ◆ PropagateEventVisitor(). sofa::simulation::PropagateEventVisitor::PropagateEventVisitor ; (; const core::ExecParams * ; params, . sofa::core::objectmodel::Event * ; e . ). ◆ ~PropagateEventVisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html:3774,inherit,inherited,3774,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ m_out. std::ostream& sofa::simulation::WriteStateVisitor::m_out. protected . Constructor details. ◆ WriteStateVisitor(). sofa::simulation::WriteStateVisitor::WriteStateVisitor ; (; const sofa::core::ExecParams * ; params, . std::ostream & ; out . ). ◆ ~WriteStateVisitor(). sofa::simulation::WriteStateVisitor::~WriteSt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html:3430,inherit,inherited,3430,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ m_source. sofa::core::topology::Topology* sofa::simulation::StateChangeVisitor::m_source. protected . ◆ root. bool sofa::simulation::StateChangeVisitor::root. protected . Constructor details. ◆ StateChangeVisitor(). sofa::simulation::StateChangeVisitor::StateChangeVisitor ; (; const sofa::core::ExecParams * ; params, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html:3545,inherit,inherited,3545,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ m_source. sofa::core::topology::Topology* sofa::simulation::TopologyChangeVisitor::m_source. protected . Constructor details. ◆ TopologyChangeVisitor(). sofa::simulation::TopologyChangeVisitor::TopologyChangeVisitor ; (; const sofa::core::ExecParams * ; params, . sofa::core::topology::Topology * ; source . ). ◆ ~Topol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html:3613,inherit,inherited,3613,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ m_time. SReal sofa::simulation::ExportGnuplotVisitor::m_time. protected . Constructor details. ◆ ExportGnuplotVisitor(). sofa::simulation::ExportGnuplotVisitor::ExportGnuplotVisitor ; (; const core::ExecParams * ; params, . SReal ; time . ). Function details. ◆ getCategoryName(). const char* sofa::simulation::ExportGn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html:3381,inherit,inherited,3381,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ m_vparams. core::visual::VisualParams* sofa::simulation::VisualUpdateVisitor::m_vparams. protected . Constructor details. ◆ VisualUpdateVisitor(). sofa::simulation::VisualUpdateVisitor::VisualUpdateVisitor ; (; core::visual::VisualParams * ; params). inline . Function details. ◆ getClassName(). const char* sofa::simul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html:3925,inherit,inherited,3925,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ out_. std::ostream& sofa::simulation::MechanicalVPrintVisitor::out_. protected . ◆ v_. sofa::core::ConstMultiVecId sofa::simulation::MechanicalVPrintVisitor::v_. protected . Constructor details. ◆ MechanicalVPrintVisitor(). sofa::simulation::MechanicalVPrintVisitor::MechanicalVPrintVisitor ; (; const core::ExecParams ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html:3533,inherit,inherited,3533,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ rootNode. Node* sofa::simulation::InitVisitor::rootNode. protected . Constructor details. ◆ InitVisitor(). sofa::simulation::InitVisitor::InitVisitor ; (; const core::ExecParams * ; params). inline . Function details. ◆ getCategoryName(). const char* sofa::simulation::InitVisitor::getCategoryName ; (; ); const. inline",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html:3612,inherit,inherited,3612,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ rotation. Vec3 sofa::simulation::TransformationVisitor::rotation. protected . ◆ scale. Vec3 sofa::simulation::TransformationVisitor::scale. protected . ◆ translation. Vec3 sofa::simulation::TransformationVisitor::translation. protected . Constructor details. ◆ TransformationVisitor(). sofa::simulation::TransformationV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html:3834,inherit,inherited,3834,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ startingNode. Node* sofa::simulation::UpdateContextVisitor::startingNode. protected . Constructor details. ◆ UpdateContextVisitor(). sofa::simulation::UpdateContextVisitor::UpdateContextVisitor ; (; const core::ExecParams * ; params). inline . Function details. ◆ getCategoryName(). const char* sofa::simulation::Update",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html:3388,inherit,inherited,3388,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ threshold. SReal sofa::simulation::VelocityThresholdVisitor::threshold. protected . All the entries below this threshold will be set to 0. . ◆ vid. core::MultiVecId sofa::simulation::VelocityThresholdVisitor::vid. protected . Id of the vector to process. . Constructor details. ◆ VelocityThresholdVisitor(). sofa::simul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html:3579,inherit,inherited,3579,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ vparams. core::visual::VisualParams* sofa::simulation::VisualVisitor::vparams. protected . Constructor details. ◆ VisualVisitor(). sofa::simulation::VisualVisitor::VisualVisitor ; (; core::visual::VisualParams * ; params). inline . Function details. ◆ getCategoryName(). const char* sofa::simulation::VisualVisitor::get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html:3664,inherit,inherited,3664,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,2,['inherit'],['inherited']
Modifiability,"nst Index &c);  ; void accumulateForceLarge (Vector &f, const Vector &p, Index elementIndex);  ; void applyStiffnessLarge (Vector &f, const Vector &x, int i=0, Index a=0, Index b=1, Index c=2, Index d=3, SReal fact=1.0);  ; void initPolar (int i, Index &a, Index &b, Index &c, Index &d);  ; void accumulateForcePolar (Vector &f, const Vector &p, Index elementIndex);  ; void applyStiffnessPolar (Vector &f, const Vector &x, int i=0, Index a=0, Index b=1, Index c=2, Index d=3, SReal fact=1.0);  ; void printStiffnessMatrix (int idTetra);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracke",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:20797,inherit,inherited,20797,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,5,['inherit'],['inherited']
Modifiability,"nst MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:12348,inherit,inherited,12348,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['inherit'],['inherited']
Modifiability,"nst MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ReadTopology ();  ;  ~ReadTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html:12956,inherit,inherited,12956,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,1,['inherit'],['inherited']
Modifiability,"nst MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  PartialFixedProjectiveConstraint ();  ; virtual ~PartialFixedProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear);  ;  Protected Member Functions inherited from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >;  FixedProjectiveConstraint ();  ; virtual ~FixedProjectiveConstraint ();  ; void checkIndices ();  Function check values of given indices. More...;  ; void computeBBoxForIndices (const type::vector< Index > &indices);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject ()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:16324,inherit,inherited,16324,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"nst Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Friends; class HexahedronFEMForceFieldInternalData< DataTypes >;  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _alreadyInit. template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:23947,inherit,inherited,23947,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,3,['inherit'],['inherited']
Modifiability,"nst MechanicalParams *, const DataVecCoord &, const DataVecDeriv &) const;  ; Matrix operations; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addBToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addMToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Add Mass contribution to global Matrix assembling. More...;  ; virtual void addMToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal mFact, unsigned int &offset);  ; void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; virtual void addForce (const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:5285,inherit,inherited,5285,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['inherit'],['inherited']
Modifiability,"nst T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  VolumeMapping ();  ; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html:20128,inherit,inherited,20128,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,1,['inherit'],['inherited']
Modifiability,"nst VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  IndexValueMapper ();  ;  ~IndexValueMapper () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:13118,inherit,inherited,13118,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['inherit'],['inherited']
Modifiability,"nst VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshSubsetEngine ();  ;  ~MeshSubsetEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:14230,inherit,inherited,14230,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['inherit'],['inherited']
Modifiability,"nst VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SmoothMeshEngine ();  ;  ~SmoothMeshEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:14610,inherit,inherited,14610,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['inherit'],['inherited']
Modifiability,"nst char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ContextObject ();  ;  ~ContextObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html:9369,inherit,inherited,9369,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,1,['inherit'],['inherited']
Modifiability,"nst char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SceneLoader ();  Constructor. More...;  ;  ~SceneLoader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::loader::BaseLoader;  BaseLoader ();  ;  ~BaseLoader () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:9481,inherit,inherited,9481,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,2,['inherit'],['inherited']
Modifiability,"nst char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static bool isPointInAlignedBox (const typename DataTypes::CPos &p, const type::Vec6 &box);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_alignedBoxes. template<class DataTypes > . Data<type::vector<type::Vec6> > sofa::component::engine::select::boxroi::BoxROI< DataTypes >::d_alignedBoxes. List of boxes, each defined by two 3D points : xmin,ymin,zmin, xmax,ymax,zmax. . ◆ d_orientedBoxes. template<class DataTypes > . Data<type::vector<Vec10> > sofa::component::engine::select::boxroi::BoxROI< DataTypes >::d_orientedBoxes. each box is defined using three point coordinates and a depth value . ◆ m_orientedBoxes. template<class DataTypes > . type::vector<OrientedBox> sofa::component::engine::select::boxroi::BoxROI< DataTypes >::m_orientedBoxes. protected . Constructor details. ◆ BoxROI(). template<class DataTypes > . sofa::component::engine::select::boxroi::BoxROI< DataTypes >::BoxROI. protected . In case you add a new attribute please also add it into to the BoxROI_test.cpp::attributesTes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:22392,inherit,inherited,22392,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"nst char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::State< TDataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:15499,inherit,inherited,15499,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['inherit'],['inherited']
Modifiability,"nst char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_scales. template<class DataTypes > . Data< type::vector< sofa::type::Vec<3,Real> > > sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::d_scales. Scale transformation added to the rigid transformation. . ◆ SxInverses. template<class DataTypes > . type::vector<Matrix4x4> sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::SxInverses. inverse initial positions . Constructor details. ◆ DisplacementMatrixEngine(). template<class DataTypes > . sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::DisplacementMatrixEngine. DisplacementMatrixEngine. . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(DisplacementMatrixEngine< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4) ;  . ). sofacomponentenginetransformDisplacementMatrixEngine; Generated on Mon Nov 11 2024 02:44:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:19663,variab,variables,19663,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['variab'],['variables']
Modifiability,"nst char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:24441,inherit,inherited,24441,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,1,['inherit'],['inherited']
Modifiability,"nst char *name=""contactPoints"") override;  ; void resize (sofa::Size size) override;  ; void update () override;  ; void updateXfree () override;  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; virtual ~BaseContactMapper ();  ; virtual void resize (Size size)=0;  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >; MCollisionModel * model;  ; MMapping::SPtr mapping;  ; MMapper::SPtr mapper;  ;  Static Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  . Function details. ◆ addPoint(). template<class DataTypes > . sofa::Index sofa::component::collision::response::mapper::ContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >::addPoint ; (; const Coord & ; P, . sofa::Index ; index, . Real & ;  . ). inline . ◆ addPointB() [1/2]. template<class DataTypes > . sofa::Index sofa::component::collision::response::mapper::ContactMapper< collision::geometry::LineCollisionModel< sofa::defaulttype::Vec3Types >, DataTypes >::addPointB ; (; const Coord & ; , . sofa::Index ; index, . Real & ; , . const type::Vec3 & ; baryP . ). inline . ◆ addPointB() [2/2].",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gea471e7548debf57be3bb96db0509f8cf.html:2383,inherit,inherited,2383,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gea471e7548debf57be3bb96db0509f8cf.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gea471e7548debf57be3bb96db0509f8cf.html,2,['inherit'],['inherited']
Modifiability,"nst override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () const;  ; virtual void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange to the list. More...;  ; virtual void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5592,inherit,inherited,5592,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"nst override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () const;  ; virtual void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange to the list. More...;  ; virtual void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:8961,inherit,inherited,8961,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:7407,inherit,inherited,7407,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,34,['inherit'],['inherited']
Modifiability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:11349,inherit,inherited,11349,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:15289,inherit,inherited,15289,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"nst sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ; void computeForce (const VecCoord &state, VecDeriv &forces) override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setLock (bool value) override;  Override method to lock or unlock the force feedback computation. According to parameter, value == true (resp. false) will lock (resp. unlock) mutex. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ; void SOFA_COMPONENT_HAPTICS_API computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void SOFA_COMPONENT_HAPTICS_API computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:5769,inherit,inherited,5769,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['inherit'],['inherited']
Modifiability,"nst sofa::type::vector< QuadAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~QuadsAdded () override;  ; size_t getNbAddedQuads () const;  ; const sofa::type::vector< Topology::QuadID > & getArray () const;  ; const Topology::Quad & getQuad (const Topology::QuadID i) const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Quad > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ ancestorElems. sofa::type::vector< QuadAncestorElem > sofa::core::topology::QuadsAdded::ancestorElems. ◆ ancestorsList. sofa::type::vector< sofa::type::vector< Topology::QuadID > > sofa::core::topology::QuadsAdded::ancestorsList. ◆ coefs. sofa::type::vector< sofa::type::vector< SReal > > sofa::core::topology::QuadsAdded::coefs. ◆ nQuads. size_t sofa::core::topology::QuadsAdded::nQuads. ◆ quadArray. sofa::type::vector< Topology::Quad > sofa::core::topology::QuadsAdded::quadArray. ◆ quadIndexArray. sofa::type::vector< Topology::QuadID > sofa::core::topology::QuadsAdded::quadIndexArray. Constructor details. ◆ QuadsAdded() [1/4]. sofa::core::topology::QuadsAdded::QuadsAdded ; (; const size_t ; nT). inline . ◆ Qu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added.html:2349,inherit,inherited,2349,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_added.html,1,['inherit'],['inherited']
Modifiability,"nst std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ExtrudeSurface ();  ;  ~ExtrudeSurface () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html:13988,inherit,inherited,13988,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,1,['inherit'],['inherited']
Modifiability,"nst std::string &str);  Specialization for reading booleans. More...;  ; virtual T * beginEdit ();  ; virtual T * beginWriteOnly ();  ; virtual void endEdit ();  ; void setValue (const T &value);  ; const T & getValue () const;  ; BaseData * getNewInstance () override;  ;  Data (const BaseData::BaseInitData &init);  ;  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:10752,inherit,inherited,10752,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,3,['inherit'],['inherited']
Modifiability,"nst std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path, . type::vector< std::string > & ; listLoadedPlugins . ). ◆ registerPlugin(). auto sofa::helper::system::PluginManager::registerPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Register a plugin. Merely an alias for loadPlugin() . ◆ removeOnPluginCleanupCallbacks(). void sofa::helper::system::PluginManager::removeOnPluginCleanupCallbacks ; (; const std::string & ; key). ◆ removeOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::removeOnPluginLoadedCallback ; (; const std::string & ; key). ◆ unloadedPlugins(). const std::unordered_set< std::string > & s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:8324,plugin,pluginIsLoaded,8324,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,5,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'pluginIsLoaded']"
Modifiability,"nst;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:16911,inherit,inherited,16911,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"nst;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::common::AddSutureOperation::~AddSutureOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AddSutureOperation::configurePerformer ; (; sofa::gui::component::performer::In",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:1916,inherit,inherited,1916,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,2,['inherit'],['inherited']
Modifiability,"nst;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::FixPickedParticleButtonSetting::SPtr sofa::gui::common::FixOperation::setting. protected . Constructor details. ◆ FixOperation(). sofa::gui::common::FixOperation::FixOperation ; (; ). inline . ◆ ~FixOperation(). sofa::gui::common::FixOperation::~FixOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::FixOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html:1847,inherit,inherited,1847,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,2,['inherit'],['inherited']
Modifiability,"nst;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html:12716,inherit,inherited,12716,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html,1,['inherit'],['inherited']
Modifiability,"nst;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintInfo (const ConstraintParams *cParams, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &directions, VecConstArea &areas);  ; virtual void getConstraintResolution (std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; type::vector< std::string > getIdentifiers ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:4825,inherit,inherited,4825,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,6,['inherit'],['inherited']
Modifiability,"nst;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< TetrahedronCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Tetrahedron() [1/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; TetrahedronCollisionModel * ; model, . Index ; index . ). inline . ◆ Tetrahedron() [2/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; ). inline . ◆ Tetrahedron() [3/3]. sofa::component::collision::geometry::Tetrahedron::Tetrahedron ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ getBary(). type::Vec3 sofa::component::collision::geometry::Tetrahedron::getBary ; (; const type::Vec3 & ; p); const. inline . ◆ getCoord(). type::Vec3 sofa::component::collision::geometry::Tetrahedron::getCoord ; (; const type::Vec3 & ; b); const. inline . ◆ getDBary(). type::Vec3 sofa::component::collision::geometry::Tetrahedron::getDBary ; (; const type::Vec3 & ; v); const. inline . ◆ getDCoord(). type::Vec3 sofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html:4387,inherit,inherited,4387,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron.html,1,['inherit'],['inherited']
Modifiability,"nstall SOFA – SOFA. SOFA - Topic: [SOLVED] Ubuntu Software Center to install SOFA. /udk-comment-sont-leves-les-mappable-keys; ; SOFA - Topic: UDK : Comment sont levés les ""Mappable keys"". /unable-to-assign-rest_position-to-mo-in-sofapython3-plugin-in-debug-mode; ; SOFA - Topic: Unable to assign rest_position to MO in SofaPython3 plugin in Debug mode. /unable-to-build-main-cpp-in-sofaphysicsapi; ; SOFA - Topic: Unable to build main.cpp in SofaPhysicsAPI. /unable-to-build-of-sofaguiglut; ; SOFA - Topic: Unable to build of SofaGuiGlut. /unable-to-create-bilateralinteractionconstraint; ; SOFA - Topic: [SOLVED] Unable to create ‘BilateralInteractionConstraint’. /unable-to-link-qt5-dlls-could-not-find-qt-plugin-platform-windows; ; SOFA - Topic: [SOLVED] Unable to link Qt5 dlls: could not find Qt plugin platform ""windows"". /unable-to-load-mesh; ; SOFA - Topic: [SOLVED] Unable to load mesh. /unable-to-load-py-scene-from-softrobot-plugin; ; SOFA - Topic: [SOLVED] Unable to load .py scene from SoftRobot plugin. /unable-to-make-sofa-17-06-no-target-specified; ; SOFA - Topic: [SOLVED] Unable to make Sofa 17.06: No target specified. /undefined-reference-to-boostprogram_optionsabstrac_variables_mapoperator; ; SOFA - Topic: [SOLVED] undefined reference to 'boost::program_options::abstrac_variables_map::operator'. /unit-of-young-modulus-in-tetrahedronfemforcefield-and-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Unit of Young Modulus in TetrahedronFEMForceField and SurfacePressureConstraint. /units-of-simulation; . /feed; ; [SOLVED] Units of simulation – SOFA. SOFA - Topic: [SOLVED] Units of simulation. /units-por-pressure-at-fingercontroller-py; ; SOFA - Topic: [SOLVED] Units por pressure at fingerController.py. /upcoming-interesting-call-for-papers; ; SOFA - Topic: Upcoming interesting call for papers!. /update-an-engine-at-every-step; . /feed; ; [SOLVED] Update an engine at every step – SOFA. SOFA - Topic: [SOLVED] Update an engine at every step. /update-parameters-during-",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:411042,plugin,plugin,411042,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"nstall-sofa; . /feed; ; [SOLVED] Ubuntu Software Center to install SOFA – SOFA. SOFA - Topic: [SOLVED] Ubuntu Software Center to install SOFA. /udk-comment-sont-leves-les-mappable-keys; ; SOFA - Topic: UDK : Comment sont levés les ""Mappable keys"". /unable-to-assign-rest_position-to-mo-in-sofapython3-plugin-in-debug-mode; ; SOFA - Topic: Unable to assign rest_position to MO in SofaPython3 plugin in Debug mode. /unable-to-build-main-cpp-in-sofaphysicsapi; ; SOFA - Topic: Unable to build main.cpp in SofaPhysicsAPI. /unable-to-build-of-sofaguiglut; ; SOFA - Topic: Unable to build of SofaGuiGlut. /unable-to-create-bilateralinteractionconstraint; ; SOFA - Topic: [SOLVED] Unable to create ‘BilateralInteractionConstraint’. /unable-to-link-qt5-dlls-could-not-find-qt-plugin-platform-windows; ; SOFA - Topic: [SOLVED] Unable to link Qt5 dlls: could not find Qt plugin platform ""windows"". /unable-to-load-mesh; ; SOFA - Topic: [SOLVED] Unable to load mesh. /unable-to-load-py-scene-from-softrobot-plugin; ; SOFA - Topic: [SOLVED] Unable to load .py scene from SoftRobot plugin. /unable-to-make-sofa-17-06-no-target-specified; ; SOFA - Topic: [SOLVED] Unable to make Sofa 17.06: No target specified. /undefined-reference-to-boostprogram_optionsabstrac_variables_mapoperator; ; SOFA - Topic: [SOLVED] undefined reference to 'boost::program_options::abstrac_variables_map::operator'. /unit-of-young-modulus-in-tetrahedronfemforcefield-and-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Unit of Young Modulus in TetrahedronFEMForceField and SurfacePressureConstraint. /units-of-simulation; . /feed; ; [SOLVED] Units of simulation – SOFA. SOFA - Topic: [SOLVED] Units of simulation. /units-por-pressure-at-fingercontroller-py; ; SOFA - Topic: [SOLVED] Units por pressure at fingerController.py. /upcoming-interesting-call-for-papers; ; SOFA - Topic: Upcoming interesting call for papers!. /update-an-engine-at-every-step; . /feed; ; [SOLVED] Update an engine at every step – SOFA. SOFA - Topic: [SOLVE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:410969,plugin,plugin,410969,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"nstances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ReadTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadTopology ();  ; void processReadTopology (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html:4190,inherit,inherited,4190,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,1,['inherit'],['inherited']
Modifiability,"nstanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Function details. ◆ getFileRepository(). FileRepository* sofa::component::sceneutility::AddDataRepository::getFileRepository ; (; ). inlineoverrideprotectedvirtual . Implements sofa::component::sceneutility::BaseAddResourceRepository. ◆ SOFA_CLASS(). sofa::component::sceneutility::AddDataRepository::SOFA_CLASS ; (; AddDataRepository ; , . BaseAddResourceRepository ;  . ). sofacomponentsceneutilityAddDataRepository; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:13183,inherit,inherited,13183,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,2,['inherit'],['inherited']
Modifiability,nstraint-forces; . /feed; ; Constraint Forces – SOFA. SOFA - Topic Tag: Constraint Forces. /constraintresolution-h; . /feed; ; ConstraintResolution.h – SOFA. SOFA - Topic Tag: ConstraintResolution.h. /constraints; . /feed; ; constraints – SOFA. SOFA - Topic Tag: constraints. /constraint-solver; . /feed; ; Constraint Solver – SOFA. SOFA - Topic Tag: Constraint Solver. /contact; . /feed; ; contact – SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; constraints – SOFA. SOFA - Topic Tag: continuum robots; beam adaptater; constraints. /control; . /feed; ; control – SOFA. SOFA - Topic Tag: control. /controller; . /feed; ; Controller – SOFA. SOFA - Topic Tag: Controller. /control-xml-variables-in-c-or-python; . /feed; ; Control xml variables in C++ or Python. – SOFA. SOFA - Topic Tag: Control xml variables in C++ or Python. /coulomb; . /feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:437729,variab,variables-in-c-or-python,437729,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['variab'],['variables-in-c-or-python']
Modifiability,"nstraintFactor (const int index);  ; void doProjectPosition (Coord &x1, Coord &x2, bool freeRotations, unsigned index, Real positionFactor);  ; void doProjectVelocity (Deriv &x1, Deriv &x2, bool freeRotations, unsigned index, Real velocityFactor);  ; void doProjectResponse (Deriv &dx1, Deriv &dx2, bool freeRotations, bool twoway, unsigned index, Real responseFactor);  ; void calcRestRotations ();  ; SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void calcRestRotations ();  ; void doProjectPosition (Coord &x1, Coord &x2, bool freeRotations, unsigned index, Real positionFactor);  ; void doProjectPosition (Coord &x1, Coord &x2, bool freeRotations, unsigned index, Real positionFactor);  ; void doProjectVelocity (Deriv &x1, Deriv &x2, bool freeRotations, unsigned index, Real velocityFactor);  ; void doProjectVelocity (Deriv &x1, Deriv &x2, bool freeRotations, unsigned index, Real velocityFactor);  ; void doProjectResponse (Deriv &dx1, Deriv &dx2, bool freeRotations, bool twoway, unsigned index, Real responseFactor);  ; void doProjectResponse (Deriv &dx1, Deriv &dx2, bool freeRotations, bool twoway, unsigned index, Real responseFactor);  ; void calcRestRotations ();  ;  Protected Member Functions inherited from sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >;  PairInteractionProjectiveConstraintSet (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:20270,inherit,inherited,20270,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,4,['inherit'],['inherited']
Modifiability,"nstructor details. ◆ MergeROIs(). sofa::component::engine::select::MergeROIs::MergeROIs ; (; ). inlineprotected . ◆ ~MergeROIs(). sofa::component::engine::select::MergeROIs::~MergeROIs ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). void sofa::component::engine::select::MergeROIs::doUpdate ; (; ). overrideprotectedvirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). void sofa::component::engine::select::MergeROIs::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). void sofa::component::engine::select::MergeROIs::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ parseFields(). void sofa::component::engine::select::MergeROIs::parseFields ; (; const std::map< std::string, std::string * > & ; str). overridevirtual . Assign the field values stored in the given map of name -> value pairs. ; Reimplemented from sofa::core::objectmodel::Base. ◆ reinit(). void sofa::component::engine::select::MergeROIs::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER() [1/2]. sofa::component::engine::select::MergeROIs::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Index ; , . sofa::Index ;  . ). ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER() [2/2]. sofa::component::engine::select::MergeROIs::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Inherited ; , . Inherit1 ;  . ). ◆ SOFA_CLASS(). sofa::component::engine::select::MergeROIs::SOFA_CLASS ; (; MergeROIs ; , . DataEngine ;  . ). sofacomponentengineselectMergeROIs; Generated on Mon Nov 11 2024 02:40:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html:18304,variab,variables,18304,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,1,['variab'],['variables']
Modifiability,"nstructor. More...;  ;  ~MouseEvent () override;  Default destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Accessors; int getPosX (void) const;  ; int getPosY (void) const;  ; int getWheelDelta (void) const;  ; State getState (void) const;  ; static const char * GetClassName ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Constructor details. ◆ MouseEvent() [1/2]. sofa::core::objectmodel::MouseEvent::MouseEvent ; (; State ; state, . int ; wheelDelta = 0 . ). Wheel Mouse Event constructor. . ◆ MouseEvent() [2/2]. sofa::core::objectmodel::MouseEvent::MouseEvent ; (; State ; state, . int ; posX, . int ; posY . ). Default constructor. . ◆ ~MouseEvent(). sofa::core::objectmodel::MouseEvent::~MouseEvent ; (; ). override . Default destructor. . Function details. ◆ GetClassName(). static const char* sofa::core::objectmodel::MouseEvent::GetClassName ; (; ). inlinestatic . ◆ getPosX(). int sofa::core::objectmodel::MouseEvent::getPosX ; (; void ; ); const. inline . ◆ getPosY(). int sofa::core::objectmodel::MouseEvent::getPosY ; (; void ; ); const. inline . ◆ getState(). State sofa::core::objectmodel::MouseEvent::getState ; (; void ; ); const. inline . ◆ getWheelDelta(). int sofa::core::objectmodel::MouseEvent::getWheelDelta ; (; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event.html:1601,inherit,inherited,1601,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_mouse_event.html,1,['inherit'],['inherited']
Modifiability,"nstructor; ; SOFA - Topic: [SOLVED] error: const type ‘const IdMap’ without a user-provided default constructor. /error-could-not-find-either-qt5-or-qt6; ; SOFA - Topic: [SOLVED] Error: Could not find either Qt5 or Qt6. /error-couldnt-import-objects-from-stlib3-physics-rigid; ; SOFA - Topic: Error: couldn’t import objects from stlib3.physics.rigid. /error-generating-sofa-vs2017; ; SOFA - Topic: [SOLVED] Error Generating Sofa VS2017. /error-in-building-sofa-20-06-version-on-ubuntu; ; SOFA - Topic: [SOLVED] Error in Building Sofa 20.06 version on Ubuntu. /error-in-building-sofa-using-cmake; . /feed; ; [SOLVED] Error in building SOFA using cmake – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /4; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /5; ; SOFA - Topic: [SOLVED] Error in building SOFA using cmake. SOFA - Topic: [SOLVED] Error in building SOFA using cmake. /error-in-compiling-softrobots-plugin-cableconstraint-in-sofa-21-06-version; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:294337,plugin,plugin-cableconstraint-in-sofa-,294337,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-cableconstraint-in-sofa-']"
Modifiability,"nt (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (OglTexture, core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:4103,variab,variable,4103,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,2,['variab'],['variable']
Modifiability,"nt > d_nbVirtualFinerLevels;  create virtual (not in the animation tree) finer sparse grids in order to dispose of finest information (useful to compute better mechanical properties for example) More...;  ; sofa::helper::MarchingCubeUtility marchingCubes;  ; bool _usingMC;  ; type::vector< Type > _types;  BOUNDARY or FULL filled cells. More...;  ; type::vector< float > _stiffnessCoefs;  a stiffness coefficient per hexa (BOUNDARY=.5, FULL=1) More...;  ; type::vector< float > _massCoefs;  a stiffness coefficient per hexa (BOUNDARY=.5, FULL=1) More...;  ; SparseGridTopology * _finerSparseGrid;  an eventual finer sparse grid that can be used to built this coarser sparse grid More...;  ; SparseGridTopology * _coarserSparseGrid;  an eventual coarser sparse grid More...;  ; bool _alreadyInit;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::MeshTopology; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; type::vector< EdgesAroundVertex > m_orientedEdgesAroundVertex;  ; type::vector< EdgesInTriangle > m_edgesInTriangle;  ; type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad More...;  ; type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set of edges for each tetrahedron More...;  ; type::vector< EdgesInHexahedron > m_edgesInHexahedron;  provides the set of edges for each hexahedron More...;  ; type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex More...;  ; type::vector< TrianglesAroundVertex > m_orientedTrianglesAroundVertex;  for each vertex provides the set of oriented triangles adjacent to that vertex More...;  ; type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge More...;  ; type::vector< TrianglesInTetrahedron > m_trianglesInTetrahedron;  provides the set of tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:3702,inherit,inherited,3702,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,3,['inherit'],['inherited']
Modifiability,"nt from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Protected Attributes; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; void printValue (std::ostream &out) const override;  General case for printing default value. More...;  ; std::string getValueString () const override;  General case for printing value. More...;  ; std::string getDefaultValueString () const override;  General case for printing default value. More...;  ; std::string getValueTypeString () const override;  Get the name of the type of the value held in this Data. More...;  ; void operator= (const T &value);  ; bool copyValueFrom (const Data< T > *data);  ;  Data (const Data &)=delete;  ; Data & operator= (const Data &)=delete;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading strings. More...;  ; bool SOFA_CORE_API read (cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:3056,inherit,inherited,3056,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['inherit'],['inherited']
Modifiability,"nt m1, int m2, Coord Pfree, Coord Qfree, long id, PersistentID localid);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionConstraint, TDataTypes), BaseInteractionConstraint, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v) override;  ; void buildConstraintMatrix (const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) override;  ; void storeLambda (const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) override;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionConstraint;  SOFA_ABSTRACT_CLASS2 (BaseInteractionConstraint, BaseConstraint, StateAccessor);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; virtual type::vector< std::string > getBaseConstraintIdentifiers () override final;  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraint;  SOFA_ABSTRACT_CLASS (BaseConstraint, BaseConstraintSet);  ; int getGroup () const;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:8142,inherit,inherited,8142,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"nt the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; static constexpr unsigned ActiveFlags = TFlags;  ; static constexpr bool IsStrongLink = (ActiveFlags & FLAG_STRONGLINK) != 0;  ; static constexpr bool IsMultiLink = (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr bool StorePath = (ActiveFlags & FLAG_STOREPATH) != 0;  ;  Protected Attributes inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; ValidatorFn m_validator;  ;  Protected Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseLink; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData (BaseData *data);  ; static std::string CreateString (Base *object, Base *from);  ; static std::string CreateSt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:4571,inherit,inherited,4571,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,9,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,"nt to its englobing coarser matrix More...;  ; virtual void computeMechanicalMatricesByCondensation (ElementStiffness &K, ElementMass &M, const int elementIndice, int level);  ; virtual void computeMechanicalMatricesByCondensation ();  ; void computeClassicalMechanicalMatrices (ElementStiffness &K, ElementMass &M, const Index elementIndice, int level);  ; void computeMaterialStiffness (MaterialStiffness &m, double youngModulus, double poissonRatio);  compute the hookean material matrix More...;  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  HexahedronFEMForceFieldAndMass ();  ;  Protected Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  Mass (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Mass () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data h",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:23262,inherit,inherited,23262,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,6,['inherit'],['inherited']
Modifiability,"nt violations More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; Data< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1623,inherit,inherited,1623,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['inherit'],['inherited']
Modifiability,"nt, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearIndices ();  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void projectResponse (const Mechanic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:5369,inherit,inherited,5369,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"nt::collision::response::contact::PenalityContactForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Distance-based, frictionless penalty force. The force is applied to vertices attached to collision elements. . Public Attributes; Data< sofa::type::vector< Contact > > contacts;  Contacts. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Contact > prevContacts;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:1431,inherit,inherited,1431,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['inherit'],['inherited']
Modifiability,"nt::engine::select::ProximityROI< DataTypes >::ProximityROI. protected . ◆ ~ProximityROI(). template<class DataTypes > . sofa::component::engine::select::ProximityROI< DataTypes >::~ProximityROI ; (; ). inlineoverrideprotected . Function details. ◆ canCreate(). template<class DataTypes > . template<class T > . static bool sofa::component::engine::select::ProximityROI< DataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory. Check that DataTypes matches the MechanicalState. . ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::select::ProximityROI< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::select::ProximityROI< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::select::ProximityROI< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::ProximityROI< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::select::ProximityROI< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(ProximityROI< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentengineselectProximityROI; Generated on Mon Nov 11 2024 02:41:26 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html:20841,variab,variables,20841,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,1,['variab'],['variables']
Modifiability,"nt::io::mesh::MeshGmshLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::MeshGmshLoader Class Reference . #include <MeshGmshLoader.h>. Inheritance diagram for sofa::component::io::mesh::MeshGmshLoader:. [legend]. Public Member Functions;  SOFA_CLASS (MeshGmshLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html:1032,variab,variables,1032,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader.html,1,['variab'],['variables']
Modifiability,"nt::mechanicalload::EllipsoidForceField< DataTypes > Class Template Reference . #include <EllipsoidForceField.h>. Inheritance diagram for sofa::component::mechanicalload::EllipsoidForceField< DataTypes >:. [legend]. Classes; class  Contact;  . Public Attributes; Data< Coord > d_center;  ellipsoid center More...;  ; Data< Coord > d_vradius;  ellipsoid radius More...;  ; Data< Real > d_stiffness;  force stiffness (positive to repulse outward, negative inward) More...;  ; Data< Real > d_damping;  force damping More...;  ; Data< sofa::type::RGBAColor > d_color;  ellipsoid color. (default=0,0.5,1.0,1.0) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr auto N = DataTypes::spatial_dimensions;  . Protec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html:1297,inherit,inherited,1297,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html,1,['inherit'],['inherited']
Modifiability,"nt::performer::BaseAttachBodyPerformer< DataTypes >; This class is a virtualization of attachment performer used to allow the blind use of either ""AttachBodyPerformer"" based on springs and ""ConstraintAttachBodyPerformer"" based on lagrangian constraints. An example of use can be found in the external plugin Sofa.IGTLink in the component ""iGTLinkMouseInteractor"" . Protected Attributes; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ; virtual bool startPartial (const BodyPicked &picked)=0;  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:1523,inherit,inherited,1523,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,6,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"nt::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12413,inherit,inherited,12413,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,2,['inherit'],['inherited']
Modifiability,"nt;  SOFA_ABSTRACT_CLASS (BaseConstraint, BaseConstraintSet);  ; int getGroup () const;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintResolution (std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; type::vector< std::string > getIdentifiers ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:7635,inherit,inherited,7635,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"ntIndex) const;  ; void load (const char *filename);  ; const OutVecCoord & getPoints ();  ; void setJMatrixBlock (sofa::Index outIdx, sofa::Index inIdx);  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_matrixJ instead"") DeprecatedAndRemoved matrixJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_updateJ instead"") DeprecatedAndRemoved updateJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobian instead"") DeprecatedAndRemoved eigenJacobian;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobians instead"") DeprecatedAndRemoved eigenJacobians;  used by getJs More...;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_geometricStiffnessMatrix instead"") DeprecatedAndRemoved geometricStiffnessMatrix;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:21788,inherit,inherited,21788,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['inherit'],['inherited']
Modifiability,"ntRestPosition (const PointID pointId) const;  ; sofa::core::State< DataTypes > * getDOF () const;  Returns the object where the DOFs are stored. More...;  ; float getIndicesScale () const;  ; void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< core::topology::PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs) override;  Called by the state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ; virtual void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs);  Process the added point initialization according to the topology and local coordinates. More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html:4014,inherit,inherited,4014,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,1,['inherit'],['inherited']
Modifiability,"ntainer ; (; ). Method to test Triangle container concistency. . ◆ checkTriangleToEdgeCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleToEdgeCrossContainer ; (; ). Method to test triangles to edges cross container concistency. . ◆ checkTriangleTopology(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleTopology ; (; ). } ; Triangle methods { Full method to check Triangle Topology. Will call See alsocheckTriangleContainer, . checkTriangleToEdgeCrossContainer and . checkTriangleToVertexCrossContainer . ◆ checkTriangleToVertexCrossContainer(). bool sofa::component::topology::utility::TopologyChecker::checkTriangleToVertexCrossContainer ; (; ). Method to test triangles to vertices cross container concistency. . ◆ draw(). void sofa::component::topology::utility::TopologyChecker::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ handleEvent(). void sofa::component::topology::utility::TopologyChecker::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::topology::utility::TopologyChecker::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::component::topology::utility::TopologyChecker::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::topology::utility::TopologyChecker::SOFA_CLASS ; (; TopologyChecker ; , . core::objectmodel::BaseObject ;  . ). sofacomponenttopologyutilityTopologyChecker; Generated on Mon Nov 11 2024 03:10:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:22572,variab,variables,22572,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['variab'],['variables']
Modifiability,"ntainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer:. [legend]. Public Attributes; Data< int > _level;  Number of resolution levels between the fine and coarse mesh. More...;  ; Data< Vec3i > fineResolution;  fine resolution More...;  ; Data< type::vector< Index > > hexaIndexInRegularGrid;  indices of the hexa in the grid. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:1366,inherit,inherited,1366,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"nteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; void setStiffness (double f);  ; void setDamping (double f);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ addedSprings. template<class DataTypes > . sofa::type::vector<Spring> sofa::gui::component::performer::SuturePointPerformer< DataTypes >::addedSprings. protected . ◆ first. template<class DataTypes > . bool sofa::gui::component::performer::SuturePointPerformer< DataTypes >::first. protected . ◆ firstPicked. template<class DataTypes > . BodyPicked sofa::gui::component::performer::SuturePointPerformer< DataTypes >::firstPicked. protected . ◆ fixedIndex. template<class DataTypes > . unsigned int sofa::gui::component::performer::SuturePointPerformer< DataTypes >::fixedIndex. protected . ◆ FixObject. template<class DataTypes > . FixObjectType* sofa::gui::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html:1953,inherit,inherited,1953,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,7,"['Inherit', 'inherit']","['Inherited', 'inherited']"
Modifiability,nteractionconstraint; . /feed; ; Issue using BilateralInteractionConstraint – SOFA. SOFA - Topic: Issue using BilateralInteractionConstraint. /issue-when-changing-object-position-via-python-scene; . /embed; ; SOFA - Topic: Issue when changing object position via python scene. SOFA - Topic: Issue when changing object position via python scene. /issue-while-exporting-tetrahedron-mesh-generated-from-polyhedron; ; SOFA - Topic: [SOLVED] Issue while exporting tetrahedron mesh generated from polyhedron. /issue-with-cuda-examples; ; SOFA - Topic: Issue with CUDA examples. /issue-with-initializing-stiffspringforcefied; ; SOFA - Topic: [SOLVED] Issue with initializing StiffSpringForceFied. /issue-with-the-update-of-the-stiffness-variable-in-stiffspringff; ; SOFA - Topic: [SOLVED] Issue with the update of the stiffness variable in StiffSpringFF. /is-there-any-method-to-apply-inital-stress-state-in-sofa; ; SOFA - Topic: Is there any method to apply inital stress state in SOFA?. /is-there-any-plugin-for-leapmotion; . /feed; ; [SOLVED] Is there any plugin for LeapMotion? – SOFA. SOFA - Topic: [SOLVED] Is there any plugin for LeapMotion?. /is-trianglesettopologymodifierremovetrianglespostprocessing-empty; . /page; . /10; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /3; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /7; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /i-want-to-study-all-about-sofa; . /feed; ; [SOLVED] I want to study about SOFA – SOFA. SOFA - Topic: [SOLVED] I want to study about SOFA. /join-our-linkedin-group; ; SOFA - Topic: Join our LinkedIn group!. /join-the-community-at-the-stc5; ; SOFA - Topic: Join the community at the STC#5. /join-the-stc7-on-the-french-riviera; ; SOFA - Topic: Join the STC#7 on the French Riviera. /jo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:338569,plugin,plugin-for-leapmotion,338569,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-for-leapmotion']
Modifiability,"ntersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:3256,inherit,inherited,3256,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['inherit'],['inherited']
Modifiability,"ntext *, PointedType *), const std::string &typeInfo);  . Protected Member Functions; void sequentialSolve (simulation::Node *node);  Function called if the solvers run sequentially. More...;  ; void parallelSolve (simulation::Node *node);  ; void initializeTaskScheduler ();  Initialize the task scheduler if it is not done already. More...;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Attribute details. ◆ dt. SReal sofa::simulation::SolveVisitor::dt. protected . ◆ m_computeForceIsolatedInteracti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html:4572,inherit,inherited,4572,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,2,['inherit'],['inherited']
Modifiability,"ntext;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html:1934,inherit,inherited,1934,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"ntrolled by the angular springs More...;  ; Data< VecReal > d_angularStiffness;  angular stiffness for the controlled nodes More...;  ; Data< VecReal > d_angularLimit;  angular limit (max; min) values where the force applies More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< type::RGBAColor > d_springColor;  spring color More...;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mState;  ; VecReal k;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attribu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html:2479,inherit,inherited,2479,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"nts . Public Attributes; Data< type::vector< Vec3 > > centers;  Center(s) of the sphere(s) More...;  ; Data< type::vector< Real > > radii;  Radius(i) of the sphere(s) More...;  ; Data< unsigned int > f_num;  Maximum number of points to select. More...;  ; Data< VecCoord > f_X0;  Rest position coordinates of the degrees of freedom. More...;  ; Data< SetIndex > f_indices;  Indices of the points contained in the ROI. More...;  ; Data< VecCoord > f_pointsInROI;  Points contained in the ROI. More...;  ; Data< type::vector< Real > > f_distanceInROI;  distance between the points contained in the ROI and the closest center. More...;  ; Data< SetIndex > f_indicesOut;  Indices of the points not contained in the ROI. More...;  ; Data< bool > p_drawSphere;  Draw sphere(s) More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< double > _drawSize;  rendering size for box and topological elements More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ProximityROI, DataTypes), core::DataEngi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html:1634,inherit,inherited,1634,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"nts it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Im",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html:13551,inherit,inherited,13551,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< LinearMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and al",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:3546,inherit,inherited,3546,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:12506,inherit,inherited,12506,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,2,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ Contact(). sofa::core::collision::Contact::Contact ; (; ). inlineprotected . ◆ ~Contact(). sofa::core::collision::Contact::~Contact ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ Create(). Contact::SPtr sofa::core::collision::Contact::Create ; (; const std::string & ; type, . core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . Intersection * ; intersectionMethod, . bool ; verbose = true .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html:13768,inherit,inherited,13768,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,2,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; contex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:12436,inherit,inherited,12436,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,2,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ RayTraceDetection(). sofa::component::collision::detection::algorithm::RayTraceDetection::RayTraceDetection ; (; ). protecteddefault . ◆ ~RayTraceDetection(). sofa::component::collision::detection::algorithm::RayTraceDetection::~RayTraceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::RayTraceDetection::create ; (; T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html:12929,inherit,inherited,12929,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html,2,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html:13249,inherit,inherited,13249,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,92,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html:11232,inherit,inherited,11232,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,2,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod; static void computeInverseFromPermutation (int matrixSize, const int *inPermutation, int *outInversePermutation);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; templ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html:10505,inherit,inherited,10505,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,8,['inherit'],['inherited']
Modifiability,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html:12899,inherit,inherited,12899,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,88,['inherit'],['inherited']
Modifiability,"nts. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraRemoved *);  Apply removing hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraMoved_Removing *);  Apply removing function on moved hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraMoved_Adding *);  Apply adding function on moved hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::HexahedraRenumbering *);  Apply renumbering on hexahedron elements. More...;  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Point >::EMoved_Adding *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Point >::EMoved_Removing *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Edge >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Triangle >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Quad >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Tetrahedron >::EMoved *);  ; virtual void ApplyTopologyChange (const TopologyChangeElementInfo< Topology::Hexahedron >::EMoved *);  ;  Public Member Functions inherited from sofa::core::topology::TopologyHandler; void update () override;  Update this value. More...;  ; virtual void ApplyTopologyChanges (const std::list< const core::topology::TopologyChange * > &_topologyChangeEvents, const Size _dataSize);  ; virtual void ApplyTopologyChange (const core::topology::EndingEvent *);  ; virtual void ApplyTopologyChange (const core::topology::PointsIndicesSwap *);  ; virtual void ApplyTopologyChange (const core::topology::PointsAdded *);  Apply adding points elements. More...;  ; virtual void ApplyTopologyChange (const core::topology::PointsRemoved *);  Apply removing points elements. More...;  ; virtual void ApplyTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html:7633,inherit,inherited,7633,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,1,['inherit'],['inherited']
Modifiability,"nt . ). inline . This loads a vertex and fragment shader. . ◆ IsReady(). bool sofa::gl::GLSLShader::IsReady ; (; ); const. inline . These are our basic get functions for our private data . ◆ IsSet(). bool sofa::gl::GLSLShader::IsSet ; (; GLint ; type); const. ◆ LoadTextFile(). std::string sofa::gl::GLSLShader::LoadTextFile ; (; const std::string & ; strFile). This loads our text file for each shader and returns it in a string. ; This function loads and returns a text file for our shaders. . ◆ Release(). void sofa::gl::GLSLShader::Release ; (; ). This releases our memory for our shader. ; This function frees all of our shader data. . ◆ SetActiveShaderProgram(). void sofa::gl::GLSLShader::SetActiveShaderProgram ; (; GLhandleARB ; s). static . ◆ SetFloat(). void sofa::gl::GLSLShader::SetFloat ; (; GLint ; variable, . float ; newValue . ). ◆ SetFloat2(). void sofa::gl::GLSLShader::SetFloat2 ; (; GLint ; variable, . float ; v0, . float ; v1 . ). ◆ SetFloat3(). void sofa::gl::GLSLShader::SetFloat3 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2 . ). ◆ SetFloat4(). void sofa::gl::GLSLShader::SetFloat4 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2, . float ; v3 . ). ◆ SetFloatVector(). void sofa::gl::GLSLShader::SetFloatVector ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector2(). void sofa::gl::GLSLShader::SetFloatVector2 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector3(). void sofa::gl::GLSLShader::SetFloatVector3 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector4(). void sofa::gl::GLSLShader::SetFloatVector4 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFragmentShaderFileName(). void sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:9253,variab,variable,9253,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['variab'],['variable']
Modifiability,"nt _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 2, float > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html:14761,inherit,inherited,14761,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,1,['inherit'],['inherited']
Modifiability,"nt _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 3, float > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html:14761,inherit,inherited,14761,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,1,['inherit'],['inherited']
Modifiability,"nt _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 4, float > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html:14761,inherit,inherited,14761,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,2,['inherit'],['inherited']
Modifiability,"nt getSETotalSize ();  . Static Public Member Functions; static void setActiveTexture (unsigned short unit);  Utility function to set current active texture. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  OglTexture ();  ;  ~OglTexture () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:15468,inherit,inherited,15468,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,4,['inherit'],['inherited']
Modifiability,"nt m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void setObject1 (MechanicalState *object1);  ; void setObject2 (MechanicalState *object2);  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool load (const char *filename);  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f1, DataVecDeriv &f2, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void addDForce (const core::MechanicalParams *, DataVecDeriv &df1, DataVecDeriv &df2, const DataVecDeriv &dx1, const DataVecDeriv &dx2) override;  ; void addSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; DataTypes::DPos computeSpringDForce (VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor);  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:5219,variab,variables,5219,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,1,['variab'],['variables']
Modifiability,"nt m_instanciationSourceFilePos {-1};  . Protected Attributes; ContactMap contactMap;  ; std::map< Instance, ContactMap > storedContactMap;  ; std::map< std::pair< std::string, std::pair< std::string, std::string > >, int > errorMsgCount;  ;  Protected Attributes inherited from sofa::core::collision::ContactManager; Intersection * intersectionMethod;  Current intersection method. More...;  ; ContactVector contacts;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ; std::map< Instance, ContactVector > storedContacts;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (CollisionResponse, sofa::core::collision::ContactManager);  ; void createContacts (const DetectionOutputMap &outputs) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void reset () override;  Reset to initial state. More...;  ; void cleanup () override;  ; virtual std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:2692,inherit,inherited,2692,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,2,['inherit'],['inherited']
Modifiability,"nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairBoxROI ();  ;  ~PairBoxROI () override;  ; bool isPointInBox (const CPos &p, const Vec6 &b);  ; bool isPointInBox (const PointID &pid, const Vec6 &b);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html:14990,inherit,inherited,14990,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"o More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VoxelLoader, BaseLoader);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7);  ; virtual type::Vec3 getVoxelSize () const =0;  ; virtual type::vector< unsigned int > getHexaIndicesInGrid () const =0;  ; virtual int getDataSize () const =0;  ; virtual Vec6i getROI () const =0;  ; virtual unsigned char * getData ()=0;  ; virtual unsigned char * getSegmentID ()=0;  ; virtual void createSegmentation3DTexture (unsigned char **textureData, int &width, int &height, int &depth)=0;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool load ()=0;  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html:2486,inherit,inherited,2486,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,1,['inherit'],['inherited']
Modifiability,"o a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronCollisionModel ();  ; virtual void updateFromTopology ();  ; void addTetraToDraw (const Tetrahedron &t, std::vector< sofa::type::Vec3 > &tetraVertices, std::vector< sofa::type::Vec3 > &normalVertices);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:19194,inherit,inherited,19194,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,1,['inherit'],['inherited']
Modifiability,"o a rigid 3D. /3; ; SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. /7; ; SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. SOFA - Topic: [SOLVED] Attaching a vec3D object to a rigid 3D. /attach-points-from-objects-witch-different-dofs; ; SOFA - Topic: [SOLVED] Attach points from objects with different DOFs. /auto-resetting-problem-when-doing-grasp-using-bilateralinteractionconstraint; ; SOFA - Topic: auto-resetting problem when doing grasp using BilateralInteractionConstraint. /available-objects-in-the-factory-python-or-xml; ; SOFA - Topic: [SOLVED] Available objects in the factory (python or xml). /avoid-changing-the-trajectory-when-collision; ; SOFA - Topic: [SOLVED] Avoid changing the trajectory when collision. /barycentricmapping-and-hexahedral-meshes; ; SOFA - Topic: BarycentricMapping and hexahedral meshes. /basic-collision-scene-not-working-properly; ; SOFA - Topic: [SOLVED] Basic collision scene not working properly. /beamadapter-plugin; ; SOFA - Topic: [SOLVED] BeamAdapter Plugin. /beam-collision-mapping; ; SOFA - Topic: Beam collision mapping. /beamfemforcefield-setting; . /feed; ; BeamFEMForceField Setting – SOFA. SOFA - Topic: BeamFEMForceField Setting. /begining-with-sofa; . /feed; ; [SOLVED] begining with SOFA – SOFA. SOFA - Topic: [SOLVED] begining with SOFA. /beginner-question-sofa-scenes-plugins-and-3rd-party-applications; ; SOFA - Topic: [Beginner Question] sofa scenes, plugins and 3rd party applications. /best-practice-for-setting-up-an-animation; ; SOFA - Topic: Best practice for setting up an animation?. /best-way-to-detect-and-quantify-interpenetration; ; SOFA - Topic: Best way to detect and quantify interpenetration. /best-way-to-implement-ligaments-attaching-finger-bones-together; ; SOFA - Topic: Best Way to Implement Ligaments Attaching Finger Bones Together. /bilateralinteractionconstraint-causes-unrealistic-motion; ; SOFA - Topic: BilateralInteractionConstraint causes unrealistic motion. /bilateralinteractionco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:260022,plugin,plugin,260022,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"o create this spring forcefield. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html:4338,inherit,inherited,4338,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,1,['inherit'],['inherited']
Modifiability,"o describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. ; More... Inheritance diagram for sofa::core::Multi2Mapping< TIn1, TIn2, TOut >:. [legend]; Detailed Description; template<class TIn1, class TIn2, class TOut>; class sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; LinkFromModels1 fromModels1;  Input Models container. New inputs are a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:1391,inherit,inherited,1391,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,1,['inherit'],['inherited']
Modifiability,"o disable this criterion. More...;  ; Data< bool > d_should_diverge_when_residual_is_growing;  Divergence criterion: The newton iterations will stop when the residual is greater than the one from the previous iteration. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolverAccessor; SingleLink< LinearSolverAccessor, LinearSolver, BaseLink::FLAG_STRONGLINK > l_linearSolver;  . Public Member Functions;  SOFA_CLASS2 (StaticSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor);  ;  StaticSolver ();  ; void solve (const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; auto squared_residual_norms () const -> const std::vector< SReal > &;  ; auto squared_increment_norms () const -> const std::vector< SReal > &;  ; SReal getVelocityIntegrationFactor () const override;  ; SReal getPositionIntegrationFactor () const override;  ; virtual SReal getPositionIntegrationFactor (SReal dt) const;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative, SReal dt) const;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ; SReal getSolutionIntegra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:2742,inherit,inherited,2742,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['inherit'],['inherited']
Modifiability,"o know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static void buildHashTable (linearalgebra::CompressedRowSparseMatrix< SReal > &M, ConstantCRSMapping &mapping);  ;  Static Protected Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; template<core::matrixaccumulator::Contribution c> ; static SReal getContributionFactor (const sofa::core::MechanicalParams *mparams, const sofa::core::matrixaccumulator::get_component_type< c > *object);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; Data< bool > d_assembleStiffness;  If true, the stiffness is added to the global matrix. More...;  ; Data< bool > d_assembleMass;  If true, the mass is added to the global matrix. More...;  ; Data< bool > d_assembleDamping;  If true, the damping is added to the global matrix. More...;  ; Data< bool > d_assembleGeometricStiffness;  If true, the geometric stiffness of mappings is added to the global matrix. More...;  ; Data< bool > d_applyProjectiveConstraints;  If true, projective constraints are applied on the global matrix. More...;  ; Data< bool > d_applyMappedComponents;  If true, mapped components contribute to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:24364,inherit,inherited,24364,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['inherit'],['inherited']
Modifiability,"o many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. ; More... Inheritance diagram for sofa::core::MultiMapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::MultiMapping< TIn, TOut >; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; LinkFromModels fromModels;  ; LinkToModels toModels;  ;  Protected Att",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html:1391,inherit,inherited,1391,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,1,['inherit'],['inherited']
Modifiability,"o size elements, if relevant. More...;  ; long long getIntegerValue (const void *, Index) const override;  ; double getScalarValue (const void *, Index) const override;  ; std::string getTextValue (const void *, Index) const override;  Get the value at index of data as a string. More...;  ; void setIntegerValue (void *, Index, long long) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *, Index, double) const override;  Set the value at index of data from a scalar value. More...;  ; void setTextValue (void *, Index, const std::string &) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *) const override;  ; void * getValuePtr (void *) const override;  ; const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Protected Member Functions; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ NameOnlyTypeInfo(). sofa::defaulttype::NameOnlyTypeInfo::NameOnlyTypeInfo ; (; const std::string & ; name, . const std::string & ;  . ). inline . Function details. ◆ BaseType(). const AbstractTypeInfo* sofa::defaulttype::NameOnlyTypeInfo::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). sofa::Size sofa::defaulttype::NameOnlyTypeInfo::byte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html:2546,inherit,inherited,2546,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,1,['inherit'],['inherited']
Modifiability,"o size elements, if relevant. More...;  ; long long getIntegerValue (const void *, Index) const override;  ; double getScalarValue (const void *, Index) const override;  ; std::string getTextValue (const void *, Index) const override;  Get the value at index of data as a string. More...;  ; void setIntegerValue (void *, Index, long long) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *, Index, double) const override;  Set the value at index of data from a scalar value. More...;  ; void setTextValue (void *, Index, const std::string &) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *) const override;  ; void * getValuePtr (void *) const override;  ; const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Static Public Member Functions; static AbstractTypeInfo * Get ();  . Protected Member Functions; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ NoTypeInfo(). sofa::defaulttype::NoTypeInfo::NoTypeInfo ; (; ). inline . Function details. ◆ BaseType(). const AbstractTypeInfo* sofa::defaulttype::NoTypeInfo::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). sofa::Size sofa::defaulttype::NoTypeInfo::byteSize ; (; ); con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html:2506,inherit,inherited,2506,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,1,['inherit'],['inherited']
Modifiability,"o the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLEL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:10070,inherit,inherited,10070,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,1,['inherit'],['inherited']
Modifiability,"o);  ; MechanicalVMultiOpVisitor & setMapped (bool m=true);  ; Result fwdMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; void setVMultiOp (VMultiOp &o);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_multi_op_visitor.html:2186,inherit,inherited,2186,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_multi_op_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_multi_op_visitor.html,2,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _alreadyInit. template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::_alreadyInit. protected . ◆ _coef. template<class DataTypes > . type::Mat<8,3,int> sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::_coef. protected . coef of each vertices to compute the strain stress matrix . ◆ _elementStiffnesses. template<class DataTypes > . sofa::core::objectmodel::RenamedData<VecElementStiffness> sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::_elementStiffnesses. protected . ◆ _gatherBsize. template<class DataTypes > . sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::_gatherBsize. ◆ _gatherPt. template<class DataTypes > . s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:25010,inherit,inherited,25010,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _anisotropicMaterial. template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::_anisotropicMaterial. protected . ◆ criteriaValue. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Real> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::criteriaValue. ◆ d_computePrincipalStress. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::d_computePrincipalStress. Compute principal stress for each triangle. . ◆ d_criteriaValue. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >::d_criteriaValue. Fracturable threshold used to draw fracturable triangles. . ◆ d_hosfordExponant. template<class DataTypes > . Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html:26298,inherit,inherited,26298,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _assembling. template<class DataTypes > . core::objectmodel::RenamedData<bool> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::_assembling. ◆ _computeVonMisesStress. template<class DataTypes > . core::objectmodel::RenamedData<int> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::_computeVonMisesStress. ◆ _gatherBsize. template<class DataTypes > . core::objectmodel::RenamedData<sofa::helper::OptionsGroup> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::_gatherBsize. ◆ _gatherPt. template<class DataTypes > . core::objectmodel::RenamedData<sofa::helper::OptionsGroup> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::_gatherPt. ◆ _indexedElements. template<class DataTypes > . const VecElement* sofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:31440,inherit,inherited,31440,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _assembling. template<class DataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::_assembling. ◆ _displayWholeVolume. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::_displayWholeVolume. ◆ _localStiffnessFactor. template<class DataTypes > . sofa::core::objectmodel::RenamedData<VecReal> sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::_localStiffnessFactor. ◆ _poissonRatio. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Real> sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::_poissonRatio. ◆ _stiffnesses. template<class DataTypes > . CompressedMatrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:25857,inherit,inherited,25857,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _coef. template<class DataTypes > . type::Mat<8,3,int> sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::_coef. protected . coef of each vertices to compute the strain stress matrix . ◆ d_hexahedronInfo. template<class DataTypes > . core::topology::HexahedronData<sofa::type::vector<HexahedronInformation> > sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::d_hexahedronInfo. container that stotes all requires information for each hexahedron . ◆ d_method. template<class DataTypes > . Data<std::string> sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::d_method. ""large"" or ""polar"" displacements . ◆ f_method. template<class DataTypes > . sofa::core::objectmodel::RenamedData<std::string> sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:23081,inherit,inherited,23081,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _indexedElements. template<class DataTypes > . const VecElement* sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::_indexedElements. protected . ◆ _initialPoints. template<class DataTypes > . sofa::core::objectmodel::RenamedData<VecCoord> sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::_initialPoints. protected . ◆ _materialsStiffnesses. template<class DataTypes > . VecMaterialStiffness sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::_materialsStiffnesses. protected . the material stiffness matrices vector . ◆ _rotatedInitialElements. template<class DataTypes > . sofa::type::vector< type::fixed_array <Coord, 3> > sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::_rotatedInitialElements. protected . The initials posit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html:23837,inherit,inherited,23837,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _initialPoints. template<class DataTypes > . VecCoord sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::_initialPoints. the initial positions of the points . ◆ d_drawColor1. template<class DataTypes > . Data<sofa::type::RGBAColor> sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::d_drawColor1. draw color for faces 1 . ◆ d_drawColor2. template<class DataTypes > . Data<sofa::type::RGBAColor> sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::d_drawColor2. draw color for faces 2 . ◆ d_drawColor3. template<class DataTypes > . Data<sofa::type::RGBAColor> sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >::d_drawColor3. draw color for faces 3 . ◆ d_drawColor4. templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html:22820,inherit,inherited,22820,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_computePrincipalStress. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_computePrincipalStress. Compute principal stress for each triangle. . ◆ d_damping. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_damping. Forcefield intern parameters. ; Ratio damping/stiffness . ◆ d_restScale. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_restScale. Scale factor applied to rest positions (to simulate pre-stretched materials) . ◆ d_showStressThreshold. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_showStressThreshold. Thresho",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:23834,inherit,inherited,23834,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_fiberCenter. template<class DataTypes > . Data<VecCoord> sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::d_fiberCenter. Concentric fiber center in global reference frame. . ◆ d_localFiberDirection. template<class DataTypes > . core::topology::TriangleData< sofa::type::vector< TriangleFiberDirection > > sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::d_localFiberDirection. Computed fibers direction within each triangle. . ◆ d_showFiber. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >::d_showFiber. Flag activating rendering of fiber directions within each triangle. . ◆ d_theta. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::Triangu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:27761,inherit,inherited,27761,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void chang",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html:16040,inherit,inherited,16040,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"oModel;  True to resize the output MechanicalState to match the size of indices. More...;  ; SubsetMappingInternalData< In, Out > data;  ; SingleLink< SubsetMapping< In, Out >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  . Protected Attributes; eigen_type eigen;  ; js_type js;  ; std::unique_ptr< MatrixType > matrixJ;  ; bool updateJ;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(SubsetMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut));  ; void postInit ();  ; void clear (Size reserve);  ; int addPoint (Index index);  ; void init () override;  ; virtual ~SubsetMapping ();  ; void apply (const core::MechanicalParams *mparams, OutDataVecCoord &dOut, const InDataVecCoord &dIn) override;  ; void applyJ (const core::MechanicalParams *mparams, OutDataVecDeriv &dOut, const InDataVecDeriv &dIn) override;  ; void applyJT (const core::MechanicalParams *mparams, InDataVecDeriv &dOut, const OutDataVecDeriv &dIn) override;  ; void applyJT (const core::ConstraintParams *, InDataMatrixDeriv &dOut, const OutDataMatrixDeriv &dIn) override;  ; const sofa::linearalgebra::BaseMatrix * getJ () override;  ; const js_type * getJs () override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  SubsetMapping ();  . Attribute details. ◆ d_first. template<class TIn , class TOut > . Data< Index > sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::d_first. first index (use if indices are sequential) . ◆ d_handleTopologyChange. template<class TIn , class TOut > . Data< bool > sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::d_handleTopologyChange. Enable support of topological changes for indices (disable if it is",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html:3126,inherit,inherited,3126,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,1,['inherit'],['inherited']
Modifiability,"oadSucceed = true;  . Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; bool canWriteFileExtension (const char *extension) override;  Pre-saving check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; void write (sofa::simulation::Node *node, const char *filename) override;  write the file More...;  ; NodeSPtr doLoadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ; bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded) override;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  . Static Public Member Functions; static NodeSPtr processXML (xml::BaseElement *xml, const char *filename);  generic function to process xml tree (after loading the xml structure) More...;  ; static NodeSPtr loadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  remov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:1310,plugin,pluginName,1310,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,4,"['inherit', 'plugin']","['inherited', 'pluginName']"
Modifiability,"oadTextFile(). std::string sofa::gl::GLSLShader::LoadTextFile ; (; const std::string & ; strFile). This loads our text file for each shader and returns it in a string. ; This function loads and returns a text file for our shaders. . ◆ Release(). void sofa::gl::GLSLShader::Release ; (; ). This releases our memory for our shader. ; This function frees all of our shader data. . ◆ SetActiveShaderProgram(). void sofa::gl::GLSLShader::SetActiveShaderProgram ; (; GLhandleARB ; s). static . ◆ SetFloat(). void sofa::gl::GLSLShader::SetFloat ; (; GLint ; variable, . float ; newValue . ). ◆ SetFloat2(). void sofa::gl::GLSLShader::SetFloat2 ; (; GLint ; variable, . float ; v0, . float ; v1 . ). ◆ SetFloat3(). void sofa::gl::GLSLShader::SetFloat3 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2 . ). ◆ SetFloat4(). void sofa::gl::GLSLShader::SetFloat4 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2, . float ; v3 . ). ◆ SetFloatVector(). void sofa::gl::GLSLShader::SetFloatVector ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector2(). void sofa::gl::GLSLShader::SetFloatVector2 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector3(). void sofa::gl::GLSLShader::SetFloatVector3 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector4(). void sofa::gl::GLSLShader::SetFloatVector4 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFragmentShaderFileName(). void sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; string). inline . ◆ SetInt(). void sofa::gl::GLSLShader::SetInt ; (; GLint ; variable, . int ; newValue . ). Below are functions to set an integer or a float . ◆ SetInt2(). void sofa::gl::GLSLShader::SetInt2 ; (; GLint ; variable, . int ; i1, . int ; i2 . ). Below are ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:9519,variab,variable,9519,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['variab'],['variable']
Modifiability,"oading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DirectionalLight, Light);  ;  DirectionalLight ();  ;  ~DirectionalLight () override;  ; void preDrawShadow (core::visual::VisualParams *vp) override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *vparams) override;  Draw the light source from an external point of view. More...;  ; GLuint getDepthTexture () override;  ; GLuint getColorTexture () override;  ; type::Vec3 getDirection () override;  ; LightType getLightType () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Light;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html:3528,inherit,inherited,3528,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,1,['inherit'],['inherited']
Modifiability,"oading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DiagonalVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void addForce (const core::MechanicalParams *, DataVecDeriv &, const DataVecCoord &, const DataVecDeriv &) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void addBToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal bFact, unsigned int &offset) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *matrix) override;  ; SReal getPotentialEnergy (const core::MechanicalParams *params, const DataVecCoord &x) const override;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html:3137,inherit,inherited,3137,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,1,['inherit'],['inherited']
Modifiability,"oat * ; value . ). ◆ SetFloatVector4(). void sofa::gl::GLSLShader::SetFloatVector4 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFragmentShaderFileName(). void sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; string). inline . ◆ SetInt(). void sofa::gl::GLSLShader::SetInt ; (; GLint ; variable, . int ; newValue . ). Below are functions to set an integer or a float . ◆ SetInt2(). void sofa::gl::GLSLShader::SetInt2 ; (; GLint ; variable, . int ; i1, . int ; i2 . ). Below are functions to set more than 1 integer or float . ◆ SetInt3(). void sofa::gl::GLSLShader::SetInt3 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3 . ). ◆ SetInt4(). void sofa::gl::GLSLShader::SetInt4 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3, . int ; i4 . ). ◆ SetIntVector(). void sofa::gl::GLSLShader::SetIntVector ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). Below are functions to set a vector of integer or float . ◆ SetIntVector2(). void sofa::gl::GLSLShader::SetIntVector2 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector3(). void sofa::gl::GLSLShader::SetIntVector3 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector4(). void sofa::gl::GLSLShader::SetIntVector4 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetMatrix2(). void sofa::gl::GLSLShader::SetMatrix2 ; (; GLint ; location, . GLsizei ; count, . GLboolean ; transpose, . const GLfloat * ; value . ). Below are functions to set a matrix . ◆ SetMatrix2x3(). void sofa::gl::GLSLShader::SetMatrix2x3 ; (; GLint ; , . GLsizei ; , . GLboolean ; , . const GLfloat * ;  . ). inline . ◆ SetMatrix2x4(). void sofa::gl::GLSLShader::SetMatrix2x4 ; (; GLint ; , . GLsizei ; , . GLboolean ; , . const GLfloat * ;  . ). inline . ◆ Se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:10850,variab,variable,10850,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['variab'],['variable']
Modifiability,"oat> sofa::component::visual::VisualGrid::d_thickness. Thickness of the lines in the grid. . ◆ internalPlane. PLANE sofa::component::visual::VisualGrid::internalPlane. protected . Pre-computed points used to draw the grid. . ◆ m_drawnPoints. sofa::type::vector<Vec3> sofa::component::visual::VisualGrid::m_drawnPoints. protected . Constructor details. ◆ VisualGrid(). sofa::component::visual::VisualGrid::VisualGrid ; (; ). ◆ ~VisualGrid(). sofa::component::visual::VisualGrid::~VisualGrid ; (; ). overridedefault . Function details. ◆ buildGrid(). void sofa::component::visual::VisualGrid::buildGrid ; (; ). ◆ doDrawVisual(). void sofa::component::visual::VisualGrid::doDrawVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). void sofa::component::visual::VisualGrid::doUpdateVisual ; (; const core::visual::VisualParams * ; ). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::component::visual::VisualGrid::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::component::visual::VisualGrid::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). sofa::component::visual::VisualGrid::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). ◆ SOFA_CLASS(). sofa::component::visual::VisualGrid::SOFA_CLASS ; (; VisualGrid ; , . VisualModel ;  . ). ◆ updateGrid(). void sofa::component::visual::VisualGrid::updateGrid ; (; ). Enum details. ◆ PLANE. enum sofa::component::visual::VisualGrid::PLANE. EnumeratorPLANE_X ; PLANE_Y ; PLANE_Z . sofacomponentvisualVisualGrid; Generated on Mon Nov 11 2024 03:10:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:17715,variab,variables,17715,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,1,['variab'],['variables']
Modifiability,"oat ; v3 . ). ◆ SetFloatVector(). void sofa::gl::GLSLShader::SetFloatVector ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector2(). void sofa::gl::GLSLShader::SetFloatVector2 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector3(). void sofa::gl::GLSLShader::SetFloatVector3 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector4(). void sofa::gl::GLSLShader::SetFloatVector4 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFragmentShaderFileName(). void sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; string). inline . ◆ SetInt(). void sofa::gl::GLSLShader::SetInt ; (; GLint ; variable, . int ; newValue . ). Below are functions to set an integer or a float . ◆ SetInt2(). void sofa::gl::GLSLShader::SetInt2 ; (; GLint ; variable, . int ; i1, . int ; i2 . ). Below are functions to set more than 1 integer or float . ◆ SetInt3(). void sofa::gl::GLSLShader::SetInt3 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3 . ). ◆ SetInt4(). void sofa::gl::GLSLShader::SetInt4 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3, . int ; i4 . ). ◆ SetIntVector(). void sofa::gl::GLSLShader::SetIntVector ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). Below are functions to set a vector of integer or float . ◆ SetIntVector2(). void sofa::gl::GLSLShader::SetIntVector2 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector3(). void sofa::gl::GLSLShader::SetIntVector3 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector4(). void sofa::gl::GLSLShader::SetIntVector4 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetMatrix2(). void sofa::gl::GLSLShader::SetMatrix2 ; (; GLint ; loca",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:10449,variab,variable,10449,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['variab'],['variable']
Modifiability,"object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr sofa::Size spatial_dimensions = Coord::spatial_dimensions;  ; static constexpr sofa::Size coord_total_size = Coord::total_size;  . Protected Attributes; VecIndex m_indices;  ; VecIndex m_ext_indices;  ; type::vector< CPos > m_pivots;  ; SReal lastUpdatedStep {};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Static Protected Attributes; static constexpr type::fixed_array< bool, coord_total_size > s_defaultActiveDirections = sofa::type::makeHomogeneousArray<bool, coord_total_size>(true);  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html:4323,inherit,inherited,4323,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,3,['inherit'],['inherited']
Modifiability,"object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ fileTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:23323,inherit,inherited,23323,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,2,['inherit'],['inherited']
Modifiability,"object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  AngularSpringForceField ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html:16895,inherit,inherited,16895,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,4,['inherit'],['inherited']
Modifiability,"object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Static Public Member Functions; static void setActiveTexture (unsigned short unit);  Utility function to set current active texture. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  OglTexture ();  ;  ~OglTexture () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:14767,inherit,inherited,14767,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,2,['inherit'],['inherited']
Modifiability,"object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Static Public Member Functions; static void setActiveTexture (unsigned short unit);  Utility function to set current active texture. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  OglTexturePointer ();  ;  ~OglTexturePointer () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:13420,inherit,inherited,13420,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,2,['inherit'],['inherited']
Modifiability,"objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AddRecordedCameraButtonSetting, sofa::component::setting::MouseButtonSetting)sofa::gui::component::AddRecordedCameraButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html:10081,Config,ConfigurationSetting,10081,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_recorded_camera_button_setting-members.html,1,['Config'],['ConfigurationSetting']
Modifiability,"objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr unsigned int CoordSize = Coord::total_size;  . Protected Attributes; std::unique_ptr< PatchTestMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:3745,inherit,inherited,3745,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"objectmodel::BaseObject::SPtr &object);  ; void intrusive_ptr_add_ref (Aspect *a);  ; void intrusive_ptr_release (Aspect *a);  ; template<typename T > ; std::string GetSofaTypeTemplateName (const std::string prefix="""");  ; template<typename T1 , typename T2 , typename ... Ts> ; std::string GetSofaTypeTemplateName (const std::string prefix="""");  ; std::ostream & operator<< (std::ostream &out, const BaseContext &);  ; std::ostream & operator<< (std::ostream &out, const sofa::core::objectmodel::BaseData &df);  ; template<class T > ; const ClassInfo & classidT ();  ; std::ostream & operator<< (std::ostream &o, const ComponentState &s);  Defining the in/ou operator for use of component status with Data<> More...;  ; std::istream & operator>> (std::istream &i, ComponentState &s);  ; std::ostream & operator<< (std::ostream &o, const sofa::core::objectmodel::TagSet &tagSet);  ; std::istream & operator>> (std::istream &in, sofa::core::objectmodel::TagSet &tagSet);  . Variables; template class SOFA_CORE_API Data< bool >;  . Typedef Documentation. ◆ AspectRef. using sofa::core::objectmodel::AspectRef = typedef sptr<Aspect>. Enumeration Type Documentation. ◆ ComponentState. enum sofa::core::objectmodel::ComponentState. strong . enum class is a C++ x11 feature (http://en.cppreference.com/w/cpp/language/enum), Indicate the state of a sofa object. . EnumeratorUndefined component that does not make use of this field have this one . Loading the component is loading but never passed successfully its init() function . Valid the component has passed successfully its init function . Dirty the component is ready to be used but requires a call to reinit . Busy the component is doing ""something"", don't trust its values for doing your computation . Invalid the component reached an error and is thus unable to behave normally. . ◆ DataEngineDataType. enum sofa::core::objectmodel::DataEngineDataType. strong . EnumeratorDataEngineNothing ; DataEngineInput ; DataEngineOutput . ◆ PathType. enum so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:7515,Variab,Variables,7515,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['Variab'],['Variables']
Modifiability,"objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:1570,inherit,inherited,1570,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,1,['inherit'],['inherited']
Modifiability,"objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ScaleTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html:2154,inherit,inherited,2154,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,"objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualGrid, VisualModel);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  VisualGrid ();  ;  ~VisualGrid () override=default;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateGrid ();  ; void buildGrid ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:3226,variab,variables,3226,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,1,['variab'],['variables']
Modifiability,"objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PointCollisionModel ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:20496,inherit,inherited,20496,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,1,['inherit'],['inherited']
Modifiability,"objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PositionalLight, Light);  ;  PositionalLight ();  ;  ~PositionalLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *) override;  Draw the light source from an external point of view. More...;  ; const sofa::type::Vec3 getPosition () override;  ; LightType getLightType () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Light;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void preDrawShadow (core::visual::VisualParams *vp);  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html:3528,inherit,inherited,3528,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,2,['inherit'],['inherited']
Modifiability,"objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseROI, DataTypes), Inherit);  ; void init () final;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) final;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) final;  ; virtual void roiInit ();  ; virtual bool roiDoUpdate ();  ; virtual void roiDraw (const core::visual::VisualParams *);  ; virtual void roiComputeBBox (const core::ExecParams *, type::BoundingBox &);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaini",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html:6547,inherit,inherited,6547,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeQuadsAndGenerateHexas, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:3701,inherit,inherited,3701,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['inherit'],['inherited']
Modifiability,"objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html:11701,inherit,inherited,11701,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,9,['inherit'],['inherited']
Modifiability,"objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the eve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:10450,inherit,inherited,10450,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,6,['inherit'],['inherited']
Modifiability,"objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Function details. ◆ getOperationType(). std::string sofa::gui::component::ConstraintAttachButtonSetting::getOperationType ; (; ). inlineoverridevirtual . Implements sofa::component::setting::MouseButtonSetting. ◆ SOFA_CLASS(). sofa::gui::component::ConstraintAttachButtonSetting::SOFA_CLASS ; (; ConstraintAttachButtonSetting ; , . MouseButtonSetting ;  . ). sofaguicomponentConstraintAttachButtonSetting; Generated on Mon Nov 11 2024",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:12957,inherit,inherited,12957,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,2,['inherit'],['inherited']
Modifiability,"objectmodel::DataFileName f_infilename;  ; sofa::core::objectmodel::RenamedData< Real > f_period;  ; sofa::core::objectmodel::RenamedData< bool > f_reinit;  ; sofa::core::objectmodel::DataFileName d_outfilename;  output file name More...;  ; sofa::core::objectmodel::DataFileName d_infilename;  input file containing constant joint force More...;  ; Data< Real > d_period;  period between outputs More...;  ; Data< bool > d_reinit;  flag enabling reinitialization of the output file at each timestep More...;  ; Data< sofa::type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< bool > d_showLawfulTorsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; Data< Real > d_showFactorSize;  modify the size of the debug information of a given factor More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:1952,inherit,inherited,1952,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"objectmodel::ScriptEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::ScriptEvent Class Reference . #include <ScriptEvent.h>; Generic Event class to send a message through the simulation graph. ; More... Inheritance diagram for sofa::core::objectmodel::ScriptEvent:. [legend]; Detailed Description; Generic Event class to send a message through the simulation graph. . Public Member Functions;  ScriptEvent (sofa::core::sptr< sofa::core::objectmodel::BaseNode > sender, const char *eventName);  Constructor. More...;  ;  ~ScriptEvent () override;  Destructor. More...;  ; const sofa::core::sptr< sofa::core::objectmodel::BaseNode > getSender (void) const;  Get the sender name. More...;  ; const std::string & getEventName (void) const;  Get the event name. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ ScriptEvent(). sofa::core::objectmodel::ScriptEvent::ScriptEvent ; (; sofa::core::sptr< sofa::core::objectmodel::BaseNode > ; sender, . const char * ; eventN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html:974,inherit,inherited,974,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html,1,['inherit'],['inherited']
Modifiability,"objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  . Static Public Member Functions; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ~MechanicalState () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMechanicalState;  BaseMechanicalState ();  ;  ~BaseMechanicalState () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:22124,inherit,inherited,22124,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['inherit'],['inherited']
Modifiability,objects; ; SOFA - Topic: How do I use a clip to achieve moving objects ?. /how-much-continuum-mechanics-and-fea-theory-needed-to-work-with-sofa; ; SOFA - Topic: [SOLVED] How much (Continuum Mechanics and FEA) theory needed to work with Sofa. /how-should-i-use-damping-in-hexahedronfemforcefield; . /feed; ; [SOLVED] How should i use damping in HexahedronFEMForceField – SOFA. SOFA - Topic: [SOLVED] How should i use damping in HexahedronFEMForceField. /how-sofa-folders-hierarchy-is-organized; ; SOFA - Topic: [SOLVED] How sofa folders hierarchy is organized?. /how-the-object-deforms-in-this-specific-example; ; SOFA - Topic: [SOLVED] How the object deforms in this specific example?. /how-to-achieve-respiratory-motion; ; SOFA - Topic: [SOLVED] How to achieve respiratory motion?. /how-to-achieve-simulation-of-liver-deformation-using-sofa-framework%EF%BC%9F; ; SOFA - Topic: [SOLVED] How to achieve simulation of liver deformation using SOFA framework？. /how-to-add-flexible-plugin-to-sofa; ; SOFA - Topic: How to add Flexible plugin to SOFA. /how-to-add-points-into-a-container; ; SOFA - Topic: [SOLVED] How to add points into a container?. /how-to-add-python-script-to-c-code; ; SOFA - Topic: [SOLVED] How to add python script to c++ code. /how-to-add-qt-and-boost-to-the-path; ; SOFA - Topic: How to add qt and boost to the PATH?. /how-to-add-value-in-a-item-of-a-section; . /embed; ; SOFA - Topic: [SOLVED] How to add value in a item of a section. SOFA - Topic: [SOLVED] How to add value in a item of a section. /how-to-add-vr-functionality-in-sofa-framework; . /feed; ; [SOLVED] How to add VR functionality in SOFA framework? – SOFA. SOFA - Topic: [SOLVED] How to add VR functionality in SOFA framework?. /how-to-apply-a-force-and-get-the-feedback-of-the-soft-tissue-deformation; ; SOFA - Topic: How to apply a force and get the feedback of the soft tissue deformation. /how-to-apply-an-orientation-dependent-pure-torque-to-rigid-body; ; SOFA - Topic: How to apply an orientation-dependent pur,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:315434,flexible,flexible-plugin-to-sofa,315434,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,"['flexible', 'plugin']","['flexible-plugin-to-sofa', 'plugin']"
Modifiability,"od used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::playback::ReadState; sofa::core::objectmodel::DataFileName d_filename;  ; Data< double > d_interval;  time duration between inputs More...;  ; Data< double > d_shift;  shift between times in the file and times when they will be read More...;  ; Data< bool > d_loop;  set to 'true' to re-read the file when reaching the end More...;  ; Data< double > d_scalePos;  scale the input mechanical object More...;  ; Data< type::Vec3 > d_rotation;  rotate the input mechanical object More...;  ; Data< type::Vec3 > d_translation;  translate the input mechanical object More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ dofError_V. double sofa::component::playback::CompareState::dofError_V.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:14403,inherit,inherited,14403,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['inherit'],['inherited']
Modifiability,"ode () override;  ; virtual bool doAddObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd);  Add an object. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool doRemoveObject (sofa::core::objectmodel::BaseObject::SPtr obj);  Remove an object. More...;  ; virtual void doMoveObject (sofa::core::objectmodel::BaseObject::SPtr sobj, Node *prev_parent);  Remove an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseNode;  BaseNode ();  ;  ~BaseNode () override;  ; void setObjectContext (BaseObject::SPtr obj);  Set the context of an object to this. More...;  ; void clearObjectContext (BaseObject::SPtr obj);  Reset the context of an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Context;  Context ();  ; virtual ~Context () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseContext;  BaseContext ();  ;  ~BaseContext () override;  . @internal stuff related to the DAG traversal; enum  VisitedStatus { NOT_VISITED =0; , VISITED; , PRUNED; };  traversal flags More...;  ; typedef std::map< DAGNode *, StatusStruc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:26537,inherit,inherited,26537,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['inherit'],['inherited']
Modifiability,"ode () override;  ; virtual bool doAddObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd);  Add an object. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool doRemoveObject (sofa::core::objectmodel::BaseObject::SPtr obj);  Remove an object. More...;  ; virtual void doMoveObject (sofa::core::objectmodel::BaseObject::SPtr sobj, Node *prev_parent);  Remove an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseNode;  BaseNode ();  ;  ~BaseNode () override;  ; void setObjectContext (BaseObject::SPtr obj);  Set the context of an object to this. More...;  ; void clearObjectContext (BaseObject::SPtr obj);  Reset the context of an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Context;  Context ();  ; virtual ~Context () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseContext;  BaseContext ();  ;  ~BaseContext () override;  . Friends; class VisitorScheduler;  . Attribute details. ◆ _context. BaseContext* sofa::simulation::Node::_context. protected . ◆ actionStack. std::stack<Visitor*> sofa::simulatio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:28757,inherit,inherited,28757,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,2,['inherit'],['inherited']
Modifiability,"odel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::rendering3d::OglCylinderModel Class Reference . #include <OglCylinderModel.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglCylinderModel:. [legend]. Public Member Functions;  SOFA_CLASS2 (OglCylinderModel, core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:1042,inherit,inherited,1042,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['inherit'],['inherited']
Modifiability,"odel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:2487,inherit,inherited,2487,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['inherit'],['inherited']
Modifiability,"odel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MakeDataAliasComponent, core::objectmodel::BaseObject);  ;  MakeDataAliasComponent ();  ;  ~MakeDataAliasComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html:2459,inherit,inherited,2459,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,1,['inherit'],['inherited']
Modifiability,"odel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ OglShaderMacro(). sofa::gl::component::shader::OglShaderMacro::OglShaderMacro ; (; ). protected . ◆ ~OglShaderMacro(). sofa::gl::component::shader::OglShaderMacro::~OglShaderMacro ; (; ). overrideprotected . Function details. ◆ getSEType(). ShaderElementType sofa::gl::component::shader::OglShaderMacro::getSEType ; (; ); const. inlineoverridevirtual . Returns the type of shader element (texture, macro, variable, or attribute) ; Implements sofa::core::visual::ShaderElement. ◆ getSEValue() [1/2]. const core::objectmodel::BaseData* sofa::gl::component::shader::OglShaderMacro::getSEValue ; (; ); const. inlineoverridevirtual . Implements sofa::core::visual::ShaderElement.; Reimplemented in sofa::gl::component::shader::OglShaderDefineMacro. ◆ getSEValue() [2/2]. core::objectmodel::BaseData* sofa::gl::component::shader::OglShaderMacro::getSEValue ; (; ). inlineoverridevirtual . Implements sofa::core::visual::ShaderElement.; Reimplemented in sofa::gl::component::shader::OglShaderDefineMacro. ◆ init(). void sofa::gl::component::shader::OglShaderMacro::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::gl::component::shader::OglShaderElement.; Reimplemented in sofa::gl::component::shader::OglShaderDefineMacro. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglShaderMacro::SOFA_CLASS ; (; OglShaderMac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:14814,variab,variable,14814,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,2,['variab'],['variable']
Modifiability,"odel::RenamedData< bool > srgbTexturing;  ; Data< sofa::type::Material > d_material;  ; Data< bool > d_putOnlyTexCoords;  ; Data< bool > d_srgbTexturing;  ; sofa::core::objectmodel::RenamedData< type::vector< sofa::type::Material > > materials;  ; sofa::core::objectmodel::RenamedData< type::vector< FaceGroup > > groups;  ; Data< type::vector< sofa::type::Material > > d_materials;  ; Data< type::vector< FaceGroup > > d_groups;  ; SingleLink< VisualModelImpl, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::defaulttype::Rigid3fTypes::VecCoord xforms;  Temporary added here from RigidState deprecated inheritance. More...;  ; bool xformsModified;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:5390,inherit,inherited,5390,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['inherit'],['inherited']
Modifiability,"odel::TagSet > output_tags;  output reference tag (use it if the resulting fbo is used as a source for another secondary pass) More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  ;  Public Attributes inherited from sofa::gl::component::shader::VisualManagerPass; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; OglShader::SPtr m_shaderPostproc;  ; SingleLink< VisualManagerSecondaryPass, OglShader, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_shader;  ;  Protected Attributes inherited from sofa::gl::component::shader::VisualManagerPass; bool multiPassEnabled;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:1729,inherit,inherited,1729,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,2,['inherit'],['inherited']
Modifiability,"odelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >:. [legend]. Public Member Functions;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual QWidget * getQWidget ()=0;  ; virtual QString helpString () const =0;  ; void captureEvent () override;  ; virtual void keyPressEvent (QKeyEvent *e);  ; virtual void keyReleaseEvent (QKeyEvent *e);  ; bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html:1400,config,configure,1400,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,2,['config'],['configure']
Modifiability,"of all members . sofa::simulation::UpdateVisualContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateVisualContextVisitor:. [legend]. Public Member Functions;  UpdateVisualContextVisitor (const sofa::core::visual::VisualParams *vparams);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html:1031,inherit,inherited,1031,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,2,['inherit'],['inherited']
Modifiability,"of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1539,inherit,inherited,1539,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Attribute details. ◆ endTime. template<class DataTypes > . Data<Real> sofa::core::behavior::ProjectiveConstraintSet< DataTypes >::endTime. The constraint stops acting after the given value. Use a negative value for infinite constraints. . Constructor details. ◆ ProjectiveConstraintSet(). template<class DataTypes > . sofa::core::behavior::ProjectiveConstraintSet< DataTypes >::ProjectiveConstraintSet ; (; MechanicalState< DataTypes > * ; mm = nullptr). protected . ◆ ~ProjectiveConstraintSet(). template<class DataTypes > . sofa::core::behavior::ProjectiveConstraintSet< DataTypes >::~ProjectiveConstraintSet. overrideprotected . Function details. ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::core::behavior::ProjectiveConstraintSet< DataTypes >::applyConstraint ; (; const MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). inlineoverri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:17677,inherit,inherited,17677,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DirectionProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:4236,inherit,inherited,4236,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedPlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes));  ; void init () override;  inherited from the BaseObject interface More...;  ; void draw (const VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void projectResponse (const MechanicalParams *mparams, DataVecDeriv &resData) override;  – Constraint interface More...;  ; void projectVelocity (const MechanicalParams *mparams, DataVecDeriv &vData) override;  project dx to constrained space (dx models a velocity) More...;  ; void projectPosition (const MechanicalParams *mparams, DataVecCoord &xData) override;  project x to constrained space (x models a position) More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *M, unsigned offset) override;  Implement projectMatrix for ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:3747,inherit,inherited,3747,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:4124,inherit,inherited,4124,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedRotationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &dx) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &dx) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &x) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &c) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html:2469,inherit,inherited,2469,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedTranslationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearIndices ();  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:4230,inherit,inherited,4230,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:4255,inherit,inherited,4255,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ParabolicProjectiveConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, DataTypes));  ; void addConstraint (unsigned index);  ; void setP1 (const Vec3R &p);  ; void setP2 (const Vec3R &p);  ; void setP3 (const Vec3R &p);  ; void setBeginTime (const Real &t);  ; void setEndTime (const Real &t);  ; Vec3R getP1 ();  ; Vec3R getP2 ();  ; Vec3R getP3 ();  ; Real getBeginTime ();  ; Real getEndTime ();  ; void init () override;  – Constraint interface More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:3289,inherit,inherited,3289,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:4254,inherit,inherited,4254,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:4276,inherit,inherited,4276,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PositionBasedDynamicsProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  PositionBasedDynamicsProjectiveConstraint ();  ; virtual ~PositionBasedDynamicsProjectiveConstraint ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *, DataVecDeriv &) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void handleTopologyChange () overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html:3996,inherit,inherited,3996,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (OglTexturePointer, core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:2833,inherit,inherited,2833,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,2,['inherit'],['inherited']
Modifiability,"of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  MechanicalStateForceFeedback (void);  ;  Protected Member Functions inherited from sofa::component::haptics::ForceFeedback;  ForceFeedback ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:12730,inherit,inherited,12730,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,4,['inherit'],['inherited']
Modifiability,"of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PartialLinearMovementProjectiveConstraintInternalData< DataTypes > > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, ke",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:5695,inherit,inherited,5695,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,3,['inherit'],['inherited']
Modifiability,"of the normals. More...;  ; Data< int > d_nbSections;  Number of sections / steps in the extrusion. More...;  ; Data< VecCoord > d_curveVertices;  Position coordinates along the initial curve. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Edge > > d_curveEdges;  Indices of the edges of the curve to extrude. More...;  ; Data< VecCoord > d_extrudedVertices;  Coordinates of the extruded vertices. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Edge > > d_extrudedEdges;  List of all edges generated during the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > d_extrudedQuads;  List of all quads generated during the extrusion. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeEdgesAndGenerateQuads, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html:2019,inherit,inherited,2019,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,1,['inherit'],['inherited']
Modifiability,"of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< unsigned int > m_contacts;  ; PlaneForceFieldInternalData< DataTypes > m_data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void setPlane (const Deriv &normal, Real d);  ; voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html:3128,inherit,inherited,3128,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,3,['inherit'],['inherited']
Modifiability,"of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisions. sofa::type::vector<core::collision::DetectionOutput*> sofa::component::collision::response::contact::BaseRayContact::collisions. protected . ◆ model1. CollisionModel1* sofa::component::collision::response::contact::BaseRayContact::model1. protected . Constructor details. ◆ BaseRayContact(). sofa::component::collision::response::contact::BaseRayContact::BaseRay",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html:13927,inherit,inherited,13927,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,1,['inherit'],['inherited']
Modifiability,"of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contactIndex. template<class TCollisionModel1 , class TCollisionModel2 , class ResponseDataTypes = sofa::defaulttype::Vec3Types> . ContactIndexMap sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >::contactIndex. protected . Mapping of contactids to force element (+1, so that 0 means not activ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html:14563,inherit,inherited,14563,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,1,['inherit'],['inherited']
Modifiability,"of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::collision::response::contact::BaseRayContact;  BaseRayContact (CollisionModel1 *model1, core::collision::Intersection *instersectionMethod);  ;  ~BaseRayContact () override;  ;  Protected Member Functions inherited from sofa::core::collision::Contact;  Contact ();  ;  ~Contact () override;  Destructor. More...;  ;  Protected Member F",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:12585,inherit,inherited,12585,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,1,['inherit'],['inherited']
Modifiability,"of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html:11743,inherit,inherited,11743,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,2,['inherit'],['inherited']
Modifiability,"of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::helper::TriangleOctreeRoot;  TriangleOctreeRoot ();  ;  ~TriangleOctreeRoot ();  ; void buildOctree ();  ; void buildOctree (const SeqTriangles *triangles, const VecCoord *pos);  . Protected Member Functions;  TriangleOctreeModel ();  ;  Protected Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html:18379,inherit,inherited,18379,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,2,['inherit'],['inherited']
Modifiability,"ofa::component::collision::response::contact::PenalityContactForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::response::contact::PenalityContactForceField< DataTypes > Class Template Reference . #include <PenalityContactForceField.h>. Inheritance diagram for sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Distance-based, frictionless penalty force. The force is applied to vertices attached to collision elements. . Public Attributes; Data< sofa::type::vector< Contact > > contacts;  Contacts. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:960,inherit,inherited,960,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['inherit'],['inherited']
Modifiability,"ofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes > Class Template Reference . #include <FixedLagrangianConstraint.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >:. [legend]. Protected Attributes; sofa::type::vector< unsigned int > m_cid;  ; sofa::type::vector< Deriv > m_prevForces;  ; SetIndex d_indices;  ; Data< bool > d_fixAll;  If true, fix all points. More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedLagrangianConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::Constraint, DataTypes));  ; void init () ov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:1100,inherit,inherited,1100,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"ofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::data { nullptr }. protected . ◆ f_direction. template<class DataTypes > . sofa::core::objectmodel::RenamedData<CPos> sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::f_direction. ◆ f_drawSize. template<class DataTypes > . sofa::core::objectmodel::RenamedData<SReal> sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::f_drawSize. ◆ f_indices. template<class DataTypes > . sofa::core::objectmodel::RenamedData< sofa::type::vector< sofa::Index > > sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::f_indices. ◆ f_origin. template<class DataTypes > . sofa::core::objectmodel::RenamedData<CPos> sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::f_origin. ◆ J. template<class DataTypes > . SparseMatrix sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::J. protected . auxiliary variable . ◆ jacobian. template<class DataTypes > . SparseMatrix sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::jacobian. protected . projection matrix in local state . ◆ l_topology. template<class DataTypes > . SingleLink<LineProjectiveConstraint<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . Constructor details. ◆ LineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::LineProjectiveConstraint. protected . ◆ ~LineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::~LineProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes > . void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:22313,variab,variable,22313,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['variab'],['variable']
Modifiability,"ofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::data { nullptr }. protected . ◆ f_drawSize. template<class DataTypes > . sofa::core::objectmodel::RenamedData<SReal> sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::f_drawSize. ◆ f_indices. template<class DataTypes > . sofa::core::objectmodel::RenamedData< sofa::type::vector< sofa::Index > > sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::f_indices. ◆ f_normal. template<class DataTypes > . sofa::core::objectmodel::RenamedData<CPos> sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::f_normal. ◆ f_origin. template<class DataTypes > . sofa::core::objectmodel::RenamedData<CPos> sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::f_origin. ◆ J. template<class DataTypes > . SparseMatrix sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::J. protected . auxiliary variable . ◆ jacobian. template<class DataTypes > . SparseMatrix sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::jacobian. protected . projection matrix in local state . ◆ l_topology. template<class DataTypes > . SingleLink<PlaneProjectiveConstraint<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . Constructor details. ◆ PlaneProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::PlaneProjectiveConstraint. protected . ◆ ~PlaneProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::~PlaneProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:22072,variab,variable,22072,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['variab'],['variable']
Modifiability,"ofa::component::engine::analyze::HausdorffDistance< DataTypes >::computeDistances. protected . Compute distances between both point clouds (symmetrical and non-symmetrical distances) . ◆ distance(). template<class DataTypes > . HausdorffDistance< DataTypes >::Real sofa::component::engine::analyze::HausdorffDistance< DataTypes >::distance ; (; Coord ; p, . VecCoord ; S . ). protected . Compute the distance from a point to a point cloud . ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::analyze::HausdorffDistance< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ handleEvent(). template<class DataTypes > . void sofa::component::engine::analyze::HausdorffDistance< DataTypes >::handleEvent ; (; core::objectmodel::Event * ; ). overrideprotectedvirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::analyze::HausdorffDistance< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ onBeginAnimationStep(). template<class DataTypes > . void sofa::component::engine::analyze::HausdorffDistance< DataTypes >::onBeginAnimationStep ; (; const double ; ). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::engine::analyze::HausdorffDistance< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::analyze::HausdorffDistance< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(HausdorffDistance< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentengineanalyzeHausdorffDistance; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html:21055,variab,variables,21055,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,1,['variab'],['variables']
Modifiability,"ofa::component::engine::select::MeshSubsetEngine< DataTypes >::inputTriangles. ◆ position. template<class DataTypes > . core::objectmodel::RenamedData<SeqPositions> sofa::component::engine::select::MeshSubsetEngine< DataTypes >::position. ◆ quads. template<class DataTypes > . core::objectmodel::RenamedData<SeqQuads> sofa::component::engine::select::MeshSubsetEngine< DataTypes >::quads. ◆ triangles. template<class DataTypes > . core::objectmodel::RenamedData<SeqTriangles> sofa::component::engine::select::MeshSubsetEngine< DataTypes >::triangles. Constructor details. ◆ MeshSubsetEngine(). template<class DataTypes > . sofa::component::engine::select::MeshSubsetEngine< DataTypes >::MeshSubsetEngine. protected . ◆ ~MeshSubsetEngine(). template<class DataTypes > . sofa::component::engine::select::MeshSubsetEngine< DataTypes >::~MeshSubsetEngine. overrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::select::MeshSubsetEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::select::MeshSubsetEngine< DataTypes >::init ; (; void ; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::MeshSubsetEngine< DataTypes >::reinit ; (; ). inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::select::MeshSubsetEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(MeshSubsetEngine< DataTypes >, DataTypes) ; , . Inherited ;  . ). sofacomponentengineselectMeshSubsetEngine; Generated on Mon Nov 11 2024 02:41:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:22178,variab,variables,22178,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['variab'],['variables']
Modifiability,"ofa::component::engine::transform::MathOp< VecT >::MathOp. protected . ◆ ~MathOp(). template<class VecT > . sofa::component::engine::transform::MathOp< VecT >::~MathOp. overrideprotected . Function details. ◆ createInputs(). template<class VecT > . void sofa::component::engine::transform::MathOp< VecT >::createInputs ; (; int ; nb = -1). protected . ◆ doUpdate(). template<class VecT > . void sofa::component::engine::transform::MathOp< VecT >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class VecT > . void sofa::component::engine::transform::MathOp< VecT >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). template<class VecT > . void sofa::component::engine::transform::MathOp< VecT >::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ parseFields(). template<class VecT > . void sofa::component::engine::transform::MathOp< VecT >::parseFields ; (; const std::map< std::string, std::string * > & ; str). overridevirtual . Assign the field values stored in the given map of name -> value pairs. ; Reimplemented from sofa::core::objectmodel::Base. ◆ reinit(). template<class VecT > . void sofa::component::engine::transform::MathOp< VecT >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class VecT > . sofa::component::engine::transform::MathOp< VecT >::SOFA_CLASS ; (; SOFA_TEMPLATE(MathOp< VecT >, VecT) ; , . core::DataEngine ;  . ). sofacomponentenginetransformMathOp; Generated on Mon Nov 11 2024 02:44:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:18863,variab,variables,18863,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,1,['variab'],['variables']
Modifiability,"ofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions;  DistanceMapping ();  ; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const Coord_t< In > &a, const Coord_t< In > &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:20644,inherit,inherited,20644,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,1,['inherit'],['inherited']
Modifiability,"ofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::linearsolver::preconditioner::registerObjects ; (; sofa::core::ObjectFactory * ; factory). ◆ registerPrecomputedMatrixSystem(). void sofa::component::linearsolver::preconditioner::registerPrecomputedMatrixSystem ; (; sofa::core::ObjectFactory * ; factory). ◆ registerPrecomputedWarpPreconditioner(). void sofa::component::linearsolver::preconditioner::registerPrecomputedWarpPreconditioner ; (; sofa::core::ObjectFactory * ; factory). ◆ registerRotationMatrixSystem(). void sofa::component::linearsolver::preconditioner::registerRotationMatrixSystem ; (; sofa::core::ObjectFactory * ; factory). ◆ registerSSORPreconditioner(). void sofa::component::linearsolver::preconditioner::registerSSORPreconditioner ; (; sofa::core::ObjectFactory * ; factory). ◆ registerWarpPreconditioner(). void sofa::component::linearsolver::preconditioner::registerWarpPreconditioner ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ BlockJacobiPreconditioner< BlockDiagonalMatrix< 3, SReal >, FullVector< SReal > >. template class SOFA_COMPONENT_LINEARSOLVER_PRECONDITIONER_API sofa::component::linearsolver::preconditioner::BlockJacobiPreconditioner< BlockDiagonalMatrix< 3, SReal >, FullVector< SReal > >. ◆ JacobiPreconditioner< DiagonalMatrix< SReal >, FullVector< SReal > >. template class SOFA_COMPONENT_LINEARSOLVER_PRECONDITIONER_API sofa::component::linearsolver::preconditioner::JacobiPreconditioner< DiagonalMatrix< SReal >, FullVector< SReal > >. ◆ RotationMatrixSystem< RotationMatrix< SReal >, FullVector< SReal > >. template class SOFA_COMPONENT_LINEARSOLVER_PRECONDITIONER_API sofa::component::linearsolver::preconditioner::RotationMatrixSystem< RotationMatrix< SReal >, FullVector< SReal > >. ◆ WarpPreconditioner< RotationMatrix< SReal >, FullVector< SReal >, NoThreadManager >. template class SOFA_COMPONENT_LINEARSOLVER_PRECONDITIONER_API sofa::component::linearsolver::preconditioner::WarpPrecondi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html:4156,Variab,Variable,4156,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html,1,['Variab'],['Variable']
Modifiability,"ofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(StartNavigationButtonSetting, MouseButtonSetting)sofa::gui::component::StartNavigationButtonSetting; sofa::component::setting::MouseButtonSetting::SOFA_CLASS(MouseButtonSetting, core::objectmodel::ConfigurationSetting)sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::ConfigurationSetting::SOFA_CLASS(ConfigurationSetting, BaseObject)sofa::core::objectmodel::ConfigurationSetting; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StartNavigationButtonSetting()sofa::gui::component::StartNavigationButtonSettinginlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~ConfigurationSetting() overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html:10127,Config,ConfigurationSetting,10127,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting-members.html,1,['Config'],['ConfigurationSetting']
Modifiability,"ofa::gl::GLSLShader; GetShaderString(GLint type) constsofa::gl::GLSLShader; GetVariable(std::string strVariable)sofa::gl::GLSLShader; GetVertexShaderFileName() constsofa::gl::GLSLShaderinline; GetVertexShaderID() constsofa::gl::GLSLShaderinline; GLSLShader()sofa::gl::GLSLShader; headersofa::gl::GLSLShaderprotected; InitGLSL()sofa::gl::GLSLShaderstatic; InitShaders()sofa::gl::GLSLShader; InitShaders(const std::string &strVertex, const std::string &strFragment)sofa::gl::GLSLShaderinline; IsReady() constsofa::gl::GLSLShaderinline; IsSet(GLint type) constsofa::gl::GLSLShader; LoadTextFile(const std::string &strFile)sofa::gl::GLSLShader; m_filelistenersofa::gl::GLSLShaderprotected; m_hProgramObjectsofa::gl::GLSLShaderprotected; m_hShaderContentssofa::gl::GLSLShaderprotected; m_hShaderssofa::gl::GLSLShaderprotected; Release()sofa::gl::GLSLShader; SetActiveShaderProgram(GLhandleARB s)sofa::gl::GLSLShaderstatic; SetFloat(GLint variable, float newValue)sofa::gl::GLSLShader; SetFloat2(GLint variable, float v0, float v1)sofa::gl::GLSLShader; SetFloat3(GLint variable, float v0, float v1, float v2)sofa::gl::GLSLShader; SetFloat4(GLint variable, float v0, float v1, float v2, float v3)sofa::gl::GLSLShader; SetFloatVector(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector2(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector3(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector4(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFragmentShaderFileName(const std::string &fileName)sofa::gl::GLSLShaderinline; SetFragmentShaderFromString(const std::string &string)sofa::gl::GLSLShaderinline; SetInt(GLint variable, int newValue)sofa::gl::GLSLShader; SetInt2(GLint variable, int i1, int i2)sofa::gl::GLSLShader; SetInt3(GLint variable, int i1, int i2, int i3)sofa::gl::GLSLShader; SetInt4(GLint variable, int i1, int i2, int i3, int i4)sofa::gl::GLSLShader; SetIntVect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html:2031,variab,variable,2031,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,2,['variab'],['variable']
Modifiability,"ofa::gl::component::shader::OglIntVectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVectorVariable:. [legend]; Detailed Description; INT VECTOR VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVectorVariable, OglVariable< type::vector< GLint > >);  ;  OglIntVectorVariable ();  ; virtual ~OglIntVectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< GLint > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html:1244,variab,variables,1244,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector_variable.html,2,['variab'],['variables']
Modifiability,"ofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; bool registerCreator (Key key, Creator *creator, bool multi=false);  ; ObjectPtr createObject (Key key, Argument arg=NoArgument());  ; ObjectPtr createObject (Key key, Argument arg);  ; ObjectPtr createAnyObject (Argument arg);  ; void uniqueKeys (OutIterator out);  ; bool hasKey (Key key);  ; bool duplicateEntry (Key existing, Key duplicate);  ; bool resetEntry (Key existingKey);  ; iterator begin ();  ; const_iterator begin () const;  ; iterator end ();  ; const_iterator end () const;  . Static Public Member Functions; static SofaViewerFactory * getInstance ();  ; static Object * CreateObject (Key key, ArgumentRef arg);  ; static Object * CreateAnyObject (ArgumentRef arg);  ; static bool HasKey (Key key);  ; static const char * ViewerName (Key key);  ; static const char * AcceleratedName (Key key);  ;  Static Public Member Functions inherited from sofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; static Factory< Key, Object, Argument, ObjectPtr > * getInstance ();  ; static ObjectPtr CreateObject (Key key, Argument arg);  ; static ObjectPtr CreateAnyObject (Argument arg);  ; static bool HasKey (Key key);  ; static bool DuplicateEntry (Key existing, Key duplicate);  ; static bool ResetEntry (Key existing);  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; std::multimap< Key, Creator * > registry;  . Function details. ◆ AcceleratedName(). static const char* sofa::helper::SofaViewerFactory::AcceleratedName ; (; Key ; key). inlinestatic . ◆ CreateAnyObject(). static Object* sofa::helper::SofaViewerFactory::CreateAnyObject ; (; ArgumentRef ; arg). inlinestatic . ◆ CreateObject(). static Object* sofa::helper::SofaViewerFactory::CreateObject ; (; Key ; key, . ArgumentRef ; arg .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html:1480,inherit,inherited,1480,api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html,2,['inherit'],['inherited']
Modifiability,"ofa::linearalgebra::BaseVector *resV, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void getConstraintResolution (const sofa::core::ConstraintParams *cParams, std::vector< sofa::core::behavior::ConstraintResolution * > &crVector, unsigned int &offset) override;  ;  Public Member Functions inherited from sofa::core::behavior::Constraint< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Constraint, DataTypes), BaseConstraint, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v) override;  ; void buildConstraintMatrix (const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) override;  ; void storeLambda (const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda) override;  ; virtual type::vector< std::string > getBaseConstraintIdentifiers () override final;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraint;  SOFA_ABSTRACT_CLASS (BaseConstraint, BaseConstraintSet);  ; int getGroup () const;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintInfo (const ConstraintParams *cParams, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &direc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html:4034,inherit,inherited,4034,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"ofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GenerateSphere, DataTypes), core::DataEngine);  ;  GenerateSphere ();  ;  ~GenerateSphere () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html:3485,inherit,inherited,3485,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html,1,['inherit'],['inherited']
Modifiability,"ofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:15639,inherit,inherited,15639,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,1,['inherit'],['inherited']
Modifiability,"ofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection);  ; void computeLocalFrameEdgeWeights (type::vector< EdgeID > &numEdges, type::vector< Edge > &edges, type::vector< Vec3d > &weights) const;  ; void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs) override;  Process the added point initialization according to the topology and local coordinates. More...;  ; NumericalIntegrationDescriptor< Real, 1 > & getEdgeNumericalIntegrationDescriptor ();  ; bool computeEdgeSegmentIntersection (EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b, Real &baryCoef);  ; sofa::type::vector< SReal > compute2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; sofa::type::vector< SReal > computeRest2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord, CPos &maxCoord) const;  Returns the axis aligned bounding box. More...;  ; const Coord & getPointPosition (const PointID pointId) const; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:15513,inherit,inherited,15513,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,3,['inherit'],['inherited']
Modifiability,"ofa::type::Vec< 3, Real > normalOfPlane, sofa::type::Vec< 3, Real > &intersection);  ; void computeLocalFrameEdgeWeights (type::vector< EdgeID > &numEdges, type::vector< Edge > &edges, type::vector< Vec3d > &weights) const;  ; void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs) override;  Process the added point initialization according to the topology and local coordinates. More...;  ; NumericalIntegrationDescriptor< Real, 1 > & getEdgeNumericalIntegrationDescriptor ();  ; bool computeEdgeSegmentIntersection (EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b, Real &baryCoef);  ; sofa::type::vector< SReal > compute2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; sofa::type::vector< SReal > computeRest2PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =delete;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes), core::topology::GeometryAlgorithms);  ; Angle computeAngle (PointID ind_p0, PointID ind_p1, PointID ind_p2) const;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; Coord getPointSetCenter () const;  ; void getEnclosingSphere (Coord &center, Real &radius) const;  ; void getAABB (Real bb[6]) const;  ; void getAABB (CPos &minCoord,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:6215,inherit,inherited,6215,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,1,['inherit'],['inherited']
Modifiability,"ofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~PointsAdded () override;  ; size_t getNbAddedVertices () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Point > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ ancestorElems. sofa::type::vector< PointAncestorElem > sofa::core::topology::PointsAdded::ancestorElems. ◆ ancestorsList. sofa::type::vector< sofa::type::vector< Topology::PointID > > sofa::core::topology::PointsAdded::ancestorsList. ◆ coefs. sofa::type::vector< sofa::type::vector< SReal > > sofa::core::topology::PointsAdded::coefs. ◆ nVertices. size_t sofa::core::topology::PointsAdded::nVertices. ◆ pointIndexArray. sofa::type::vector< Topology::PointID > sofa::core::topology::PointsAdded::pointIndexArray. Constructor details. ◆ PointsAdded() [1/5]. sofa::core::topology::PointsAdded::PointsAdded ; (; const size_t ; nV). inline . ◆ PointsAdded() [2/5]. sofa::core::topology::PointsAdded::PointsAdded ; (; const size_t ; nV, . const sofa::type::vector< Topology::PointID > & ; indices . ). inline . ◆ PointsAdded() [3/5]. sofa::core::topology::PointsAdded::PointsAdded ; (; const size_t ; nV, . const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html:2405,inherit,inherited,2405,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_added.html,1,['inherit'],['inherited']
Modifiability,"ofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; std::string getBackgroundImage ();  ; virtual void saveView ()=0;  ; virtual void setSizeW (int)=0;  ; virtual void setSizeH (int)=0;  ; virtual void fitObjectBBox (sofa::core::objectmodel::BaseObject *);  ; virtual void fitNodeBBox (sofa::core::objectmodel::BaseNode *)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:2117,inherit,inherited,2117,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,2,['inherit'],['inherited']
Modifiability,"ogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDistance;  ; double currentZNear;  ; double currentZFar;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseCamera, core::objectmodel::BaseObject);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Ray, sofa::type::Ray);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec4, sofa::type::Vec4);  ;  BaseCamera ();  ;  ~BaseCamera () override;  ; void init () override;  Initialization method c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:3982,inherit,inherited,3982,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,2,['inherit'],['inherited']
Modifiability,ogy ();  ; virtual ~Topology ();  . Friends; class DynamicSparseGridTopologyModifier;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer; sofa::type::vector< EdgesInHexahedron > m_edgesInHexahedron;  provides the set of edges for each hexahedron. More...;  ; sofa::type::vector< QuadsInHexahedron > m_quadsInHexahedron;  provides the ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:42314,inherit,inherited,42314,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,3,['inherit'],['inherited']
Modifiability,"ogy, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology1;  Link to be set to the first topology container in order to support topological changes. More...;  ; SingleLink< BilateralLagrangianConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology2;  Link to be set to the second topology container in order to support topological changes. More...;  ; std::vector< Vec3d > prevForces;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >; SingleLink< PairStateAccessor< TDataTypes, TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< TDataTypes, TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:2496,inherit,inherited,2496,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"ogy::container::dynamic::HexahedronSetTopologyContainer:. [legend]; Detailed Description; a class that stores a set of hexahedra and provides access with adjacent quads, edges and vertices . Public Attributes; Data< bool > d_createQuadArray;  force the creation of quads More...;  ; Data< sofa::type::vector< Hexahedron > > d_hexahedron;  provides the set of hexahedra. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the event",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:1437,inherit,inherited,1437,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"ogyElemID &d);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, TopologyElemID &);  ; SOFA_CORE_API std::ostream & operator<< (std::ostream &out, const PointAncestorElem &d);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, PointAncestorElem &);  ; template<int NV> ; SOFA_CORE_API std::ostream & operator<< (std::ostream &out, const ElemAncestorElem< NV > &d);  ; template<int NV> ; SOFA_CORE_API std::istream & operator>> (std::istream &in, ElemAncestorElem< NV > &);  ; template SOFA_CORE_API std::ostream & operator<< (std::ostream &out, const ElemAncestorElem< 2 > &d);  ; template SOFA_CORE_API std::ostream & operator<< (std::ostream &out, const ElemAncestorElem< 3 > &d);  ; template SOFA_CORE_API std::ostream & operator<< (std::ostream &out, const ElemAncestorElem< 4 > &d);  ; template SOFA_CORE_API std::ostream & operator<< (std::ostream &out, const ElemAncestorElem< 8 > &d);  . Variables; const unsigned int edgesInTetrahedronArray [6][2] = {{0,1}, {0,2}, {0,3}, {1,2}, {1,3}, {2,3}};  List of pair of vertex indices (edge) in a tetrahedron. More...;  ; const unsigned int trianglesOrientationInTetrahedronArray [4][3] = {{1,2,3}, {0,3,2}, {1,3,0}, {0,2,1}};  List of 3 vertex indices (triangle) in a tetrahedron. More...;  ; const unsigned int edgesInHexahedronArray [12][2] = {{0,1},{0,3},{0,4},{1,2},{1,5},{2,3},{2,6},{3,7},{4,5},{4,7},{5,6},{6,7}};  List of pair of vertex indices (edge) in a hexahedron. More...;  ; const unsigned int quadsOrientationInHexahedronArray [6][4] = {{0,3,2,1}, {4,5,6,7}, {0,1,5,4}, {1,2,6,5}, {2,3,7,6}, {3,0,4,7}};  List of 4 vertex indices (quad) in a hexahedron. More...;  ; const unsigned int verticesInHexahedronArray [2][2][2] = { {{0,4}, {3,7}}, {{1,5}, {2,6}} };  ; class SOFA_CORE_API TopologyChange;  ; class SOFA_CORE_API EndingEvent;  ; class SOFA_CORE_API PointsIndicesSwap;  ; class SOFA_CORE_API PointsAdded;  ; class SOFA_CORE_API PointsRemoved;  ; class SOFA_CORE_API PointsMoved;  ; class SOFA_CORE_API Poi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1topology.html:7468,Variab,Variables,7468,api/master/sofa/html/namespacesofa_1_1core_1_1topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1topology.html,1,['Variab'],['Variables']
Modifiability,"oid addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DefaultVisualManagerLoop ();  ;  ~DefaultVisualManagerLoop () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualLoop;  ~VisualLoop () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html:13434,inherit,inherited,13434,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,2,['inherit'],['inherited']
Modifiability,"oid configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::common::AddSutureOperation::~AddSutureOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AddSutureOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddSutureOperation::defaultPerfo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:2103,config,configurePerformer,2103,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,2,['config'],['configurePerformer']
Modifiability,"oid configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor details. ◆ AddRecordedCameraOperation(). sofa::gui::common::AddRecordedCameraOperation::AddRecordedCameraOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::AddRecordedCameraOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddRecordedCameraOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html:1985,config,configurePerformer,1985,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,2,['config'],['configurePerformer']
Modifiability,"oid configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::FixPickedParticleButtonSetting::SPtr sofa::gui::common::FixOperation::setting. protected . Constructor details. ◆ FixOperation(). sofa::gui::common::FixOperation::FixOperation ; (; ). inline . ◆ ~FixOperation(). sofa::gui::common::FixOperation::~FixOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::FixOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::FixOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Op",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html:2034,config,configurePerformer,2034,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,2,['config'],['configurePerformer']
Modifiability,"oid configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::StartNavigationOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::StartNavigationOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescrip",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html:1975,config,configurePerformer,1975,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,2,['config'],['configurePerformer']
Modifiability,"oid draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void reset () override;  Reset to initial state. More...;  ; void cleanup () override;  ; void removeContacts (const ContactVector &) override;  virtual methods used for cleaning the pipeline after a dynamic graph node deletion. More...;  ; void setDefaultResponseType (const std::string &responseT);  ; std::string getDefaultResponseType () const;  ;  Public Member Functions inherited from sofa::core::collision::ContactManager;  SOFA_ABSTRACT_CLASS (ContactManager, CollisionAlgorithm);  ; virtual const ContactVector & getContacts ();  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:5550,inherit,inherited,5550,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['inherit'],['inherited']
Modifiability,"oint. This set of point may be a subset of the DOF of the mechanical model . Public Attributes; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool m_pointTopologyDirty = false;  Boolean used to know if the topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:1593,inherit,inherited,1593,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,"ointInfo;  Internal point data. More...;  ; core::topology::EdgeData< VecMat3x3 > d_edgeInfo;  Internal edge data. More...;  ; core::topology::TetrahedronData< VecTetrahedronRestInformation > d_tetrahedronInfo;  Internal tetrahedron data. More...;  ; VecCoord _initialPoints;  the initial positions of the points More...;  ; Data< std::string > d_method;  method for rotation computation :""qr"" (by QR) or ""polar"" or ""polar2"" or ""none"" (Linear elastic) More...;  ; RotationDecompositionMethod m_decompositionMethod;  ; Data< bool > d_drawing;  draw the forcefield if true More...;  ; Data< sofa::type::RGBAColor > d_drawColor1;  draw color for faces 1 More...;  ; Data< sofa::type::RGBAColor > d_drawColor2;  draw color for faces 2 More...;  ; Data< sofa::type::RGBAColor > d_drawColor3;  draw color for faces 3 More...;  ; Data< sofa::type::RGBAColor > d_drawColor4;  draw color for faces 4 More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html:2490,inherit,inherited,2490,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,1,['inherit'],['inherited']
Modifiability,"oints were moved . Public Attributes; sofa::type::vector< Topology::PointID > indicesList;  ; sofa::type::vector< sofa::type::vector< Topology::PointID > > ancestorsList;  ; sofa::type::vector< sofa::type::vector< SReal > > baryCoefsList;  . Public Member Functions;  PointsMoved (const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~PointsMoved () override;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ ancestorsList. sofa::type::vector< sofa::type::vector< Topology::PointID > > sofa::core::topology::PointsMoved::ancestorsList. ◆ baryCoefsList. sofa::type::vector< sofa::type::vector< SReal > > sofa::core::topology::PointsMoved::baryCoefsList. ◆ indicesList. sofa::type::vector<Topology::PointID> sofa::core::topology::PointsMoved::indicesList. Constructor details. ◆ PointsMoved(). sofa::core::topology::PointsMoved::PointsMoved ; (; const sofa::type::vector< Topology::PointID > & ; indices, . const sofa::type::vector< sofa::type::vector< Topology::PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). inline . ◆ ~PointsMoved(). sofa::core::topology::PointsMoved:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved.html:1344,inherit,inherited,1344,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_moved.html,1,['inherit'],['inherited']
Modifiability,"oints. More...;  ; VecCoord x0;  initial constrained DOFs position More...;  ; VecCoord xf;  final constrained DOFs position More...;  ; VecCoord meshPointsX0;  initial mesh DOFs position More...;  ; VecCoord meshPointsXf;  final mesh DOFs position More...;  ; SingleLink< AffineMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const auto CoordSize = Coord::total_size;  . Protected Attributes; std::unique_ptr< AffineMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:3193,inherit,inherited,3193,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ojectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void projectResponse (const Mechanic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:5039,inherit,inherited,5039,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"ojectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setBeginTime(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::setBeginTime ; (; const Real & ; t). inline . ◆ setEndTime(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::setEndTime ; (; const Real & ; t). inline . ◆ setP1(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::setP1 ; (; const Vec3R & ; p). inline . ◆ setP2(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::setP2 ; (; const Vec3R & ; p). inline . ◆ setP3(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::setP3 ; (; const Vec3R & ; p). inline . ◆ SOFA_CLASS(). template<class Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:28091,variab,variables,28091,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['variab'],['variables']
Modifiability,"ol > _erasePreviousCoef;  ; Data< type::vector< std::string > > d_fileTopologies;  All topology filenames. More...;  ; Data< type::vector< float > > d_dataStiffnessCoefs;  A stiffness coefficient for each topology filename. More...;  ; Data< type::vector< float > > d_dataMassCoefs;  A mass coefficient for each topology filename. More...;  ; Data< bool > d_computeRamifications;  Are ramifications wanted? More...;  ; Data< bool > d_erasePreviousCoef;  Does a new stiffness/mass coefficient replace the previous or blend half/half with it? More...;  ; type::vector< RegularGridTopology::SPtr > _regularGrids;  ; type::vector< type::vector< Type > > _regularGridTypes;  ;  Protected Attributes inherited from sofa::component::topology::container::grid::SparseGridRamificationTopology; type::vector< type::vector< Connexion * > > _connexions;  ; std::map< int, std::pair< type::vector< Connexion * >, int > > _mapHexa_Connexion;  ;  Protected Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; sofa::core::objectmodel::RenamedData< sofa::type::Vec< 3, int > > n;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > _min;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > _max;  ; sofa::core::objectmodel::RenamedData< SReal > _cellWidth;  ; sofa::core::objectmodel::RenamedData< int > _nbVirtualFinerLevels;  ; bool isVirtual;  ; Data< sofa::type::Vec< 3, int > > d_n;  cutting number in all directions More...;  ; Data< type::Vec3 > d_min;  Min. More...;  ; Data< type::Vec3 > d_max;  Max. More...;  ; Data< SReal > d_cellWidth;  if > 0 : dimension of each cell in the created grid More...;  ; Data< int > d_nbVirtualFinerLevels;  create virtual (not in the animation tree) finer sparse grids in order to dispose of finest information (useful to compute better mechanical properties for example) More...;  ; sofa::helper::MarchingCubeUtility marchingCubes;  ; bool _usingMC;  ; type::vector< Type > _types;  BOUNDARY or FULL filled cells. More...;  ; type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:1928,inherit,inherited,1928,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,2,['inherit'],['inherited']
Modifiability,"ol > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * m_mstate;  Pointer to the corresponding MechanicalState. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the corresponding Topology. More...;  ; VecDeriv m_normals;  Vector of normal di",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:1961,inherit,inherited,1961,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['inherit'],['inherited']
Modifiability,"ol > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TriangleModelInRegularGrid, TriangleCollisionModel< sofa::defaulttype::Vec3Types >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeBoundingTree (int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:1759,inherit,inherited,1759,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,1,['inherit'],['inherited']
Modifiability,"ol > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::helper::TriangleOctreeRoot; const SeqTriangles * octreeTriangles;  the triangles used as input to construct the octree More...;  ; const VecCoord * octreePos;  the positions of vertices used as input to construct the octree More...;  ; Triangl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html:1614,inherit,inherited,1614,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,1,['inherit'],['inherited']
Modifiability,"ol > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:16567,inherit,inherited,16567,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,4,['inherit'],['inherited']
Modifiability,"ol > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology;  ; int lastTopologyRevision;  ; Real reset_injectedVolume;  ; Real reset_currentInjectedVolume;  ; VecDeriv gradV;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TaitSurfacePressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:5836,inherit,inherited,5836,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,3,['inherit'],['inherited']
Modifiability,"ol isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< _DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_bendingStiffness. template<class _DataTypes > . Data<SReal> sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::d_bendingStiffness. Bending stiffness of the material. . ◆ d_edgeSprings. template<class _DataTypes > . sofa::core::topology::EdgeData<type::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:19612,inherit,inherited,19612,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,2,['inherit'],['inherited']
Modifiability,"olar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initPolar ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initSmall ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ integrateStiffness(). template<class DataTypes > . HexahedronFEMForceField< DataTypes >::Mat33 sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::integrateStiffness ; (; int ; signx0, . int ; signy0, . int ; signz0, . int ; signx1, . int ; signy1, . int ; signz1, . const Real ; u, . const Real ; v, . const Real ; w, . const Mat33 & ; J_1 . ). staticprotected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ setMethod(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::setMethod ; (; int ; val). inline . ◆ setUpdateStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::setUpdateStiffnessMatrix ; (; bool ; val). inline . ◆ SOFA_ATTRIBUTE_DISABLED(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::SOFA_ATTRIBUTE_DISABLED ; (; """" ; , . ""v24.12"" ; , . ""Use d_youngMod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:41426,variab,variables,41426,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability,"old value to render only stress vectors higher to this threshold. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; InternalData data;  ;  Protected Attributes inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:3058,inherit,inherited,3058,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['inherit'],['inherited']
Modifiability,"olidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:6010,inherit,inherited,6010,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability,"oller::Controller Class Reference . #include <Controller.h>; Controller Class. Interface of user interaction on SOFA Components. Provides also an interface for BeginAnimation and EndAnimation events launched at the beginning and the end of a time step. ; More... Inheritance diagram for sofa::component::controller::Controller:. [legend]; Detailed Description; Controller Class. Interface of user interaction on SOFA Components. Provides also an interface for BeginAnimation and EndAnimation events launched at the beginning and the end of a time step. . Protected Attributes; sofa::core::objectmodel::RenamedData< bool > handleEventTriggersUpdate;  ; Data< bool > d_handleEventTriggersUpdate;  Event handling frequency controls the controller update frequency. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (Controller, core::behavior::BaseController);  ; virtual void onMouseEvent (core::objectmodel::MouseEvent *);  Mouse event callback. More...;  ; virtual void onHapticDeviceEvent (core::objectmodel::HapticDeviceEvent *);  HapticDevice event callback. More...;  ; virtual void onKeyPressedEvent (core::objectmodel::KeypressedEvent *);  Xitact event callback. More...;  ; virtual void onKeyReleasedEvent (core::objectmodel::KeyreleasedEvent *);  Key Release event callback. More...;  ; virtual void onJoystick",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:1065,inherit,inherited,1065,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,2,['inherit'],['inherited']
Modifiability,"ollision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ IncrSAP(). sofa::component::collision::detection::algorithm::IncrSAP::IncrSAP ; (; ). protected . ◆ ~IncrSAP(). sofa::component::collision::detection::algorithm::IncrSAP::~IncrSAP ; (; ). overrideprotected . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::IncrSAP::addCollisionModel ; (; core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:16517,inherit,inherited,16517,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,2,['inherit'],['inherited']
Modifiability,"ollision showWireframe"" >; allowed values for displayFlags data are a combination of the following: showAll, hideAll, showVisual, hideVisual, showVisualModels, hideVisualModels, showBehavior, hideBehavior, showBehaviorModels, hideBehaviorModels, showForceFields, hideForceFields, showInteractionForceFields, hideInteractionForceFields showMapping, hideMapping showMappings, hideMappings showMechanicalMappings, hideMechanicalMappings showCollision, hideCollision showCollisionModels, hideCollisionModels showBoundingCollisionModels, hideBoundingCollisionModels showOptions hideOptions showNormals hideNormals showWireframe hideWireframe . Public Attributes; sofa::core::objectmodel::RenamedData< DisplayFlags > displayFlags;  ; Data< DisplayFlags > d_displayFlags;  Display Flags. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; DisplayFlags backupFlags;  ;  Protected Attributes inherited from sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html:1831,inherit,inherited,1831,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,1,['inherit'],['inherited']
Modifiability,"ollisionModel2, ResponseDataTypes), core::collision::Contact);  ; void cleanup () override;  ; std::pair< core::CollisionModel *, core::CollisionModel * > getCollisionModels () override;  Get the pair of collision models which are in contact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:3459,inherit,inherited,3459,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,1,['inherit'],['inherited']
Modifiability,"ologicalMapping where :; INPUT TOPOLOGY = HexahedronSetTopology OUTPUT TOPOLOGY = Set of HexahedronSetTopologies, as the boundary of the INPUT TOPOLOGY; Each hexahedron in the input Topology will be divided in eight hexahedrom in the output topology; SimpleTesselatedHexaTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Protected Attributes; type::vector< sofa::Index > pointMappedFromPoint;  Translates the TopologyChange objects from the source to the target. More...;  ; std::map< type::fixed_array< sofa::Index, 2 >, sofa::Index > pointMappedFromEdge;  ; std::map< type::fixed_array< sofa::Index, 4 >, sofa::Index > pointMappedFromFacet;  ; type::vector< sofa::Index > pointMappedFromHexa;  ;  Protected Attributes inherited from sofa::core::topology::TopologicalMapping; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SimpleTesselatedHexaTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Tra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:1420,inherit,inherited,1420,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,3,['inherit'],['inherited']
Modifiability,"ology () const;  Checks if the topology is coherent. More...;  ; virtual Size getNumberOfConnectedComponent ();  Returns the number of connected component. More...;  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  . Protected Member Functions;  TopologyContainer ();  Constructor. More...;  ;  ~TopologyContainer () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:19787,inherit,inherited,19787,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,2,['inherit'],['inherited']
Modifiability,"ology and the dof to compute the triangle normals, BB and BoundingTree. The class See alsoTTriangle is used to access specific triangle of this collision Model. . Public Attributes; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * m_mstate;  Pointer to t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:1795,inherit,inherited,1795,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['inherit'],['inherited']
Modifiability,"ology::QuadsMoved_Adding Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::QuadsMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::QuadsMoved_Adding:. [legend]; Detailed Description; indicates that some quads are about to be moved (i.e some/all of their vertices have just been moved) QuadsMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::QuadID > quadsAroundVertexMoved;  ; const sofa::type::vector< Topology::Quad > quadArray2Moved;  . Public Member Functions;  QuadsMoved_Adding (const sofa::type::vector< Topology::QuadID > &quadShell, const sofa::type::vector< Topology::Quad > &quadArray);  ;  ~QuadsMoved_Adding () override;  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Quad > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ quadArray2Moved. const sofa::type::vector< Topology::Quad > sofa::core::topology::QuadsMoved_Adding::quadArray2Moved. ◆ quadsAroundVertexMoved. sofa::type::vector< Topology::QuadID > sofa::core::topology::QuadsMoved_Adding::quadsAroun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html:1130,inherit,inherited,1130,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html,1,['inherit'],['inherited']
Modifiability,"ols-for-multi-material-on-windows; ; SOFA - Topic: How to use Tools for multi-material on Windows?. /how-to-vtkexport-pointsettopologycontainer-points; ; SOFA - Topic: How to VTKexport PointSetTopologyContainer points. /how-to-write-a-scene-file; ; SOFA - Topic: [SOLVED] How to write a scene file. /hyperelastic-material-parameters-in-sofa; ; SOFA - Topic: [SOLVED] Hyperelastic Material Parameters in SOFA. /hyperelastic-materials-related-paper; ; SOFA - Topic: [SOLVED] Hyperelastic materials related paper. /i-am-confused-on-the-dependencies-when-compiling-sofa-on-win10-vs2015; . /feed; ; [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015 – SOFA. SOFA - Topic: [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015. /i-could-not-find-the-modeler-module; ; SOFA - Topic: [SOLVED] I could not find the ""Modeler"" module. /image-background; ; SOFA - Topic: [SOLVED] Image Background. /image-plugin-compile-problem; . /feed; ; [SOLVED] Image plugin compile problem – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Image plugin compile problem. /9; ; SOFA - Topic: [SOLVED] Image plugin compile problem. SOFA - Topic: [SOLVED] Image plugin compile problem. /image-viewer-in-image-plugin; ; SOFA - Topic: [SOLVED] Image Viewer in Image Plugin. /implement-a-velocity-constraint; ; SOFA - Topic: Implement a velocity constraint. /implement-our-own-linearsolver; ; SOFA - Topic: [SOLVED] Implement our own LinearSolver. /import-a-vtk-file; . /embed; ; SOFA - Topic: [SOLVED] import a vtk file. /feed; ; [SOLVED] import a vtk file – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] import a vtk file. SOFA - Topic: [SOLVED] import a vtk file. /importing-stl-file-via-rigidobjects; ; SOFA - Topic: [SOLVED] Importing STL file via RigidObjects. /import-or-include-an-xml-file-in-another; ; SOFA - Topic: [SOLVED] import or include an xml file in another. /import-plugin-in-cpp; ; SOFA - Topic: [SOLVED] Import plugin in cpp. /import-urdf-models; ; SOFA - Topic:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:332192,plugin,plugin,332192,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"olume;  bool: true if a surface zone is going to be removed on a volumique mesh. More...;  ; bool volumeOnSurface;  bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. More...;  ; VecIds selectedElem;  vector of element Id concerned by the operation More...;  ;  Protected Attributes inherited from sofa::gui::component::performer::RemovePrimitivePerformerConfiguration; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformer (BaseMouseInteractor *i);  ;  ~RemovePrimitivePerformer ();  ; void start ();  Functions called by TopologicalOperation performer. More...;  ; void execute ();  ; void end ();  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::RemovePrimitivePerformerConfiguration;  RemovePrimitivePerformerConfiguration ();  ; void setTopologicalOperation (int m);  ; void setVolumicMesh (bool v);  ; void setScale (double s);  . Protected Member Functions; bool createElementList ();  ; VecIds getNeighboorElements (VecIds &elementsToTest);  ; VecIds getElementInZone (VecIds &elementsToTest);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::Interact",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:1800,inherit,inherited,1800,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,6,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"ol drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; virtual sofa::gl::FrameBufferObject & getFBO ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:4256,inherit,inherited,4256,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,4,['inherit'],['inherited']
Modifiability,"ol findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; void updateOutputData ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:17693,inherit,inherited,17693,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,1,['inherit'],['inherited']
Modifiability,"ol findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:21567,inherit,inherited,21567,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['inherit'],['inherited']
Modifiability,"ol removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:4707,variab,variables,4707,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,6,['variab'],['variables']
Modifiability,"ol removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:8205,variab,variables,8205,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,10,['variab'],['variables']
Modifiability,"om (const Data< std::string > *data);  ; virtual std::string * beginEdit ();  ; virtual std::string * beginWriteOnly ();  ; void setValue (const std::string &value);  ; const std::string & getValue () const;  ; BaseData * getNewInstance () override;  ;  Data (const BaseData::BaseInitData &init);  ;  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html:4042,inherit,inherited,4042,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,1,['inherit'],['inherited']
Modifiability,"om Omni). /building-sofa-with-ninja; ; SOFA - Topic: [SOLVED] Building SOFA with ninja. /building-sofa-with-windows10-and-vs2015; . /feed; ; [SOLVED] Building SOFA with Windows10 and VS2015 – SOFA. SOFA - Topic: [SOLVED] Building SOFA with Windows10 and VS2015. /building-stlib-and-integration-with-sofa-in-windows-10; ; SOFA - Topic: Building Stlib and integration with sofa in windows 10. /building-the-tutorials; ; SOFA - Topic: [SOLVED] Building the tutorials. /building-v16-08-cmake-errors; . /feed; ; [SOLVED] Building v16.08, Cmake Errors – SOFA. SOFA - Topic: [SOLVED] Building v16.08, Cmake Errors. /building-v16-08-sofa-errors-in-sensable-plugin; . /feed; ; [SOLVED] Building v16.08 sofa, errors in sensable plugin. – SOFA. SOFA - Topic: [SOLVED] Building v16.08 sofa, errors in sensable plugin. /building-vrpn-plugin-on-linux; . /feed; ; [SOLVED] Building VRPN plugin on linux – SOFA. SOFA - Topic: [SOLVED] Building VRPN plugin on linux. /build-problem-for-advancedfem-plugin; ; SOFA - Topic: [SOLVED] Build problem for AdvancedFEM plugin. /build-problem-for-pardisio-solver-plugin; ; SOFA - Topic: [SOLVED] Build problem for Pardisio solver plugin. /build-sofa; . /page; . /11; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /12; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /3; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /build-with-qt-on-macos; . /page; . /2; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. /7; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. SOFA - Topic: [SOLVED] build with Qt on MacOs. /c11-flag-added-to-c-files-compilation; . /feed; ; [SOLVED] c++11 flag added to c files compilation – SOFA. SOFA - Topic: [SOLVED] c++11 flag added to c files compilation. /cable-driven-actuation; ; SOFA - Topic: [SOLVED] Cable-Driven Actuation. /call-for-papers-hmsim-healthcare-and-medical-simulation-barcelona; ; S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:267163,plugin,plugin,267163,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],['plugin']
Modifiability,"om sofa::core::objectmodel::BaseObject. ◆ generateRandomDirections(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::generateRandomDirections. protected . ◆ generateRandomPoint(). template<class DataTypes > . type::Vec< 3, typename DataTypes::Real > sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::generateRandomPoint ; (; const Vec3 & ; minBBox, . const Vec3 & ; maxBBox . ). protected . ◆ getBBox(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::getBBox ; (; Vec3 & ; minBBox, . Vec3 & ; maxBBox . ). protected . ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isInside(). template<class DataTypes > . bool sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::isInside ; (; Coord ; p). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(RandomPointDistributionInSurface< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). ◆ testDistance(). template<class DataTypes > . bool sofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >::testDistance ; (; Coord ; p). protected . sofacomponentenginegenerateRandomPointDistributionInSurface; Generated on Mon Nov 11 2024 02:39:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:22846,variab,variables,22846,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['variab'],['variables']
Modifiability,"om the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html:2600,inherit,inherited,2600,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,12,['inherit'],['inherited']
Modifiability,"ommon::AddSutureOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AddSutureOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AddSutureOperation:. [legend]. Protected Attributes; double stiffness;  ; double damping;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; virtual double getStiffness () const;  ; void setDamping (double f);  ; virtual double getDamping () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:944,inherit,inherited,944,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,6,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"ommon::Operation::performer. ◆ pickHandle. PickHandler* sofa::gui::common::Operation::pickHandle. protected . Constructor details. ◆ Operation(). sofa::gui::common::Operation::Operation ; (; sofa::component::setting::MouseButtonSetting::SPtr ; s = nullptr). inline . ◆ ~Operation(). virtual sofa::gui::common::Operation::~Operation ; (; ). inlinevirtual . Function details. ◆ configure() [1/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . MOUSE_BUTTON ; b . ). inlinevirtual . Reimplemented in sofa::gui::qt::QAddSutureOperation, sofa::gui::qt::QTopologyOperation, and sofa::gui::qt::QInciseOperation. ◆ configure() [2/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; s . ). inlinevirtual . Reimplemented in sofa::gui::qt::QFixOperation, sofa::gui::qt::QStartNavigationOperation, sofa::gui::qt::QAddRecordedCameraOperation, and sofa::gui::qt::QAttachOperation. ◆ configurePerformer(). void sofa::gui::common::Operation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). virtual . Reimplemented in sofa::gui::common::AddSutureOperation, sofa::gui::common::StartNavigationOperation, sofa::gui::common::AddRecordedCameraOperation, sofa::gui::common::AddFrameOperation, sofa::gui::common::FixOperation, and sofa::gui::common::AttachOperation. ◆ createPerformer(). InteractionPerformer * sofa::gui::common::Operation::createPerformer ; (; ). virtual . ◆ defaultPerformerType(). virtual std::string sofa::gui::common::Operation::defaultPerformerType ; (; ). inlinevirtual . Reimplemented in sofa::gui::common::AddSutureOperation, sofa::gui::common::StartNavigationOperation, sofa::gui::common::AddRecordedCameraOperation, sofa::gui::common::AddFrameOperation, sofa::gui::common::FixOperation, sofa::gui::common::AttachOperation, and sofa::gui::common::ConstraintAttachOperation. ◆ end(). void sofa::gui::common::Operation::end ; (; ). virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html:3033,config,configurePerformer,3033,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,2,['config'],['configurePerformer']
Modifiability,"omponent::engine::generate::ExtrudeSurface< DataTypes >; This class extrudes a surface . Public Attributes; bool initialized;  ; Data< bool > isVisible;  is Visible ? More...;  ; Data< Real > heightFactor;  Factor for the height of the extrusion (based on normal) More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Triangle > > f_triangles;  Triangle topology (list of BaseMeshTopology::Triangle) More...;  ; Data< VecCoord > f_extrusionVertices;  Position coordinates of the extrusion. More...;  ; Data< VecCoord > f_surfaceVertices;  Position coordinates of the surface. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Triangle > > f_extrusionTriangles;  Subset triangle topology used for the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::TriangleID > > f_surfaceTriangles;  Indices of the triangles of the surface to extrude. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html:1498,inherit,inherited,1498,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,1,['inherit'],['inherited']
Modifiability,"omponent::linearsolver::direct::EigenSolverWrapper< RealObject > Class Template Reference . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >:. [legend]; Detailed Description; template<typename RealObject>; class sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >; This class is the bridge between an Eigen solver class and the abstract class BaseEigenSolverProxy.; Using this class, all Eigen solvers can inherit from the same base class, hence runtime polymorphism is possible. Only a subset of the Eigen solver methods are available. . Public Member Functions;  EigenSolverWrapper ();  ; Eigen::ComputationInfo info () const override;  ; void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const override;  ; void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const override;  ; void analyzePattern (const EigenSparseMatrixMap< float > &a) override;  ; void analyzePattern (const EigenSparseMatrixMap< double > &a) override;  ; void factorize (const EigenSparseMatrixMap< float > &a) override;  ; void factorize (const EigenSparseMatrixMap< double > &a) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::BaseEigenSolverProxy; virtual ~BaseEigenSolverProxy ();  . Constructor details. ◆ EigenSolverWrapper(). template<typename RealObject > . sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >::EigenSolverWrapper ; (; ). inline . Function details. ◆ analyzePattern() [1/2]. template<typename RealObject > . void sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >::analyzePattern ; (; const EigenSparseMatrixMap< double > & ; a). inlineoverridevirtual . Implements sofa::component::linearsolver::direct::BaseEigenSolverProxy. ◆ analyzePattern() [2/2]. template<typename RealObject > . void sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html:1491,inherit,inherited,1491,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html,1,['inherit'],['inherited']
Modifiability,"omputeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; double m_nextStep;  ; double m_angleStep;  ; bool firstIterationforRotation;  ; bool firstIterationforTranslation;  ; bool firstIterationforNavigation;  ; sofa::type::vector< type::Vec3 > m_rotationPoints;  ;  Protected Attributes inherited from sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:5700,inherit,inherited,5700,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['inherit'],['inherited']
Modifiability,"omputeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDistance;  ; double currentZNear;  ; double currentZFar;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Sin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:2954,inherit,inherited,2954,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,1,['inherit'],['inherited']
Modifiability,"omputeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (InteractiveCamera, BaseCamera);  ;  Public Member Functions inherited from sofa::component::visual::BaseCamera;  SOFA_CLASS (BaseCamera, core::objectmodel::BaseObject);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Ray, sofa::type::Ray);  ;  SOFA_ATT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html:3427,inherit,inherited,3427,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,1,['inherit'],['inherited']
Modifiability,"omputeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::visual::BaseCamera; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDistance;  ; double currentZNear;  ; double currentZFar;  ;  Protected Attributes inh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:16928,inherit,inherited,16928,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,1,['inherit'],['inherited']
Modifiability,"on &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ dJ. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::dJ[4]. derivatives of J . ◆ fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::fiberDirection. fiber direction in rest configuration . ◆ restVolume. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::restVolume. rest volume . ◆ shapeVector. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::shapeVector[4]. shape vector at the rest configuration . ◆ strainEnergy. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::strainEnergy. deformation gradient = gradPhi ; right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) . ◆ tetraEdges. template<class DataTypes > . float sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::tetraEdges[6] {}. ◆ tetraIndices. template<class DataTypes > . float sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::tetraIndices[4] {}. ◆ volScale. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::volScale. current tetrahedron volume . Constructor details. ◆ TetrahedronRestInformation(). template<class DataTypes > . sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html:3259,config,configuration,3259,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,1,['config'],['configuration']
Modifiability,"on &R, Index nodeIdx);  ; void getRotations ();  ; void getElementRotation (Transformation &R, Index elementIdx);  ; void getElementStiffnessMatrix (Real *stiffness, Index nodeIdx);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void computeVonMisesStress ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  BaseLinearElasticityFEMForceField ();  ; void setPoissonRatio (Real val);  ; void setYoungModulus (Real val);  ; Real getYoungModulusInElement (sofa::Size elementId) const;  ; Real getPoissonRatioInElement (sofa::Size elementId) const;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addBToMatrix (const MechanicalParams *mparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:6804,inherit,inherited,6804,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,2,['inherit'],['inherited']
Modifiability,"on Documentation. ◆ getModuleName(). const char * sofa::component::linearsolver::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::linearsolver::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_LINEARSOLVER_API void sofa::component::linearsolver::init ; (; ). ◆ initExternalModule(). void sofa::component::linearsolver::initExternalModule ; (; ). ◆ mul_EigenSparseDenseMatrix_MT(). template<typename Derived , typename OtherDerived > . const Eigen::SparseDenseProductReturnType_MT<Derived,OtherDerived>::Type sofa::component::linearsolver::mul_EigenSparseDenseMatrix_MT ; (; const Eigen::SparseMatrixBase< Derived > & ; lhs, . const Eigen::MatrixBase< OtherDerived > & ; rhs, . unsigned ; nbThreads = OMP_DEFAULT_NUM_THREADS_EIGEN_SPARSE_DENSE_PRODUCT . ). inline . Eigen::Sparse * Dense Matrices multiplication (openmp multi-threaded version) . ◆ registerObjects(). void sofa::component::linearsolver::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MatrixLinearSolver< BlockDiagonalMatrix< 3, SReal >, FullVector< SReal >, NoThreadManager >. template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API sofa::component::linearsolver::MatrixLinearSolver< BlockDiagonalMatrix< 3, SReal >, FullVector< SReal >, NoThreadManager >. ◆ MatrixLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal >, NoThreadManager >. template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API sofa::component::linearsolver::MatrixLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal >, NoThreadManager >. ◆ MatrixLinearSolver< DiagonalMatrix< SReal >, FullVector< SReal >, NoThreadManager >. template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API sofa::component::linearsolver::MatrixLinearSolver< DiagonalMatrix< SReal >, FullVector< SReal >, NoThreadManager >. ◆ MatrixLinearSolver< FullMatrix< SReal >, FullVector< SReal >, NoThreadManager >. template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API sofa::component::linearsolver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html:3479,Variab,Variable,3479,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html,1,['Variab'],['Variable']
Modifiability,"on are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [2/5]. void sofa::component::mass::DiagonalMass< Rigid2Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [3/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [4/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid2Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [5/5]. template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::resize ; (; int ; vsize). ◆ setMassDensity(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::setMassDensity ; (; Real ; massDensityValue). virtual . ◆ setTotalMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::setTotalMass ; (; Real ; totalMass). virtual . ◆ setVertexMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::setVertexMass ; (; sofa::type::vector< Real > ; vertexMass). virtual . ◆ SOFA_CLASS(). template<class DataTypes , class GeometricalTypes = DataTypes> . sofa::component::mass::DiagonalMass< DataTypes,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:51460,variab,variables,51460,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['variab'],['variables']
Modifiability,"on are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< int > * beginEdit ();  ; void endEdit ();  ; const type::vector< int > & getValue () const;  ; void setValue (const type::vector< int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual mode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:2080,inherit,inherited,2080,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,2,['inherit'],['inherited']
Modifiability,"on but can print the graph visiting by setting visitingOrder at true . Constructor details. ◆ PrintVisitor(). sofa::simulation::PrintVisitor::PrintVisitor ; (; const sofa::core::ExecParams * ; params, . bool ; visitingOrder = false . ). inline . Function details. ◆ getClassName(). const char* sofa::simulation::PrintVisitor::getClassName ; (; ); const. inlineoverridevirtual . Return a class name for this visitor Only used for debugging / profiling purposes ; Reimplemented from sofa::simulation::Visitor. ◆ getVerbose(). int sofa::simulation::PrintVisitor::getVerbose ; (; ); const. inline . ◆ processNodeBottomUp(). void sofa::simulation::PrintVisitor::processNodeBottomUp ; (; simulation::Node * ; ). overridevirtual . Callback method called after child node have been processed and before going back to the parent node. ; Reimplemented from sofa::simulation::Visitor. ◆ processNodeTopDown(). Visitor::Result sofa::simulation::PrintVisitor::processNodeTopDown ; (; simulation::Node * ; ). overridevirtual . Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. ; Reimplemented from sofa::simulation::Visitor. ◆ processObject(). template<class T > . void sofa::simulation::PrintVisitor::processObject ; (; T ; obj). ◆ processObjects(). template<class Seq > . void sofa::simulation::PrintVisitor::processObjects ; (; Seq & ; list, . const char * ; name . ). ◆ setVerbose(). void sofa::simulation::PrintVisitor::setVerbose ; (; int ; v). inline . ◆ treeTraversal(). bool sofa::simulation::PrintVisitor::treeTraversal ; (; TreeTraversalRepetition & ; repeat). inlineoverridevirtual . ReturnstreeTraversal returns true if and only if a tree traversal must be enforced (even for a DAG) ; Parameters. repeatTell if a node callback can be executed several times (at each traversal in diamond configurations) . Reimplemented from sofa::simulation::Visitor. sofasimulationPrintVisitor; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html:7117,config,configurations,7117,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,2,['config'],['configurations']
Modifiability,"on is present) More...;  ; int beginIntersect (core::CollisionModel *model1, core::CollisionModel *model2, DetectionOutputVector *&contacts) override;  ; int intersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector *contacts)=delete;  Compute the intersection between 2 elements. More...;  ; int intersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, DetectionOutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  Compute the intersection between 2 elements. Return the number of contacts written in the contacts vector. More...;  ; std::string name () const override;  ; int endIntersect (core::CollisionModel *model1, core::CollisionModel *model2, DetectionOutputVector *contacts) override;  End intersection tests between two collision models. Return the number of contacts written in the contacts vector. More...;  ;  Public Member Functions inherited from sofa::core::collision::ElementIntersector; virtual ~ElementIntersector ();  . Attribute details. ◆ impl. template<class Elem1 , class Elem2 , class T > . T* sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::impl. protected . Constructor details. ◆ MemberElementIntersector(). template<class Elem1 , class Elem2 , class T > . sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::MemberElementIntersector ; (; T * ; ptr). inline . Function details. ◆ beginIntersect(). template<class Elem1 , class Elem2 , class T > . int sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T >::beginIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . DetectionOutputVector *& ; contacts . ). inlineoverridevirtual . Begin intersection tests between two collision models. Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocate it. ; Implements sofa::core::collision::ElementIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html:2023,inherit,inherited,2023,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_member_element_intersector.html,1,['inherit'],['inherited']
Modifiability,"on method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void computeDistanceMap (VecCoord beginElts=VecCoord(), const double &distMax=0);  Compute the distance map depending ion the distance type. More...;  ; void addElt (const Coord &elt, VecCoord beginElts=VecCoord(), const double &distMax=0);  Add a 'from' element and recompute the map of distances. More...;  ; void getDistances (VVD &distances, VecVecCoord &gradients, const VecCoord &goals);  Get the distance for a point set using the computed map. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:5815,inherit,inherited,5815,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['inherit'],['inherited']
Modifiability,"on more efficient. More...;  ; bool skipCompressZero;  ; VecIndex oldRowIndex;  Temporary vectors used during compression. More...;  ; VecIndex oldRowBegin;  ; VecIndex oldColsIndex;  ; VecBlock oldColsValue;  . Static Public Attributes; static constexpr sofa::Index NL = traits::NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC = traits::NC;  Number of columns of a block. More...;  ;  Static Public Attributes inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; static constexpr sofa::Index NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC;  Number of columns of a block. More...;  ; static constexpr Index s_invalidIndex;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSMechanicalPolicy; static constexpr bool CompressZeros = false;  ; static constexpr bool IsAlwaysSquare = true;  ; static constexpr bool IsAlwaysSymmetric = true;  ; static constexpr bool OrderedInsertion = false;  ; static constexpr bool StoreLowerTriangularBlock = true;  ; static constexpr int matrixType = 1;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:2413,inherit,inherited,2413,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,4,['inherit'],['inherited']
Modifiability,"on topology quads map. More...;  ; Data< SetIndex > d_quadD2S;  Internal destination -> source topology quads map. More...;  ; Data< SetIndex > d_tetrahedronS2D;  Internal source -> destination topology tetrahedra map. More...;  ; Data< SetIndex > d_tetrahedronD2S;  Internal destination -> source topology tetrahedra map. More...;  ; Data< SetIndex > d_hexahedronS2D;  Internal source -> destination topology hexahedra map. More...;  ; Data< SetIndex > d_hexahedronD2S;  Internal destination -> source topology hexahedra map. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SubsetTopologicalMapping, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:4168,inherit,inherited,4168,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,"on using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ; core::objectmodel::lifecycle::DeprecatedData dmin { this, ""v24.06"", ""v24.12"", ""dmin"", ""Plan selection using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ; core::objectmodel::lifecycle::DeprecatedData dmax { this, ""v24.06"", ""v24.12"", ""dmax"", ""Plan selection using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::TriangleSubsetData< sofa::type::vector< TrianglePressu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html:2764,inherit,inherited,2764,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"on vs2012 win7-32bits. /building-errors-of-v15-12-on-vs2012-win7-64bits; ; SOFA - Topic: [SOLVED] Building errors of v15.12 on vs2012 win7-64bits. /building-image-plugin-under-el-capitan; ; SOFA - Topic: [SOLVED] Building image plugin under El Capitan. /building-similar-to-sofa-ros-connector-plugin; ; SOFA - Topic: Building similar to “SOFA ROS connector plugin”. /building-similar-to-sofa-ros-connector-plugin-2; ; SOFA - Topic: Building similar to “SOFA ROS connector plugin”. /building-sofa; . /feed; ; [SOLVED] Building sofa – Could not find Boost Thread – SOFA. SOFA - Topic: [SOLVED] Building sofa – Could not find Boost Thread. /building-sofa-16-08-with-cgal-and-image; ; SOFA - Topic: [SOLVED] Building sofa 16.08 with CGAL and Image. /building-sofa-as-debian-package; ; SOFA - Topic: building sofa as debian package. /building-sofa-binaries-are-not-generated; ; SOFA - Topic: Building Sofa, binaries are not generated. /building-sofacuda-plugin-on-windows; . /feed; ; [SOLVED] Building SOFACUDA plugin on Windows – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Building SOFACUDA plugin on Windows. /5; ; SOFA - Topic: [SOLVED] Building SOFACUDA plugin on Windows. /6; ; SOFA - Topic: [SOLVED] Building SOFACUDA plugin on Windows. SOFA - Topic: [SOLVED] Building SOFACUDA plugin on Windows. /building-sofa-on-windows-vs2013-with-boost; . /feed; ; [SOLVED] Building Sofa on Windows VS2013 with boost – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /3; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /4; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /5; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /building-sofa-problems; ; SOFA - Topic: [SOLVED] Building SOFA problems. /building-sofa-with-both-plugins-leapmotion-and-sensable-phantom-omni; ; SOFA - Topic: [SOLVED] Building SOFA with both plugins: LeapMotion and",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:265172,plugin,plugin,265172,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"on-about-an-object-self-contact-2; ; SOFA - Topic: Question about an object self contact. /question-about-calling-header-of-sofameshcollision-from-sofabasecollision; ; SOFA - Topic: [SOLVED] Question about calling header of SofaMeshCollision from SofaBaseCollision. /question-about-collisionelementiterator; ; SOFA - Topic: Question about CollisionElementIterator. /question-about-neo-hookean-strain-energy-function-implemented-in-sofa; ; SOFA - Topic: Question about Neo-Hookean Strain Energy function implemented in Sofa. /question-about-pre-deformed-bellow-actuator; ; SOFA - Topic: Question about pre-deformed bellow actuator. /question-about-sofa; ; SOFA - Topic: Question about SOFA. /question-about-the-sofarobots-plugin; ; SOFA - Topic: [SOLVED] Question about the SofaRobots Plugin. /question-about-tutorial-for-topologyvolumedifferentmesh; ; SOFA - Topic: [SOLVED] Question about tutorial for TopologyVolumeDifferentMesh. /question-about-variable-meaning-in-collision-component; ; SOFA - Topic: [SOLVED] Question about variable meaning in collision component. /questionns-about-installation; ; SOFA - Topic: Questionns about installation. /question-on-tetrahedronhyperelasticityfemforcefield; ; SOFA - Topic: [SOLVED] Question on TetrahedronHyperelasticityFEMForceField. /questions-about-carvingmanager-omnisofa; . /feed; ; [SOLVED] Questions about CarvingManager & OmniSOFA – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Questions about CarvingManager & OmniSOFA. /5; ; SOFA - Topic: [SOLVED] Questions about CarvingManager & OmniSOFA. SOFA - Topic: [SOLVED] Questions about CarvingManager & OmniSOFA. /questions-about-setting-up-qtcreator; ; SOFA - Topic: [SOLVED] Questions about ""Setting up QtCreator"". /questions-about-sofa; . /feed; ; [SOLVED] What is SOFA dedicated to? How to use it as physics engine? – SOFA. SOFA - Topic: [SOLVED] What is SOFA dedicated to? How to use it as physics engine?. /questions-regarding-the-installation-of-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Que",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:373728,variab,variable-meaning-in-collision-component,373728,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['variab'],"['variable', 'variable-meaning-in-collision-component']"
Modifiability,"on. More...;  ; sofa::core::objectmodel::RenamedData< VecBool > movedDirections;  ; core::objectmodel::Data< VecBool > d_movedDirections;  Defines the directions in which the particles are moved: true (or 1) for fixed, false (or 0) for free. More...;  ; SingleLink< PartialLinearMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PartialLinearMovementProjectiveConstraintInternalData< DataTypes > > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is use",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:4444,inherit,inherited,4444,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"on. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::common::AttachOperation Class Reference . #include <MouseOperations.h>. Inheritance diagram for sofa::gui::common::AttachOperation:. [legend]. Protected Attributes; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html:1150,inherit,inherited,1150,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,6,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"on. protected . ◆ parse(). template<class DataTypes , class GeometricalTypes = DataTypes> . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). inlineoverridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ printMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::printMass. Print key mass information (totalMass, vertexMass and massDensity) . ◆ reinit() [1/5]. void sofa::component::mass::DiagonalMass< Rigid3Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [2/5]. void sofa::component::mass::DiagonalMass< Rigid2Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [3/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [4/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid2Types >::reinit ; (; ). virtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit() [5/5]. template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resize(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:50670,variab,variables,50670,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['variab'],['variables']
Modifiability,"on::BaseGUI::~BaseGUI ; (; ). protectedvirtual . The destructor should not be called directly. Use the closeGUI() method instead. . Function details. ◆ canBeDefaultGUI(). virtual bool sofa::gui::common::BaseGUI::canBeDefaultGUI ; (; ); const. inlinevirtual . If the function returns true: when the GUI is created, its name will be saved so that it will be created when no GUI is specified. If the function returns false, the GUI name is not saved, and the last one will be used when no GUI is specified. ; Reimplemented in sofa::gui::batch::BatchGUI. ◆ centerWindow(). virtual void sofa::gui::common::BaseGUI::centerWindow ; (; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ closeGUI(). virtual int sofa::gui::common::BaseGUI::closeGUI ; (; ). pure virtual . Close the GUI. ; Implemented in sofa::gui::qt::RealGUI, and sofa::gui::batch::BatchGUI. ◆ configureGUI(). void sofa::gui::common::BaseGUI::configureGUI ; (; sofa::simulation::NodeSPtr ; groot). virtual . Use a component setting to configure our GUI. . ◆ currentSimulation(). virtual sofa::simulation::Node* sofa::gui::common::BaseGUI::currentSimulation ; (; ). pure virtual . Get the rootNode of the sofa scene. ; Implemented in sofa::gui::qt::RealGUI, and sofa::gui::batch::BatchGUI. ◆ exportGnuplot(). void sofa::gui::common::BaseGUI::exportGnuplot ; (; sofa::simulation::Node * ; node, . std::string ; gnuplot_directory = """" . ). ◆ getConfigDirectoryPath(). const std::string & sofa::gui::common::BaseGUI::getConfigDirectoryPath ; (; ). static . ◆ GetGUIName(). static std::string& sofa::gui::common::BaseGUI::GetGUIName ; (; ). inlinestatic . ◆ GetProgramName(). static const char* sofa::gui::common::BaseGUI::GetProgramName ; (; ). inlinestatic . ◆ getScreenshotDirectoryPath(). const std::string & sofa::gui::common::BaseGUI::getScreenshotDirectoryPath ; (; ). static . ◆ getViewer(). virtual BaseViewer* sofa::gui::common::BaseGUI::getViewer ; (; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ initViewer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html:4892,config,configure,4892,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,2,['config'],['configure']
Modifiability,"on::DefaultVisualManagerLoop;  SOFA_CLASS (DefaultVisualManagerLoop, sofa::core::visual::VisualLoop);  ; void initStep (sofa::core::visual::VisualParams *vparams) override;  Initialize the textures. More...;  ; void updateStep (sofa::core::visual::VisualParams *vparams) override;  Update the Visual Models: triggers the Mappings. More...;  ; void updateContextStep (sofa::core::visual::VisualParams *vparams) override;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; void computeBBoxStep (sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:3338,inherit,inherited,3338,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,2,['inherit'],['inherited']
Modifiability,"on::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::TopologyOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:1696,inherit,inherited,1696,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,4,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,"on::RayNewProximityIntersection:. [legend]. Public Member Functions;  RayNewProximityIntersection (NewProximityIntersection *intersection, bool addSelf=true);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, const core::collision::Intersection *currentIntersection);  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *, const core::collision::Intersection *currentIntersection);  ; bool testIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2)=delete;  ; int computeIntersection (collision::geometry::Ray &t1, collision::geometry::Triangle &t2, OutputVector *)=delete;  ; bool testIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere)=delete;  ; int computeIntersection (collision::geometry::Ray &rRay, collision::geometry::RigidSphere &rSphere, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::core::collision::BaseIntersector;  BaseIntersector ();  ;  ~BaseIntersector ();  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * createOutputVector (Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Constructor details. ◆ RayNewProximityInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html:1743,inherit,inherited,1743,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_ray_new_proximity_intersection.html,1,['inherit'],['inherited']
Modifiability,"on; Event indicating that a child node is being detached from the scene. Any reference to one of its descendant (such as active contacts) should be removed. . Protected Attributes; BaseNode * node;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  DetachNodeEvent (BaseNode *n);  ;  ~DetachNodeEvent () override;  ; BaseNode * getNode () const;  ; bool contains (BaseNode *n) const;  ; bool contains (BaseObject *o) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ node. BaseNode* sofa::core::objectmodel::DetachNodeEvent::node. protected . Constructor details. ◆ DetachNodeEvent(). sofa::core::objectmodel::DetachNodeEvent::DetachNodeEvent ; (; BaseNode * ; n). ◆ ~DetachNodeEvent(). sofa::core::objectmodel::DetachNodeEvent::~DetachNodeEvent ; (; ). override . Function details. ◆ contains() [1/2]. bool sofa::core::objectmodel::DetachNodeEvent::contains ; (; BaseNode * ; n); const. ◆ contains() [2/2]. bool sofa::core::objectmodel::DetachNodeEvent::contains ; (; BaseObject * ; o); const. ◆ GetClassName(). static const char* sofa::core::objectmodel::DetachNodeEvent::GetClassName ; (; ). inlinestatic . ◆ getNode(). BaseNode * sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event.html:1426,inherit,inherited,1426,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_detach_node_event.html,1,['inherit'],['inherited']
Modifiability,"on;  ; IndexSubsetData d_indices;  Indices the particles to project. More...;  ; Data< SReal > d_drawSize;  Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) More...;  ; Data< CPos > d_direction;  Direction of the line. More...;  ; SingleLink< DirectionProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< DirectionProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; type::vector< CPos > m_origin;  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:1980,inherit,inherited,1980,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"on;  Resolution of the voxel file. More...;  ; Data< Vec6i > d_roi;  Region of interest (xmin, ymin, zmin, xmax, ymax, zmax) More...;  ; Data< int > d_headerSize;  Header size in bytes. More...;  ; Data< int > d_segmentationHeaderSize;  Header size in bytes. More...;  ; Data< type::vector< unsigned int > > d_idxInRegularGrid;  indices of the hexa in the grid. More...;  ; Data< type::vector< int > > d_backgroundValue;  Background values (to be ignored) More...;  ; Data< type::vector< int > > d_activeValue;  Active data values. More...;  ; Data< bool > d_generateHexa;  Interpret voxel as either hexa or points. More...;  ;  Public Attributes inherited from sofa::core::loader::VoxelLoader; Data< type::vector< sofa::type::Vec3 > > positions;  Coordinates of the nodes loaded. More...;  ; Data< type::vector< Hexahedron > > hexahedra;  Hexahedra loaded. More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; helper::io::Image",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:2068,inherit,inherited,2068,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,2,['inherit'],['inherited']
Modifiability,"onLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Member Functions |; List of all members . sofa::simulation::CollisionAnimationLoop Class Reference . #include <CollisionAnimationLoop.h>; Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. ; More... Inheritance diagram for sofa::simulation::CollisionAnimationLoop:. [legend]; Detailed Description; Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. ; This class can optionally replace the default computation scheme of computing collisions then doing an integration step.; Note that it is in a preliminary stage, hence its functionalities and API will certainly change soon. . Protected Member Functions;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:1008,inherit,inherited,1008,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,2,['inherit'],['inherited']
Modifiability,"onRestInformation Class Reference . #include <StandardTetrahedralFEMForceField.h>; data structure stored for each tetrahedron ; More... Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Real restVolume;  rest volume More...;  ; Real volScale;  current tetrahedron volume More...;  ; Coord shapeVector [4];  shape vector at the rest configuration More...;  ; Coord fiberDirection;  fiber direction in rest configuration More...;  ; Coord dJ [4];  derivatives of J More...;  ; Real strainEnergy;  deformation gradient = gradPhi More...;  ; float tetraIndices [4] {};  ; float tetraEdges [6] {};  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ dJ. tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html:1392,inherit,inherited,1392,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,1,['inherit'],['inherited']
Modifiability,"onSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshSubsetEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:3852,inherit,inherited,3852,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['inherit'],['inherited']
Modifiability,"onTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:2991,inherit,inherited,2991,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,4,['inherit'],['inherited']
Modifiability,"onal Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine; Data< type::Matrix4 > d_inT;  input transformation if any More...;  ; Data< type::Matrix4 > d_outT;  output transformation More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:14918,inherit,inherited,14918,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"onding to the key frames More...;  ; Data< bool > d_relativeMovements;  indicates whether movements are relative to the dof or absolute More...;  ; Data< bool > d_showMovement;  ; Real prevT;  the key times surrounding the current simulation time (for interpolation) More...;  ; Real nextT;  ; Deriv prevM;  the motions corresponding to the surrounding key times More...;  ; Deriv nextM;  ; VecCoord x0;  initial constrained DOFs position More...;  ; SingleLink< LinearMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< LinearMovementProjectiveConstraintInternalData< DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:2436,inherit,inherited,2436,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"onduc;  Boolean enabling to visualize the different diffusion coefficient. More...;  ; SingleLink< TetrahedronDiffusionFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; bool loadedDiffusivity;  Boolean if the diffusion coefficients have loaded from file. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Real > edgeDiffusionCoefficient;  Vector saving the edge diffusion coefficients. More...;  ; MechObject::SPtr mechanicalObject;  Pointer to mechanical mechanicalObject. More...;  ; sofa::core::topology::BaseMeshTopology::SPtr m_topology;  Po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html:2112,inherit,inherited,2112,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,"onent among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_fixedXRotation. template<class DataTypes > . Data< bool > sofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >::d_fixedXRotation. protected . Prevent Rotation around X axis. . ◆ d_fixedYRotation. template<class DataTypes > . Data< bool > sofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >::d_fixedYRotation. protected . Prevent Rotation around Y axis. . ◆ d_fixedZRotation. template<class DataTypes > . Data< bool > sofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >::d_fixedZRotation. protected . Prevent Rotation around Z axis. . ◆ FixedXRotation. template<class DataTypes > . sofa::core::objectmodel::RenamedData< bool > sofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >::FixedXRotation. protected . ◆ FixedYRo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html:18707,inherit,inherited,18707,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"onent among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_indices. template<class DataTypes > . SetIndex sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::d_indices. protected . indices of the DOFs constraints . ◆ d_P1. template<class DataTypes > . Data<Vec3R> sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::d_P1. protected . the three points defining the parabol . ◆ d_P2. template<class DataTypes > . Data<Vec3R> sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::d_P2. protected . second point of the parabol . ◆ d_P3. template<class DataTypes > . Data<Vec3R> sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::d_P3. protected . third point of the parabol . ◆ d_tBegin. template<class DataTypes > . Data<Real> sofa::component::constraint::projective::ParabolicProjectiveCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:19962,inherit,inherited,19962,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"onent responsible for the expression and solution of system of equations related to constraints. The main method is solveConstraint(const ConstraintParams *, MultiVecId , MultiVecId ); The default implementation successively calls: prepareStates, buildSystem, solveSystem, applyCorrection. The parameters are defined in class ConstraintParams. . Public Member Functions;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; virtual bool prepareStates (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool buildSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool solveSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool applyCorrection (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void computeResidual (const core::ExecParams *);  ; virtual void removeConstraintCorrection (BaseConstraintCorrection *s)=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Resolution DOFs vectors API; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html:2228,inherit,inherited,2228,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,1,['inherit'],['inherited']
Modifiability,"onent::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) More...;  ; void setContactDistance (SReal v) override;  Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) More...;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ; virtual bool testIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, const core::collision::Intersection *currentIntersection);  ; virtual int computeIntersection (collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection);  ; virtual bool testIntersection (collision:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:6478,inherit,inherited,6478,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,2,['inherit'],['inherited']
Modifiability,"onent::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is false) More...;  ; void setAlarmDistance (SReal v) override;  Sets the alarm distance (if useProximity() is false, the alarm distance is equal to 0) More...;  ; void setContactDistance (SReal v) override;  Sets the contact distance (if useProximity() is false, the contact distance is equal to 0) More...;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:10343,inherit,inherited,10343,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['inherit'],['inherited']
Modifiability,"onent::constraint::projective::FixedProjectiveConstraint< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool fixAllDOFs () const;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void projectResponse (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:5298,inherit,inherited,5298,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"onent::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:3224,inherit,inherited,3224,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,3,['inherit'],['inherited']
Modifiability,"onent::engine::transform::SmoothMeshEngine< DataTypes >::SmoothMeshEngine. protected . ◆ ~SmoothMeshEngine(). template<class DataTypes > . sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::~SmoothMeshEngine ; (; ). inlineoverrideprotected . Function details. ◆ computeBBox(). template<class DataTypes > . void sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::transform::SmoothMeshEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(SmoothMeshEngine< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentenginetransformSmoothMeshEngine; Generated on Mon Nov 11 2024 02:44:56 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:20282,variab,variables,20282,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['variab'],['variables']
Modifiability,onent::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation Class Reference . #include <TetrahedronHyperelasticityFEMForceField.h>; data structure stored for each tetrahedron ; More... Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Coord m_shapeVector [4];  shape vector at the rest configuration More...;  ; Coord m_fiberDirection;  fiber direction in rest configuration More...;  ; Real m_restVolume {};  rest volume More...;  ; Real m_volScale {};  current tetrahedron volume More...;  ; Real m_volume {};  ; MatrixSym m_SPKTensorGeneral;  volume/ restVolume More...;  ; Matrix3 m_deformationGradient;  deformation gradient = gradPhi More...;  ; Real m_strainEnergy {};  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html:1049,config,configuration,1049,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,1,['config'],['configuration']
Modifiability,"onentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SubsetTopology, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:5917,inherit,inherited,5917,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['inherit'],['inherited']
Modifiability,onfiguring-sofa-with-eigen3; ; SOFA - Topic: [SOLVED] Problem configuring SOFA with Eigen3. /problem-downloading-the-source-files-from-git-repositary; ; SOFA - Topic: [SOLVED] Problem downloading the source files from git repositary. /problem-for-beam-mass-simulation; ; SOFA - Topic: Problem for beam-mass simulation. /problem-in-generating-cmake-gui-when-building-sofa; ; SOFA - Topic: [SOLVED] Problem in generating Cmake-gui when building Sofa. /problem-in-installing-cmake; ; SOFA - Topic: [SOLVED] Problem in installing Cmake. /problem-in-installing-stlib; . /feed; ; [SOLVED] Problem in installing STlib – SOFA. SOFA - Topic: [SOLVED] Problem in installing STlib. /problem-in-running-new-version-of-sofa-20-12; ; SOFA - Topic: Problem in running new version of Sofa 20.12. /problem-of-the-variables-control-of-legged-robot-with-flexible-passive-trunk; ; SOFA - Topic: Problem of the Variables Control of Legged Robot with Flexible Passive Trunk. /problems-applying-sofacuda-plugin; ; SOFA - Topic: [SOLVED] Problems applying SofaCUDA plugin. /problems-at-lauching-runsofa; ; SOFA - Topic: [SOLVED] Problems at lauching runSofa. /problems-finding-collision-algorithms; ; SOFA - Topic: [SOLVED] Problems finding collision algorithms. /problems-generating-mesh-with-cgalplugin-and-tetrahedronsettopologycontainer; ; SOFA - Topic: [SOLVED] Problems generating mesh with CGALPlugin and TetrahedronSetTopologyContainer. /problems-importing-sofa-gui-sofapython3; ; SOFA - Topic: Problems importing Sofa.Gui (SofaPython3). /problems-in-model-order-reduction; ; SOFA - Topic: [SOLVED] Problems in Model Order Reduction. /problems-in-mor-runsofa-location-and-sofa-launcher; ; SOFA - Topic: [SOLVED] Problems in MOR – runSofa location and sofa-launcher. /problems-in-partitioning-mesh; ; SOFA - Topic: Problems in Partitioning mesh. /problems-in-the-installation-of-sofaopencl-plugin; ; SOFA - Topic: [SOLVED] Problems in the installation of SofaOpenCL plugin. /problem-sofa-v15-12-after-make-there-is-ju,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:365155,plugin,plugin,365155,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],['plugin']
Modifiability,"onlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions; virtual void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce)=0;  ; virtual void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix)=0;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html:16933,inherit,inherited,16933,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,1,['inherit'],['inherited']
Modifiability,"ons inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:13419,inherit,inherited,13419,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,6,['inherit'],['inherited']
Modifiability,"ons inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:16057,inherit,inherited,16057,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,2,['inherit'],['inherited']
Modifiability,"ons |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theoretical positions. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Fun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:1142,inherit,inherited,1142,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,2,['inherit'],['inherited']
Modifiability,"ons |; List of all members . sofa::component::animationloop::FreeMotionAnimationLoop Class Reference . #include <FreeMotionAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::FreeMotionAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_solveVelocityConstraintFirst;  ; Data< bool > d_solveVelocityConstraintFirst;  solve separately velocity constraint violations before position constraint violations More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; Data< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1136,inherit,inherited,1136,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['inherit'],['inherited']
