quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,l/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and TriangularFEMForceField [#2249]( https://github.com/sofa-framework/sofa/pull/2249 ); - [SofaMiscForceField_test] Add TopologicalChanges unit tests for MeshMatrixMass [#2215]( https://github.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://git,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:143451,message,message,143451,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,lbacks (part 2) [#2388]( https://github.com/sofa-framework/sofa/pull/2388 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 3) [#2389]( https://github.com/sofa-framework/sofa/pull/2389 ); - [SofaGeneralEngine] Cleaning of MeshBoundaryROI [#2319]( https://github.com/sofa-framework/sofa/pull/2319 ); - [SofaGeneralSimpleFem] Add comments and tests for TriangularFEMForceFieldOptim [#2284]( https://github.com/sofa-framework/sofa/pull/2284 ); - [SofaGeneralSimpleFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 1) [#2384]( https://github.com/sofa-framework/sofa/pull/2384 ); - [SofaGuiGlut] Unreachable break [#2405]( https://github.com/sofa-framework/sofa/pull/2405 ); - [SofaGuiQt] Get rid of magic numbers when centering the window [#2466]( https://github.com/sofa-framework/sofa/pull/2466 ); - [SofaHelper] replace infinite loop Update PipeProcess.cpp [#2477]( https://github.com/sofa-framework/sofa/pull/2477 ); - [SofaHelper] Remove boost::thread dependency [#2264]( https://github.com/sofa-framework/sofa/pull/2264 ); - [SofaHelper_test] Remove temporary file in FileMonitor_test [#2537]( https://github.com/sofa-framework/sofa/pull/2537 ); - [SofaKernel] change data content copy on write condition [#2285]( https://github.com/sofa-framework/sofa/pull/2285 ); - [SofaMiscFEM] Small optimizations on TriangularFEMForceField (speedup ~x1.6) [#2273]( https://github.com/sofa-framework/sofa/pull/2273 ); - [SofaMiscFem] Minor homogeneization in TriangleFEMFF [#2408]( https://github.com/sofa-framework/sofa/pull/2408 ); - [SofaMiscFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 4) [#2390]( https://github.com/sofa-framework/sofa/pull/2390 ); - [SofaMiscFem] Remove debug code [#2420]( https://github.com/sofa-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in M,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:160747,depend,dependency,160747,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,lean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](http,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:83055,message,message,83055,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries(${PROJECT_NAME} PRIVATE Shlwapi); endif(). # Eigen (header only); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). # Link the experimental library if the compiler version is less than gcc-9 or clang-9; if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU""); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.1); target_link_libraries(${PROJECT_NAME} ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:7328,DEPEND,DEPENDENCY,7328,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['DEPEND'],['DEPENDENCY']
Integrability,ll/2193 ); - [SofaMiscForceField] Fix addForce function in MeshMatrixMass [#2305]( https://github.com/sofa-framework/sofa/pull/2305 ); - [SofaSimpleFem] Check topology in draw [#2478]( https://github.com/sofa-framework/sofa/pull/2478 ); - [SofaSimpleFem] Fix row/col indices in hexa fem for bloc-based matrices [#2277]( https://github.com/sofa-framework/sofa/pull/2277 ); - [SofaSimpleFem] Set valid component state [#2499]( https://github.com/sofa-framework/sofa/pull/2499 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping lost ancestor info [#2460]( https://github.com/sofa-framework/sofa/pull/2460 ); - [SofaUserInteraction] Fix InteractionPerformerFactory symbol export [#2495]( https://github.com/sofa-framework/sofa/pull/2495 ). **Plugins / Projects**; - [CGALPlugin] FIX sofa::type [#2246]( https://github.com/sofa-framework/sofa/pull/2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:152623,depend,dependency,152623,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"logy]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:325092,message,message,325092,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['message'],['message']
Integrability,lper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:125879,message,message,125879,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"lugin/SOFACImg.h; ). set(SOURCE_FILES; src/CImgPlugin/ImageCImg.cpp; src/CImgPlugin/initCImgPlugin.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED). # add FindCImg.cmake; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake); configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake ${CMAKE_BINARY_DIR}/lib/cmake/FindCImg.cmake COPYONLY); install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). sofa_find_package(CImg QUIET). if(NOT CImg_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching CImg...""). include(FetchContent); FetchContent_Declare(CImg; GIT_REPOSITORY https://github.com/GreycLab/CImg; GIT_TAG v.3.3.2; ). FetchContent_GetProperties(CImg); if(NOT CImg_POPULATED); FetchContent_Populate(CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:1181,message,message,1181,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,2,"['DEPEND', 'message']","['DEPENDENCY', 'message']"
Integrability,lver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super init [#3884](https://github.com/sofa-framework/sofa/pull/3884); - [examples] Fix unstable scene constantMomentum.scn [#3886](https://github.com/sofa-framework/sofa/pull/3886); - [SolidMechanics] Use accessors & make geometrical data required in BFF [#3887](https://github.com/sofa-framework/sofa/pull/3887); - [SofaCUDA] Replace deprecated vector types,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:40235,message,messages,40235,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,m/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/v19.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.06...v19.12 ). ### Breaking. **Architecture**; - [All] Improve extlibs integration [#1137]( https://github.com/sofa-framework/sofa/pull/1137 ); - [packages] Move all SofaComponent* + rename SofaAllCommonComponents [#1155]( https://github.com/sofa-framework/sofa/pull/1155 ). **Modules**; - [All] Add SingleLink to Topology to reveal all hidden GetMeshTopology [#1183]( https://github.com/sofa-framework/sofa/pull/1183 ); - [All] Remove ExtVecType [#1055]( https://github.com/sofa-framework/sofa/pull/1055 ); - [All] up change on GetMeshTopology [#1223]( https://github.com/sofa-framework/sofa/pull/1223 ); - [SofaBoundaryConditions] Apply doInternalUpdate API to ConstantForceField [#1145]( https://github.com/sofa-framework/sofa/pull/1145 ); - **[SofaKernel]** Replacing const char* with strings for group / help / widget etc. [#1152]( https://github.com/sofa-framework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:243453,integrat,integration,243453,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Integrability,mechanicalvisitor/MechanicalVNormVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVOpVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVReallocVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVSizeVisitor.h; ). set(SOURCE_FILES; ${SRC_ROOT}/AnimateBeginEvent.cpp; ${SRC_ROOT}/AnimateEndEvent.cpp; ${SRC_ROOT}/AnimateVisitor.cpp; ${SRC_ROOT}/BaseMechanicalVisitor.cpp; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.cpp; ${SRC_ROOT}/CleanupVisitor.cpp; ${SRC_ROOT}/CollisionAnimationLoop.cpp; ${SRC_ROOT}/CollisionBeginEvent.cpp; ${SRC_ROOT}/CollisionEndEvent.cpp; ${SRC_ROOT}/CollisionVisitor.cpp; ${SRC_ROOT}/CpuTask.cpp; ${SRC_ROOT}/CpuTaskStatus.cpp; ${SRC_ROOT}/DeactivatedNodeVisitor.cpp; ${SRC_ROOT}/DefaultAnimationLoop.cpp; ${SRC_ROOT}/DefaultVisualManagerLoop.cpp; ${SRC_ROOT}/DeleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:7342,Integrat,IntegrateEndEvent,7342,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Integrat'],['IntegrateEndEvent']
Integrability,"message(DEPRECATION ""Modeler project is deprecated""). add_subdirectory(""lib""); add_subdirectory(""exec""); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/CMakeLists.txt:0,message,message,0,applications/projects/Modeler/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/CMakeLists.txt,1,['message'],['message']
Integrability,"messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-fr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326025,message,message,326025,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"mework/sofa/pull/1249 ); - **[SofaKernel]** Add DataTypeInfo for BoundingBox [#1373]( https://github.com/sofa-framework/sofa/pull/1373 ); - **[SofaKernel]** Cleaner output when the creation of an object fails [#1266]( https://github.com/sofa-framework/sofa/pull/1266 ); - **[SofaSimulationCore]** Add a way to fill a multi vector from a base vector with a MechanicalOperations (mops). [#1248]( https://github.com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framewo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:233499,depend,dependencies,233499,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"mework/sofa/pull/269 ). **Scenes**; - Components/engine/GenerateGrid.scn was fixed [#303]( https://github.com/sofa-framework/sofa/pull/303 ). ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - RegularGridTopology : clean the constructor's code & remove NDEBUG code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa-framework/sofa/pull/270 ). - [SofaVolumetricData]; - Light: clean and strenghening the interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:335565,interface,interface,335565,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['interface'],['interface']
Integrability,mework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchabl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:20553,depend,dependency,20553,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,n for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ). ### Cleanings; **Modules**; - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ). ____________________________________________________________. ## [v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework/sofa/pull/1915 ); - **[SofaHelper]** Remove some SofaCore dependencies [#1810]( https://github.com/sofa-framework/sofa/pull/1810 ); - **[SofaKernel]** Create Sofa.Geometry and Sofa.Topology modules [#1912]( https://github.com/sofa-framework/sofa/pull/1912 ); - *,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:167768,depend,dependencies,167768,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"n that enables other; parties to make or receive copies. Mere interaction with a user through; a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices""; to the extent that it includes a convenient and prominently visible; feature that (1) displays an appropriate copyright notice, and (2); tells the user that there is no warranty for the work (except to the; extent that warranties are provided), that licensees may convey the; work under this License, and how to view a copy of this License. If; the interface presents a list of user commands or options, such as a; menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work; for making modifications to it. ""Object code"" means any non-source; form of a work. A ""Standard Interface"" means an interface that either is an official; standard defined by a recognized standards body, or, in the case of; interfaces specified for a particular programming language, one that; is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work,",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:24527,Interface,Interface,24527,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,3,"['Interface', 'interface']","['Interface', 'interface', 'interfaces']"
Integrability,"nagerSecondaryPass; - Add OglTexturePointer; - adding SquareDistanceMapping to compute the square distance between 2 points.; - add OrderIndependentTransparency Manager (using two passes instead of three); - add OglOITShader to customize the shading of transparent surfaces; - ProjectionToTargetLineMapping and ProjectionToTargetPlaneMapping with precomputed constant Jacobians and using last origin and direction/normal for extra points; - Adding a timer embedding all the animation loop step but would need further doc.; - display of indices has been improved; - Add an example using cloth springs: examples/Components/forcefield/ClothBendingForceField.py; - Improving a few examples by making the embedding nodes as non pickable (tag 'NoPicking'); - Add BaseNode::getRootPath; - Improving performances: - Message::class is now an enum; - Updated draw method of PointSetGeometryAlgorithms, QuadSetGeometryAlgorithms, TetrahedronSetGeometryAlgorithms, TriangleSetGeometryAlgorithms; - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtGlViewer); - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, che",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:345824,Message,Message,345824,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Message'],['Message']
Integrability,ndingBox : Remove annoying warnings [#1425]( https://github.com/sofa-framework/sofa/pull/1425 ); - [SofaGeneralEngine] Fix draw of the sphere in SphereROI [#1318]( https://github.com/sofa-framework/sofa/pull/1318 ); - [SofaGeneralEngine] Remove remaining BoxROI after SofaEngine move [#1333]( https://github.com/sofa-framework/sofa/pull/1333 ); - [SofaGeneralLoader] Allow flip normals in Gmsh and STL loaders [#1418]( https://github.com/sofa-framework/sofa/pull/1418 ); - [SofaGui] Pass QDocBrowser as an option [#1315]( https://github.com/sofa-framework/sofa/pull/1315 ); - **[SofaKernel]** Add Data bool d_checkTopology in Topology container to replace the use of CHECK_TOPOLOGY macro [#1351]( https://github.com/sofa-framework/sofa/pull/1351 ); - **[SofaKernel]** Clean occurrences of CHECK_TOPOLOGY macro in code [#1352]( https://github.com/sofa-framework/sofa/pull/1352 ); - **[SofaKernel]** Clean of Material.h/cpp [#1346]( https://github.com/sofa-framework/sofa/pull/1346 ); - **[SofaKernel]** Remove X11 dependency when SOFA_NO_OPENGL is enabled. [#1370]( https://github.com/sofa-framework/sofa/pull/1370 ); - **[SofaKernel]** Who hates warnings? [#1258]( https://github.com/sofa-framework/sofa/pull/1258 ); - **[SofaKernel]** replace all serr by msg_error/msg_warning [#1237]( https://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:241125,depend,dependency,241125,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"ne was specified.""); set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Build type"" FORCE); endif(). # Output Directories definition; set(ARCHIVE_OUTPUT_DIRECTORY lib); set(RUNTIME_OUTPUT_DIRECTORY bin); if(WIN32); set(LIBRARY_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}); else(); set(LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIRECTORY}); endif(); ## Set the output directories globally; set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${ARCHIVE_OUTPUT_DIRECTORY}); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${RUNTIME_OUTPUT_DIRECTORY}); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBRARY_OUTPUT_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAK",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:1653,depend,dependencies,1653,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,nes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github.com/sofa-framework/sofa/pull/4513); - [LinearAlgebra] Refactor sparse matrix product [#4547](https://github.com/sofa-framework/sofa/pull/4547); - [plugins] Remove ExternalBehaviorModel and ManualMapping plugins [#4565](https://github.com/sofa-framework/sofa/pull/4565); - [LinearSystem.Direct] Remove metis dependency [#4588](https://github.com/sofa-framework/sofa/pull/4588); - [ODESolver] Explicit link to linear solver [#4628](https://github.com/sofa-framework/sofa/pull/4628); - [Collision.Detection.Algorithm] Rename Data [#4674](https://github.com/sofa-framework/sofa/pull/4674); - [Collision.Detection.Intersection] Rename Data [#4675](https://github.com/sofa-framework/sofa/pull/4675); - [Collision.Geometry+Response] Rename Data [#4676](https://github.com/sofa-framework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:19084,depend,dependency,19084,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"ngEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350143,message,messages,350143,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"nges and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:336960,interface,interfaces,336960,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['interface', 'message']","['interfaces', 'message']"
Integrability,nicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://github.com/sofa-framework/sofa/pull/4062); - [LinearAlgebra] Fix matrix sizes when filtering [#4063](https://github.com/sofa-framework/sofa/pull/4063); - [MechanicalLoad] Fix compilation further to new RemovedData constructor [#4094](https://github.com/sofa-framework/sofa/pull/4094); - [MechanicalLoad] Fix plane force field buildStiffnessMatrix [#4098](https://github.com/sofa-framework/sofa/pull/4098); - [GUI.Qt] Fix crash if filename is null [#4102](https://github.com/sofa-framework/sofa/pull/4102); - [Tutorials] Update and fix oneTetrahedron tutorial [#4103](https://github.com/sofa-framework/sofa/pull/4103); - [Helper] Fix wrong function called when writing jpg file [#4111](https://github.com/sofa-framework/sofa/pull/4111); - [test] Make quaternion test deterministic and portable [#4126](https://github.com/sofa-framework/sofa/pull/4126); - [Constraint.Lagrangian.Solver] Fix default value for computeConstraintForces Data [#4129](https://github.com/sofa-framework/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:34746,message,message,34746,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,nicalVMultiOpVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVNormVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVOpVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVReallocVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVSizeVisitor.h; ). set(SOURCE_FILES; ${SRC_ROOT}/AnimateBeginEvent.cpp; ${SRC_ROOT}/AnimateEndEvent.cpp; ${SRC_ROOT}/AnimateVisitor.cpp; ${SRC_ROOT}/BaseMechanicalVisitor.cpp; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.cpp; ${SRC_ROOT}/CleanupVisitor.cpp; ${SRC_ROOT}/CollisionAnimationLoop.cpp; ${SRC_ROOT}/CollisionBeginEvent.cpp; ${SRC_ROOT}/CollisionEndEvent.cpp; ${SRC_ROOT}/CollisionVisitor.cpp; ${SRC_ROOT}/CpuTask.cpp; ${SRC_ROOT}/CpuTaskStatus.cpp; ${SRC_ROOT}/DeactivatedNodeVisitor.cpp; ${SRC_ROOT}/DefaultAnimationLoop.cpp; ${SRC_ROOT}/DefaultVisualManagerLoop.cpp; ${SRC_ROOT}/DeleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:7305,Integrat,IntegrateBeginEvent,7305,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Integrat'],['IntegrateBeginEvent']
Integrability,"ns/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9258,message,message,9258,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability,"nsmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330467,message,message,330467,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,nt buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all] Remove few lines of code that do nothing [#3946](https://github.com/sofa-framework/sofa/pull/3946); - [all] Implement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRow,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:42795,depend,dependency,42795,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,o SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework/sofa/pull/1915 ); - **[SofaHelper]** Remove some SofaCore dependencies [#1810]( https://github.com/sofa-framework/sofa/pull/1810 ); - **[SofaKernel]** Create Sofa.Geometry and Sofa.Topology modules [#1912]( https://github.com/sofa-framework/sofa/pull/1912 ); - **[SofaKernel]** Create Sofa.Type module [#1555]( https://github.com/sofa-framework/sofa/pull/1555 ); - **[SofaKernel]** Package all modules of SofaFramework [#1990]( https://github.com/sofa-framework/sofa/pull/1990 ); - **[SofaKernel]** Port Mat from Defaulttype to Sofa.Type [#1775]( https://github.com/sofa-framework/sofa/pull/1775 ); - **[SofaKernel]** Port Quat from Defaulttype to Sofa.Type [#1790]( https://github.com/sofa-framework/sofa/pull/1790 ); - **[SofaKernel]** Port Vec from Defaulttype to Sofa.Type (bis) [#1734]( https://github.com/sofa-framework/sofa/pull/1734 ); - **[SofaKernel]** Port a bunch of types from Helper and Defaulttype to Sofa.Type [#1818]( https://github.com/sofa-framework/sofa/pull/1818 ); - **[SofaKernel]** Port vector (and its siblings) f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:168562,depend,dependencies,168562,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,o use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaValidation]; - move code to set default folder for monitor to init function [#500]( https://github.com/sofa-framework/sofa/pull/500 ). **Plugins / Projects**; - [All]; - FIX: compilation warnings [#36,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:322139,message,message,322139,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduce visitor to know the number of non-diagonal mass matrices [#2165]( https://github.com/sofa-framework/sofa/pull/2165 ); - [SofaGeneralSimpleFem] Remove \*Containers [#2099]( https://github.com/sofa-framework/sofa/pull/2099 ); - **[SofaHelper]** Add two search paths for every prefixes of the plugin manager [#1824]( https://github.com/sofa-framework/sofa/pull/1824 ); - **[SofaHelper]** Move polygon cube intersection ad-hoc algorithm to SofaBaseTopology [#1772]( https://github.com/sofa-framework/sofa/pull/1772 ); - **[SofaHelper]** Remove SofaSimulationCore dependency from AdvancedTimer [#1770]( https://github.com/sofa-framework/sofa/pull/1770 ); - **[SofaHelper]** Replace boost::shared_ptr for std::shared_ptr [#1901]( https://github.com/sofa-framework/sofa/pull/1901 ); - **[SofaHelper]** remove stream operator<< in accessor [#1808]( https://github.com/sofa-framework/sofa/pull/1808 ); - [SofaMiscCollision] Clean options [#2170]( https://github.com/sofa-framework/sofa/pull/2170 ); - [SofaMiscCollision] Fix multiple bugs in group manager [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Factorize code to remove duplicated struct [#1957]( https://github.com/sofa-framework/sofa/pull/1957 ); - **[SofaSimulationCore]** Move CpuTask class into its own file [#1993]( https://github.com/sofa-framework/sofa/pull/1993 ); - **[SofaSimulationCore]** Simplify repetitive code in BaseMech",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:174731,depend,dependency,174731,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,ofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigid barycentric mapping [#710]( https://github.com/sofa-framework/sofa/pull/710 ); - **[SofaHelper]** PluginManager now checks for file existence instead of library extension match. [#621]( https://github.com/sofa-framework/sofa/pull/621 ). **Plugins / Projects**; - [HeadlessRecorder] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:295349,depend,dependency,295349,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,ofa/pull/1200 ); - **[SofaKernel]** Make componentState a real data field [#1168]( https://github.com/sofa-framework/sofa/pull/1168 ); - [SofaMiscForceField] Use doUpdateInternal API in MeshMatrixMass [#1151]( https://github.com/sofa-framework/sofa/pull/1151 ); - [SofaQtQuick] Pass extra command-line arguments for python scenes in a more high-level function call [#992]( https://github.com/sofa-framework/sofa/pull/992 ); - [SofaSphFluid] Add sprite-based point render [#1194]( https://github.com/sofa-framework/sofa/pull/1194 ); - [SofaSphFluid] Update rendering & other [#1215]( https://github.com/sofa-framework/sofa/pull/1215 ). **Plugins / Projects**; - [runSofa] Fix DataWidget display Speicherleck and long loading [#1181]( https://github.com/sofa-framework/sofa/pull/1181 ). **Examples / Scenes**; - [Examples] Add some mesh and PR1000 demo scene [#1112]( https://github.com/sofa-framework/sofa/pull/1112 ). ### Bug Fixes. **Architecture**; - [CMake]**[SofaFramework]** Remove FFMPEG_exec target from the dependencies of SofaFramework [#1177]( https://github.com/sofa-framework/sofa/pull/1177 ); - [CMake] FIX Eigen finding [#1175]( https://github.com/sofa-framework/sofa/pull/1175 ); - [CMake] FIX unknown compiler option on VS2015 [#1192]( https://github.com/sofa-framework/sofa/pull/1192 ); - [SofaMacros] FIX default module version [#1123]( https://github.com/sofa-framework/sofa/pull/1123 ); - [SofaMacros] FIX sofa_set_install_relocatable escaped chars [#1154]( https://github.com/sofa-framework/sofa/pull/1154 ). **Modules**; - [All] Fix warnings [#1206]( https://github.com/sofa-framework/sofa/pull/1206 ); - [All] Fix warnings [#1167]( https://github.com/sofa-framework/sofa/pull/1167 ); - [All] Fix some warnings and OglAttribute handleTopologyChange [#1159]( https://github.com/sofa-framework/sofa/pull/1159 ); - [SofaBoundaryCondition] Fix FixedRotationConstraint when using more than one locked axis [#1119]( https://github.com/sofa-framework/sofa/pull/1119 ); - **[SofaBaseMech,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:248190,depend,dependencies,248190,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,ofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates [#4190](https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:45221,depend,dependency,45221,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,ofaGuiQt] FIX: component/nodes ordering in runSofa scene graph [#1001]( https://github.com/sofa-framework/sofa/pull/1001 ); - [SofaGuiQt] REMOVE: public export of target SofaExporter [#963]( https://github.com/sofa-framework/sofa/pull/963 ); - [SofaGuiQt] Fix: several QWidget do not have a parent [#1030]( https://github.com/sofa-framework/sofa/pull/1030 ); - **[SofaHelper]** FIX compilation on Visual Studio 2015 with QWT plugin [#935]( https://github.com/sofa-framework/sofa/pull/935 ); - **[SofaHelper]** FIX WinDepPack INSTALL_INTERFACE [#1042]( https://github.com/sofa-framework/sofa/pull/1042 ); - **[SofaHelper]** REMOVE PluginManager::m_searchPaths [#947]( https://github.com/sofa-framework/sofa/pull/947 ); - **[SofaKernel]** Clean & Fix TopologyChangeVisitor and StateChangeVisitor behavior [#880]( https://github.com/sofa-framework/sofa/pull/880 ); - **[SofaKernel]** Clean output data when doUpdate in BoxROI [#1056]( https://github.com/sofa-framework/sofa/pull/1056 ); - **[SofaKernel]** FIX deprecation message related to template types. [#939]( https://github.com/sofa-framework/sofa/pull/939 ); - **[SofaKernel]** FIX in TetrahedronFEMForceField & TetrahedronSetTopologyAlgorithm [#973]( https://github.com/sofa-framework/sofa/pull/973 ); - **[SofaKernel]** FIX operator>> in Mat.h and add corresponding test. [#993]( https://github.com/sofa-framework/sofa/pull/993 ); - **[SofaKernel]** FIX: A few fix to compile on Mac OSX Xcode 9 and Linux gcc 7.3.0 [#969]( https://github.com/sofa-framework/sofa/pull/969 ); - **[SofaKernel]** FIX: force name data to contain something [#1009]( https://github.com/sofa-framework/sofa/pull/1009 ); - **[SofaKernel]** Fix error in MapperHexahedron and MapperQuad barycentric coef computation [#1057]( https://github.com/sofa-framework/sofa/pull/1057 ); - **[SofaKernel]** Fix: remove unwanted AdvanceTimer::begin command [#1029]( https://github.com/sofa-framework/sofa/pull/1029 ); - **[SofaKernel]** Remove warnings [#968]( https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:267288,message,message,267288,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"om/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:321705,depend,dependencies,321705,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,om/sofa-framework/sofa/pull/4015); - [MechanicalLoad] Implement buildStiffnessMatrix for QuadPressureForceField [#4018](https://github.com/sofa-framework/sofa/pull/4018); - [FEM.Elastic] Add option to compute principal stress direction in TriangularFEMForceFieldOptim [#4027](https://github.com/sofa-framework/sofa/pull/4027); - [Geometry] Add method isPointOnEdge in Edge structure [#4028](https://github.com/sofa-framework/sofa/pull/4028); - [Geometry] Add method intersectionWithEdge in Edge structure [#4029](https://github.com/sofa-framework/sofa/pull/4029); - [Geometry] Add methods getBarycentricCoordinates and isPointInTriangle in Triangle class [#4053](https://github.com/sofa-framework/sofa/pull/4053); - [examples] Introduce falling beam example [#4055](https://github.com/sofa-framework/sofa/pull/4055); - [all] Add dates for user deprecation classes RemovedData and DeprecatedData [#4059](https://github.com/sofa-framework/sofa/pull/4059); - [LinearSolver.Direct] More details in error message [#4060](https://github.com/sofa-framework/sofa/pull/4060); - [GitHub] Action to check PR titles [#4081](https://github.com/sofa-framework/sofa/pull/4081); - [MechanicalLoad] Implement buildStiffnessMatrix in SurfacePressureForceField [#4097](https://github.com/sofa-framework/sofa/pull/4097); - [MechanicalLoad] Implement buildStiffnessMatrix for SphereForceField [#4099](https://github.com/sofa-framework/sofa/pull/4099); - [FEM.Elastic] Implement buildStiffnessMatrix for TriangularFEMForceFieldOptim [#4105](https://github.com/sofa-framework/sofa/pull/4105); - [plugins] Add fetchable ShapeMatchingPlugin [#4106](https://github.com/sofa-framework/sofa/pull/4106); - [Constraint.Lagrangian.Correction] Decrease the severity of not finding a file in PrecomputedConstraintCorrection [#4108](https://github.com/sofa-framework/sofa/pull/4108); - [FEM.HyperElastic] Implement buildStiffnessMatrix for StandardTetrahedralFEMForceField [#4110](https://github.com/sofa-framework/sofa/pull/4110); - [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:29639,message,message,29639,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"on support in CUDA (requires GT200+ GPU and -arch sm_13 flag."" OFF); if(SOFACUDA_DOUBLE); set(SOFA_GPU_CUDA_DOUBLE 1) # #cmakedefine; endif(). option(SOFACUDA_DOUBLE_PRECISE ""Enable double-precision for sqrt/div... (requires compute capability; >= 2 and CUDA_VERSION > 3.0)"" OFF); # Note: with SOFA_GPU_CUDA_PRECISE and SOFA_GPU_CUDA_DOUBLE you get IEEE; # 754-compliant floating point operations for addition and multiplication only.; if(SOFACUDA_DOUBLE_PRECISE); set(SOFA_GPU_CUDA_DOUBLE_PRECISE 1) # #cmakedefine; endif(). option(SOFACUDA_PRECISE ""Use IEEE 754-compliant floating point operations."" OFF). include(SofaCUDANvccFlags.cmake). # nvcc uses a ""host code compiler"" to compile CPU code, specified by CUDA_HOST_COMPILER.; # With some versions of CMake, CUDA_HOST_COMPILER defaults to CMAKE_C_COMPILER,; # but few host compilers are actually supported. Workarounds should go here.; if (${CUDA_HOST_COMPILER} MATCHES ""ccache$""); message(STATUS ""SofaCUDA: CUDA host compiler was set to ccache, changing to g++""); set(CUDA_HOST_COMPILER ""g++"" CACHE STRING ""Host side compiler used by NVCC"" FORCE); endif(). # quick and dirty fix for nvcc compatibility with -fno-partial-inlining flag; set(CUDA_PROPAGATE_HOST_FLAGS OFF). if(WIN32); add_definitions(""-DWIN32""); set(WINDOWSOPTIONS ""/MD""); endif(). # Make the compiler definitions available to nvcc; add_definitions(""-DSOFA_BUILD_SOFACUDA""); # Give include directories to nvcc compiler.; # Note: keep cuda_include_directories() before cuda_add_library().; cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}""); cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/src""); cuda_include_directories(""${CMAKE_BINARY_DIR}/include""); cuda_add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${CUDA_SOURCES} ${README_FILES} OPTIONS ${VERBOSE_PTXAS} ${WINDOWSOPTIONS}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/src>""); set_target_properties(${PROJECT_NAM",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:18711,message,message,18711,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,opagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113558,depend,depending,113558,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['depending']
Integrability,"ork under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If additional permissions; apply only to part of the Program, that part may be used separately; under those permissions, but the entire Program remains governed by; this License without regard to the additional permissions. When you convey a copy of a ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:36062,protocol,protocols,36062,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['protocol'],['protocols']
Integrability,"ork.org/about/jobs/). ## What is SOFA. SOFA is an open source framework targeted at interactive physics simulation based on the Finite Element Method (FEM), with an emphasis on medical simulation and robotics. ; It is mainly intended for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2252,integrat,integrated,2252,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['integrat'],['integrated']
Integrability,ork/sofa/pull/1776 ); - [Geomagic] Fix compilation of GeomagicVisualModel due to change in MechanicalVisitor [#2113]( https://github.com/sofa-framework/sofa/pull/2113 ); - [LMConstraint] Fix collision model [#1819]( https://github.com/sofa-framework/sofa/pull/1819 ); - [LMConstraint] Fix unload [#1831]( https://github.com/sofa-framework/sofa/pull/1831 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaCUDA] Ignore example scenes using SofaCUDA on CI [#2042]( https://github.com/sofa-framework/sofa/pull/2042 ); - [SofaCUDA] Quick fix for SofaCUDA NVCC flags include not found during CMake setup [#2022]( https://github.com/sofa-framework/sofa/pull/2022 ); - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ); - [SofaComponentAll] FIX build with disabled dependencies [#1940]( https://github.com/sofa-framework/sofa/pull/1940 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaOpenCL] Remove use of deleted functions [#1880]( https://github.com/sofa-framework/sofa/pull/1880 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaSphFluid] Fix ParticleSink init and refresh all examples. [#2026]( https://github.com/sofa-framework/sofa/pull/2026 ); - [Tutorials] Resurrect tutorials projects [#2024]( https://github.com/sofa-framework/sofa/pull/2024 ); - [VolumetricRendering] Fix compilation due to removal of params [#1869]( https://github.com/sofa-framework/sofa/pull/1869 ); - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ); - [examples] FIX scene name for Regression_test [#1881]( https://github.com/sofa-framework/sofa/pull/1881 ); - [examples] Fix or disable ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:193412,depend,dependencies,193412,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"orks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); en",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:2486,message,message,2486,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,2,['message'],['message']
Integrability,"p; ImageFilter.cpp; ImageOperation.cpp; ImageSampler.cpp; ImageToRigidMassEngine.cpp; ImageTransform.cpp; ImageTransformEngine.cpp; ImageTypes.cpp; ImageValuesFromPositions.cpp; ImageCoordValuesFromPositions.cpp; MarchingCubesEngine.cpp; MergeImages.cpp; MeshToImageEngine.cpp; TransferFunction.cpp; VoronoiToMeshEngine.cpp; DepthMapToMeshEngine.cpp; ImageViewer.cpp; ); endif(). set(README_FILES; image.txt; ). if(SofaPython_FOUND); set(PYTHON_FILES; python/SofaImage/API.py; python/SofaImage/__init__.py; ); list(APPEND SOURCE_FILES python/Binding_ImageData.cpp); list(APPEND HEADER_FILES python/Binding_ImageData.h python/Binding_ImageData.inl). # Config files and install rules for pythons scripts; sofa_install_pythonscripts(PLUGIN_NAME ${PROJECT_NAME} PYTHONSCRIPTS_SOURCE_DIR ""python""); endif(). if(Sofa.GL_FOUND); if(FREENECT_FOUND); list(APPEND HEADER_FILES Kinect.h); list(APPEND SOURCE_FILES Kinect.cpp); message(STATUS ""image: found the freenect library""); else(); message(STATUS ""image: could not find the freenect library, won't build the Kinect component""); endif(); endif(). # OpenMP is bugged in image, forcing it to be single threaded for now; if(SOFA_OPENMP); message( WARNING ""image: deactivating OpenMP"" ); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}); endif(). set(PLUGIN_IMAGE_COMPILE_SET_VALUE 0) # none; if(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""standard""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 1); elseif(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""full""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${PYTHON_FILES}); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_IMAGE""); target_link_libraries(${PROJECT_NAME} Sofa.Core CImgPlugin Sofa.Component.Visual). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL) ; endif(). if(FREENECT_FOUND); target_link",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:2376,message,message,2376,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,2,['message'],['message']
Integrability,"pp; ${SOFATYPESRC_ROOT}/Material.cpp; ${SOFATYPESRC_ROOT}/PrimitiveGroup.cpp; ${SOFATYPESRC_ROOT}/Quat.cpp; ${SOFATYPESRC_ROOT}/RGBAColor.cpp; ${SOFATYPESRC_ROOT}/SVector.cpp; ${SOFATYPESRC_ROOT}/SpatialVector.cpp; ${SOFATYPESRC_ROOT}/Transform.cpp; ${SOFATYPESRC_ROOT}/Vec.cpp; ${SOFATYPESRC_ROOT}/fixed_array.cpp; ${SOFATYPESRC_ROOT}/vector.cpp; ${SOFATYPESRC_ROOT}/vector_Integral.cpp; ${SOFATYPESRC_ROOT}/vector_Real.cpp; ${SOFATYPESRC_ROOT}/vector_String.cpp; ). sofa_find_package(Sofa.Config REQUIRED). ## Boost (1.54.0 or higher) is now mandatory.; set(BOOST_MIN_VERSION ""1.54.0""); set(Boost_NO_BOOST_CMAKE TRUE); sofa_find_package(Boost ${BOOST_MIN_VERSION} QUIET); if(NOT Boost_FOUND); if(WIN32); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.\n""; ""Note that Boost autodetection on Windows was removed.\n""; ""Please follow CMake documentation to find Boost on your system.\n""; ""Hint: set BOOST_ROOT to your Boost location.""; ); else(); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.""); endif(); endif(); sofa_find_package(Boost QUIET REQUIRED); sofa_find_package(Sofa.Compat QUIET BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config); target_link_libraries(${PROJECT_NAME} PUBLIC Boost::boost); if(Sofa.Compat_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Compat); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TYPE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TYPE_BUILD_TESTS); add_subdi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt:2695,message,message,2695,Sofa/framework/Type/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt,1,['message'],['message']
Integrability,"pring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgre",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:2025,interface,interface,2025,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['interface'],['interface']
Integrability,"ps://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.com/sofa-framework/sofa/pull/1196 ); - [SceneCreator] Pluginizing... [#1109]( https://github.com/sofa-framework/sofa/pull/1109 ); - **[SofaBaseLinearSolver]** Remove virtual function BaseLinearSolver::isMultiGroup [#1063]( https://github.com/sofa-framework/sofa/pull/1063 ); - **[SofaBaseLinearSolver][FullMatrix]** Restore fast clear function [#1128]( https://github.com/sofa-framework/sofa/pull/1128 ); - **[SofaFramework]** Remove (painful) check/warning with Rigids [#1229]( https://github.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifier on notify methods in Node [#1169]( https://github.com/sofa-framework/sofa/pull/1169 ); - **[SofaKernel]** Remove deprecated SOFA_DEBUG macro [#1232]( https://github.com/sofa-framework/sofa/pull/1232 ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://github.com/sofa-framework/sofa/pull/1201 ); - [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://gith",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:254810,depend,dependency,254810,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core] Call super init() in MultiMapping and Multi2Mapping [#4432](https://github.com/sofa-framework/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7050,message,messages,7050,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"r [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - SuturePointPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Kernel modules**; - [All]; - issofa_visitors: Changing the way projective constraints are propagated in visitors [#216]( https://github.com/sofa-framework/sofa/pull/216 ); - [SofaDeformable]; - Change how rest shape is given in RestShapeSpringsForceField [#315]( https://github.com/sofa-framework/sofa/pull/315 ). **Other modules**; - [SofaHelper]; - Rewrite ArgumentParser [#513]( https://github.com/sofa-framework/sofa/pull/513 ); - [SofaValidation]; - ADD Monitor test [#312]( https://github.com/sofa-framework/sofa/pull/312 ). ### Improvements. **Kernel modules**; - [All]; - issofa_topology: Improvement, BugFix and Cleaning on Topology [#243]( https://github.com/sofa-framework/sofa/pull/243 ); - issofa_constraintsolving: improve constraints [#484]( https://github.com/sofa-framework/sofa/pull/484 ); - Improve File:line info in error message (for python and xml error reporting) [#314]( https://github.com/sofa-framework/sofa/pull/314 ); - [SofaDeformable]; - issofa_meshspringff [#497]( https://github.com/sofa-framework/sofa/pull/497 ); - issofa_springff [#498]( https://github.com/sofa-framework/sofa/pull/498 ); - [SofaHelper]; - add ability to use NoArgument for BaseCreator and Factory [#385]( https://github.com/sofa-framework/sofa/pull/385 ); - Remove legacy ImageBMP/ImagePNG and ImageQt [#424]( https://github.com/sofa-framework/sofa/pull/424 ); - Improve advanced timer [#468]( https://github.com/sofa-framework/sofa/pull/468 ); - [SofaLoader]; - ADD normals and vectors to Legacy vtk import [#536]( https://github.com/sofa-framework/sofa/pull/536 ); - [SofaSimpleFem]; - Add check of vector size in TetrahedronFEMForceField [#341]( https://github.com/sofa-framework/sofa/pull/341 ). **Other modules**; - [All]; - Fix default value rayleigh params [#350]( https://github.com/sofa-framework/sofa/pull/350 ); - PSL branch pr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:305146,message,message,305146,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"r parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - adding listener mechanism to SceneLoader [#204]( https://github.com/sofa-framework/sofa/pull/204 ); - Grid Topologies cleanup + new SphereGrid [#164]( https://github.com/sofa-framework/sofa/pull/164 ); - Add CMake option SOFA_WITH_EXPERIMENTAL_FEATURES (default OFF) to enable MechanicalObject::buildIdentityBlocksInJacobian [#276]( https://github.com/sofa-framework/sofa/pull/276 ); - [SofaGraphComponents]; - add tests for RequiredPlugin [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaHelper]; - GLSL: load shader source code from a standard string [#158]( https://github.com/sofa-framework/sofa/pull/158 ); - [SofaBaseTopology]; - GridTopology : implement ""flat"" grids in 1 or 2 dimension by using setting grid resolu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:327323,message,message,327323,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Message', 'message']","['Message', 'message']"
Integrability,ramework/sofa/pull/1388 ); - [All] Fix warnings generated due to change in Aspects [#1329]( https://github.com/sofa-framework/sofa/pull/1329 ); - [All] Minor changes in comment or format [#1411]( https://github.com/sofa-framework/sofa/pull/1411 ); - [All] Multiple fixes scenes [#1289]( https://github.com/sofa-framework/sofa/pull/1289 ); - [All] Remove all DISPLAY_TIME define [#1267]( https://github.com/sofa-framework/sofa/pull/1267 ); - [All] Remove some compilation warning. [#1343]( https://github.com/sofa-framework/sofa/pull/1343 ); - [All] Replace usage of sleep functions for the std one [#1394]( https://github.com/sofa-framework/sofa/pull/1394 ); - [All] Uniform use of M_PI [#1264]( https://github.com/sofa-framework/sofa/pull/1264 ); - [All] Update header for cleaner future management [#1375]( https://github.com/sofa-framework/sofa/pull/1375 ); - [All] replace all serr by msg_error/msg_warning [#1236]( https://github.com/sofa-framework/sofa/pull/1236 ); - [SofaConstraint] Set the use of integration factor true by default [#1369]( https://github.com/sofa-framework/sofa/pull/1369 ); - **[SofaDefaultType]** BoundingBox : Remove annoying warnings [#1425]( https://github.com/sofa-framework/sofa/pull/1425 ); - [SofaGeneralEngine] Fix draw of the sphere in SphereROI [#1318]( https://github.com/sofa-framework/sofa/pull/1318 ); - [SofaGeneralEngine] Remove remaining BoxROI after SofaEngine move [#1333]( https://github.com/sofa-framework/sofa/pull/1333 ); - [SofaGeneralLoader] Allow flip normals in Gmsh and STL loaders [#1418]( https://github.com/sofa-framework/sofa/pull/1418 ); - [SofaGui] Pass QDocBrowser as an option [#1315]( https://github.com/sofa-framework/sofa/pull/1315 ); - **[SofaKernel]** Add Data bool d_checkTopology in Topology container to replace the use of CHECK_TOPOLOGY macro [#1351]( https://github.com/sofa-framework/sofa/pull/1351 ); - **[SofaKernel]** Clean occurrences of CHECK_TOPOLOGY macro in code [#1352]( https://github.com/sofa-framework/sofa/pull/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:239989,integrat,integration,239989,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Integrability,ramework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super init [#3884](https://github.com/sofa-framework/sofa/pull/3884); - [examples] Fix unstable scene constant,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:40020,depend,dependency,40020,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"rceField.cpp; OpenCLUniformMass.cpp; initSofaOpenCL.cpp; myopencl.cpp; oclRadixSort/RadixSort.cpp; oclRadixSort/Scan.cpp; tools/showvector.cpp; tools/top.cpp; ). set(OTHER_FILES; kernels/OpenCLFixedConstraint.cl; kernels/OpenCLGenericParticleForceField.cl; kernels/OpenCLGenericParticleForceField_Plane.macrocl; kernels/OpenCLGenericParticleForceField_Sphere.macrocl; kernels/OpenCLMechanicalObject.cl; kernels/OpenCLMemoryManager.cl; kernels/OpenCLSpatialGridForce.cl; kernels/OpenCLSpringForceField.cl; kernels/OpenCLUniformMass.cl; kernels/oclRadixSort/RadixSort.cl; kernels/oclRadixSort/Scan_b.cl; ). if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; OpenCLSPHFluidForceField.h; OpenCLSPHFluidForceField.inl; OpenCLSpatialGridContainer.h; OpenCLSpatialGridContainer.inl); list(APPEND SOURCE_FILES; OpenCLSPHFluidForceField.cpp; OpenCLSpatialGridContainer.cpp); list(APPEND OTHER_FILES; kernels/OpenCLSPHFluidForceField.cl; kernels/OpenCLSpatialGridContainer.cl; ); message(STATUS ""SofaOpenCL: optional dependency to SofaSphFluid found. Activing <OpenCLSPHFluidForceField>.""); else(); message(STATUS ""SofaOpenCL: optional dependency to SofaSphFluid not found. De-activing <OpenCLSPHFluidForceField>""); endif(). message(WARNING ""SofaOpenCL: TODO: don't use absolute path (SOFA_SRC_DIR)""). include_directories(${OPENCL_INCLUDE_DIRS}); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${OTHER_FILES}); add_definitions(""-DSOFA_SRC_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../../..\""""). add_definitions(""-DSOFA_BUILD_GPU_OPENCL""); target_link_libraries(${PROJECT_NAME} ${OPENCL_LIBRARIES} Sofa.Helper SofaEngine SofaUserInteraction csparse SofaGeneralObjectInteraction SofaGeneralDeformable Sofa.GL) # taucs taucs_mt system-taucs); if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid) # taucs taucs_mt system-taucs); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAOPENCL_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt:2364,message,message,2364,applications/plugins/SofaOpenCL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"relasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in B",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:309616,message,message,309616,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"rial you; add to a covered work, you may (if authorized by the copyright holders of; that material) supplement the terms of this License with terms:. a) Disclaiming warranty or limiting liability differently from the; terms of sections 15 and 16 of this License; or. b) Requiring preservation of specified reasonable legal notices or; author attributions in that material or in the Appropriate Legal; Notices displayed by works containing it; or. c) Prohibiting misrepresentation of the origin of that material, or; requiring that modified versions of such material be marked in; reasonable ways as different from the original version; or. d) Limiting the use for publicity purposes of names of licensors or; authors of the material; or. e) Declining to grant rights under trademark law for use of some; trade names, trademarks, or service marks; or. f) Requiring indemnification of licensors and authors of that; material by anyone who conveys the material (or modified versions of; it) with contractual assumptions of liability to the recipient, for; any liability that these contractual assumptions directly impose on; those licensors and authors. All other non-permissive additional terms are considered ""further; restrictions"" within the meaning of section 10. If the Program as you; received it, or any part of it, contains a notice stating that it is; governed by this License along with a term that is a further; restriction, you may remove that term. If a license document contains; a further restriction but permits relicensing or conveying under this; License, you may add to a covered work material governed by the terms; of that license document, provided that the further restriction does; not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you; must place, in the relevant source files, a statement of the; additional terms that apply to those files, or a notice indicating; where to find the applicable terms. Additional terms, ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:38437,contract,contractual,38437,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,2,['contract'],['contractual']
Integrability,"rk/sofa/pull/4351); - [LinearAlgebra] constexpr if statement when possible [#4352](https://github.com/sofa-framework/sofa/pull/4352); - [LinearAlgebra] Factorize template specializations of filterValues in CRS matrix [#4355](https://github.com/sofa-framework/sofa/pull/4355); - [CImgPlugin] Add fetchable CImg and remove embedded cimg [#4357](https://github.com/sofa-framework/sofa/pull/4357); - [Mapping.Linear] Replace a few beginEdit by accessors [#4363](https://github.com/sofa-framework/sofa/pull/4363); - [SofaSimpleGUI] Fix calls to deprecated functions [#4390](https://github.com/sofa-framework/sofa/pull/4390); - [Type] Remove test of a deprecated constructor [#4391](https://github.com/sofa-framework/sofa/pull/4391); - [Core] Remove pragma directive in cpp file [#4393](https://github.com/sofa-framework/sofa/pull/4393); - [All] Rename license file into LICENSE-LGPL.md to follow github repository rules [#4410](https://github.com/sofa-framework/sofa/pull/4410); - [SofaCUDA] Generalize the use of MessageDispatcher in SofaCUDA [#4430](https://github.com/sofa-framework/sofa/pull/4430); - [Core] Add documentation for the method BaseMapping::buildGeometricStiffnessMatrix [#4431](https://github.com/sofa-framework/sofa/pull/4431); - [LinearAlgebra] Factorize value filtering [#4442](https://github.com/sofa-framework/sofa/pull/4442); - [GitHub] Clean existing actions [#4444](https://github.com/sofa-framework/sofa/pull/4444); - [SofaCUDA] Initialize module from another module [#4453](https://github.com/sofa-framework/sofa/pull/4453); - [SofaDistanceGrid] remove shadow variable [#4455](https://github.com/sofa-framework/sofa/pull/4455); - [Defaulttype, LinearAlgera] Fix warnings [#4465](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:13488,Message,MessageDispatcher,13488,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Message'],['MessageDispatcher']
Integrability,"ry(collection modules/SofaGeneralTopology SofaGeneralTopology ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaTopologyMapping SofaTopologyMapping ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaUserInteraction SofaUserInteraction ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaConstraint SofaConstraint ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaGeneralLoader SofaGeneralLoader ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaExporter SofaExporter ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). sofa_add_subdirectory(collection modules/SofaSparseSolver SofaSparseSolver ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF) #; sofa_add_subdirectory(collection modules/SofaPreconditioner SofaPreconditioner ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF) # depends on SofaSparseSolver. sofa_add_subdirectory(collection modules/SofaDenseSolver SofaDenseSolver ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). sofa_add_subdirectory(collection modules/SofaNonUniformFem SofaNonUniformFem ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). sofa_find_package(Sofa.GL QUIET); sofa_add_subdirectory(collection modules/SofaOpenglVisual SofaOpenglVisual ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS AND Sofa.GL_FOUND"" VALUE_IF_HIDDEN OFF). ## Misc; sofa_add_subdirectory(collection modules/SofaMiscTopology SofaMiscTopology ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscExtra SofaMiscExtra ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscForceField SofaMiscForceF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/CMakeLists.txt:4262,depend,depends,4262,applications/collections/deprecated/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/CMakeLists.txt,1,['depend'],['depends']
Integrability,"ry(plugin CImgPlugin CImgPlugin) # ON by default and first as it is used by other plugins.; sofa_add_subdirectory(plugin ArticulatedSystemPlugin ArticulatedSystemPlugin ON); sofa_add_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaH",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1398,Depend,Depends,1398,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['Depend'],['Depends']
Integrability,"s License. Also, you must do one; of these things:. a) Accompany the work with the complete corresponding; machine-readable source code for the Library including whatever; changes were used in the work (which must be distributed under; Sections 1 and 2 above); and, if the work is an executable linked; with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in ei",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:15930,interface,interface-compatible,15930,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['interface'],['interface-compatible']
Integrability,"s [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-framework/sofa/pull/4203); - [LinearSolver] Remove CSparse-based linear solvers [#4258](https://github.com/sofa-framework/sofa/pull/4258); - [Common] Add message to make the fetch mechanism less hidden [#4310](https://github.com/sofa-framework/sofa/pull/4310); - [Simulation.Core] Deprecate LocalStorage feature [#4327](https://github.com/sofa-framework/sofa/pull/4327). ## [v23.06.00]( https://github.com/sofa-framework/sofa/tree/v23.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.12..v23.06 ). ### Highlighted contributions. - [LinearSystem] Refactor matrix assembly [#2777](https://github.com/sofa-framework/sofa/pull/2777) ; - [Core] Introduce parallel for each [#3548](https://github.com/sofa-framework/sofa/pull/3548) ; - [MultiThreading] Introduce ParallelTetrahedronFEMForceField [#3552](https://github.com/sofa-framework/sofa/pull/3552) ; - [examples] Apply Sofa/Component structure for all examples [#3588](https://github.com/sofa-framework/sofa/pull/3588) . ### Breaking. **Architecture**; - [all] Lifecycle v23.06 1/n [#3634](https://github.com/sofa-framework/sofa/pull/3634) ; - [all] Lifecycle v23.06 2/n [#3649](https://gith",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:49821,message,message,49821,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,s [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaValidation]; - move code to set default folder for monitor to init function [#500]( https://github.com/sofa-framework/sofa/pull/500 ). **Plugins / Projects**; - [All]; - FIX: compilation warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [CGALPlugin]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [image]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [Registration]; - Remove deprecated scene [#331]( https://github.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:322549,message,message,322549,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,s is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/sofa/pull/1000 ); - [SofaCUDA] Fix windows compilation. [#966]( https://github.com/sofa-framework/sofa/pull/966 ); - [SofaPython] FIX allow the derivTypeFromParentValue to work with node. [#984]( https://github.com/sofa-framework/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269430,Message,Message,269430,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Message'],['Message']
Integrability,s.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5280,Message,MessageDispatcher,5280,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['MessageDispatcher']
Integrability,"s: people reviewing and merging the pull-requests. This group is validated by the Scientific and Technical Committee (STC).; - SOFA Consortium: research centers and companies willing to share the cost of development and maintenance of SOFA, hosted by Inria.; - SOFA Consortium Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understanding SOFA, announcements), create a topic on [the SOFA GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) and benefit from the feedback of the community. When creating a new topic, pay attention to some tips:. - **Check existing topics** using the Search bar. Your question may have been answered already.; - **Be clear** about what your probl",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:1364,contract,contract,1364,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['contract'],['contract']
Integrability,s://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/sofa/pull/2858 ); - [LMConstraint] Remove LMConstraint folder as it is an external plugin [#2828]( https://github.com/sofa-framework/sofa/pull/2828 ); - [LinearSolver.Direct] Minor clean up in SparseCholeskySolver [#2881]( https://github.com/sofa-framework/sofa/pull/2881 ); - [LinearSolver.Direct] Move advice message into parse method [#3029]( https://github.com/sofa-framework/sofa/pull/3029 ); - [LinearSolver.Iterative] Clean floating point types in CG [#2808]( https://github.com/sofa-framework/sofa/pull/2808 ); - [LinearSolver] Remove explicit template instantiation for floating point types different from SReal [#2939]( https://github.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com/sofa-framework/sofa/pull/2969 ); - [Mapping.Linear] Fix some warnings [#2933]( https://github.com/sofa-framework/sofa/pull/2933 ); - [Mass] fix some warnings [#2931]( https://github.com/sofa-framework/sofa/pull/2931 ); - [Mass] Make warnings become info_msg in masses [#3116]( https://github.com/sofa-framework/sofa/pull/3116 ) ; - [Metis] Add header files to the project [#2581]( https://github.com/sofa-framework/sofa/pull/2581 ); - [Metis] Disable compilation warnings [#2874]( https://github.com/sofa-framework/sofa/pull/2874 ); - [S.C.LinearSol,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:122838,message,message,122838,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,s://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateInternal by callback: ConstantFF [#3924](https://github.com/sofa-framework/sofa/pull/3924); - [FEM.Elastic] Implement buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all] Remove few lines of code that do nothing [#3946](https://github.com/sofa-framework/sofa/pull/3946); - [all] Implement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:42586,message,message,42586,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"section REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.Engine.Select REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED); sofa_find_package(Sofa.Component.MechanicalLoad REQUIRED). sofa_find_package(Sofa.GUI QUIET); if(Sofa.GUI_FOUND); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaMouseInteraction.cpp); endif(). sofa_find_package(Sofa.GUI.Qt QUIET); if(Sofa.GUI.Qt_FOUND); list(APPEND HEADER_FILES sofa/gpu/gui/CudaDataWidget.h); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaDataWidget.cpp); endif(). find_package(SofaDistanceGrid QUIET); if(SofaDistanceGrid_FOUND); sofa_find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); message(STATUS ""SofaCUDA: MiniFlowVR enabled.""); else(); message(STATUS ""SofaCUDA: MiniFlowVR was not enabled, therefore some feature of CudaDistanceGridCollisionModel will not be compiled.""); endif(). list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaDistanceGridCollisionModel.h; sofa/gpu/cuda/CudaContactMapper.h; sofa/gpu/cuda/CudaCollisionDetection.h). list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaDistanceGridCollisionModel.cpp; sofa/gpu/cuda/CudaCollisionDistanceGrid.cpp; sofa/gpu/cuda/CudaCollisionDetection.cpp). list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaContactMapper.cu; sofa/gpu/cuda/CudaCollisionDetection.cu); else(); message(STATUS ""SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.""); endif(). find_package(SofaSphFluid QUIET); if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaParticleSource.h; sofa/gpu/cuda/CudaParticleSource.inl; sofa/gpu/cuda/CudaSPHFluidForceField.h; sofa/gpu/cuda/CudaSPHFluidForceField.inl; sofa/gpu/cuda/CudaParticlesRepulsionForceField.h; sofa/gpu/cuda/CudaParticlesRepulsionForceField.inl; sofa/gpu/cud",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:15033,message,message,15033,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( https://github.com/sofa-framework/sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:207530,message,messages,207530,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,sofa/pull/2993 ). **Plugins / Projects**; - [runSofa] Add a button and a mechanism to activate the scenegraph updates [#3026]( https://github.com/sofa-framework/sofa/pull/3026 ); - [runSofa] Remove not working feature in QSofaListView. [#3025]( https://github.com/sofa-framework/sofa/pull/3025 ). **Examples / Scenes**. **Scripts / Tools**. ### Improvements. **Project**; - [Contributing] Update info regarding GitHub Discussions [#2741]( https://github.com/sofa-framework/sofa/pull/2741 ); - [Project] Add the graph illustrating the workflow of a PR review in CONTRIBUTING [#3051]( https://github.com/sofa-framework/sofa/pull/3051 ). **Architecture**; - [collections] Install collections in their own directory [#3196]( https://github.com/sofa-framework/sofa/pull/3196 ). **Modules**; - [Constraint.Lagrangian.Correction] Searching for Direct Linear Solver in LinearSolverConstraintCorrection [#3055]( https://github.com/sofa-framework/sofa/pull/3055 ) ; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GUI.Qt] Save scene graph lock state persistently [#3119]( https://github.com/sofa-framework/sofa/pull/3119 ) ; - [GUI] Completing text description for mouse interaction with springs [#3122]( https://github.com/sofa-framework/sofa/pull/3122 ); - [HyperElastic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https://github.com/sofa-framework/sofa/pull/2838 ); - [HyperElastic] Introduce example scene for StandardTetrahedralFEMForceField [#2857]( https://github.com/sofa-framework/sofa/pull/2857 ); - [LinearSolver.Direct] LU solver can be templated to CRSMat3x3 [#2862]( https://github.com/sofa-framework/sofa/pull/2862 ); - [LinearSolver.Direct] Unit tests around SparseLDLSolver [#3050]( https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:98335,message,messages,98335,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK_OPTIONS_RELEASE """"). ## Link-time optimization; if(NOT IPO_CHECK_DONE); include(CheckIPOSupported); check_ipo_supported(RESULT IS_IPO_SUPPORTED OUTPUT IPO_ERROR); set(IPO_CHECK_DONE ON CACHE INTERNAL ""IPO check has been done"" FORCE); if (IS_IPO_SUPPORTED); set(IPO_SUPPORTED ON CACHE INTERNAL ""IPO can be activated"" FORCE); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(); endif(). if (IPO_SUPPORTED); # Focus on max speed with link-time optimization; option(SOFA_ENABLE_LINK_TIME_OPTIMIZATION ""Enable interprocedural optimization"" OFF); if (SOFA_ENABLE_LINK_TIME_OPTIMIZATION); set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE PARENT_SCOPE); endif(); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(). ## GCC-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU""); ## Find out the version of g++ (and save it in GCXX_VERSION); if(CMAKE_CXX_COMPILER_ARG1) # CXX=""ccache g++""; string(STRIP ${CMAKE_CXX_COMPILER_ARG1} CMAKE_CXX_COMPILER_ARG1_stripped); execute_process(COMMAND ${CMAKE_CXX_COMPILER_ARG1_stripped} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); else(); execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); endif().",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:5448,message,message,5448,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"sponse.Contact REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.Engine.Select REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED); sofa_find_package(Sofa.Component.MechanicalLoad REQUIRED). sofa_find_package(Sofa.GUI QUIET); if(Sofa.GUI_FOUND); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaMouseInteraction.cpp); endif(). sofa_find_package(Sofa.GUI.Qt QUIET); if(Sofa.GUI.Qt_FOUND); list(APPEND HEADER_FILES sofa/gpu/gui/CudaDataWidget.h); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaDataWidget.cpp); endif(). find_package(SofaDistanceGrid QUIET); if(SofaDistanceGrid_FOUND); sofa_find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); message(STATUS ""SofaCUDA: MiniFlowVR enabled.""); else(); message(STATUS ""SofaCUDA: MiniFlowVR was not enabled, therefore some feature of CudaDistanceGridCollisionModel will not be compiled.""); endif(). list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaDistanceGridCollisionModel.h; sofa/gpu/cuda/CudaContactMapper.h; sofa/gpu/cuda/CudaCollisionDetection.h). list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaDistanceGridCollisionModel.cpp; sofa/gpu/cuda/CudaCollisionDistanceGrid.cpp; sofa/gpu/cuda/CudaCollisionDetection.cpp). list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaContactMapper.cu; sofa/gpu/cuda/CudaCollisionDetection.cu); else(); message(STATUS ""SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.""); endif(). find_package(SofaSphFluid QUIET); if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaParticleSource.h; sofa/gpu/cuda/CudaParticleSource.inl; sofa/gpu/cuda/CudaSPHFluidForceField.h;",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:14976,message,message,14976,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,"ssage(STATUS ""SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.""); endif(). find_package(SofaSphFluid QUIET); if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaParticleSource.h; sofa/gpu/cuda/CudaParticleSource.inl; sofa/gpu/cuda/CudaSPHFluidForceField.h; sofa/gpu/cuda/CudaSPHFluidForceField.inl; sofa/gpu/cuda/CudaParticlesRepulsionForceField.h; sofa/gpu/cuda/CudaParticlesRepulsionForceField.inl; sofa/gpu/cuda/CudaSpatialGridContainer.h; sofa/gpu/cuda/CudaSpatialGridContainer.inl; ); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaParticleSource.cpp; sofa/gpu/cuda/CudaSPHFluidForceField.cpp; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cpp; sofa/gpu/cuda/CudaSpatialGridContainer.cpp; ); list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaParticleSource.cu; sofa/gpu/cuda/CudaSPHFluidForceField.cu; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cu; sofa/gpu/cuda/CudaSpatialGridContainer.cu; ); message(STATUS ""SofaCUDA: optional dependency to SofaSphFluid found. ""); else(); message(STATUS ""SofaCUDA: optional dependency SofaSphFluid not found. ""); endif(). sofa_find_package(SofaValidation QUIET); if(SofaValidation_FOUND); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaExtraMonitor.cpp; ); message(STATUS ""SofaCUDA: found SofaValidation, enabling CudaExtraMonitor (Warning: this component is being deprecated). ""); endif(). option(SOFACUDA_VERBOSE_PTXAS ""???"" OFF); if(SOFACUDA_VERBOSE_PTXAS); set(VERBOSE_PTXAS --ptxas-options=-v); endif(). option(SOFACUDA_CUBLAS ""Activate cublas support in CUDA (requires SOFACUDA_DOUBLE)."" OFF); if(SOFACUDA_CUBLAS); set(SOFA_GPU_CUBLAS 1) # #cmakedefine; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(CUDASparse REQUIRED); endif(). option(SOFACUDA_CUDPP ""Activate CUDPP (for RadixSort)."" OFF); if(SOFACUDA_CUDPP); set(SOFA_GPU_CUDPP 1) # #cmakedefine; endif(). # Note: THRUST is included in CUDA SDK 4.0+, it is recommended to use it if available; option(SOFAC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:16576,message,message,16576,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"t(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.rc""); endif(). if(APPLE AND SOFA_BUILD_APP_BUNDLE); add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.plist""); else(); add_executable(${PROJECT_NAME} ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); endif(). target_compile_definitions(${PROJECT_NAME} PUBLIC ""CONFIG_PLUGIN_FILENAME=${_configPluginFileName}""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""DEFAULT_CONFIG_PLUGIN_FILENAME=${_defaultConfigPluginFileName}""). target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Common); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Batch); target_link_libraries(${PROJECT_NAME} SceneChecking). if(Sofa.Component.Playback_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.Component.Playback); else(); message(WARNING ""runSofa: Sofa.Component.Playback not found, disabling validation feature.""); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(runSofa_test); endif(). # Create build and install versions of .ini file for resources finding; set(RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""); configure_file(""${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in"" ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); set(RESOURCES_DIR ""../share/sofa/gui/runSofa""); configure_file(""${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). install(DIRECTORY ""resources/"" DESTINATION ""share/sofa/gui/runSofa"" COMPONENT resources). sofa_add_targets_to_package(; PACKAGE_NAME Sofa.GUI; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""${CMAKE_CURRENT_SOURCE_DIR}""; INCLUDE_INSTALL_DIR ""Sofa.GUI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt:2649,message,message,2649,applications/projects/runSofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt,1,['message'],['message']
Integrability,"te copyright notice, and (2); tells the user that there is no warranty for the work (except to the; extent that warranties are provided), that licensees may convey the; work under this License, and how to view a copy of this License. If; the interface presents a list of user commands or options, such as a; menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work; for making modifications to it. ""Object code"" means any non-source; form of a work. A ""Standard Interface"" means an interface that either is an official; standard defined by a recognized standards body, or, in the case of; interfaces specified for a particular programming language, one that; is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work, including scripts to; control those activities. However, it does not include the work's; System Libraries, or general-purpose tools or generally available free; programs which are used unmodified in performing those activities but; which are not part of the work. For example, Corresponding Source; includes interface definition files ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:25100,Interface,Interface,25100,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['Interface'],['Interface']
Integrability,tem/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAc,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3381,Message,MessageFormatter,3381,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['MessageFormatter']
Integrability,"the Paste button, found to the right of the Copy button. Right click the original OglModel, and select Delete.; Now to make the link between the deformation of the simulated particles and a given visual model, we need a mapping. As we only need to update the positions of the visual model at each time step, we will use a Visual Mapping: BarycentricMapping.; Here we really need to pay attention to the template used for this component.; Open the OglModel properties and go to the Infos tab. ; Under instance, you can see that the Template is ExtVec3f. This means we need our BarycentricMapping to map from Vec3d (the template used by the MechanicalObject) to ExtVec3f.; Find the BarycentricMapping component using the Filter. Be sure that the template information to the right reads Vec3d, ExtVec3f. If it doesn't, choose that combination from the drop down menu. Add this component to the VisualModel node. ; Edit the properties of the BarycentricMapping, and open the Property 2/2 tab. Change Input object to map from @ to ""@.."".; This refers to the MechanicalObject placed in the node above (Object node); Change Output object to map to ""@Objective"".; This refers to the OglModel that we named Objective earlier; Result; Run in SOFA and animate; Now not only are the particles of the grid deformed, but this deformation is propagated to the visual model, which remains embedded inside the grid at all times.; Related; As you may have noticed, the visual model is fully independent from the simulated model: We used the same model to create the deformable grid as we did to create the visual model, but nothing stops you from using a different model. Change the visual model or the model used in the SparseGridTopology and see the effect.; To understand how the barycentric mapping works, display the Visual Mappings debug information in the SOFA main application. You will see how each point of the visual model depends on some of the points of the mechanical model.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/4_FullObject.html:2552,depend,depends,2552,examples/Tutorials/StepByStep/FullObject/4_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/4_FullObject.html,1,['depend'],['depends']
Integrability,"the section as a whole is intended to apply in other; circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system, which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Program under this License; may add an explicit geographical distribution limitation excluding; those countries, so that distribution is permitted only in or among; countries not thus excluded. In such case, this License incorporates; the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions; of the General Public License from time to time. Such new versions will; be similar in spirit to the present version, but may differ in detail to; address new problems or concerns. Each version is given a distinguishing version number. If the Program; specifies a version number of this License which applies to it and ""any; later version"", you have the option of following the terms and conditions; either of that version or of any later version published by the Free; Software Foundation. If the Program does not specify a version number of; this License, you may choose any version ever published by the Free Software; Foundation. 10. If y",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:12233,interface,interfaces,12233,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['interface'],['interfaces']
Integrability,"thub.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/304 ); - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - print cleaning + SofaPython quaternion dot product [#404]( https://github.com/sofa-framework/sofa/pull/404 ); - [runSofa]; - Clean : remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324468,message,message,324468,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using help",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359422,message,message,359422,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,ub.com/sofa-framework/sofa/pull/1941 ); - **[Sofa.GL]** Remove warnings from deprecated headers [#2045]( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:198982,depend,dependency,198982,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"ub.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.12.00]( https://github.com/sofa-framework/sofa/tree/v21.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:134229,depend,dependencies,134229,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1659,depend,dependencies,1659,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['depend'],['dependencies']
Integrability,"warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https:",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:325470,depend,dependency,325470,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in Narr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76843,message,messageHandler,76843,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messageHandler']
Integrability,"wn above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:2311,depend,depends,2311,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['depend'],['depends']
Integrability,"x toolTip for button reload [#3199]( https://github.com/sofa-framework/sofa/pull/3199 ); - [Sofa.LinearAlgebra] Fix SOFA_OPENMP [#2669]( https://github.com/sofa-framework/sofa/pull/2669 ); - [Sofa.LinearAlgebra] Fix compilation warnings [#2627]( https://github.com/sofa-framework/sofa/pull/2627 ); - [Sofa.Simulation.Graph] Fix broken context management [#2964]( https://github.com/sofa-framework/sofa/pull/2964 ); - [Sofa.Type] Change (?) default constructor for fixed_array [#2764]( https://github.com/sofa-framework/sofa/pull/2764 ); - [Sofa.Type] Mat: Correct tensorProduct [#2787]( https://github.com/sofa-framework/sofa/pull/2787 ); - [Sofa.Type] Fix cmake typo, which was disabling tests [#3129]( https://github.com/sofa-framework/sofa/pull/3129 ) ; - [Sofa.Visual] Revert PR #2856 [#3073]( https://github.com/sofa-framework/sofa/pull/3073 ); - [SofaBaseCollision] Fixed invalid vector bug in ContactListener [#2676]( https://github.com/sofa-framework/sofa/pull/2676 ); - [SofaBaseLinearSolver] Fix message in MatrixLinearSolver [#2781]( https://github.com/sofa-framework/sofa/pull/2781 ); - [SofaBaseTopology][SofaDeformable][SofaMiscTopology] Proper topological changes in SpringForceField [#2653]( https://github.com/sofa-framework/sofa/pull/2653 ); - [SofaBoundaryCondition] Remove duplicated code [#2830]( https://github.com/sofa-framework/sofa/pull/2830 ); - [SofaCore.Topology] Depreciate method linked to topologyHandler create/destroy function [#2869]( https://github.com/sofa-framework/sofa/pull/2869 ); - [SofaCore] Fix invalid include in MappingHelper [#2632]( https://github.com/sofa-framework/sofa/pull/2632 ); - [SofaCore] Inf fix topo subset indices [#2870]( https://github.com/sofa-framework/sofa/pull/2870 ); - [SofaCore] Make inheritance virtual [#2594]( https://github.com/sofa-framework/sofa/pull/2594 ); - [SofaCore] Restore default component naming for python [#2801]( https://github.com/sofa-framework/sofa/pull/2801 ); - [SofaCore] Restore xml and python different nam",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:110813,message,message,110813,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"ze the template, you can:. Copy the SofaHAPI directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh ; to replace SofaHAPI; with MyPlugin in all; the file; names and their content:; utils/changeClassName.sh SofaHAPI MyPlugin; cd examples; ../utils/changeClassName.sh SofaHAPI MyPlugin; cd ../doc/; ../utils/changeClassName.sh SofaHAPI MyPlugin. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is SofaHAPI.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:1370,depend,depends,1370,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,2,['depend'],"['dependencies', 'depends']"
Integrability,"{SOFA_GUI_QT_TARGETS} Qt5::Core Qt5::Gui Qt5::OpenGL); else(); message(SEND_ERROR ""${PROJECT_NAME}: Could not find either Qt5 or Qt6.""); endif(). if (Qt5Core_FOUND); # Profiling; sofa_find_package(Qt5 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt5Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt5Charts not found. No chart nor Profile will be compiled""); endif(). # QDocBrowser; find_package(Qt5 COMPONENTS WebEngine QUIET) # if found, then QDocBrowser will be ON by default; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt5WebEngine_FOUND}). if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); sofa_find_package(Qt5 COMPONENTS WebEngine WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::WebEngine Qt5::WebEngineWidgets); endif(); elseif (Qt6Core_FOUND). # Profiling; sofa_find_package(Qt6 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt6Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt6 Charts not found. No chart nor Profile will be compiled""); endif(). # # QDocBrowser; find_package(Qt6 COMPONENTS WebEngineCore QUIET) # if found, then QDocBrowser will be ON by default; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt6WebEngineCore_FOUND}); if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); # WebEngineCore needs Positioning WebChannel at cmake configure step (?); sofa_find_package(Qt6 COMPONENTS Positioning WebChannel WebEngineCore WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::WebEngineCore Qt::WebEngineWidgets); endif(); endif(). find_package(Sofa.GL QUIET). # QtViewer and QGLViewer; if(Sofa.GL_FOUND); # QtViewer; option(SOFA_GUI_QT_ENABLE_QTVIEWER ""Compile the QtViewer for the Qt GUI"" ON). # QGLViewer; option(SOFA_GUI_QT_ENABLE_QGLVIEWER ""Compile the QGLViewer for the Qt GUI"" ON). if(SOFA_GUI_QT_ENABLE_QGLV",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:1890,message,message,1890,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['message'],['message']
Integrability,}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMA,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5247,Message,Message,5247,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['Message']
Integrability,}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2997,Message,MessageDispatcher,2997,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['MessageDispatcher']
Modifiability, ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://github.com/sofa-framework/sofa/pull/1201 ); - [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [SofaTest] CLEAN msg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:256436,Plugin,Plugins,256436,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability, ); - [SofaCUDA] Remove calls to __umul24 on device [#2715]( https://github.com/sofa-framework/sofa/pull/2715 ); - [SofaCUDA] Resurrect CudaTetrahedronTLEDForceField [#2865]( https://github.com/sofa-framework/sofa/pull/2865 ); - [SofaCUDA] harmless cleaning of namespace declaration and header inclusion [#2674]( https://github.com/sofa-framework/sofa/pull/2674 ); - [SofaMatrix] Reduce dependency [#2768]( https://github.com/sofa-framework/sofa/pull/2768 ); - [SofaMatrix][SofaBaseLinearSolver] Move GlobalSystemMatrixExporter [#2545]( https://github.com/sofa-framework/sofa/pull/2545 ); - [SofaPhysicsAPI] Clean CMake file and compile without compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:132876,variab,variable,132876,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability, ); - [SofaGeneralEngine] Improve mesh barycentric mapper engine [#1487]( https://github.com/sofa-framework/sofa/pull/1487 ); - [SofaGeneralEngine] Remove useless create() function in some components [#1622]( https://github.com/sofa-framework/sofa/pull/1622 ); - [SofaGuiQt] Move libQGLViewer lib into its module [#1617]( https://github.com/sofa-framework/sofa/pull/1617 ); - [SofaHaptics] Small fix on LCPForceFeedback haptic rendering [#1537]( https://github.com/sofa-framework/sofa/pull/1537 ); - **[SofaHelper]** DrawTool uses RGBAColor now (instead of Vec4f) [#1626]( https://github.com/sofa-framework/sofa/pull/1626 ); - **[SofaHelper]** Remove OpenGL dependency in vector_device [#1646]( https://github.com/sofa-framework/sofa/pull/1646 ); - **[SofaKernel]** Clean namespace BarycentricMapper [#1571]( https://github.com/sofa-framework/sofa/pull/1571 ); - **[SofaKernel]** Factorize some code for maintenance [#1569]( https://github.com/sofa-framework/sofa/pull/1569 ); - **[SofaKernel]** Refactor the FileRepository constructors [#1610]( https://github.com/sofa-framework/sofa/pull/1610 ); - **[SofaKernel]** Remove core::Plugin/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:227732,Refactor,Refactor,227732,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability, - [All] Factorize and rename TopologyObjectType into TopologyElementType [#1593]( https://github.com/sofa-framework/sofa/pull/1593 ); - [All] Remove topologyAlgorithms classes [#1546]( https://github.com/sofa-framework/sofa/pull/1546 ); - [All] Standardize index type for Vector/Matrix templates [#1453]( https://github.com/sofa-framework/sofa/pull/1453 ); - [All] Uniform size type [#1515]( https://github.com/sofa-framework/sofa/pull/1515 ); - **[SofaKernel]** Refactor BaseData to use DataLink [#1491]( https://github.com/sofa-framework/sofa/pull/1491 ); - **[SofaKernel]** ♻️ FIX & CLEANUP BoxROI [#1482]( https://github.com/sofa-framework/sofa/pull/1482 ); - **[SofaKernel]**[SofaCore][SofaLoader][SofaGeneralLoader] SOFA with callbacks [#1408]( https://github.com/sofa-framework/sofa/pull/1408 ). **Plugins / Projects**; - [ColladaSceneLoader][SofaAssimp] Move ColladaSceneLoader plugin content into SofaAssimp plugin [#1360]( https://github.com/sofa-framework/sofa/pull/1360 ); - [plugins] Remove plugins to be deleted [#1439]( https://github.com/sofa-framework/sofa/pull/1439 ). ### Improvements; **Architecture**; - [All] Accelerating CMake generation [#1464]( https://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framework/sofa/pull/1512 ); - [SofaBaseCollision] Add option to use of normal orientation in triangle and self-colliding cube [#1559]( https://github.com/sofa-framework/sofa/pull/1559 ); - **[SofaCore]** Add virtual getPathName function in Base [#1455]( https://github.com/sofa-framework/sofa/pull/1455 ); - [SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API [#1495]( https://github.com/sofa-framework/sofa/pull/1495 ); - [SofaGeneralLoader] allow ReadState at init [#1654]( https://github.com/sofa-frame,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:216820,plugin,plugins,216820,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugins']
Modifiability," - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https://github.com/sofa-framework/sofa/pull/3665) ; - [Helper] Improve OptionsGroup [#3737](https://github.com/sofa-framework/sofa/pull/3737) ; - [Simulation] Suggest required plugin in the syntax of the scene loader [#3799](https://github.com/sofa-framework/sofa/pull/3799) . **Modules**; - [Mapping] Adds template to RigidMapping [#3680](https://github.com/sofa-framework/sofa/pull/3680) ; - [Analyze] Raw pointers to Links [#3683](https://github.com/sofa-framework/sofa/pull/3683) ; - [MechanicalLoad] Stupid check for consistency between state and topology [#3692](https://github.com/sofa-framework/sofa/pull/3692) ; - [Mapping.NonLinear] Geometric stiffness method in an OptionsGroup [#3740](https://github.com/sofa-framework/sofa/pull/3740) ; - [Core.Visual, Component.Visual] Create VisualState (formerly Vec3State) [#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] RigidCoord/Deriv become iterable [#3536](https://github.com/sofa-framework/sofa/pull/3536) ; - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulatio",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:52003,Plugin,Plugins,52003,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability, - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72839,Portab,Portable,72839,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Portab'],['Portable']
Modifiability," - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plugins [#1059]( https://github.com/sofa-framework/sofa/pull/1059 ); - [CMake] FIX: exporting options in SofaFrameworkConfig.cmake [#927]( https://github.com/sofa-framework/sofa/pull/927 ); - [CMake] FIX: wrong paths of installed headers in SofaBaseMechanics [#887]( https://github.com/sofa-framework/sofa/pull/887 ); - [CMake] FIX build/install plugins directory [#959]( https://github.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:262986,plugin,plugins,262986,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability," - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); - [All] Merge TopologySubsetData and TopologySparseData [#2114]( https://github.com/sofa-framework/sofa/pull/2114 ); - [All] Merge branch topologyChanges_PoC introducing topological changes callbacks [#2228]( https://github.com/sofa-framework/sofa/pull/2228 ); - [All] Remove ForceMask [#2316]( https://github.com/sofa-framework/sofa/pull/2316 ); - [All] Update collision response names [#2522]( https://github.com/sofa-framework/sofa/pull/2522 ); - [Sofa.BaseTopology] Remove 1D template for 2D/3D primitives in topology algorit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:135563,Plugin,Plugins,135563,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Flexible', 'Plugin']","['Flexible', 'Plugins']"
Modifiability," < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real E",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:5009,variab,variables,5009,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['variab'],['variables']
Modifiability," CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull/3624) ; - [Scenes] Use ""floating-point type""-independent templates [#3635](https://github.com/sofa-framework/sofa/pull/3635) ; - [examples] Apply rest position in mappings [#3757](https://github.com/sofa-framework/sofa/pull/3757) . ### Refactoring. **Modules**; - [Collision.Detection] Rename DefaultPipeline into CollisionPipeline [#3590](https://github.com/sofa-framework/sofa/pull/3590) ; - [Mapping.NonLinear] Move DistanceMultiMapping in its own files [#3707](https://github.com/sofa-framework/sofa/pull/3707) . **Plugins / Projects**; - [MultiThreading] Reorganize following SOFA structure [#3598](https://github.com/sofa-framework/sofa/pull/3598) ; - [SofaCUDA] Reorganize following SOFA structure (1/n) [#3601](https://github.com/sofa-framework/sofa/pull/3601) ; - [SofaCUDA] Reorganize following SOFA structure (2/n) [#3605](https://github.com/sofa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCUDA] Reorganize following SOFA structure (6/n) [#3760](https://github.com/sofa-framework/sofa/pull/3760) ; - [SofaCUDA] Reorganize following SOFA structure (7/n) [#3785](https://github.com/sofa-framework/sofa/pull/3785) ; - [SofaCUDA] Reorganize following SOFA structure (8/n) [#3795](https://github.com/sofa-framework/sofa/pull/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:67279,Plugin,Plugins,67279,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability," Detail how someone else can recreate the problem.; - If your issue reports a bug or any abnormal behavior in SOFA, a **test highlighting the issue** should be written and pull requested. For more information on issues, check out [this GitHub guide](https://guides.github.com/features/issues/). . # Pull requests. If you are able to patch the bug or add the feature yourself – fantastic, make a pull request with the code! Be sure you have read any documents on contributing and you understand [the SOFA license](https://github.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-remote-for-a-fork/) to [the original **upstream** repository](https://github.com/sofa-framework/sofa/) by adding it as a remote.; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-pull-request-from-a-fork/) when you are ready to propose your changes into the main project. ### Start easy and simple. For newcomers in the community, we regularly identify issues easy to tackle and to get started with, using a [label ""*good first issue*""](https://github.com/sofa-framework/sofa/issues?q=label%3A%22good+first+issue%22). Choose one, solve it and create your first pull request!. ### Rules. - Description must explain the **issue solved** or the **feature added**, and this must be reported in the **[CHANGELOG.md](https://github.com/sofa-framework/sofa/blob/mas",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:4407,config,configuring-a-remote-for-a-fork,4407,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['config'],['configuring-a-remote-for-a-fork']
Modifiability," GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:2906,plugin,plugin,2906,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability, Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72609,Config,Config,72609,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability," PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.12.00]( https://github.com/sofa-framework/sofa/tree/v21.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:134502,Refactor,Refactor,134502,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability," Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:258456,Plugin,Pluginize,258456,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginize']
Modifiability," SofaBaseCollision; SofaBaseLinearSolver; SofaBaseMechanics; SofaBaseTopology; SofaBaseUtils; SofaBaseVisual. # SofaSimulation; SofaSimulationCommon; SofaSimulationGraph. # SofaCommon; SofaDeformable; SofaEngine; SofaExplicitOdeSolver; SofaImplicitOdeSolver; SofaLoader; SofaMeshCollision; SofaObjectInteraction; SofaRigid; SofaSimpleFem. # SofaGeneral; SofaBoundaryCondition; SofaConstraint; SofaGeneralAnimationLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralLoader; SofaGeneralMeshCollision; SofaGeneralObjectInteraction; SofaGeneralRigid; SofaGeneralTopology; SofaGeneralVisual; SofaGraphComponent; SofaTopologyMapping; SofaUserInteraction. # SofaAdvanced; SofaNonUniformFem. # SofaMisc; SofaMiscCollision; SofaMiscEngine; SofaMiscExtra; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology. # Other (pluginized from SofaGeneral); SofaDenseSolver; SofaExporter; SofaHaptics; SofaOpenglVisual; SofaPreconditioner; SofaSparseSolver; SofaValidation; ). set(HEADER_FILES; config.h.in; components.h.in; initSofaComponentAll.h; ); set(SOURCE_FILES; initSofaComponentAll.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). set(SOFACOMPONENTALL_MODULES_INCLUDES """"); set(SOFACOMPONENTALL_MODULES_INITS """"); set(SOFACOMPONENTALL_MODULES_HAVES """"); foreach(module ${SOFACOMPONENTALL_MODULES}); string(TOUPPER ""${module}"" module_upper). sofa_find_package(${module} QUIET). if(${module}_FOUND); target_link_libraries(${PROJECT_NAME} ${module}); set(SOFACOMPONENTALL_MODULES_INCLUDES ""${SOFACOMPONENTALL_MODULES_INCLUDES}\n#include <${module}/init${module}.h>""); set(SOFACOMPONENTALL_MODULES_INITS ""${SOFACOMPONENTALL_MODULES_INITS} \\\n init${module}();""); else(); message(""${PROJECT_NAME}: ${module} will not be in the collection.""); endif(); set(SOFACOMPONENTALL_MODULES_HAVES ""${SOFACOMPONENTALL_MODULES_HAVE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt:1049,plugin,pluginized,1049,applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,1,['plugin'],['pluginized']
Modifiability, SofaOpenglVisual =. OpenGL 1.x/2.0 rendering plugin for Sofa. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaOpenglVisual/README.md:46,plugin,plugin,46,applications/collections/deprecated/modules/SofaOpenglVisual/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaOpenglVisual/README.md,1,['plugin'],['plugin']
Modifiability, Without compatibility layer [#3301](https://github.com/sofa-framework/sofa/pull/3301) ; - [ExternalBehaviorModel] Without compatibility layer [#3302](https://github.com/sofa-framework/sofa/pull/3302) ; - [SofaCarving] Some cleaning in carvingManager to use link instead of string and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framew,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:90897,plugin,plugins,90897,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability," You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher you need all hosts to share directories as well as being able to login using ssh+key (no password login).; - Depending on the files you are using in your scene you may need to protect certain symbols: see [https://pythonhosted.org/Cheetah/users_guide/](https://pythonhosted.org/cheetah/users_guide/parserinstructions.html); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:1398,variab,variables,1398,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,1,['variab'],['variables']
Modifiability, [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:117101,variab,variable,117101,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability," [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:61385,Config,Config,61385,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability," [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); - [All] Merge TopologySubsetData and TopologySparseData [#2114]( https://github.com/sofa-framework/sofa/pull/2114 ); - [All] Merge branch topologyChanges_PoC introducing topological changes callbacks [#2228]( https://github.com/sofa-framework/sofa/pull/2228 ); - [All] Remove ForceMask [#2316]( https://github.com/sofa-framework/sofa/pull/2316 ); - [All] Update collision response names [#2522]( https://github.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:135423,Plugin,Plugins,135423,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['Plugin'],['Plugins']
Modifiability, [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sofa.Core] A helper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805 ); - [SofaGeneralObjectInteraction] BoxStiffSpringForceField is now a pack of components [#2621]( https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:95800,plugin,plugin,95800,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability, [SofaCUDA] QuadSpringsSphere scenes [#2598]( https://github.com/sofa-framework/sofa/pull/2598 ); - [SofaCUDA] Remove calls to __umul24 on device [#2715]( https://github.com/sofa-framework/sofa/pull/2715 ); - [SofaCUDA] Resurrect CudaTetrahedronTLEDForceField [#2865]( https://github.com/sofa-framework/sofa/pull/2865 ); - [SofaCUDA] harmless cleaning of namespace declaration and header inclusion [#2674]( https://github.com/sofa-framework/sofa/pull/2674 ); - [SofaMatrix] Reduce dependency [#2768]( https://github.com/sofa-framework/sofa/pull/2768 ); - [SofaMatrix][SofaBaseLinearSolver] Move GlobalSystemMatrixExporter [#2545]( https://github.com/sofa-framework/sofa/pull/2545 ); - [SofaPhysicsAPI] Clean CMake file and compile without compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:132782,variab,variable,132782,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability," [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load me",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81312,Plugin,Plugins,81312,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'config']","['Plugins', 'configuration']"
Modifiability," and (2) offer you this License; giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains; that there is no warranty for this free software. For both users' and; authors' sake, the GPL requires that modified versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and; modification follow. TERMS AND CONDITIONS. 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:21845,extend,extend,21845,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['extend'],['extend']
Modifiability," and cmake [#3798](https://github.com/sofa-framework/sofa/pull/3798) ; - [BulletCollisionDetection] Revive project [#3800](https://github.com/sofa-framework/sofa/pull/3800) ; - [PreassembledMass] Make it external [#3802](https://github.com/sofa-framework/sofa/pull/3802) ; - [SofaCUDA] Move explicit template instantiations from CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull/3624) ; - [Scenes] Use ""floating-point type""-independent templates [#3635](https://github.com/sofa-framework/sofa/pull/3635) ; - [examples] Apply rest position in mappings [#3757](https://github.com/sofa-framework/sofa/pull/3757) . ### Refactoring. **Modules**; - [Collision.Detection] Rename DefaultPipeline into CollisionPipeline [#3590](https://github.com/sofa-framework/sofa/pull/3590) ; - [Mapping.NonLinear] Move DistanceMultiMapping in its own files [#3707](https://github.com/sofa-framework/sofa/pull/3707) . **Plugins / Projects**; - [MultiThreading] Reorganize following SOFA structure [#3598](https://github.com/sofa-framework/sofa/pull/3598) ; - [SofaCUDA] Reorganize following SOFA structure (1/n) [#3601](https://github.com/sofa-framework/sofa/pull/3601) ; - [SofaCUDA] Reorganize following SOFA structure (2/n) [#3605](https://github.com/sofa-framework/sofa/pull/3605) ; - [SofaCUDA] Reorganize following SOFA structure (3/n) [#3660](https://github.com/sofa-framework/sofa/pull/3660) ; - [SofaCUDA] Reorganize following SOFA structure (4/n) [#3701](https://github.com/sofa-framework/sofa/pull/3701) ; - [SofaCUDA] Reorganize following SOFA structure (5/n) [#3758](https://github.com/sofa-framework/sofa/pull/3758) ; - [SofaCU",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:66996,Refactor,Refactoring,66996,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactoring']
Modifiability," be done with a set of objects called Ogl{Type}{Size}Variable. They can handle a lot of different formats : vectors, matrices, array of vectors in int and float types (see components/visualmodel/OglVariable.h for a list of available types).; Texture can be also given to the Shader, using OglTexture, which has a lot of parameters available; but the most important one is the texture unit id.; Another problem arises if you want to mix different effects (for example: toon shading and normal mapping).; 		You can write a big Shader that does a lot of things, and activate only what you want with a system of macro.; In your favorite editor, open /Sofa/share/shaders/generalRenderingShader.vert and /Sofa/share/shaders/generalRenderingShader.frag.; In the .frag file, look at line 85. This section defines the variables that are needed to execute the Perlin Noise Bump effect.; Now look at line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to ""6"", ""0.9"" and ""0.2"" respectively.; Add a OglIntVariable component and name it ""perlinBumpOctave"". Set the Uniform Value to ""1"".; Run in SOFA.; We have defined all the variables for the pattern of the dragon. Now we will define the color.; You can define a macro by giving it the same na",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:1294,variab,variable,1294,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,1,['variab'],['variable']
Modifiability," cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and components when removing last plugin; - CMake: removing ""-Wno-deprecated-register"" compiler option that is only known by a few compilers; - Collision: add function setConstraintId in BaseConstraintSet; - SPtr: up to 10 parameters in constructor; - Add function in EigenBaseSparseMatrix in order to use eigen matrices with async solvers; - Add CUSPARSESolver in SofaCudaSolversPlugin, this solver uses cusparse library to solve a sparse triangular system on the GPU; - MeshBoundaryROI: allows specifying an input subset; - ColorMap: with face culling enabled; - ColorMap: adding a scale for the legend range values; - ImageViewer: adding new boolean data field displaying meshes directly on the slices; - ProjectionToPlaneMultiMapping: adding a projection factor to perform tricky stuff such as planar symmetry; - ProjectionToTargetPlaneMapping: adding a factor to perform planar symmetry for example; - DataDisplay: can now be displayed in wireframe; - DataDisplay: display used topology; - DataDisplay: fix and improving shading a bit; - SofaEngine: add selectLabelROI engine; - SofaEngine: add SelectConnectedLabelsROI; - SofaBoundaryCondition: it is now possible to hide fixedconstraint (default to shown as before); - Mat.h: adding tensor product between vectors; - ForceField: adding const getMState(); - VolumetricRendering: Initialize tetra/hexa Data<> (to be able to link them as data in scenes); - SofaBaseVisual: Add modelview and projection matrices as data output; - FrameBuf",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:343184,plugin,plugin,343184,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugin']
Modifiability," code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa-framework/sofa/pull/270 ). - [SofaVolumetricData]; - Light: clean and strenghening the interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. Y",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:336329,plugin,plugin,336329,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability," compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze] Fix initialization of distance type [#4711](https://github.com/sofa-framework/sofa/pull/4711); - [SceneUtility] Initialize pointer to nullptr [#4712](https://github.com/sofa-framework/sofa/pull/4712); - [SofaCUDA] extern template instantiations [#4714](https://github.com/sofa-framework/sofa/pull/4714); - [image_gui] Make it a cleaner SOFA module [#4719](https://github.com/sofa-framework/sofa/pull/4719); - [SensableEmulation] Fix module name [#4721](https://github.com/sofa-framework/sofa/pull/4721); - [tests] Adapt code to any Eigen version [#4724](https://github.com/sofa-framework/sofa/pull/4724); - [image,Mapping.NonLinear] Properly includes config.h before ObjectFactory.h [#4726](https://github.com/sofa-framework/sofa/pull/4726); - [tests] Fix and test value type string of topology primitives [#4732](https://github.com/sofa-framework/sofa/pull/4732); - [MultiThreading] Fix module name in BeamLinearMapping_mt [#4740](https://github.com/sofa-framework/sofa/pull/4740); - [image_gui] Fix module name [#4741](https://github.com/sofa-framework/sofa/pull/4741); - [Analyze] Fix typos [#4742](https://github.com/sofa-framework/sofa/pull/4742); - [PlayBack] Add option to set period in the WriteStateCreator visitor [#4744](https://github.com/sofa-framework/sofa/pull/4744); - [Core] Missing closing brace [#4753](https://github.com/sofa-framework/sofa/pull/4753); - [Helper] Fix dl open when path are not canonical [#4754](https://github.com/sofa-framework/sofa/pull/4754). ### Cleaning. - [MechanicalLoad] Add buildStiffnessMatrix to TrianglePressureForceField [#4294](https://github.com/sofa-framework/sofa/pull/4294); - [Simulat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:11083,config,config,11083,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability," documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341805,variab,variable,341805,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability, engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:95429,plugin,plugin,95429,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability, examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:208905,config,config,208905,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability, file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tree build [#2940]( https://github.com/sofa-framework/sofa/pull/2940 ); - [CMake] FIX out-of-tree build (2) [#2953]( https://github.com/sofa-framework/sofa/pull/2953 ); - [CMake] FIX out-of-tree configure [#2891]( https://github.com/sofa-framework/sofa/pull/2891 ); - [CMake] Fix install config files [#3031]( https://github.com/sofa-framework/sofa/pull/3031 ); - [Config][CMake] Fix include directories [#3023]( https://github.com/sofa-framework/sofa/pull/3023 ); - [project] Remove duplicate entry in clang-format [#3140]( https://github.com/sofa-framework/sofa/pull/3140 ). **Modules**; - [All] Fix compilation when SOFA_FLOATING_POINT_TYPE is set to float [#2560]( https://github.com/sofa-framework/sofa/pull/2560 ); - [All] Move addInput/addOutput from init() to constructor [#2825]( https://github.com/sofa-framework/sofa/pull/2825 ); - [All] Fix missing #include config.h or invalid ordering that disturb the factory's getTarget() to operate properly. [#2693]( https://github.com/sofa-framework/sofa/pull/2693 ); - [Component.IO.Mesh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *GeometryAlgorithms [#3034]( https://github.com/sofa-framework/sofa/pull/3034 ); - [Controller] Fix,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:104448,config,config,104448,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability, for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542]( https://github.com/sofa-framework/sofa/pull/1542 ). **Examples / Scenes**; - [examples] Fix HexahedronForceFieldTopologyChangeHandling scene [#1573]( https://github.com/sofa-framework/sofa/pull/1573 ). **Scripts / Tools**; - [scripts] Update licenseUpdater [#1498]( https://github.com/sofa-framework/sofa/pull/1498 ). ### Cleanings; **Architecture**; - [SofaMacros] Split SofaMacros.cmake into multiple files [#1477]( https://github.com/sofa-framework/sofa/pull/1477 ); - [SofaMacros] Use IN_LIST (CMake >= 3.3) [#1484]( https://github.com/sofa-framework/sofa/pull/1484 ). **Modules**; - [All] Bunch of removal of sout/serr in the whole code base [#1513]( https://github.com/sofa-framework/sofa/pull/1513 ); - [All] Fix compi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:224731,plugin,plugin,224731,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability," modules/SofaNonUniformFem SofaNonUniformFem ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). sofa_find_package(Sofa.GL QUIET); sofa_add_subdirectory(collection modules/SofaOpenglVisual SofaOpenglVisual ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS AND Sofa.GL_FOUND"" VALUE_IF_HIDDEN OFF). ## Misc; sofa_add_subdirectory(collection modules/SofaMiscTopology SofaMiscTopology ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscExtra SofaMiscExtra ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscForceField SofaMiscForceField ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscEngine SofaMiscEngine ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscSolver SofaMiscSolver ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscFem SofaMiscFem ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscMapping SofaMiscMapping ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaMiscCollision SofaMiscCollision ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection modules/SofaHaptics SofaHaptics ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(plugin modules/SofaValidation SofaValidation ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ## GUI; sofa_add_subdirectory(collection SofaGui SofaGui ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). # meta-modules. sofa_add_subdirectory(collection SofaCommon SofaCommon ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF); sofa_add_subdirectory(collection SofaGener",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/CMakeLists.txt:6048,plugin,plugin,6048,applications/collections/deprecated/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability," now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input dat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350920,Flexible,Flexible,350920,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Flexible'],['Flexible']
Modifiability, nullptr to setLinkedBase [#1479]( https://github.com/sofa-framework/sofa/pull/1479 ); - **[SofaKernel]**[SofaGeneralRigid] Minor fixes in ArticulatedSystemMapping and JointSpringForceField [#1448]( https://github.com/sofa-framework/sofa/pull/1448 ); - **[SofaKernel]** Implement an update mechanism on component: RequiredPlugin [#1458]( https://github.com/sofa-framework/sofa/pull/1458 ); - **[SofaKernel]** Switch to include_guard() instead of include_guard(GLOBAL) [#1467]( https://github.com/sofa-framework/sofa/pull/1467 ); - [SofaMacros] FIX RELOCATABLE_INSTALL_DIR target property [#1631]( https://github.com/sofa-framework/sofa/pull/1631 ); - [SofaMacros] FIX deprecated macro sofa_generate_package [#1446]( https://github.com/sofa-framework/sofa/pull/1446 ); - [SofaMacros] FIX libs copy and plugin deps finding [#1708]( https://github.com/sofa-framework/sofa/pull/1708 ); - [SofaMacros] FIX missing lib copy on Windows [#1711]( https://github.com/sofa-framework/sofa/pull/1711 ); - [SofaMacros] FIX plugins RPATH [#1619]( https://github.com/sofa-framework/sofa/pull/1619 ); - [SofaMacros] Improve RPATH coverage on MacOS [#1713]( https://github.com/sofa-framework/sofa/pull/1713 ); - [SofaMacros] Recursive deps search for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:223392,plugin,plugins,223392,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability, of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactori,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:17183,Plugin,PluginFinder,17183,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginFinder']
Modifiability," of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - SofaNumpy: bind/share a c++ 1d array as a numpy array; - script.Controller : handle optional arguments before createGraph; - [image]; - raw import: add commented basic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:339823,config,config,339823,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability, optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/23,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162647,Plugin,Plugins,162647,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability, parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenGLVisual] Fix unreachable code in VisualManagerSecondaryPass [#2068]( https://github.com/sofa-framework/sofa/pull/2068 ); - [SofaOpenglVisual] Fix typo [#2029]( https://github.com/sofa-framework/sofa/pull/2029 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - **[SofaSimpleFem]** Fix TetrahedronFEMForceField Von Mises stress drawing [#1854]( https://github.com/sofa-framework/sofa/pull/1854 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ); - **[SofaSimpleFem]** Fix rendering options in TetrahedronFEMFF [#2156]( https://github.com/sofa-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests]** Fix init/cleanup in SofaSimulation modules [#1987]( https://github.com/sofa-framework/sofa/pull/1987 ); - **[SofaSimulationCore]** Set def,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:189647,inherit,inheritence,189647,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['inherit'],['inheritence']
Modifiability, plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchable SoftRobots [#3882](https://github.com/sofa-framework/sofa/pull/3882); - [Sofa.Simulation] First steps to remove the singleton Simulation [#3889](https://github.com/sofa-framework/sofa/pull/3889); - [plugins] ADD external collisions plugins [#3890](https://github.com/sofa-framework/sofa/pull/3890); - [LinearAlgebra] Implement CompressedRowSparseMatrixConstraint [#3894](https://github.com/sofa-framework/sofa/pull/3894); - [Simulation.Core] Refactor DefaultAnimationLoop + multithreading [#3959](https://github.com/sofa-framework/sofa/pull/3959); - [LinearSolver.Direct] Parallelization of H A^-1 H^T in SparseLDLSolver [#3986](https://github.com/sofa-framework/sofa/pull/3986); - [LinearSystem] Optim: Only account for affected DoFs [#4001](https://github.com/sofa-framework/sofa/pull/4001); - [GitHub] Action to check labels [#4079](https://github.com/sofa-framework/sofa/pull/4079); - [MultiThreading] Introduce parallel CG [#4138](https://github.com/sofa-framework/sofa/pull/4138);,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:21529,plugin,plugins,21529,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability, state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](https://github.com/sofa-framework/sofa/pull/3234) ; - [Sofa.DefaultType] Constexpr VecTypes and RigidTypes [#3237](https://github.com/sofa-framework/sofa/pull/3237) ; - [Sofa.Core] Remove compilation warning because of un-used argument in BaseCl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:83312,config,configuration,83312,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability, test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sofa.Core] A helper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:95673,plugin,plugin,95673,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability," the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be si",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:351015,Flexible,Flexible,351015,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Flexible'],['Flexible']
Modifiability," the script has the ability to run the simulation either: sequentially, in parallel or on a cluster. There is two options to use it depending on your needs:. - You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher you need all hosts to share directories as well as being able to login using ssh+key (no password login).; - Depending on the files you are using in your scene you ma",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:1111,variab,variables,1111,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,1,['variab'],['variables']
Modifiability," typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.HyperElastic] Reformat and clean TetrahedronHyperelasticityFEMForceField [#3141]( https://github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [#2684]( https://github.com/sofa-framework/sofa/pull/2684 ); - [Geomagic] Clean scene and code warnings + minor changes [#2846]( https://github.com/sofa-framework/sofa/pull/2846 ); - [Geomagic] Fix CMake and replace includes from legacy hea",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:129707,variab,variable,129707,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability," value); void forcePointPosition( const unsigned int i, const sofa::helper::vector< double >& m_x);; ; /// src and dest must have the same size.; /// Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:4728,Variab,Variables,4728,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['Variab'],['Variables']
Modifiability,"""Libraries""; GROUP runtime; ); cpack_add_component(resources; DISPLAY_NAME ""Resources""; GROUP runtime; ). set(CPACK_COMPONENTS_ALL applications headers GTest_headers libraries resources). set(CPACK_COMPONENT_APPLICATIONS_DISPLAY_NAME ""runSofa Application""); set(CPACK_COMPONENT_HEADERS_DISPLAY_NAME ""C++ Headers""); set(CPACK_COMPONENT_GTEST_HEADERS_DISPLAY_NAME ""GTest Headers""); set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME ""Libraries""); set(CPACK_COMPONENT_RESOURCES_DISPLAY_NAME ""Resources""). set(CPACK_COMPONENT_APPLICATIONS_GROUP ""Runtime""); set(CPACK_COMPONENT_HEADERS_GROUP ""Development""); set(CPACK_COMPONENT_GTEST_HEADERS_GROUP ""Development""); set(CPACK_COMPONENT_LIBRARIES_GROUP ""Runtime""); set(CPACK_COMPONENT_RESOURCES_GROUP ""Runtime""); ##################. ######################; # IFW Generator config; if(CPACK_BINARY_IFW); set(CPACK_IFW_PACKAGE_NAME ""${CPACK_PACKAGE_NAME}""); set(CPACK_IFW_PACKAGE_TITLE ""${CPACK_PACKAGE_NAME}""); set(CPACK_IFW_PRODUCT_URL ""${CPACK_PACKAGE_HOMEPAGE_URL}""); set(CPACK_IFW_PACKAGE_LOGO ""${CPACK_PACKAGE_ICON}""); set(CPACK_IFW_TARGET_DIRECTORY ""@HomeDir@/${CPACK_PACKAGE_INSTALL_DIRECTORY}""); if(WIN32); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); elseif(APPLE); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.icns""); endif(). cpack_ifw_configure_component_group(runtime; SORTING_PRIORITY 50; DEFAULT TRUE; EXPANDED; SCRIPT ""${CMAKE_SOURCE_DIR}/scripts/qtifw/install.qs""; ); cpack_ifw_configure_component_group(development; SORTING_PRIORITY 10; DEFAULT TRUE; EXPANDED; ). cpack_ifw_configure_component(applications; DISPLAY_NAME ""runSofa Application""; DEPENDS runtime; ); cpack_ifw_configure_component(headers; DISPLAY_NAME ""C++ Headers""; DEPENDS development; ); cpack_ifw_configure_component(GTest_headers; DISPLAY_NAME ""GTest Headers""; DEPENDS development; ); cpack_ifw_configure_component(libraries; DISPLAY_NAME ""Libraries""; DEPENDS development; ); cpack_ifw_confi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:15016,config,config,15016,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['config']
Modifiability,# Articulated Arm . ![](images/robot.png). ## Requirements . - [SofaPython3](https://github.com/sofa-framework/SofaPython3) plugin for SOFA. ### Optional. To use a GUI to control the robot you need to install [tkinter](https://docs.python.org/3/library/tkinter.html) for python. For instance on Ubuntu:. `sudo apt-install python-tk`. and uncomment the following lines in `robot.py`:. ```python; from robotGUI import RobotGUI # Uncomment this if you want to use the GUI; ```; ```python; robot.addObject(RobotGUI(robot=robot)) # Uncomment this if you want to use the GUI; ```. ## How to run the simulation. ```bash; runSofa robot.py; ```. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm/README.md:124,plugin,plugin,124,applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm/README.md,1,['plugin'],['plugin']
Modifiability,"# Breaking. **Modules**; - [SofaConstraint] Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaCore]** Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaHelper]** Unifying the way we report file related errors [#669]( https://github.com/sofa-framework/sofa/pull/669 ). ### Improvements. **Architecture**; - [CMake] ADD external projects handling [#649]( https://github.com/sofa-framework/sofa/pull/649 ); - [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigid barycentric mapping [#710]( https://github.com/sofa-framework/sofa/pull/710 ); - **[SofaHelper]** PluginManager now checks for file existence instead of library extension match. [#621]( https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:294129,Refactor,Refactoring,294129,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactoring']
Modifiability,"# Code style guide. ## General rules. ### Base rules; The base rules are in Google C++ Style Guide: https://google.github.io/styleguide/cppguide.html ; All rules below **replace** the corresponding base rules. ; For any subject not mentionned below, please refer to the base. ### Commit message; A correct commit message must therefore be structured as: ; `[NAME_OF_MODULE_OR_PLUGIN] ACTION message` ; where ACTION includes ADD, REMOVE, FIX, CLEAN, REVERT. ; Example: `[SofaKernel] ADD test for the mass conservation in UniformMass` . ### Naming; Identifiers must respect the following conventions:. - [N1] Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; whil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:738,Variab,Variables,738,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"# External PluginExample. This example of plugin has been converted to an external repository, and it is used as a showcase of:; - how to write a plugin for SOFA (CMake, file structure, code); - how to configure the plugin to be fetchable from CMake. The content of the plugin is now located at: https://github.com/sofa-framework/PluginExample . The associated *ExternalProjectConfig.cmake.in* describes how to fetch from an repostitory, automatically at the cmake configure time.; Finally, one has to declare this plugin in the root CMakefile, where he will declare this plugin as external, using *add_sofa_plugin_external(<dirname> <projectname>)*; Once fetched, this directory will be populated with the current code pointed in the *ExternalProjectConfig.cmake.in* file.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/PluginExample/ExternalPluginExample.md:11,Plugin,PluginExample,11,applications/plugins/PluginExample/ExternalPluginExample.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/PluginExample/ExternalPluginExample.md,10,"['Plugin', 'config', 'plugin']","['PluginExample', 'configure', 'plugin']"
Modifiability,"# Haption. SOFA plugin allowing the use a Haption's haptic device in a SOFA simulation. ## Requirements. The plugin relies on the [Virtuose API](https://www.haption.com/en/software-en/virtuose-en.html), which is not provided with the plugin.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/README.md:16,plugin,plugin,16,applications/plugins/Haption/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/README.md,3,['plugin'],['plugin']
Modifiability,"# Post-install scripts; if(NOT SOFA_BUILD_RELEASE_PACKAGE); return(); endif(). find_package(Qt5 COMPONENTS Gui REQUIRED); get_target_property(qt5gui_loc Qt5::Gui LOCATION_RELEASE); get_filename_component(QT_LIB_DIR ""${qt5gui_loc}"" DIRECTORY); if(QT_LIB_DIR MATCHES ""\.framework$""); get_filename_component(QT_LIB_DIR ""${QT_LIB_DIR}"" DIRECTORY); endif(); get_target_property(qjpeg_loc Qt5::QJpegPlugin LOCATION_RELEASE); get_filename_component(imageformats_dir ""${qjpeg_loc}"" DIRECTORY); get_filename_component(plugins_dir ""${imageformats_dir}"" DIRECTORY); get_filename_component(QT_DATA_DIR ""${plugins_dir}"" DIRECTORY). message(""QT_LIB_DIR = ${QT_LIB_DIR}""); message(""QT_DATA_DIR = ${QT_DATA_DIR}""). if(CMAKE_SYSTEM_NAME STREQUAL Linux); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/linux-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); if(SOFA_BUILD_APP_BUNDLE); include(macdeployqt) # set MACDEPLOYQT_EXECUTABLE; install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/../..\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; \""${MACDEPLOYQT_EXECUTABLE}\""; )""; COMPONENT resources); else(); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); endif(); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n P",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt:847,Plugin,Plugins,847,tools/postinstall-fixup/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt,1,['Plugin'],['Plugins']
Modifiability,# SOFA Changelog. ## [v24.06.00]( https://github.com/sofa-framework/sofa/tree/v24.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v23.12..v24.06 ). ### Highlighted contributions. - [GitHub] Add a python-based action managing discussions [#4268](https://github.com/sofa-framework/sofa/pull/4268); - [plugins] Update license to LGPL of remaining files [#4425](https://github.com/sofa-framework/sofa/pull/4425); - [LinearSystem] Introduce components to map matrices [#4490](https://github.com/sofa-framework/sofa/pull/4490); - [SofaSphFluid] Externalize SofaSphFluid [#4526](https://github.com/sofa-framework/sofa/pull/4526); - [LinearSystem] Introduce ConstantSparsityProjectionMethod [#4552](https://github.com/sofa-framework/sofa/pull/4552); - [HyperElastic] Introduce stable Neo Hookean hyperelastic material [#4603](https://github.com/sofa-framework/sofa/pull/4603); - [LinearSystem] Cache mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:319,plugin,plugins,319,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,# Sofa.Config,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/README.md:7,Config,Config,7,Sofa/framework/Config/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/README.md,1,['Config'],['Config']
Modifiability,"# SofaDenseSolver. Plugin with Solvers using dense matrices.; Needs the library NewMat. Using the template ""NewMat"" instead of the default ones, it allows the user to use NewMat's matrices for:. - CGLinearSolver (specialization from SofaBaseLinearSolver),; - CholeskySolver (specialization from SofaBaseLinearSolver). e.g in a XML scene file: ; ```; <CGLinearSolver template=""NewMat"" iterations=""25"" />; ```; Moreover, it introduces the solver LULinearSolver (only on NewMat matrices).",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDenseSolver/README.md:19,Plugin,Plugin,19,applications/collections/deprecated/modules/SofaDenseSolver/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDenseSolver/README.md,1,['Plugin'],['Plugin']
Modifiability,"# SofaMatrix. SofaMatrix is a SOFA plugin containing components related to linear system matrices. ## Components. The plugin contains the following components that can be placed into a SOFA scene:. ### GlobalSystemMatrixExporter. GlobalSystemMatrixExporter is a component to export the matrix of a linear system as a file. #### Filename. A Data ""filename"" is available to specify the name of the exported file.; If ""filename"" is not set, it gets the name of the component. ""filename"" can be an absolute path, or relative to the SOFA executable.; Directories are created if necessary. The extension in ""filename"" defines the file format. A number is added after the filename.; It corresponds to the number of elapsed time steps when the file is exported. Depending on the Data ""exportEveryNumberOfSteps"", the matrix can be export only at specified number of time steps. #### Supported File Format. GlobalSystemMatrixExporter supports the following file formats:; * **txt**: exports a Python-like list of lists, containing all the matrix values including the zeros.; It uses the `operator<<` in `BaseMatrix`.; * **csv**: exports a simple comma-separated values file, containing all the matrix values including the zeros.; * **jpg**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:35,plugin,plugin,35,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,2,['plugin'],['plugin']
Modifiability,# SofaNewmat. This SOFA plugin use the (old) newmat library.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/README.md:24,plugin,plugin,24,applications/plugins/SofaNewmat/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/README.md,1,['plugin'],['plugin']
Modifiability,"# Welcome. Welcome to the SOFA Community! Here is a brief summary of how it is structured:. - SOFA Users: people using SOFA by writing scenes or using the SOFA API.; - SOFA Developers: people programming into SOFA, modifying the API, writing plugins.; - SOFA Contributors: (awesome) people proposing their changes in SOFA code via pull-requests.; - SOFA Reviewers: people reviewing and merging the pull-requests. This group is validated by the Scientific and Technical Committee (STC).; - SOFA Consortium: research centers and companies willing to share the cost of development and maintenance of SOFA, hosted by Inria.; - SOFA Consortium Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understandi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:242,plugin,plugins,242,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['plugin'],['plugins']
Modifiability,"## Introduction. SofaCUDA is a plugin that provides a number of Sofa components that have been implemented using CUDA, which allows the graphics card to be used for multithreaded programming. This can significantly improve the performance of your scene when working with large meshes. ## Compilation. See [instructions on the SOFA website](https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/). ## Paradigm. The plugin is mainly a list of components that already exist in various modules of SOFA.; The difference is that those components are now implemented using CUDA. In SOFA, components are defined to work with specific data types, such as `Vec3Types` or `Rigid3Types` (most of them are defined in `VecTypes.h` and `RigidTypes.h`).; SofaCUDA adds more data types.; They still represent the same type of data, but they are implemented such that they can be manipulated on the GPU using CUDA.; For example, the CPU data type `Vec3Types` equivalent in SofaCUDA is `CudaVec3Types`.; CUDA data types are defined in `CudaTypes.h`. In SOFA, components working with a specific data type are just template classes explicitly instantiated with this data type.; For example, `MechanicalObject<Vec3Types>` is the instantiation of the template class `MechanicalObject` with `Vec3Types` as the template parameter.; In SofaCUDA, components are template specializations of the SOFA equivalents.; For example, `MechanicalObject<CudaVec3Types>` is a specialization of `MechanicalObject` for `CudaVec3Types`. The result is that the user just has to change the template parameter in the scene, in order to use the CUDA version of the same component.; For example, in XML, `<MechanicalObject template=""Vec3f"" />` is the CPU version of `MechanicalObject`, and `<MechanicalObject template=""CudaVec3f"" />` is the GPU version.; Note that in SOFA Vec3Types are by default in double (Vec3d), except if you compile in float only (CMake option: SOFA_FLOATING_POINT_TYPE). However CudaVec3Types are us",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md:31,plugin,plugin,31,applications/plugins/SofaCUDA/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md,4,['plugin'],"['plugin', 'plugins']"
Modifiability,"#2563]( https://github.com/sofa-framework/sofa/pull/2563 ); - [All] Minor improvements [#2667]( https://github.com/sofa-framework/sofa/pull/2667 ); - [All] Update Data comments [#2719]( https://github.com/sofa-framework/sofa/pull/2719 ); - [All] Remove few trivial compilation warning & commented code. [#3044]( https://github.com/sofa-framework/sofa/pull/3044 ); - [All] Update the code to remove some deprecation warnings [#2529]( https://github.com/sofa-framework/sofa/pull/2529 ); - [Collision.Geometry] Remove unnecessary *_API in template class definition [#3022]( https://github.com/sofa-framework/sofa/pull/3022 ); - [Collision.Response.Mapper] Missing override keyword [#3083]( https://github.com/sofa-framework/sofa/pull/3083 ); - [Component] All modules have a version [#2948]( https://github.com/sofa-framework/sofa/pull/2948 ); - [Components.Engine.Transform] remove shadow variable in ROIValueMapper [#2987]( https://github.com/sofa-framework/sofa/pull/2987 ); - [Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS [#3172]( https://github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal [#2922]( https://github.com/sofa-framework/sofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:121226,Config,Config,121226,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); elseif(APPLE); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.icns""); endif(). cpack_ifw_configure_component_group(runtime; SORTING_PRIORITY 50; DEFAULT TRUE; EXPANDED; SCRIPT ""${CMAKE_SOURCE_DIR}/scripts/qtifw/install.qs""; ); cpack_ifw_configure_component_group(development; SORTING_PRIORITY 10; DEFAULT TRUE; EXPANDED; ). cpack_ifw_configure_component(applications; DISPLAY_NAME ""runSofa Application""; DEPENDS runtime; ); cpack_ifw_configure_component(headers; DISPLAY_NAME ""C++ Headers""; DEPENDS development; ); cpack_ifw_configure_component(GTest_headers; DISPLAY_NAME ""GTest Headers""; DEPENDS development; ); cpack_ifw_configure_component(libraries; DISPLAY_NAME ""Libraries""; DEPENDS development; ); cpack_ifw_configure_component(resources; DISPLAY_NAME ""Resources""; DEPENDS runtime; ); endif(); ######################. #######################; # NSIS Generator config; if(CPACK_BINARY_NSIS); # There is a bug in NSIS that does not handle full unix paths properly. Make; # sure there is at least one set of four (4) backslashes.; set(CPACK_NSIS_MUI_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); set(CPACK_NSIS_INSTALLED_ICON_NAME ""bin\\\\runSofa.exe""); set(CPACK_NSIS_DISPLAY_NAME ${CPACK_PACKAGE_NAME}); set(CPACK_NSIS_PACKAGE_NAME ${CPACK_PACKAGE_NAME}); set(CPACK_NSIS_HELP_LINK ${CPACK_PACKAGE_HOMEPAGE_URL}); set(CPACK_NSIS_URL_INFO_ABOUT ${CPACK_PACKAGE_HOMEPAGE_URL}); set(CPACK_NSIS_MODIFY_PATH ON); set(CPACK_NSIS_CONTACT ""contact@sofa-framework.org""); set(CPACK_NSIS_INSTALL_ROOT ""$PROFILE""); string(CONCAT EXTRA_INSTALL_COMMAND ""ExecShell \\\""open\\\"" \\\""https://www.sofa-framework.org/thank-you?sofa="" ${CPACK_PACKAGE_VERSION} ""&os=windows\\\""""); set(CPACK_NSIS_EXTRA_INSTALL_COMMANDS ""${EXTRA_INSTALL_COMMAND}""); set(CPACK_NSIS_MENU_LINKS; ""https://www.sofa-framework.org/documentation/"" ""SOFA User Documentation""; ""https://www.sofa-framework.org/api/"" ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:16356,config,config,16356,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['config']
Modifiability,"( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.com/sofa-framework/sofa/pull/1196 ); - [SceneCreator] Pluginizing... [#1109]( https://github.com/sofa-framework/sofa/pull/1109 ); - **[SofaBaseLinearSolver]** Remove virtual function BaseLinearSolver::isMultiGroup [#1063]( https://github.com/sofa-framework/sofa/pull/1063 ); - **[SofaBaseLinearSolver][FullMatrix]** Restore fast clear function [#1128]( https://github.com/sofa-framework/sofa/pull/1128 ); - **[SofaFramework]** Remove (painful) check/warning with Rigids [#1229]( https://github.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifie",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:254301,Plugin,Pluginizing,254301,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,"( https://github.com/sofa-framework/sofa/pull/1406 ); - **[SofaDefaultType]** Add a Ray type. [#1251]( https://github.com/sofa-framework/sofa/pull/1251 ); - **[SofaHelper]** Add the obj id to labels when available [#1256]( https://github.com/sofa-framework/sofa/pull/1256 ); - **[SofaHelper]** Add auto-friendly getWriteAccessors/getReadAcessor... [#1254]( https://github.com/sofa-framework/sofa/pull/1254 ); - **[SofaKernel]** Set the default compilation mode to c++17. [#1249]( https://github.com/sofa-framework/sofa/pull/1249 ); - **[SofaKernel]** Add DataTypeInfo for BoundingBox [#1373]( https://github.com/sofa-framework/sofa/pull/1373 ); - **[SofaKernel]** Cleaner output when the creation of an object fails [#1266]( https://github.com/sofa-framework/sofa/pull/1266 ); - **[SofaSimulationCore]** Add a way to fill a multi vector from a base vector with a MechanicalOperations (mops). [#1248]( https://github.com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:232942,Plugin,Plugins,232942,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'plugins']"
Modifiability,( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework/sofa/issues/1633 ); - [modules] Set relocatable flags to pluginized modules [#1604]( https://github.com/sofa-framework/sofa/pull/1604 ); - [SofaCommon] Make SofaCommon a deprecated collection [#1609]( https://github.com/sofa-framework/sofa/pull/1609 ); - [SofaGeneral] Make SofaGeneral a deprecated collection [#1596]( https://github.com/sofa-framework/sofa/pull/1596 ); - [SofaGeneral] Move BVH-format feature from Helper to SofaGeneralRigid [#1644]( https://github.com/sofa-framework/sofa/pull/1644 ). ### Breaking; **Architecture**; - [SofaMacros] Refactor for better target and package management [#1433]( https://github.com/sofa-framework/sofa/pull/1433 ). **Modules**; - [All] Change index_type from size_t to uint [#1514]( https://github.com/sofa-framework/sofa/pull/1514 ); - [All] Deprecate m_componentstate and rename to d_componentState [#1358]( https://github.com/sofa-framework/sofa/pull/1358 ); - [All] Factorize and rename TopologyObjectType into TopologyElementType [#1593]( https://github.com/sofa-framework/sofa/pull/1593 ),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:214980,plugin,pluginized,214980,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['pluginized']
Modifiability,( https://github.com/sofa-framework/sofa/pull/2705 ); - [S.C.Engine.Generate] Convert and move MeshTetraStuffing as an engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:95254,Plugin,Plugins,95254,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin']","['PluginExample', 'Plugins', 'plugin']"
Modifiability,"( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [SofaGeometry] Add geometric methods in class Triangle and Edge [#2587]( https://github.com/sofa-framework/sofa/pull/2587 ); - [SofaGuiQt][WindowProfiler] Add root tree + show overhead [#2643]( https://github.com/sofa-framework/sofa/pull/2643 ); - [SofaHelper] Load image using stb [#2551]( https://github.com/sofa-framework/sofa/pull/2551 ); - [SofaHelper] Reduce AdvancedTimer overhead [#2645]( https://github.com/sofa-framework/sofa/pull/2645 ); - [SofaSimpleFem] Improve data description [#2740]( https://github.com/sofa-framework/sofa/pull/2740 ); - [SofaSimpleFem][SofaGeneralSimpleFem][SofaMiscFem] Avoid vectors normalization [#2647]( https://github.com/sofa-framework/sofa/pull/2647 ); - [SofaSimulationCore] More generic DefaultVisualManagerLoop [#2549]( https://github.com/sofa-framework/sofa/pull/2549 ); - [SofaSimulationGraph] Add the ability to control where the object is added in a nod",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:100590,Extend,Extend,100590,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Extend'],['Extend']
Modifiability,"(SOFA_ENABLE_BUILTIN_TIMER ""Enable the builtin timers"" ON); if(SOFA_ENABLE_BUILTIN_TIMER); set(SOFA_ENABLE_SCOPED_ADVANCED_TIMER 1); endif(). # An important C++11 feature may be not enabled due to; # the compiler being built without the --enable-libstdcxx-time option.; if(CMAKE_COMPILER_IS_GNUCXX); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_GLIBCXX_USE_NANOSLEEP -D_GLIBCXX_USE_SCHED_YIELD""); endif(); endif(). # hack for clang on old macosx (version < 10.9, such as the dashboard servers); # that is using, by default at that time, a libstdc++ that did not fully implement c++11; if(APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" AND CMAKE_SYSTEM_VERSION VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:11925,config,configurations,11925,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['config'],['configurations']
Modifiability,"(https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""meta-alias"" isMechanical [#4360](https://github.com/sofa-framework/sofa/pull/4360); - [github] Add new action checking PR age [#4386](https://github.com/sofa-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); - [Project] Start dev phase v24.06 [#4544](https://github.com/sofa-framework/sofa/pull/4544); - [runsofa] Allowing multiple argv [#4591](https://github.com/sofa-framework/sofa/pull/4591); - [GUI] Add ConstraintAttachButtonSetting [#4601](https://github.com/sofa-framework/sofa/pull/4601); - [plugins] Add fetchable ModelOrderReduction [#4608](https://github.com/sofa-framework/sofa/pull/4608); - [GUI.Qt] Add clickable link to online documentation [#4650](https://github.com/sofa-framework/sofa/pull/4650); - [CMake] Start finding Qt6 then Qt5 [#4686](https://github.com/sofa-framework/sofa/pull/4686); - [examples] Use MeshMatrixMass in hyperelastic examples [#4687](https://github.com/sofa-framework/sofa/pull/4687). ### Bug Fixes. - [Geometry] Update method intersectionWithEdge signature and redirect all methods to it in EdgeSetGeometryAlgorithms [#4194](https://github.com/sofa-framework/sofa/pull/4194); - [SofaSPH",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:4485,Config,Config,4485,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"). **Plugins / Projects**; - [CGALPlugin] FIX sofa::type [#2246]( https://github.com/sofa-framework/sofa/pull/2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://githu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:153357,variab,variable,153357,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"). set(SOFA_URL ""${CMAKE_PROJECT_HOMEPAGE_URL}""). set(SOFA_VERSION_STR ""\""${Sofa_VERSION}\""""); set(SOFA_VERSION ""${Sofa_VERSION_MAJOR}${Sofa_VERSION_MINOR}${Sofa_VERSION_PATCH}""). ## Default build type; if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES); message(STATUS ""Setting build type to Release as none was specified.""); set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Build type"" FORCE); endif(). # Output Directories definition; set(ARCHIVE_OUTPUT_DIRECTORY lib); set(RUNTIME_OUTPUT_DIRECTORY bin); if(WIN32); set(LIBRARY_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}); else(); set(LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIRECTORY}); endif(); ## Set the output directories globally; set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${ARCHIVE_OUTPUT_DIRECTORY}); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${RUNTIME_OUTPUT_DIRECTORY}); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBRARY_OUTPUT_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON)."");",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:1400,config,configure,1400,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['configure']
Modifiability,"); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS);",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10970,Plugin,Plugin,10970,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Plugin'],['Plugin']
Modifiability,); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/sofa-framework/sofa/pull/4428); - [Core][LinearSolver] Introduction of ordering method components [#4477](https://github.com/sofa-framework/sofa/pull/4477); - [Simulation.Graph] Move SimpleApi into its own library [#4495](https://github.com/sofa-framework/sofa/pull/4495); - [all] Lifecycle for v24.06 (2): remove Compat [#4533](https://github.com/sofa-framework/sofa/pull/4533); - [all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:1992,Refactor,Refactor,1992,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"); - [SofaBaseTopology][SofaDeformable][SofaMiscTopology] Proper topological changes in SpringForceField [#2653]( https://github.com/sofa-framework/sofa/pull/2653 ); - [SofaBoundaryCondition] Remove duplicated code [#2830]( https://github.com/sofa-framework/sofa/pull/2830 ); - [SofaCore.Topology] Depreciate method linked to topologyHandler create/destroy function [#2869]( https://github.com/sofa-framework/sofa/pull/2869 ); - [SofaCore] Fix invalid include in MappingHelper [#2632]( https://github.com/sofa-framework/sofa/pull/2632 ); - [SofaCore] Inf fix topo subset indices [#2870]( https://github.com/sofa-framework/sofa/pull/2870 ); - [SofaCore] Make inheritance virtual [#2594]( https://github.com/sofa-framework/sofa/pull/2594 ); - [SofaCore] Restore default component naming for python [#2801]( https://github.com/sofa-framework/sofa/pull/2801 ); - [SofaCore] Restore xml and python different naming conventions [#2773]( https://github.com/sofa-framework/sofa/pull/2773 ); - [SofaCore] Virtual inheritance of BaseObject [#2799]( https://github.com/sofa-framework/sofa/pull/2799 ); - [SofaDeformable] Handle division by zero in MeshSpringForceField [#2596]( https://github.com/sofa-framework/sofa/pull/2596 ); - [SofaDeformable] Springs are able to compute their bounding box [#2599]( https://github.com/sofa-framework/sofa/pull/2599 ); - [SofaEngine] Fix BoxROI undefined behavior [#2604]( https://github.com/sofa-framework/sofa/pull/2604 ); - [SofaFramework] Add tests on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:111905,inherit,inheritance,111905,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['inherit'],['inheritance']
Modifiability,"**Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). ____________________________________________________________. ## [v21.06.01]( https://github.com/sofa-framework/sofa/tree/v21.06.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ). ### Bug Fixes; **Architecture**; - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaCo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:165287,Plugin,PluginManager,165287,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,**[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sofa-framework/sofa/pull/1404 ); - **[SofaCore]** ADD directory DataFileNames [#1407]( https://github.com/sofa-framework/sofa/pull/1407 ); - **[SofaKernel]** Refactor DDGNode [#1372]( https://github.com/sofa-framework/sofa/pull/1372 ); - **[SofaKernel]** Totally remove the macro CHECK_TOPOLOGY from BaseMeshTopology [#1399]( https://github.com/sofa-framework/sofa/pull/1399 ); - **[SofaKernel]** Update EulerExplicitSolver [#1260]( https://github.com/sofa-framework/sofa/pull/1260 ); - **[SofaKernel]** implement activer's code at CollisionModel. [#1259]( https://github.com/sofa-framework/sofa/pull/1259 ). **Plugins**; - [SofaCUDA] Arch auto-detection for nvcc [#1336]( https://github.com/sofa-framework/sofa/pull/1336 ). ### Improvements. **Architecture**; - [CMake] Create an IDE folder for all relocatable_install targets [#1405]( https://github.com/sofa-framework/sofa/pull/1405 ). **Modules**; - **[SofaBaseVisual]** Add camera gizmo in base camera [#1253]( https://github.com/sofa-framework/sofa/pull/1253 ); - **[SofaCore]** Remove warning in ExecParam [#1325]( https://github.com/sofa-framework/sofa/pull/1325 ); - **[SofaCore]** ADD: DataCallback system in Base [#1406]( https://github.com/sofa-framework/sofa/pull/1406 ); - **[SofaDefaultType]** Add a Ray type. [#1251]( https://github.com/sofa-framework/sofa/pull/1251 ); - **[SofaHelper]** Add the obj id to labels when available [#1256]( https://github.com/sofa-framework/sofa/pull/1256 ); - **[SofaHelper]** Add auto-friendly getWriteAccessors/getReadAcessor... [#1254]( https://github.com/sofa-framework/sofa/pull/1254 ); - **[SofaKernel]** Set the default compilation mode to c++,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:231417,Plugin,Plugins,231417,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,", it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disab",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:5197,config,config,5197,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['config']
Modifiability,- [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchable SoftRobots [#3882](https://github.com/sofa-framework/sofa/pull/3882); - [Sofa.Simulation] First steps to remove the singleton Simulation [#3889](https://github.com/sofa-framework/sofa/pull/3889); - [plugins] ADD external collisions plugins [#3890](https://github.com/sofa-framework/sofa/pull/3890); - [LinearAlgebra] Implement CompressedRowSparseMatrixConstraint [#3894](https://github.com/sofa-framework/sofa/pull/3894); - [Simulation.Core] Refactor DefaultAnimationLoop + multithreading [#3959](https://github.com/sofa-framework/sofa/pull/3959); - [LinearSolver.Direct] Parallelization of H A^-1 H^T in SparseLDLSolver [#3986](https://github.com/sofa-framework/sofa/pull/3986); - [LinearSystem] Optim: Only account for affected DoFs [#4001](https://github.com/sofa-framework/sofa/pull/4001); - [GitHub] Action to check labels [#4079](https://github.com/sofa-framework/sofa/pull/4079); - [MultiThreading] Introduce parallel CG [#4138](https://github.com/sofa-framework/sofa/pull/4138); - [LinearSystem] Introduce constant sparsity matrix assembly [#4158](https://github.com/sofa-framework/sofa/pull/4158); - [LinearSolver] Implement parallel inverse product for all linear solvers [#4255](https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:21751,plugin,plugins,21751,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugins']
Modifiability,- [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [SofaTest] CLEAN msg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:256572,plugin,plugin,256572,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,- [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72746,Config,Configuration,72746,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Configuration']
Modifiability,- [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:17669,plugin,plugin,17669,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162527,inherit,inherit,162527,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['inherit'],['inherit']
Modifiability,-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:127411,plugin,plugin,127411,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:308853,Plugin,Pluginizing,308853,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); - [Project] Start dev phase v24.06 [#4544](https://github.com/sofa-framework/sofa/pull/4544); - [runsofa] Allowing multiple argv [#4591](https://github.com/sofa-framework/sofa/pull/4591); - [GUI] Add ConstraintAttachButtonSetting [#4601](https://github.com/sofa-framework/sofa/pull/4601); - [plugins] Add fetchable ModelOrderReduction [#4608](https://github.com/sofa-framework/sofa/pull/4608); - [GUI.Qt] Add clickable link to online documentation [#4650](https://github.com/sofa-framework/sofa/pull/4650); - [CMake] Start finding Qt6 then Qt5 [#4686](https://github.com/sofa-framework/sofa/pull/4686); - [examples] Use MeshMatrixMass in hyperelastic examples [#4687](https://github.com/sofa-framework/sofa/pull/4687). ### Bug Fixes. - [Geometry] Update method intersectionWithEdge signature and redirect all methods to it in EdgeSetGeometryAlgorithms [#4194](https://github.com/sofa-framework/sofa/pull/4194); - [SofaSPHFluid] Add option in ParticleSource to add/remove random values in the particles generation. Remove noise for CI scenes [#4316](https://github.com/sofa-framework/sofa/pull/4316); - [ODESolver] Fix compilation with SOFA_NO_VMULTIOP [#4325](https://github.com/sofa-framework/sofa/pull/4325); - [Topology.Mapping] Edge2QuadTopologicalMapping: use Links for required QuadSet components [#4,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:4860,plugin,plugins,4860,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,. **Scripts / Tools**. ____________________________________________________________. ## [v21.06.03]( https://github.com/sofa-framework/sofa/tree/v21.06.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.02...v21.06.03 ). ### Bug Fixes; **Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). ____________________________________________________________. ## [v21.06.01]( https://github.com/sofa-framework/sofa/tree/v21.06.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ). ### Bug Fixes; **Architecture**; - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [Sofa.Type] FIX ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:165096,config,config,165096,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,. ...I'm so Fancy...; {} = {0} + {1} + {0} . Experiment started at: 2016-10-14 11:33:16.744742 ; Experiment duration: 0.788909912109 ; Configuration file: example.json . #DirectorySceneLogTiming. 0; View; View; View; 0.400139093399 seconds. 0; View; View; View; 0.37326002121 seconds. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/results.html:135,Config,Configuration,135,tools/sofa-launcher/results.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/results.html,1,['Config'],['Configuration']
Modifiability,". Advanced Shader (7/7). Description; This follows the previous part on Shader, but now we will see how to use it more efficiently.; Key points; We have seen how to call a Shader, but we may need to send uniform values to the Shader in order to change parameters on the fly.; 		This can be done with a set of objects called Ogl{Type}{Size}Variable. They can handle a lot of different formats : vectors, matrices, array of vectors in int and float types (see components/visualmodel/OglVariable.h for a list of available types).; Texture can be also given to the Shader, using OglTexture, which has a lot of parameters available; but the most important one is the texture unit id.; Another problem arises if you want to mix different effects (for example: toon shading and normal mapping).; 		You can write a big Shader that does a lot of things, and activate only what you want with a system of macro.; In your favorite editor, open /Sofa/share/shaders/generalRenderingShader.vert and /Sofa/share/shaders/generalRenderingShader.frag.; In the .frag file, look at line 85. This section defines the variables that are needed to execute the Perlin Noise Bump effect.; Now look at line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to """,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:339,Variab,Variable,339,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,1,['Variab'],['Variable']
Modifiability,". ColladaSceneLoader Plugin Documentation. ColladaSceneLoader Plugin Documentation. 		A skinned and bones animated character walking. Introduction; How to use; Examples; Intellectual property and rights. Introduction; This page explains how to use the ColladaSceneLoader plugin to load collada scene (.dae) into Sofa. What is Collada ?.       COLLADA defines an XML-based schema to make it easy to transport 3D assets between applications ; - enabling diverse 3D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For eve",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:21,Plugin,Plugin,21,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,3,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,". Creation of a Pendulum (1/8). Description; The objective of this small step by step tutorial is to discover the basic components used with SOFA, how they interact, and how you can configure them. We will create a pendulum made of two object, and two different springs. We will not go into the details about the template parameter of the mechanical states, nor the forcefields used.; Press the Edit in Modeler button at the top of the window.; This will show the scene graph for our initial basic scene in the Modeler window.; Key points; We used 3 components:; ; A Node ""FirstObject"" to store the components describing the object we want to simulate. It is important that the hierarchy of the nodes in the scene graph reflects the scene you want to model.; The shape is modeled using a MechanicalObject which desribes the particle states. ; A UniformMass is added for the MechanicalObject, giving the same mass for each particle of the MechanicalObject. . Hold the cursor over the button with the SOFA logo on the far right of the Modeler toolbar. ; The tooltip will say Run in SOFA.; Press this Run in SOFA button.; This will open the scene described by the scene graph in SOFA. In SOFA, you can see one Particle represented by a white dot. (Note: you may need to select ""Behavior"" in the View table in order to see the scene).; Results; Press the Animate button.; You will see that nothing happens. In the next step we will see why.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/0_Pendulum.html:182,config,configure,182,examples/Tutorials/StepByStep/Pendulum/0_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/0_Pendulum.html,1,['config'],['configure']
Modifiability,". Deformable model of the Tongue; Description:. 		We add a deformable model to the tongue. It means the tongue will move and deform depending on the forces applied on it.; 		To do this, we use the component TetrahedralCorotanionalFEMForceField. It uses finite element methods to compute the internal forces.; 		; Key points:. 			To add a deformable model in the scene, we need to create a MechanicalObject. All the forces and displacement are computed using an Euler implicit solver (EulerImplicitSolver) for time integration and a Conjugate Gradient linear solver (CGLinearSolver) to solve a linear system. ; 			We also need a container to store the tetrahedra (TetrahedronSetTopologyContainer). With all these components, we can add a force field to compute internal forces (TetrahedralCorotanionalFEMForceField).; 		. 			The visual model of the tongue is updated because of a mapping (BarycentricMapping) between the deformable model and the visual.; 		; Note:. 			In the current scene, the visual model of the tongue is not displayed, but the deformable model is displayed with the blue tetrahedra.; 		. 			The tetrahedric mesh of the tongue has been generated using the CGAL plugin in SOFA. Read this annex to learn more about mesh generation using CGAL plugin.; 		. 			The mass choosen for the deformable model of the tongue is a DiagonalMass. It has been choosen to show the diversity of masses available in SOFA. This kind of mass computes the mass matrix with non uniform diagonal values, depending on the tetrahedra size.; 		. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html:1180,plugin,plugin,1180,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,2,['plugin'],['plugin']
Modifiability,". Image Plugin; Image MeshToImage Example; This example scene shows an example of the Image plugin, which computes a rasterization image from a mesh. ; It can be seen as an inverse processing of marchingCube: a 3D voxel image (binary) is created from the mesh so that; the voxel values inside the mesh object are 1 and the ones outside the mesh object are 0. You can visualize the cut plan in the ; mesh by setting it in the ImageViewer. . To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/MeshToImage.html:8,Plugin,Plugin,8,applications/plugins/image/examples/MeshToImage.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/MeshToImage.html,4,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,". Image Plugin; Image MeshToImage_Frame Example. This example scene shows an example of the Image plugin, which computes a rasterization image from a mesh and generate uniformly sampled frames , combined with the Flexible plugin, which applies continuum mechanics to these frames. More documentation can be found in ../doc/index.html. More documentation can be found in ../doc/index.html. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/MeshToImage_Frame.html:8,Plugin,Plugin,8,applications/plugins/image/examples/MeshToImage_Frame.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/MeshToImage_Frame.html,4,"['Flexible', 'Plugin', 'plugin']","['Flexible', 'Plugin', 'plugin']"
Modifiability,". Image Plugin; Image marchingCube Example; This marchingCube Example shows an example of the Image plugin, which demonstrates the algorithm of MarchingCube.; It constructs a surface mesh from a 3D medical image. A blur filter is applied to the image. ; To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/marchingCubes.html:8,Plugin,Plugin,8,applications/plugins/image/examples/marchingCubes.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/marchingCubes.html,4,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,". Mesh Loading and Rendering 1 (1/7). Description; The objective of this first tutorial about visualization is to load an obj file and render it in the viewer.; Key points; OglModel is the main component for rendering file. This is where all geometrical information (vertices, faces ...) are given to OpenGL, which render it afterwards. Vertex Buffer Object is used (if supported) to enhance speed.; Just put an OglModel in the scene and fill the field filename with the path to your OBJ file.; Create a new scene. Clear it of the default components by selecting File > Clear.; Add an OglModel component to the root node. Change the Path to the model (found in the Property 2/3 tab) to /Sofa/share/mesh/dragon.obj; Run in SOFA and Animate.; Nothing happens, but you can see the object.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/0_Visual.html:384,enhance,enhance,384,examples/Tutorials/StepByStep/Visual/0_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/0_Visual.html,1,['enhance'],['enhance']
Modifiability,". Mesh generation; Preliminary note:. 			This scene is based on the component MeshTetraStuffing to generate from a surface mesh a tetrahedral mesh. Note that this can also be done using the CGAL plugin (which you would need to compile).; 		; Description:. 			This scene is not a simulation, it only generates a volumetric mesh from a surfacic mesh. ; 			Unlike surfacic meshes, volumetric meshes represent the interior volume of an object. ; 			The goal is to create this mesh and export it as a VTK file to use it later in another simulation.; 		; Key points:. Loading of the surfacic mesh with the Mesh component.; The MeshTetraStuffing component generates the interior volume geometry from the surfacic mesh.; We build a mesh from the generated geometry in a second Mesh component.; We export the mesh as a VTK file with the VTKExporter component. Note:. 			The MeshTetraStuffing component needs some crucial parameters to generate good quality meshes.; 		; Back. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.html:195,plugin,plugin,195,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.html,1,['plugin'],['plugin']
Modifiability,". Once you have; read this page, you can replace it with the documentation of your; plugin. To customize the template, you can:. Copy the TestPlugin directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the ex",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1278,plugin,plugin,1278,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['plugin'],['plugin']
Modifiability,. Plugin Image; PluginImage Kinect. An implementation of the Kinect to convert depth image from the Kinect to a mesh via the DepthMapToMesh component. Refer to the DepthMapToImage.scn. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect.html:2,Plugin,Plugin,2,applications/plugins/image/examples/Kinect.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,". Plugin Image; PluginImage Kinect. Load the images saved onto the computer with the Kinect_capture.scn, and use them to make a depth mesh via DepthMapToMesh component. Refer to the DepthMapToImage.scn or Kinect.scn for more details. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect_offline.html:2,Plugin,Plugin,2,applications/plugins/image/examples/Kinect_offline.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect_offline.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,. Plugin Image; PluginImage Kinect. Retrieve the image of the Kinect (RGB image and depth map) and accumulate them via the ImageAccumulator to save them into images via the ImageExporter. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect_capture.html:2,Plugin,Plugin,2,applications/plugins/image/examples/Kinect_capture.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect_capture.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,". Plugin Image; PluginImage Load. Load simply an image with ImageContainer component, the main tool in the plugin image. It can load many types of image, video, etc... And the ImageViewer second main tool allow to display image 2D/3D, vector, tensor, video, etc... Refer to other loadXXX.scn for more examples. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/loadHDR.html:2,Plugin,Plugin,2,applications/plugins/image/examples/loadHDR.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/loadHDR.html,3,"['Plugin', 'plugin']","['Plugin', 'PluginImage', 'plugin']"
Modifiability,". Plugin Image; PluginImage cropFilter. This scene shows an example of use of the ImageFilter component. Here we use the function crop of the ImageFilter, it means that the image is cut in function of the values put in the properties of the component. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/cropFilter.html:2,Plugin,Plugin,2,applications/plugins/image/examples/cropFilter.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/cropFilter.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,". Plugin Image; PluginImage distanceFieldFilter. This example shows an other function of the ImageFilter component. From an image input, it can compute a new image where every pixel contains the distance to the closest value put into the ImageFilter parameters. The scale is the multiplier of the true distance.; This new image is called a distance map or field. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/distanceFieldFilter.html:2,Plugin,Plugin,2,applications/plugins/image/examples/distanceFieldFilter.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/distanceFieldFilter.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,. Plugin Image; PluginImage distanceFieldFilter. This scene shows what the DepthMapToMesh engine is doing. From an image in black&white (whose gray intensity represent the depth in the space) it creates a mesh where a texture is applied (which is the same picture than the b&w but in color). ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/DepthMapToMesh.html:2,Plugin,Plugin,2,applications/plugins/image/examples/DepthMapToMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/DepthMapToMesh.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,". Plugin Image; PluginImage smoothingEngine. This scene shows an example of use of the ImageFilter component. Here we use one of the blur available in the ImageFilter, which is a classical gaussian blur. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/smoothingengine.html:2,Plugin,Plugin,2,applications/plugins/image/examples/smoothingengine.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/smoothingengine.html,2,['Plugin'],"['Plugin', 'PluginImage']"
Modifiability,". Plugin example; Plugin Example; This example shows a simple pendulum, as shown in the following image.; More documentation can be found in doc/index.html. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/ColladaSceneLoader.html:2,Plugin,Plugin,2,applications/plugins/SofaAssimp/ColladaSceneLoader.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/ColladaSceneLoader.html,2,['Plugin'],['Plugin']
Modifiability,". PluginImage; PluginImage Sampler_Frames Example; This scene shows an example of the image plugin, which samples an object represented by an image with rigid frames.; To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_Frames.html:2,Plugin,PluginImage,2,applications/plugins/image/examples/sampler_Frames.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_Frames.html,5,"['Plugin', 'plugin']","['Plugin', 'PluginImage', 'plugin']"
Modifiability,". PluginImage; PluginImage Sampler_HexaFEM Example. This scene shows another example of the sampler of the image plugin. A FEM model is used for the simulation of the object. . Run and shift+rightclick the object to get it moving. . To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_HexaFEM.html:2,Plugin,PluginImage,2,applications/plugins/image/examples/sampler_HexaFEM.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_HexaFEM.html,5,"['Plugin', 'plugin']","['Plugin', 'PluginImage', 'plugin']"
Modifiability,". PluginImage; PluginImage Sampler_meshSpring Example. This scene shows anohter example of the sampler of image plugin. It shows the use of the sampler with meshSpring model for simulation. . Run and shift+rightclick the object to get it moving. . To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_meshSpring.html:2,Plugin,PluginImage,2,applications/plugins/image/examples/sampler_meshSpring.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_meshSpring.html,5,"['Plugin', 'plugin']","['Plugin', 'PluginImage', 'plugin']"
Modifiability,". PluginImage; PluginImage multipleFilters Example; This scene shows an example of the image plugin. It demonstrates how to use multiple filters on one image. In this example,; a blur filter is first applied to the 3D image, after which a resize filter is applied and finally a structure tensors filter is used. To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/multipleFilters.html:2,Plugin,PluginImage,2,applications/plugins/image/examples/multipleFilters.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/multipleFilters.html,5,"['Plugin', 'plugin']","['Plugin', 'PluginImage', 'plugin']"
Modifiability,". PluginImage; PluginImage openMeshToImage Example; This scene shows an example of the image plugin. It constructs a 3D voxel image from a surface mesh (cf. MeshToImage.scn) however; in this case the mesh given is not a closed one, which means with holes. It shows also the possiblity of filling holes in the mesh; from the 3D voxel image. ; To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/openMeshToImage.html:2,Plugin,PluginImage,2,applications/plugins/image/examples/openMeshToImage.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/openMeshToImage.html,5,"['Plugin', 'plugin']","['Plugin', 'PluginImage', 'plugin']"
Modifiability,". Representative; image of the; TestPlugin plugin. Introduction; Examples; Project structure; Intellectual property; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction. This page explains how to customize the empty plugin. Once you have; read this page, you can replace it with the documentation of your; plugin. To customize the template, you can:. Copy the TestPlugin directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1032,plugin,plugin,1032,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['plugin'],['plugin']
Modifiability,". SimpleGUI. SimpleGUI. SimpleGUI helps inserting a Sofa simulation in graphics applications, such as this simple Glut program. Introduction; Compilation. Examples; Intellectual property; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction; This is a simpler alternative to the standard Sofa GUI. See the code documentation (*) for more detail. Compilation; One subproject uses qtquick. On Ubuntu 14.04, it requires package qtdeclarative5-dev. Examples. glutOnePick: a glut application with a Sofa simulation. The user can interact by clicking and dragging particles.; ; qtSofa: a qt application with a Sofa simulation. The user can interact by shift-clicking and dragging particles.; . Intellectual; property and rights. Authors. Francois Faure. Contact. Francois.Faure@inria.fr. License. This plugin is distributed under; the same license as the core of SOFA.; . Patents. APP registration. Sponsors. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/doc/index.html:844,plugin,plugin,844,applications/plugins/SofaSimpleGUI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/doc/index.html,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,". Skinning Mapping. Description:. The Skinning Mapping is widely used in computer animation:; ; We set a weight to each simulated node.; By computing the influence of each node on a particle of the skin, we are able to model its deformation. We have implemented lots of different algorithms to let the user configure his skinning mapping the way he desires, adjusting the tradeoff between performance and quality. Key points:. Weighting algorithms: The diffusion of the weights through the structure can be done using: ; 	 ; Inverse of the square distance; Linear along the distance; Hermite; Spline. Distance algorithms: To know this influence, we can use the distance of the particle of the skin to each simulated node. This distance can be:; 		 ; Euclidian; Geodesic; Harmonic. Interpolating algorithms: We implemented two methods to interpolate the deformation of the particles:; 		 ; Linear Interpolation: the fastest, but can result in some nasty visual artifacts.; Dual Quaternion: it gives much nicer results, but is slightly slower. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingSkinning.html:307,config,configure,307,examples/Tutorials/Mappings/TutorialMappingSkinning.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingSkinning.html,1,['config'],['configure']
Modifiability,". SofaHAPI. SofaHAPI. Representative; image of the; SofaHAPI plugin. Introduction; Examples; Project structure; Intellectual property; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction. This page explains how to customize the empty plugin. Once you have; read this page, you can replace it with the documentation of your; plugin. To customize the template, you can:. Copy the SofaHAPI directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh ; to replace SofaHAPI; with MyPlugin in all; the file; names and their content:; utils/changeClassName.sh SofaHAPI MyPlugin; cd examples; ../utils/changeClassName.sh SofaHAPI MyPlugin; cd ../doc/; ../utils/changeClassName.sh SofaHAPI MyPlugin. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:61,plugin,plugin,61,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,4,['plugin'],['plugin']
Modifiability,". TestPlugin. TestPlugin. Representative; image of the; TestPlugin plugin. Introduction; Examples; Project structure; Intellectual property; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction. This page explains how to customize the empty plugin. Once you have; read this page, you can replace it with the documentation of your; plugin. To customize the template, you can:. Copy the TestPlugin directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:67,plugin,plugin,67,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,3,['plugin'],['plugin']
Modifiability,". The Graphic User; Interface in SOFA; I) An overview of the GUI; II) Structure; III) Viewers; IV) QtOgreViewer; . An Overview of the GUI. The main; program is divided in two main parts, a rendering window and a control; panel. A slider between them sets their; dimension. Common Interactions:. ANIM: launch the Simulation.; The text field, DTsets the step of time used during the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the change",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:559,config,configuration,559,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,2,['config'],['configuration']
Modifiability,". Topological Mapping (6/7). Description; This step does not continue from the previous steps. It shows a hexahedra mesh which already has mechanical behavior and could be also linked to a surface mesh.; Key points; Press the Edit in Modeler button at the top of this window.; This opens a pre-built scene graph in the Modeler.; This scene includes components we are already familiar with:. An ODE solver and a linear solver. ; MechanicalObject with geometry point positions.; RegularGridTopology is used to create a 3D grid mesh. ; HexahedronFEMForcefield is used to create tetrahedral finite elements on this mechanical system.; DiagonalMass describes a global mass of the mesh elements.; Constraint components are used here to fix the four corners of the upper face of the cube. Results; Run in SOFA and animate. Interact with the cube by holding the Shift key and dragging with the mouse.; This scene represents a 3D cube mesh under gravity. It is the same configuration as the step ""Embedding the Model"". Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/5_TopoMapping.html:961,config,configuration,961,examples/Tutorials/StepByStep/TopologicalMapping/5_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/5_TopoMapping.html,1,['config'],['configuration']
Modifiability,".com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://g",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:233907,config,config,233907,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,.com/sofa-framework/sofa/pull/1631 ); - [SofaMacros] FIX deprecated macro sofa_generate_package [#1446]( https://github.com/sofa-framework/sofa/pull/1446 ); - [SofaMacros] FIX libs copy and plugin deps finding [#1708]( https://github.com/sofa-framework/sofa/pull/1708 ); - [SofaMacros] FIX missing lib copy on Windows [#1711]( https://github.com/sofa-framework/sofa/pull/1711 ); - [SofaMacros] FIX plugins RPATH [#1619]( https://github.com/sofa-framework/sofa/pull/1619 ); - [SofaMacros] Improve RPATH coverage on MacOS [#1713]( https://github.com/sofa-framework/sofa/pull/1713 ); - [SofaMacros] Recursive deps search for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:223947,Plugin,Plugins,223947,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,".com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326426,plugin,plugin,326426,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2445,Plugin,PluginManager,2445,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Plugin'],['PluginManager']
Modifiability,".in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:4054,config,config,4054,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['config'],['config']
Modifiability,/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super init [#3884](https://github.com/sofa-framework/sofa/pull/3884); - [examples] Fix unstable scene constantMomentum.scn [#3886](https://github.com/sofa-framework/sofa/pull/3886); - [SolidMechanics] Use accessors & make geometri,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:40107,plugin,plugins,40107,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,/450 ); - [SofaDefaulttype]; - MapMapSparseMatrix conversion utils with Eigen Sparse [#452]( https://github.com/sofa-framework/sofa/pull/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using SingleLink [#315]( https://github.com/sofa-framework/sofa/pull/315 ); - Add AngularSpringForceField [#334]( https://github.com/sofa-framework/sofa/pull/334 ); - [SofaEulerianFluid]; - Pluginizing the module [#396]( https://github.com/sofa-framework/sofa/pull/396 ); - [SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:307878,Refactor,Refactor,307878,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"/867 ); - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ). **Modules**; - [All] ISSofa bugfix, lot of fixes [#756]( https://github.com/sofa-framework/sofa/pull/756 ); - [All] FIX Windows linkage [#910]( https://github.com/sofa-framework/sofa/pull/910 ); - [SofaGuiQt] Change method to allow antialiased screenshots in QtViewer [#728]( https://github.com/sofa-framework/sofa/pull/728 ); - **[SofaBaseMechanics]** Fix warning scene mass [#779]( https://github.com/sofa-framework/sofa/pull/779 ); - **[SofaBaseMechanics]** FIX DiagonalMass_test [#832]( https://github.com/sofa-framework/sofa/pull/832 ); - **[SofaBaseTopology]** Fix SparseGridTopology initialization with an input mesh [#670]( https://github.com/sofa-framework/sofa/pull/670 ); - [SofaBoundaryCondition] FIX AffineMovementConstraint orientation issue [#824]( https://github.com/sofa-framework/sofa/pull/824 ); - [SofaCarving] Modify the CMake config file to allow other plugins link to Sofa Carving [#781]( https://github.com/sofa-framework/sofa/pull/781 ); - **[SofaCore]** FIX: enable ExtVecXf mappings with double floating type [#827]( https://github.com/sofa-framework/sofa/pull/827 ); - [SofaDeformable] Fix MeshSpring ForceField and Loader [#815]( https://github.com/sofa-framework/sofa/pull/815 ); - **[SofaFramework]** Keep SOFA_EXTERN_TEMPLATE macro definition [#870]( https://github.com/sofa-framework/sofa/pull/870 ); - [SofaGui] ADD option to enable VSync (default: OFF) [#722]( https://github.com/sofa-framework/sofa/pull/722 ); - [SofaOpenglVisual] Rollback removal of Ogl components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** FIX bug in toEulerVector [#399]( https://github.com/sofa-framework/sofa/pull/399 ); - **[SofaKernel]** FIX segfault created by static initialisers on OSX/clang compiler [#642]( https://github.com/sofa-framework/sofa/pull/642 ); - **[SofaKernel]** Fix: correct path writing",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:284772,config,config,284772,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"/github.com/sofa-framework/sofa/pull/2645 ); - [SofaSimpleFem] Improve data description [#2740]( https://github.com/sofa-framework/sofa/pull/2740 ); - [SofaSimpleFem][SofaGeneralSimpleFem][SofaMiscFem] Avoid vectors normalization [#2647]( https://github.com/sofa-framework/sofa/pull/2647 ); - [SofaSimulationCore] More generic DefaultVisualManagerLoop [#2549]( https://github.com/sofa-framework/sofa/pull/2549 ); - [SofaSimulationGraph] Add the ability to control where the object is added in a node. [#2396]( https://github.com/sofa-framework/sofa/pull/2396 ); - [SofaSparseSolver] Apply fill in permutation in SparseLDLSolver [#2762]( https://github.com/sofa-framework/sofa/pull/2762 ); - [SofaSparseSolver] Introduction of an asynchronous LDL solver [#2661]( https://github.com/sofa-framework/sofa/pull/2661 ); - [SofaSparseSolver] Added the choice to compute the decomposition at each step [#2756]( https://github.com/sofa-framework/sofa/pull/2756 ). **Plugins / Projects**; - [plugins] Add BeamAdapter as a new plugin [#2890]( https://github.com/sofa-framework/sofa/pull/2890 ); - [ArticulatedSystemPlugin] ArticulatedSystemMapping new features [#2803]( https://github.com/sofa-framework/sofa/pull/2803 ); - [ArticulatedSystemPlugin] New example [#2804]( https://github.com/sofa-framework/sofa/pull/2804 ); - [SofaCUDA] Add ConstantForceField, MultiMapping and SubsetMultiMapping [#2557]( https://github.com/sofa-framework/sofa/pull/2557 ); - [SofaCUDA] Add benchmark scenes to check CudaMeshSpringForceField [#2556]( https://github.com/sofa-framework/sofa/pull/2556 ); - [SofaCUDA] Add benchmarks logs in .csv file [#2588]( https://github.com/sofa-framework/sofa/pull/2588 ); - [SofaCUDA] Add support for NearestPointROI [#2620]( https://github.com/sofa-framework/sofa/pull/2620 ); - [SofaCUDA] Add support of CudaVector for qt gui dataWidget [#2558]( https://github.com/sofa-framework/sofa/pull/2558 ); - [SofaMatrix] A new plugin adding tools for linear system matrix [#2517]( https://github.c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:102049,Plugin,Plugins,102049,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin']","['Plugins', 'plugin', 'plugins']"
Modifiability,/github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [#2684]( https://github.com/sofa-framework/sofa/pull/2684 ); - [Geomagic] Clean scene and code warnings + minor changes [#2846]( https://github.com/sofa-framework/sofa/pull/2846 ); - [Geomagic] Fix CMake and replace includes from legacy header to new architecture [#3076]( https://github.com/sofa-framework/sofa/pull/3076 ); - [SensableEmulation][CMake] Clean Boost dep [#3067]( https://github.com/sofa-framework/sofa/pull/3067 ); - [SofaAssimp] fix shadow variable [#2844]( https://github.com/sofa-framework/sofa/pull/2844 ); - [SofaCUDA] Fix CMake to compile plugin without legacy headers option [#3077]( https://github.com/sofa-framework/sofa/pull/3077 ); - [SofaCUDA][SofaSphFluid] Remove some getTemplateName deprecated methods [#3144]( https://github.com/sofa-framework/sofa/pull/3144 ); - [SofaCUDA] Better readme [#2597]( https://github.com/sofa-framework/sofa/pull/2597 ); - [SofaCUDA] Clean Cuda Collision models [#2673]( https://github.com/sofa-framework/sofa/pull/2673 ); - [SofaCUDA] Clean and factorize CudaTriangularFEMForceFieldOptim [#2568]( https://github.com/sofa-framework/sofa/pull/2568 ); - [SofaCUDA] Convert standard stream to msg_* API [#2864]( https://github.com/sofa-framework/sofa/pull/2864 ); - [SofaCUDA] Modernize CMake for CUDA [#2878]( https://github.com/sofa-framework/sofa/pull/2878 ); - [SofaCUDA] QuadSpringsSphere scenes [#2598]( https://github.com/sofa-framework/sofa/pull/2598 ); - [SofaCUDA] Remove ca,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:130903,variab,variable,130903,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,/github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture refer,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59184,config,configuration,59184,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,"/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduce visitor to know the number of non-diagonal mass matrices [#2165]( https://github.com/sofa-framework/sofa/pull/2165 ); - [SofaGeneralSimpleFem] Remove \*Containers [#2099]( https://github.com/sofa-framework/sofa/pull/2099 ); - **[SofaHelper]** Add two search paths for every prefixes of the plugin manager [#1824]( https://github.com/sofa-framework/sofa/pull/1824 ); - **[SofaHelper]** Move polygon cube intersection ad-hoc algorithm to SofaBaseTopology [#1772]( https://github.com/sofa-framework/sofa/pull/1772 ); - **[SofaHelper]** Remove SofaSimulationCore dependency from AdvancedTimer [#1770]( https://github.com/sofa-framework/sofa/pull/1770 ); - **[SofaHelper]** Replace boost::shared_ptr for std::shared_ptr [#1901]( https://github.com/sofa-framework/sofa/pull/1901 ); - **[SofaHelper]** remove stream operator<< in accessor [#1808]( https://github.com/sofa-framework/sofa/pull/1808 ); - [SofaMiscCollision] Clean options [#2170]( https://github.com/sofa-framework/sofa/pull/2170 ); - [SofaMiscCollision] Fix multiple bugs in group manager [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Facto",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:174462,plugin,plugin,174462,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7563,Plugin,PluginManager,7563,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,/sofa-framework/sofa/pull/1902 ); - **[SofaHelper]** Remove unused UnitTest class + clean FnDispatcher includes [#1983]( https://github.com/sofa-framework/sofa/pull/1983 ); - [SofaImplicitOdeSolver] Fix Latex format for doxygen [#2205]( https://github.com/sofa-framework/sofa/pull/2205 ); - **[SofaKernel]** Remove last template parameter in Visitor::for_each/for_each_r [#1689]( https://github.com/sofa-framework/sofa/pull/1689 ); - **[SofaKernel]** Remove some dependencies from SofaHelper to SofaCore [#1686]( https://github.com/sofa-framework/sofa/pull/1686 ); - **[SofaKernel]** Removes the method BaseData::getOwnerClass() [#1890]( https://github.com/sofa-framework/sofa/pull/1890 ); - **[SofaKernel][SofaGui]** Move Boost::program_option and remove Boost::system dependencies [#1848]( https://github.com/sofa-framework/sofa/pull/1848 ); - [SofaMiscCollision] Move back to modules (instead of applications/plugins) [#2127]( https://github.com/sofa-framework/sofa/pull/2127 ); - [SofaMiscMapping] Remove unused global variable [#1956]( https://github.com/sofa-framework/sofa/pull/1956 ); - [SofaNonUniformFem] Remove shadow variable [#1874]( https://github.com/sofa-framework/sofa/pull/1874 ); - **[SofaSimpleFem]** FIX wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from TopologyChangeVisitor.h into .cpp [#1905]( https://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844]( https://github.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163](,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:204434,variab,variable,204434,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( https://github.com/sofa-framework/sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene example,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:206915,plugin,plugin,206915,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framewor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330324,Plugin,PluginManager,330324,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,/sofa/pull/2715 ); - [SofaCUDA] Resurrect CudaTetrahedronTLEDForceField [#2865]( https://github.com/sofa-framework/sofa/pull/2865 ); - [SofaCUDA] harmless cleaning of namespace declaration and header inclusion [#2674]( https://github.com/sofa-framework/sofa/pull/2674 ); - [SofaMatrix] Reduce dependency [#2768]( https://github.com/sofa-framework/sofa/pull/2768 ); - [SofaMatrix][SofaBaseLinearSolver] Move GlobalSystemMatrixExporter [#2545]( https://github.com/sofa-framework/sofa/pull/2545 ); - [SofaPhysicsAPI] Clean CMake file and compile without compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.12.00]( https://github.com/sofa-frame,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:132970,variab,variables,132970,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,"/sofa/pull/2756 ). **Plugins / Projects**; - [plugins] Add BeamAdapter as a new plugin [#2890]( https://github.com/sofa-framework/sofa/pull/2890 ); - [ArticulatedSystemPlugin] ArticulatedSystemMapping new features [#2803]( https://github.com/sofa-framework/sofa/pull/2803 ); - [ArticulatedSystemPlugin] New example [#2804]( https://github.com/sofa-framework/sofa/pull/2804 ); - [SofaCUDA] Add ConstantForceField, MultiMapping and SubsetMultiMapping [#2557]( https://github.com/sofa-framework/sofa/pull/2557 ); - [SofaCUDA] Add benchmark scenes to check CudaMeshSpringForceField [#2556]( https://github.com/sofa-framework/sofa/pull/2556 ); - [SofaCUDA] Add benchmarks logs in .csv file [#2588]( https://github.com/sofa-framework/sofa/pull/2588 ); - [SofaCUDA] Add support for NearestPointROI [#2620]( https://github.com/sofa-framework/sofa/pull/2620 ); - [SofaCUDA] Add support of CudaVector for qt gui dataWidget [#2558]( https://github.com/sofa-framework/sofa/pull/2558 ); - [SofaMatrix] A new plugin adding tools for linear system matrix [#2517]( https://github.com/sofa-framework/sofa/pull/2517 ); - [SofaMatrix] Eigen can be used to reorder a mesh in order to reduce fill-in [#2875]( https://github.com/sofa-framework/sofa/pull/2875 ); - [SofaMatrix] Export the compliance matrix of a constraint solver [#2782]( https://github.com/sofa-framework/sofa/pull/2782 ); - [SofaMatrix] More details in the readme file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:103023,plugin,plugin,103023,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigid barycentric mapping [#710]( https://github.com/sofa-framework/sofa/pull/710 ); - **[SofaHelper]** PluginManager now checks for file existence instead of library extension match. [#621]( https://github.com/sofa-framework/sofa/pull/621 ). **Plugins / Projects**; - [HeadlessRecorder] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:295169,Plugin,Plugins,295169,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"0 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - SofaNumpy: bind/share a c++ 1d array as a numpy array; - script.Controller : handle optional arguments before createGraph; - [image]; - raw import: add commented basic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLL",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:339242,Flexible,Flexible,339242,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Flexible'],['Flexible']
Modifiability,0) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82612,plugin,plugins,82612,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding pluginization of DiffusionSolver [#1067]( https://github.com/sofa-framework/sofa/pull/1067 ); - [Modeler] Deactivate Modeler by default, since it is deprecated [#972]( https://github.com/sofa-framework/sofa/pull/972 ). **Examples / Scenes**; - [Scenes] Apply script on all scenes using VisualModel/OglModel [#1081]( https://github.com/sofa-framework/sofa/pull/1081 ). ____________________________________________________________. ## [v18.12]( https://github.com/sofa-framework/sofa/tree/v18.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.06...v18.12 ). ### Deprecated. **Removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead; - [SofaMisc] ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] ForceMaskOff [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] LineBendingSprings [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] WashingMachineForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - ~~[SofaMiscForceField] LennardJonesForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 )~~; - [SofaMiscMapping] CatmullRomSplineMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping] CenterPointMechanicalMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping] CurveMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping] ExternalInterpolationMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping] Projectio",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:275153,Plugin,PluginRepository,275153,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginRepository']
Modifiability,1708]( https://github.com/sofa-framework/sofa/pull/1708 ); - [SofaMacros] FIX missing lib copy on Windows [#1711]( https://github.com/sofa-framework/sofa/pull/1711 ); - [SofaMacros] FIX plugins RPATH [#1619]( https://github.com/sofa-framework/sofa/pull/1619 ); - [SofaMacros] Improve RPATH coverage on MacOS [#1713]( https://github.com/sofa-framework/sofa/pull/1713 ); - [SofaMacros] Recursive deps search for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542]( https://github.com/sofa-framework/sofa/pull/1542 ). **Examples / Scenes**; - [examples] Fix HexahedronForceFieldTopologyChangeHandling scene [#1573]( https://github.com/sofa-framework/sofa/pull/1573 ). **Scrip,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:224194,Flexible,Flexible,224194,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Flexible', 'plugin']","['Flexible', 'pluginized']"
Modifiability,"1]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] AD",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281634,Plugin,Plugins,281634,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,28); - [Collision.Detection.Algorithm] Rename Data [#4674](https://github.com/sofa-framework/sofa/pull/4674); - [Collision.Detection.Intersection] Rename Data [#4675](https://github.com/sofa-framework/sofa/pull/4675); - [Collision.Geometry+Response] Rename Data [#4676](https://github.com/sofa-framework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:20287,config,config,20287,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.12.00]( https://github.com/sofa-framework/sofa/tree/v21.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:133607,Plugin,PluginFinder,133607,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginFinder']
Modifiability,2]( https://github.com/sofa-framework/sofa/pull/2782 ); - [SofaMatrix] More details in the readme file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tree build [#2940]( https://github.com/sofa-framework/sofa/pull/2940 ); - [CMake] FIX out-of-tree build (2) [#2953]( https://github.com/sofa-framework/sofa/pull/2953 ); - [CMake] FIX out-of-tree configure [#2891]( https://github.com/sofa-framework/sofa/pull/2891 ); - [CMake] Fix install config files [#3031]( https://github.com/sofa-framework/sofa/pull/3031 ); - [Config][CMake] Fix include directories [#3023]( https://github.com/sofa-framework/sofa/pull/3023 ); - [project] Remove duplicate entry in clang-format [#3140]( https://github.com/sofa-framework/sofa/pull/3140 ). **Modules**; - [All] Fix compilation when SOFA_FLOATING_POINT_TYPE is set to float [#2560]( https://github.com/sofa-framework/sofa/pull/2560 ); - [All] Move addInput/addOutput from init() to constructor [#2825]( https://github.com/sofa-framework/sofa/pull/2825 ); - [All] Fix missing #include config.h or invalid ordering that disturb the factory's getTarget() to operate properly. [#2693]( https://github.com/sofa-framework/sofa/pull/2693 ); - [Component.IO.Mesh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *Ge,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:104355,config,configure,104355,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configure']
Modifiability,3); - [LinearAlgebra] CompressedRowSparseMatrix: add virtual destructor [#4020](https://github.com/sofa-framework/sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:44725,plugin,plugins,44725,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"3894); - [Simulation.Core] Refactor DefaultAnimationLoop + multithreading [#3959](https://github.com/sofa-framework/sofa/pull/3959); - [LinearSolver.Direct] Parallelization of H A^-1 H^T in SparseLDLSolver [#3986](https://github.com/sofa-framework/sofa/pull/3986); - [LinearSystem] Optim: Only account for affected DoFs [#4001](https://github.com/sofa-framework/sofa/pull/4001); - [GitHub] Action to check labels [#4079](https://github.com/sofa-framework/sofa/pull/4079); - [MultiThreading] Introduce parallel CG [#4138](https://github.com/sofa-framework/sofa/pull/4138); - [LinearSystem] Introduce constant sparsity matrix assembly [#4158](https://github.com/sofa-framework/sofa/pull/4158); - [LinearSolver] Implement parallel inverse product for all linear solvers [#4255](https://github.com/sofa-framework/sofa/pull/4255). ### Breaking; - [Constraint.Lagrangian] Activate the export of lambda forces by default [#3857](https://github.com/sofa-framework/sofa/pull/3857); - [all] Change variable name supportOnlySymmetricMatrix in MParams [#3861](https://github.com/sofa-framework/sofa/pull/3861); - [all] Unify how Animation/Visual loops are handling their ""targetNode"" [#3945](https://github.com/sofa-framework/sofa/pull/3945); - [MechanicalLoad] Implement buildStiffnessMatrix for PlaneForceField [#3972](https://github.com/sofa-framework/sofa/pull/3972); - [AnimationLoop] Change the default constraint solver in FreeMotionAnimationLoop [#3994](https://github.com/sofa-framework/sofa/pull/3994); - [Spring] Implement buildStiffnessMatrix in PolynomialRestShapeSpringsForceField [#4009](https://github.com/sofa-framework/sofa/pull/4009); - [MechanicalLoad] Remove the data force in ConstantFF and solves circular dependency [#4019](https://github.com/sofa-framework/sofa/pull/4019); - [all] Lifecycle v23.12 1/n [#4034](https://github.com/sofa-framework/sofa/pull/4034); - [Core] Make doDrawVisual final [#4045](https://github.com/sofa-framework/sofa/pull/4045); - [Visual] ADD a visualization fl",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:22955,variab,variable,22955,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"42); - [github] Fix name of PR author in GitHub workflows [#4267](https://github.com/sofa-framework/sofa/pull/4267); - [SofaCUDA] Dont use both version of cublas (legacy or v2) [#4274](https://github.com/sofa-framework/sofa/pull/4274); - [Sofa.GUI.Qt] Add cmake module for QGLViewer [#4290](https://github.com/sofa-framework/sofa/pull/4290); - [all] Fix warnings [#4291](https://github.com/sofa-framework/sofa/pull/4291); - [LinearAlgera, Core] Fix linking with LTO on MacOS/Clang [#4293](https://github.com/sofa-framework/sofa/pull/4293); - [MultiThreading] Avoid Static Initialization Order Fiasco [#4307](https://github.com/sofa-framework/sofa/pull/4307); - [SofaCUDA] FIX compilation SofaCUDA along with SparseGrid with Cuda12 [#4319](https://github.com/sofa-framework/sofa/pull/4319); - [SofaAssimp] Fix the FindAssimp.cmake [#4326](https://github.com/sofa-framework/sofa/pull/4326); - [image] image_gui to compile with Qt6 [#4330](https://github.com/sofa-framework/sofa/pull/4330); - [Haption] Partially fix the plugin [#4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:38685,plugin,plugin,38685,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-fra",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48635,refactor,refactor,48635,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactor']
Modifiability,4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedde,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39699,config,config,39699,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"4390](https://github.com/sofa-framework/sofa/pull/4390); - [Type] Remove test of a deprecated constructor [#4391](https://github.com/sofa-framework/sofa/pull/4391); - [Core] Remove pragma directive in cpp file [#4393](https://github.com/sofa-framework/sofa/pull/4393); - [All] Rename license file into LICENSE-LGPL.md to follow github repository rules [#4410](https://github.com/sofa-framework/sofa/pull/4410); - [SofaCUDA] Generalize the use of MessageDispatcher in SofaCUDA [#4430](https://github.com/sofa-framework/sofa/pull/4430); - [Core] Add documentation for the method BaseMapping::buildGeometricStiffnessMatrix [#4431](https://github.com/sofa-framework/sofa/pull/4431); - [LinearAlgebra] Factorize value filtering [#4442](https://github.com/sofa-framework/sofa/pull/4442); - [GitHub] Clean existing actions [#4444](https://github.com/sofa-framework/sofa/pull/4444); - [SofaCUDA] Initialize module from another module [#4453](https://github.com/sofa-framework/sofa/pull/4453); - [SofaDistanceGrid] remove shadow variable [#4455](https://github.com/sofa-framework/sofa/pull/4455); - [Defaulttype, LinearAlgera] Fix warnings [#4465](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:14062,variab,variable,14062,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,47](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unus,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39773,Config,Config,39773,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,5 ); - **[SofaFramework]** Keep SOFA_EXTERN_TEMPLATE macro definition [#870]( https://github.com/sofa-framework/sofa/pull/870 ); - [SofaGui] ADD option to enable VSync (default: OFF) [#722]( https://github.com/sofa-framework/sofa/pull/722 ); - [SofaOpenglVisual] Rollback removal of Ogl components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** FIX bug in toEulerVector [#399]( https://github.com/sofa-framework/sofa/pull/399 ); - **[SofaKernel]** FIX segfault created by static initialisers on OSX/clang compiler [#642]( https://github.com/sofa-framework/sofa/pull/642 ); - **[SofaKernel]** Fix: correct path writing in sofa_set_python_directory macro [#763]( https://github.com/sofa-framework/sofa/pull/763 ); - **[SofaKernel]** Check if Quaternion has norm 1 [#790]( https://github.com/sofa-framework/sofa/pull/790 ); - [SofaPreconditioner] FIX ShewchukPCGLinearSolver [#737]( https://github.com/sofa-framework/sofa/pull/737 ). **Plugins / Projects**; - [CGALPlugin] fix compilation [#783]( https://github.com/sofa-framework/sofa/pull/783 ); - [CGALPlugin] Fix compilation for cgal 4.12+ (cgal::polyhedron_3 is now forward declared) [#812]( https://github.com/sofa-framework/sofa/pull/812 ); - [CImgPlugin] CMake/Mac: lower priority for XCode's libpng [#720]( https://github.com/sofa-framework/sofa/pull/720 ); - [Geomagic] Fix broken behavior [#761]( https://github.com/sofa-framework/sofa/pull/761 ); - [Geomagic] Fix scenes [#858]( https://github.com/sofa-framework/sofa/pull/858 ); - [Multithreading] FIX compiling error on Mac [#727]( https://github.com/sofa-framework/sofa/pull/727 ); - [MultiThreading] Fix Livers scenes crash [#792]( https://github.com/sofa-framework/sofa/pull/792 ); - [runSofa] ADD Modules to plugin_list.conf.default [#753]( https://github.com/sofa-framework/sofa/pull/753 ); - [SofaPython][examples] FIX: Fixing the scene... and the typo in the name [#765]( https://github.com/sofa-framework/sofa/pull/765 ); - [Tutorials] FIX oneTetrahed,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:286093,Plugin,Plugins,286093,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"50 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ). **Plugins / Projects**; - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://g",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:213438,plugin,plugin,213438,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,7 ); - [SofaGeneralEngine] Remove useless create() function in some components [#1622]( https://github.com/sofa-framework/sofa/pull/1622 ); - [SofaGuiQt] Move libQGLViewer lib into its module [#1617]( https://github.com/sofa-framework/sofa/pull/1617 ); - [SofaHaptics] Small fix on LCPForceFeedback haptic rendering [#1537]( https://github.com/sofa-framework/sofa/pull/1537 ); - **[SofaHelper]** DrawTool uses RGBAColor now (instead of Vec4f) [#1626]( https://github.com/sofa-framework/sofa/pull/1626 ); - **[SofaHelper]** Remove OpenGL dependency in vector_device [#1646]( https://github.com/sofa-framework/sofa/pull/1646 ); - **[SofaKernel]** Clean namespace BarycentricMapper [#1571]( https://github.com/sofa-framework/sofa/pull/1571 ); - **[SofaKernel]** Factorize some code for maintenance [#1569]( https://github.com/sofa-framework/sofa/pull/1569 ); - **[SofaKernel]** Refactor the FileRepository constructors [#1610]( https://github.com/sofa-framework/sofa/pull/1610 ); - **[SofaKernel]** Remove core::Plugin/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ); - [Geomagic] Update demo scenes to use direct solvers. [#1533]( https://github.com/sofa-framework/sofa/pull/1533 ); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:227866,Plugin,Plugin,227866,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,76]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:213881,Plugin,Plugins,213881,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"8]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into Co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261635,Plugin,Plugins,261635,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,94 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-frame,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:210743,Plugin,PluginManager,210743,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,9]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810 ); - [examples] Move PointSplatModel and SpatialGridPointModel scenes into Sph plugin [#2847]( https://github.com/sofa-framework/sofa/pull/2847 ); - [examples] FIX scenes with old CollisionGroupManager component [#3198]( https://github.com/sofa-framework/sofa/pull/3198 ). **Scripts / Tools**; - [tools] Correction of the import of the queue library [#2572]( https://github.com/sofa-framework/sofa/pull/2572 ). ### Cleanings. **Project**; - [GitHub] Update Changelog and version [#2546]( https://github.com/sofa-framework/sofa/pull/2546 ); - [Git] Clean project files [#2884]( https://github.com/sofa-framework/sofa/pull/2884 ); - [Project] Update README [#2905]( https://github.com/sofa-framework/sofa/pull/2905 ); - [Readme] Delete references to removed/moved directories in licence paragraph [#2547]( https://github.com/sofa-framework/sofa/pull/2547 ); - [doc] Remove old doc materials [#2889]( https://github.com/sofa-framework/sofa/pull/2889 ). **Architecture**; - [CMake] Clean modules post-NG [#2980]( https://github.com/sofa-frame,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:118378,plugin,plugin,118378,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( https://github.com/sofa-framework/sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotationa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:207030,plugin,plugin,207030,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340600,plugin,plugin,340600,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"; ${SOFAVALIDATION_SRC}/DevMonitorManager.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.inl; ${SOFAVALIDATION_SRC}/EvalPointsDistance.h; ${SOFAVALIDATION_SRC}/EvalPointsDistance.inl; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.h; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.inl; ${SOFAVALIDATION_SRC}/ExtraMonitor.h; ${SOFAVALIDATION_SRC}/ExtraMonitor.inl; ${SOFAVALIDATION_SRC}/Monitor.h; ${SOFAVALIDATION_SRC}/Monitor.inl; ). set(SOURCE_FILES; ${SOFAVALIDATION_SRC}/initSofaValidation.cpp; ${SOFAVALIDATION_SRC}/DataController.cpp; ${SOFAVALIDATION_SRC}/DataMonitor.cpp; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.cpp; ${SOFAVALIDATION_SRC}/DevMonitorManager.cpp; ${SOFAVALIDATION_SRC}/DevTensionMonitor.cpp; ${SOFAVALIDATION_SRC}/EvalPointsDistance.cpp; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.cpp; ${SOFAVALIDATION_SRC}/ExtraMonitor.cpp; ${SOFAVALIDATION_SRC}/Monitor.cpp; ). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common Sofa.Component.Collision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ). ## Tests; cmake_dependent_option(SOFAVALIDATION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFAVALIDATION_BUILD_TESTS); enable_testing(); add_subdirectory(SofaValidation_test); endif(). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt:2173,plugin,plugins,2173,applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,"; **********************************************; * Assimp plugin.txt *; **********************************************. AUTHOR :; - epernod (Erik Pernod); ; CONTACT:; - erik.pernod@gmail.com . LICENSE :; - Assimp is released as Open Source under the terms of a 3-clause BSD license.; - License of this Plugin: LGPL. OTHER COMMENTS :. Open Asset Import Library (short name: Assimp) is a portable Open Source library to import various well-known 3D model formats in a uniform manner. ; The most recent version also knows how to export 3D files and is therefore suitable as a general-purpose 3D model converter. ; See the feature list. - Library web page: http://www.assimp.org/; - Source code on github: https://github.com/assimp/assimp; - Release version: https://github.com/assimp/assimp/releases; - Library version tested: 4.1.0. Important: For the moment only single Mesh is handle. That is to say, if a multi mesh is loaded, only one Sofa Mesh will be created by merging all sub meshes.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt:59,plugin,plugin,59,applications/plugins/SofaAssimp/README_AssimpPlugin.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt,3,"['Plugin', 'plugin', 'portab']","['Plugin', 'plugin', 'portable']"
Modifiability,"; ************************************; * BulletCollisionDetection.txt *; ************************************. AUTHOR :; Moreno TRLIN. LICENCE :; - Private. OTHER COMMENTS :. UTILISATION DU PLUGIN :; Tout d'abord il faut le mettre dans le dossier des plugins et le renommer en BulletCollisionDetection si ce n'est pas; le cas. Dans la scène construite il faut mettre les composants BulletCollisionDetection et BulletIntersection pour pouvoir; traiter les BulletCollisionModel (interface entre les collision model de bullet et sofa). BulletCollisionDetection fait office de broad et narrow phase (d'ailleurs il est possible de choisir la broad phase,; les champs useSAP et useSimpleBroadPhase... proposent cette possibilité). Il ne faut donc mettre aucune; autre broad ou narrow phase dans la scène. BulletIntersection sert à insérer les contacts de bullet dans sofa; grâce à l'intermédiaire du BtInterManager en les triant selon leur type. Le champ contactDistance de BulletIntersection; spécifie la distance à partir de laquelle un contact sofa est créé. BulletIntersection hérite d'Intersection et BaseIntersector,; il ne faut en aucun cas mettre d'autres composants héritant d'Intersection dans la scène sofa. Les BulletCollisionModel sont l'interface entre les collision model de bullet et sofa. BulletCollisionModel est une classe; abstraite. Toute classe qui en hérite doit aussi hériter du collision model de sofa lui corresondant. Ainsi, BulletTriangleModel; hérite à la fois de TriangleModel (sofa) et de BulletCollisionModel, et, contient les objets bullet nécessaires à la construction; d'un mesh. Des exemples de scènes sont fournies dans le dossier examples. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/BulletCollisionDetection.txt:191,PLUGIN,PLUGIN,191,applications/plugins/BulletCollisionDetection/BulletCollisionDetection.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/BulletCollisionDetection.txt,2,"['PLUGIN', 'plugin']","['PLUGIN', 'plugins']"
Modifiability,; ************************************; * PluginSensable.txt *; ************************************. AUTHOR :; - C.Duriez. LICENCE :; - None. OTHER COMMENTS :; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/PluginHaption.txt:42,Plugin,PluginSensable,42,applications/plugins/Haption/PluginHaption.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/PluginHaption.txt,1,['Plugin'],['PluginSensable']
Modifiability,; ************************************; * PluginSensable.txt *; ************************************. AUTHOR :; - C.Duriez. LICENSE :; - None. OTHER COMMENTS :; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Sensable/PluginSensable.txt:42,Plugin,PluginSensable,42,applications/plugins/Sensable/PluginSensable.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Sensable/PluginSensable.txt,1,['Plugin'],['PluginSensable']
Modifiability,; ************************************; * PluginXitact.txt *; ************************************. AUTHOR :; - C.Duriez. LICENCE :; - None. OTHER COMMENTS :; From the Xitact SDK:; - XiRobot.lib should be placed in Sofa/lib/win32/Common; - XiRobot.dll should be placed in Sofa/bin; - XiTrocarInterface.h should be placed in Sofa/include; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Xitact/PluginXitact.txt:42,Plugin,PluginXitact,42,applications/plugins/Xitact/PluginXitact.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Xitact/PluginXitact.txt,1,['Plugin'],['PluginXitact']
Modifiability,"; ************************************; * SimpleGUI plugin *; ************************************; A new design for Sofa GUI.; Authors: Francois Faure, Olivier Carre; Documentation: See doc/index.html; License: Same as the core of Sofa; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/README.txt:52,plugin,plugin,52,applications/plugins/SofaSimpleGUI/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/README.txt,1,['plugin'],['plugin']
Modifiability,; ************************************; * SofaCarving.txt *; ************************************. AUTHOR :; - Brina Goyette; - Erik Pernod (Version 0.3 - 2018-07-12). . LICENCE :; - LGPL. OTHER COMMENTS :. The plugin include:; - CarvingManager handling carving operations between a tool and an object. ; The CarvingManager class will perform topological resection on a triangle surface (could be on top of tetrahedron topology); The tool performing the carving as well as the object to carved need to be represented by collision models; Detecting the collision is done using the scene Intersection and NarrowPhaseDetection pipeline.; - 2 simples scenes showing a sphere carving a cylinder volume with different parameters; - A scene showing how to use the carving Manager on a tool object model. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt:211,plugin,plugin,211,applications/plugins/SofaCarving/SofaCarving.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt,1,['plugin'],['plugin']
Modifiability,; - [Components] Add functions to visualization of TetrahedronFemForceField [#3821](https://github.com/sofa-framework/sofa/pull/3821); - [LinearAlgebra] Change access specifier for the method set [#3834](https://github.com/sofa-framework/sofa/pull/3834); - [Mapping.NonLinear] Warns when non-symmetric matrix is produced [#3838](https://github.com/sofa-framework/sofa/pull/3838); - [Spring] Limit spring force to some axis [#3849](https://github.com/sofa-framework/sofa/pull/3849); - [Spring] Limit spring force to some axis [#3850](https://github.com/sofa-framework/sofa/pull/3850); - [Constraint] Add tag to classify constraints [#3888](https://github.com/sofa-framework/sofa/pull/3888); - [Spring] Rename RestShapeSpringsForceField to a more user-oriented name [#3903](https://github.com/sofa-framework/sofa/pull/3903); - [Mapping.NonLinear] Implement buildGeometricStiffnessMatrix for DistanceFromTargetMapping + example [#3921](https://github.com/sofa-framework/sofa/pull/3921); - [Config] Allow fast math mode for gcc/clang [#3922](https://github.com/sofa-framework/sofa/pull/3922); - [all] Use NVI design pattern for drawVisual [#3931](https://github.com/sofa-framework/sofa/pull/3931); - [all] Add DeprecatedData and RemovedData [#3934](https://github.com/sofa-framework/sofa/pull/3934); - [Helper] add the experimental filesystem library for gcc-8 compilation [#3944](https://github.com/sofa-framework/sofa/pull/3944); - [FEM.Elastic] Implement buildStiffnessMatrix in HexahedralFEMForceField [#3969](https://github.com/sofa-framework/sofa/pull/3969); - [Spring] Implement buildStiffnessMatrix for SpringForceField [#3970](https://github.com/sofa-framework/sofa/pull/3970); - [MechanicalLoad] Implement buildStiffnessMatrix for LinearForceField [#3973](https://github.com/sofa-framework/sofa/pull/3973); - [Collision.Response.Contact] Implement buildStiffnessMatrix in PenalityContactForceField [#3974](https://github.com/sofa-framework/sofa/pull/3974); - [FEM.Elastic] Implement buildStiffne,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:26052,Config,Config,26052,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"; - [Sofa.Core] Remove the use of Link in MechanicalParams & ConstraintParams [#3304](https://github.com/sofa-framework/sofa/pull/3304) ; - [Type] Disable deprecated methods [#3346](https://github.com/sofa-framework/sofa/pull/3346) ; - [Type] Deprecate Color.h [#3347](https://github.com/sofa-framework/sofa/pull/3347) ; - [Type] equalsZero returns bool, not a real [#3371](https://github.com/sofa-framework/sofa/pull/3371) ; - [Helper] Deprecate error-prone resize and add emplace_back [#3373](https://github.com/sofa-framework/sofa/pull/3373) ; - [Simulation] Change LoadFromMemory signature to remove unused parameter Size [#3376](https://github.com/sofa-framework/sofa/pull/3376) ; - [Sofa.Core] VecId: move definition of VecTypeLabels in its own Translation Unit [#3401](https://github.com/sofa-framework/sofa/pull/3401) ; - [Sofa.Core] TagSet: move method definitions in cpp [#3403](https://github.com/sofa-framework/sofa/pull/3403) ; - [Sofa.Config] CMake: Remove ""both"" as a choice for SOFA_FLOATING_POINT_TYPE parameter [#3436](https://github.com/sofa-framework/sofa/pull/3436) ; - [Simulation.Core] Clean Multithreading code [#3448](https://github.com/sofa-framework/sofa/pull/3448) ; - [Core] Minor cleaning [#3492](https://github.com/sofa-framework/sofa/pull/3492) . **Modules**; - [all] Remove code disabled in v21.06 [#3163](https://github.com/sofa-framework/sofa/pull/3163) ; - [Spring] RestSpringsForceField: Unify Vec/Rigid implementation [#3175](https://github.com/sofa-framework/sofa/pull/3175) ; - [LinearSolver.Direct] BTDLinearSolver: Clean debug informations and rename data [#3226](https://github.com/sofa-framework/sofa/pull/3226) ; - [all] Set of warning fixes [#3227](https://github.com/sofa-framework/sofa/pull/3227) ; - [All] Remove deprecation warnings while building the deprecated thing itself [#3236](https://github.com/sofa-framework/sofa/pull/3236) ; - [LinearAlgebra] Remove deprecated code [#3251](https://github.com/sofa-framework/sofa/pull/3251) ; - [tests] Fix ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:85925,Config,Config,85925,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"; - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ). **Plugins / Projects**; - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / P",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:212846,Plugin,Plugins,212846,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"; - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ). **Other**; - [Tools]; - Update astyle config [#550]( https://github.com/sofa-framework/sofa/pull/550 ). ### Bug Fixes. **Kernel modules**; - [All]; - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - Fix computeBBox functions [#527]( https://github.com/sofa-framework/sofa/pull/527 ); - CMake: FIX Boost::program_options finding in install [#618]( https://github.com/sofa-framework/sofa/pull/618 ); - [SofaBaseLinearSolver]; - FIX no step if condition on denominator is met at first step [#521]( https://github.com/sofa-framework/sofa/pull/521 ); - FIX breaking condition in CG at first step regarding threshold [#556]( https://github.com/sofa-framework/sofa/pull/556 ); - [SofaBaseMechanics]; - Make sure the mechanical object's state vectors size matches their respective argument size [#406]( https://github.com/sofa-framework/sofa/pull",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:311297,Plugin,Pluginizing,311297,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,; - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal drawings [#2206]( https://github.com/sofa-framework/sofa/pull/2206 ); - [CGALPlugin] Fix compilation errors related to SOFA.GL and types converted to DataTypes [#2065]( https://github.com/sofa-framework/sofa/pull/2065 ); - [CImgPlugin] Fix unit test [#2147]( https://github.com/sofa-framework/sofa/pull/2147 ); - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ); - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [Geomagic] Fix compilation of GeomagicVisualModel due to change in MechanicalVisitor [#2113]( https://github.com/sofa-framework/sofa/pull/2113 ); - [LMConstraint] Fix collision model [#1819]( https://github.com/sofa-framework/sofa/pull/1819 ); - [LMConstraint] Fix unload [#1831]( https://github.com/sofa-framework/sofa/pull/1831 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaCUDA] Ignore example scenes using SofaCUDA on CI [#2042]( https://github.com/sofa-framework/sofa/pull/2042 ); - [SofaCUDA] Quick fix for SofaCUDA NVCC flags include not found during CMake setup [#2022]( https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:192221,plugin,plugin,192221,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"; SofaBaseVisual. # SofaSimulation; SofaSimulationCommon; SofaSimulationGraph. # SofaCommon; SofaDeformable; SofaEngine; SofaExplicitOdeSolver; SofaImplicitOdeSolver; SofaLoader; SofaMeshCollision; SofaObjectInteraction; SofaRigid; SofaSimpleFem. # SofaGeneral; SofaBoundaryCondition; SofaConstraint; SofaGeneralAnimationLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralLoader; SofaGeneralMeshCollision; SofaGeneralObjectInteraction; SofaGeneralRigid; SofaGeneralTopology; SofaGeneralVisual; SofaGraphComponent; SofaTopologyMapping; SofaUserInteraction. # SofaAdvanced; SofaNonUniformFem. # SofaMisc; SofaMiscCollision; SofaMiscEngine; SofaMiscExtra; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology. # Other (pluginized from SofaGeneral); SofaDenseSolver; SofaExporter; SofaHaptics; SofaOpenglVisual; SofaPreconditioner; SofaSparseSolver; SofaValidation; ). set(HEADER_FILES; config.h.in; components.h.in; initSofaComponentAll.h; ); set(SOURCE_FILES; initSofaComponentAll.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). set(SOFACOMPONENTALL_MODULES_INCLUDES """"); set(SOFACOMPONENTALL_MODULES_INITS """"); set(SOFACOMPONENTALL_MODULES_HAVES """"); foreach(module ${SOFACOMPONENTALL_MODULES}); string(TOUPPER ""${module}"" module_upper). sofa_find_package(${module} QUIET). if(${module}_FOUND); target_link_libraries(${PROJECT_NAME} ${module}); set(SOFACOMPONENTALL_MODULES_INCLUDES ""${SOFACOMPONENTALL_MODULES_INCLUDES}\n#include <${module}/init${module}.h>""); set(SOFACOMPONENTALL_MODULES_INITS ""${SOFACOMPONENTALL_MODULES_INITS} \\\n init${module}();""); else(); message(""${PROJECT_NAME}: ${module} will not be in the collection.""); endif(); set(SOFACOMPONENTALL_MODULES_HAVES ""${SOFACOMPONENTALL_MODULES_HAVES}\nset(SOFACOMPONENTALL_HAVE_${module_upper} ${SOFACOMPONENTALL_HAVE_${module_upper}})""); e",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt:1216,config,config,1216,applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,1,['config'],['config']
Modifiability,"; l i b Q G L V i e w e r. 	 	 Version 2.8.0. Packaged on March 13, 2022. Copyright (C) 2002-2014 Gilles Debunne. All rights reserved.; http://www.libqglviewer.com; Send e-mail to contact@libqglviewer.com. libQGLViewer is a C++ library based on Qt that eases the creation of OpenGL 3D viewers. It provides some of the typical 3D viewer functionalities, such as the possibility to; move the camera using the mouse, which lacks in most of the other APIs. Other features; include mouse manipulated frames, interpolated keyFrames, object selection, stereo ; display, screenshot saving and much more. It can be used by OpenGL beginners as well as; to create complex applications, being fully customizable and easy to extend. Based on the Qt toolkit, it compiles on any architecture (Unix-Linux, Mac, Windows). ; Full reference documentation and many examples are provided. libQGLViewer does not ; display 3D scenes in various formats, but it can be the base for the coding of such a ; viewer. libQGLViewer uses dual licensing: it is freely available under the terms of the GNU-GPL; license for open source software development, while commercial applications can apply; for a commercial license. The library's main functionalities are:. - A camera trackball to intuitively move the camera in the scene.; - Screenshot saving in different file formats (JPG, PNG, EPS...).; - Easy scene object selection and manipulation using the mouse.; - Definition and replay of keyFrame paths.; - Stereo display (provided that your hardware supports it).; - Clean, well-designed and easily extendable API.; - Many examples and a complete reference documentation. . See the doc/index.html page for details. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/readMe.txt:712,extend,extend,712,Sofa/GUI/Qt/libQGLViewer/readMe.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/readMe.txt,2,['extend'],"['extend', 'extendable']"
Modifiability,"; set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared libraries.; #; # In the build directory, cmake creates binaries with absolute paths in; # RPATH. And by default, it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:3899,Config,Config,3899,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Config'],['Config']
Modifiability,; src/MultiThreading/component/animationloop/AnimationLoopParallelScheduler.cpp; src/MultiThreading/component/collision/detection/algorithm/ParallelBVHNarrowPhase.cpp; src/MultiThreading/component/collision/detection/algorithm/ParallelBruteForceBroadPhase.cpp; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.cpp; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.cpp; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.cpp; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.cpp; src/MultiThreading/SceneCheckMultithreading.cpp; src/MultiThreading/ParallelImplementationsRegistry.cpp; src/MultiThreading/TaskSchedulerUser.cpp; ). find_package(Sofa.Config REQUIRED); if(SOFA_ENABLE_LEGACY_HEADERS); list(APPEND HEADER_FILES; src/MultiThreading/AnimationLoopParallelScheduler.h; src/MultiThreading/AnimationLoopTasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThreading/BeamLinearMapping_tasks.inl; src/MultiThreading/ParallelBVHNarrowPhase.h; src/MultiThreading/ParallelBruteForceBroadPhase.h; src/MultiThreading/ParallelHexahedronFEMForceField.h; src/MultiThreading/ParallelHexahedronFEMForceField.inl; ); endif(). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PRO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:3017,Config,Config,3017,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,1,['Config'],['Config']
Modifiability,= ImplicitField plugin. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/README.md:16,plugin,plugin,16,applications/plugins/SofaImplicitField/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/README.md,1,['plugin'],['plugin']
Modifiability,= SofaExporter. This plugin provide several exporters to save simulation. There is several classes of exporters.; Some of them are saving object surfaces while other are saving complete topologies. Have a look at the examples provided in:; ```; examples/MeshExporter.scn; examples/OBJExporter.scn; examples/STLExporter.scn; ```. For these three exporters. The filename property can have the following pattern:; ```; /absolute/path/file; ./relative/path/file; ./relative/path/nofilename/ (use the object name as filename); ```. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExporter/README.md:21,plugin,plugin,21,applications/collections/deprecated/modules/SofaExporter/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExporter/README.md,1,['plugin'],['plugin']
Modifiability,= SofaMiscForceField. This plugin provide several exporters to save simulation. There is several classes of exporters.; Some of them are saving object surfaces while other are saving complete topologies. Have a look at the examples provided in:; ```; examples/MeshExporter.scn; examples/OBJExporter.scn; examples/STLExporter.scn; ```. For these three exporters. The filename property can have the following pattern:; ```; /absolute/path/file; ./relative/path/file; ./relative/path/nofilename/ (use the object name as filename); ```. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscForceField/README.md:27,plugin,plugin,27,applications/collections/deprecated/modules/SofaMiscForceField/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscForceField/README.md,1,['plugin'],['plugin']
Modifiability,= SofaValidation. This plugin provide tools to validate simulations.; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/README.md:23,plugin,plugin,23,applications/collections/deprecated/modules/SofaValidation/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/README.md,1,['plugin'],['plugin']
Modifiability,= The SofaDistanceGrid plugin. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/README.md:23,plugin,plugin,23,applications/plugins/SofaDistanceGrid/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/README.md,1,['plugin'],['plugin']
Modifiability,ADER_FILES; ${SRC_ROOT}/AboutSOFADialog.h; ${SRC_ROOT}/DataFilenameWidget.h; ${SRC_ROOT}/DataWidget.h; ${SRC_ROOT}/DisplayFlagsDataWidget.h; ${SRC_ROOT}/GenGraphForm.h; ${SRC_ROOT}/LinkWidget.h; ${SRC_ROOT}/MaterialDataWidget.h; ${SRC_ROOT}/RGBAColorDataWidget.h; ${SRC_ROOT}/ModifyObject.h; ${SRC_ROOT}/QDataDescriptionWidget.h; ${SRC_ROOT}/QDisplayDataWidget.h; ${SRC_ROOT}/QDisplayLinkWidget.h; ${SRC_ROOT}/QDisplayPropertyWidget.h; ${SRC_ROOT}/QRGBAColorPicker.h; ${SRC_ROOT}/QModelViewTableUpdater.h; ${SRC_ROOT}/QMouseOperations.h; ${SRC_ROOT}/QMouseWheelAdjustementGuard.h; ${SRC_ROOT}/QSofaListView.h; ${SRC_ROOT}/QSofaStatWidget.h; ${SRC_ROOT}/QTabulationModifyObject.h; ${SRC_ROOT}/QtMessageRedirection.h; ${SRC_ROOT}/QTransformationWidget.h; ${SRC_ROOT}/RealGUI.h; ${SRC_ROOT}/SimpleDataWidget.h; ${SRC_ROOT}/SofaMouseManager.h ; ${SRC_ROOT}/SofaVideoRecorderManager.h; ${SRC_ROOT}/SofaPluginManager.h; ${SRC_ROOT}/SofaSceneGraphWidget.h; ${SRC_ROOT}/WDoubleLineEdit.h ; ); set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/qt.conf.h; ${SRC_ROOT}/FileManagement.h; ${SRC_ROOT}/GraphListenerQListView.h; ${SRC_ROOT}/PickHandlerCallBacks.h; ${SRC_ROOT}/QMenuFilesRecentlyOpened.h; ${SRC_ROOT}/QModelViewTableDataContainer.h; ${SRC_ROOT}/StructDataWidget.h; ${SRC_ROOT}/TableDataWidget.h; ${SRC_ROOT}/viewer/SofaViewer.h; ${SRC_ROOT}/viewer/EngineBackend.h; ${SRC_ROOT}/viewer/VisualModelPolicy.h; ${SRC_ROOT}/GenericWidget.h; ); set(SOURCE_FILES; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/AboutSOFADialog.cpp; ${SRC_ROOT}/DataFilenameWidget.cpp; ${SRC_ROOT}/DataWidget.cpp; ${SRC_ROOT}/DisplayFlagsDataWidget.cpp; ${SRC_ROOT}/FileManagement.cpp; ${SRC_ROOT}/GenGraphForm.cpp; ${SRC_ROOT}/GraphListenerQListView.cpp; ${SRC_ROOT}/LinkWidget.cpp; ${SRC_ROOT}/MaterialDataWidget.cpp; ${SRC_ROOT}/RGBAColorDataWidget.cpp; ${SRC_ROOT}/ModifyObject.cpp; ${SRC_ROOT}/PickHandlerCallBacks.cpp; ${SRC_ROOT}/QDataDescriptionWidget.cpp; ${SRC_ROOT}/QDisplayDataWidget,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:4978,config,config,4978,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['config'],['config']
Modifiability,"APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries(${PROJECT_NAME} PRIVATE Shlwapi); endif(). # Eigen (header only); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). # Link the experimental library if the compiler version is less than gcc-9 or clang-9; if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU""); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 9.1); target_link_libraries(${PROJECT_NAME} PUBLIC stdc++fs); endif(); elseif(CMAKE_CXX_COMPILER_ID STREQUAL ""Clang"");",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:7413,Config,Config,7413,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"A_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA_BUILD_TUTORIALS; sofa_add_subdirectory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ## Applications; add_subdirectory(applications/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:8184,Plugin,Plugins,8184,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,"['Plugin', 'plugin']","['Plugins', 'plugins']"
Modifiability,"BLE 0); endif(); if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_WITH_DOUBLE 1); set(SOFA_WITH_FLOAT 0); endif(). # Options; option(SOFA_DETECTIONOUTPUT_FREEMOTION ""Compile Sofa with the DETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:2896,Variab,Variables,2896,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,"['Variab', 'config']","['Variables', 'configured']"
Modifiability,"CENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CONTACT ""contact@sofa-framework.org""); set(CPACK_PACKAGE_DESCRIPTION ""Real-time multi-physics simulation with an emphasis on medical si",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11299,Plugin,Plugin,11299,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Plugin'],['Plugin']
Modifiability,"CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). targ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:1749,Config,Configure,1749,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['Config'],['Configure']
Modifiability,Change the default drawSize from 0.0 to 1.0 for ROIs. [#3045]( https://github.com/sofa-framework/sofa/pull/3045 ); - [Sofa.Component] Fix compilation when FLOATING_POINT is set to float [#2907]( https://github.com/sofa-framework/sofa/pull/2907 ); - [Sofa.Component] Put the initilization code in init() instead of the entrypoint initExternalPlugin() [#3112]( https://github.com/sofa-framework/sofa/pull/3112 ); - [Sofa.Core] Remove annoying 'unused' warning in StateAccessor [#2835]( https://github.com/sofa-framework/sofa/pull/2835 ); - [Sofa.DefaultType] Removes definition of GLdouble in SolidTypes [#3060]( https://github.com/sofa-framework/sofa/pull/3060 ); - [Sofa.Defaulttype] Revert #2641 (changing unordered_map from map in MapMapSparseMatrix) [#2699]( https://github.com/sofa-framework/sofa/pull/2699 ); - [Sofa.GL.Component] Fix tangents/bitangents type set for OpenGL [#2855]( https://github.com/sofa-framework/sofa/pull/2855 ); - [Sofa.GL] Fix cmake config file for out-of-tree when trying to find glew on Windows [#3098]( https://github.com/sofa-framework/sofa/pull/3098 ); - [Sofa.GL] Fix double->GLFloat conversion [#2628]( https://github.com/sofa-framework/sofa/pull/2628 ); - [Sofa.GL] Fix draw function from *SetGeometryAlgorithms [#3070]( https://github.com/sofa-framework/sofa/pull/3070 ); - [Sofa.GUI.Common] Fix module reference in CMake file [#2994]( https://github.com/sofa-framework/sofa/pull/2994 ); - [Sofa.GUI.Qt] Fix GUI registration [#3007]( https://github.com/sofa-framework/sofa/pull/3007 ); - [Sofa.GUI.Qt] Fix toolTip for button reload [#3199]( https://github.com/sofa-framework/sofa/pull/3199 ); - [Sofa.LinearAlgebra] Fix SOFA_OPENMP [#2669]( https://github.com/sofa-framework/sofa/pull/2669 ); - [Sofa.LinearAlgebra] Fix compilation warnings [#2627]( https://github.com/sofa-framework/sofa/pull/2627 ); - [Sofa.Simulation.Graph] Fix broken context management [#2964]( https://github.com/sofa-framework/sofa/pull/2964 ); - [Sofa.Type] Change (?) default construct,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:109227,config,config,109227,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,CorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - rem,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:317279,Refactor,Refactor,317279,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an Og",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1397,plugin,plugin,1397,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,3,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,DA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstra,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:117007,variab,variable,117007,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"D_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); endif(). if(MSVC); target_link_options(${PROJECT_NAME} PRIVATE ""/DEF:${CMAKE_CURRENT_SOURCE_DIR}/exports.def""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} CImg AUTO_SET_TARGET_PROPERTIES ; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""CImgPlugin""; RELOCATABLE ""plugins""; ). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(CIMGPLUGIN_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(CIMGPLUGIN_BUILD_TESTS); enable_testing(); add_subdirectory(CImgPlugin_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:3723,config,configurations,3723,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,2,"['config', 'plugin']","['configurations', 'plugins']"
Modifiability,EM_SOURCE_DIR}/ConstantSparsityProjectionMethod.inl; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/CreateMatrixDispatcher.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/LinearSystemData.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MappedMassMatrixObserver.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MappedMassMatrixObserver.inl; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MappingGraph.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixFreeSystem.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixLinearSystem.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixLinearSystem.inl; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixProjectionMethod.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/MatrixProjectionMethod.inl; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/TypedMatrixLinearSystem.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/TypedMatrixLinearSystem.inl; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/config.h.in. ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/AssemblingMappedMatrixAccumulator.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/AssemblingMatrixAccumulator.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/BaseAssemblingMatrixAccumulator.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/ConstantLocalMappedMatrix.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/ConstantLocalMatrix.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/SparsityPatternLocalMappedMatrix.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/matrixaccumulators/SparsityPatternLocalMatrix.h. ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/visitors/AssembleGlobalVectorFromLocalVectorVisitor.h; ${SOFACOMPONENTLINEARSOLVERLINEARSYSTEM_SOURCE_DIR}/visitors/DispatchFromGlobalVectorToLocalVectorVisitor.h; ). set(SOURCE_FILES; ${SOFAC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/CMakeLists.txt:1901,config,config,1901,Sofa/Component/LinearSystem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/CMakeLists.txt,1,['config'],['config']
Modifiability,"EPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:6861,Config,Config,6861,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,3,"['Config', 'variab']","['Config', 'variables']"
Modifiability,"ES Kinect.h); list(APPEND SOURCE_FILES Kinect.cpp); message(STATUS ""image: found the freenect library""); else(); message(STATUS ""image: could not find the freenect library, won't build the Kinect component""); endif(); endif(). # OpenMP is bugged in image, forcing it to be single threaded for now; if(SOFA_OPENMP); message( WARNING ""image: deactivating OpenMP"" ); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}); endif(). set(PLUGIN_IMAGE_COMPILE_SET_VALUE 0) # none; if(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""standard""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 1); elseif(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""full""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${PYTHON_FILES}); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_IMAGE""); target_link_libraries(${PROJECT_NAME} Sofa.Core CImgPlugin Sofa.Component.Visual). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL) ; endif(). if(FREENECT_FOUND); target_link_libraries(${PROJECT_NAME} freenect freenect_sync); target_include_directories(${PROJECT_NAME} PUBLIC ""${FREENECT_INCLUDE_DIR}""); endif(). if(ZLIB_FOUND); target_link_libraries(${PROJECT_NAME} ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(); endif(). if(SofaPython_FOUND); target_link_libraries(${PROJECT_NAME} SofaPython) ; endif(). if(MultiThreading_FOUND); target_link_libraries(${PROJECT_NAME} MultiThreading); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(image_test); endif(). if(Sofa.GUI.Qt_FOUND); add_subdirectory(image_gui); endif(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:4123,config,configurations,4123,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,2,"['config', 'plugin']","['configurations', 'plugins']"
Modifiability,"ESRC_ROOT}/trait/is_vector.h; ${SOFATYPESRC_ROOT}/vector.h; ${SOFATYPESRC_ROOT}/vector_Integral.h; ${SOFATYPESRC_ROOT}/vector_Real.h; ${SOFATYPESRC_ROOT}/vector_String.h; ${SOFATYPESRC_ROOT}/vector_T.h; ${SOFATYPESRC_ROOT}/vector_T.inl; ${SOFATYPESRC_ROOT}/vector_algebra.h; ${SOFATYPESRC_ROOT}/vector_algorithm.h; ${SOFATYPESRC_ROOT}/vector_device.h; ). set(SOURCE_FILES; ${SOFATYPESRC_ROOT}/init.cpp; ${SOFATYPESRC_ROOT}/BoundingBox.cpp; ${SOFATYPESRC_ROOT}/DualQuat.cpp; ${SOFATYPESRC_ROOT}/Frame.cpp; ${SOFATYPESRC_ROOT}/Material.cpp; ${SOFATYPESRC_ROOT}/PrimitiveGroup.cpp; ${SOFATYPESRC_ROOT}/Quat.cpp; ${SOFATYPESRC_ROOT}/RGBAColor.cpp; ${SOFATYPESRC_ROOT}/SVector.cpp; ${SOFATYPESRC_ROOT}/SpatialVector.cpp; ${SOFATYPESRC_ROOT}/Transform.cpp; ${SOFATYPESRC_ROOT}/Vec.cpp; ${SOFATYPESRC_ROOT}/fixed_array.cpp; ${SOFATYPESRC_ROOT}/vector.cpp; ${SOFATYPESRC_ROOT}/vector_Integral.cpp; ${SOFATYPESRC_ROOT}/vector_Real.cpp; ${SOFATYPESRC_ROOT}/vector_String.cpp; ). sofa_find_package(Sofa.Config REQUIRED). ## Boost (1.54.0 or higher) is now mandatory.; set(BOOST_MIN_VERSION ""1.54.0""); set(Boost_NO_BOOST_CMAKE TRUE); sofa_find_package(Boost ${BOOST_MIN_VERSION} QUIET); if(NOT Boost_FOUND); if(WIN32); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.\n""; ""Note that Boost autodetection on Windows was removed.\n""; ""Please follow CMake documentation to find Boost on your system.\n""; ""Hint: set BOOST_ROOT to your Boost location.""; ); else(); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.""); endif(); endif(); sofa_find_package(Boost QUIET REQUIRED); sofa_find_package(Sofa.Compat QUIET BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config); target_link_libraries(${PROJECT_NAME} PUBLIC Boost::boost); if(Sofa.Compat_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Compat); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Fra",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt:2215,Config,Config,2215,Sofa/framework/Type/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt,1,['Config'],['Config']
Modifiability,F [#3887](https://github.com/sofa-framework/sofa/pull/3887); - [SofaCUDA] Replace deprecated vector types [#3902](https://github.com/sofa-framework/sofa/pull/3902); - [Helper] Improve text message for users in ComponentChange [#3913](https://github.com/sofa-framework/sofa/pull/3913); - [all] Minor clean of types [#3915](https://github.com/sofa-framework/sofa/pull/3915); - [examples] Remove example for MechanicalMatrixMapper [#3919](https://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateInternal by callback: ConstantFF [#3924](https://github.com/sofa-framework/sofa/pull/3924); - [FEM.Elastic] Implement buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all] Remove few lines of code that do nothing [#3946](https://github.com/sofa-framework/sofa/pull/3946); - [all] Implement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:42160,variab,variables,42160,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,"FA_ALLOW_FETCH_DEPENDENCIES); message(""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching cxxopts...""). include(FetchContent); FetchContent_Declare(cxxopts; GIT_REPOSITORY https://github.com/jarro2783/cxxopts; GIT_TAG v3.1.1; ). FetchContent_GetProperties(cxxopts); if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts). set(CXXOPTS_BUILD_EXAMPLES OFF CACHE INTERNAL """"); set(CXXOPTS_BUILD_TESTS OFF CACHE INTERNAL """"); set(CXXOPTS_ENABLE_INSTALL ON CACHE INTERNAL """"); message(""Sofa.GUI.Common: adding subdirectory ${cxxopts_SOURCE_DIR}""). add_subdirectory(${cxxopts_SOURCE_DIR} ${cxxopts_BINARY_DIR}); endif(); elseif (NOT cxxopts_FOUND); message(FATAL_ERROR ""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install libcxxopts-dev (version>=3.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFAGUICOMMON_ROOT src/sofa/gui/common). set(HEADER_FILES; ${SOFAGUICOMMON_ROOT}/config.h.in; ${SOFAGUICOMMON_ROOT}/init.h; ${SOFAGUICOMMON_ROOT}/BaseGUI.h; ${SOFAGUICOMMON_ROOT}/BaseViewer.h; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.h; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SOFAGUICOMMON_ROOT}/PickHandler.cpp; ${SOFAGUICOMMON_ROOT}/ViewerFactory.cpp; ${SOFAGUICOMMON_ROOT}/ArgumentParser.cpp; ). sofa_find_packag",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:1155,config,config,1155,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,1,['config'],['config']
Modifiability,"FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10899,plugin,plugins,10899,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,FemForceField [#846]( https://github.com/sofa-framework/sofa/pull/846 ); - **[SofaHelper]** Change drawTriangle and drawQuad with internal functions [#813]( https://github.com/sofa-framework/sofa/pull/813 ); - **[SofaHelper]** Update ComponentChange with removed Components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** Remove commented code since years in SofaBaseMechanics [#733]( https://github.com/sofa-framework/sofa/pull/733 ); - **[SofaKernel]** Move ScriptEvent class from SofaPython to core/objectModel [#764]( https://github.com/sofa-framework/sofa/pull/764 ); - [SofaMiscFem] Clean BaseMaterial::handleTopologyChange [#817]( https://github.com/sofa-framework/sofa/pull/817 ); - [SofaMiscMapping] Clean DeformableOnRigidFrameMapping [#848]( https://github.com/sofa-framework/sofa/pull/848 ); - **[SofaSimpleFem]** Stc clean simplefem [#826]( https://github.com/sofa-framework/sofa/pull/826 ). **Plugins / Projects**; - [Multithreading] Move TaskScheduler files from MultiThreading plugin to SofaKernel [#805]( https://github.com/sofa-framework/sofa/pull/805 ). **Examples / Scenes**; - [examples] Remove scenes about deprecated components [#922]( https://github.com/sofa-framework/sofa/pull/922 ). ____________________________________________________________. ## [v18.06]( https://github.com/sofa-framework/sofa/tree/v18.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.12...v18.06 ). ### Deprecated. **Will be removed in v18.06**; - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead. **Will be removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMisc] ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceFi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:289875,Plugin,Plugins,289875,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,"Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""F",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9967,config,configuration,9967,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['configuration']
Modifiability,"GridForceField.inl; ). set(SOURCE_FILES; ${SOFADISTANCEGRID_SRC}/initSofaDistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/DistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/RegisterModelToCollisionFactory.cpp; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RayDistanceGridContact.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/DistanceGridCollisionModel.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/BarycentricPenalityContact_DistanceGrid.cpp; ). set(EXTRA_FILES; README.md; examples/README.md; examples/DistanceGridCollisionModel.scn; examples/FFDDistanceGridCollisionModel.scn; examples/DistanceGridForceField-liver.scn; ). find_package(MiniFlowVR QUIET); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GL QUIET). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL); endif(). if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} PRIVATE miniFlowVR) # Private because not exported in API; message(STATUS ""SofaDistanceGrid: MiniFlowVR found.""); else(); message(STATUS ""SofaDistanceGrid: MiniFlowVR not found, some features will not be compiled.""); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(SofaDistanceGrid_test); endif(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt:3232,config,configurations,3232,applications/plugins/SofaDistanceGrid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt,2,"['config', 'plugin']","['configurations', 'plugins']"
Modifiability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. ## Installation. Ubuntu :; ```; $ sudo apt-get install libavcodec-dev libswscale-dev libavutil-dev libavformat-dev ; ```. ## How to use it. Every needed information are available in runSofa helper.; ```; $ ./runSofa -h; ```. Here is an example for recording a 5 seconds video in 1920x1080 ; ```; $ ./runSofa -g hRecorder --video --width=1920 --height=1080 --fps=60 --recordTime=5 -a --filename aFileName; ```; This example will record in a video file named myFileName a footage of the default runSofa scene (aka caduceus). The dimensions of the video will be 1920x1080, the framerate is set to 60fps, the recording time will be 10 seconds and the option -a animate the scene. Here is an example for screenshots 1920x1080 ; ```; $ ./runSofa -g hRecorder --picture --width=1920 --height=1080 --fps=60 --recordTime=10 -a --filename aFileName; ```; ## Information. You have to use an InteractiveCamera component in your scene and correctly place it before recording.; By example you need to add this line to your caduceus scene :; ```; <InteractiveCamera position=""0 30 90"" lookAt=""0 30 0""/>; ```. ### Authors; Douaille Erwan. ### Contact information; douailleerwan@gmail.com; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/README.md:52,plugin,plugin,52,Sofa/GUI/HeadlessRecorder/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/README.md,1,['plugin'],['plugin']
Modifiability,"IES LINK_FLAGS ""${SOFACONFIG_LINK_OPTIONS}""); endif(); else(); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_LINK_OPTIONS_RELEASE}>""); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_LINK_OPTIONS_DEBUG}>""); target_link_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_LINK_OPTIONS}""); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. # Attach Sofa Version into properties; set_target_properties(${PROJECT_NAME} PROPERTIES Sofa_VERSION ""${Sofa_VERSION}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION_STR ""${SOFA_VERSION_STR}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION ""${SOFA_VERSION}""). set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_URL ""${SOFA_URL}""). # CMakeParseLibraryList.cmake; configure_file(cmake/CMakeParseLibraryList.cmake ${CMAKE_BINARY_DIR}/lib/cmake/CMakeParseLibraryList.cmake COPYONLY); install(FILES cmake/CMakeParseLibraryList.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). # SofaMacros*.cmake; set(macro_files SofaMacros.cmake SofaMacrosConfigure.cmake SofaMacrosInstall.cmake SofaMacrosPython.cmake SofaMacrosUtils.cmake); foreach(macro_file ${macro_files}); configure_file(cmake/${macro_file} ${CMAKE_BINARY_DIR}/lib/cmake/${macro_file} COPYONLY); install(FILES cmake/${macro_file} DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers); endforeach(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Propagate variables (which were in Sofa's global cmakelist); # TODO: Put instead into a target_property ?; set(CMAKE_MODULE_PATH ""${CMAKE_MODULE_PATH}"" PARENT_SCOPE); set(CMAKE_PREFIX_PATH ""${CMAKE_PREFIX_PATH}"" PARENT_SCOPE); set(SOFA_WITH_FLOAT ""${SOFA_WITH_FLOAT}"" PARENT_SCOPE); set(SOFA_WITH_DOUBLE ""${SOFA_WITH_DOUBLE}"" PARENT_SCOPE); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:15838,variab,variables,15838,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['variab'],['variables']
Modifiability,"ILES; ${SOFAMISCCOLLISION_SRC}/README.md; ). list(APPEND HEADER_FILES; ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.h; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.h; ${SOFAMISCCOLLISION_SRC}/SolverMerger.h; ). list(APPEND SOURCE_FILES. ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.cpp; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.cpp; ${SOFAMISCCOLLISION_SRC}/SolverMerger.cpp. ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaGeneralMeshCollision SofaGeneralDeformable SofaConstraint SofaExplicitOdeSolver SofaGeneralExplicitOdeSolver SofaImplicitOdeSolver SofaBaseCollision SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Intersection and Sofa.Component.Collision.Response.Contact instead.; # Moreover, OBB and Capsule-related components have been moved into the external plugin CollisionOBBCapsule.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFAMISCCOLLISION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_B",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt:1798,plugin,plugin,1798,applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"IR}"" DIRECTORY); endif(); get_target_property(qjpeg_loc Qt5::QJpegPlugin LOCATION_RELEASE); get_filename_component(imageformats_dir ""${qjpeg_loc}"" DIRECTORY); get_filename_component(plugins_dir ""${imageformats_dir}"" DIRECTORY); get_filename_component(QT_DATA_DIR ""${plugins_dir}"" DIRECTORY). message(""QT_LIB_DIR = ${QT_LIB_DIR}""); message(""QT_DATA_DIR = ${QT_DATA_DIR}""). if(CMAKE_SYSTEM_NAME STREQUAL Linux); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/linux-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); if(SOFA_BUILD_APP_BUNDLE); include(macdeployqt) # set MACDEPLOYQT_EXECUTABLE; install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/../..\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; \""${MACDEPLOYQT_EXECUTABLE}\""; )""; COMPONENT resources); else(); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); endif(); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND bash; \""${CMAKE_CURRENT_LIST_DIR}/windows-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; )""; COMPONENT resources); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt:2015,Plugin,Plugins,2015,tools/postinstall-fixup/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt,1,['Plugin'],['Plugins']
Modifiability,"Image: a Sofa plugin for 1d, 2d and 3d image manipulation.; Authors: Benjamin Gilles, Matthieu Nesme; License: Same as the core os Sofa; Documentation: see doc/image_2013-1.pdf ; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/README_image.txt:14,plugin,plugin,14,applications/plugins/image/README_image.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/README_image.txt,1,['plugin'],['plugin']
Modifiability,Img & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318612,plugin,plugin,318612,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,ImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver [#2050]( https://github.com/sofa-framework/sofa/pull/2050 ); - **[SofaKernel]** Write template list in error message [#2207]( https://github.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [#2053]( https://github.com/sofa-framework/sofa/pull/2053 ); - [MultiThreading] Parallel brute force broad phase [#2038]( https://github.com/sofa-framework/sofa/pull/2038 ); - [Plugins] Add SofaGLFW GUI [#2062]( https://github.com/sofa-framework/sofa/pull/2062 ); - [SofaCUDA] Add more examples for liver scene and squareTissue [#2016]( https://github.com/sofa-framework/sofa/pull/2016 ). **Examples / Scenes**; - [Benchmark] Introduce benchmark on matrix assembly [#2208]( https://github.com/sofa-framework/sofa/pull/2208 ); - [examples] Improve BeamFEMForceField example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framewor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:180049,Plugin,Plugins,180049,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"LANGUAGES CXX). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.SceneUtility REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED). set(SCENECHECK_SRC_DIR src/SceneChecking). set(HEADER_FILES; ${SCENECHECK_SRC_DIR}/config.h.in; ${SCENECHECK_SRC_DIR}/init.h; ${SCENECHECK_SRC_DIR}/SceneCheck.h; ${SCENECHECK_SRC_DIR}/SceneCheckAPIChange.h; ${SCENECHECK_SRC_DIR}/SceneCheckCollisionResponse.h; ${SCENECHECK_SRC_DIR}/SceneCheckDeprecatedComponents.h; ${SCENECHECK_SRC_DIR}/SceneCheckDuplicatedName.h; ${SCENECHECK_SRC_DIR}/SceneCheckMissingRequiredPlugin.h; ${SCENECHECK_SRC_DIR}/SceneCheckUsingAlias.h; ${SCENECHECK_SRC_DIR}/SceneCheckerListener.h; ${SCENECHECK_SRC_DIR}/SceneCheckerVisitor.h; ). set(SOURCE_FILES; ${SCENECHECK_SRC_DIR}/init.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckAPIChange.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckCollisionResponse.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckDeprecatedComponents.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckDuplicatedName.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckMissingRequiredPlugin.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckUsingAlias.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckerListener.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckerVisitor.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.SceneUtility Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SCENECHECKING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SCENECHECKING_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/CMakeLists.txt:1753,plugin,plugins,1753,applications/projects/SceneChecking/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,"LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); list(APPEND HEADER_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find LMConstraint, won't build BulletConvexHullContacts""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision ${BULLET_LIBRARIES} ${HACD_LIB} CollisionOBBCapsule Sofa.GL). if(Compliant_FOUND); target_link_libraries(${PROJECT_NAME} Compliant); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(BULLETCOLLISIONDETECTION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(BULLETCOLLISIONDETECTION_BUILD_TESTS); enable_testing(); add_subdirectory(BulletCollisionDetection_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:4398,plugin,plugins,4398,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,"Mapping<Rigid3fTypes,.> [#3684](https://github.com/sofa-framework/sofa/pull/3684) ; - [GUI.Qt] Clean and fix in the ""inspector"" panel [#3713](https://github.com/sofa-framework/sofa/pull/3713) ; - [applications] rename shadow variable [#3738](https://github.com/sofa-framework/sofa/pull/3738) ; - [SofaPhysicsAPI] Remove unreachable code [#3771](https://github.com/sofa-framework/sofa/pull/3771) ; - [SofaCarving] Refresh : update file architecture and cmake [#3798](https://github.com/sofa-framework/sofa/pull/3798) ; - [BulletCollisionDetection] Revive project [#3800](https://github.com/sofa-framework/sofa/pull/3800) ; - [PreassembledMass] Make it external [#3802](https://github.com/sofa-framework/sofa/pull/3802) ; - [SofaCUDA] Move explicit template instantiations from CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull/3624) ; - [Scenes] Use ""floating-point type""-independent templates [#3635](https://github.com/sofa-framework/sofa/pull/3635) ; - [examples] Apply rest position in mappings [#3757](https://github.com/sofa-framework/sofa/pull/3757) . ### Refactoring. **Modules**; - [Collision.Detection] Rename DefaultPipeline into CollisionPipeline [#3590](https://github.com/sofa-framework/sofa/pull/3590) ; - [Mapping.NonLinear] Move DistanceMultiMapping in its own files [#3707](https://github.com/sofa-framework/sofa/pull/3707) . **Plugins / Projects**; - [MultiThreading] Reorganize following SOFA structure [#3598](https://github.com/sofa-framework/sofa/pull/3598) ; - [SofaCUDA] Reorganize following SOFA structure (1/n) [#3601](https://github.com/sofa-framework/sofa/pull/3601) ; - [SofaCUDA] Reorganiz",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:66533,plugin,plugins,66533,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugins']
Modifiability,"MatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageProxy.h; ); list(APPEND SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.cpp; ); list(APPEND MOC_HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.h; ); list(APPEND SOFA_MODULES; Sofa.GUI.Qt; ). find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(); if(Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); endif(). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${MOC_HEADER_FILES} ${MOC_FILES}). # Link the plugin library to its dependency(ies).; target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFA_MODULES}); target_link_libraries(${PROJECT_NAME} PRIVATE metis). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; # cmake_dependent_option(SOFAMATRIX_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); #if(SOFAMATRIX_BUILD_TESTS); # enable_testing(); # add_subdirectory(SofaMatrix_test); # endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:2711,plugin,plugin,2711,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( ht",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196473,Refactor,Refactor,196473,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1952,plugin,plugin,1952,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries($",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:6980,config,configuration,6980,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,2,"['Plugin', 'config']","['PluginManager', 'configuration']"
Modifiability,"ON 3.22); project(Sofa.GUI LANGUAGES CXX). set(SOFAGUI_SOURCE_DIR ""src/sofa/gui""). set(SOFAGUI_TARGETS); set(SOFAGUI_MISSINGTARGETS). sofa_add_subdirectory(module Component ${PROJECT_NAME}.Component ON); if(TARGET ${PROJECT_NAME}.Component); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Component); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Component); endif(). sofa_add_subdirectory(library Common ${PROJECT_NAME}.Common ON); if(TARGET ${PROJECT_NAME}.Common); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Common); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Common); endif(). set(SOFAGUI_DIRS Batch Qt); foreach(dir ${SOFAGUI_DIRS}); sofa_add_subdirectory(plugin ${dir} ${PROJECT_NAME}.${dir} ON); if(TARGET ${PROJECT_NAME}.${dir}); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.${dir}); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.${dir}); endif(); endforeach(). # HeadlessRecorder is still an ""optional"" dependency of Sofa.GUI; sofa_add_subdirectory(plugin HeadlessRecorder ${PROJECT_NAME}.HeadlessRecorder OFF); if(TARGET ${PROJECT_NAME}.HeadlessRecorder); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.HeadlessRecorder); set(SOFA_GUI_HAVE_SOFA_GUI_HEADLESSRECORDER 1); endif(). option(LIBRARY_SOFA_GUI ""Build the Sofa.Gui library."" ON). if(LIBRARY_SOFA_GUI); if(SOFAGUI_MISSINGTARGETS); message(""${PROJECT_NAME}: package and library will not be created because some dependencies are missing or disabled: ${SOFAGUI_MISSINGTARGETS}""); return(); endif(). set(HEADER_FILES; ${SOFAGUI_SOURCE_DIR}/config.h.in; ${SOFAGUI_SOURCE_DIR}/init.h; ); set(SOURCE_FILES; ${SOFAGUI_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGUI_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt:1025,plugin,plugin,1025,Sofa/GUI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"ObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:309264,config,config,309264,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"PE parameter [#3436](https://github.com/sofa-framework/sofa/pull/3436) ; - [Simulation.Core] Clean Multithreading code [#3448](https://github.com/sofa-framework/sofa/pull/3448) ; - [Core] Minor cleaning [#3492](https://github.com/sofa-framework/sofa/pull/3492) . **Modules**; - [all] Remove code disabled in v21.06 [#3163](https://github.com/sofa-framework/sofa/pull/3163) ; - [Spring] RestSpringsForceField: Unify Vec/Rigid implementation [#3175](https://github.com/sofa-framework/sofa/pull/3175) ; - [LinearSolver.Direct] BTDLinearSolver: Clean debug informations and rename data [#3226](https://github.com/sofa-framework/sofa/pull/3226) ; - [all] Set of warning fixes [#3227](https://github.com/sofa-framework/sofa/pull/3227) ; - [All] Remove deprecation warnings while building the deprecated thing itself [#3236](https://github.com/sofa-framework/sofa/pull/3236) ; - [LinearAlgebra] Remove deprecated code [#3251](https://github.com/sofa-framework/sofa/pull/3251) ; - [tests] Fix remove SofaComponentAll plugin which doesn't exist anymore [#3266](https://github.com/sofa-framework/sofa/pull/3266) ; - [Test] Remove the output of a test from file versioning [#3285](https://github.com/sofa-framework/sofa/pull/3285) ; - [Collision] Cleaning pass on types [#3287](https://github.com/sofa-framework/sofa/pull/3287) ; - [S.C.MechanicalLoad] PlaneForcefield: Fix ""potential divide by zero"" warnings in msvc [#3315](https://github.com/sofa-framework/sofa/pull/3315) ; - [LinearAlgebra] Explicit instantiations and extern template for some matrices [#3334](https://github.com/sofa-framework/sofa/pull/3334) ; - [Mapping] Add checks at init in TopologicalMapping [#3339](https://github.com/sofa-framework/sofa/pull/3339) ; - [Topology.Container.Grid] trivial optimization in GridTopology [#3348](https://github.com/sofa-framework/sofa/pull/3348) ; - [All] Reduce calls to getValue [#3356](https://github.com/sofa-framework/sofa/pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:87001,plugin,plugin,87001,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"PI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:1855,config,configurations,1855,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,1,['config'],['configurations']
Modifiability,"PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared li",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:3512,config,configuration,3512,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,Plugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8899,plugin,plugins,8899,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"QUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries(${PROJECT_NAME} PRIVATE Shlwapi); endif(). # Eigen (header only); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Ei",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:7194,config,config,7194,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['config'],['config']
Modifiability,RC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/objectmodel/DataFileName.cpp; ${SRC_ROOT}/objectmodel/DataFileNameVector.cpp; ${SRC_ROOT}/objectmodel/DataLink.cpp; ${SRC_ROOT}/objectmodel/DetachNodeEvent.cpp; ${SRC_ROOT}/objectmodel/DeprecatedData.cpp; ${SRC_ROOT}/objectmodel/Event.cpp; ${SRC_ROOT}/objectmodel/GUIEvent.cpp; ${SRC_ROOT}/objectmodel/HapticDeviceEvent.cpp; ${SRC_ROOT}/objectmodel/IdleEvent.cpp; ${SRC_ROOT}/objectmodel/JoystickEvent.cpp; ${SRC_ROOT}/objectmodel/KeypressedEvent.cpp; ${SRC_ROOT}/objectmodel/KeyreleasedEvent.cpp; ${SRC_ROOT}/objectmodel/MouseEvent.cpp; ${SRC_ROOT}/objectmodel/ScriptEvent.cpp; ${SRC_ROOT}/objectmodel/Tag.cpp; ${SRC_ROOT}/objectmodel/TagSet.cpp; ${SRC_ROOT}/topology/BaseMeshTopology.cpp; ${SRC_ROOT}/topology/BaseTop,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10763,Config,ConfigurationSetting,10763,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Config'],['ConfigurationSetting']
Modifiability,"README.md; =========. This plugin requires the following dependencies:; - gfortran; - blas; - lapack; - gomp. Download the Pardiso library and license key from https://www.pardiso-project.org. In your home directory, create a file ""pardiso.lic"" which includes the license key. When configuring SOFA in CMake, fill the path variable ""PARDISO_LIB"" with the path to the pardiso library you downloaded.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/README.md:27,plugin,plugin,27,applications/plugins/SofaPardisoSolver/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/README.md,3,"['config', 'plugin', 'variab']","['configuring', 'plugin', 'variable']"
Modifiability,ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/T,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:4960,Plugin,PluginManager,4960,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Plugin'],['PluginManager']
Modifiability,"RY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${So",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11010,plugin,plugins,11010,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,"Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ; - [AnimationLoop] Call super init in FreeMotionAnimationLoop [#3791](https://github.com/sofa-framework/sofa/pull/3791) ; - [Hyperelastic] Reformat files and add override attribute [#3792](https://github.com/sofa-framework/sofa/pull/3792) ; - [Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals() [#3805](https://github.com/sofa-framework/sofa/pull/3805) ; - [Constraint] Change print variable names to be consistent with doc [#3816](https://github.com/sofa-framework/sofa/pull/3816) ; - [Components] rename shadow variable [#3818](https://github.com/sofa-framework/sofa/pull/3818) ; - [All] Remove trivial warnings [#3823](https://github.com/sofa-framework/sofa/pull/3823) ; - [Lagrangian.Model] Missing _API keyword [#3833](https://github.com/sofa-framework/sofa/pull/3833) ; - [All] Remove warnings for v23.06 [#3911](https://github.com/sofa-framework/sofa/pull/3911) . **Plugins / Projects**; - [plugins] rename shadow variable [#3581](https://github.com/sofa-framework/sofa/pull/3581) ; - [SofaCUDA] Clean removed code and add useful one [#3632](https://github.com/sofa-framework/sofa/pull/3632) ; - [GUI.Qt, Multithreading] Fix compilation when SReal=float [#3637](https://github.com/sofa-framework/sofa/pull/3637) ; - [MultiThreading] Remove obsolete documentation [#3667](https://github.com/sofa-framework/sofa/pull/3667) ; - [Multithreading] Fix AnimationLoopParallelScheduler",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:64461,variab,variable,64461,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,S [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginization [#609]( https://github.com/sofa-framework/sofa/pull/609 ); - [CImgPlugin] FIX malformed cflag append [#622]( https://github.com/sofa-framework/sofa/pull/622 ); - [HeadlessRecorder] Fix headless recorder stream definition [#666]( https://github.com/sofa-framework/sofa/pull/666 ); - [MultiThreading] FIX: add createSubelements param in MeshGmshLoader [#626]( https://github.com/sofa-framework/sofa/pull/626 ); - [runSofa] Fix compilation when SofaGuiQt is not activated [#599]( https://github.com/sofa-framework/sofa/pull/599 ); - [runSofa] ADD infinite iterations option to batch gui [#613]( https://github.com/sofa-framework/sofa/pull/613 ); - [runSofa] FIX missing resources [#758]( https://github.com/sofa-framewor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:297807,Plugin,Plugins,297807,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] Update on demand as designed initially [#751]( https://github.com/sofa-framework/sofa/pull/751 ); - [SofaPython] ADD a custom __dir__",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:282155,plugin,plugin,282155,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"TIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS_DEBUG STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS ""${SOFACONFIG_LINK_OPTIONS}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS ""${SOFACONFIG_LINK_OPTIONS}""); endif(); else(); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_LINK_OPTIONS_RELEASE}>""); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_LINK_OPTIONS_DEBUG}>""); target_link_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_LINK_OPTIONS}""); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. # Attach Sofa Version into properties; set_target_properties(${PROJECT_NAME} PROPERTIES Sofa_VERSION ""${Sofa_VERSION}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION_STR ""${SOFA_VERSION_STR}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION ""${SOFA_VERSION}""). set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_URL ""${SOFA_URL}""). # CMakeParseLibraryList.cmak",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:14280,CONFIG,CONFIG,14280,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,['CONFIG'],['CONFIG']
Modifiability,"TIONS}""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Mass; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.SolidMechanics.FEM.HyperElastic; Sofa.Component.SolidMechanics.TensorMass; Sofa.Component.MechanicalLoad; Sofa.Component.Collision.Response.Contact; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.StateContainer; Sofa.Component.Constraint.Projective; Sofa.Component.Mapping.Linear; Sofa.Component.Mapping.NonLinear; Sofa.Component.Engine.Select; Sofa.Component.Engine.Transform; Sofa.Component.MechanicalLoad; ). target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_17). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL); endif(). if(SofaDistanceGrid_FOUND); target_link_libraries(${PROJECT_NAME} SofaDistanceGrid); if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} miniFlowVR); endif(); endif(). if(Sofa.GUI_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI); endif(). if(Sofa.GUI.Qt_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Qt); endif(). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} SofaValidation); endif(). if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid); endif(). if(SOFACUDA_CUBLAS); cuda_add_cublas_to_target(${PROJECT_NAME}); target_link_libraries(${PROJECT_NAME} ${CUDA_SPARSE_LIBRARY}); endif(); if(SOFACUDA_CUDPP); target_link_libraries(${PROJECT_NAME} cudpp); endif(). ## SofaCUDANvccFlags.cmake; # Build tree; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); # Install tree; install(FILES SofaCUDANvccFlags.cmake DESTINATION lib/cmake/SofaCUDA). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFACUDA_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:21588,config,configurations,21588,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,2,"['config', 'plugin']","['configurations', 'plugins']"
Modifiability,"Tasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThreading/BeamLinearMapping_tasks.inl; src/MultiThreading/ParallelBVHNarrowPhase.h; src/MultiThreading/ParallelBruteForceBroadPhase.h; src/MultiThreading/ParallelHexahedronFEMForceField.h; src/MultiThreading/ParallelHexahedronFEMForceField.inl; ); endif(). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} Sofa.Component.LinearSolver.Iterative). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(MULTITHREADING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(MULTITHREADING_BUILD_TESTS); enable_testing(); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:4638,config,configurations,4638,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,2,"['config', 'plugin']","['configurations', 'plugins']"
Modifiability,This plugin allows to render volumetric meshes such tetrahedron-based or hexahedron-based models.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/README.txt:5,plugin,plugin,5,applications/plugins/VolumetricRendering/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/README.txt,1,['plugin'],['plugin']
Modifiability,To install this plugin you need:. - to install the driver LeapMotion: https://www.leapmotion.com/setup (SDK); - activate the plugin in cmake-gui; - enjoy the power of the LeapMotion with SOFA and give a try to the example scene (examples/buffon.scn). And let us know about your Leap simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/README.txt:16,plugin,plugin,16,applications/plugins/LeapMotion/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/README.txt,2,['plugin'],['plugin']
Modifiability,To install this plugin you need:. - to register on the Geomagic website; - to download and install the Geomagic driver (following the documentation and the instructions of INSTALL); - activate the plugin in cmake-gui; - compile it; - enjoy the power of the Geomagic haptic interfaces with SOFA and give a try to the example scene (examples/DemoGeomagic.scn). And let us know about your Geomagic simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt:16,plugin,plugin,16,applications/plugins/Geomagic/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt,2,['plugin'],['plugin']
Modifiability,"ToMeshEngine.h; ImageViewer.h; ). set(SOURCE_FILES; initImage.cpp; ). if(NOT PLUGIN_IMAGE_COMPILE_SET STREQUAL ""none""); list(APPEND SOURCE_FILES; CollisionToCarvingEngine.cpp; ImageAccumulator.cpp; ImageContainer.cpp; GenerateImage.cpp; ImageDataDisplay.cpp; ImageExporter.cpp; ImageFilter.cpp; ImageOperation.cpp; ImageSampler.cpp; ImageToRigidMassEngine.cpp; ImageTransform.cpp; ImageTransformEngine.cpp; ImageTypes.cpp; ImageValuesFromPositions.cpp; ImageCoordValuesFromPositions.cpp; MarchingCubesEngine.cpp; MergeImages.cpp; MeshToImageEngine.cpp; TransferFunction.cpp; VoronoiToMeshEngine.cpp; DepthMapToMeshEngine.cpp; ImageViewer.cpp; ); endif(). set(README_FILES; image.txt; ). if(SofaPython_FOUND); set(PYTHON_FILES; python/SofaImage/API.py; python/SofaImage/__init__.py; ); list(APPEND SOURCE_FILES python/Binding_ImageData.cpp); list(APPEND HEADER_FILES python/Binding_ImageData.h python/Binding_ImageData.inl). # Config files and install rules for pythons scripts; sofa_install_pythonscripts(PLUGIN_NAME ${PROJECT_NAME} PYTHONSCRIPTS_SOURCE_DIR ""python""); endif(). if(Sofa.GL_FOUND); if(FREENECT_FOUND); list(APPEND HEADER_FILES Kinect.h); list(APPEND SOURCE_FILES Kinect.cpp); message(STATUS ""image: found the freenect library""); else(); message(STATUS ""image: could not find the freenect library, won't build the Kinect component""); endif(); endif(). # OpenMP is bugged in image, forcing it to be single threaded for now; if(SOFA_OPENMP); message( WARNING ""image: deactivating OpenMP"" ); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}); endif(). set(PLUGIN_IMAGE_COMPILE_SET_VALUE 0) # none; if(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""standard""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 1); elseif(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""full""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${PYTHON",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:2111,Config,Config,2111,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"Type [#1775]( https://github.com/sofa-framework/sofa/pull/1775 ); - **[SofaKernel]** Port Quat from Defaulttype to Sofa.Type [#1790]( https://github.com/sofa-framework/sofa/pull/1790 ); - **[SofaKernel]** Port Vec from Defaulttype to Sofa.Type (bis) [#1734]( https://github.com/sofa-framework/sofa/pull/1734 ); - **[SofaKernel]** Port a bunch of types from Helper and Defaulttype to Sofa.Type [#1818]( https://github.com/sofa-framework/sofa/pull/1818 ); - **[SofaKernel]** Port vector (and its siblings) from Helper to Sofa.Type [#1893]( https://github.com/sofa-framework/sofa/pull/1893 ); - **[SofaKernel]** Regroup all compatibility files in a Sofa.Compat module [#1944]( https://github.com/sofa-framework/sofa/pull/1944 ); - **[SofaSimulation]** Package SofaSimulation [#1694]( https://github.com/sofa-framework/sofa/pull/1694 ); - [SofaUserInteraction] Refactor PickParticlePerformer [#2084]( https://github.com/sofa-framework/sofa/pull/2084 ). **Plugins / Projects**; - [SofaPython] Move python-related files to SofaPython [#1887]( https://github.com/sofa-framework/sofa/pull/1887 ); - [SofaPython] Regroup dependencies [#1875]( https://github.com/sofa-framework/sofa/pull/1875 ). ### Breaking; **Modules**; - [All] Add forward declaration and opaque API for ExecParams, MechanicalParams, VisualParams and ConstraintParams [#1794]( https://github.com/sofa-framework/sofa/pull/1794 ); - [All] Remove SOFA_NO_OPENGL (not the cmake option) [#1888]( https://github.com/sofa-framework/sofa/pull/1888 ); - [All] Removes search & searchAll from BaseObject [#1842]( https://github.com/sofa-framework/sofa/pull/1842 ); - [All] ADD forward declaration headers + remove unneeded includes [#1764]( https://github.com/sofa-framework/sofa/pull/1764 ); - [All] Adds forward declaration and opaque api for the base types (the one used in Node.h) [#1765]( https://github.com/sofa-framework/sofa/pull/1765 ); - [All] Clean MechanicalMatrixVisitor [#1992]( https://github.com/sofa-framework/sofa/pull/1992 ); - [Al",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:169988,Plugin,Plugins,169988,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin SofaSimpleGUI SofaSimpleGUI) # SofaSimpleGUI plugin can't work without OPENGL; sofa_add_subdirectory(plugin VolumetricRendering VolumetricRendering) # VolumetricRendering plugin ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:3143,plugin,plugin,3143,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"[#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - RegularGridTopology : clean the constructor's code & remove NDEBUG code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa-framework/sofa/pull/270 ). - [SofaVolumetricData]; - Light: clean and strenghening the interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force m",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:335999,Plugin,Plugins,335999,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"[#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:308985,plugin,plugins,308985,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"[#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:320330,config,configuration,320330,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,[All] Deprecate m_componentstate and rename to d_componentState [#1358]( https://github.com/sofa-framework/sofa/pull/1358 ); - [All] Factorize and rename TopologyObjectType into TopologyElementType [#1593]( https://github.com/sofa-framework/sofa/pull/1593 ); - [All] Remove topologyAlgorithms classes [#1546]( https://github.com/sofa-framework/sofa/pull/1546 ); - [All] Standardize index type for Vector/Matrix templates [#1453]( https://github.com/sofa-framework/sofa/pull/1453 ); - [All] Uniform size type [#1515]( https://github.com/sofa-framework/sofa/pull/1515 ); - **[SofaKernel]** Refactor BaseData to use DataLink [#1491]( https://github.com/sofa-framework/sofa/pull/1491 ); - **[SofaKernel]** ♻️ FIX & CLEANUP BoxROI [#1482]( https://github.com/sofa-framework/sofa/pull/1482 ); - **[SofaKernel]**[SofaCore][SofaLoader][SofaGeneralLoader] SOFA with callbacks [#1408]( https://github.com/sofa-framework/sofa/pull/1408 ). **Plugins / Projects**; - [ColladaSceneLoader][SofaAssimp] Move ColladaSceneLoader plugin content into SofaAssimp plugin [#1360]( https://github.com/sofa-framework/sofa/pull/1360 ); - [plugins] Remove plugins to be deleted [#1439]( https://github.com/sofa-framework/sofa/pull/1439 ). ### Improvements; **Architecture**; - [All] Accelerating CMake generation [#1464]( https://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framework/sofa/pull/1512 ); - [SofaBaseCollision] Add option to use of normal orientation in triangle and self-colliding cube [#1559]( https://github.com/sofa-framework/sofa/pull/1559 ); - **[SofaCore]** Add virtual getPathName function in Base [#1455]( https://github.com/sofa-framework/sofa/pull/1455 ); - [SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API [#1495]( https://gith,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:216637,Plugin,Plugins,216637,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,[GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples /,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82411,plugin,plugin,82411,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,[Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework/sofa/issues/1633 ); - [modules] Set relocatable flags to pluginized modules [#1604]( https://github.com/sofa-framework/sofa/pull/1604 ); - [SofaCommon] Make SofaCommon a deprecated collection [#1609]( https://github.com/sofa-framework/sofa/pull/1609 ); - [SofaGeneral] Make SofaGeneral a deprecated collection [#1596]( https://github.com/sofa-framework/sofa/pull/1596 ); - [SofaGeneral] Move BVH-format feature from Helper to SofaGeneralRigid [#1644]( https://github.com/sofa-framework/sofa/pull/1644 ). ### Breaking; **Architecture**; - [SofaMacros] Refactor for better target and package management [#1433]( https://github.com/sofa-framework/sofa/pull/1433 ). **Modules**; - [All] Change index_type from size_t to uint [#1514]( https://github.com/sofa-framework/sofa/pull/1514 ); - [All] Deprecate m_componentstate and rename to d_co,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:214762,Plugin,Pluginize,214762,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginize']
Modifiability,[SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload pl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:308510,Plugin,Pluginizing,308510,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,[SofaGeneral] Move BVH-format feature from Helper to SofaGeneralRigid [#1644]( https://github.com/sofa-framework/sofa/pull/1644 ). ### Breaking; **Architecture**; - [SofaMacros] Refactor for better target and package management [#1433]( https://github.com/sofa-framework/sofa/pull/1433 ). **Modules**; - [All] Change index_type from size_t to uint [#1514]( https://github.com/sofa-framework/sofa/pull/1514 ); - [All] Deprecate m_componentstate and rename to d_componentState [#1358]( https://github.com/sofa-framework/sofa/pull/1358 ); - [All] Factorize and rename TopologyObjectType into TopologyElementType [#1593]( https://github.com/sofa-framework/sofa/pull/1593 ); - [All] Remove topologyAlgorithms classes [#1546]( https://github.com/sofa-framework/sofa/pull/1546 ); - [All] Standardize index type for Vector/Matrix templates [#1453]( https://github.com/sofa-framework/sofa/pull/1453 ); - [All] Uniform size type [#1515]( https://github.com/sofa-framework/sofa/pull/1515 ); - **[SofaKernel]** Refactor BaseData to use DataLink [#1491]( https://github.com/sofa-framework/sofa/pull/1491 ); - **[SofaKernel]** ♻️ FIX & CLEANUP BoxROI [#1482]( https://github.com/sofa-framework/sofa/pull/1482 ); - **[SofaKernel]**[SofaCore][SofaLoader][SofaGeneralLoader] SOFA with callbacks [#1408]( https://github.com/sofa-framework/sofa/pull/1408 ). **Plugins / Projects**; - [ColladaSceneLoader][SofaAssimp] Move ColladaSceneLoader plugin content into SofaAssimp plugin [#1360]( https://github.com/sofa-framework/sofa/pull/1360 ); - [plugins] Remove plugins to be deleted [#1439]( https://github.com/sofa-framework/sofa/pull/1439 ). ### Improvements; **Architecture**; - [All] Accelerating CMake generation [#1464]( https://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framew,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:216295,Refactor,Refactor,216295,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,[SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [SofaTest] CLEAN msg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:256718,plugin,plugin,256718,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"] Remove unused __STL_MEMBER_TEMPLATES parts [#4251](https://github.com/sofa-framework/sofa/pull/4251); - [GL] Remove deprecated (and incomplete) Color class [#4264](https://github.com/sofa-framework/sofa/pull/4264); - [FEM, Mapping] dont mix type::fixed_array and type::Vec [#4269](https://github.com/sofa-framework/sofa/pull/4269); - [all] Fix headeronly extlibs licenses [#4272](https://github.com/sofa-framework/sofa/pull/4272); - [all] Externalize cxxopts [#4273](https://github.com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:47873,plugin,plugins,47873,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81199,Plugin,Plugins,81199,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15153,Plugin,Plugins,15153,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'config', 'plugin']","['Plugins', 'configs', 'plugins']"
Modifiability,]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( https://github.com/sofa-framework/sofa/pull/1958 ); - [SofaCommon] Convert tests to Sofa.Testing [#2153]( https://github.com/sofa-framework/sofa/pull/2153 ); - [SofaConstraint] Small cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#175,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:199749,variab,variables,199749,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,"_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; Website. QtOgreViewer; To; use this viewer, you must have Ogre installed on your computer. ; The configuration files are located in: �YourSofaDirectory/share/config/�. �plugins.cfg� describes the plugins used by Ogre for; Windows, and �plugins_unix.cfg� for... Linux.; By creating a .scene file with the same name as the simulation, you can; provide additional models, lights, visuals to the simulation( see Ogre; documentation for mode details ). This won't interact with Sofa, but; allows you to get a better render.; Additional textures, materials,; shaders... in Ogre, have to be put in �; YourSofaDirectory/share/textures� or �; YourSofaDirectory/share/materials� or; �YourSofaDirectory/share/shaders� ... They are loaded at the; start-up of the viewer. . ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:4353,config,config,4353,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,5,"['config', 'plugin']","['config', 'configuration', 'plugins']"
Modifiability,"_VERSION ${SOFAHAPI_MAJOR_VERSION}.${SOFAHAPI_MINOR_VERSION}). set(HEADER_FILES; SofaHAPIForceFeedbackEffect.h; SofaHAPIHapticsDevice.h; config.h.in; ). set(SOURCE_FILES; SofaHAPIForceFeedbackEffect.cpp; SofaHAPIHapticsDevice.cpp; initSofaHAPI.cpp; ). if(NOT TARGET H3DUtil); find_package(H3DUtil REQUIRED); if(WIN32); file(GLOB sharedObjects ""${HAPI_DIR}/bin/H3DUtil_*.dll""); foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(H3DUTIL_LIBRARIES H3DUtil); endif(). if(NOT TARGET HAPI); find_package(HAPI REQUIRED); if(WIN32); # Copy HAPI DLLs; file(GLOB sharedObjects ""${HAPI_DIR}/bin/HAPI_*.dll""). foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(HAPI_LIBRARIES HAPI); endif(). if(WIN32); if(CMAKE_CL_64); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin64); else(); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin32); endif(). file(COPY ""${H3D_EXTERNAL_BIN_DIR}/pthreadVC2.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); file(COPY ""${H3D_EXTERNAL_BIN_DIR}/FreeImage.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endif(). set(SOFAHAPI_DEPENDENCY_INCLUDE_DIR ${HAPI_INCLUDE_DIR}; ${H3DUTIL_INCLUDE_DIR}). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaUserInteraction SofaHaptics ${HAPI_LIBRARIES} ${H3DUTIL_LIBRARIES}); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${SOFAHAPI_DEPENDENCY_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAHAPI_VERSION}). ## Install rules for the library and the header; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME SofaHAPI; PACKAGE_VERSION ${SOFAHAPI_VERSION}; TARGETS SofaHAPI AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR SofaHAPI; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt:1366,CONFIG,CONFIG,1366,applications/plugins/SofaHAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt,3,"['CONFIG', 'config']","['CONFIG', 'configurations']"
Modifiability,"_______________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324880,plugin,plugins,324880,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA_BUILD_TUTORIALS; sofa_add_subdirectory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ## Applications; add_subdirectory(applications/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual d",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:7875,plugin,plugin,7875,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_su",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1580,plugin,plugin,1580,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,2,['plugin'],['plugin']
Modifiability,a collection [#3296](https://github.com/sofa-framework/sofa/pull/3296) ; - [SofaSimpleGUI] Without compatibility layer [#3301](https://github.com/sofa-framework/sofa/pull/3301) ; - [ExternalBehaviorModel] Without compatibility layer [#3302](https://github.com/sofa-framework/sofa/pull/3302) ; - [SofaCarving] Some cleaning in carvingManager to use link instead of string and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:90825,variab,variable,90825,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"a-framework/sofa/pull/2777) ; - [Core] Introduce parallel for each [#3548](https://github.com/sofa-framework/sofa/pull/3548) ; - [MultiThreading] Introduce ParallelTetrahedronFEMForceField [#3552](https://github.com/sofa-framework/sofa/pull/3552) ; - [examples] Apply Sofa/Component structure for all examples [#3588](https://github.com/sofa-framework/sofa/pull/3588) . ### Breaking. **Architecture**; - [all] Lifecycle v23.06 1/n [#3634](https://github.com/sofa-framework/sofa/pull/3634) ; - [all] Lifecycle v23.06 2/n [#3649](https://github.com/sofa-framework/sofa/pull/3649) ; - [all] Lifecycle v23.06 3/n [#3654](https://github.com/sofa-framework/sofa/pull/3654) ; - [all] Lifecycle v23.06 4/n [#3655](https://github.com/sofa-framework/sofa/pull/3655) ; - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https://github.com/sofa-framework/sofa/pull/3665) ; - [Helper] Improve OptionsGroup [#3737](https://github.com/sofa-framework/sofa/pull/3737) ; - [Simulation] Suggest required plugin in the syntax of the scene loader [#3799](https://github.com/sofa-framework/sofa/pull/3799) . **Modules**; - [Mapping] Adds template to RigidMapping [#3680](https://github.com/sofa-framework/sofa/pull/3680) ; - [Analyze] Raw pointers to Links [#3683](https://github.com/sofa-framework/sofa/pull/3683) ; - [MechanicalLoad] Stupid check for consistency between state and topology [#3692](https://github.com/sofa-framework/sofa/pull/3692) ; - [Mapping.NonLinear] Geometric stiffness method in an OptionsGroup [#3740](https://github.com/sofa-framework/sofa/pull/3740) ; - [Core.Visual, Component.Visual] Create VisualState (formerly Vec3State) [#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] Rig",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:51294,plugin,plugin,51294,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,a.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sofa.Core] A helper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaG,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:95550,plugin,plugin,95550,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"a/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plugins [#1059]( https://github.com/sofa-framework/sofa/pull/1059 ); - [CMake] FIX: exporting options in SofaFrameworkConfig.cmake [#927]( https://github.com/sofa-framework/sofa/pull/927 ); - [CMake] FIX: wrong paths of installed headers in SofaBaseMechanics [#887]( https://github.com/sofa-framework/sofa/pull/887 ); - [CMake] FIX build/install plugins directory [#959]( https://github.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[SofaBaseMechanics]** Fix barycentric mapping again [#924]( https://github.com/sofa-framework/sofa/pull/924 ); - **[Sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:263332,plugin,plugins,263332,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,a/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github.com/sofa-framework/sofa/pull/4513); - [LinearAlgebra] Refactor sparse matrix product [#4547](https://github.com/sofa-framework/sofa/pull/4547); - [plugins] Remove ExternalBehaviorModel and ManualMapping plugins [#4565](https://github.com/sofa-framework/sofa/pull/4565); - [LinearSystem.Direct] Remove metis dependency [#4588](https://github.com/sofa-framework/sofa/pull/4588); - [ODESolver] Explicit link to linear solver [#4628](https://github.com/sofa-framework/sofa/pull/4628); - [Collision.Detection.Algorithm] Rename Data [#4674](https://github.com/sofa-framework/sofa/pull/4674); - [Collision.Detection.Intersection] Rename Data [#4675](https://github.com/sofa-framework/sofa/pull/4675); - [Collision.Geometry+Response] Rename Data [#4676](https://github.com/sofa-framework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:18924,plugin,plugins,18924,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugins']
Modifiability,ace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](https://github.com/sofa-framework/sofa/pull/3670) ; - [Collision] Make the (CubeModel) BoundingTree deterministic [#3687](https://github.com/sofa-framework/sofa/pull/3687) ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for nullptr in BeamFEMForceField [#3690](https://github.com/sofa-framework/sofa/pull/3690) ; - [Spring] Check for nullptr in RestShapeSpringsForceField [#3691](https://github.com/sofa-framework/sofa/pull/3691) ; - [Testing] Fix CMake config after removal of compat [#3694](https://github.com/sofa-framework/sofa/pull/3694) ; - [LinearAlgebra] Fix crash when matrix has no nonzero values [#3700](https://github.com/sofa-framework/sofa/pull/3700) ; - [IO.Mesh] Fix mesh creation if load called multiple times [#3702](https://github.com/sofa-framework/sofa/pull/3702) ; - [LinearSolver.Direct] Make sure the matrix is factorized in SparseCholeskySolver [#3706](https://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#378,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:57525,config,config,57525,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"ack; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixExporter/>; ```. A use case is available in the examples folder. ### GlobalSystemMatrixImage. GlobalSystemMatrixImage is a component to visualize the matrix of a linear system in a; Qt widget. #### Link to Linear Solver. GlobalSystemMatrixImage must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixImage linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixImage/>; ```. A use case is available in the examples folder. #### Screenshot. ![GlobalSystemMatrixImage](doc/GlobalSystemMatrixImage.png). ### FillReducingOrdering. This component reorders the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization.; Two methods of reordering are available:; 1) Metis; 2) Approximate minimum degree (AMD) from Eigen. The example `FillReducingOrdering.scn` shows how to use this component.; In this simulation, the same object is simulated twice:; 1) No reordering method is applied; 2) A reordering method is applied. It can be observed that the number of non-zero values in the matrix decomposition is ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:2313,inherit,inheriting,2313,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['inherit'],['inheriting']
Modifiability,"ackaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigid barycentric mapping [#710]( https://github.com/sofa-framework/sofa/pull/710 ); - **[SofaHelper]** PluginManager now checks for file existence instead of library extension match. [#621]( https://github.com/sofa-framework/sofa/pull/621 ). **Plugins / Projects**; - [HeadlessRecorder] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:295028,Plugin,PluginManager,295028,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,"acro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281808,enhance,enhancements,281808,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['enhance'],['enhancements']
Modifiability,"age, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP registration. Sponsors. Do not forget to thank your; sponsors, they love it !. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:2170,plugin,plugin,2170,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,4,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework/sofa/pull/4651); - [AnimationLoop] Remove duplicated Constraint Visitors [#4715](https://github.com/sofa-framework/sofa/pull/4715). ### Improvements. - [Lagrangian.Correction] Add callbacks to check zero compliance [#4205](https://github.com/sofa-framework/sofa/pull/4205); - [SolidMechanics.Spring] Implement buildStiffnessMatrix for TriangularBendingSprings [#4295](https://github.com/sofa-framework/sofa/pull/4295); - [SolidMechanics] Implement buildStiffnessMatrix for PolynomialSpringsFF [#4301](https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""meta-alias"" isMechanical [#4360](https://github.com/sofa-framework/sofa/pull/4360); - [github] Add new action checking PR age [#4386](https://github.com/sofa-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:3544,Config,Config,3544,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:128197,variab,variable,128197,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"ally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - Sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:338060,plugin,plugins,338060,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"ame TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plug",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261975,Plugin,PluginExample,261975,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginExample']
Modifiability,"amework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in components [#2162]( https://github.com/sofa-framework/sofa/pull/2162 ); - [All] Remove warnings [#2378]( https://github.com/sofa-framework/sofa/pull/2378 ); - [All] Update codebase to compile w/o Sofa.Compat for v21.12 [#2525]( https://github.com/sofa-framework/sofa/pull/2525 ); - [All] Update lifecycle (macros, etc) for v21.12 [#2524]( https://github.com/sofa-framework/sofa/pull/2524 ); - [All] Clean unreferenced files [#2333]( https://github.com/sofa-framework/sofa/pull/2333 ); - [All] Declaration hides previous local declaration [#2463]( https://github.com/sofa-framework/sofa/pull/2463 ); - [All] Expression is converted to bool and can be replaced [#2464]( https://github.com/sofa-framework/sofa/pull/2464 ); - [All] Minor cleaning [#2461]( https://github.com/sofa-framework/sofa/pull/2461 ); - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ); - [All] Variable can be made constexpr [#2472]( https://github.com/sofa-framework/sofa/pull/2472 ); - [All] fix some warnings and remove unnecessary includes [#2312]( https://github.com/sofa-framework/sofa/pull/2312 ); - [All] Fix minor compilation warnings [#2233]( https://github.com/sofa-framework/sofa/pull/2233 ); - [Sofa.Core] More information when the same Data name is used multiple times [#2489]( https://github.com/sofa-framework/sofa/pull/2489 ); - [Sofa.Core] Remove unnecessary functions because they are in base class [#2430]( https://github.com/sofa-framework/sofa/pull/2430 ); - [Sofa.Helper] Remove duplicated code [#2482]( https://github.com/sofa-framework/sofa/pull/2482 ); - [Sofa.Helper] Remove usage of boost::filesystem [#2342]( https://github.com/sofa-framework/sofa/pull/2342 ); - [Sofa.SimulationCore] Wrong doxygen symbol [#2467]( https://github.com/sofa-framework/sofa/pull/2467 ); - [Sofa.Type] Clean and modernize Vec and Mat [#2282]( https://github.com/sofa-framework/sofa/pull/2282",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:155367,Variab,Variable,155367,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Variab'],['Variable']
Modifiability,"amework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [Sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:146054,Plugin,PluginManager,146054,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"angian.Model] Missing _API keyword [#3833](https://github.com/sofa-framework/sofa/pull/3833) ; - [All] Remove warnings for v23.06 [#3911](https://github.com/sofa-framework/sofa/pull/3911) . **Plugins / Projects**; - [plugins] rename shadow variable [#3581](https://github.com/sofa-framework/sofa/pull/3581) ; - [SofaCUDA] Clean removed code and add useful one [#3632](https://github.com/sofa-framework/sofa/pull/3632) ; - [GUI.Qt, Multithreading] Fix compilation when SReal=float [#3637](https://github.com/sofa-framework/sofa/pull/3637) ; - [MultiThreading] Remove obsolete documentation [#3667](https://github.com/sofa-framework/sofa/pull/3667) ; - [Multithreading] Fix AnimationLoopParallelScheduler [#3676](https://github.com/sofa-framework/sofa/pull/3676) ; - [SofaCUDA] Remove BeamLinearMapping<Rigid3fTypes,.> [#3684](https://github.com/sofa-framework/sofa/pull/3684) ; - [GUI.Qt] Clean and fix in the ""inspector"" panel [#3713](https://github.com/sofa-framework/sofa/pull/3713) ; - [applications] rename shadow variable [#3738](https://github.com/sofa-framework/sofa/pull/3738) ; - [SofaPhysicsAPI] Remove unreachable code [#3771](https://github.com/sofa-framework/sofa/pull/3771) ; - [SofaCarving] Refresh : update file architecture and cmake [#3798](https://github.com/sofa-framework/sofa/pull/3798) ; - [BulletCollisionDetection] Revive project [#3800](https://github.com/sofa-framework/sofa/pull/3800) ; - [PreassembledMass] Make it external [#3802](https://github.com/sofa-framework/sofa/pull/3802) ; - [SofaCUDA] Move explicit template instantiations from CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:65777,variab,variable,65777,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,arch for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542]( https://github.com/sofa-framework/sofa/pull/1542 ). **Examples / Scenes**; - [examples] Fix HexahedronForceFieldTopologyChangeHandling scene [#1573]( https://github.com/sofa-framework/sofa/pull/1573 ). **Scripts / Tools**; - [scripts] Update licenseUpdater [#1498]( https://github.com/sofa-framework/sofa/pull/1498 ). ### Cleanings; **Architecture**; - [SofaMacros] Split SofaMacros.cmake into multiple files [#1477]( https://github.com/sofa-framework/sofa/pull/1477 ); - [SofaMacros] Use IN_LIST (CMake >= 3.3) [#1484]( https://github.com/sofa-framework/sofa/pull/1484 ). **Modules**; - [All] Bunch of remova,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:224619,config,configuration,224619,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,"ariable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to ""6"", ""0.9"" and ""0.2"" respectively.; Add a OglIntVariable component and name it ""perlinBumpOctave"". Set the Uniform Value to ""1"".; Run in SOFA.; We have defined all the variables for the pattern of the dragon. Now we will define the color.; You can define a macro by giving it the same name as the variable, like we did above, or by setting the ID name.; Add a OglShaderDefineMacro component, and set the ID name to ""PERLIN_NOISE_COLOR"".; Add a perlinFloat4Variables, naming it ""perlinColorFactor"" and setting the Uniform Value to (0.2 0.9 0 0).; Add two OglFloatVariables. Name one ""perlinColorFrequency"" and give it a Uniform Value of ""0.5"". Name the other ""perlinColorPersistance""and give it a Uniform Value of ""0.5"".; Add a OglIntVariable named ""perlinColorOctave"" with a Uniform Value of ""3"".; Run in SOFA.; Lastly, we can add a texture to the dragon.; The Perlin texture requires a lot of values, too many to enter by hand. We will cheat a bit.; Open your scene in your favorite XML editor. Copy the bold text below, and paste it into your scene, right before </Node>.; <OglTexture2D id=""perlinPermutationsTexture"" proceduralTextureNbBits=""8"" proceduralTextureWidth=""1"" proceduralTextureHeight=""256"" repeat=""true"" linearInterpolation=""false"" proceduralTextureData=""151 160 137 91 90 15 ; 		",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:2297,variab,variable,2297,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,1,['variab'],['variable']
Modifiability,arycentricStickContact response [#2509]( https://github.com/sofa-framework/sofa/pull/2509 ); - [SofaMiscForceField] Fix MeshMatrixMass init and topologicalChanges [#2193]( https://github.com/sofa-framework/sofa/pull/2193 ); - [SofaMiscForceField] Fix addForce function in MeshMatrixMass [#2305]( https://github.com/sofa-framework/sofa/pull/2305 ); - [SofaSimpleFem] Check topology in draw [#2478]( https://github.com/sofa-framework/sofa/pull/2478 ); - [SofaSimpleFem] Fix row/col indices in hexa fem for bloc-based matrices [#2277]( https://github.com/sofa-framework/sofa/pull/2277 ); - [SofaSimpleFem] Set valid component state [#2499]( https://github.com/sofa-framework/sofa/pull/2499 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping lost ancestor info [#2460]( https://github.com/sofa-framework/sofa/pull/2460 ); - [SofaUserInteraction] Fix InteractionPerformerFactory symbol export [#2495]( https://github.com/sofa-framework/sofa/pull/2495 ). **Plugins / Projects**; - [CGALPlugin] FIX sofa::type [#2246]( https://github.com/sofa-framework/sofa/pull/2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:152364,Plugin,Plugins,152364,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ; - [AnimationLoop] Call super init in FreeMotionAnimationLoop [#3791](https://github.com/sofa-framework/sofa/pull/3791) ; - [Hyperelastic] Reformat files and add override attribute [#3792](https://github.com/sofa-framework/sofa/pull/3792) ; - [Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals() [#3805](https://github.com/sofa-framework/sofa/pull/3805) ; - [Constraint] Change print variable names to be consistent with doc [#3816](https://github.com/sofa-framework/sofa/pull/3816) ; - [Components] rename shadow variable [#3818](https://github.com/sofa-framework/sofa/pull/3818",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:63673,variab,variable,63673,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"at,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be reasonably considered independent and separate works in; themselves, then this License, and its terms, do not apply to those; sections when you distribute them as separate works. But when you; distribute the same sections as part of a whole which is a work based; on the Library, the distribution of the whole must be on the terms of; this License, whose permissions for other licensees extend to the; entire whole, and thus to each and every part regardless of who wrote; it. Thus, it is not the intent of this section to claim rights or contest; your rights to work written entirely by you; rather, the intent is to; exercise the right to control the distribution of derivative or; collective works based on the Library. In addition, mere aggregation of another work not based on the Library; with the Library (or with a work based on the Library) on a volume of; a storage or distribution medium does not bring the other work under; the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public; License instead of this License to a given copy of the Library. To do; this, you must alter all the notices that refer to this License, so; that they refer to the ordinary GNU General Public License, version 2,; instead of to this License. (If a newer version than version 2 of the; ordinary GN",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:10243,extend,extend,10243,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['extend'],['extend']
Modifiability,ate [#1703]( https://github.com/sofa-framework/sofa/pull/1703 ); - [SofaGeneralLoader] adds translation and rotation to ReadState [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com/sofa-framework/sofa/pull/1756 ); - [SofaGuiQt] Tooltips [#2139]( https://github.com/sofa-framework/sofa/pull/2139 ); - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** Optimize use of map_ptr_stable_compare [#2105]( https://github.com/sofa-framework/sofa/pull/2105 ); - **[SofaHelper][SofaPython]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ); - [SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver [#2050]( https://github.com/sofa-framework/sofa/pull/2050 ); - **[SofaKernel]** Write template list in error message [#2207]( https://github.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:179112,Rewrite,Rewrite,179112,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Rewrite'],['Rewrite']
Modifiability,"ate"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variables by solving an equation involving the previous state variables and the new ones.; In contrast, implicit solvers are very stable (without conditions on the time step) and therefore work with larger time steps. The drawback of such a method is that it is more time consuming.; For example, implicit solvers would be advised for stiff or low-mass objects. Finally, it must be pointed out that explicit and implicit solvers are not the only way to solve ODEs.; Some other solvers do exist, such as semi-implici",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:1521,variab,variables,1521,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,2,['variab'],['variables']
Modifiability,"ated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ; - [AnimationLoop] Call super init in FreeMotionAnimationLoop [#3791](https://github.com/sofa-framework/sofa/pull/3791) ; - [Hyperelastic] Reformat files and add override attribute [#3792](https://github.com/sofa-framework/sofa/pull/3792) ; - [Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals() [#3805](https://github.com/sofa-framework/sofa/pull/3805) ; - [Constraint] Change print variable names to be consistent with doc [#3816](https://github.com/sofa-framework/sofa/pull/3816) ; - [Components] rename shadow variable [#3818](https://github.com/sofa-framework/sofa/pull/3818) ; - [All] Remove trivial warnings [#3823](https://github.com/sofa-framework/sofa/pull/3823) ; - [Lagrangian.Model] Missing _API keyword [#3833](https://github.com/sofa-framework/sofa/pull/3833) ; - [All] Remove warnings for v23.06 [#3911](https://github.com/sofa-framework/sofa/pull/3911) . **Plugins / Projects**; - [plugins] rename shadow variable [#3581](https://github.com/sofa-framework/sofa/pull/3581) ; - [SofaCUDA] Clean removed code and add useful one [#3632](https://github.com/sofa-framework/sofa/pull/3632) ; - [GUI.Qt, Multithreading] Fix compilation when SReal=float [#3637](https://github.com/sofa-framework/sofa/pull/3637) ; - [MultiThreading] Remove obsolete documentation [#3667](https://github.com/sofa-framework/sofa/pull/3667) ; - [Multithreading] Fix AnimationLoopParallelScheduler [#3676](https://github.com/sofa-framework/sofa/pull/3676) ; - [SofaCUDA] Remove BeamLinearMapping<Rigid3fTypes,.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:64591,variab,variable,64591,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"aterial.cpp; ${SOFATYPESRC_ROOT}/PrimitiveGroup.cpp; ${SOFATYPESRC_ROOT}/Quat.cpp; ${SOFATYPESRC_ROOT}/RGBAColor.cpp; ${SOFATYPESRC_ROOT}/SVector.cpp; ${SOFATYPESRC_ROOT}/SpatialVector.cpp; ${SOFATYPESRC_ROOT}/Transform.cpp; ${SOFATYPESRC_ROOT}/Vec.cpp; ${SOFATYPESRC_ROOT}/fixed_array.cpp; ${SOFATYPESRC_ROOT}/vector.cpp; ${SOFATYPESRC_ROOT}/vector_Integral.cpp; ${SOFATYPESRC_ROOT}/vector_Real.cpp; ${SOFATYPESRC_ROOT}/vector_String.cpp; ). sofa_find_package(Sofa.Config REQUIRED). ## Boost (1.54.0 or higher) is now mandatory.; set(BOOST_MIN_VERSION ""1.54.0""); set(Boost_NO_BOOST_CMAKE TRUE); sofa_find_package(Boost ${BOOST_MIN_VERSION} QUIET); if(NOT Boost_FOUND); if(WIN32); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.\n""; ""Note that Boost autodetection on Windows was removed.\n""; ""Please follow CMake documentation to find Boost on your system.\n""; ""Hint: set BOOST_ROOT to your Boost location.""; ); else(); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.""); endif(); endif(); sofa_find_package(Boost QUIET REQUIRED); sofa_find_package(Sofa.Compat QUIET BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config); target_link_libraries(${PROJECT_NAME} PUBLIC Boost::boost); if(Sofa.Compat_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Compat); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TYPE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TYPE_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt:3000,Config,Config,3000,Sofa/framework/Type/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"ation for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:62276,Config,Config,62276,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,ationCore]** FIX Task scheduler memory leak [#1927]( https://github.com/sofa-framework/sofa/pull/1927 ); - **[SofaSimulationCore]** Reorder according to definition [#2034]( https://github.com/sofa-framework/sofa/pull/2034 ); - **[SofaSimulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal drawings [#2206]( https://github.com/sofa-framework/sofa/pull/2206 ); - [CGALPlugin] Fix compilation errors related to SOFA.GL and types converted to DataTypes [#2065]( https://github.com/sofa-framework/sofa/pull/2065 ); - [CImgPlugin] Fix unit test [#2147]( https://github.com/sofa-framework/sofa/pull/2147 ); - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ); - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [Geomagic] Fix compilation of GeomagicVisualModel due to change in MechanicalVisitor [#2113]( https://github.com/sofa-framework/sofa/pull/2113 ); - [LMConstraint] Fix collision model [#1819]( https://github.com/sofa-framework/sofa/pull/1819 ); - [LMConstraint] Fix unload [#1831]( https://github.com/sofa-framework/sofa/pull/1831 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] Fi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:191838,Plugin,Plugins,191838,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,ault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:210854,Plugin,Plugins,210854,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['Plugin'],"['PluginManager', 'Plugins']"
Modifiability,"ault; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt5WebEngine_FOUND}). if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); sofa_find_package(Qt5 COMPONENTS WebEngine WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::WebEngine Qt5::WebEngineWidgets); endif(); elseif (Qt6Core_FOUND). # Profiling; sofa_find_package(Qt6 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt6Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt6 Charts not found. No chart nor Profile will be compiled""); endif(). # # QDocBrowser; find_package(Qt6 COMPONENTS WebEngineCore QUIET) # if found, then QDocBrowser will be ON by default; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt6WebEngineCore_FOUND}); if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); # WebEngineCore needs Positioning WebChannel at cmake configure step (?); sofa_find_package(Qt6 COMPONENTS Positioning WebChannel WebEngineCore WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::WebEngineCore Qt::WebEngineWidgets); endif(); endif(). find_package(Sofa.GL QUIET). # QtViewer and QGLViewer; if(Sofa.GL_FOUND); # QtViewer; option(SOFA_GUI_QT_ENABLE_QTVIEWER ""Compile the QtViewer for the Qt GUI"" ON). # QGLViewer; option(SOFA_GUI_QT_ENABLE_QGLVIEWER ""Compile the QGLViewer for the Qt GUI"" ON). if(SOFA_GUI_QT_ENABLE_QGLVIEWER); find_package(QGLViewer); if(NOT QGLViewer_FOUND); add_subdirectory(libQGLViewer/QGLViewer); endif(); endif(); else(); message(STATUS ""Sofa.GUI.Qt: Sofa.GL has not been activated, QtViewer/QGLViewer will be disabled.""); set(SOFA_GUI_QT_ENABLE_QTVIEWER OFF); set(SOFA_GUI_QT_ENABLE_QGLVIEWER OFF); endif(). # VSync; option(SOFA_GUI_QT_ENABLE_VSYNC ""Enable vertical refresh sync"" OFF). # Qt native menu; set(DEFAULT_SOFA_GUI_QT_ENABLE_NATIVE_MENU ON); if(${CMAKE_SYSTEM_NAME} MATCHES ""Darwin""); set(DEFAULT_SOFA_GUI_QT_ENABLE_NATIVE_M",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:2317,config,configure,2317,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['config'],['configure']
Modifiability,b.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82960,variab,variable,82960,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"b.com/sofa-framework/sofa/pull/3740) ; - [Core.Visual, Component.Visual] Create VisualState (formerly Vec3State) [#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] RigidCoord/Deriv become iterable [#3536](https://github.com/sofa-framework/sofa/pull/3536) ; - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:52852,plugin,plugins,52852,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,buildStiffnessMatrix for StandardTetrahedralFEMForceField [#4110](https://github.com/sofa-framework/sofa/pull/4110); - [MechanicalLoad] Implement buildStiffnessMatrix for TorsionForceField [#4115](https://github.com/sofa-framework/sofa/pull/4115); - [Mass] Add a callback on the lumping data in MMMass [#4128](https://github.com/sofa-framework/sofa/pull/4128); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: use given re-ordered list for unbuilt GS [#4132](https://github.com/sofa-framework/sofa/pull/4132); - [Core] Store default value in a Data [#4133](https://github.com/sofa-framework/sofa/pull/4133); - [all] Use SimulationInitDoneEvent instead of AnimateBeginEvent [#4160](https://github.com/sofa-framework/sofa/pull/4160); - [GitHub] filter action if not on sofa-framework repository [#4171](https://github.com/sofa-framework/sofa/pull/4171); - [LinearSystem] Assemble non-mapped and mapped matrices in parallel [#4172](https://github.com/sofa-framework/sofa/pull/4172); - [Config] Integrate Tracy profiler [#4182](https://github.com/sofa-framework/sofa/pull/4182); - [Config] CMake: Dont check for IPO at every configure step [#4191](https://github.com/sofa-framework/sofa/pull/4191); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: avoid repeated allocation in loops [#4195](https://github.com/sofa-framework/sofa/pull/4195); - [LinearSolver.Direct] Better distribution of tasks among threads [#4220](https://github.com/sofa-framework/sofa/pull/4220); - [all] Add the folder sofa-launcher to the resources component [#4245](https://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse pr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:31512,Config,Config,31512,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-framework/sofa/pull/2872 ); - [Topology.Container] Fix save/restoreLastState in draw method were missing [#3143]( https://github.com/sofa-framework/sofa/pull/3143 ). **Plugins / Projects**; - [ArticulatedSystemMapping] Fixed draw method [#3095]( https://github.com/sofa-framework/sofa/pull/3095 ); - [CollisionOBBCapsule] Fix compat for mappers [#2903]( https://github.com/sofa-framework/sofa/pull/2903 ); - [CollisionOBBCapsule] Fix module name [#3107]( https://github.com/sofa-framework/sofa/pull/3107 ); - [CollisionOBBCapsule] Fix return type to support rigid types [#3075]( https://github.com/sofa-framework/sofa/pull/3075 ); - [SofaCUDA] Add matrix3 transpose method on device [#2675]( https://github.com/sofa-framework/sofa/pull/2675 ); - [SofaCUDA] Fail gracefully if no cuda device found [#3087]( https://github.com/sofa-framework/sofa/pull/3087 ); - [SofaCUDA] Fix compilation for SOFA_GPU_CUDA_DOUBLE [#2863]( https://github.com/sofa-framework/sofa/pull/2863 ); - [SofaCUDA] Fix some namespace, headers includes and decl exports [#3003]( https://github.com/sofa-framework/sofa/pull/3003 ); - [SofaCUDA] Fix symbol definition at run time and compilation error [#2634]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:114698,Plugin,Plugins,114698,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"cated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:62659,plugin,plugins,62659,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"ces.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPositions engine. ### Bug Fixes. - [PluginManager] crashed when a plugin was removed; - [SofaCUDA] fix the compilation using SofaCUDA on Windows; - unstable behavior of masks - USE-MASK variable added; - fix DAGNode traversal when a visitor is run from a node with a not up-to-date descendancy; - fix flaws in glText (memory leak and an other bug); - EigenBaseSparseMatrix: fix parallel matrix-vector product; - XML export. - Minor fix; - Sofa helper: leak when drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLV",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:355273,refactor,refactor,355273,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactor']
Modifiability,cmake_minimum_required(VERSION 3.22). # framework libraries; if(NOT TARGET Sofa.Config); # add Config only if it was not loaded before; sofa_add_subdirectory(library Config Sofa.Config ON); endif(); sofa_add_subdirectory(library Type Sofa.Type ON); sofa_add_subdirectory(library Geometry Sofa.Geometry ON); sofa_add_subdirectory(library Topology Sofa.Topology ON); sofa_add_subdirectory(library Helper Sofa.Helper ON); sofa_add_subdirectory(library LinearAlgebra Sofa.LinearAlgebra ON); sofa_add_subdirectory(library DefaultType Sofa.DefaultType ON); sofa_add_subdirectory(library Core Sofa.Core ON); sofa_add_subdirectory(library Simulation Sofa.Simulation ON); sofa_add_subdirectory(library SimpleApi Sofa.SimpleApi ON); sofa_add_subdirectory(library Testing Sofa.Testing ON). # Library gathering all framework libraries; sofa_add_subdirectory(library Framework Sofa.Framework ON); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt:80,Config,Config,80,Sofa/framework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/CMakeLists.txt,4,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). # framework; add_subdirectory(framework). # Component; sofa_add_subdirectory(module Component Sofa.Component ON). # GL; option(SOFA_WITH_OPENGL ""Compile Sofa with OpenGL support. This will define the SOFA_WITH_OPENGL and SOFA_NO_OPENGL CMake variables."" ON); sofa_add_subdirectory(library GL Sofa.GL ON WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" VALUE_IF_HIDDEN OFF). # GUI; add_subdirectory(GUI); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/CMakeLists.txt:280,variab,variables,280,Sofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/CMakeLists.txt,1,['variab'],['variables']
Modifiability,"cmake_minimum_required(VERSION 3.22). find_package(Sofa.Config REQUIRED). if(SOFA_BUILD_TESTS OR SOFA_BUILD_RELEASE_PACKAGE); # (Deprecated) Library used to write high level tests involving many components.; sofa_add_subdirectory(plugin SofaTest SofaTest); endif(). sofa_add_subdirectory(plugin CollisionOBBCapsule CollisionOBBCapsule). sofa_add_subdirectory(directory SofaHighOrder SofaHighOrder EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin CImgPlugin CImgPlugin) # ON by default and first as it is used by other plugins.; sofa_add_subdirectory(plugin ArticulatedSystemPlugin ArticulatedSystemPlugin ON); sofa_add_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:56,Config,Config,56,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,14,"['Config', 'plugin']","['Config', 'plugin', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Collision.Testing). set(SOFACOMPONENTCOLLISIONTESTING_SRC ""src/sofa/component/collision/testing""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONTESTING_SRC}/MeshPrimitiveCreator.h; ${SOFACOMPONENTCOLLISIONTESTING_SRC}/SpherePrimitiveCreator.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONTESTING_SRC}/empty.cpp ; ); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} Sofa.Component.Topology.Container.Constant); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Testing/CMakeLists.txt:544,Config,Config,544,Sofa/Component/Collision/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Testing/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Engine.Testing). set(SOFACOMPONENTENGINETESTING_SRC ""src/sofa/component/engine/testing""). set(HEADER_FILES; ${SOFACOMPONENTENGINETESTING_SRC}/DataEngineTestCreation.h; ). set(SOURCE_FILES; ${SOFACOMPONENTENGINETESTING_SRC}/empty.cpp ; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Testing/CMakeLists.txt:468,Config,Config,468,Sofa/Component/Engine/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Testing/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Mapping.Testing). set(SOFACOMPONENTMAPPINGTESTING_SRC ""src/sofa/component/mapping/testing""). set(HEADER_FILES; ${SOFACOMPONENTMAPPINGTESTING_SRC}/MappingTestCreation.h; ${SOFACOMPONENTMAPPINGTESTING_SRC}/Multi2MappingTestCreation.h; ${SOFACOMPONENTMAPPINGTESTING_SRC}/MultiMappingTestCreation.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGTESTING_SRC}/empty.cpp ; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Testing/CMakeLists.txt:597,Config,Config,597,Sofa/Component/Mapping/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Testing/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.ODESolver.Testing). set(SOFACOMPONENTODESOLVERTESTING_SRC ""src/sofa/component/odesolver/testing""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/EigenTestUtilities.h; ${SOFACOMPONENTODESOLVERTESTING_SRC}/MassSpringSystemCreation.h; ${SOFACOMPONENTODESOLVERTESTING_SRC}/ODESolverSpringTest.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/empty.cpp ; ); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/); target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Testing/CMakeLists.txt:604,Config,Config,604,Sofa/Component/ODESolver/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Testing/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.SolidMechanics.Testing). set(SOFACOMPONENTSOLIDMECHANICSTESTING_SRC ""src/sofa/component/solidmechanics/testing""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSTESTING_SRC}/ForceFieldTestCreation.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSTESTING_SRC}/empty.cpp ; ); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_include_directories(${PROJECT_NAME} PUBLIC src/). target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Core SceneCreator); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Testing/CMakeLists.txt:508,Config,Config,508,Sofa/Component/SolidMechanics/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Testing/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.Topology.Testing). set(SOFACOMPONENTODESOLVERTESTING_SRC ""src/sofa/component/topology/testing""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/RegularGridNodeCreation.h; ${SOFACOMPONENTODESOLVERTESTING_SRC}/fake_TopologyScene.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERTESTING_SRC}/empty.cpp ; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_compile_definitions(${PROJECT_NAME} PUBLIC ""-DSOFA_COMPONENT_TOPOLOGY_TESTING_RESOURCES_DIR=\""${CMAKE_SOURCE_DIR}/share\""""). target_include_directories(${PROJECT_NAME} PUBLIC src/); target_link_libraries(${PROJECT_NAME} Sofa.Config Sofa.Simulation.Graph); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Testing/CMakeLists.txt:673,Config,Config,673,Sofa/Component/Topology/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Testing/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22). project(stylecheck.exe). if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR ); message(STATUS ""Stylecheck out-of-tree configuration""). if( NOT DEFINED LLVM_PATH ); message(FATAL_ERROR ""LLVM_PATH must be provided using -DLLVM_PATH=<path to llvm package root>""); endif(). link_directories(${LLVM_PATH}/lib); include_directories(${LLVM_PATH}/include). add_definitions(; -D__STDC_LIMIT_MACROS; -D__STDC_CONSTANT_MACROS; ). if( CMAKE_SYSTEM_NAME MATCHES ""Darwin"" ); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -fvisibility-inlines-hidden""); endif(); else(); message(STATUS ""Stylecheck in-tree configuration""); endif(). add_executable(stylecheck.exe; stylecheck.cpp; utilsllvm.cpp; fileutils.cpp; ). if( MSVC ); # Disable warnings for Stylecheck; add_definitions(; -wd4722 # Suppress ''destructor'' : destructor never returns, potential memory leak; ). # Put project in solution folder; set_target_properties(stylecheck; PROPERTIES FOLDER ""Clang executables""; ); else(); # Disable RTTI to be compatible with LLVM/Clang libraries.; set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11 -fno-rtti""); endif(). # Clang dependencies.; target_link_libraries(stylecheck.exe; clangTooling ; clangFrontend; clangSerialization; clangDriver; clangParse; clangSema; clangAnalysis; clangAST; clangBasic; clangEdit; clangLex; clangASTMatchers ; clang; ). # LLVM dependencies.; target_link_libraries(stylecheck.exe; #LLVMSupport; #LLVMTransformUtils; #LLVMMC # Object, Support; #LLVMMCParser # MC, Support; #LLVMObject # Support; #LLVMCore # Support; #LLVMBitReader; #LLVMScalarOpts; LLVMSupport; LLVMOption; ). # Platform dependencies.; if( WIN32 ); target_link_libraries(stylecheck.exe; shlwapi; ); else(); target_link_libraries(stylecheck.exe; pthread; dl; ncurses; z; ); endif(). install(TARGETS stylecheck.exe; RUNTIME DESTINATION bin); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/stylechecker/CMakeLists.txt:160,config,configuration,160,tools/stylechecker/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/stylechecker/CMakeLists.txt,2,['config'],['configuration']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(ArticulatedSystemPlugin VERSION 1.0 LANGUAGES CXX). set(ARTICULATEDSYSTEMPLUGIN_SRC_DIR src/ArticulatedSystemPlugin); set(HEADER_FILES; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/config.h.in; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/init.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyContainer.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyContainer.inl; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedSystemMapping.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedSystemMapping.inl; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyController.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyBVHController.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHChannels.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHJoint.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHLoader.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHMotion.h; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHOffset.h; ); set(SOURCE_FILES; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/init.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyContainer.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedSystemMapping.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyController.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/ArticulatedHierarchyBVHController.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHJoint.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHLoader.cpp; ${ARTICULATEDSYSTEMPLUGIN_SRC_DIR}/bvh/BVHMotion.cpp; ). find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Core Sofa.Component.Controller). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/ArticulatedSystemPlugin/CMakeLists.txt:217,config,config,217,applications/plugins/ArticulatedSystemPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/ArticulatedSystemPlugin/CMakeLists.txt,3,"['config', 'plugin']","['config', 'plugin', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(BulletCollisionDetection LANGUAGES CXX VERSION 0.1). #WARNING, when installing bullet write in the bullet CMakeLists.txt the line add_definitions(-DBULLET_TRIANGLE_COLLISION); # todo: is it possible to do a platform check for BULLET_TRIANGLE_COLLISION?. set(BULLETCOLLISIONDETECTION_SRC src/BulletCollisionDetection); set(HEADER_FILES; ${BULLETCOLLISIONDETECTION_SRC}/config.h.in; ${BULLETCOLLISIONDETECTION_SRC}/init.h; ${BULLETCOLLISIONDETECTION_SRC}/BtDynamicMesh.h; ${BULLETCOLLISIONDETECTION_SRC}/BtInterManager.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionDetection.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContactMapper.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.inl; ). set(SOURCE_FILES; ${BULLETCOLLISIONDETECTION_SRC}/init.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionDetection.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContactMapper.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.cpp; ). s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:414,config,config,414,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['config'],['config']
Modifiability,cmake_minimum_required(VERSION 3.22); project(CollisionOBBCapsule VERSION 1.0 LANGUAGES CXX). # List all files; set(COLLISIONOBBCAPSULE_SRC_DIR src/CollisionOBBCapsule); set(HEADER_FILES; ${COLLISIONOBBCAPSULE_SRC_DIR}/config.h.in; ${COLLISIONOBBCAPSULE_SRC_DIR}/init.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/BaseIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/CapsuleIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/Intersector.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrCapsuleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrMeshUtility.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.inl; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.inl; ${,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:219,config,config,219,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(DiffusionSolver VERSION 0.1). find_package(CImgPlugin REQUIRED). set(HEADER_FILES; config.h; DiffusionSolver.h; ). set(SOURCE_FILES; initDiffusionSolver.cpp; DiffusionSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(""${CMAKE_BUILD_TYPE}"" MATCHES ""^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$"") # no need for openmp in debug; find_package(OpenMP QUIET); if (OPENMP_FOUND); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}""); if(WIN32); set(CMAKE_CXX_LINK_FLAGS ""${CMAKE_CXX_LINK_FLAGS} ${OpenMP_CXX_FLAGS}""); else(); target_link_libraries(${PROJECT_NAME} -lm ${OpenMP_CXX_FLAGS}); endif(); message(STATUS ""DiffusionSolver: forcing OpenMP""); else(); message(WARNING ""DiffusionSolver: your compiler does not implement OpenMP, it will be single-threaded and very inefficient...""); endif(). if(NOT WIN32); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-O3""); endif(); endif(). target_compile_options(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_DIFFUSIONSOLVER""); target_link_libraries(${PROJECT_NAME} CImgPlugin). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/DiffusionSolver/CMakeLists.txt:129,config,config,129,applications/plugins/DiffusionSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/DiffusionSolver/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Geomagic VERSION 0.1). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED). sofa_find_package(OpenHaptics QUIET); if( NOT OPENHAPTICS_FOUND ); message(WARNING ""OpenHaptics dependency not found, Geomagic will miss all haptic features.""); endif(). set(GEOMAGIC_SRC_DIR src/Geomagic). set(HEADER_FILES; ${GEOMAGIC_SRC_DIR}/config.h.in; ${GEOMAGIC_SRC_DIR}/GeomagicDriver.h; ${GEOMAGIC_SRC_DIR}/GeomagicEmulator.h; ${GEOMAGIC_SRC_DIR}/GeomagicVisualModel.h; ); set(SOURCE_FILES	 ; ${GEOMAGIC_SRC_DIR}/GeomagicDriver.cpp; ${GEOMAGIC_SRC_DIR}/GeomagicEmulator.cpp; ${GEOMAGIC_SRC_DIR}/GeomagicVisualModel.cpp; ${GEOMAGIC_SRC_DIR}/initPlugin.cpp; ); set(README_FILES README.txt). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}). # Link the plugin library to its dependencies (other libraries).; target_link_libraries(${PROJECT_NAME} Sofa.Component.Controller Sofa.Component.IO.Mesh Sofa.Component.StateContainer Sofa.Component.Mapping.NonLinear Sofa.Component.Haptics Sofa.GL.Component.Rendering3D); if(OPENHAPTICS_FOUND); target_link_libraries(${PROJECT_NAME} ${OPENHAPTICS_LIBRARIES}) ; target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${OPENHAPTICS_INCLUDE_DIR}>""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/CMakeLists.txt:87,Config,Config,87,applications/plugins/Geomagic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/CMakeLists.txt,6,"['Config', 'config', 'plugin']","['Config', 'config', 'configurations', 'plugin', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Haption). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED). set(HEADER_FILES; HaptionDriver.h; ). set(SOURCE_FILES; initHaption.cpp ; HaptionDriver.cpp; initHaption.cpp; ). set(README_FILES; README.md; PluginHaption.txt; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_HAPTIONPLUGIN""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Haptics; Sofa.GL.Component.Rendering3D; Sofa.Component.Mapping.NonLinear; Sofa.Component.Controller; Sofa.Component.StateContainer; ); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT Haption_libraries; EXPORT HaptionTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY exemple/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/CMakeLists.txt:74,Config,Config,74,applications/plugins/Haption/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/CMakeLists.txt,3,"['Config', 'Plugin', 'plugin']","['Config', 'PluginHaption', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(LeapMotion). set(LEAPMOTION_MAJOR_VERSION 0); set(LEAPMOTION_MINOR_VERSION 1); set(LEAPMOTION_VERSION ${LEAPMOTION_MAJOR_VERSION}.${LEAPMOTION_MINOR_VERSION}). set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""). find_package(SofaFramework REQUIRED); find_package(SofaBase REQUIRED); find_package(SofaGeneral REQUIRED); find_package(SofaOpenglVisual REQUIRED); find_package(Leap REQUIRED). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src); set(LEAPMOTION_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/src). set(HEADER_FILES; initLeapMotion.h; src/LeapMotionDriver.h; src/MyListener.h; ). set(SOURCE_FILES; initLeapMotion.cpp; src/LeapMotionDriver.cpp; src/MyListener.cpp; ). add_library(${PROJECT_NAME} SHARED ${MOC_FILES} ${SOURCE_FILES} ${README_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${LEAPMOTION_INCLUDE_DIRS}>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${LEAPMOTION_INCLUDE_DIRS}/..>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${LEAP_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${LEAPMOTION_VERSION}). target_link_libraries(${PROJECT_NAME} Sofa.Helper SofaOpenglVisual SofaUserInteraction ${LEAP_LIBRARY}). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR src; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/CMakeLists.txt:1372,config,configurations,1372,applications/plugins/LeapMotion/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/CMakeLists.txt,1,['config'],['configurations']
Modifiability,cmake_minimum_required(VERSION 3.22); project(MultiThreading VERSION 0.1). set(HEADER_FILES; src/MultiThreading/config.h.in; src/MultiThreading/initMultiThreading.h; src/MultiThreading/DataExchange.h; src/MultiThreading/DataExchange.inl; src/MultiThreading/MeanComputation.h; src/MultiThreading/MeanComputation.inl; src/MultiThreading/component/animationloop/AnimationLoopParallelScheduler.h; src/MultiThreading/component/animationloop/StepTask.h; src/MultiThreading/component/collision/detection/algorithm/ParallelBVHNarrowPhase.h; src/MultiThreading/component/collision/detection/algorithm/ParallelBruteForceBroadPhase.h; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.h; src/MultiThreading/component/linearsolver/iterative/ParallelCGLinearSolver.inl; src/MultiThreading/component/linearsolver/iterative/ParallelCompressedRowSparseMatrixMechanical.h; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.h; src/MultiThreading/component/mapping/linear/BeamLinearMapping_mt.inl; src/MultiThreading/component/mapping/linear/BeamLinearMapping_tasks.inl; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.h; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelHexahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.h; src/MultiThreading/component/solidmechanics/fem/elastic/ParallelTetrahedronFEMForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelStiffSpringForceField.inl; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.h; src/MultiThreading/component/solidmechanics/spring/ParallelMeshSpringForceField.inl; src/MultiThreading/SceneCheckMultithreading.h; src/MultiThreading/ParallelImplementationsRegistry.h; src/MultiThreading/TaskSchedulerUser.h; ). set(SOURCE_FILES; src/MultiThreading/initMultiThreading.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:112,config,config,112,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(PersistentContact). set(HEADER_FILES; config.h; PersistentContactBarycentricMapping.h; PersistentContactBarycentricMapping.inl; PersistentContactMapping.h; PersistentContactRigidMapping.h; PersistentContactRigidMapping.inl; PersistentFrictionContact.h; PersistentFrictionContact.inl; PersistentUnilateralInteractionConstraint.h; PersistentUnilateralInteractionConstraint.inl; ). set(SOURCE_FILES; PersistentContactBarycentricMapping.cpp; PersistentContactMapping.cpp; PersistentContactRigidMapping.cpp; PersistentFrictionContact.cpp; PersistentUnilateralInteractionConstraint.cpp; initPersistentContact.cpp; ). set(README_FILES PersistentContact.txt). set(README_FILES; 	PersistentContact.txt). find_package(SofaBaseMechanics REQUIRED); find_package(SofaRigid REQUIRED); find_package(SofaConstraint REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_PERSISTENTCONTACT""); target_link_libraries(${PROJECT_NAME} SofaBaseMechanics SofaRigid SofaConstraint); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT PersistentContact_libraries; EXPORT PersistentContactTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib; PUBLIC_HEADER DESTINATION ""include/${PROJECT_NAME}""). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/PersistentContact/CMakeLists.txt:84,config,config,84,applications/plugins/PersistentContact/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/PersistentContact/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SceneChecking LANGUAGES CXX). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.SceneUtility REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED). set(SCENECHECK_SRC_DIR src/SceneChecking). set(HEADER_FILES; ${SCENECHECK_SRC_DIR}/config.h.in; ${SCENECHECK_SRC_DIR}/init.h; ${SCENECHECK_SRC_DIR}/SceneCheck.h; ${SCENECHECK_SRC_DIR}/SceneCheckAPIChange.h; ${SCENECHECK_SRC_DIR}/SceneCheckCollisionResponse.h; ${SCENECHECK_SRC_DIR}/SceneCheckDeprecatedComponents.h; ${SCENECHECK_SRC_DIR}/SceneCheckDuplicatedName.h; ${SCENECHECK_SRC_DIR}/SceneCheckMissingRequiredPlugin.h; ${SCENECHECK_SRC_DIR}/SceneCheckUsingAlias.h; ${SCENECHECK_SRC_DIR}/SceneCheckerListener.h; ${SCENECHECK_SRC_DIR}/SceneCheckerVisitor.h; ). set(SOURCE_FILES; ${SCENECHECK_SRC_DIR}/init.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckAPIChange.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckCollisionResponse.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckDeprecatedComponents.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckDuplicatedName.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckMissingRequiredPlugin.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckUsingAlias.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckerListener.cpp; ${SCENECHECK_SRC_DIR}/SceneCheckerVisitor.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.SceneUtility Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SCENECHECKING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SCE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/CMakeLists.txt:94,Config,Config,94,applications/projects/SceneChecking/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SceneChecking/CMakeLists.txt,2,"['Config', 'config']","['Config', 'config']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SceneCreator VERSION 0.1). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Eigen3 REQUIRED). set(HEADER_FILES; src/SceneCreator/config.h.in; src/SceneCreator/GetAssembledSizeVisitor.h; src/SceneCreator/GetVectorVisitor.h; src/SceneCreator/SceneCreator.h; src/SceneCreator/SceneUtils.h; ); set(SOURCE_FILES; src/SceneCreator/GetAssembledSizeVisitor.cpp; src/SceneCreator/GetVectorVisitor.cpp; src/SceneCreator/SceneCreator.cpp; src/SceneCreator/SceneUtils.cpp; src/SceneCreator/initSceneCreator.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.SimpleApi Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SCENECREATOR""). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SceneCreator""; RELOCATABLE ""plugins""; ). ## Add example project to use sceneCreator; sofa_find_package(Sofa.GUI.Common QUIET); if(Sofa.GUI.Common_FOUND); add_subdirectory(sceneCreatorExamples); else(); message(STATUS ""${PROJECT_NAME}: Sofa.GUI.Common not found, sceneCreatorExamples will not be built.""); endif(). ## Add test project; if(SOFA_BUILD_TESTS); add_subdirectory(SceneCreator_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt:298,config,config,298,applications/plugins/SceneCreator/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt,3,"['config', 'plugin']","['config', 'configurations', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sensable). find_package(SofaHaptics REQUIRED); find_package(SofaOpenglVisual REQUIRED); find_package(SofaGeneral REQUIRED). set(HEADER_FILES; EnslavementForceFeedback.h; NewOmniDriver.h; OmniDriver.h; ). set(SOURCE_FILES; EnslavementForceFeedback.cpp; NewOmniDriver.cpp; OmniDriver.cpp; initSensable.cpp; ). set(README_FILES PluginSensable.txt). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}""); include_directories(${OPENHAPTICS_INCLUDE_DIR}); include_directories(${OPENHAPTICS_UTIL_INCLUDE_DIR}); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SENSABLEPLUGIN""); target_link_libraries(${PROJECT_NAME} SofaHaptics SofaOpenglVisual ${OPENHAPTICS_LIBRARIES}). install(TARGETS ${PROJECT_NAME}; COMPONENT Sensable_libraries; EXPORT SensableTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Sensable/CMakeLists.txt:371,Plugin,PluginSensable,371,applications/plugins/Sensable/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Sensable/CMakeLists.txt,2,"['Plugin', 'plugin']","['PluginSensable', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SensableEmulation). set(HEADER_FILES; OmniDriverEmu.h; config.h; ). set(SOURCE_FILES; OmniDriverEmu.cpp; initSensableEmulation.cpp; ). set(README_FILES PluginSensableEmulation.txt). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Boost COMPONENTS thread REQUIRED). include_directories(${Boost_INCLUDE_DIRS}). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SENSABLEEMULATIONPLUGIN""); target_link_libraries(${PROJECT_NAME} Sofa.Component.Haptics Sofa.Component.Controller Sofa.GL.Component.Rendering3D Boost::thread). include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). # Seems to be required by boost::asio; if(UNIX); target_link_libraries(${PROJECT_NAME} pthread); endif(). install(TARGETS ${PROJECT_NAME}; COMPONENT SensableEmulation_libraries; EXPORT SensableEmulationTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SensableEmulation/CMakeLists.txt:101,config,config,101,applications/plugins/SensableEmulation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SensableEmulation/CMakeLists.txt,4,"['Config', 'Plugin', 'config', 'plugin']","['Config', 'PluginSensableEmulation', 'config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SixenseHydra). set(HEADER_FILES; RazerHydraDriver.h; config.h; ). set(SOURCE_FILES; RazerHydraDriver.cpp; initSixenseHydra.cpp; ). find_package(SofaGeneral REQUIRED); find_package(SofaOpenglVisual REQUIRED). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); find_package(Sixense REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SIXENSE_HYDRA""); target_link_libraries(${PROJECT_NAME} SofaBaseLinearSolver SofaBaseTopology SofaOpenglVisual; SofaMeshCollision SofaSimpleFem SofaConstraint SofaUserInteraction); include_directories(${SIXENSE_INCLUDE_DIR}); target_link_libraries(${PROJECT_NAME} ${SIXENSE_LIBRARY} ${SIXENSE_UTILS_LIBRARY}); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT SixenseHydra_libraries; EXPORT SixenseHydraTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY Scenes/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SixenseHydra/CMakeLists.txt:99,config,config,99,applications/plugins/SixenseHydra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SixenseHydra/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component LANGUAGES CXX). set(SOFACOMPONENT_SOURCE_DIR ""src/sofa/component""). sofa_add_subdirectory_modules(SOFACOMPONENT_TARGETS; DIRECTORIES; ODESolver; IO; Playback; SceneUtility; Topology; Visual; LinearSystem; LinearSolver; Mass; Diffusion; Mapping; StateContainer; SolidMechanics; Constraint; AnimationLoop; MechanicalLoad; Collision; Setting; Controller; Engine; Haptics; ). set(HEADER_FILES; ${SOFACOMPONENT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENT_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENT_SOURCE_DIR}/init.cpp; ). set(TARGET_NAME ${PROJECT_NAME}). add_library(${TARGET_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${TARGET_NAME} PUBLIC ${SOFACOMPONENT_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/CMakeLists.txt:479,config,config,479,Sofa/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.AnimationLoop LANGUAGES CXX). set(SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR ""src/sofa/component/animationloop""). set(HEADER_FILES; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/FreeMotionAnimationLoop.h; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/ConstraintAnimationLoop.h; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/MultiStepAnimationLoop.h; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/MultiTagAnimationLoop.h; ). set(SOURCE_FILES; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/FreeMotionAnimationLoop.cpp; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/ConstraintAnimationLoop.cpp; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/MultiStepAnimationLoop.cpp; ${SOFACOMPONENTANIMATIONLOOP_SOURCE_DIR}/MultiTagAnimationLoop.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/AnimationLoop/CMakeLists.txt:229,config,config,229,Sofa/Component/AnimationLoop/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/AnimationLoop/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision LANGUAGES CXX). set(SOFACOMPONENTCOLLISION_SOURCE_DIR ""src/sofa/component/collision""). sofa_add_subdirectory_modules(SOFACOMPONENTCOLLISION_TARGETS; DIRECTORIES Geometry Detection Response; ). set(HEADER_FILES; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCOLLISION_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/CMakeLists.txt:319,config,config,319,Sofa/Component/Collision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Detection LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR ""src/sofa/component/collision/detection""). sofa_add_subdirectory_modules(SOFACOMPONENTCOLLISIONDETECTION_TARGETS; DIRECTORIES Algorithm Intersection; ). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCOLLISIONDETECTION_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/CMakeLists.txt:361,config,config,361,Sofa/Component/Collision/Detection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Detection.Algorithm LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR ""src/sofa/component/collision/detection/algorithm""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BVHNarrowPhase.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceBroadPhase.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceDetection.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPM.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DSAPBox.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPipeline.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DefaultPipeline.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAP.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAPNarrowPhase.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/EndPoint.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/IncrSAP.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/MirrorIntersector.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceDetection.h; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/RayTraceNarrowPhase.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BVHNarrowPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceBroadPhase.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/BruteForceDetection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DSAPBox.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/CollisionPipeline.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAP.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONALGORITHM_SOURCE_DIR}/DirectSAPNarrowPh",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt:289,config,config,289,Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Algorithm/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Detection.Intersection LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR ""src/sofa/component/collision/detection/intersection""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/BaseProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/DiscreteIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/LocalMinDistance.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshDiscreteIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshDiscreteIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshMinProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshNewProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MeshNewProximityIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/MinProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/NewProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/NewProximityIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayDiscreteIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayDiscreteIntersection.inl; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/RayNewProximityIntersection.h; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/TetrahedronDiscreteIntersection.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/BaseProximityIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE_DIR}/DiscreteIntersection.cpp; ${SOFACOMPONENTCOLLISIONDETECTIONINTERSECTION_SOURCE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt:301,config,config,301,Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Detection/Intersection/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Geometry LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR ""src/sofa/component/collision/geometry""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/fwd.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CubeModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CylinderModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CylinderModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/LineModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/LineModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/PointModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/PointModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/RayModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/SphereModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/SphereModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TetrahedronModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModel.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModel.inl; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModelInRegularGrid.h; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleOctreeModel.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CubeModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/CylinderModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/LineModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/PointModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/RayModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/SphereModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TetrahedronModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModel.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/TriangleModelInRegularGrid.cpp; ${SOFACOMPONENTCOLLISIONGEOMETRY_SOURCE_DIR}/Triang",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/CMakeLists.txt:247,config,config,247,Sofa/Component/Collision/Geometry/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Geometry/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Response LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONRESPONSE_SOURCE_DIR ""src/sofa/component/collision/response""). sofa_add_subdirectory_modules(SOFACOMPONENTCOLLISIONRESPONSE_TARGETS; DIRECTORIES Mapper Contact; ). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONRESPONSE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONRESPONSE_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONRESPONSE_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCOLLISIONRESPONSE_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/CMakeLists.txt:348,config,config,348,Sofa/Component/Collision/Response/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Response.Contact LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR ""src/sofa/component/collision/response/contact""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/BarycentricPenalityContact.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/BarycentricPenalityContact.inl; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/BarycentricStickContact.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/BarycentricStickContact.inl; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/CollisionResponse.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/ContactIdentifier.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/ContactListener.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/DefaultContactManager.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/FrictionContact.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/FrictionContact.inl; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/PenalityContactForceField.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/PenalityContactForceField.inl; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/RayContact.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/RuleBasedContactManager.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/StickContactConstraint.h; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/StickContactConstraint.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/BarycentricPenalityContact.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/BarycentricStickContact.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/CollisionResponse.cpp; ${SOFACOMPONENTCOLLISIONRESPONSECONTACT_SOURCE_DIR}/ContactIdentifier.cpp; ${SOFACOMPONENTCOLLISI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Contact/CMakeLists.txt:277,config,config,277,Sofa/Component/Collision/Response/Contact/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Contact/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Collision.Response.Mapper LANGUAGES CXX). set(SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR ""src/sofa/component/collision/response/mapper""). set(HEADER_FILES; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/init.h; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BaseContactMapper.h; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BarycentricContactMapper.h; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BarycentricContactMapper.inl; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/IdentityContactMapper.h; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/IdentityContactMapper.inl; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/RigidContactMapper.h; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/RigidContactMapper.inl; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/SubsetContactMapper.h; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/SubsetContactMapper.inl; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/TetrahedronBarycentricContactMapper.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BaseContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/BarycentricContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/IdentityContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/RigidContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/SubsetContactMapper.cpp; ${SOFACOMPONENTCOLLISIONRESPONSEMAPPER_SOURCE_DIR}/TetrahedronBarycentricContactMapper.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED) # BarycentricMapper needs Mec",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Mapper/CMakeLists.txt:273,config,config,273,Sofa/Component/Collision/Response/Mapper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Collision/Response/Mapper/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Constraint LANGUAGES CXX). set(SOFACOMPONENTCONSTRAINT_SOURCE_DIR ""src/sofa/component/constraint""). sofa_add_subdirectory_modules(SOFACOMPONENTCONSTRAINT_TARGETS; DIRECTORIES Lagrangian Projective; ). set(HEADER_FILES; ${SOFACOMPONENTCONSTRAINT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONSTRAINT_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCONSTRAINT_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCONSTRAINT_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/CMakeLists.txt:318,config,config,318,Sofa/Component/Constraint/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Constraint.Lagrangian LANGUAGES CXX). set(SOFACOMPONENTCONSTRAINTLAGRANGIAN_SOURCE_DIR ""src/sofa/component/constraint/lagrangian""). sofa_add_subdirectory_modules(SOFACOMPONENTCONSTRAINTLAGRANGIAN_TARGETS; DIRECTORIES Model Correction Solver; ). set(HEADER_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIAN_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONSTRAINTLAGRANGIAN_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIAN_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTCONSTRAINTLAGRANGIAN_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/CMakeLists.txt:372,config,config,372,Sofa/Component/Constraint/Lagrangian/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Constraint.Lagrangian.Correction LANGUAGES CXX). set(SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR ""src/sofa/component/constraint/lagrangian/correction""). set(HEADER_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/init.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/GenericConstraintCorrection.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/LinearSolverConstraintCorrection.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/LinearSolverConstraintCorrection.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/PrecomputedConstraintCorrection.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/PrecomputedConstraintCorrection.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/UncoupledConstraintCorrection.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/UncoupledConstraintCorrection.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/GenericConstraintCorrection.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/LinearSolverConstraintCorrection.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/PrecomputedConstraintCorrection.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANCORRECTION_SOURCE_DIR}/UncoupledConstraintCorrection.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Mass REQUIRED) # UncoupledCC needs UniformMass; sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED) # PrecomputedCC needs CGLinearSolver; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED) # PrecomputedCC needs EulerSolver. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/Correction/CMakeLists.txt:301,config,config,301,Sofa/Component/Constraint/Lagrangian/Correction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/Correction/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Constraint.Lagrangian.Model LANGUAGES CXX). set(SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR ""src/sofa/component/constraint/lagrangian/model""). set(HEADER_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/init.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/BilateralConstraintResolution.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/BilateralInteractionConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/BilateralInteractionConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/SlidingConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/SlidingConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/StopperConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/StopperConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/UniformConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/UniformConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/UnilateralConstraintResolution.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/UnilateralInteractionConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/UnilateralInteractionConstraint.inl. ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/BilateralLagrangianConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/BilateralLagrangianConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/FixedLagrangianConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/FixedLagrangianConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/SlidingLagrangianConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/SlidingLagrangianConstraint.inl; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/StopperLagrangianConstraint.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANMODEL_SOURCE_DIR}/StopperLagrangianConst",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/Model/CMakeLists.txt:281,config,config,281,Sofa/Component/Constraint/Lagrangian/Model/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/Model/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Constraint.Lagrangian.Solver LANGUAGES CXX). set(SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR ""src/sofa/component/constraint/lagrangian/solver""). set(HEADER_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/init.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/ConstraintSolverImpl.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/ConstraintStoreLambdaVisitor.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/GenericConstraintProblem.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/GenericConstraintSolver.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/LCPConstraintSolver.h. ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/visitors/ConstraintStoreLambdaVisitor.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/visitors/MechanicalGetConstraintViolationVisitor.h; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/visitors/MechanicalGetConstraintResolutionVisitor.h. ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/ConstraintStoreLambdaVisitor.h #For deprecation; ). set(SOURCE_FILES; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/ConstraintSolverImpl.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/GenericConstraintProblem.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/GenericConstraintSolver.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/LCPConstraintSolver.cpp. ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/visitors/ConstraintStoreLambdaVisitor.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/visitors/MechanicalGetConstraintViolationVisitor.cpp; ${SOFACOMPONENTCONSTRAINTLAGRANGIANSOLVER_SOURCE_DIR}/visitors/MechanicalGetConstraintResolutionVisitor.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/Solver/CMakeLists.txt:285,config,config,285,Sofa/Component/Constraint/Lagrangian/Solver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Lagrangian/Solver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Constraint.Projective LANGUAGES CXX). set(SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR ""src/sofa/component/constraint/projective""). set(HEADER_FILES; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/AffineMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/AffineMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/AttachConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/AttachConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedPlaneConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedPlaneConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedRotationConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedRotationConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedTranslationConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedTranslationConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/HermiteSplineConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/HermiteSplineConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedConstraint.h; ${SOFACOMPONENTCONSTR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:259,config,config,259,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Controller LANGUAGES CXX). set(SOFACOMPONENTCONTROLLER_SOURCE_DIR ""src/sofa/component/controller""). set(HEADER_FILES; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/init.h ; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/MechanicalStateController.h; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/MechanicalStateController.inl; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/Controller.h; ). set(SOURCE_FILES; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/Controller.cpp; ${SOFACOMPONENTCONTROLLER_SOURCE_DIR}/MechanicalStateController.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Controller/CMakeLists.txt:217,config,config,217,Sofa/Component/Controller/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Controller/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Diffusion LANGUAGES CXX). set(SOFACOMPONENTDIFFUSION_SOURCE_DIR ""src/sofa/component/diffusion""). set(HEADER_FILES; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/init.h; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/TetrahedronDiffusionFEMForceField.h; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/TetrahedronDiffusionFEMForceField.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTDIFFUSION_SOURCE_DIR}/TetrahedronDiffusionFEMForceField.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_DIFFUSION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_DIFFUSION_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Diffusion/CMakeLists.txt:213,config,config,213,Sofa/Component/Diffusion/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Diffusion/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Engine LANGUAGES CXX). set(SOFACOMPONENTENGINE_SOURCE_DIR ""src/sofa/component/engine""). sofa_add_subdirectory_modules(SOFACOMPONENTENGINE_TARGETS; DIRECTORIES Analyze Generate Select Transform; ). set(HEADER_FILES; ${SOFACOMPONENTENGINE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTENGINE_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTENGINE_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTENGINE_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/CMakeLists.txt:310,config,config,310,Sofa/Component/Engine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Engine.Analyze LANGUAGES CXX). set(SOFACOMPONENTENGINEANALYZE_SOURCE_DIR ""src/sofa/component/engine/analyze""). set(HEADER_FILES; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/init.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/AverageCoord.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/AverageCoord.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ClusteringEngine.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ClusteringEngine.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/Distances.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/Distances.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/HausdorffDistance.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/HausdorffDistance.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ShapeMatching.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ShapeMatching.inl; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/SumEngine.h; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/SumEngine.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/AverageCoord.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ClusteringEngine.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/Distances.cpp # needs DynamicSparseGeoAlgo; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/HausdorffDistance.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/ShapeMatching.cpp; ${SOFACOMPONENTENGINEANALYZE_SOURCE_DIR}/SumEngine.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Analyze/CMakeLists.txt:231,config,config,231,Sofa/Component/Engine/Analyze/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Analyze/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Engine.Generate LANGUAGES CXX). set(SOFACOMPONENTENGINEGENERATE_SOURCE_DIR ""src/sofa/component/engine/generate""). set(HEADER_FILES; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/init.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeEdgesAndGenerateQuads.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeEdgesAndGenerateQuads.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeQuadsAndGenerateHexas.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeQuadsAndGenerateHexas.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeSurface.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/ExtrudeSurface.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateCylinder.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateCylinder.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateGrid.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateGrid.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateRigidMass.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateRigidMass.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateSphere.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GenerateSphere.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GroupFilterYoungModulus.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/GroupFilterYoungModulus.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/JoinPoints.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/JoinPoints.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeMeshes.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeMeshes.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergePoints.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergePoints.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeSets.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeSets.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeVectors.h; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MergeVectors.inl; ${SOFACOMPONENTENGINEGENERATE_SOURCE_DIR}/MeshBarycentricMapperEngine.h",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Generate/CMakeLists.txt:235,config,config,235,Sofa/Component/Engine/Generate/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Generate/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Engine.Select LANGUAGES CXX). set(SOFACOMPONENTENGINESELECT_SOURCE_DIR ""src/sofa/component/engine/select""). set(HEADER_FILES; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/init.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/BoxROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/BoxROI.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ComplementaryROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ComplementaryROI.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/IndicesFromValues.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/IndicesFromValues.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MergeROIs.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshBoundaryROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshROI.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSampler.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSampler.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSplittingEngine.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSplittingEngine.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSubsetEngine.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/MeshSubsetEngine.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/NearestPointROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/NearestPointROI.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PairBoxRoi.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PairBoxRoi.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PlaneROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PlaneROI.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PointsFromIndices.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/PointsFromIndices.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ProximityROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/ProximityROI.inl; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SelectConnectedLabelsROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SelectLabelROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE_DIR}/SphereROI.h; ${SOFACOMPONENTENGINESELECT_SOURCE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Select/CMakeLists.txt:227,config,config,227,Sofa/Component/Engine/Select/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Select/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Engine.Transform LANGUAGES CXX). set(SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR ""src/sofa/component/engine/transform""). set(HEADER_FILES; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/init.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DifferenceEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DifferenceEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DilateEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DilateEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DisplacementMatrixEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/DisplacementMatrixEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/IndexValueMapper.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/IndexValueMapper.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/Indices2ValuesMapper.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/Indices2ValuesMapper.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/MapIndices.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/MapIndices.inl ; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/MathOp.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/MathOp.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/ProjectiveTransformEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/ProjectiveTransformEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/QuatToRigidEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/QuatToRigidEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/ROIValueMapper.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/RigidToQuatEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/RigidToQuatEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/SmoothMeshEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/SmoothMeshEngine.inl ; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/TransformEngine.h; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/TransformEngine.inl; ${SOFACOMPONENTENGINETRANSFORM_SOURCE_DIR}/TransformMatrixEngine.h; ${SOFACOMPONENTENGINETRANSF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Transform/CMakeLists.txt:239,config,config,239,Sofa/Component/Engine/Transform/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Engine/Transform/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Haptics LANGUAGES CXX). set(SOFACOMPONENTHAPTICS_SOURCE_DIR ""src/sofa/component/haptics""). set(HEADER_FILES; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/init.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/ForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/LCPForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/LCPForceFeedback.inl; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/MechanicalStateForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedback.h; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedbackT.h; ). set(SOURCE_FILES; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/ForceFeedback.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/LCPForceFeedback.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedback.cpp; ${SOFACOMPONENTHAPTICS_SOURCE_DIR}/NullForceFeedbackT.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_HAPTICS_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_HAPTICS_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Haptics/CMakeLists.txt:205,config,config,205,Sofa/Component/Haptics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Haptics/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.IO LANGUAGES CXX). set(SOFACOMPONENTIO_SOURCE_DIR ""src/sofa/component/io""). sofa_add_subdirectory_modules(SOFACOMPONENTIO_TARGETS; DIRECTORIES Mesh; ). set(HEADER_FILES; ${SOFACOMPONENTIO_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTIO_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTIO_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTIO_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/CMakeLists.txt:261,config,config,261,Sofa/Component/IO/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.IO.Mesh LANGUAGES CXX). set(SOFACOMPONENTIOMESH_SOURCE_DIR ""src/sofa/component/io/mesh""). set(HEADER_FILES; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/init.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/BaseVTKReader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/BaseVTKReader.inl; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshOBJLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshVTKLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshGmshLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VisualModelOBJExporter.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VTKExporter.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/GIDMeshLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/GridMeshCreator.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshOffLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshSTLLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshTrianLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshXspLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/OffSequenceLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/SphereLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/StringMeshCreator.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VoxelGridLoader.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/BlenderExporter.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/BlenderExporter.inl; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshExporter.h; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/STLExporter.h; ). set(SOURCE_FILES; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/BaseVTKReader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshOBJLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshVTKLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshGmshLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VisualModelOBJExporter.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/VTKExporter.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/GIDMeshLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/GridMeshCreator.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshOffLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshSTLLoader.cpp; ${SOFACOMPONENTIOMESH_SOURCE_DIR}/MeshTri",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/Mesh/CMakeLists.txt:203,config,config,203,Sofa/Component/IO/Mesh/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/IO/Mesh/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.LinearSolver LANGUAGES CXX). set(SOFACOMPONENTLINEARSOLVER_SOURCE_DIR ""src/sofa/component/linearsolver""). sofa_add_subdirectory_modules(SOFACOMPONENTLINEARSOLVER_TARGETS; DIRECTORIES; Iterative; Ordering; Direct; Preconditioner; ). set(HEADER_FILES; ${SOFACOMPONENTLINEARSOLVER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTLINEARSOLVER_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVER_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTLINEARSOLVER_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/CMakeLists.txt:351,config,config,351,Sofa/Component/LinearSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.LinearSolver.Direct LANGUAGES CXX). set(SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR ""src/sofa/component/linearsolver/direct""). set(HEADER_FILES; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/init.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/AsyncSparseLDLSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/AsyncSparseLDLSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/BTDLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/BTDLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/CholeskySolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/CholeskySolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenDirectSparseSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenDirectSparseSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSolverFactory.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLDLT.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSimplicialLLT.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseLU.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/EigenSparseQR.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/MatrixLinearSystem[BTDMatrix].h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/PrecomputedLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SVDLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SimplicialLDLTTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SimplicialLLTTraits.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCholeskySolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCholeskySolver.inl; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseCommon.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/SparseLDLSolver.h; ${SOFACOMPONENTLINEARSOLVERDIRECT",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt:251,config,config,251,Sofa/Component/LinearSolver/Direct/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.LinearSolver.Iterative LANGUAGES CXX). set(SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR ""src/sofa/component/linearsolver/iterative""). set(HEADER_FILES; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/init.h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/CGLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/CGLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/GraphScatteredTypes.h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/LinearSystemData[GraphScattered].h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixFreeSystem[GraphScattered].h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixLinearSystem[GraphScattered].h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MinResLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MinResLinearSolver.inl; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/ShewchukPCGLinearSolver.h; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/ShewchukPCGLinearSolver.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/CGLinearSolver.cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/GraphScatteredTypes.cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/LinearSystemData[GraphScattered].cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixFreeSystem[GraphScattered].cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixLinearSolver.cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MatrixLinearSystem[GraphScattered].cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/MinResLinearSolver.cpp; ${SOFACOMPONENTLINEARSOLVERITERATIVE_SOURCE_DIR}/ShewchukPCGLinearSolver.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED)",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Iterative/CMakeLists.txt:263,config,config,263,Sofa/Component/LinearSolver/Iterative/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Iterative/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.LinearSolver.Ordering LANGUAGES CXX). set(SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR ""src/sofa/component/linearsolver/ordering""). set(HEADER_FILES; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/init.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/AMDOrderingMethod.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/BaseEigenOrderingMethod.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/COLAMDOrderingMethod.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/NaturalOrderingMethod.h; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/OrderingMethodAccessor.h; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/AMDOrderingMethod.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/COLAMDOrderingMethod.cpp; ${SOFACOMPONENTLINEARSOLVERDIRECT_SOURCE_DIR}/NaturalOrderingMethod.cpp; ). sofa_find_package(Sofa.Core REQUIRED); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Ordering/CMakeLists.txt:255,config,config,255,Sofa/Component/LinearSolver/Ordering/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Ordering/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.LinearSolver.Preconditioner LANGUAGES CXX). set(SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR ""src/sofa/component/linearsolver/preconditioner""). set(HEADER_FILES; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/init.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/BlockJacobiPreconditioner.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/BlockJacobiPreconditioner.inl; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/JacobiPreconditioner.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/JacobiPreconditioner.inl; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/PrecomputedWarpPreconditioner.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/PrecomputedWarpPreconditioner.inl; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/SSORPreconditioner.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/SSORPreconditioner.inl; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/WarpPreconditioner.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/WarpPreconditioner.inl; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/RotationMatrixSystem.h; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/PrecomputedMatrixSystem.h; ). set(SOURCE_FILES; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/BlockJacobiPreconditioner.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/JacobiPreconditioner.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/PrecomputedWarpPreconditioner.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/SSORPreconditioner.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/WarpPreconditioner.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/RotationMatrixSystem.cpp; ${SOFACOMPONENTLINEARSOLVERPRECONDITIONER_SOURCE_DIR}/PrecomputedMatrixSystem.cpp; ). sofa_find_pac",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Preconditioner/CMakeLists.txt:283,config,config,283,Sofa/Component/LinearSolver/Preconditioner/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Preconditioner/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mapping LANGUAGES CXX). set(SOFACOMPONENTMAPPING_SOURCE_DIR ""src/sofa/component/mapping""). sofa_add_subdirectory_modules(SOFACOMPONENTMAPPING_TARGETS; DIRECTORIES Linear NonLinear MappedMatrix; ). set(HEADER_FILES; ${SOFACOMPONENTMAPPING_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMAPPING_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPING_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTMAPPING_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/CMakeLists.txt:311,config,config,311,Sofa/Component/Mapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mapping.Linear LANGUAGES CXX). set(SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR ""src/sofa/component/mapping/linear""). set(HEADER_FILES; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/init.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapper.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapper.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperEdgeSetTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperEdgeSetTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperHexahedronSetTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperHexahedronSetTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperMeshTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperMeshTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperQuadSetTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperQuadSetTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperRegularGridTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperRegularGridTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperSparseGridTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperSparseGridTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperTetrahedronSetTopology.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperTetrahedronSetTopology.inl; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMappers/BarycentricMapperTopologyContainer.h; ${SOFACOMPONENTMAPPINGLINEAR_SOURCE_DIR}/BarycentricMa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt:231,config,config,231,Sofa/Component/Mapping/Linear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/Linear/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mapping.MappedMatrix LANGUAGES CXX). set(SOFACOMPONENTMAPPINGMAPPEDMATRIX_SOURCE_DIR ""src/sofa/component/mapping/mappedmatrix""). set(HEADER_FILES; ${SOFACOMPONENTMAPPINGMAPPEDMATRIX_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMAPPINGMAPPEDMATRIX_SOURCE_DIR}/init.h; ${SOFACOMPONENTMAPPINGMAPPEDMATRIX_SOURCE_DIR}/MappingGeometricStiffnessForceField.h; ${SOFACOMPONENTMAPPINGMAPPEDMATRIX_SOURCE_DIR}/MechanicalMatrixMapper.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGMAPPEDMATRIX_SOURCE_DIR}/init.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/MappedMatrix/CMakeLists.txt:255,config,config,255,Sofa/Component/Mapping/MappedMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/MappedMatrix/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mapping.NonLinear LANGUAGES CXX). set(SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR ""src/sofa/component/mapping/nonlinear""). set(HEADER_FILES; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/init.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceFromTargetMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceFromTargetMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMultiMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMultiMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/NonLinearMappingData.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidRigidMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareDistanceMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareDistanceMapping.inl; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareMapping.h; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareMapping.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceFromTargetMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/DistanceMultiMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/RigidMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareDistanceMapping.cpp; ${SOFACOMPONENTMAPPINGNONLINEAR_SOURCE_DIR}/SquareMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_V",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/NonLinear/CMakeLists.txt:243,config,config,243,Sofa/Component/Mapping/NonLinear/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mapping/NonLinear/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Mass LANGUAGES CXX). set(SOFACOMPONENTMASS_SOURCE_DIR ""src/sofa/component/mass""). set(HEADER_FILES; ${SOFACOMPONENTMASS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMASS_SOURCE_DIR}/init.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/AddMToMatrixFunctor.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/DiagonalMass.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/DiagonalMass.inl; ${SOFACOMPONENTMASS_SOURCE_DIR}/MassType.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/MeshMatrixMass.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/MeshMatrixMass.inl; ${SOFACOMPONENTMASS_SOURCE_DIR}/RigidMassType.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/UniformMass.h; ${SOFACOMPONENTMASS_SOURCE_DIR}/UniformMass.inl; ${SOFACOMPONENTMASS_SOURCE_DIR}/VecMassType.h; ). set(SOURCE_FILES; ${SOFACOMPONENTMASS_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTMASS_SOURCE_DIR}/DiagonalMass.cpp; ${SOFACOMPONENTMASS_SOURCE_DIR}/MeshMatrixMass.cpp; ${SOFACOMPONENTMASS_SOURCE_DIR}/UniformMass.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_MASS_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_MASS_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mass/CMakeLists.txt:193,config,config,193,Sofa/Component/Mass/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Mass/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.MechanicalLoad LANGUAGES CXX). set(SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR ""src/sofa/component/mechanicalload""). set(HEADER_FILES; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/init.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/ConicalForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/ConicalForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/ConstantForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/ConstantForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/DiagonalVelocityDampingForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/DiagonalVelocityDampingForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/EdgePressureForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/EdgePressureForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/EllipsoidForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/EllipsoidForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/InteractionEllipsoidForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/InteractionEllipsoidForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/LinearForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/LinearForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/OscillatingTorsionPressureForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/OscillatingTorsionPressureForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/PlaneForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/PlaneForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/QuadPressureForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/QuadPressureForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/SphereForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/SphereForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/SurfacePressureForceField.h; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DIR}/SurfacePressureForceField.inl; ${SOFACOMPONENTMECHANICALLOAD_SOURCE_DI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/MechanicalLoad/CMakeLists.txt:233,config,config,233,Sofa/Component/MechanicalLoad/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/MechanicalLoad/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.ODESolver LANGUAGES CXX). set(SOFACOMPONENTODESOLVER_SOURCE_DIR ""src/sofa/component/odesolver""). sofa_add_subdirectory_modules(SOFACOMPONENTODESOLVER_TARGETS; DIRECTORIES Forward Backward; ). set(HEADER_FILES; ${SOFACOMPONENTODESOLVER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTODESOLVER_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVER_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTODESOLVER_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/CMakeLists.txt:308,config,config,308,Sofa/Component/ODESolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.ODESolver.Backward LANGUAGES CXX). set(SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR ""src/sofa/component/odesolver/backward""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/init.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/EulerImplicitSolver.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/StaticSolver.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/VariationalSymplecticSolver.h; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/NewmarkImplicitSolver.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/EulerImplicitSolver.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/StaticSolver.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/VariationalSymplecticSolver.cpp; ${SOFACOMPONENTODESOLVERBACKWARD_SOURCE_DIR}/NewmarkImplicitSolver.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). cmake_dependent_option(SOFA_COMPONENT_ODESOLVER_BACKWARD_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ODESOLVER_BACKWARD_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/CMakeLists.txt:247,config,config,247,Sofa/Component/ODESolver/Backward/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.ODESolver.Forward LANGUAGES CXX). set(SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR ""src/sofa/component/odesolver/forward""). set(HEADER_FILES; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/init.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/EulerSolver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/CentralDifferenceSolver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta2Solver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta4Solver.h; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/DampVelocitySolver.h; ). set(SOURCE_FILES; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/EulerSolver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/CentralDifferenceSolver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta2Solver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/RungeKutta4Solver.cpp; ${SOFACOMPONENTODESOLVERFORWARD_SOURCE_DIR}/DampVelocitySolver.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). cmake_dependent_option(SOFA_COMPONENT_ODESOLVER_FORWARD_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_ODESOLVER_FORWARD_BUILD_TESTS); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/CMakeLists.txt:243,config,config,243,Sofa/Component/ODESolver/Forward/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Playback LANGUAGES CXX). set(SOFACOMPONENTPLAYBACK_SOURCE_DIR ""src/sofa/component/playback""). set(HEADER_FILES; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/init.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareState.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareTopology.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/InputEventReader.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadState.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadState.inl; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadTopology.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadTopology.inl; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteState.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteState.inl; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteTopology.h; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteTopology.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareState.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/CompareTopology.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/InputEventReader.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadState.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/ReadTopology.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteState.cpp; ${SOFACOMPONENTPLAYBACK_SOURCE_DIR}/WriteTopology.cpp; ). sofa_find_package(ZLIB REQUIRED); sofa_find_package(Sofa.Simulation.Common REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${WRAPPER_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} PUBLIC ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmak",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Playback/CMakeLists.txt:209,config,config,209,Sofa/Component/Playback/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Playback/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SceneUtility LANGUAGES CXX). set(SOFACOMPONENTSCENEUTILITY_SOURCE_DIR ""src/sofa/component/sceneutility""). set(HEADER_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt:225,config,config,225,Sofa/Component/SceneUtility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Setting LANGUAGES CXX). set(SOFACOMPONENTUSERSETTING_SOURCE_DIR ""src/sofa/component/setting""). set(HEADER_FILES; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/init.h; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/BackgroundSetting.h; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/MouseButtonSetting.h; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/SofaDefaultPathSetting.h; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/StatsSetting.h; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/ViewerSetting.h; ). set(SOURCE_FILES; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/BackgroundSetting.cpp; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/MouseButtonSetting.cpp; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/SofaDefaultPathSetting.cpp; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/StatsSetting.cpp; ${SOFACOMPONENTUSERSETTING_SOURCE_DIR}/ViewerSetting.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Setting/CMakeLists.txt:213,config,config,213,Sofa/Component/Setting/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Setting/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR ""src/sofa/component/solidmechanics""). sofa_add_subdirectory_modules(SOFACOMPONENTSOLIDMECHANICS_TARGETS; DIRECTORIES Spring FEM TensorMass; ). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICS_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTSOLIDMECHANICS_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); add_subdirectory(simutests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/CMakeLists.txt:338,config,config,338,Sofa/Component/SolidMechanics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics.FEM LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICSFEM_SOURCE_DIR ""src/sofa/component/solidmechanics/fem""). set(OFACOMPONENTSOLIDMECHANICSFEM_DIRS Elastic HyperElastic NonUniform); foreach(fem_dir ${OFACOMPONENTSOLIDMECHANICSFEM_DIRS}); sofa_add_subdirectory(module ${fem_dir} ${PROJECT_NAME}.${fem_dir} ON); if(TARGET ${PROJECT_NAME}.${fem_dir}); list(APPEND SOFACOMPONENTSOLIDMECHANICSFEM_TARGETS ${PROJECT_NAME}.${fem_dir}); endif(); endforeach(). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEM_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICSFEM_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEM_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTSOLIDMECHANICSFEM_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/CMakeLists.txt:590,config,config,590,Sofa/Component/SolidMechanics/FEM/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics.FEM.Elastic LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR ""src/sofa/component/solidmechanics/fem/elastic/""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/init.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/fwd.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/BeamFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/BeamFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/FastTetrahedralCorotationalForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/FastTetrahedralCorotationalForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedralFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedralFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedralFEMForceFieldAndMass.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedralFEMForceFieldAndMass.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedronFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedronFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedronFEMForceFieldAndMass.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/HexahedronFEMForceFieldAndMass.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/QuadBendingFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/QuadBendingFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TetrahedralCorotationalFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TetrahedralCorotationalFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TetrahedronFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TetrahedronFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMELASTIC_SOURCE_DIR}/TriangleFEMForceField.h; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/Elastic/CMakeLists.txt:278,config,config,278,Sofa/Component/SolidMechanics/FEM/Elastic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/Elastic/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics.FEM.HyperElastic LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR ""src/sofa/component/solidmechanics/fem/hyperelastic/""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/init.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/StandardTetrahedralFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/StandardTetrahedralFEMForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/TetrahedronHyperelasticityFEMDrawing.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/TetrahedronHyperelasticityFEMForceField.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/TetrahedronHyperelasticityFEMForceField.inl ; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/BaseMaterial.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/BoyceAndArruda.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/Costa.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/HyperelasticMaterial.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/MooneyRivlin.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/NeoHookean.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/Ogden.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/PlasticMaterial.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/StableNeoHookean.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/STVenantKirchhoff.h; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/material/VerondaWestman.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC_SOURCE_DIR}/StandardTetrahedralFEMForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMHYPERELASTIC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/HyperElastic/CMakeLists.txt:298,config,config,298,Sofa/Component/SolidMechanics/FEM/HyperElastic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/HyperElastic/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics.FEM.NonUniform LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR ""src/sofa/component/solidmechanics/fem/nonuniform/""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/init.h; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/HexahedronCompositeFEMForceFieldAndMass.h; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/HexahedronCompositeFEMForceFieldAndMass.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/HexahedronCompositeFEMMapping.h; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/HexahedronCompositeFEMMapping.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/NonUniformHexahedralFEMForceFieldAndMass.h; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/NonUniformHexahedralFEMForceFieldAndMass.inl; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/NonUniformHexahedronFEMForceFieldAndMass.h; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/NonUniformHexahedronFEMForceFieldAndMass.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/HexahedronCompositeFEMForceFieldAndMass.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/HexahedronCompositeFEMMapping.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/NonUniformHexahedralFEMForceFieldAndMass.cpp; ${SOFACOMPONENTSOLIDMECHANICSFEMNONUNIFORM_SOURCE_DIR}/NonUniformHexahedronFEMForceFieldAndMass.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/NonUniform/CMakeLists.txt:290,config,config,290,Sofa/Component/SolidMechanics/FEM/NonUniform/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/FEM/NonUniform/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics.Spring LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR ""src/sofa/component/solidmechanics/spring""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/init.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/AngularSpringForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/AngularSpringForceField.inl; # ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/BoxStiffSpringForceField.h; # ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/BoxStiffSpringForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/FastTriangularBendingSprings.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/FastTriangularBendingSprings.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/FrameSpringForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/FrameSpringForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/GearSpringForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/GearSpringForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/JointSpring.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/JointSpring.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/JointSpringForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/JointSpringForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/LinearSpring.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/MeshSpringForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/MeshSpringForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/PolynomialRestShapeSpringsForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/PolynomialRestShapeSpringsForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/PolynomialSpringsForceField.h; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/PolynomialSpringsForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSSPRING_SOURCE_DIR}/QuadBendingSprings.h; ${SOFACOMPONE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Spring/CMakeLists.txt:259,config,config,259,Sofa/Component/SolidMechanics/Spring/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/Spring/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SolidMechanics.TensorMass LANGUAGES CXX). set(SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR ""src/sofa/component/solidmechanics/tensormass""). set(HEADER_FILES; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/init.h; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/TetrahedralTensorMassForceField.h; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/TetrahedralTensorMassForceField.inl; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/TriangularTensorMassForceField.h; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/TriangularTensorMassForceField.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/TetrahedralTensorMassForceField.cpp; ${SOFACOMPONENTSOLIDMECHANICSTENSORMASS_SOURCE_DIR}/TriangularTensorMassForceField.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/TensorMass/CMakeLists.txt:275,config,config,275,Sofa/Component/SolidMechanics/TensorMass/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SolidMechanics/TensorMass/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.StateContainer LANGUAGES CXX). set(SOFACOMPONENTSTATECONTAINER_SOURCE_DIR ""src/sofa/component/statecontainer""). set(HEADER_FILES; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/init.h; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MechanicalObject.h; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MechanicalObject.inl; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MappedObject.h; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MappedObject.inl; ). set(SOURCE_FILES; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MappedObject.cpp; ${SOFACOMPONENTSTATECONTAINER_SOURCE_DIR}/MechanicalObject.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_STATECONTAINER_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_STATECONTAINER_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/StateContainer/CMakeLists.txt:233,config,config,233,Sofa/Component/StateContainer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/StateContainer/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGY_SOURCE_DIR ""src/sofa/component/topology""). sofa_add_subdirectory_modules(SOFACOMPONENTTOPOLOGY_TARGETS; DIRECTORIES Container Mapping Utility; ). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGY_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGY_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTTOPOLOGY_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). if(SOFA_BUILD_TESTS); add_subdirectory(Testing); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/CMakeLists.txt:312,config,config,312,Sofa/Component/Topology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Container LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYCONTAINER_SOURCE_DIR ""src/sofa/component/topology/container""). sofa_add_subdirectory_modules(SOFACOMPONENTTOPOLOGYCONTAINER_TARGETS; DIRECTORIES Constant Dynamic Grid; ). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINER_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYCONTAINER_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINER_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMPONENTTOPOLOGYCONTAINER_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/CMakeLists.txt:355,config,config,355,Sofa/Component/Topology/Container/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Container.Constant LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR ""src/sofa/component/topology/container/constant""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/init.h; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/MeshTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/CubeTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/SphereQuadTopology.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/MeshTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/CubeTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERCONSTANT_SOURCE_DIR}/SphereQuadTopology.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_TOPOLOGY_CONTAINER_CONSTANT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_TOPOLOGY_CONTAINER_CONSTANT_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Constant/CMakeLists.txt:281,config,config,281,Sofa/Component/Topology/Container/Constant/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Constant/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Container.Dynamic LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR ""src/sofa/component/topology/container/dynamic""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/init.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/fwd.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/CommonAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridGeometryAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridGeometryAlgorithms.inl; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridTopologyAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridTopologyContainer.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/DynamicSparseGridTopologyModifier.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/EdgeSetGeometryAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/EdgeSetGeometryAlgorithms.inl; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/EdgeSetTopologyAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/EdgeSetTopologyContainer.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/EdgeSetTopologyModifier.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/HexahedronSetGeometryAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/HexahedronSetGeometryAlgorithms.inl; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/HexahedronSetTopologyAlgorithms.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/HexahedronSetTopologyContainer.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/HexahedronSetTopologyModifier.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/MultilevelHexahedronSetTopologyContainer.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE_DIR}/NumericalIntegrationDescriptor.h; ${SOFACOMPONENTTOPOLOGYCONTAINERDYNAMIC_SOURCE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Dynamic/CMakeLists.txt:277,config,config,277,Sofa/Component/Topology/Container/Dynamic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Dynamic/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Container.Grid LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR ""src/sofa/component/topology/container/grid""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/init.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/polygon_cube_intersection/polygon_cube_intersection.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/polygon_cube_intersection/vec.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/GridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/RegularGridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/CylinderGridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SphereGridTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridMultipleTopology.h; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridRamificationTopology.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/polygon_cube_intersection/fast_polygon_cube_intersection.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/polygon_cube_intersection/polygon_cube_intersection.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/GridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/RegularGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/CylinderGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SphereGridTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridMultipleTopology.cpp; ${SOFACOMPONENTTOPOLOGYCONTAINERGRID_SOURCE_DIR}/SparseGridRamificationTopology.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Constant REQUIRED). add_library(${PR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Grid/CMakeLists.txt:265,config,config,265,Sofa/Component/Topology/Container/Grid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Container/Grid/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Mapping LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR ""src/sofa/component/topology/mapping""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/init.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/CenterPointTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Edge2QuadTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Hexa2QuadTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Hexa2TetraTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/IdentityTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Quad2TriangleTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/SubsetTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Tetra2TriangleTopologicalMapping.h; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Triangle2EdgeTopologicalMapping.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/CenterPointTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Edge2QuadTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Hexa2QuadTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Hexa2TetraTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/IdentityTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Quad2TriangleTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/SubsetTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Tetra2TriangleTopologicalMapping.cpp; ${SOFACOMPONENTTOPOLOGYMAPPING_SOURCE_DIR}/Triangle2EdgeTopologicalMapping.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Mapping/CMakeLists.txt:239,config,config,239,Sofa/Component/Topology/Mapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Mapping/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Topology.Utility LANGUAGES CXX). set(SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR ""src/sofa/component/topology/utility""). set(HEADER_FILES; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologicalChangeProcessor.h; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyBoundingTrasher.h; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyBoundingTrasher.inl; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyChecker.h; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologicalChangeProcessor.cpp; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyBoundingTrasher.cpp; ${SOFACOMPONENTTOPOLOGYUTILITY_SOURCE_DIR}/TopologyChecker.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(ZLIB BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.Component.Topology.Container.Dynamic); if(ZLIB_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_TOPOLOGY_UTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_TOPOLOGY_UTILITY_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Utility/CMakeLists.txt:239,config,config,239,Sofa/Component/Topology/Utility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Topology/Utility/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.Visual LANGUAGES CXX). set(SOFACOMPONENTVISUAL_SOURCE_DIR ""src/sofa/component/visual""). set(HEADER_FILES; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/init.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/BaseCamera.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Camera.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/InteractiveCamera.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/LineAxis.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/RecordedCamera.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/TrailRenderer.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/TrailRenderer.inl; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Visual3DText.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualGrid.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualModelImpl.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualStyle.h; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualTransform.h; ). set(SOURCE_FILES; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/BaseCamera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Camera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/InteractiveCamera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/LineAxis.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/RecordedCamera.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/TrailRenderer.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/Visual3DText.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualGrid.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualModelImpl.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualStyle.cpp; ${SOFACOMPONENTVISUAL_SOURCE_DIR}/VisualTransform.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(TinyXML2 REQUIRED) # BaseCamera; sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED) # VisualModelImpl. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2). sofa_create_package_with_ta",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Visual/CMakeLists.txt:201,config,config,201,Sofa/Component/Visual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Visual/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Config LANGUAGES CXX). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_PREFIX_PATH ""${CMAKE_BINARY_DIR}/lib/cmake""). include(SofaMacros). # Clear internal target list (set by the macro sofa_add_generic() ); set_property(GLOBAL PROPERTY __GlobalTargetList__ """"); set_property(GLOBAL PROPERTY __GlobalTargetNameList__ """"). # Help RELOCATABLE plugins to resolve their dependencies.; # See SofaMacrosInstall.cmake for usage of this property.; define_property(TARGET; PROPERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYP",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:51,Config,Config,51,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,"['Config', 'plugin']","['Config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Core LANGUAGES CXX). set(SRC_ROOT ""src/sofa/core""). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/AccumulationVecId.h; ${SRC_ROOT}/AccumulationVecId.inl; ${SRC_ROOT}/BaseMatrixAccumulatorComponent.h; ${SRC_ROOT}/BaseLocalMappingMatrix.h; ${SRC_ROOT}/BaseMapping.h; ${SRC_ROOT}/BaseState.h; ${SRC_ROOT}/BehaviorModel.h; ${SRC_ROOT}/CategoryLibrary.h; ${SRC_ROOT}/CollisionElement.h; ${SRC_ROOT}/CollisionModel.h; ${SRC_ROOT}/ComponentLibrary.h; ${SRC_ROOT}/ComponentNameHelper.h; ${SRC_ROOT}/ConstraintOrder.h; ${SRC_ROOT}/ConstraintParams.h; ${SRC_ROOT}/DataEngine.h; ${SRC_ROOT}/DataTracker.h; ${SRC_ROOT}/DataTrackerCallback.h; ${SRC_ROOT}/DataTrackerFunctor.h; ${SRC_ROOT}/DerivativeMatrix.h; ${SRC_ROOT}/DevBaseMonitor.h; ${SRC_ROOT}/ExecParams.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/Mapping.h; ${SRC_ROOT}/Mapping.inl; ${SRC_ROOT}/MappingHelper.h; ${SRC_ROOT}/MatrixAccumulator.h; ${SRC_ROOT}/MechanicalParams.h; ${SRC_ROOT}/MechanicalStatesMatrixAccumulators.h; ${SRC_ROOT}/Multi2Mapping.h; ${SRC_ROOT}/Multi2Mapping.inl; ${SRC_ROOT}/MultiMapping.h; ${SRC_ROOT}/MultiMapping.inl; ${SRC_ROOT}/MultiVecId.h; ${SRC_ROOT}/ObjectFactory.h; ${SRC_ROOT}/PathResolver.h; ${SRC_ROOT}/SofaLibrary.h; ${SRC_ROOT}/sptr.h; ${SRC_ROOT}/State.h; ${SRC_ROOT}/State.inl; ${SRC_ROOT}/VecId.h; ${SRC_ROOT}/behavior/BaseAnimationLoop.h; ${SRC_ROOT}/behavior/BaseConstraint.h; ${SRC_ROOT}/behavior/BaseConstraintCorrection.h; ${SRC_ROOT}/behavior/BaseConstraintSet.h; ${SRC_ROOT}/behavior/BaseController.h; ${SRC_ROOT}/behavior/BaseForceField.h; ${SRC_ROOT}/behavior/BaseInteractionConstraint.h; ${SRC_ROOT}/behavior/BaseInteractionForceField.h; ${SRC_ROOT}/behavior/BaseInteractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/BaseLinearSolver.h; ${SRC_ROOT}/behavior/BaseLocalForceFieldMatrix.h; ${SRC_ROOT}/behavior/BaseLocalMassMatrix.h; ${SRC_ROOT}/behavior/BaseMass.h; ${SRC_ROOT}/behavior/BaseMatrixLinearSystem.h; ${SRC_ROOT}/behav",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:133,config,config,133,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.DefaultType LANGUAGES CXX). set(SRC_ROOT ""src/sofa/defaulttype""). set(HEADER_FILES; ${SRC_ROOT}/AbstractTypeInfo.h; ${SRC_ROOT}/DataTypeInfo.h; ${SRC_ROOT}/DataTypeOperations.h; ${SRC_ROOT}/MapMapSparseMatrix.h; ${SRC_ROOT}/MapMapSparseMatrixEigenUtils.h; ${SRC_ROOT}/MatrixExporter.h; ${SRC_ROOT}/RigidCoord.h; ${SRC_ROOT}/RigidDeriv.h; ${SRC_ROOT}/RigidMass.h; ${SRC_ROOT}/RigidTypes.h; ${SRC_ROOT}/RigidVec6Types.h; ${SRC_ROOT}/SolidTypes.h; ${SRC_ROOT}/SolidTypes.inl; ${SRC_ROOT}/TemplatesAliases.h; ${SRC_ROOT}/TypeInfoID.h; ${SRC_ROOT}/TypeInfoRegistry.h; ${SRC_ROOT}/TypeInfoRegistryTools.h; ${SRC_ROOT}/VecTypes.h; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/init.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/typeinfo/DataTypeInfoDynamicWrapper.h; ${SRC_ROOT}/typeinfo/DataTypeInfo.h; ${SRC_ROOT}/typeinfo/NoTypeInfo.h; ${SRC_ROOT}/typeinfo/NameOnlyTypeInfo.h; ${SRC_ROOT}/typeinfo/TypeInfo_Bool.h; ${SRC_ROOT}/typeinfo/TypeInfo_BoundingBox.h; ${SRC_ROOT}/typeinfo/TypeInfo_FixedArray.h; ${SRC_ROOT}/typeinfo/TypeInfo_Integer.h; ${SRC_ROOT}/typeinfo/TypeInfo_Mat.h; ${SRC_ROOT}/typeinfo/TypeInfo_Quat.h; ${SRC_ROOT}/typeinfo/TypeInfo_RigidTypes.h; ${SRC_ROOT}/typeinfo/TypeInfo_RGBAColor.h; ${SRC_ROOT}/typeinfo/TypeInfo_Set.h; ${SRC_ROOT}/typeinfo/TypeInfo_Scalar.h; ${SRC_ROOT}/typeinfo/TypeInfo_Text.h; ${SRC_ROOT}/typeinfo/TypeInfo_Vector.h; ${SRC_ROOT}/typeinfo/TypeInfo_Vec.h; ${SRC_ROOT}/typeinfo/TypeInfo_VecTypes.h; ${SRC_ROOT}/typeinfo/TypeInfo_Topology.h. ${SRC_ROOT}/typeinfo/models/IncompleteTypeInfo.h; ${SRC_ROOT}/typeinfo/models/BoolTypeInfo.h; ${SRC_ROOT}/typeinfo/models/IntegerTypeInfo.h; ${SRC_ROOT}/typeinfo/models/FixedArrayTypeInfo.h; ${SRC_ROOT}/typeinfo/models/SetTypeInfo.h; ${SRC_ROOT}/typeinfo/models/ScalarTypeInfo.h; ${SRC_ROOT}/typeinfo/models/TextTypeInfo.h; ${SRC_ROOT}/typeinfo/models/VectorTypeInfo.h; ). set(SOURCE_FILES; ${SRC_ROOT}/AbstractTypeInfo.cpp; ${SRC_ROOT}/MatrixExporter.cpp; ${SRC_ROOT}/SolidTypes.cpp; ${SRC_R",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/CMakeLists.txt:687,config,config,687,Sofa/framework/DefaultType/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/DefaultType/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Framework LANGUAGES CXX). set(SOFAFRAMEWORK_SOURCE_DIR ""src/sofa/framework""). set(SOFAFRAMEWORK_MODULES Sofa.Config Sofa.Type Sofa.Geometry Sofa.Topology Sofa.Helper Sofa.LinearAlgebra Sofa.DefaultType Sofa.Core Sofa.Simulation.Core Sofa.Simulation.Common Sofa.Simulation.Graph Sofa.Testing); foreach(framework_module ${SOFAFRAMEWORK_MODULES}); sofa_find_package(${framework_module} REQUIRED); endforeach(). set(HEADER_FILES; ${SOFAFRAMEWORK_SOURCE_DIR}/config.h.in; ${SOFAFRAMEWORK_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFAFRAMEWORK_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAFRAMEWORK_MODULES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Framework/CMakeLists.txt:160,Config,Config,160,Sofa/framework/Framework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Framework/CMakeLists.txt,2,"['Config', 'config']","['Config', 'config']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL LANGUAGES CXX). set(SOFAGLSRC_ROOT ""src/sofa/gl""). sofa_find_package(OpenGL REQUIRED BOTH_SCOPES); sofa_find_package(GLEW BOTH_SCOPES REQUIRED); sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED). set(HEADER_FILES; ${SOFAGLSRC_ROOT}/config.h.in; ${SOFAGLSRC_ROOT}/initSofa.GL.h; ${SOFAGLSRC_ROOT}/gl.h; ${SOFAGLSRC_ROOT}/glu.h; ${SOFAGLSRC_ROOT}/Capture.h; ${SOFAGLSRC_ROOT}/Color.h; ${SOFAGLSRC_ROOT}/RAII.h; ${SOFAGLSRC_ROOT}/template.h; ${SOFAGLSRC_ROOT}/Axis.h; ${SOFAGLSRC_ROOT}/BasicShapes.h; ${SOFAGLSRC_ROOT}/BasicShapesGL.h; ${SOFAGLSRC_ROOT}/BasicShapesGL.inl; ${SOFAGLSRC_ROOT}/Cylinder.h; ${SOFAGLSRC_ROOT}/Texture.h; ${SOFAGLSRC_ROOT}/VideoRecorderFFMPEG.h; ${SOFAGLSRC_ROOT}/glText.h; ${SOFAGLSRC_ROOT}/glText.inl; ${SOFAGLSRC_ROOT}/TransformationGL.h; ${SOFAGLSRC_ROOT}/DrawToolGL.h; ). set(SOURCE_FILES; ${SOFAGLSRC_ROOT}/initSofa.GL.cpp; ${SOFAGLSRC_ROOT}/Axis.cpp; ${SOFAGLSRC_ROOT}/BasicShapesGL.cpp; ${SOFAGLSRC_ROOT}/Cylinder.cpp; ${SOFAGLSRC_ROOT}/glText.cpp; ${SOFAGLSRC_ROOT}/Capture.cpp; ${SOFAGLSRC_ROOT}/Texture.cpp; ${SOFAGLSRC_ROOT}/VideoRecorderFFMPEG.cpp; ${SOFAGLSRC_ROOT}/gl.cpp; ${SOFAGLSRC_ROOT}/TransformationGL.cpp; ${SOFAGLSRC_ROOT}/DrawToolGL.cpp; ). if(GLEW_FOUND); list(APPEND HEADER_FILES; ${SOFAGLSRC_ROOT}/FrameBufferObject.h; ${SOFAGLSRC_ROOT}/GLSLShader.h; ); list(APPEND SOURCE_FILES; ${SOFAGLSRC_ROOT}/FrameBufferObject.cpp; ${SOFAGLSRC_ROOT}/GLSLShader.cpp; ); list(APPEND SHADER_FILES; ${SOFAGLSRC_ROOT}/shaders/generateSphere.cppglsl; ); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType). if(TARGET OpenGL::GL AND TARGET OpenGL::GLU) # Imported targets defined since CMake 3.8; target_link_libraries(${PROJECT_NAME} PUBLIC OpenGL::GL OpenGL::GLU); else(); target_link_libraries(${PROJECT_NAME} PUBLIC ${OPENGL_LIBRARIES}); target_include_directories(${PROJEC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/CMakeLists.txt:322,config,config,322,Sofa/GL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component LANGUAGES CXX). set(SOFAGLCOMPONENT_SOURCE_DIR ""src/sofa/gl/component""). set(SOFAGLCOMPONENT_DIRS Rendering2D Rendering3D Engine Shader); set(SOFAGLCOMPONENT_TARGETS); foreach(gl_dir ${SOFAGLCOMPONENT_DIRS}); sofa_add_subdirectory(module ${gl_dir} ${PROJECT_NAME}.${gl_dir} ON); if(TARGET ${PROJECT_NAME}.${gl_dir}); list(APPEND SOFAGLCOMPONENT_TARGETS ${PROJECT_NAME}.${gl_dir}); endif(); endforeach(). set(HEADER_FILES; ${SOFAGLCOMPONENT_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENT_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENT_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGLCOMPONENT_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/CMakeLists.txt:516,config,config,516,Sofa/GL/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component.Engine LANGUAGES CXX). set(SOFAGLCOMPONENTENGINE_SOURCE_DIR ""src/sofa/gl/component/engine""). set(HEADER_FILES; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/TextureInterpolation.h; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/TextureInterpolation.inl; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTENGINE_SOURCE_DIR}/TextureInterpolation.cpp; ). sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.GL). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GL_COMPONENT_ENGINE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GL_COMPONENT_ENGINE_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Engine/CMakeLists.txt:211,config,config,211,Sofa/GL/Component/Engine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Engine/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component.Rendering2D LANGUAGES CXX). set(SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR ""src/sofa/gl/component/rendering2d""). set(HEADER_FILES; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglColorMap.h; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglLabel.h; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglViewport.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglColorMap.cpp; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglLabel.cpp; ${SOFAGLCOMPONENTRENDRING2D_SOURCE_DIR}/OglViewport.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core Sofa.GL Sofa.Component.Visual Sofa.Component.Setting). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GL_COMPONENT_RENDERING2D_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GL_COMPONENT_RENDERING2D_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering2D/CMakeLists.txt:229,config,config,229,Sofa/GL/Component/Rendering2D/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering2D/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component.Rendering3D LANGUAGES CXX). set(SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR ""src/sofa/gl/component/rendering3d""). set(HEADER_FILES; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/ClipPlane.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/DataDisplay.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/MergeVisualModels.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglCylinderModel.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglModel.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglSceneFrame.h; 	${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/PointSplatModel.h; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/SlicedVolumetricModel.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/ClipPlane.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/DataDisplay.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/MergeVisualModels.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglCylinderModel.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglModel.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/OglSceneFrame.cpp; 	${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/PointSplatModel.cpp; ${SOFAGLCOMPONENTRENDERING3D_SOURCE_DIR}/SlicedVolumetricModel.cpp; ). sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED) # for VisualModelImpl; sofa_find_package(Sofa.GL.Component.Rendering2D REQUIRED) # for OglColoMap in DataDisplay. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual Sofa.GL.Component.Rendering2D Sofa.GL). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering3D/CMakeLists.txt:231,config,config,231,Sofa/GL/Component/Rendering3D/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Rendering3D/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GL.Component.Shader LANGUAGES CXX). set(SOFAGLCOMPONENTONSHADER_SOURCE_DIR ""src/sofa/gl/component/shader""). set(HEADER_FILES; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/config.h.in; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/init.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/CompositingVisualLoop.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/LightManager.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/Light.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OrderIndependentTransparencyManager.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglOITShader.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglAttribute.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglAttribute.inl; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShader.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShaderMacro.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShaderVisualModel.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShadowShader.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglTexture.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglTexturePointer.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglVariable.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglVariable.inl; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglRenderingSRGB.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/PostProcessManager.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/VisualManagerPass.h; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/VisualManagerSecondaryPass.h; ). set(SOURCE_FILES; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/init.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/CompositingVisualLoop.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/Light.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/LightManager.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OrderIndependentTransparencyManager.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglOITShader.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglAttribute.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShader.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShaderMacro.cpp; ${SOFAGLCOMPONENTONSHADER_SOURCE_DIR}/OglShaderVisualModel.cpp; ${SOFAGLCOMPONENTONSHADER_S",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Shader/CMakeLists.txt:215,config,config,215,Sofa/GL/Component/Shader/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GL/Component/Shader/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI LANGUAGES CXX). set(SOFAGUI_SOURCE_DIR ""src/sofa/gui""). set(SOFAGUI_TARGETS); set(SOFAGUI_MISSINGTARGETS). sofa_add_subdirectory(module Component ${PROJECT_NAME}.Component ON); if(TARGET ${PROJECT_NAME}.Component); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Component); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Component); endif(). sofa_add_subdirectory(library Common ${PROJECT_NAME}.Common ON); if(TARGET ${PROJECT_NAME}.Common); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Common); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Common); endif(). set(SOFAGUI_DIRS Batch Qt); foreach(dir ${SOFAGUI_DIRS}); sofa_add_subdirectory(plugin ${dir} ${PROJECT_NAME}.${dir} ON); if(TARGET ${PROJECT_NAME}.${dir}); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.${dir}); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.${dir}); endif(); endforeach(). # HeadlessRecorder is still an ""optional"" dependency of Sofa.GUI; sofa_add_subdirectory(plugin HeadlessRecorder ${PROJECT_NAME}.HeadlessRecorder OFF); if(TARGET ${PROJECT_NAME}.HeadlessRecorder); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.HeadlessRecorder); set(SOFA_GUI_HAVE_SOFA_GUI_HEADLESSRECORDER 1); endif(). option(LIBRARY_SOFA_GUI ""Build the Sofa.Gui library."" ON). if(LIBRARY_SOFA_GUI); if(SOFAGUI_MISSINGTARGETS); message(""${PROJECT_NAME}: package and library will not be created because some dependencies are missing or disabled: ${SOFAGUI_MISSINGTARGETS}""); return(); endif(). set(HEADER_FILES; ${SOFAGUI_SOURCE_DIR}/config.h.in; ${SOFAGUI_SOURCE_DIR}/init.h; ); set(SOURCE_FILES; ${SOFAGUI_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGUI_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${P",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt:716,plugin,plugin,716,Sofa/GUI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Batch LANGUAGES CXX). set(SOFAGUIBATCH_ROOT src/sofa/gui/batch). set(HEADER_FILES; ${SOFAGUIBATCH_ROOT}/config.h.in; ${SOFAGUIBATCH_ROOT}/init.h; ${SOFAGUIBATCH_ROOT}/BatchGUI.h; ${SOFAGUIBATCH_ROOT}/ProgressBar.h; ${SOFAGUIBATCH_ROOT}/indicators/indicators.hpp; ). set(SOURCE_FILES; ${SOFAGUIBATCH_ROOT}/init.cpp; ${SOFAGUIBATCH_ROOT}/BatchGUI.cpp; ${SOFAGUIBATCH_ROOT}/ProgressBar.cpp; ). sofa_find_package(Sofa.GUI.Common REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Batch/CMakeLists.txt:159,config,config,159,Sofa/GUI/Batch/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Batch/CMakeLists.txt,1,['config'],['config']
Modifiability,cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Component LANGUAGES CXX). set(SOFAGUICOMPONENT_SOURCE_DIR src/sofa/gui/component). set(HEADER_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/config.h.in; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SO,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:187,config,config,187,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.HeadlessRecorder). find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED). # FFMPEG; find_package(FFMPEG_exec). # X11; sofa_find_package(X11 QUIET); if(X11_FOUND); message(""Found X11 libraries""); include_directories(${X11_INCLUDE_DIR}); else(); message(SEND_ERROR ""Can't find X11 libraries.""); endif(). set(SRC_ROOT src/sofa/gui/headlessrecorder). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/init.h; ${SRC_ROOT}/HeadlessRecorder.h; ). set(SOURCE_FILES; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/HeadlessRecorder.cpp; ). if(SOFA_BUILD_TESTS); configure_file(${SRC_ROOT}/headlessRecorder_test.sh ${CMAKE_BINARY_DIR}/bin/headlessRecorder_test COPYONLY); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common Sofa.GL); target_link_libraries(${PROJECT_NAME} PUBLIC ${X11_LIBRARIES}). # Create build and install versions of .ini file for resources finding; set(FFMPEG_EXEC_PATH ""${FFMPEG_EXEC_FILE}"") # FFMPEG_EXEC_FILE is set by FindFFMEG_exec.cmake; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); get_filename_component(FFMPEG_EXEC_FILENAME ""${FFMPEG_EXEC_FILE}"" NAME); set(FFMPEG_EXEC_PATH ""../bin/${FFMPEG_EXEC_FILENAME}"") # relative path for install dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/CMakeLists.txt:454,config,config,454,Sofa/GUI/HeadlessRecorder/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Geometry LANGUAGES CXX). set(SOFAGEOMETRYSRC_ROOT ""src/sofa/geometry""). set(HEADER_FILES; ${SOFAGEOMETRYSRC_ROOT}/config.h.in; ${SOFAGEOMETRYSRC_ROOT}/init.h; ${SOFAGEOMETRYSRC_ROOT}/Edge.h; ${SOFAGEOMETRYSRC_ROOT}/ElementInfo.h; ${SOFAGEOMETRYSRC_ROOT}/ElementType.h; ${SOFAGEOMETRYSRC_ROOT}/Hexahedron.h; ${SOFAGEOMETRYSRC_ROOT}/Pentahedron.h; ${SOFAGEOMETRYSRC_ROOT}/Point.h; ${SOFAGEOMETRYSRC_ROOT}/Pyramid.h; ${SOFAGEOMETRYSRC_ROOT}/Quad.h; ${SOFAGEOMETRYSRC_ROOT}/Tetrahedron.h; ${SOFAGEOMETRYSRC_ROOT}/Triangle.h. ${SOFAGEOMETRYSRC_ROOT}/proximity/PointTriangle.h; ${SOFAGEOMETRYSRC_ROOT}/proximity/SegmentTriangle.h; ${SOFAGEOMETRYSRC_ROOT}/proximity/TriangleTriangle.h; ). set(SOURCE_FILES; ${SOFAGEOMETRYSRC_ROOT}/init.cpp; ${SOFAGEOMETRYSRC_ROOT}/ElementInfo.cpp; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config Sofa.Type). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_GEOMETRY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_GEOMETRY_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Geometry/CMakeLists.txt:165,config,config,165,Sofa/framework/Geometry/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Geometry/CMakeLists.txt,3,"['Config', 'config']","['Config', 'config']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Helper LANGUAGES CXX). # Eigen (header only); sofa_find_package(Eigen3 REQUIRED); # Json (header only) needed by AdvancedTimer; sofa_find_package(Json 3.1.2 REQUIRED); # STB (header only); sofa_find_package(STB REQUIRED); # DiffLib (header only); sofa_find_package(DiffLib REQUIRED). set(SRC_ROOT ""src/sofa/helper""). # HEADERS + SOURCES; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/AdvancedTimer.h; ${SRC_ROOT}/BackTrace.h; ${SRC_ROOT}/cast.h; ${SRC_ROOT}/ColorMap.h; ${SRC_ROOT}/ComponentChange.h; ${SRC_ROOT}/DiffLib.h; ${SRC_ROOT}/Factory.h; ${SRC_ROOT}/Factory.inl; ${SRC_ROOT}/TypeInfo.h; ${SRC_ROOT}/FnDispatcher.h; ${SRC_ROOT}/FnDispatcher.inl; ${SRC_ROOT}/GenerateRigid.h; ${SRC_ROOT}/IndexOpenMP.h; ${SRC_ROOT}/LCPcalc.h; ${SRC_ROOT}/MarchingCubeUtility.h; ${SRC_ROOT}/MatEigen.h; ${SRC_ROOT}/MemoryManager.h; ${SRC_ROOT}/NameDecoder.h; ${SRC_ROOT}/narrow_cast.h; ${SRC_ROOT}/OptionsGroup.h; ${SRC_ROOT}/OwnershipSPtr.h; ${SRC_ROOT}/Polynomial_LD.h; ${SRC_ROOT}/Polynomial_LD.inl; ${SRC_ROOT}/RandomGenerator.h; ${SRC_ROOT}/SimpleTimer.h; ${SRC_ROOT}/ScopedAdvancedTimer.h; ${SRC_ROOT}/SortedPermutation.h; ${SRC_ROOT}/StringUtils.h; ${SRC_ROOT}/TagFactory.h; ${SRC_ROOT}/TriangleOctree.h; ${SRC_ROOT}/Utils.h; ${SRC_ROOT}/accessor.h; ${SRC_ROOT}/decompose.h; ${SRC_ROOT}/decompose.inl; ${SRC_ROOT}/deque.h; ${SRC_ROOT}/hash.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/integer_id.h; ${SRC_ROOT}/accessor/ReadAccessor.h; ${SRC_ROOT}/accessor/ReadAccessorVector.h; ${SRC_ROOT}/accessor/WriteAccessor.h; ${SRC_ROOT}/accessor/WriteAccessorVector.h; ${SRC_ROOT}/accessor/WriteOnlyAccessor.h; ${SRC_ROOT}/io/BaseFileAccess.h; ${SRC_ROOT}/io/FileAccess.h; ${SRC_ROOT}/io/File.h; ${SRC_ROOT}/io/Image.h; ${SRC_ROOT}/io/ImageDDS.h; ${SRC_ROOT}/io/ImageRAW.h; ${SRC_ROOT}/io/XspLoader.h; ${SRC_ROOT}/io/Mesh.h; ${SRC_ROOT}/io/MeshOBJ.h; ${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/ST",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:419,config,config,419,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.LinearAlgebra LANGUAGES CXX). set(SOFALINEARALGEBRASRC_ROOT ""src/sofa/linearalgebra""). set(HEADER_FILES; ${SOFALINEARALGEBRASRC_ROOT}/config.h.in; ${SOFALINEARALGEBRASRC_ROOT}/fwd.h; ${SOFALINEARALGEBRASRC_ROOT}/init.h; ${SOFALINEARALGEBRASRC_ROOT}/BTDMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/BTDMatrix.inl; ${SOFALINEARALGEBRASRC_ROOT}/BaseMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/BaseVector.h; ${SOFALINEARALGEBRASRC_ROOT}/BlockFullMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/BlockFullMatrix.inl; ${SOFALINEARALGEBRASRC_ROOT}/BlockDiagonalMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/BlockDiagonalMatrix.inl; ${SOFALINEARALGEBRASRC_ROOT}/BlockVector.h; ${SOFALINEARALGEBRASRC_ROOT}/BlockVector.inl; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixConstraint.h; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixConstraintEigenUtils.h; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixGeneric.h; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixMechanical.h; ${SOFALINEARALGEBRASRC_ROOT}/DiagonalMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/DiagonalSystemSolver.h; ${SOFALINEARALGEBRASRC_ROOT}/EigenBaseSparseMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/EigenSparseMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/EigenVector.h; ${SOFALINEARALGEBRASRC_ROOT}/FullMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/FullMatrix.inl; ${SOFALINEARALGEBRASRC_ROOT}/FullVector.h; ${SOFALINEARALGEBRASRC_ROOT}/FullVector.inl; ${SOFALINEARALGEBRASRC_ROOT}/MatrixExpr.h; ${SOFALINEARALGEBRASRC_ROOT}/RotationMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrix.h; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrixProduct.h; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrixProduct.inl; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrixStorageOrder.h; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrixStorageOrder[EigenSparseMatrix].h; ${SOFALINEARALGEBRASRC_ROOT}/TriangularSystemSolver.h; ${SOFALINEARALGEBRASRC_ROOT}/matrix_bloc_traits.h; ). set(SOURCE_FILES; ${",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/CMakeLists.txt:185,config,config,185,Sofa/framework/LinearAlgebra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.SimpleApi LANGUAGES CXX). set(SOFASIMPLEAPI_SRC ""src/sofa/simpleapi""). set(HEADER_FILES; ${SOFASIMPLEAPI_SRC}/config.h.in; ${SOFASIMPLEAPI_SRC}/init.h; ${SOFASIMPLEAPI_SRC}/SimpleApi.h; ). set(SOURCE_FILES; ${SOFASIMPLEAPI_SRC}/init.cpp; ${SOFASIMPLEAPI_SRC}/SimpleApi.cpp; ). sofa_find_package(Sofa.Simulation.Graph REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMPLEAPI_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMPLEAPI_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/CMakeLists.txt:161,config,config,161,Sofa/framework/SimpleApi/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/SimpleApi/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation LANGUAGES CXX). set(SOFASIMULATION_SOURCE_DIR ""src/sofa/simulation""). set(SOFASIMULATION_DIRS Core Common Graph); set(SOFASIMULATION_TARGETS); foreach(simulation_dir ${SOFASIMULATION_DIRS}); sofa_add_subdirectory(library ${simulation_dir} ${PROJECT_NAME}.${simulation_dir} ON); if(TARGET ${PROJECT_NAME}.${simulation_dir}); list(APPEND SOFASIMULATION_TARGETS ${PROJECT_NAME}.${simulation_dir}); endif(); endforeach(). set(HEADER_FILES; ${SOFASIMULATION_SOURCE_DIR}/config.h.in; ${SOFASIMULATION_SOURCE_DIR}/init.h; ). set(SOURCE_FILES; ${SOFASIMULATION_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFASIMULATION_TARGETS}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_BUILD_TESTS); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/CMakeLists.txt:527,config,config,527,Sofa/framework/Simulation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Common LANGUAGES CXX). set(SOFA_SIMULATION_COMMON_SRC ""src/sofa/simulation/common""). set(HEADER_FILES; ${SOFA_SIMULATION_COMMON_SRC}/config.h.in; ${SOFA_SIMULATION_COMMON_SRC}/init.h; ${SOFA_SIMULATION_COMMON_SRC}/initSofaSimulationCommon.h; ${SOFA_SIMULATION_COMMON_SRC}/FindByTypeVisitor.h; ${SOFA_SIMULATION_COMMON_SRC}/SceneLoaderPHP.h; ${SOFA_SIMULATION_COMMON_SRC}/SceneLoaderXML.h; ${SOFA_SIMULATION_COMMON_SRC}/TransformationVisitor.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/AttributeElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/BaseElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/BaseMultiMappingElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/DataElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/Element.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/Element.inl; ${SOFA_SIMULATION_COMMON_SRC}/xml/NodeElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/ObjectElement.h; ${SOFA_SIMULATION_COMMON_SRC}/xml/XML.h; ). set(SOURCE_FILES; ${SOFA_SIMULATION_COMMON_SRC}/SceneLoaderPHP.cpp; ${SOFA_SIMULATION_COMMON_SRC}/SceneLoaderXML.cpp; ${SOFA_SIMULATION_COMMON_SRC}/TransformationVisitor.cpp; ${SOFA_SIMULATION_COMMON_SRC}/init.cpp; ${SOFA_SIMULATION_COMMON_SRC}/initSofaSimulationCommon.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/AttributeElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/BaseElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/BaseMultiMappingElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/DataElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/NodeElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/ObjectElement.cpp; ${SOFA_SIMULATION_COMMON_SRC}/xml/XML.cpp; ). sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(TinyXML2 REQUIRED). if(UNIX AND NOT APPLE); sofa_install_libraries(PATHS ${TinyXML2_LIBRARY}); else(); sofa_install_libraries(TARGETS tinyxml2::tinyxml2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Common/CMakeLists.txt:195,config,config,195,Sofa/framework/Simulation/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Common/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Core). set(SRC_ROOT ""src/sofa/simulation""). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/AnimateBeginEvent.h; ${SRC_ROOT}/AnimateEndEvent.h; ${SRC_ROOT}/AnimateVisitor.h; ${SRC_ROOT}/BaseMechanicalVisitor.h; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.h; ${SRC_ROOT}/CactusStackStorage.h; ${SRC_ROOT}/CleanupVisitor.h; ${SRC_ROOT}/CollisionAnimationLoop.h; ${SRC_ROOT}/CollisionBeginEvent.h; ${SRC_ROOT}/CollisionEndEvent.h; ${SRC_ROOT}/CollisionVisitor.h; ${SRC_ROOT}/Colors.h; ${SRC_ROOT}/CpuTask.h; ${SRC_ROOT}/CpuTaskStatus.h; ${SRC_ROOT}/DeactivatedNodeVisitor.h; ${SRC_ROOT}/DefaultAnimationLoop.h; ${SRC_ROOT}/DefaultVisualManagerLoop.h; ${SRC_ROOT}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:136,config,config,136,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Graph LANGUAGES CXX). set(SOFASIMULATIONGRAPH_SRC ""src/sofa/simulation/graph""). set(HEADER_FILES; ${SOFASIMULATIONGRAPH_SRC}/config.h.in; ${SOFASIMULATIONGRAPH_SRC}/init.h; ${SOFASIMULATIONGRAPH_SRC}/initSofaSimulationGraph.h; ${SOFASIMULATIONGRAPH_SRC}/DAGNode.h; ${SOFASIMULATIONGRAPH_SRC}/DAGSimulation.h; ). set(SOURCE_FILES; ${SOFASIMULATIONGRAPH_SRC}/init.cpp; ${SOFASIMULATIONGRAPH_SRC}/initSofaSimulationGraph.cpp; ${SOFASIMULATIONGRAPH_SRC}/DAGNode.cpp; ${SOFASIMULATIONGRAPH_SRC}/DAGSimulation.cpp; ). sofa_find_package(Sofa.Simulation.Common REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_GRAPH_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_GRAPH_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Graph/CMakeLists.txt:187,config,config,187,Sofa/framework/Simulation/Graph/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Graph/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Topology LANGUAGES CXX). set(SOFATOPOLOGYSRC_ROOT ""src/sofa/topology""). set(HEADER_FILES; ${SOFATOPOLOGYSRC_ROOT}/config.h.in; ${SOFATOPOLOGYSRC_ROOT}/init.h; ${SOFATOPOLOGYSRC_ROOT}/Element.h; ${SOFATOPOLOGYSRC_ROOT}/Topology.h; ${SOFATOPOLOGYSRC_ROOT}/Point.h; ${SOFATOPOLOGYSRC_ROOT}/Edge.h; ${SOFATOPOLOGYSRC_ROOT}/Triangle.h; ${SOFATOPOLOGYSRC_ROOT}/Quad.h; ${SOFATOPOLOGYSRC_ROOT}/Tetrahedron.h; ${SOFATOPOLOGYSRC_ROOT}/Pentahedron.h; ${SOFATOPOLOGYSRC_ROOT}/Pyramid.h; ${SOFATOPOLOGYSRC_ROOT}/Hexahedron.h; ). set(SOURCE_FILES; ${SOFATOPOLOGYSRC_ROOT}/init.cpp; ${SOFATOPOLOGYSRC_ROOT}/Topology.cpp; ${SOFATOPOLOGYSRC_ROOT}/Element.cpp; ${SOFATOPOLOGYSRC_ROOT}/Point.cpp; ${SOFATOPOLOGYSRC_ROOT}/Edge.cpp; ${SOFATOPOLOGYSRC_ROOT}/Triangle.cpp; ${SOFATOPOLOGYSRC_ROOT}/Quad.cpp; ${SOFATOPOLOGYSRC_ROOT}/Tetrahedron.cpp; ${SOFATOPOLOGYSRC_ROOT}/Pentahedron.cpp; ${SOFATOPOLOGYSRC_ROOT}/Pyramid.cpp; ${SOFATOPOLOGYSRC_ROOT}/Hexahedron.cpp; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Geometry REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config Sofa.Type Sofa.Geometry). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_TOPOLOGY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_TOPOLOGY_BUILD_TESTS); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Topology/CMakeLists.txt:165,config,config,165,Sofa/framework/Topology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Topology/CMakeLists.txt,3,"['Config', 'config']","['Config', 'config']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Type LANGUAGES CXX). set(SOFATYPESRC_ROOT ""src/sofa/type""). set(HEADER_FILES; ${SOFATYPESRC_ROOT}/config.h.in; ${SOFATYPESRC_ROOT}/init.h; ${SOFATYPESRC_ROOT}/BoundingBox.h; ${SOFATYPESRC_ROOT}/DualQuat.h; ${SOFATYPESRC_ROOT}/DualQuat.inl; ${SOFATYPESRC_ROOT}/Frame.h; ${SOFATYPESRC_ROOT}/Mat.h; ${SOFATYPESRC_ROOT}/MatSym.h; ${SOFATYPESRC_ROOT}/Mat_solve_Cholesky.h; ${SOFATYPESRC_ROOT}/Mat_solve_LCP.h; ${SOFATYPESRC_ROOT}/Mat_solve_LU.h; ${SOFATYPESRC_ROOT}/Mat_solve_SVD.h; ${SOFATYPESRC_ROOT}/Material.h; ${SOFATYPESRC_ROOT}/PrimitiveGroup.h; ${SOFATYPESRC_ROOT}/Quat.h; ${SOFATYPESRC_ROOT}/Quat.inl; ${SOFATYPESRC_ROOT}/RGBAColor.h; ${SOFATYPESRC_ROOT}/RGBAColor_fwd.h; ${SOFATYPESRC_ROOT}/Ray.h; ${SOFATYPESRC_ROOT}/SVector.h; ${SOFATYPESRC_ROOT}/SpatialVector.h; ${SOFATYPESRC_ROOT}/SpatialVector.inl; ${SOFATYPESRC_ROOT}/Transform.h; ${SOFATYPESRC_ROOT}/Transform.inl; ${SOFATYPESRC_ROOT}/Vec.h; ${SOFATYPESRC_ROOT}/fixed_array.h; ${SOFATYPESRC_ROOT}/fixed_array_algorithms.h; ${SOFATYPESRC_ROOT}/fwd.h; ${SOFATYPESRC_ROOT}/isRigidType.h; ${SOFATYPESRC_ROOT}/stable_vector.h; ${SOFATYPESRC_ROOT}/trait/Rebind.h; ${SOFATYPESRC_ROOT}/trait/is_container.h; ${SOFATYPESRC_ROOT}/trait/is_vector.h; ${SOFATYPESRC_ROOT}/vector.h; ${SOFATYPESRC_ROOT}/vector_Integral.h; ${SOFATYPESRC_ROOT}/vector_Real.h; ${SOFATYPESRC_ROOT}/vector_String.h; ${SOFATYPESRC_ROOT}/vector_T.h; ${SOFATYPESRC_ROOT}/vector_T.inl; ${SOFATYPESRC_ROOT}/vector_algebra.h; ${SOFATYPESRC_ROOT}/vector_algorithm.h; ${SOFATYPESRC_ROOT}/vector_device.h; ). set(SOURCE_FILES; ${SOFATYPESRC_ROOT}/init.cpp; ${SOFATYPESRC_ROOT}/BoundingBox.cpp; ${SOFATYPESRC_ROOT}/DualQuat.cpp; ${SOFATYPESRC_ROOT}/Frame.cpp; ${SOFATYPESRC_ROOT}/Material.cpp; ${SOFATYPESRC_ROOT}/PrimitiveGroup.cpp; ${SOFATYPESRC_ROOT}/Quat.cpp; ${SOFATYPESRC_ROOT}/RGBAColor.cpp; ${SOFATYPESRC_ROOT}/SVector.cpp; ${SOFATYPESRC_ROOT}/SpatialVector.cpp; ${SOFATYPESRC_ROOT}/Transform.cpp; ${SOFATYPESRC_ROOT}/Vec.cpp",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt:149,config,config,149,Sofa/framework/Type/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaAdvanced). ## Version; set(SOFAADVANCED_VERSION ${SofaFramework_VERSION}). ## Subdirectories; set(SOFAADVANCED_MODULES; SofaNonUniformFem; ). foreach(module ${SOFAADVANCED_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAADVANCED_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAADVANCED_SRC}/config.h.in ; ${SOFAADVANCED_SRC}/initSofaAdvanced.h; ). set(SOURCE_FILES; ${SOFAADVANCED_SRC}/initSofaAdvanced.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAADVANCED_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaAdvanced/CMakeLists.txt:686,config,config,686,applications/collections/deprecated/SofaAdvanced/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaAdvanced/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaAssimp VERSION 0.2). set(HEADER_FILES; config.h; AssimpLoader.h; SceneColladaLoader.h; ). set(SOURCE_FILES; initAssimpPlugin.cpp; AssimpLoader.cpp; SceneColladaLoader.cpp; ). set(README_FILES README_AssimpPlugin.txt). ## Assimp dependencies; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/""). ### Dependencies; find_package(Sofa.Core REQUIRED); sofa_find_package(assimp REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.Mapping REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(image QUIET); sofa_find_package(Flexible QUIET). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SOFAASSIMP""); target_link_libraries(${PROJECT_NAME} PUBLIC ${ASSIMP_LIBRARIES} Sofa.Core Sofa.Component.Constraint.Projective Sofa.Component.Mass Sofa.Component.Mapping Sofa.GL.Component.Rendering3D Sofa.Component.StateContainer Sofa.Component.Collision.Geometry). if(image_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC image); endif(); if(Flexible_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Flexible); endif(). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/..""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${ASSIMP_INCLUDE_DIR}>""). if(ASSIMP_DLL); sofa_install_libraries(PATHS ${ASSIMP_DLL}); endif(). #TODO; if(SOFA_BUILD_TESTS); # add_subdirectory(CGALPlugin_test); endif(). ## Install rules for the library; CMake package configurations files; s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt:89,config,config,89,applications/plugins/SofaAssimp/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt,3,"['Flexible', 'config', 'plugin']","['Flexible', 'config', 'plugin']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBase). set(SOFABASE_MODULES; SofaBaseLinearSolver; SofaEigen2Solver; SofaBaseTopology; SofaBaseCollision; SofaBaseMechanics; SofaBaseVisual; SofaBaseUtils; ). foreach(TARGET ${SOFABASE_MODULES}); add_subdirectory(../modules/${TARGET} ${CMAKE_CURRENT_BINARY_DIR}/${TARGET}); set_target_properties(${TARGET} PROPERTIES FOLDER SofaBase); endforeach(). set(SOFABASE_SRC src/${PROJECT_NAME}); set(HEADER_FILES; ${SOFABASE_SRC}/config.h.in; ${SOFABASE_SRC}/initSofaBase.h; ); set(SOURCE_FILES; ${SOFABASE_SRC}/initSofaBase.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFABASE_MODULES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaBase). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaBase to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaBase/CMakeLists.txt:472,config,config,472,applications/collections/deprecated/SofaBase/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaBase/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseCollision LANGUAGES CXX). set(SOFABASECOLLISION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASECOLLISION_SRC}/config.h.in; ${SOFABASECOLLISION_SRC}/initSofaBaseCollision.h; ). set(SOURCE_FILES; ${SOFABASECOLLISION_SRC}/initSofaBaseCollision.cpp; ). sofa_find_package(SofaFramework REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Model, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Mapper and Sofa.Component.Collision.Response.Contact instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Mapper); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt:173,config,config,173,applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseLinearSolver LANGUAGES CXX). set(SOFABASELINEARSOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASELINEARSOLVER_SRC}/config.h.in; ${SOFABASELINEARSOLVER_SRC}/initSofaBaseLinearSolver.h; ). set(SOURCE_FILES; ${SOFABASELINEARSOLVER_SRC}/initSofaBaseLinearSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Iterative). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseLinearSolver/CMakeLists.txt:182,config,config,182,applications/collections/deprecated/modules/SofaBaseLinearSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseLinearSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseMechanics LANGUAGES CXX). set(SOFABASEMECHANICS_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASEMECHANICS_SRC}/config.h.in; ${SOFABASEMECHANICS_SRC}/initSofaBaseMechanics.h; ). set(SOURCE_FILES; ${SOFABASEMECHANICS_SRC}/initSofaBaseMechanics.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mass, Sofa.Component.Mapping.Linear and Sofa.Component.StateContainer instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mass); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.StateContainer). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseMechanics/CMakeLists.txt:173,config,config,173,applications/collections/deprecated/modules/SofaBaseMechanics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseMechanics/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseTopology LANGUAGES CXX). set(SOFABASETOPOLOGY_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASETOPOLOGY_SRC}/config.h.in; ${SOFABASETOPOLOGY_SRC}/initSofaBaseTopology.h; ). set(SOURCE_FILES; ${SOFABASETOPOLOGY_SRC}/initSofaBaseTopology.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Container.Grid, Sofa.Component.Topology.Container.Constant and Sofa.Component.Topology.Container.Dynamic instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Container.Constant REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Constant Sofa.Component.Topology.Container.Grid Sofa.Component.Topology.Container.Dynamic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseTopology/CMakeLists.txt:170,config,config,170,applications/collections/deprecated/modules/SofaBaseTopology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseTopology/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseUtils LANGUAGES CXX). set(SOFABASEUTILS_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASEUTILS_SRC}/config.h.in; ${SOFABASEUTILS_SRC}/initSofaBaseUtils.h; ). set(SOURCE_FILES; ${SOFABASEUTILS_SRC}/initSofaBaseUtils.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SceneUtility instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SceneUtility REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseUtils/CMakeLists.txt:161,config,config,161,applications/collections/deprecated/modules/SofaBaseUtils/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseUtils/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseVisual LANGUAGES CXX). set(SOFABASEVISUAL_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASEVISUAL_SRC}/config.h.in; ${SOFABASEVISUAL_SRC}/initSofaBaseVisual.h; ). set(SOURCE_FILES; ${SOFABASEVISUAL_SRC}/initSofaBaseVisual.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Visual and Sofa.Component.Setting instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseVisual/CMakeLists.txt:164,config,config,164,applications/collections/deprecated/modules/SofaBaseVisual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseVisual/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaBoundaryCondition LANGUAGES CXX). set(SOFABOUNDARYCONDITION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABOUNDARYCONDITION_SRC}/config.h.in; ${SOFABOUNDARYCONDITION_SRC}/initSofaBoundaryCondition.h; ). set(SOURCE_FILES; ${SOFABOUNDARYCONDITION_SRC}/initSofaBoundaryCondition.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Constraint.Projective and Sofa.Component.MechanicalLoad instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.MechanicalLoad REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Projective); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.MechanicalLoad). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBoundaryCondition/CMakeLists.txt:185,config,config,185,applications/collections/deprecated/modules/SofaBoundaryCondition/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBoundaryCondition/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaCUDA LANGUAGES CUDA CXX). set(SOFACUDA_MAJOR_VERSION 0); set(SOFACUDA_MINOR_VERSION 1); set(SOFACUDA_VERSION ${SOFACUDA_MAJOR_VERSION}.${SOFACUDA_MINOR_VERSION}). # quick and dirty fix for nvcc compatibility with -fno-partial-inlining flag; if(NOT WIN32); set(CUDA_PROPAGATE_HOST_FLAGS OFF); endif(). set(SOFACUDA_SOURCE_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/src/SofaCUDA""). set(HEADER_FILES; config.h.in; init.h; ; ### Common; sofa/gpu/cuda/CudaBaseVector.h; sofa/gpu/cuda/CudaCommon.h; sofa/gpu/cuda/CudaMath.h; sofa/gpu/cuda/CudaMath.inl; sofa/gpu/cuda/CudaMathRigid.h; sofa/gpu/cuda/CudaMathRigid.inl; sofa/gpu/cuda/CudaMatrix.h; sofa/gpu/cuda/CudaMemoryManager.h; sofa/gpu/cuda/CudaScan.h; sofa/gpu/cuda/CudaSort.h; sofa/gpu/cuda/CudaTexture.h; sofa/gpu/cuda/CudaTypes.h; sofa/gpu/cuda/mycuda.h. ### Mechanical; ${SOFACUDA_SOURCE_DIR}/component/statecontainer/CudaMechanicalObject.h; ${SOFACUDA_SOURCE_DIR}/component/statecontainer/CudaMechanicalObject.inl. ### Mappings; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaBarycentricMapping.h; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaBarycentricMapping.inl; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaBarycentricMappingRigid.h; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaBeamLinearMapping.h; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaIdentityMapping.h; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaIdentityMapping.inl; ${SOFACUDA_SOURCE_DIR}/component/mapping/nonlinear/CudaRigidMapping.h; ${SOFACUDA_SOURCE_DIR}/component/mapping/nonlinear/CudaRigidMapping.inl; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaSubsetMapping.h; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaSubsetMapping.inl; ${SOFACUDA_SOURCE_DIR}/component/mapping/linear/CudaSubsetMultiMapping.h. ### Mass; ${SOFACUDA_SOURCE_DIR}/component/mass/CudaDiagonalMass.h; ${SOFACUDA_SOURCE_DIR}/component/mass/CudaDiagonalMass.inl; ${SOFACUDA_SOURCE_DIR}/component/mass/CudaMeshM",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:438,config,config,438,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaCarving VERSION 0.1 LANGUAGES CXX). set(SOFACARVING_SRC src/SofaCarving). set(HEADER_FILES; ${SOFACARVING_SRC}/config.h.in; ${SOFACARVING_SRC}/init.h; ${SOFACARVING_SRC}/CarvingManager.h; ). set(SOURCE_FILES; ${SOFACARVING_SRC}/init.cpp; ${SOFACARVING_SRC}/CarvingManager.cpp; ). set(README_FILES SofaCarving.txt). find_package(Sofa.GUI.Component REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.GUI.Component). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). if(SOFA_BUILD_TESTS); add_subdirectory(SofaCarving_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/CMakeLists.txt:161,config,config,161,applications/plugins/SofaCarving/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/CMakeLists.txt,3,"['config', 'plugin']","['config', 'configurations', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaCommon). # Modules; set(SOFACOMMON_MODULES; SofaSimpleFem; SofaRigid; SofaDeformable; SofaObjectInteraction; SofaEngine; SofaExplicitOdeSolver; SofaImplicitOdeSolver; SofaLoader; ). foreach(module ${SOFACOMMON_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFACOMMON_SRC src/${PROJECT_NAME}); set(HEADER_FILES; ${SOFACOMMON_SRC}/config.h.in; ${SOFACOMMON_SRC}/initSofaCommon.h; ); set(SOURCE_FILES; ${SOFACOMMON_SRC}/initSofaCommon.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMMON_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaCommon/CMakeLists.txt:720,config,config,720,applications/collections/deprecated/SofaCommon/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaCommon/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaConstraint). set(SOFACONSTRAINT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFACONSTRAINT_SRC}/config.h.in; ${SOFACONSTRAINT_SRC}/initSofaConstraint.h; ). set(SOURCE_FILES; ${SOFACONSTRAINT_SRC}/initSofaConstraint.cpp; ). sofa_find_package(SofaBase REQUIRED) # SofaBaseLinearSolver; sofa_find_package(SofaImplicitOdeSolver REQUIRED) ; sofa_find_package(SofaUserInteraction REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaImplicitOdeSolver SofaUserInteraction SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix, Sofa.Component.Constraint.Lagrangian.Model, Sofa.Component.Constraint.Lagrangian.Correction, Sofa.Component.Constraint.Lagrangian.Solver, Sofa.Component.AnimationLoop, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Correction REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Model); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Correction); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver); target_link_libraries(${PR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt:150,config,config,150,applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaDeformable LANGUAGES CXX). set(SOFADEFORMABLE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFADEFORMABLE_SRC}/config.h.in; ${SOFADEFORMABLE_SRC}/initSofaDeformable.h; ). set(SOURCE_FILES; ${SOFADEFORMABLE_SRC}/initSofaDeformable.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SolidMechanics.Spring instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDeformable/CMakeLists.txt:164,config,config,164,applications/collections/deprecated/modules/SofaDeformable/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDeformable/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaDenseSolver LANGUAGES CXX). set(SOFADENSESOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFADENSESOLVER_SRC}/config.h.in; ${SOFADENSESOLVER_SRC}/initSofaDenseSolver.h; ). set(SOURCE_FILES; ${SOFADENSESOLVER_SRC}/initSofaDenseSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Direct instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED) # SVDLinearSolver; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaDenseSolver""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDenseSolver/CMakeLists.txt:167,config,config,167,applications/collections/deprecated/modules/SofaDenseSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDenseSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaDistanceGrid LANGUAGES CXX). option(SOFADISTANCEGRID_USE_MINIFLOWVR ""Build and use the miniFlowVR library with DistanceGrid."" OFF); if(SOFADISTANCEGRID_USE_MINIFLOWVR); add_subdirectory(extlibs/miniFlowVR); set_target_properties(miniFlowVR PROPERTIES DEBUG_POSTFIX ""_d""); #set_target_properties(miniFlowVR PROPERTIES FOLDER ""SofaExtlibs""); endif(). option(SOFADISTANCEGRID_USE_MESHCONV ""Build meshconv, mainly used to generate DistanceGrid file. Needs miniFlowVR."" OFF); if(SOFADISTANCEGRID_USE_MESHCONV); find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); sofa_add_subdirectory(application applications/meshconv meshconv OFF); else(); message(WARNING ""meshconv needs miniFlowVR; enable SOFADISTANCEGRID_USE_MINIFLOWVR to build it.""); endif(); endif(). set(SOFADISTANCEGRID_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFADISTANCEGRID_SRC}/config.h.in; ${SOFADISTANCEGRID_SRC}/DistanceGrid.h; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.h; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.inl; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.h; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.inl; ${SOFADISTANCEGRID_SRC}/components/collision/DistanceGridCollisionModel.h; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.h; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.inl; ). set(SOURCE_FILES; ${SOFADISTANCEGRID_SRC}/initSofaDistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/DistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/RegisterModelToCollisionFactory.cpp; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RayDistanceGridContact.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersect",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt:897,config,config,897,applications/plugins/SofaDistanceGrid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaEigen2Solver LANGUAGES CXX). set(SOFAEIGEN2SOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAEIGEN2SOLVER_SRC}/config.h.in; ${SOFAEIGEN2SOLVER_SRC}/initSofaEigen2Solver.h; ). set(SOURCE_FILES; ${SOFAEIGEN2SOLVER_SRC}/initSofaEigen2Solver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.LinearAlgebra (Eigen classes) and Sofa.Component.LinearSolver.Direct (SVDLinearSolver) instead.""). # forward to the new sofang module; sofa_find_package(Sofa.LinearAlgebra REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.LinearAlgebra); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEigen2Solver/CMakeLists.txt:170,config,config,170,applications/collections/deprecated/modules/SofaEigen2Solver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEigen2Solver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaEngine LANGUAGES CXX). set(SOFAENGINE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAENGINE_SRC}/config.h.in; ${SOFAENGINE_SRC}/initSofaEngine.h; ). set(SOURCE_FILES; ${SOFAENGINE_SRC}/initSofaEngine.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Select instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Select REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Select). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEngine/CMakeLists.txt:152,config,config,152,applications/collections/deprecated/modules/SofaEngine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEngine/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaEulerianFluid VERSION 1.0). find_package(Sofa.Core REQUIRED); find_package(Sofa.GL REQUIRED). set(HEADER_FILES; Fluid2D.h; Fluid3D.h; Grid2D.h; Grid3D.h; config.h; initEulerianFluid.h; ). set(SOURCE_FILES; Fluid2D.cpp; Fluid3D.cpp; Grid2D.cpp; Grid3D.cpp; initEulerianFluid.cpp; ). set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Core Sofa.GL). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaEulerianFluid/CMakeLists.txt:204,config,config,204,applications/plugins/SofaEulerianFluid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaEulerianFluid/CMakeLists.txt,3,"['config', 'plugin']","['config', 'configurations', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaExplicitOdeSolver LANGUAGES CXX). set(SOFAEXPLICITEODESOLVER_SRC ""src/${PROJECT_NAME}""). sofa_find_package(SofaFramework REQUIRED). set(HEADER_FILES; ${SOFAEXPLICITEODESOLVER_SRC}/config.h.in; ${SOFAEXPLICITEODESOLVER_SRC}/initSofaExplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAEXPLICITEODESOLVER_SRC}/initSofaExplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Forward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Forward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Forward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExplicitOdeSolver/CMakeLists.txt:230,config,config,230,applications/collections/deprecated/modules/SofaExplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExplicitOdeSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaExporter LANGUAGES CXX). set(SRC_ROOT src/SofaExporter). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/initSofaExporter.h; ). set(SOURCE_FILES; ${SRC_ROOT}/initSofaExporter.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.IO.Mesh and Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.IO.Mesh); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME SofaExporter; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaExporter""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExporter/CMakeLists.txt:137,config,config,137,applications/collections/deprecated/modules/SofaExporter/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExporter/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaFramework). # Version; set(SOFAFRAMEWORK_VERSION ""${Sofa_VERSION}""). # Modules; set(SOFAFRAMEWORK_MODULES; Sofa.Type; Sofa.Topology; Sofa.Geometry ; Sofa.Helper; Sofa.LinearAlgebra; Sofa.DefaultType; Sofa.Core; Sofa.Simulation.Core; ). set(SOFAFRAMEWORK_LEGACYMODULES; SofaHelper ; SofaDefaultType; SofaCore ; Sofa.SimulationCore; ). # add subprojects into a IDE folder called SofaFramework; foreach(module ${SOFAFRAMEWORK_MODULES}); sofa_find_package(${module}); endforeach(). foreach(module ${SOFAFRAMEWORK_LEGACYMODULES}); add_subdirectory(../modules/${module} ${CMAKE_CURRENT_BINARY_DIR}/${module}); endforeach(). set(SOFAFRAMEWORK_SRC src/SofaFramework); set(HEADER_FILES; ${SOFAFRAMEWORK_SRC}/config.h.in; ${SOFAFRAMEWORK_SRC}/initSofaFramework.h; ); set(SOURCE_FILES; ${SOFAFRAMEWORK_SRC}/initSofaFramework.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAFRAMEWORK_MODULES} ${SOFAFRAMEWORK_LEGACYMODULES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaFramework). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaFramework to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaFramework/CMakeLists.txt:749,config,config,749,applications/collections/deprecated/SofaFramework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaFramework/CMakeLists.txt,1,['config'],['config']
Modifiability,cmake_minimum_required(VERSION 3.22); project(SofaGTestMain). ## Dependencies; sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(GTest REQUIRED). add_library(${PROJECT_NAME} SofaGTestMain.cpp); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} PUBLIC GTest::gtest). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; ). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Testing); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt:402,config,configurations,402,Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,1,['config'],['configurations']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneral). # Send warnings when deprecated CMake project is activated; option(CMAKE_WARN_DEPRECATED ""Send warning when deprecated projects are found"" ON). # Modules; set(SOFAGENERAL_MODULES; SofaBoundaryCondition; SofaGeneralMeshCollision; SofaGeneralVisual; SofaGraphComponent; SofaGeneralAnimationLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralRigid; SofaGeneralTopology; SofaTopologyMapping; SofaUserInteraction; SofaConstraint; SofaGeneralLoader; ). foreach(module ${SOFAGENERAL_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAGENERAL_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAGENERAL_SRC}/config.h.in; ${SOFAGENERAL_SRC}/initSofaGeneral.h; ). set(SOURCE_FILES; ${SOFAGENERAL_SRC}/initSofaGeneral.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGENERAL_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaGeneral to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGeneral/CMakeLists.txt:1091,config,config,1091,applications/collections/deprecated/SofaGeneral/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGeneral/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralAnimationLoop LANGUAGES CXX). set(SOFAGENERALANIMATIONLOOP_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALANIMATIONLOOP_SRC}/config.h.in; ${SOFAGENERALANIMATIONLOOP_SRC}/initSofaGeneralAnimationLoop.h; ). set(SOURCE_FILES; ${SOFAGENERALANIMATIONLOOP_SRC}/initSofaGeneralAnimationLoop.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix and Sofa.Component.AnimationLoop instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.AnimationLoop). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralAnimationLoop/CMakeLists.txt:194,config,config,194,applications/collections/deprecated/modules/SofaGeneralAnimationLoop/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralAnimationLoop/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralDeformable LANGUAGES CXX). set(SOFAGENERALDEFORMABLE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALDEFORMABLE_SRC}/config.h.in; ${SOFAGENERALDEFORMABLE_SRC}/initSofaGeneralDeformable.h; ). set(SOURCE_FILES; ${SOFAGENERALDEFORMABLE_SRC}/initSofaGeneralDeformable.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SolidMechanics.Spring and Sofa.Component.SolidMechanics.TensorMass instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.TensorMass). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralDeformable/CMakeLists.txt:185,config,config,185,applications/collections/deprecated/modules/SofaGeneralDeformable/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralDeformable/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralEngine LANGUAGES CXX). set(SOFAGENERALENGINE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALENGINE_SRC}/config.h.in; ${SOFAGENERALENGINE_SRC}/initSofaGeneralEngine.h; ). set(SOURCE_FILES; ${SOFAGENERALENGINE_SRC}/initSofaGeneralEngine.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Analyze, Sofa.Component.Engine.Generate, Sofa.Component.Engine.Select and Sofa.Component.Engine.Transform instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Analyze REQUIRED); sofa_find_package(Sofa.Component.Engine.Generate REQUIRED); sofa_find_package(Sofa.Component.Engine.Select REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Analyze); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Generate); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Select); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Transform). sofa_find_package(Sofa.GL.Component.Engine QUIET); if(Sofa.GL.Component.Engine_FOUND); # message(WARNING ""Moreover, use Sofa.GL.Component.Engine if you need TextureInterpolation.""); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Engine) ; endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralEngine/CMakeLists.txt:173,config,config,173,applications/collections/deprecated/modules/SofaGeneralEngine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralEngine/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralExplicitOdeSolver LANGUAGES CXX). set(SOFAGENERALEXPLICITODESOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALEXPLICITODESOLVER_SRC}/config.h.in; ${SOFAGENERALEXPLICITODESOLVER_SRC}/initSofaGeneralExplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAGENERALEXPLICITODESOLVER_SRC}/initSofaGeneralExplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Forward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Forward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Forward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralExplicitOdeSolver/CMakeLists.txt:206,config,config,206,applications/collections/deprecated/modules/SofaGeneralExplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralExplicitOdeSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralImplicitOdeSolver LANGUAGES CXX). set(SOFAGENERALIMPLICITODESOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALIMPLICITODESOLVER_SRC}/config.h.in; ${SOFAGENERALIMPLICITODESOLVER_SRC}/initSofaGeneralImplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAGENERALIMPLICITODESOLVER_SRC}/initSofaGeneralImplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Backward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Backward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralImplicitOdeSolver/CMakeLists.txt:206,config,config,206,applications/collections/deprecated/modules/SofaGeneralImplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralImplicitOdeSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralLinearSolver LANGUAGES CXX). set(SOFAGENERALLINEARSOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALLINEARSOLVER_SRC}/config.h.in; ${SOFAGENERALLINEARSOLVER_SRC}/initSofaGeneralLinearSolver.h; ). set(SOURCE_FILES; ${SOFAGENERALLINEARSOLVER_SRC}/initSofaGeneralLinearSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative and Sofa.Component.LinearSolver.Direct instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Iterative); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLinearSolver/CMakeLists.txt:191,config,config,191,applications/collections/deprecated/modules/SofaGeneralLinearSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLinearSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralLoader LANGUAGES CXX). set(SOFAGENERALLOADER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALLOADER_SRC}/config.h.in; ${SOFAGENERALLOADER_SRC}/initSofaGeneralLoader.h; ). set(SOURCE_FILES; ${SOFAGENERALLOADER_SRC}/initSofaGeneralLoader.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.IO.Mesh and Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.IO.Mesh); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLoader/CMakeLists.txt:173,config,config,173,applications/collections/deprecated/modules/SofaGeneralLoader/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLoader/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralMeshCollision LANGUAGES CXX). set(SOFAGENERALMESHCOLLISION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALMESHCOLLISION_SRC}/config.h.in; ${SOFAGENERALMESHCOLLISION_SRC}/initSofaGeneralMeshCollision.h; ). set(SOURCE_FILES; ${SOFAGENERALMESHCOLLISION_SRC}/initSofaGeneralMeshCollision.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm and Sofa.Component.Collision.Detection.Intersection instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt:194,config,config,194,applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralRigid LANGUAGES CXX). set(SOFAGENERALRIGID_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALRIGID_SRC}/config.h.in; ${SOFAGENERALRIGID_SRC}/initSofaGeneralRigid.h; ). set(SOURCE_FILES; ${SOFAGENERALRIGID_SRC}/initSofaGeneralRigid.cpp; ). sofa_find_package(SofaBaseMechanics REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralRigid/CMakeLists.txt:170,config,config,170,applications/collections/deprecated/modules/SofaGeneralRigid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralRigid/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralTopology LANGUAGES CXX). set(SOFAGENERALTOPOLOGY_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALTOPOLOGY_SRC}/config.h.in; ${SOFAGENERALTOPOLOGY_SRC}/initSofaGeneralTopology.h; ). set(SOURCE_FILES; ${SOFAGENERALTOPOLOGY_SRC}/initSofaGeneralTopology.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Container.Grid and Sofa.Component.Topology.Container.Constant instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Container.Constant REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Constant Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralTopology/CMakeLists.txt:179,config,config,179,applications/collections/deprecated/modules/SofaGeneralTopology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralTopology/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralVisual LANGUAGES CXX). set(SOFAGENERALVISUAL_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALVISUAL_SRC}/config.h.in; ${SOFAGENERALVISUAL_SRC}/initSofaGeneralVisual.h; ). set(SOURCE_FILES; ${SOFAGENERALVISUAL_SRC}/initSofaGeneralVisual.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Visual instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Visual REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralVisual/CMakeLists.txt:173,config,config,173,applications/collections/deprecated/modules/SofaGeneralVisual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralVisual/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGraphComponent LANGUAGES CXX). sofa_find_package(SofaBase REQUIRED). set(SOFAGRAPHCOMPONENT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGRAPHCOMPONENT_SRC}/config.h.in; ${SOFAGRAPHCOMPONENT_SRC}/initSofaGraphComponent.h; ). set(SOURCE_FILES; ${SOFAGRAPHCOMPONENT_SRC}/initSofaGraphComponent.cpp; ). list(APPEND HEADER_FILES; ${SOFAGRAPHCOMPONENT_SRC}/Gravity.h; ${SOFAGRAPHCOMPONENT_SRC}/InteractingBehaviorModel.h; ); list(APPEND SOURCE_FILES; ${SOFAGRAPHCOMPONENT_SRC}/Gravity.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Simulation.Core SofaBaseUtils SofaBaseCollision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SceneUtility, Sofa.Component.Setting,; #Sofa.GUI.Component and the plugin SceneChecking instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SceneUtility REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGraphComponent/CMakeLists.txt:214,config,config,214,applications/collections/deprecated/modules/SofaGraphComponent/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGraphComponent/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGui). set(SOFAGUI_TARGETS """"). sofa_find_package(Sofa.GUI.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(Sofa.GUI.Batch REQUIRED); sofa_find_package(Sofa.GUI.Qt QUIET); sofa_find_package(Sofa.GUI.HeadlessRecorder QUIET). set(SOFAGUI_SRC src/${PROJECT_NAME}); set(HEADER_FILES; ${SOFAGUI_SRC}/config.h.in; ${SOFAGUI_SRC}/initSofaGui.h; ); set(SOURCE_FILES; ${SOFAGUI_SRC}/initSofaGui.cpp; ). set(SOFAGUI_TARGETS Sofa.GUI.Component Sofa.GUI.Common Sofa.GUI.Batch); if(Sofa.GUI.Qt_FOUND); list(APPEND SOFAGUI_TARGETS Sofa.GUI.Qt); endif(); sofa_set_01(SOFAGUI_HAVE_SOFAGUIQT VALUE ${SOFAGUI_HAVE_SOFA_GUI_QT}). if(Sofa.GUI.HeadlessRecorder_FOUND); list(APPEND SOFAGUI_TARGETS Sofa.GUI.HeadlessRecorder); endif(); sofa_set_01(SOFAGUI_HAVE_SOFAHEADLESSRECORDER VALUE ${SOFAGUI_HAVE_SOFA_GUI_HEADLESSRECORDER}). # Keep legacy modules for compatibility; # they merely redirect to the new modules; # legacy (deprecated) module; sofa_add_subdirectory(collection ../modules/SofaGuiCommon SofaGuiCommon ON; BINARY_DIR ""${CMAKE_CURRENT_BINARY_DIR}/SofaGuiCommon""); if(TARGET SofaGuiCommon); list(APPEND SOFAGUI_TARGETS SofaGuiCommon); endif(); if(Sofa.GUI.Qt_FOUND); sofa_add_subdirectory(collection ../modules/SofaGuiQt SofaGuiQt ON; BINARY_DIR ""${CMAKE_CURRENT_BINARY_DIR}/SofaGuiQt""); if(TARGET SofaGuiQt); list(APPEND SOFAGUI_TARGETS SofaGuiQt); endif(); endif(); if(Sofa.GUI.HeadlessRecorder_FOUND); sofa_add_subdirectory(collection ../modules/SofaHeadlessRecorder SofaHeadlessRecorder ON; BINARY_DIR ""${CMAKE_CURRENT_BINARY_DIR}/SofaHeadlessRecorder""); if(TARGET SofaHeadlessRecorder); list(APPEND SOFAGUI_TARGETS SofaHeadlessRecorder); endif(); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGUI_TARGETS}). foreach(ui_target ${SOFAGUI_TARGETS}); set_target_properties(${ui_target} PROPERTIES FOLDER GUI); endforeach(); set_target_propert",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGui/CMakeLists.txt:379,config,config,379,applications/collections/deprecated/SofaGui/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGui/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaGuiGlut). find_package(Sofa.Config REQUIRED); sofa_find_package(SofaSimulation REQUIRED); sofa_find_package(GLUT REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(SofaBase REQUIRED). set(HEADER_FILES; SimpleGUI.h). set(SOURCE_FILES; SimpleGUI.cpp). list(APPEND SOURCE_FILES Main.cpp). if(NOT APPLE); 	set(GLUT_ACTUAL_LIBRARIES ${GLUT_glut_LIBRARY} ); else(); # Workaround: on OS X, ""${GLUT_glut_LIBRARY}"" is not a target (it is; # actually ""-framework GLUT""), so we use find_library to find; # something better (like /System/Library/Frameworks/GLUT.framework.); # (Fun fact: FindGLUT.cmake litterally reads ""These values for Apple; # could probably do with improvement.)""; 	find_library(ACTUAL_GLUT_LIBRARIES ""GLUT""); 	set(GLUT_ACTUAL_LIBRARIES ${ACTUAL_GLUT_LIBRARIES} ); endif(). set(_configPluginFileName plugin_list.conf); set(_defaultConfigPluginFileName ""${_configPluginFileName}.default""); set(_defaultConfigPluginFilePath ""${CMAKE_BINARY_DIR}/${_pluginLocation}/${_defaultConfigPluginFileName}""). add_executable(${PROJECT_NAME} ${HEADER_FILES} ${SOURCE_FILES} ). target_link_libraries(${PROJECT_NAME} SofaGuiCommon SofaSimulationGraph SofaBase ${GLUT_ACTUAL_LIBRARIES} ); if(Boost_FOUND); target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES}); endif(); if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL); endif(). sofa_add_targets_to_package(; PACKAGE_NAME SofaGui; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""${CMAKE_CURRENT_SOURCE_DIR}""; INCLUDE_INSTALL_DIR ""SofaGui/SofaGuiGlut""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaGuiGlut/CMakeLists.txt:78,Config,Config,78,applications/projects/SofaGuiGlut/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaGuiGlut/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaHAPI). find_package(SofaUserInteraction REQUIRED); find_package(SofaHaptics REQUIRED). set(SOFAHAPI_MAJOR_VERSION 0); set(SOFAHAPI_MINOR_VERSION 1); set(SOFAHAPI_VERSION ${SOFAHAPI_MAJOR_VERSION}.${SOFAHAPI_MINOR_VERSION}). set(HEADER_FILES; SofaHAPIForceFeedbackEffect.h; SofaHAPIHapticsDevice.h; config.h.in; ). set(SOURCE_FILES; SofaHAPIForceFeedbackEffect.cpp; SofaHAPIHapticsDevice.cpp; initSofaHAPI.cpp; ). if(NOT TARGET H3DUtil); find_package(H3DUtil REQUIRED); if(WIN32); file(GLOB sharedObjects ""${HAPI_DIR}/bin/H3DUtil_*.dll""); foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(H3DUTIL_LIBRARIES H3DUtil); endif(). if(NOT TARGET HAPI); find_package(HAPI REQUIRED); if(WIN32); # Copy HAPI DLLs; file(GLOB sharedObjects ""${HAPI_DIR}/bin/HAPI_*.dll""). foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(HAPI_LIBRARIES HAPI); endif(). if(WIN32); if(CMAKE_CL_64); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin64); else(); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin32); endif(). file(COPY ""${H3D_EXTERNAL_BIN_DIR}/pthreadVC2.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); file(COPY ""${H3D_EXTERNAL_BIN_DIR}/FreeImage.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endif(). set(SOFAHAPI_DEPENDENCY_INCLUDE_DIR ${HAPI_INCLUDE_DIR}; ${H3DUTIL_INCLUDE_DIR}). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaUserInteraction SofaHaptics ${HAPI_LIBRARIES} ${H3DUTIL_LIBRARIES}); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${SOFAHAPI_DEPENDENCY_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAHAPI_VERSION}). ## Install rules for the library and the header;",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt:348,config,config,348,applications/plugins/SofaHAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt,2,"['CONFIG', 'config']","['CONFIG', 'config']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaHaptics LANGUAGES CXX). set(HEADER_FILES; src/SofaHaptics/config.h; src/SofaHaptics/initSofaHaptics.h; ). set(SOURCE_FILES; src/SofaHaptics/initSofaHaptics.cpp; ). set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Haptics instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Haptics REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Haptics). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHaptics/CMakeLists.txt:108,config,config,108,applications/collections/deprecated/modules/SofaHaptics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHaptics/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaImplicitField VERSION 1.0). sofa_find_package(Sofa.Framework REQUIRED); sofa_find_package(SofaDistanceGrid REQUIRED). set(HEADER_FILES; config.h.in; initSofaImplicitField.h. # This is backward compatibility; deprecated/SphereSurface.h; deprecated/ImplicitSurfaceContainer.h # This is a backward compatibility file toward ScalarField; deprecated/InterpolatedImplicitSurface.h # This is a backward compatibility file toward DiscreteridField. components/geometry/BottleField.h; components/geometry/DiscreteGridField.h; components/geometry/SphericalField.h; components/geometry/ScalarField.h; components/geometry/StarShapedField.h; components/mapping/ImplicitSurfaceMapping.h; components/mapping/ImplicitSurfaceMapping.inl; ). set(SOURCE_FILES; initSofaImplicitField.cpp. ## This is a backward compatibility..; deprecated/SphereSurface.cpp; deprecated/InterpolatedImplicitSurface.cpp. components/geometry/BottleField.cpp; components/geometry/ScalarField.cpp; components/geometry/DiscreteGridField.cpp; components/geometry/SphericalField.cpp; components/geometry/StarShapedField.cpp; components/mapping/ImplicitSurfaceMapping.cpp; ). set(EXTRA_FILES; README.md; examples/README.md; ). if(SOFA_BUILD_TESTS); add_subdirectory(SofaImplicitField_test); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_compile_options(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SOFAIMPLICITFIELD""); target_link_libraries(${PROJECT_NAME} PRIVATE SofaDistanceGrid). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/CMakeLists.txt:186,config,config,186,applications/plugins/SofaImplicitField/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/CMakeLists.txt,3,"['config', 'plugin']","['config', 'configurations', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaImplicitOdeSolver LANGUAGES CXX). set(SOFAIMPLICITEODESOLVER_SRC ""src/${PROJECT_NAME}""). sofa_find_package(SofaFramework REQUIRED). set(HEADER_FILES; ${SOFAIMPLICITEODESOLVER_SRC}/config.h.in; ${SOFAIMPLICITEODESOLVER_SRC}/initSofaImplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAIMPLICITEODESOLVER_SRC}/initSofaImplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Backward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Backward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaImplicitOdeSolver/CMakeLists.txt:230,config,config,230,applications/collections/deprecated/modules/SofaImplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaImplicitOdeSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaLoader LANGUAGES CXX). set(SOFALOADER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFALOADER_SRC}/config.h.in; ${SOFALOADER_SRC}/initSofaLoader.h; ). set(SOURCE_FILES; ${SOFALOADER_SRC}/initSofaLoader.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.IO.Mesh instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.IO.Mesh). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaLoader/CMakeLists.txt:152,config,config,152,applications/collections/deprecated/modules/SofaLoader/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaLoader/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMisc). ## Version; set(SOFAMISC_VERSION ${SofaFramework_VERSION}). ## Subdirectories; set(SOFAMISC_MODULES; SofaMiscExtra; SofaMiscEngine; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology; ). foreach(module ${SOFAMISC_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAMISC_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAMISC_SRC}/config.h.in ; ${SOFAMISC_SRC}/initSofaMisc.h; ). set(SOURCE_FILES; ${SOFAMISC_SRC}/initSofaMisc.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAMISC_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaMisc/CMakeLists.txt:758,config,config,758,applications/collections/deprecated/SofaMisc/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaMisc/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscCollision VERSION 1.0). sofa_find_package(SofaBaseCollision REQUIRED); sofa_find_package(SofaBaseMechanics REQUIRED); sofa_find_package(SofaBaseTopology REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralDeformable REQUIRED); sofa_find_package(SofaConstraint REQUIRED); sofa_find_package(SofaExplicitOdeSolver REQUIRED); sofa_find_package(SofaGeneralExplicitOdeSolver REQUIRED); sofa_find_package(SofaImplicitOdeSolver REQUIRED). set(SOFAMISCCOLLISION_SRC src/SofaMiscCollision). set(HEADER_FILES; ${SOFAMISCCOLLISION_SRC}/config.h.in; ${SOFAMISCCOLLISION_SRC}/initSofaMiscCollision.h; ). set(SOURCE_FILES; ${SOFAMISCCOLLISION_SRC}/initSofaMiscCollision.cpp; ). set(EXTRA_FILES; ${SOFAMISCCOLLISION_SRC}/README.md; ). list(APPEND HEADER_FILES; ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.h; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.h; ${SOFAMISCCOLLISION_SRC}/SolverMerger.h; ). list(APPEND SOURCE_FILES. ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.cpp; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.cpp; ${SOFAMISCCOLLISION_SRC}/SolverMerger.cpp. ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaGeneralMeshCollision SofaGeneralDeformable SofaConstraint SofaExplicitOdeSolver SofaGeneralExplicitOdeSolver SofaImplicitOdeSolver SofaBaseCollision SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Intersection and Sofa.Component.Collision.Response.Contact instead.; # Moreover, OBB and Capsule-related components have been moved into the external plugin CollisionOBBCapsule.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt:620,config,config,620,applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscEngine LANGUAGES CXX). sofa_find_package(SofaNonUniformFem REQUIRED). set(SOFAMISCENGINE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCENGINE_SRC}/config.h.in; ${SOFAMISCENGINE_SRC}/initSofaMiscEngine.h; ). set(SOURCE_FILES; ${SOFAMISCENGINE_SRC}/initSofaMiscEngine.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Analyze and Sofa.Component.Engine.Transform instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Analyze REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Analyze); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Transform). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscEngine/CMakeLists.txt:211,config,config,211,applications/collections/deprecated/modules/SofaMiscEngine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscEngine/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscExtra LANGUAGES CXX). set(SOFAMISCEXTRA_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCEXTRA_SRC}/initSofaMiscExtra.h; ${SOFAMISCEXTRA_SRC}/config.h.in; ). set(SOURCE_FILES; ${SOFAMISCEXTRA_SRC}/initSofaMiscExtra.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Generate instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Generate REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Generate). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscExtra/CMakeLists.txt:203,config,config,203,applications/collections/deprecated/modules/SofaMiscExtra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscExtra/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscFem LANGUAGES CXX). set(SOFAMISCFEM_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCFEM_SRC}/config.h.in; ${SOFAMISCFEM_SRC}/initSofaMiscFem.h; ). set(SOURCE_FILES; ${SOFAMISCFEM_SRC}/initSofaMiscFem.cpp; ); ; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SolidMechanics.FEM.Elastic, Sofa.Component.SolidMechanics.FEM.HyperElastic and Sofa.Component.SolidMechanics.TensorMass instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.HyperElastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.HyperElastic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.TensorMass). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscFem/CMakeLists.txt:155,config,config,155,applications/collections/deprecated/modules/SofaMiscFem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscFem/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscForceField LANGUAGES CXX). set(SOFAMISCFORCEFIELD_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCFORCEFIELD_SRC}/config.h.in; ${SOFAMISCFORCEFIELD_SRC}/initSofaMiscForceField.h; ). set(SOURCE_FILES; ${SOFAMISCFORCEFIELD_SRC}/initSofaMiscForceField.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mass and Sofa.Component.SolidMechanics.Spring instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mass); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.Elastic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscForceField/CMakeLists.txt:176,config,config,176,applications/collections/deprecated/modules/SofaMiscForceField/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscForceField/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscMapping LANGUAGES CXX). set(SOFAMISCMAPPING_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCMAPPING_SRC}/config.h.in; ${SOFAMISCMAPPING_SRC}/initSofaMiscMapping.h; ). set(SOURCE_FILES; ${SOFAMISCMAPPING_SRC}/initSofaMiscMapping.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscMapping/CMakeLists.txt:167,config,config,167,applications/collections/deprecated/modules/SofaMiscMapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscMapping/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscSolver LANGUAGES CXX). set(SOFAMISCSOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCSOLVER_SRC}/config.h.in; ${SOFAMISCSOLVER_SRC}/initSofaMiscSolver.h; ). set(SOURCE_FILES; ${SOFAMISCSOLVER_SRC}/initSofaMiscSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Backward and Sofa.Component.ODESolver.Forward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED); sofa_find_package(Sofa.Component.ODESolver.Forward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Backward Sofa.Component.ODESolver.Forward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscSolver/CMakeLists.txt:164,config,config,164,applications/collections/deprecated/modules/SofaMiscSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscTopology LANGUAGES CXX). set(SOFAMISCTOPOLOGY_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; 	${SOFAMISCTOPOLOGY_SRC}/config.h.in; 	${SOFAMISCTOPOLOGY_SRC}/initSofaMiscTopology.h; ). set(SOURCE_FILES; 	${SOFAMISCTOPOLOGY_SRC}/initSofaMiscTopology.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Utility instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Utility REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Utility). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscTopology/CMakeLists.txt:171,config,config,171,applications/collections/deprecated/modules/SofaMiscTopology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscTopology/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaNewmat LANGUAGES CXX). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED). # Newmat; #sofa_find_package(Newmat QUIET) # useless IMO; if(NOT Newmat_FOUND); add_subdirectory(extlibs/newmat newmat); endif(); set_target_properties(newmat PROPERTIES DEBUG_POSTFIX ""_d""); set_target_properties(newmat PROPERTIES FOLDER ""SofaExtlibs""). set(SOFANEWMAT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFANEWMAT_SRC}/config.h.in; ${SOFANEWMAT_SRC}/initSofaNewmat.h; ${SOFANEWMAT_SRC}/LULinearSolver.h; ${SOFANEWMAT_SRC}/NewMatMatrix.h; ${SOFANEWMAT_SRC}/NewMatVector.h; ). set(SOURCE_FILES; ${SOFANEWMAT_SRC}/initSofaNewmat.cpp; ${SOFANEWMAT_SRC}/LULinearSolver.cpp; ${SOFANEWMAT_SRC}/NewMatCGLinearSolver.cpp; ${SOFANEWMAT_SRC}/NewMatCholeskySolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC newmat Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ). cmake_dependent_option(SOFANEWMAT_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFANEWMAT_BUILD_TESTS); add_subdirectory(${PROJECT_NAME}_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/CMakeLists.txt:91,Config,Config,91,applications/plugins/SofaNewmat/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/CMakeLists.txt,3,"['Config', 'config', 'plugin']","['Config', 'config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaNonUniformFem LANGUAGES CXX). set(SOFANONUNIFORMFEM_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFANONUNIFORMFEM_SRC}/config.h.in; ${SOFANONUNIFORMFEM_SRC}/initSofaNonUniformFem.h; ). set(SOURCE_FILES; ${SOFANONUNIFORMFEM_SRC}/initSofaNonUniformFem.cpp; ). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Container.Grid, Sofa.Component.Topology.Container.Dynamic and Sofa.Component.SolidMechanics.FEM.NonUniform instead.""). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.NonUniform REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.NonUniform). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaNonUniformFem/CMakeLists.txt:173,config,config,173,applications/collections/deprecated/modules/SofaNonUniformFem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaNonUniformFem/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaObjectInteraction LANGUAGES CXX). set(SOFAOBJECTINTERACTION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAOBJECTINTERACTION_SRC}/config.h.in; ${SOFAOBJECTINTERACTION_SRC}/initSofaObjectInteraction.h; ). set(SOURCE_FILES; ${SOFAOBJECTINTERACTION_SRC}/initSofaObjectInteraction.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Response.Contact instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaObjectInteraction/CMakeLists.txt:185,config,config,185,applications/collections/deprecated/modules/SofaObjectInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaObjectInteraction/CMakeLists.txt,1,['config'],['config']
Modifiability,cmake_minimum_required(VERSION 3.22); project(SofaOpenCL). set(SOFAOPENCL_VERSION 0.1). find_package(OpenCL REQUIRED); find_package(SofaGeneralObjectInteraction REQUIRED); find_package(SofaGeneralDeformable REQUIRED); find_package(SofaUserInteraction REQUIRED); find_package(Sofa.GL REQUIRED); sofa_find_package(SofaSphFluid QUIET). set(HEADER_FILES; CPUSPHFluidForceField.h; CPUSPHFluidForceFieldWithOpenCL.h; OpenCLCommon.h; OpenCLFixedConstraint.h; OpenCLFixedConstraint.inl; OpenCLIdentityMapping.h; OpenCLIdentityMapping.inl; OpenCLKernel.h; OpenCLMechanicalObject.h; OpenCLMechanicalObject.inl; OpenCLMemoryManager.h; OpenCLPlaneForceField.h; OpenCLPlaneForceField.inl; OpenCLProgram.h; OpenCLProgramParser.h; OpenCLSphereForceField.h; OpenCLSphereForceField.inl; OpenCLSpringForceField.h; OpenCLSpringForceField.inl; OpenCLTypes.h; OpenCLUniformMass.h; OpenCLUniformMass.inl; config.h; myopencl.h; oclRadixSort/CPUSortWithCuda.h; oclRadixSort/CPUSortWithOpenCL.h; oclRadixSort/RadixSort.h; oclRadixSort/Scan.h; tools/showvector.h; tools/top.h; ). set(SOURCE_FILES; CPUSPHFluidForceField.cpp; CPUSPHFluidForceFieldWithOpenCL.cpp; OpenCLBoxROI.cpp; OpenCLCommon.cpp; OpenCLFixedConstraint.cpp; OpenCLIdentityMapping.cpp; OpenCLMechanicalObject.cpp; OpenCLMemoryManager.cpp; OpenCLMouseInteraction.cpp; OpenCLPlaneForceField.cpp; OpenCLProgram.cpp; OpenCLSphereForceField.cpp; OpenCLSpringForceField.cpp; OpenCLUniformMass.cpp; initSofaOpenCL.cpp; myopencl.cpp; oclRadixSort/RadixSort.cpp; oclRadixSort/Scan.cpp; tools/showvector.cpp; tools/top.cpp; ). set(OTHER_FILES; kernels/OpenCLFixedConstraint.cl; kernels/OpenCLGenericParticleForceField.cl; kernels/OpenCLGenericParticleForceField_Plane.macrocl; kernels/OpenCLGenericParticleForceField_Sphere.macrocl; kernels/OpenCLMechanicalObject.cl; kernels/OpenCLMemoryManager.cl; kernels/OpenCLSpatialGridForce.cl; kernels/OpenCLSpringForceField.cl; kernels/OpenCLUniformMass.cl; kernels/oclRadixSort/RadixSort.cl; kernels/oclRadixSort/Scan_b.cl; ). i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt:883,config,config,883,applications/plugins/SofaOpenCL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaOpenglVisual LANGUAGES CXX). set(HEADER_FILES; src/SofaOpenglVisual/config.h; src/SofaOpenglVisual/initSofaOpenglVisual.h; ); set(SOURCE_FILES; src/SofaOpenglVisual/initSofaOpenglVisual.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.GL.Component.Rendering2D, Sofa.GL.Component.Rendering3D and Sofa.GL.Component.Shader instead.""). # forward to the new sofang module; sofa_find_package(Sofa.GL.Component.Rendering2D REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.GL.Component.Shader REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Rendering2D); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Rendering3D); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Shader). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaOpenglVisual""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaOpenglVisual/CMakeLists.txt:118,config,config,118,applications/collections/deprecated/modules/SofaOpenglVisual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaOpenglVisual/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaPardisoSolver). set(SOFAPARDISOSOLVER_MAJOR_VERSION 0); set(SOFAPARDISOSOLVER_MINOR_VERSION 1); set(SOFAPARDISOSOLVER_VERSION ${SOFAPARDISOSOLVER_MAJOR_VERSION}.${SOFAPARDISOSOLVER_MINOR_VERSION}). set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""). find_package(SofaFramework REQUIRED); find_package(SofaBase REQUIRED). link_directories(""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""); set(SOFAPARDISOSOLVER_LINK_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""). find_package(GFortran REQUIRED); find_package(BLAS REQUIRED); find_package(LAPACK REQUIRED); find_package(OpenMP REQUIRED). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaBase SofaGeneral); set(COMPILATION_FLAGS -DSOFA_BUILD_SOFAPARDISOSOLVER ). set ( PARDISO_LIB """" CACHE FILE ""set to Pardiso library downloaded from the web"" ). set(HEADER_FILES; SparsePARDISOSolver.h; config.h; ). set(SOURCE_FILES; SparsePARDISOSolver.cpp; initPardisoSolver.cpp; ). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaMeshCollision SofaBaseVisual SofaBaseLinearSolver Sofa.Core); set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} ${PARDISO_LIB} gfortran blas lapack gomp). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAPARDISOSOLVER_VERSION}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${COMPILATION_FLAGS}""). target_link_libraries(${PROJECT_NAME} ${LINKER_DEPENDENCIES}). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAPARDISOSOLVER_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt:903,config,config,903,applications/plugins/SofaPardisoSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt,2,['config'],"['config', 'configurations']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaPhysicsAPI LANGUAGES CXX). set(SOFAPHYSICSAPI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AU",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:171,config,config,171,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaPreconditioner). set(SRC_ROOT src/SofaPreconditioner). # Config; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/initSofaPreconditioner.h; ); set(SOURCE_FILES; ${SRC_ROOT}/initSofaPreconditioner.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative and Sofa.Component.LinearSolver.Preconditioner instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Preconditioner REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Preconditioner). sofa_create_package_with_targets(; PACKAGE_NAME SofaPreconditioner; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaPreconditioner AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaPreconditioner""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaPreconditioner/CMakeLists.txt:107,Config,Config,107,applications/collections/deprecated/modules/SofaPreconditioner/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaPreconditioner/CMakeLists.txt,2,"['Config', 'config']","['Config', 'config']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaRigid LANGUAGES CXX). set(SOFARIGID_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFARIGID_SRC}/config.h.in; ${SOFARIGID_SRC}/initSofaRigid.h; ). set(SOURCE_FILES; ${SOFARIGID_SRC}/initSofaRigid.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping and Sofa.Component.SolidMechanics.Spring instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaRigid/CMakeLists.txt:149,config,config,149,applications/collections/deprecated/modules/SofaRigid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaRigid/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaSimpleFem LANGUAGES CXX). set(SOFASIMPLEFEM_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFASIMPLEFEM_SRC}/config.h.in; ${SOFASIMPLEFEM_SRC}/initSofaSimpleFem.h; ). set(SOURCE_FILES; ${SOFASIMPLEFEM_SRC}/initSofaSimpleFem.cpp; ). sofa_find_package(SofaBaseTopology REQUIRED); sofa_find_package(SofaBaseLinearSolver REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Diffusion and Sofa.Component.SolidMechanics.FEM.Elastic instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Diffusion REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Diffusion); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.Elastic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimpleFem/CMakeLists.txt:161,config,config,161,applications/collections/deprecated/modules/SofaSimpleFem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimpleFem/CMakeLists.txt,1,['config'],['config']
Modifiability,cmake_minimum_required(VERSION 3.22); project(SofaSimpleGUI). set(SOFASIMPLEGUI_VERSION 0.1). set(HEADER_FILES; Camera.h; Interactor.h; PickedPoint.h; SofaGL.h; SofaScene.h; SpringInteractor.h; VisualPickVisitor.h; config.h.in; ). set(SOURCE_FILES; Camera.cpp; Interactor.cpp; SofaGL.cpp; SofaScene.cpp; SpringInteractor.cpp; VisualPickVisitor.cpp; initSimpleGUI.cpp; ). sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Eigen3 REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component Sofa.GL Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFASIMPLEGUI_VERSION}). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFASIMPLEGUI_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/CMakeLists.txt:215,config,config,215,applications/plugins/SofaSimpleGUI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/CMakeLists.txt,2,['config'],"['config', 'configurations']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaSimulationTree LANGUAGES CXX). set(SOFASIMULATIONTREE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFASIMULATIONTREE_SRC}/config.h.in; ${SOFASIMULATIONTREE_SRC}/init.h; ${SOFASIMULATIONTREE_SRC}/ExportDotVisitor.h; ${SOFASIMULATIONTREE_SRC}/GNode.h; ${SOFASIMULATIONTREE_SRC}/GNodeMultiMappingElement.h; ${SOFASIMULATIONTREE_SRC}/GNodeVisitor.h; ${SOFASIMULATIONTREE_SRC}/TreeSimulation.h; ). set(SOURCE_FILES; ${SOFASIMULATIONTREE_SRC}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; )",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimulationTree/CMakeLists.txt:176,config,config,176,applications/collections/deprecated/modules/SofaSimulationTree/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimulationTree/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaSparseSolver LANGUAGES CXX). set(SRC_ROOT src/SofaSparseSolver). # Sources; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/initSofaSparseSolver.h; ); set(SOURCE_FILES; ${SRC_ROOT}/initSofaSparseSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative and Sofa.Component.LinearSolver.Direct instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME SofaSparseSolver; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaSparseSolver AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaSparseSolver""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSparseSolver/CMakeLists.txt:156,config,config,156,applications/collections/deprecated/modules/SofaSparseSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSparseSolver/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaTest VERSION 0.1). set(HEADER_FILES; InitPlugin_test.h; Sofa_test.h; ). set(SOURCE_FILES; InitPlugin_test.cpp; Sofa_test.cpp; ). list(APPEND HEADER_FILES; BroadPhase_test.h; DataEngine_test.h; ForceField_test.h; PrimitiveCreation.h; Elasticity_test.h; Elasticity_test.inl; ); list(APPEND SOURCE_FILES; PrimitiveCreation.cpp; Elasticity_test.cpp; ). sofa_find_package(Sofa.Framework REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(SceneCreator REQUIRED); sofa_find_package(Sofa.Testing REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${PYTHON_FILES}); target_link_libraries(${PROJECT_NAME} SceneCreator Sofa.Framework Sofa.Component Sofa.Testing). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/CMakeLists.txt:812,config,configurations,812,applications/plugins/SofaTest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/CMakeLists.txt,2,"['config', 'plugin']","['configurations', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaTopologyMapping LANGUAGES CXX). set(SOFATOPOLOGYMAPPING_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFATOPOLOGYMAPPING_SRC}/config.h.in; ${SOFATOPOLOGYMAPPING_SRC}/initSofaTopologyMapping.h; ). set(SOURCE_FILES; ${SOFATOPOLOGYMAPPING_SRC}/initSofaTopologyMapping.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Mapping and Sofa.Component.Mapping instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED); sofa_find_package(Sofa.Component.Mapping REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Mapping); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaTopologyMapping/CMakeLists.txt:179,config,config,179,applications/collections/deprecated/modules/SofaTopologyMapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaTopologyMapping/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaUserInteraction LANGUAGES CXX). set(SOFAUSERINTERACTION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAUSERINTERACTION_SRC}/config.h.in; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.h; ). set(SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.cpp; ). list(APPEND HEADER_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.h; ). list(APPEND SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.cpp; ). sofa_find_package(SofaDeformable REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralVisual REQUIRED); sofa_find_package(SofaTopologyMapping REQUIRED); sofa_find_package(SofaBoundaryCondition REQUIRED); sofa_find_package(SofaGraphComponent REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaGeneralMeshCollision SofaGeneralVisual SofaTopologyMapping SofaDeformable SofaBoundaryCondition SofaGraphComponent). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.Component.Controller and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.D",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt:179,config,config,179,applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(SofaValidation LANGUAGES CXX). set(SOFAVALIDATION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAVALIDATION_SRC}/config.h.in; ${SOFAVALIDATION_SRC}/initSofaValidation.h; ${SOFAVALIDATION_SRC}/DataController.h; ${SOFAVALIDATION_SRC}/DataMonitor.h; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.h; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.inl; ${SOFAVALIDATION_SRC}/DevMonitor.h; ${SOFAVALIDATION_SRC}/DevMonitorManager.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.inl; ${SOFAVALIDATION_SRC}/EvalPointsDistance.h; ${SOFAVALIDATION_SRC}/EvalPointsDistance.inl; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.h; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.inl; ${SOFAVALIDATION_SRC}/ExtraMonitor.h; ${SOFAVALIDATION_SRC}/ExtraMonitor.inl; ${SOFAVALIDATION_SRC}/Monitor.h; ${SOFAVALIDATION_SRC}/Monitor.inl; ). set(SOURCE_FILES; ${SOFAVALIDATION_SRC}/initSofaValidation.cpp; ${SOFAVALIDATION_SRC}/DataController.cpp; ${SOFAVALIDATION_SRC}/DataMonitor.cpp; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.cpp; ${SOFAVALIDATION_SRC}/DevMonitorManager.cpp; ${SOFAVALIDATION_SRC}/DevTensionMonitor.cpp; ${SOFAVALIDATION_SRC}/EvalPointsDistance.cpp; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.cpp; ${SOFAVALIDATION_SRC}/ExtraMonitor.cpp; ${SOFAVALIDATION_SRC}/Monitor.cpp; ). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common Sofa.Component.Collision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJEC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt:164,config,config,164,applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(VolumetricRendering). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.GL.Component REQUIRED). set(HEADER_FILES; src/VolumetricRendering/config.h.in; src/VolumetricRendering/initVolumetricRendering.cpp; src/VolumetricRendering/OglTetrahedralModel.h; src/VolumetricRendering/OglTetrahedralModel.inl; src/VolumetricRendering/OglVolumetricModel.h; ). set(SOURCE_FILES; src/VolumetricRendering/initVolumetricRendering.cpp; src/VolumetricRendering/OglTetrahedralModel.cpp; src/VolumetricRendering/OglVolumetricModel.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.GL.Component). # Install rules for the library and the headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). sofa_add_subdirectory(plugin extensions/CUDA VolumetricRendering.CUDA); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/CMakeLists.txt:86,Config,Config,86,applications/plugins/VolumetricRendering/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/CMakeLists.txt,4,"['Config', 'config', 'plugin']","['Config', 'config', 'configurations', 'plugin']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(VolumetricRendering.CUDA). set(HEADER_FILES; src/VolumetricRendering/CUDA/init.h; src/VolumetricRendering/CUDA/config.h.in. src/VolumetricRendering/CUDA/CudaTetrahedralVisualModel.h; src/VolumetricRendering/CUDA/CudaTetrahedralVisualModel.inl; ). set(SOURCE_FILES; src/VolumetricRendering/CUDA/init.cpp. src/VolumetricRendering/CUDA/CudaTetrahedralVisualModel.cpp; ). sofa_find_package(VolumetricRendering REQUIRED); sofa_find_package(SofaCUDA REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} VolumetricRendering); target_link_libraries(${PROJECT_NAME} SofaCUDA). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/extensions/CUDA/CMakeLists.txt:157,config,config,157,applications/plugins/VolumetricRendering/extensions/CUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/extensions/CUDA/CMakeLists.txt,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(Xitact). find_package(SofaOpenglVisual REQUIRED). set(HEADER_FILES; IHPDriver.h; ITPDriver.h; PaceMaker.h; XiTrocarInterface.h; config.h; ). set(SOURCE_FILES; IHPDriver.cpp; ITPDriver.cpp; PaceMaker.cpp; initXitact.cpp; ). set(README_FILES PluginXitact.txt). find_package(SofaGui REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_XITACTPLUGIN""); target_link_libraries(${PROJECT_NAME} SofaMain SofaGui SofaGuiQt XiRobot SofaOpenglVisual); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT Xitact_libraries; EXPORT XitactTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Xitact/CMakeLists.txt:174,config,config,174,applications/plugins/Xitact/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Xitact/CMakeLists.txt,3,"['Plugin', 'config', 'plugin']","['PluginXitact', 'config', 'plugins']"
Modifiability,"cmake_minimum_required(VERSION 3.22); project(image VERSION 0.1). set(PLUGIN_IMAGE_COMPILE_SET ""standard"" CACHE STRING ""Set of image type to compile. Values are: none, standard (default), full.""); set_property(CACHE PLUGIN_IMAGE_COMPILE_SET PROPERTY STRINGS none standard full). find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(CImgPlugin REQUIRED). sofa_find_package(Sofa.GL QUIET); sofa_find_package(Sofa.GUI.Qt QUIET); sofa_find_package(SofaPython QUIET); sofa_find_package(MultiThreading QUIET); sofa_find_package(ZLIB); sofa_find_package(Freenect QUIET). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}). set(HEADER_FILES; config.h.in; CImgData.h; CollisionToCarvingEngine.h; Containers.h; ImageAccumulator.h; ImageAlgorithms.h; ImageContainer.h; GenerateImage.h; ImageDataDisplay.h; ImageExporter.h; ImageFilter.h; ImageOperation.h; ImageSampler.h; ImageToRigidMassEngine.h; ImageTransform.h; ImageTransformEngine.h; ImageTypes.h; ImageValuesFromPositions.h; ImageCoordValuesFromPositions.h; MarchingCubesEngine.h; MergeImages.h; MeshToImageEngine.h; TransferFunction.h; VectorVis.h; VoronoiToMeshEngine.h; DepthMapToMeshEngine.h; ImageViewer.h; ). set(SOURCE_FILES; initImage.cpp; ). if(NOT PLUGIN_IMAGE_COMPILE_SET STREQUAL ""none""); list(APPEND SOURCE_FILES; CollisionToCarvingEngine.cpp; ImageAccumulator.cpp; ImageContainer.cpp; GenerateImage.cpp; ImageDataDisplay.cpp; ImageExporter.cpp; ImageFilter.cpp; ImageOperation.cpp; ImageSampler.cpp; ImageToRigidMassEngine.cpp; ImageTransform.cpp; ImageTransformEngine.cpp; ImageTypes.cpp; ImageValuesFromPositions.cpp; ImageCoordValuesFromPositions.cpp; MarchingCubesEngine.cpp; MergeImages.cpp; MeshToImageEngine.cpp; TransferFunction.cpp; VoronoiToMeshEngine.cpp; DepthMapToMeshEngine.cpp; ImageViewer.cpp; ); endif(). set(README_FILES; image.txt; ). if(SofaPython_FOUND); set(PYTHON_FILES; python/SofaImage/API.py; python/SofaImage/__init__.py; ); list(APPEND SOURCE_FILES python",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:692,config,config,692,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(image_gui). set(HEADER_FILES; src/image_gui/ImageTransformWidget.h; src/image_gui/config.h.in; ). set(MOC_HEADER_FILES; src/image_gui/HistogramWidget.h; src/image_gui/ImagePlaneWidget.h; src/image_gui/VectorVisualizationWidget.h; ). set(SOURCE_FILES; src/image_gui/HistogramWidget.cpp; src/image_gui/ImagePlaneWidget.cpp; src/image_gui/ImageTransformWidget.cpp; src/image_gui/VectorVisualizationWidget.cpp; src/image_gui/initImage_gui.cpp; ). include(../imagetoolbox/imagetoolbox.cmake). find_package(Sofa.GUI.Qt REQUIRED QUIET); find_package(Qt5 COMPONENTS Core QUIET); if (NOT Qt5Core_FOUND); if(CMAKE_VERSION VERSION_GREATER_EQUAL ""3.16""); find_package(Qt6 COMPONENTS Core CoreTools REQUIRED QUIET); if (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); # else() should never happened as it would already break in Sofa.GUI.Qt; endif(); else(); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(). set(MOC_FILES_GROUP ""Generated""). add_definitions(""-DSOFA_BUILD_IMAGE_GUI""); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${MOC_HEADER_FILES} ${MOC_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} image ${OPENGL_LIBRARIES} Sofa.GUI.Qt). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/image_gui/CMakeLists.txt:128,config,config,128,applications/plugins/image/image_gui/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/image_gui/CMakeLists.txt,1,['config'],['config']
Modifiability,"cmake_minimum_required(VERSION 3.22); project(runSofa). ###################################; # Generate plugin_list.conf.default; include(cmake/GeneratePluginConfig.cmake); if(MSVC); # plugins are located in bin/; set(_pluginLocation ""bin""); else(); # plugins are located in lib/; set(_pluginLocation ""lib""); endif(); set(_configPluginFileName plugin_list.conf); set(_defaultConfigPluginFileName ""${_configPluginFileName}.default""); set(_defaultConfigPluginFilePath ""${CMAKE_BINARY_DIR}/${_pluginLocation}/${_defaultConfigPluginFileName}""); sofa_generate_plugin_config(${_defaultConfigPluginFilePath}); message(""Write Plugin list at ${_defaultConfigPluginFilePath}""); configure_file(${_defaultConfigPluginFilePath} ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName} COPYONLY); install(FILES ""${_defaultConfigPluginFilePath}"" DESTINATION ${_pluginLocation}/ COMPONENT applications); ###################################. sofa_find_package(Sofa.Component.Playback QUIET). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(Sofa.GUI.Batch REQUIRED); sofa_find_package(SceneChecking REQUIRED). set(HEADER_FILES; runSofaValidation.h; ); set(SOURCE_FILES; Main.cpp; ). if(Sofa.Component.Playback_FOUND); list(APPEND SOURCE_FILES runSofaValidation.cpp); else(); list(APPEND SOURCE_FILES runSofaNoValidation.cpp); endif(). set(RESOURCE_FILES; resources/docs/runsofa.html; ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName}; ); if(APPLE); set(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.icns""); set_source_files_properties(${RC_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION ""Resources""); else(); set(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.rc""); endif(). if(APPLE AND SOFA_BUILD_APP_BUNDLE); add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.plist""); else(); add_execu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt:185,plugin,plugins,185,applications/projects/runSofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt,3,"['Plugin', 'plugin']","['Plugin', 'plugins']"
Modifiability,cmake_minimum_required(VERSION 3.22); project(sofaInfo). find_package(Sofa.Config); sofa_find_package(Sofa.Component); sofa_find_package(Sofa.Simulation.Graph). add_executable(${PROJECT_NAME} sofaInfo.cpp); target_link_libraries(${PROJECT_NAME} Sofa.Component Sofa.Simulation.Graph); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInfo/CMakeLists.txt:75,Config,Config,75,applications/projects/sofaInfo/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInfo/CMakeLists.txt,1,['Config'],['Config']
Modifiability,cmake_minimum_required(VERSION 3.22); project(sofaOPENCL). find_package(SofaGui REQUIRED); find_package(SofaOpenCL REQUIRED). set(SOURCE_FILES Main.cpp); set(RC_FILES sofa.rc). include_directories(../plugins); add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${RC_FILES}); target_link_libraries(${PROJECT_NAME} SofaGui SofaOpenCL); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaOPENCL/CMakeLists.txt:200,plugin,plugins,200,applications/projects/sofaOPENCL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaOPENCL/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,"com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [C",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48334,Refactor,Refactoring,48334,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactoring']
Modifiability,compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950 ); - [examples] Run PluginFinder after some module changes [#2860]( https://github.com/sofa-framework/sofa/pull/2860 ); - [examples] Remove all uses of DefaultCollisionGroupManager [#3104]( https://github.com/sofa-framework/sofa/pull/3104 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.12.00]( https://github.com/sofa-framework/sofa/tree/v21.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.03...v21.12.00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refact,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:133516,Plugin,PluginFinder,133516,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginFinder']
Modifiability,contributions. - [GitHub] Add a python-based action managing discussions [#4268](https://github.com/sofa-framework/sofa/pull/4268); - [plugins] Update license to LGPL of remaining files [#4425](https://github.com/sofa-framework/sofa/pull/4425); - [LinearSystem] Introduce components to map matrices [#4490](https://github.com/sofa-framework/sofa/pull/4490); - [SofaSphFluid] Externalize SofaSphFluid [#4526](https://github.com/sofa-framework/sofa/pull/4526); - [LinearSystem] Introduce ConstantSparsityProjectionMethod [#4552](https://github.com/sofa-framework/sofa/pull/4552); - [HyperElastic] Introduce stable Neo Hookean hyperelastic material [#4603](https://github.com/sofa-framework/sofa/pull/4603); - [LinearSystem] Cache mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/s,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:1148,inherit,inheritance,1148,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['inherit'],['inheritance']
Modifiability,"cpp; SceneColladaLoader.cpp; ). set(README_FILES README_AssimpPlugin.txt). ## Assimp dependencies; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/""). ### Dependencies; find_package(Sofa.Core REQUIRED); sofa_find_package(assimp REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.Mapping REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(image QUIET); sofa_find_package(Flexible QUIET). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SOFAASSIMP""); target_link_libraries(${PROJECT_NAME} PUBLIC ${ASSIMP_LIBRARIES} Sofa.Core Sofa.Component.Constraint.Projective Sofa.Component.Mass Sofa.Component.Mapping Sofa.GL.Component.Rendering3D Sofa.Component.StateContainer Sofa.Component.Collision.Geometry). if(image_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC image); endif(); if(Flexible_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Flexible); endif(). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/..""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${ASSIMP_INCLUDE_DIR}>""). if(ASSIMP_DLL); sofa_install_libraries(PATHS ${ASSIMP_DLL}); endif(). #TODO; if(SOFA_BUILD_TESTS); # add_subdirectory(CGALPlugin_test); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt:1465,Flexible,Flexible,1465,applications/plugins/SofaAssimp/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt,2,"['Flexible', 'config']","['Flexible', 'configurations']"
Modifiability,"ctory(directory SofaHighOrder SofaHighOrder EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin CImgPlugin CImgPlugin) # ON by default and first as it is used by other plugins.; sofa_add_subdirectory(plugin ArticulatedSystemPlugin ArticulatedSystemPlugin ON); sofa_add_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subd",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1342,plugin,plugin,1342,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,cxxopts [#2263]( https://github.com/sofa-framework/sofa/pull/2263 ); - [SofaGuiQt] FIX screenshot mechanism [#2507]( https://github.com/sofa-framework/sofa/pull/2507 ); - [SofaGeneralDeformable] Clean class TriangularBendingSpring and add tests [#2363]( https://github.com/sofa-framework/sofa/pull/2363 ); - [SofaKernel] Split the content of DataTracker.h in different headers files. [#2286]( https://github.com/sofa-framework/sofa/pull/2286 ); - [SofaLoader] Rename MeshObjLoader to MeshOBJLoader [#2428]( https://github.com/sofa-framework/sofa/pull/2428 ); - [SofaMiscFem] Quick clean unused parameters in Triangular and TriangleFEMForceField [#2283]( https://github.com/sofa-framework/sofa/pull/2283 ); - [SofaMiscForceField] Fix MeshMatrixMass duplicate Data parameters [#2192]( https://github.com/sofa-framework/sofa/pull/2192 ); - [SofaSimulationCore] Remove unused class VisitorAsync [#1994]( https://github.com/sofa-framework/sofa/pull/1994 ). **Plugins / Projects**; - [CImgPlugin/image] Move file and clean headers [#2307]( https://github.com/sofa-framework/sofa/pull/2307 ); - [MultiThreading] Parallel hexa fem [#2177]( https://github.com/sofa-framework/sofa/pull/2177 ). **Examples / Scenes**. **Scripts / Tools**. ### Improvements. **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [GitHub] Create bug-report issue template [#2365]( https://github.com/sofa-framework/sofa/pull/2365 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ); - [SofaScenes] Introduce option to add scenes as a project of the build [#2327]( https://github.com/sofa-framework/sofa/pull/2327 ). **Modules**; - [All] Add warnings if components are missing to solve a specific response [#2523]( https://github.com/sofa-framework/sofa/pull/2523 ); - [SofaHelper] Handle recent MSH format in MeshGmshLoader [#2155]( https://github.com/sofa-framework/sofa/pull/2155 ); - [Sofa.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:138621,Plugin,Plugins,138621,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"d running for such; interactive use in the most ordinary way, to print or display an; announcement including an appropriate copyright notice and a; notice that there is no warranty (or else, saying that you provide; a warranty) and that users may redistribute the program under; these conditions, and telling the user how to view a copy of this; License. (Exception: if the Program itself is interactive but; does not normally print such an announcement, your work based on; the Program is not required to print an announcement.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Program,; and can be reasonably considered independent and separate works in; themselves, then this License, and its terms, do not apply to those; sections when you distribute them as separate works. But when you; distribute the same sections as part of a whole which is a work based; on the Program, the distribution of the whole must be on the terms of; this License, whose permissions for other licensees extend to the; entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest; your rights to work written entirely by you; rather, the intent is to; exercise the right to control the distribution of derivative or; collective works based on the Program. In addition, mere aggregation of another work not based on the Program; with the Program (or with a work based on the Program) on a volume of; a storage or distribution medium does not bring the other work under; the scope of this License. 3. You may copy and distribute the Program (or a work based on it,; under Section 2) in object code or executable form under the terms of; Sections 1 and 2 above provided that you also do one of the following:. a) Accompany it with the complete corresponding machine-readable; source code, which must be distributed under the terms of Sections; 1 and 2 above on a m",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:6315,extend,extend,6315,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['extend'],['extend']
Modifiability,d stream to msg_* API [#2864]( https://github.com/sofa-framework/sofa/pull/2864 ); - [SofaCUDA] Modernize CMake for CUDA [#2878]( https://github.com/sofa-framework/sofa/pull/2878 ); - [SofaCUDA] QuadSpringsSphere scenes [#2598]( https://github.com/sofa-framework/sofa/pull/2598 ); - [SofaCUDA] Remove calls to __umul24 on device [#2715]( https://github.com/sofa-framework/sofa/pull/2715 ); - [SofaCUDA] Resurrect CudaTetrahedronTLEDForceField [#2865]( https://github.com/sofa-framework/sofa/pull/2865 ); - [SofaCUDA] harmless cleaning of namespace declaration and header inclusion [#2674]( https://github.com/sofa-framework/sofa/pull/2674 ); - [SofaMatrix] Reduce dependency [#2768]( https://github.com/sofa-framework/sofa/pull/2768 ); - [SofaMatrix][SofaBaseLinearSolver] Move GlobalSystemMatrixExporter [#2545]( https://github.com/sofa-framework/sofa/pull/2545 ); - [SofaPhysicsAPI] Clean CMake file and compile without compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-framework/sofa/pull/2726 ); - [examples] Remove missing files from the scene list [#2809]( https://github.com/sofa-framework/sofa/pull/2809 ); - [examples] Remove scene which should be in LMConstraint [#2834]( https://github.com/sofa-framework/sofa/pull/2834 ); - [examples] Run PluginFinder [#2950]( https://github.com/sofa-framework/sofa/pull/2950,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:132599,variab,variables,132599,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,"d tests for RegularGridTopology [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - [SofaEngine]; - BREAKING: Add oriented box feature to BoxROI [#108]( https://github.com/sofa-framework/sofa/pull/108 ); - [SofaConstraint]; - add instantiation of constraint corrections with Vec2f [#157]( https://github.com/sofa-framework/sofa/pull/157 ); - [SofaOpenglVisual]; - add tests for ClipPlane [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaVolumetricData]; - add tests for DistanceGrid [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for Light [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [SofaBoundaryCondition]; - add tests for ConstantForceField, some of them are OpenIssue demonstrating existing problem, as crashing sofa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust imp",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:329380,Plugin,Plugins,329380,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"d] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-framework/sofa/pull/4203); - [LinearSolver] Remove CSparse-based linear solvers [#4258](https://github.com/sofa-framework/sofa/pull/4258); - [Common] Add message to make the fetch mechanism less hidden [#4310](https://github.com/sofa-framework/sofa/pull/4310); - [Simulation.Core] Deprecate Lo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48920,refactor,refactoring,48920,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactoring']
Modifiability,da. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:319536,config,configuration,319536,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,"ded for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutori",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2386,plugin,plugins,2386,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['plugin'],['plugins']
Modifiability,"dency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145494,inherit,inheritance,145494,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['inherit'],['inheritance']
Modifiability,ds getBarycentricCoordinates and isPointInTriangle in Triangle class [#4053](https://github.com/sofa-framework/sofa/pull/4053); - [examples] Introduce falling beam example [#4055](https://github.com/sofa-framework/sofa/pull/4055); - [all] Add dates for user deprecation classes RemovedData and DeprecatedData [#4059](https://github.com/sofa-framework/sofa/pull/4059); - [LinearSolver.Direct] More details in error message [#4060](https://github.com/sofa-framework/sofa/pull/4060); - [GitHub] Action to check PR titles [#4081](https://github.com/sofa-framework/sofa/pull/4081); - [MechanicalLoad] Implement buildStiffnessMatrix in SurfacePressureForceField [#4097](https://github.com/sofa-framework/sofa/pull/4097); - [MechanicalLoad] Implement buildStiffnessMatrix for SphereForceField [#4099](https://github.com/sofa-framework/sofa/pull/4099); - [FEM.Elastic] Implement buildStiffnessMatrix for TriangularFEMForceFieldOptim [#4105](https://github.com/sofa-framework/sofa/pull/4105); - [plugins] Add fetchable ShapeMatchingPlugin [#4106](https://github.com/sofa-framework/sofa/pull/4106); - [Constraint.Lagrangian.Correction] Decrease the severity of not finding a file in PrecomputedConstraintCorrection [#4108](https://github.com/sofa-framework/sofa/pull/4108); - [FEM.HyperElastic] Implement buildStiffnessMatrix for StandardTetrahedralFEMForceField [#4110](https://github.com/sofa-framework/sofa/pull/4110); - [MechanicalLoad] Implement buildStiffnessMatrix for TorsionForceField [#4115](https://github.com/sofa-framework/sofa/pull/4115); - [Mass] Add a callback on the lumping data in MMMass [#4128](https://github.com/sofa-framework/sofa/pull/4128); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: use given re-ordered list for unbuilt GS [#4132](https://github.com/sofa-framework/sofa/pull/4132); - [Core] Store default value in a Data [#4133](https://github.com/sofa-framework/sofa/pull/4133); - [all] Use SimulationInitDoneEvent instead of AnimateBeginEvent [#4160](https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:30212,plugin,plugins,30212,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,e factory's getTarget() to operate properly. [#2693]( https://github.com/sofa-framework/sofa/pull/2693 ); - [Component.IO.Mesh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *GeometryAlgorithms [#3034]( https://github.com/sofa-framework/sofa/pull/3034 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [Core] Dynamic control of the computation of the bounding box [#3080]( https://github.com/sofa-framework/sofa/pull/3080 ); - [Core] Fix ObjectFactory::getEntriesFromTarget that returns duplicated names [#2544]( https://github.com/sofa-framework/sofa/pull/2544 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [FEM.elastic] Some optimisation to make FastTetrahedralCorotational even faster [#2877]( https://github.com/sofa-framework/sofa/pull/2877 ); - [GKlib] Portable random number generation [#3072]( https://github.com/sofa-framework/sofa/pull/3072 ); - [GUI.Common] FIX unused variable [#3158]( https://github.com/sofa-framework/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:106069,Portab,Portable,106069,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Portab'],['Portable']
Modifiability,e(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(). if (Qt5Core_FOUND); sofa_find_package(Qt5 COMPONENTS Core Gui Xml OpenGL Widgets REQUIRED); set(QGLViewer_QT_TARGETS Qt5::Core Qt5::Gui Qt5::Xml Qt5::OpenGL Qt5::Widgets); elseif (Qt6Core_FOUND); sofa_find_package(Qt6 COMPONENTS Gui GuiTools Widgets WidgetsTools OpenGLWidgets Xml REQUIRED); set(QGLViewer_QT_TARGETS ${QGLViewer_QT_TARGETS} Qt::Core Qt::Gui Qt::Widgets Qt::OpenGLWidgets Qt::Xml); endif(). set(MOC_HEADER_FILES; camera.h; frame.h; keyFrameInterpolator.h; manipulatedCameraFrame.h; manipulatedFrame.h; qglviewer.h; ); # These header files don't need to be processed by the moc.; set(HEADER_FILES; VRender/AxisAlignedBox.h; VRender/Exporter.h; VRender/NVector3.h; VRender/Optimizer.h; VRender/ParserGL.h; VRender/Primitive.h; VRender/PrimitivePositioning.h; VRender/SortMethod.h; VRender/Types.h; VRender/VRender.h; VRender/Vector2.h; VRender/Vector3.h; VRender/gpc.h; config.h; constraint.h; domUtils.h; mouseGrabber.h; quaternion.h; vec.h; camera.h; frame.h; keyFrameInterpolator.h; manipulatedCameraFrame.h; manipulatedFrame.h; qglviewer.h; ); set(SOURCE_FILES; VRender/BSPSortMethod.cpp; VRender/BackFaceCullingOptimizer.cpp; VRender/EPSExporter.cpp; VRender/Exporter.cpp; VRender/FIGExporter.cpp; VRender/NVector3.cpp; VRender/ParserGL.cpp; VRender/Primitive.cpp; VRender/PrimitivePositioning.cpp; VRender/TopologicalSortMethod.cpp; VRender/VRender.cpp; VRender/Vector2.cpp; VRender/Vector3.cpp; VRender/VisibilityOptimizer.cpp; VRender/gpc.cpp; camera.cpp; constraint.cpp; frame.cpp; keyFrameInterpolator.cpp; manipulatedCameraFrame.cpp; manipulatedFrame.cpp; mouseGrabber.cpp; qglviewer.cpp; quaternion.cpp; saveSnapshot.cpp; vec.cpp; ); set(UI_FILES; ImageInterface.ui; VRenderInterface.ui; ). if (Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt5_wrap_ui(FORM_FILES ${UI_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt:1164,config,config,1164,Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,1,['config'],['config']
Modifiability,"e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso mo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341275,plugin,plugin,341275,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,"e.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81120,plugin,plugins,81120,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"eAnimationLoop; - adding RigidRestJointMapping to compute a joint between a rigid body's current position and its rest position.; - large compliances are considered as null stiffnesses; - Offset default to isMechanical=True; - python quaternion log; - added nlnscg acceleration; - pure python constraints; - .inl for python mappings; - adding Addition[Multi]Mapping; - implementing AssembledMultiMapping::applyDJT; - adding DotProduct[Multi]Mapping (with tests); - adding NormalizationMapping to map a 3d vector to its normalization; - adding ConstantAssembled[Multi]Mapping; - adding SafeDistanceMapping: a distance mapping that becomes a difference mapping for too small distances.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPosi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:355194,plugin,plugin,355194,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"eField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPositions engine. ### Bug Fixes. - [PluginManager] crashed when a plugin was removed; - [SofaCUDA] fix the compilation using SofaCUDA on Windows; - unstable behavior of masks - USE-MASK variable added; - fix DAGNode traversal when a visitor is run from a node with a not up-to-date descendancy; - fix flaws in glText (memory leak and an other bug); - EigenBaseSparseMatrix: fix parallel matrix-vector product; - XML export. - Minor fix; - Sofa helper: leak when drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLViewer; - BoxROI: visual bounding box; - SofaMiscForceField on Windows; - VisualVisitor traversal order; - SphereROI: indices out when multiple spheres; - bug in RestShapeSpringsForceField; - Remove VariationalSymplecticSolver.h from the package in SofaCommon (to fix history); - some static analysis warnings and errors (including memory leaks); - MeshROI: remove unnecessary sqrt; - SphereROI: set centers' size to radii if only one radius is provided; - ARTrack plugin compilation; - bug in MeshNewProximityIntersection involving false positiv",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:355916,Plugin,PluginManager,355916,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin', 'variab']","['PluginManager', 'plugin', 'variable']"
Modifiability,"eForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](h",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:60652,plugin,plugins,60652,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"eMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_lib",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:6541,Config,Config,6541,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"e] Fix BarycentricMapperEngine parse() function [#1516]( https://github.com/sofa-framework/sofa/pull/1516 ); - [SofaGeneralLoader] fix GIDMeshLoader and add example [#1554]( https://github.com/sofa-framework/sofa/pull/1554 ); - [SofaHelper/image] Fix unit tests [#1585]( https://github.com/sofa-framework/sofa/pull/1585 ); - **[SofaHelper]** Add SOFA/bin to SOFA_PLUGIN_PATH [#1718]( https://github.com/sofa-framework/sofa/pull/1718 ); - **[SofaHelper]** Link necessary Boost macro with SofaHelper (for Windows) [#1578]( https://github.com/sofa-framework/sofa/pull/1578 ); - **[SofaKernel]**[SofaGuiQt] Qt viewer with intel drivers [#1690]( https://github.com/sofa-framework/sofa/pull/1690 ); - **[SofaKernel]** Add updateOnTransformChange update callback on MeshLoader. [#1459]( https://github.com/sofa-framework/sofa/pull/1459 ); - **[SofaKernel]** Data file repository now looks into the SOFA install directory [#1656]( https://github.com/sofa-framework/sofa/pull/1656 ); - **[SofaKernel]** Improve check for already registered plugins [#1472]( https://github.com/sofa-framework/sofa/pull/1472 ); - **[SofaKernel]** In DataFileName, the name FILE used in the PathType enum could be ambigous [#1465]( https://github.com/sofa-framework/sofa/pull/1465 ); - **[SofaKernel]** 🐛 Break link when passing a nullptr to setLinkedBase [#1479]( https://github.com/sofa-framework/sofa/pull/1479 ); - **[SofaKernel]**[SofaGeneralRigid] Minor fixes in ArticulatedSystemMapping and JointSpringForceField [#1448]( https://github.com/sofa-framework/sofa/pull/1448 ); - **[SofaKernel]** Implement an update mechanism on component: RequiredPlugin [#1458]( https://github.com/sofa-framework/sofa/pull/1458 ); - **[SofaKernel]** Switch to include_guard() instead of include_guard(GLOBAL) [#1467]( https://github.com/sofa-framework/sofa/pull/1467 ); - [SofaMacros] FIX RELOCATABLE_INSTALL_DIR target property [#1631]( https://github.com/sofa-framework/sofa/pull/1631 ); - [SofaMacros] FIX deprecated macro sofa_generate_p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:222113,plugin,plugins,222113,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,ebug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/s,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8600,Config,Config,8600,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"efactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallb",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:258901,Plugin,Plugins,258901,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,efinition at run time and compilation error [#2634]( https://github.com/sofa-framework/sofa/pull/2634 ); - [SofaCUDA] Ignore CudaTLED-related scene on the CI [#2893]( https://github.com/sofa-framework/sofa/pull/2893 ); - [SofaCUDA] Restore CudaHexahedronFEMForceField [#2535]( https://github.com/sofa-framework/sofa/pull/2535 ); - [SofaCUDA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:116675,plugin,plugin,116675,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"efinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ; - [AnimationLoop] Call super init in FreeMotionAnimationLoop [#3791](https://github.com/sofa-framework/sofa/pull/3791) ; - [Hyperelastic] Reformat files and add override attribute [#3792](https://github.com/sofa-framework/sofa/pull/3792) ; - [Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals() [#3805](https://github.com/sofa-framework/sofa/pull/3805) ; - [Constraint] Change print variable names to be consistent with doc [#3816](https://github.com/sofa-framework/sofa/pull/3816) ; - [Components] rename shadow variable [#3818](https://github.com/sofa-framework/sofa/pull/3818) ; - [All] Remove trivial warnings [#3823](https://github.com/sofa-framework/sofa/pull/3823) ; - [Lagrangian.Model] Missing _API keyword [#3833](https://github.com/sofa-framework/sofa/pull/3833) ; - [All] Remove warnings for v23.06 [#3911](https://github.com/sofa-framework/sofa/pull/3911) . **Plugins / Projects**; - [plugins] rename shadow variable [#3581](https://github.com/sofa-framework/sofa/pull/3581) ; - [SofaCUDA] Clean removed code and add useful one [#3632](https://github.com/sofa-framework/sofa/pull/3632) ; - [GUI.Qt, Multithreading] Fix compilation when SReal=float [#3637](https://github.com/sofa-framework/sofa/pull/3637) ; - [MultiThreading] Remove obsolete documentation [#3667](https://github.com/sofa-framework/sofa/pull/3667) ; - [Multithreading] Fix AnimationLoopParallelScheduler [#3676](https://github.com/sofa-framework/sofa/pull/3676) ; - [SofaCUDA] Remove BeamLinearMapping<Rigid3fTypes,.> [#3684](https://github.com/sofa-framework/sofa/pull/3684) ; - [GUI.Qt] Clean and fix in the ""inspector"" panel [#3713](https://github.com/sofa-framework/sofa/pull/3713) ; - [applications] rename shadow variable [#3738](https://github.com/sofa-framework/sofa/pull/3738) ; - [SofaPhysicsAPI] Remove unreachable code [#3771](https://github.com/sofa-framework/sofa/pull/3771) ; - [SofaCarving] Refresh : update file arc",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:64951,Plugin,Plugins,64951,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin', 'variab']","['Plugins', 'plugins', 'variable']"
Modifiability,"elative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:321792,config,config,321792,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,elper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenGLVisual] Fix unreachable code in VisualManagerSecondaryPass [#2068]( https://github.com/sofa-framework/sofa/pull/2068 ); - [SofaOpenglVisual] Fix typo [#2029]( https://github.com/sofa-framework/sofa/pull/2029 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - **[SofaSimpleFem]** Fix TetrahedronFEMForceField Von Mises stress drawing [#1854]( https://github.com/sofa-framework/sofa/pull/1854,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:189258,config,config,189258,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries(${PROJECT_NAME} PRIVATE Shlwapi); endif(). # Eigen (header only); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). # Link the experimental library if the compiler version is less than gcc-9 o",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:7243,Plugin,PluginManager,7243,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Plugin'],['PluginManager']
Modifiability,"equired(VERSION 3.22); project(SofaHAPI). find_package(SofaUserInteraction REQUIRED); find_package(SofaHaptics REQUIRED). set(SOFAHAPI_MAJOR_VERSION 0); set(SOFAHAPI_MINOR_VERSION 1); set(SOFAHAPI_VERSION ${SOFAHAPI_MAJOR_VERSION}.${SOFAHAPI_MINOR_VERSION}). set(HEADER_FILES; SofaHAPIForceFeedbackEffect.h; SofaHAPIHapticsDevice.h; config.h.in; ). set(SOURCE_FILES; SofaHAPIForceFeedbackEffect.cpp; SofaHAPIHapticsDevice.cpp; initSofaHAPI.cpp; ). if(NOT TARGET H3DUtil); find_package(H3DUtil REQUIRED); if(WIN32); file(GLOB sharedObjects ""${HAPI_DIR}/bin/H3DUtil_*.dll""); foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(H3DUTIL_LIBRARIES H3DUtil); endif(). if(NOT TARGET HAPI); find_package(HAPI REQUIRED); if(WIN32); # Copy HAPI DLLs; file(GLOB sharedObjects ""${HAPI_DIR}/bin/HAPI_*.dll""). foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(HAPI_LIBRARIES HAPI); endif(). if(WIN32); if(CMAKE_CL_64); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin64); else(); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin32); endif(). file(COPY ""${H3D_EXTERNAL_BIN_DIR}/pthreadVC2.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); file(COPY ""${H3D_EXTERNAL_BIN_DIR}/FreeImage.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endif(). set(SOFAHAPI_DEPENDENCY_INCLUDE_DIR ${HAPI_INCLUDE_DIR}; ${H3DUTIL_INCLUDE_DIR}). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaUserInteraction SofaHaptics ${HAPI_LIBRARIES} ${H3DUTIL_LIBRARIES}); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${SOFAHAPI_DEPENDENCY_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAHAPI_VERSION}). ## Install rules for the library and the header; CMake package",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt:1035,CONFIG,CONFIG,1035,applications/plugins/SofaHAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt,1,['CONFIG'],['CONFIG']
Modifiability,er [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Factorize code to remove duplicated struct [#1957]( https://github.com/sofa-framework/sofa/pull/1957 ); - **[SofaSimulationCore]** Move CpuTask class into its own file [#1993]( https://github.com/sofa-framework/sofa/pull/1993 ); - **[SofaSimulationCore]** Simplify repetitive code in BaseMechanicalVisitor [#2125]( https://github.com/sofa-framework/sofa/pull/2125 ); - **[SofaSimulationGraph]** Remove dead-end experiment in SimpleApi.h [#1845]( https://github.com/sofa-framework/sofa/pull/1845 ); - [SofaTopologyMapping] adds ellipse feature to Edge2QuadTopologyMapping [#1861]( https://github.com/sofa-framework/sofa/pull/1861 ). **Plugins / Projects**; - [CGALPlugin] new features [#2124]( https://github.com/sofa-framework/sofa/pull/2124 ). ### Improvements; **Architecture**; - [CMake] Speedup configure step [#1837]( https://github.com/sofa-framework/sofa/pull/1837 ); - [CMake] ADD option to fetch pull-request commits in ExternalProject [#1961]( https://github.com/sofa-framework/sofa/pull/1961 ); - [CMake] ADD option to enable/disable compatibility layer [#2216]( https://github.com/sofa-framework/sofa/pull/2216 ). **Modules**; - **[SofaBaseCollision]** BVH narrow phase [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseCollision]** Introduce brute force broad phase [#2010]( https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollision]** Speedup direct SAP [#1917]( https://github.com/sofa-framework/sofa/pull/1917 ); - **[SofaBaseMechanics_test]** Add TopologicalChanges unit tests for DiagonalMass [#2176]( https://github.com/sofa-framework/sofa/pull/2176 ); - **[SofaBaseTopology]** add intersection methods [#2131]( https://github.com/sofa-framework/sofa/pull/2131 ); - [SofaBoundaryCondition] Add callback in Partial/FixedConstraint [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:176224,config,configure,176224,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configure']
Modifiability,es [#1983]( https://github.com/sofa-framework/sofa/pull/1983 ); - [SofaImplicitOdeSolver] Fix Latex format for doxygen [#2205]( https://github.com/sofa-framework/sofa/pull/2205 ); - **[SofaKernel]** Remove last template parameter in Visitor::for_each/for_each_r [#1689]( https://github.com/sofa-framework/sofa/pull/1689 ); - **[SofaKernel]** Remove some dependencies from SofaHelper to SofaCore [#1686]( https://github.com/sofa-framework/sofa/pull/1686 ); - **[SofaKernel]** Removes the method BaseData::getOwnerClass() [#1890]( https://github.com/sofa-framework/sofa/pull/1890 ); - **[SofaKernel][SofaGui]** Move Boost::program_option and remove Boost::system dependencies [#1848]( https://github.com/sofa-framework/sofa/pull/1848 ); - [SofaMiscCollision] Move back to modules (instead of applications/plugins) [#2127]( https://github.com/sofa-framework/sofa/pull/2127 ); - [SofaMiscMapping] Remove unused global variable [#1956]( https://github.com/sofa-framework/sofa/pull/1956 ); - [SofaNonUniformFem] Remove shadow variable [#1874]( https://github.com/sofa-framework/sofa/pull/1874 ); - **[SofaSimpleFem]** FIX wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from TopologyChangeVisitor.h into .cpp [#1905]( https://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844]( https://github.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163]( https://github.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:204540,variab,variable,204540,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"es/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK_OPTIONS_RELEASE """"). ## Link-time optimization; if(NOT I",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:4172,config,config,4172,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['config'],['config']
Modifiability,es] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github.com/sofa-framework/sofa/pull/4513); - [LinearAlgebra] Refactor sparse matrix product [#4547](https://github.com/sofa-framework/sofa/pull/4547); - [plugins] Remove ExternalBehaviorModel and ManualMapping plugins [#4565](https://github.com/sofa-framework/sofa/pull/4565); - [LinearSystem.Direct] Remove metis dependency [#4588](https://github.com/sofa-framework/sofa/pull/4588); - [ODESolver] Explicit,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:18172,Refactor,Refactoring,18172,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactoring']
Modifiability,esh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *GeometryAlgorithms [#3034]( https://github.com/sofa-framework/sofa/pull/3034 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [Core] Dynamic control of the computation of the bounding box [#3080]( https://github.com/sofa-framework/sofa/pull/3080 ); - [Core] Fix ObjectFactory::getEntriesFromTarget that returns duplicated names [#2544]( https://github.com/sofa-framework/sofa/pull/2544 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [FEM.elastic] Some optimisation to make FastTetrahedralCorotational even faster [#2877]( https://github.com/sofa-framework/sofa/pull/2877 ); - [GKlib] Portable random number generation [#3072]( https://github.com/sofa-framework/sofa/pull/3072 ); - [GUI.Common] FIX unused variable [#3158]( https://github.com/sofa-framework/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:106190,variab,variable,106190,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"esponds to the number of elapsed time steps when the file is exported. Depending on the Data ""exportEveryNumberOfSteps"", the matrix can be export only at specified number of time steps. #### Supported File Format. GlobalSystemMatrixExporter supports the following file formats:; * **txt**: exports a Python-like list of lists, containing all the matrix values including the zeros.; It uses the `operator<<` in `BaseMatrix`.; * **csv**: exports a simple comma-separated values file, containing all the matrix values including the zeros.; * **jpg**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixExporter/>; ```. A use case is available in the examples folder. ### GlobalSystemMatrixImage. GlobalSystemMatrixImage is a component to visualize the matrix of a linear system in a; Qt widget. #### Link to Linear Solver. GlobalSystemMatrixImage must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixImage linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixImage/>; ```. A use case is available in the examp",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:1695,inherit,inheriting,1695,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['inherit'],['inheriting']
Modifiability,"esselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovement",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48367,refactor,refactoring,48367,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactoring']
Modifiability,"ethod (FEM), with an emphasis on medical simulation and robotics. ; It is mainly intended for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ##",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2297,plugin,plugin,2297,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,2,"['coupling', 'plugin']","['coupling', 'plugin']"
Modifiability,"ets [#3200](https://github.com/sofa-framework/sofa/pull/3200) ; - [Project] Start v22.12 dev phase [#3218](https://github.com/sofa-framework/sofa/pull/3218) ; - [SofaImplicitField] Fix CMake for new NG architecture [#3223](https://github.com/sofa-framework/sofa/pull/3223); - [SofaValidation] is a plugin, not a collection [#3296](https://github.com/sofa-framework/sofa/pull/3296) ; - [SofaSimpleGUI] Without compatibility layer [#3301](https://github.com/sofa-framework/sofa/pull/3301) ; - [ExternalBehaviorModel] Without compatibility layer [#3302](https://github.com/sofa-framework/sofa/pull/3302) ; - [SofaCarving] Some cleaning in carvingManager to use link instead of string and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:90517,Flexible,Flexible,90517,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,etup Constraint [#2790]( https://github.com/sofa-framework/sofa/pull/2790 ); - [SofaNG] Setup Diffusion [#2753]( https://github.com/sofa-framework/sofa/pull/2753 ); - [SofaNG] Setup Engine [#2812]( https://github.com/sofa-framework/sofa/pull/2812 ); - [SofaNG] Setup GUI [#2895]( https://github.com/sofa-framework/sofa/pull/2895 ); - [SofaNG] Setup IO [#2582]( https://github.com/sofa-framework/sofa/pull/2582 ); - [SofaNG] Setup LinearSolver [#2717]( https://github.com/sofa-framework/sofa/pull/2717 ); - [SofaNG] Setup Mapping [#2635]( https://github.com/sofa-framework/sofa/pull/2635 ); - [SofaNG] Setup Mass [#2752]( https://github.com/sofa-framework/sofa/pull/2752 ); - [SofaNG] Setup MechanicalLoad [#2783]( https://github.com/sofa-framework/sofa/pull/2783 ); - [SofaNG] Setup SceneUtility [#2605]( https://github.com/sofa-framework/sofa/pull/2605 ); - [SofaNG] Setup Setting and Controller [#2843]( https://github.com/sofa-framework/sofa/pull/2843 ); - [SofaNG] Setup Sofa.GL (as a plugin) [#2709]( https://github.com/sofa-framework/sofa/pull/2709 ); - [SofaNG] Setup SolidMechanics [#2759]( https://github.com/sofa-framework/sofa/pull/2759 ); - [SofaNG] Setup StateContainer [#2766]( https://github.com/sofa-framework/sofa/pull/2766 ); - [SofaNG] Setup Topology [#2612]( https://github.com/sofa-framework/sofa/pull/2612 ); - [SofaNG] Setup Visual [#2679]( https://github.com/sofa-framework/sofa/pull/2679 ); - [SofaNG] Setup cmake and add ODESolver [#2571]( https://github.com/sofa-framework/sofa/pull/2571 ). **Modules**; - [Sofa] Compilation without Compatibility mode [#2975]( https://github.com/sofa-framework/sofa/pull/2975 ); - [Component.Compat] Remove wrong mappings in compat layer [#2705]( https://github.com/sofa-framework/sofa/pull/2705 ); - [S.C.Engine.Generate] Convert and move MeshTetraStuffing as an engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:93588,plugin,plugin,93588,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ework/sofa/pull/1830 ); - [SofaSphFluid] Fix ParticleSink init and refresh all examples. [#2026]( https://github.com/sofa-framework/sofa/pull/2026 ); - [Tutorials] Resurrect tutorials projects [#2024]( https://github.com/sofa-framework/sofa/pull/2024 ); - [VolumetricRendering] Fix compilation due to removal of params [#1869]( https://github.com/sofa-framework/sofa/pull/1869 ); - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ); - [examples] FIX scene name for Regression_test [#1881]( https://github.com/sofa-framework/sofa/pull/1881 ); - [examples] Fix or disable scene tests [#1919]( https://github.com/sofa-framework/sofa/pull/1919 ); - [examples] Fix warnings in Pendulum tutorial [#2055]( https://github.com/sofa-framework/sofa/pull/2055 ); - [examples] Scenes with build_lcp [#2110]( https://github.com/sofa-framework/sofa/pull/2110 ); - [image] Fix wrong condition [#2083]( https://github.com/sofa-framework/sofa/pull/2083 ); - [plugins] Disable old python2 examples [#2025]( https://github.com/sofa-framework/sofa/pull/2025 ); - [runSofa/Modules] Fix various problems with Sofa.GL [#1743]( https://github.com/sofa-framework/sofa/pull/1743 ). **Examples / Scenes**; - [scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Architecture**; - [CMake] CLEAN old metapackage usage [#1883]( https://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprecated things (MSVC mainly) [#2217]( https://github.com/sofa-framework/sofa/pull/2217 ). **Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:194761,plugin,plugins,194761,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,ework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); - [All] Merge TopologySubsetData and TopologySparseData [#2114]( https://github.com/sofa-framework/sofa/pull/2114 ); - [All] Merge branch topologyChanges_PoC introducing topological changes callbacks [#2228]( https://github.com/sofa-framework/sofa/pull/2228 ); - [All] Remove ForceMask [#2316]( https://github.com/sofa-framework/sofa/pull/2316 ); - [All] Update collision response names [#2522]( https://github.com/sofa-framework/sofa/pull/2522 ); - [Sofa.BaseTopology] Remove 1D template for 2D/3D primitives in topology algorithms [#2291]( https://github.com/sofa-framework/sofa/pull/2291 ); - [Sofa.Core] Deprecate officially the usage of SofaOStream,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:135696,Plugin,Plugins,135696,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,f init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](https://github.com/sofa-framework/sofa/pull/3234) ; - [Sofa.DefaultType] Constexpr VecTypes and RigidTypes [#3237](h,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:83191,variab,variable,83191,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,f input springs [#1093]( https://github.com/sofa-framework/sofa/pull/1093 ); - **[SofaKernel]** Change several AdvancedTimer logs for a better tracking [#1094]( https://github.com/sofa-framework/sofa/pull/1094 ); - **[SofaKernel]** Consistent SofaFramework modules [#1200]( https://github.com/sofa-framework/sofa/pull/1200 ); - **[SofaKernel]** Make componentState a real data field [#1168]( https://github.com/sofa-framework/sofa/pull/1168 ); - [SofaMiscForceField] Use doUpdateInternal API in MeshMatrixMass [#1151]( https://github.com/sofa-framework/sofa/pull/1151 ); - [SofaQtQuick] Pass extra command-line arguments for python scenes in a more high-level function call [#992]( https://github.com/sofa-framework/sofa/pull/992 ); - [SofaSphFluid] Add sprite-based point render [#1194]( https://github.com/sofa-framework/sofa/pull/1194 ); - [SofaSphFluid] Update rendering & other [#1215]( https://github.com/sofa-framework/sofa/pull/1215 ). **Plugins / Projects**; - [runSofa] Fix DataWidget display Speicherleck and long loading [#1181]( https://github.com/sofa-framework/sofa/pull/1181 ). **Examples / Scenes**; - [Examples] Add some mesh and PR1000 demo scene [#1112]( https://github.com/sofa-framework/sofa/pull/1112 ). ### Bug Fixes. **Architecture**; - [CMake]**[SofaFramework]** Remove FFMPEG_exec target from the dependencies of SofaFramework [#1177]( https://github.com/sofa-framework/sofa/pull/1177 ); - [CMake] FIX Eigen finding [#1175]( https://github.com/sofa-framework/sofa/pull/1175 ); - [CMake] FIX unknown compiler option on VS2015 [#1192]( https://github.com/sofa-framework/sofa/pull/1192 ); - [SofaMacros] FIX default module version [#1123]( https://github.com/sofa-framework/sofa/pull/1123 ); - [SofaMacros] FIX sofa_set_install_relocatable escaped chars [#1154]( https://github.com/sofa-framework/sofa/pull/1154 ). **Modules**; - [All] Fix warnings [#1206]( https://github.com/sofa-framework/sofa/pull/1206 ); - [All] Fix warnings [#1167]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:247812,Plugin,Plugins,247812,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"fa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:253260,plugin,plugin,253260,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"fa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix alia",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:310204,Plugin,Pluginizing,310204,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,fa/pull/1953 ); - **[SofaHelper]** Moves operator>> specialisation for int from set.h to set.cpp [#1902]( https://github.com/sofa-framework/sofa/pull/1902 ); - **[SofaHelper]** Remove unused UnitTest class + clean FnDispatcher includes [#1983]( https://github.com/sofa-framework/sofa/pull/1983 ); - [SofaImplicitOdeSolver] Fix Latex format for doxygen [#2205]( https://github.com/sofa-framework/sofa/pull/2205 ); - **[SofaKernel]** Remove last template parameter in Visitor::for_each/for_each_r [#1689]( https://github.com/sofa-framework/sofa/pull/1689 ); - **[SofaKernel]** Remove some dependencies from SofaHelper to SofaCore [#1686]( https://github.com/sofa-framework/sofa/pull/1686 ); - **[SofaKernel]** Removes the method BaseData::getOwnerClass() [#1890]( https://github.com/sofa-framework/sofa/pull/1890 ); - **[SofaKernel][SofaGui]** Move Boost::program_option and remove Boost::system dependencies [#1848]( https://github.com/sofa-framework/sofa/pull/1848 ); - [SofaMiscCollision] Move back to modules (instead of applications/plugins) [#2127]( https://github.com/sofa-framework/sofa/pull/2127 ); - [SofaMiscMapping] Remove unused global variable [#1956]( https://github.com/sofa-framework/sofa/pull/1956 ); - [SofaNonUniformFem] Remove shadow variable [#1874]( https://github.com/sofa-framework/sofa/pull/1874 ); - **[SofaSimpleFem]** FIX wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from TopologyChangeVisitor.h into .cpp [#1905]( https://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:204323,plugin,plugins,204323,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,fa/pull/3182 ); - [Core] Dynamic control of the computation of the bounding box [#3080]( https://github.com/sofa-framework/sofa/pull/3080 ); - [Core] Fix ObjectFactory::getEntriesFromTarget that returns duplicated names [#2544]( https://github.com/sofa-framework/sofa/pull/2544 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [FEM.elastic] Some optimisation to make FastTetrahedralCorotational even faster [#2877]( https://github.com/sofa-framework/sofa/pull/2877 ); - [GKlib] Portable random number generation [#3072]( https://github.com/sofa-framework/sofa/pull/3072 ); - [GUI.Common] FIX unused variable [#3158]( https://github.com/sofa-framework/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine fil,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:106511,plugin,plugin,106511,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"faBaseTopology]** correct the logic issue in computeEdgeSegmentIntersection [#2184]( https://github.com/sofa-framework/sofa/pull/2184 ); - [SofaConstraint] Fix symbol export of BilateralInteractionConstraint on RigidTypes [#2031]( https://github.com/sofa-framework/sofa/pull/2031 ); - **[SofaCore]** FIX Issue #1865 [#1866]( https://github.com/sofa-framework/sofa/pull/1866 ); - **[SofaCore]** FIX buffer overflow when using AddressSanitizer [#2121]( https://github.com/sofa-framework/sofa/pull/2121 ); - **[SofaCore]** Fix explicit instantiations with MultiMapping [#1982]( https://github.com/sofa-framework/sofa/pull/1982 ); - **[SofaCore]** Remove duplicated explicit instanciation [#1981]( https://github.com/sofa-framework/sofa/pull/1981 ); - **[SofaDefaultType][SofaCUDA]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaDeformable] Fix test in StiffSpringForceField doUpdateInternal [#1979]( https://github.com/sofa-framework/sofa/pull/1979 ); - **[SofaFramework]** Fix config files for Sofa.GL, for out-of-tree [#1911]( https://github.com/sofa-framework/sofa/pull/1911 ); - **[SofaFramework]** Put back Sofa.GL in Framework [#1920]( https://github.com/sofa-framework/sofa/pull/1920 ); - [SofaGeneralEngine] fixes ExtrudeQuadsAndGenerateHexas [#1673]( https://github.com/sofa-framework/sofa/pull/1673 ); - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGraphComponent] Clean format of RequiredPlugin message [#2111]( https://github.com/sofa-framework/sofa/pull/2111 ); - [SofaGraphComponent] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/sofa-framework/sofa/pull/2103 ); - [SofaGraphComponent] Fix message for RequiredPlugin [#2093]( https://github.com/sofa-framework/sofa/pull/2093 ); - [SofaGuiCommon] FIX build with SOFA_NO_OPENGL [#1724]( https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:184678,config,config,184678,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,faMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/2328 ); - [examples] Make scene resolution independent + doc [#2361]( https://github.com/sofa-framework/sofa/pu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162817,plugin,plugin,162817,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"fa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://github.com/sofa-framework/sofa/pull/2210 ); - [All] Remove use of compatibility layer [#2179]( https://github.com/sofa-framework/sofa/pull/2179 ); - **[Sofa.Core]** Move eq,peq utilities functions to a standalone file [#2137]( https://github.com/sofa-framework/sofa/pull/2137 ); - **[Sofa.GL]** Relocate the module (again) + clarify module vs plugin definitions [#1941]( https://github.com/sofa-framewo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196996,variab,variable,196996,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"fa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin SofaSimpleGUI SofaSimpleGUI) # SofaSimpleGUI plugin can't work without OPENGL; sofa_add_subdirectory(plugin VolumetricRendering VolumetricRendering) # VolumetricRendering plugin can't work without OPENGL; else(); message(""Sofa.GL not found; disabling SofaSimpleGUI and VolumetricRendering plugins""); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:3331,plugin,plugin,3331,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,11,['plugin'],"['plugin', 'plugins']"
Modifiability,"few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( https://github.com/sofa-framework/sofa/pull/2714 ); - [SofaRigid][SofaGeneralSimpleFem] Fix typos [#2947]( https://github.com/sofa-framework/sofa/pull/2947 ); - [SofaSimpleFEM_test] Add tests on Tetrahedron, CorotationalTetrahedral and FastTetrahedral FEM ForceField [#2842]( https://github.com/sofa-framework/sofa/pull/2842 ); - [SofaSimpleFem] Prefer usage of accessor in HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:128327,plugin,plugin,128327,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,for obj export [#1789]( https://github.com/sofa-framework/sofa/pull/1789 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper: adds template [#1703]( https://github.com/sofa-framework/sofa/pull/1703 ); - [SofaGeneralLoader] adds translation and rotation to ReadState [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com/sofa-framework/sofa/pull/1756 ); - [SofaGuiQt] Tooltips [#2139]( https://github.com/sofa-framework/sofa/pull/2139 ); - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** Optimize use of map_ptr_stable_compare [#2105]( https://github.com/sofa-framework/sofa/pull/2105 ); - **[SofaHelper][SofaPython]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ); - [SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver [#2050]( https://github.com/sofa-framework/sofa/pull/2050 ); - **[SofaKernel]** Write template list in error message [#2207]( https://github.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been init,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:178977,Plugin,PluginManager,178977,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifier on notify methods in Node [#1169]( https://github.com/sofa-framework/sofa/pull/1169 ); - **[SofaKernel]** Remove deprecated SOFA_DEBUG macro [#1232]( https://github.com/sofa-framework/sofa/pull/1232 ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://github.com/sofa-framework/sofa/pull/1201 ); - [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [SofaTest] CLEAN msg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and cle,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:255871,plugin,plugin,255871,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data defined by the file loaded [#1660]( https://github.com/sofa-framework/sofa/pull/1660 ); - [SofaQtGui] Restore GraphWidget for Momentum and Energy using QtCharts instead of Qwt [#1508]( https://github.com/sofa-framework/sofa/pull/1508 ). **Plugins / Projects**; - [Compliant] Add WinchMultiMapping and ContactMultiMapping [#1557]( https://github.com/sofa-framework/sofa/pull/1557 ). ### Bug Fixes; **Architecture**; - [CMake] FIX non-existent target with sofa_add_plugin [#1584]( https://github.com/sofa-framework/sofa/pull/1584 ); - [CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS [#1452]( https://github.com/sofa-framework/sofa/pull/1452 ). **Extlibs**; - [extlibs/gtest] Fix the broken sofa_create_package_with_targets in gtest [#1457]( https://github.com/sofa-framework/sofa/pull/1457 ). **Modules**; - [All] issofa_bugfix: cleans and fixes [#218]( https://github.com/sofa-framework/sofa/pull/218 ); - [SofaBaseLinearSolver] Fix logging info with SPARSEMATRIX_VERBOSE [#1715]( https://github.com/sofa-framework/sofa/pull/1715 ); - [SofaBaseMechanics] Use d_showColor for indices instead of arbitrary white [#1511]( https://github.com/sofa-framework/sofa/pull/1511 ); - [SofaBaseMechanics] 🐛 FIX draw function in UniformMass [#1480]( https://github.com/sofa-framework/sofa/pull/1480 ); - [SofaCarving] Fix method doCarve should be called at AnimateEndEvent [#1532]( https://github.com/sofa-framework/sofa/pull/1532 ); - **[SofaCore]** FIX const correctness in DataTracker [#1488]( https://github.com/sofa-framework/sofa/pull/1488 ); - **,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:219559,config,configure,219559,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configure']
Modifiability,"framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at start-up time [#402]( https://github.com/sofa-framework/sofa/pull/402 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#3",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:309054,Plugin,Plugins,309054,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39888,Config,Config,39888,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Config', 'config']","['Config', 'config']"
Modifiability,framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framewor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:316940,Plugin,Plugins,316940,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:317590,Flexible,Flexible,317590,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Flexible', 'Refactor']","['Flexible', 'Refactor']"
Modifiability,g [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://github.com/sofa-framework/sofa/pull/1317 ); - [SofaOpenCL] Make it work with 20.06 [#1361]( https://github.com/sofa-framework/sofa/pull/1361 ); - [SofaPython] Restrict the plugin and its dependers to C++11 [#1284]( https://github.com/sofa-framework/sofa/pull/1284 ). **Examples / Scenes**; - [examples] Fix SurfacePressureForceField example [#1273]( https://github.com/sofa-framework/sofa/pull/1273 ); - [examples] Fix caduceus [#1392]( https://github.com/sofa-framework/sofa/pull/1392 ); - [examples] Update the scene StandardTetrahedralFEMForceField.scn [#1064]( https://github.com/sofa-framework/sofa/pull/1064 ). ### Cleanings. **Architecture**. **Modules**; - [All] Clean namespace for some classes [#1422]( https://github.com/sofa-framework/sofa/pull/1422 ); - [All] Fix warnings due to visibility attribute [#1421]( https://github.com/sofa-framework/sofa/pull/1421 ); - [All] Clean due to doc [#1398]( https://github.com/sofa-framework/sofa/pull/1398 ); - [All] Clean warnings [#1376]( https://github.com/sofa-framework/sofa/pull/1376 ); - [All] Fix minor warnings [#1388]( https://github.com/sofa-framework/sofa/pull/1388 ); - [All] Fix warnings generated due t,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:238049,plugin,plugin,238049,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ge all modules of SofaFramework [#1990]( https://github.com/sofa-framework/sofa/pull/1990 ); - **[SofaKernel]** Port Mat from Defaulttype to Sofa.Type [#1775]( https://github.com/sofa-framework/sofa/pull/1775 ); - **[SofaKernel]** Port Quat from Defaulttype to Sofa.Type [#1790]( https://github.com/sofa-framework/sofa/pull/1790 ); - **[SofaKernel]** Port Vec from Defaulttype to Sofa.Type (bis) [#1734]( https://github.com/sofa-framework/sofa/pull/1734 ); - **[SofaKernel]** Port a bunch of types from Helper and Defaulttype to Sofa.Type [#1818]( https://github.com/sofa-framework/sofa/pull/1818 ); - **[SofaKernel]** Port vector (and its siblings) from Helper to Sofa.Type [#1893]( https://github.com/sofa-framework/sofa/pull/1893 ); - **[SofaKernel]** Regroup all compatibility files in a Sofa.Compat module [#1944]( https://github.com/sofa-framework/sofa/pull/1944 ); - **[SofaSimulation]** Package SofaSimulation [#1694]( https://github.com/sofa-framework/sofa/pull/1694 ); - [SofaUserInteraction] Refactor PickParticlePerformer [#2084]( https://github.com/sofa-framework/sofa/pull/2084 ). **Plugins / Projects**; - [SofaPython] Move python-related files to SofaPython [#1887]( https://github.com/sofa-framework/sofa/pull/1887 ); - [SofaPython] Regroup dependencies [#1875]( https://github.com/sofa-framework/sofa/pull/1875 ). ### Breaking; **Modules**; - [All] Add forward declaration and opaque API for ExecParams, MechanicalParams, VisualParams and ConstraintParams [#1794]( https://github.com/sofa-framework/sofa/pull/1794 ); - [All] Remove SOFA_NO_OPENGL (not the cmake option) [#1888]( https://github.com/sofa-framework/sofa/pull/1888 ); - [All] Removes search & searchAll from BaseObject [#1842]( https://github.com/sofa-framework/sofa/pull/1842 ); - [All] ADD forward declaration headers + remove unneeded includes [#1764]( https://github.com/sofa-framework/sofa/pull/1764 ); - [All] Adds forward declaration and opaque api for the base types (the one used in Node.h) [#1765]( https://gi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:169894,Refactor,Refactor,169894,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"geBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:320210,plugin,plugin,320210,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"gin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); -",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:310089,Plugin,Pluginizing,310089,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,github.com/sofa-framework/sofa/pull/4220); - [all] Add the folder sofa-launcher to the resources component [#4245](https://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse product [#4256](https://github.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advanced timer [#4259](https://github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:32982,plugin,plugins,32982,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"hen drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLViewer; - BoxROI: visual bounding box; - SofaMiscForceField on Windows; - VisualVisitor traversal order; - SphereROI: indices out when multiple spheres; - bug in RestShapeSpringsForceField; - Remove VariationalSymplecticSolver.h from the package in SofaCommon (to fix history); - some static analysis warnings and errors (including memory leaks); - MeshROI: remove unnecessary sqrt; - SphereROI: set centers' size to radii if only one radius is provided; - ARTrack plugin compilation; - bug in MeshNewProximityIntersection involving false positive detection with triangles containing an angle > 90°; - path to images for html description pop up window; - OglModel hasTexture; - DataDisplay: normal computation; - DataDisplay: crash when the component was dynamically added to a scene; - visual bug with OglModel when putOnlyTexCoords is enabled with no texture; - Order Independent Transparency for old graphics card; - sofa::gui::glut applying changes in BaseCamera; - computation of the bounding box in PlaneForceField; - SofaHelper: Fix bug with FBO (causing some weird things when using textures); - corrected the visualization of heterogeneous tetrahedra; - SofaOpenGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat da",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:357027,plugin,plugin,357027,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugin']
Modifiability,hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://github.com/sofa-framework/sofa/pull/4062); - [LinearAlgebra] Fix matrix sizes when filtering [#4063](https://github.com/sofa-framework/sofa/pull/4063); - [MechanicalLoad] Fix compilation further to new RemovedData constructor [#4094](https://github.com/sofa-framework/sofa/pull/4094); - [MechanicalLoad] Fix plane force field buildStiffnessMatrix [#4098](https://github.com/sofa-framework/sofa/pull/4098); - [GUI.Qt] Fix crash if filename is null [#4102](https://github.com/sofa-framework/sofa/pull/4102); - [Tutorials] Update and fix oneTetrahedron tutorial [#4103](https://github.com/sofa-framework/sofa/pull/4103); - [Helper] Fix wrong function called when writing jpg file [#4111](https://github.com/sofa-framework/sofa/pull/4111); - [test] Make quaternion test deterministic and portable [#4126](https://github.com/sofa-framework/sofa/pull/4126); - [Constraint.Lagrangian.Solver] Fix default value for computeConstraintForces Data [#4129](https://github.com/sofa-framework/sofa/pull/4129); - [Sofa.GL] Fix doDrawVisual for OglLabel [#4142](https://github.com/sofa-framework/sofa/pull/4142); - [SofaSphFluid] Fix: scenes warnings and failing examples [#4149](https://github.com/sofa-framework/sofa/pull/4149); - [SofaSphFluid] Fix: internal draw method not restoring default parameters [#4150](https://github.com/sofa-framework/sofa/pull/4150); - [Mass] Fix UniformMass vertexMass value should not be set to 0 if nbr of points reach 0 [#4151](https://github.com/sofa-framework/sofa/pull/4151); - [Topology.Grid] Fix SparseGridTopology and SparseGridRamificationTopology crash at init if mesh file is not found [#4164](https://github.com/sofa-framework/sofa/pull/4164); - [Topology] Rename Edge::pointBaryCoefs into Edge::getBarycentricCoordinates [#4165],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:35554,portab,portable,35554,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['portab'],['portable']
Modifiability,"hod returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:5321,variab,variable,5321,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['variab'],['variable']
Modifiability,https://github.com/sofa-framework/sofa/pull/1569 ); - **[SofaKernel]** Refactor the FileRepository constructors [#1610]( https://github.com/sofa-framework/sofa/pull/1610 ); - **[SofaKernel]** Remove core::Plugin/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ); - [Geomagic] Update demo scenes to use direct solvers. [#1533]( https://github.com/sofa-framework/sofa/pull/1533 ); - [InvertibleFVM] Externalize the plugin [#1443]( https://github.com/sofa-framework/sofa/pull/1443 ). ____________________________________________________________. ## [v20.06]( https://github.com/sofa-framework/sofa/tree/v20.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:228622,Plugin,Plugins,228622,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'plugins']"
Modifiability,"hub.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://github.com/sofa-framework/sofa/pull/2210 ); - [All] Remove use of compatibility layer [#2179]( https://github.com/sofa-framework/sofa/pull/2179 ); - **[Sofa.Core]** Move eq,peq utilities functions to a standalone file [#2137]( https://github.com/sofa-framework/sofa/pull/2137 ); - **[Sofa.GL]** Relocate the module (again) + clarify module vs plugin definitions [#1941]( https://github.com/sofa-framework/sofa/pull/1941 ); - **[Sofa.GL]** Remove warnings from deprecated headers [#2045]( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://githu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:198140,variab,variable,198140,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,hub.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194]( https://github.com/sofa-framework/sofa/pull/2194 ); - **[SofaSimulation]** Convert tests to Sofa.Testing [#2154]( https://github.com/sofa-framework/sofa/pull/2154 ); - [SofaSparseSolver] Clean useless dependencies [#2012]( https://github.com/sofa-framework/sofa/pull/2012 ); - [SofaUserInteraction] Minor cleaning of RayTraceDetection [#2009]( https://github.com/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( https://github.com/sofa-framework/sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:206398,Plugin,Plugins,206398,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,hub.com/sofa-framework/sofa/pull/2215 ); - [SofaMiscTopology] Add a component TopologyBoundingTrasher to remove mesh going outside from scene bounding box [#2288]( https://github.com/sofa-framework/sofa/pull/2288 ); - [SofaSimpleFem] Add callback on VonMises in TetrahedronFEMForceField [#2407]( https://github.com/sofa-framework/sofa/pull/2407 ); - [SofaSimpleFem] Hexa FEM optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [CMake] FIX Threads dependency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:143782,Plugin,Plugins,143782,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,hub.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.HyperElastic] Reformat and clean TetrahedronHyperelasticityFEMForceField [#3141]( https://github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [#2684]( https://github.com/sofa-framework/sofa/pull/2684 ); - [Geomagic] Clean scene and code warnings + minor changes [#2846]( https://github.com/sofa-framework/sofa/pull/2846 ); - [Geomagic] Fix CMake and replace includes from legacy header to new architecture [#3076]( https://github.com/sofa-framework/sofa/pull/3076 ); - [SensableEmulation][CMake] Clean Boost dep [#3067]( https://github.com/sofa-framework/sofa/pull/3067 ); - [SofaAssimp] fix shadow variable [#2844]( https://github.com/sofa-framework/sofa/pull/2844 ); - [SofaCUDA] Fix CMake to compile plugin without legacy headers option [#3077]( https://github.com/sofa-framework/sofa/pull/3077 ); - [SofaCUDA][SofaSphFluid] Remove some getTemplateName deprecated methods [#3144]( https://github.com/sofa-framework/sofa/pull/3144 ); - [SofaCUDA] Better readme [#2597]( https://github.com/sofa-framework/sofa/pull/2597 ); - [SofaCUDA] Clean Cuda Collision models [#2673]( https://github.com/sofa-fram,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:130345,Plugin,Plugins,130345,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,"hub.com/sofa-framework/sofa/pull/3145 ); - [All] Few fixes to allow compilation with MSVC/Clang-cl [#2563]( https://github.com/sofa-framework/sofa/pull/2563 ); - [All] Minor improvements [#2667]( https://github.com/sofa-framework/sofa/pull/2667 ); - [All] Update Data comments [#2719]( https://github.com/sofa-framework/sofa/pull/2719 ); - [All] Remove few trivial compilation warning & commented code. [#3044]( https://github.com/sofa-framework/sofa/pull/3044 ); - [All] Update the code to remove some deprecation warnings [#2529]( https://github.com/sofa-framework/sofa/pull/2529 ); - [Collision.Geometry] Remove unnecessary *_API in template class definition [#3022]( https://github.com/sofa-framework/sofa/pull/3022 ); - [Collision.Response.Mapper] Missing override keyword [#3083]( https://github.com/sofa-framework/sofa/pull/3083 ); - [Component] All modules have a version [#2948]( https://github.com/sofa-framework/sofa/pull/2948 ); - [Components.Engine.Transform] remove shadow variable in ROIValueMapper [#2987]( https://github.com/sofa-framework/sofa/pull/2987 ); - [Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS [#3172]( https://github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal [#2922]( https://github.com/sofa-framework/sofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:121135,variab,variable,121135,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,hub.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advanced timer [#4259](https://github.com/sofa-framework/sofa/pull/4259); - [LinearSystem] Speedup computation of Jacobian matrices [#4317](https://github.com/sofa-framework/sofa/pull/4317); - [FEM.Elastic] Reference instead of a copy in TriangularFEMForceField [#4332](https://github.com/sofa-framework/sofa/pull/4332); - [All] Add GIT_REF option for external plugins [#4448](https://github.com/sofa-framework/sofa/pull/4448); - [Testing] Externalize (find_package() or fetch) googletest/gtest [#4471](https://github.com/sofa-framework/sofa/pull/4471). ### Bug Fixes; - [test] Fix unit test on RestShapeSpringsForceField [#3864](https://github.com/sofa-framework/sofa/pull/3864); - [test] Fix failing unit test [#3876](https://github.com/sofa-framework/sofa/pull/3876); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: Fix when mu=0 (no friction) [#3905](https://github.com/sofa-framework/sofa/pull/3905); - [applications] remove unused variable [#3920](https://github.com/sofa-framework/sofa/pull/3920); - [Projective] Fix and test FixedPlaneConstraint [#3925](https://github.com/sofa-framework/sofa/pull/3925); - [MechanicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Model,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:33564,variab,variable,33564,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"i.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/sofa/pull/2458 ); - [SofaGuiQt] Revert #2458 [#2479]( https://github.com/sofa-framework/sofa/pull/2479 ); - [SofaGuiQt] Some fixes for Qt6 [#2490]( https://github.com/sofa-framework/sofa/pull/2490 ); - [SofaGuiQt] Switch name and class name for slaves [#2371]( https://github.com/sofa-framework/sofa/pull/2371 ); - [SofaKernel] Remove ambiguous constructors from type::vector [#2270]( https://github.com/sofa-framework/sofa/pull/2270 ); - [SofaKernel] Remove the getXXXAccessor in accessor.h to keep the one in Data.h [#2278]( https://github.com/sofa-framework/sofa/pull/2278 ); - [SofaMeshCollision, SofaConstraint] Remove LMDNewProximityIntersection [#2272]( https://github.com/sofa-framework/sofa/pull/2272 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ); - [SofaMeshCollision] Fix compilation without Compatiblity layer [#2227]( https://github.com/sofa-framework/sofa/pull/2227 ); - [SofaMiscCollision] Fix the BarycentricStickContact response [#2509]( https://github.com/sofa-framework/sofa/pull/2509 ); - [SofaMiscForceField] Fix MeshMatrixMass init and topologicalChanges [#2193]( https://github.com/sofa-framework/sofa/pull/2193 ); - [SofaMiscForceField] Fix addForce function in MeshMatrixMass [#2305]( https://github.com/sofa-framework/sofa/pull/2305 ); - [SofaSimpleFem] Check topology in draw [#2478]( https://github.com/sofa-framework/sofa/pull/2478 ); - [SofaSimpleFem] Fix row/col indices in hexa fem for bloc-based matrices [#2277]( https://github.com/sofa-framework/sofa/pull/2277 ); - [SofaSimpleFem] Set valid component state [#2499]( https://github.com/sofa-framework/sofa/pull/2499 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMappin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:151170,config,config,151170,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"icient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2502,plugin,plugins,2502,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['plugin'],['plugins']
Modifiability,"ilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234026,Plugin,PluginManager,234026,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,"ile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:310319,Plugin,Pluginizing,310319,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,ils [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810 ); - [examples] Move PointSplatModel and SpatialGridPointModel scenes into Sph plugin [#2847]( https://github.com/sofa-framework/sofa/pull/2847 ); - [examples] FIX scenes with old CollisionGroupManager component [#3198]( https://github.com/sofa-framework/sofa/pull/3198 ). **Scripts / Tools**; - [tools] Correction of the import of the queue library [#2572]( https://github.com/sofa-framework/sofa/pull/2572 ). ### Cleanings. **Project**; - [GitHub] Update Changelog and version [#2546]( https://github.com/sofa-framework/sofa/pull/2546 ); - [Git] Clean project files [#2884]( https://github.com/sofa-framework/sofa/pull/2884 ); - [Project] Update README [#2905]( https://github.com/sofa-framework/sofa/pull/2905 ); - [Readme] Delete references to removed/moved directories in licence paragraph [#2547]( https://github.com/sofa-framework/sofa/pull/2547 ); - [doc] Remove old doc materials [#2889]( https://github,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:118211,plugin,plugins,118211,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"ils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1537,plugin,plugin,1537,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"imulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to the GNU Lesser General Public License as published by the Free Software; Foundation; either version 2.1 of the License, or (at your option) any later ; version. GPL refers to the GNU General Public License as published by the Fr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2745,plugin,plugins,2745,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['plugin'],['plugins']
Modifiability,"in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation directly from the collada file.; The SkeletalMotionProjectiveConstraint automatically interpolates between animation frames, play with the animation time step to slown down or speed up the animation. As you can see on the other example below, the woman's hair does not fit her head very well because its coordinates system belongs to a dummy object not supported for the moment. A skinned and bones animated mesh representing a woman. Intellectual property and rights. Author. Olivier CARRE. Contact. olivier.carre@inria.fr or sofa-devel@lists.gforge.inria.fr; . License. Your can distribute this plugin under the same license as the core of SOFA, or any other license of your choice. Sponsors. Assimp Library. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:5107,plugin,plugin,5107,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['plugin'],['plugin']
Modifiability,in/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ); - [Geomagic] Update demo scenes to use direct solvers. [#1533]( https://github.com/sofa-framework/sofa/pull/1533 ); - [InvertibleFVM] Externalize the plugin [#1443]( https://github.com/sofa-framework/sofa/pull/1443 ). ____________________________________________________________. ## [v20.06]( https://github.com/sofa-framework/sofa/tree/v20.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framework/sofa/pull/1302 ). **Modules**; - [All] BaseClass reflection refactoring [#1283]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:228890,plugin,plugin,228890,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ing RequiredPlugin [#628]( https://github.com/sofa-framework/sofa/pull/628 ). **Extlibs**; - [extlibs/gtest] Update gtest & clean the CMakeLists.txt [#604]( https://github.com/sofa-framework/sofa/pull/604 ). ### Cleanings. **Architecture**; - [CMake] Remove the option SOFA_GUI_INTERACTION and its associated codes/macro [#643]( https://github.com/sofa-framework/sofa/pull/643 ). **Modules**; - [All] CMake: Remove COMPONENTSET, keep DEPRECATED [#586]( https://github.com/sofa-framework/sofa/pull/586 ); - [All] CLEAN topology classes [#693]( https://github.com/sofa-framework/sofa/pull/693 ); - **[SofaHelper]** CLEAN commented code and double parentheses in Messaging.h [#587]( https://github.com/sofa-framework/sofa/pull/587 ); - **[SofaKernel]** Header include cleanup [#638]( https://github.com/sofa-framework/sofa/pull/638 ); - **[SofaKernel]** Remove unused function ""renumberConstraintId"" [#691]( https://github.com/sofa-framework/sofa/pull/691 ). **Plugins / Projects**; - [CImgPlugin] Less scary config warnings [#607]( https://github.com/sofa-framework/sofa/pull/607 ); - [HeadlessRecorder] Handle errors in target config [#608]( https://github.com/sofa-framework/sofa/pull/608 ); - [SofaGUI] Move GlutGUI to projects and remove all glut references in SofaFramework [#598]( https://github.com/sofa-framework/sofa/pull/598 ); - [SofaGUI] CMake: Remove useless if block in qt CMakelists.txt [#590]( https://github.com/sofa-framework/sofa/pull/590 ); - [SofaPhysicsAPI] FIX: remove the include of glut [#659]( https://github.com/sofa-framework/sofa/pull/659 ). ____________________________________________________________. ## [v17.12]( https://github.com/sofa-framework/sofa/tree/v17.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.06...v17.12 ). ### Deprecated. **Kernel modules**; - Will be removed in v17.12; - [All]; - SMP support [#457]( https://github.com/sofa-framework/sofa/pull/457 - no more maintained ); - [SofaDefaultType]; - LaparoscopicRigidType [#457]( htt",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:300261,Plugin,Plugins,300261,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'config']","['Plugins', 'config']"
Modifiability,"ing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor in a helper file and minor cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:342434,plugin,plugin,342434,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugin']
Modifiability,ing and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.12.00...v22.06.00 ). ### SOFA-NG. **Architecture**; - [SofaNG] Dispatch SofaHaptics and SofaValidation [#3041]( https://github.com/sofa-framework/sofa/pull/3041 ); - [SofaNG] Dispatch useful SofaMiscCollision components into S.C.Collision [#2896]( https://,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:91182,plugin,plugin,91182,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,ing_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72492,Config,Config,72492,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,inition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel grap,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318380,Plugin,PluginRepository,318380,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginRepository']
Modifiability,into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/v19.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.06...v19.12 ). ### Breaking. **Architecture**; - [All] Improve extlibs integration [#1137]( https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:242517,plugin,plugin,242517,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,ion [#1315]( https://github.com/sofa-framework/sofa/pull/1315 ); - **[SofaKernel]** Add Data bool d_checkTopology in Topology container to replace the use of CHECK_TOPOLOGY macro [#1351]( https://github.com/sofa-framework/sofa/pull/1351 ); - **[SofaKernel]** Clean occurrences of CHECK_TOPOLOGY macro in code [#1352]( https://github.com/sofa-framework/sofa/pull/1352 ); - **[SofaKernel]** Clean of Material.h/cpp [#1346]( https://github.com/sofa-framework/sofa/pull/1346 ); - **[SofaKernel]** Remove X11 dependency when SOFA_NO_OPENGL is enabled. [#1370]( https://github.com/sofa-framework/sofa/pull/1370 ); - **[SofaKernel]** Who hates warnings? [#1258]( https://github.com/sofa-framework/sofa/pull/1258 ); - **[SofaKernel]** replace all serr by msg_error/msg_warning [#1237]( https://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Sc,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:241580,Plugin,Plugins,241580,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'pluginization']"
Modifiability,"ion. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refactoring of MassFromDensity; - adding a warning when creating a UniformMass on Affine/Quadratic frames.; - add FEMDof class to python API; - DeformationMapping: print a warning if a child particle has no parent; - adding HEML implementation of St Venant-Kirchhoff materials (for tetrahedra).; - if correct weights are given in mapping as input data, use it (even if a shapefunction is found); - use sout for logging; - compute tangents for VisualModel loaded using loadVisual python function; - transformEngine for Affine frames. - [Compliant]; - sml: export of meshes; - sml: the solids tags to be simulated as rigids are gathered in a set(); - sml: geometricStiffness option; - sml: using logger; - implementing compliance unassembled API; - in the python API, joints can be created in compliance or not; - API: write a addSpring() in GenericRigidJoint, reuse it in children classes where possible; - API: simplify usage of jointCompliance specification by t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:351529,Flexible,FlexibleCorotationalMeshFEMForceField,351529,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Flexible', 'refactor']","['FlexibleCorotationalMeshFEMForceField', 'refactoring']"
Modifiability,"ionLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralLoader; SofaGeneralMeshCollision; SofaGeneralObjectInteraction; SofaGeneralRigid; SofaGeneralTopology; SofaGeneralVisual; SofaGraphComponent; SofaTopologyMapping; SofaUserInteraction. # SofaAdvanced; SofaNonUniformFem. # SofaMisc; SofaMiscCollision; SofaMiscEngine; SofaMiscExtra; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology. # Other (pluginized from SofaGeneral); SofaDenseSolver; SofaExporter; SofaHaptics; SofaOpenglVisual; SofaPreconditioner; SofaSparseSolver; SofaValidation; ). set(HEADER_FILES; config.h.in; components.h.in; initSofaComponentAll.h; ); set(SOURCE_FILES; initSofaComponentAll.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). set(SOFACOMPONENTALL_MODULES_INCLUDES """"); set(SOFACOMPONENTALL_MODULES_INITS """"); set(SOFACOMPONENTALL_MODULES_HAVES """"); foreach(module ${SOFACOMPONENTALL_MODULES}); string(TOUPPER ""${module}"" module_upper). sofa_find_package(${module} QUIET). if(${module}_FOUND); target_link_libraries(${PROJECT_NAME} ${module}); set(SOFACOMPONENTALL_MODULES_INCLUDES ""${SOFACOMPONENTALL_MODULES_INCLUDES}\n#include <${module}/init${module}.h>""); set(SOFACOMPONENTALL_MODULES_INITS ""${SOFACOMPONENTALL_MODULES_INITS} \\\n init${module}();""); else(); message(""${PROJECT_NAME}: ${module} will not be in the collection.""); endif(); set(SOFACOMPONENTALL_MODULES_HAVES ""${SOFACOMPONENTALL_MODULES_HAVES}\nset(SOFACOMPONENTALL_HAVE_${module_upper} ${SOFACOMPONENTALL_HAVE_${module_upper}})""); endforeach(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ""SofaComponentAll""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt:2283,config,configurations,2283,applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,1,['config'],['configurations']
Modifiability,"ions); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CON",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11093,plugin,plugin,11093,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"iscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaMiscFem]; - Add hyperelasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseConte",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:309501,plugin,plugins,309501,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"istration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:2045,plugin,plugin,2045,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,15,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,"iteAccessor to access Loc2GlobMap [#3429](https://github.com/sofa-framework/sofa/pull/3429) ; - [All] Fix unnecessary copy to access topology buffer when const ref can be used [#3446](https://github.com/sofa-framework/sofa/pull/3446) ; - [Lagrangian.Solver] Merge duplicated code into small but expressive functions [#3474](https://github.com/sofa-framework/sofa/pull/3474) ; - [all] Remove compilation warnings [#3494](https://github.com/sofa-framework/sofa/pull/3494) ; - [FEM.Elastic] Clean draw method [#3508](https://github.com/sofa-framework/sofa/pull/3508) ; - [all] Lifecycle v22.12 [#3534](https://github.com/sofa-framework/sofa/pull/3534) . **Plugins / Projects**; - [tutorials] Fix CMakeLists targets [#3200](https://github.com/sofa-framework/sofa/pull/3200) ; - [Project] Start v22.12 dev phase [#3218](https://github.com/sofa-framework/sofa/pull/3218) ; - [SofaImplicitField] Fix CMake for new NG architecture [#3223](https://github.com/sofa-framework/sofa/pull/3223); - [SofaValidation] is a plugin, not a collection [#3296](https://github.com/sofa-framework/sofa/pull/3296) ; - [SofaSimpleGUI] Without compatibility layer [#3301](https://github.com/sofa-framework/sofa/pull/3301) ; - [ExternalBehaviorModel] Without compatibility layer [#3302](https://github.com/sofa-framework/sofa/pull/3302) ; - [SofaCarving] Some cleaning in carvingManager to use link instead of string and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/347",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:89795,plugin,plugin,89795,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ith iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can’t be recomputed must be put inside a `Data` or a `DataPtr`. This way, your component can be saved. Also, this `Data` will be automatically displayed inside the GUI.; - For messaging in SOFA components, the [dedicated Messaging API](https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/message-api/) must be used.; - `msg_info()` will display the message in the console only if the `printLog` flag is activated.; - `msg_warning()` will display the message in the console with an warning message.; - `msg_error()` will display the message in the console with an error message.; - Use `sofa::type::vector` instead of `std::vector`; - Only use `sofa::simulation::tree::GNode` when you need to directly use access to the children or the parent of the node. If not, use the more generic `sofa::simulation::Node`; - When an information, a function or an internal variable from an external component is needed in a component, prefer an explicit Link to connect both components instead of implicitly browsing the graph using `getContext`; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:7085,variab,variable,7085,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['variab'],['variable']
Modifiability,ithub.com/sofa-framework/sofa/pull/2225 ). ____________________________________________________________. ## [v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework/sofa/pull/1915 ); - **[SofaHelper]** Remove some SofaCore dependencies [#1810]( https://github.com/sofa-framework/sofa/pull/1810 ); - **[SofaKernel]** Create Sofa.Geometry and Sofa.Topology modules [#1912]( https://github.com/sofa-framework/sofa/pull/1912 ); - **[SofaKernel]** Create Sofa.Type module [#1555]( https://github.com/sofa-framework/sofa/pull/1555 ); - **[SofaKernel]** Package all modules of Sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:167894,Config,Config,167894,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,ithub.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github.com/sofa-framework/sofa/pull/4513); - [LinearAlgebra] Refactor sparse matrix product [#4547](https://github.com/sofa-framework/sofa/pull/4547); - [plugins] Remove ExternalBehaviorModel and ManualMapping plugins [#4565](https://github.com/sofa-framework/sofa/pull/4565); - [LinearSystem.Direct] Remove metis dependency [#4588](https://github.com/sofa-framework/sofa/pull/4588); - [ODESolver] Explicit link to linear solver [#4628](https://github.com/sofa-framework/sofa/pull/4628); - [Collision.Detection.Algorithm] Rename Data [#4674](https://github.com/sofa-framework/sofa/pull/4674); - [Collision.Detection.Intersection] Rename Data [#4675](https://github.com/sofa-framework/sofa/pull/4675); - [Collision.Geometry+Response] Rename Data [#4676](https://github.com/sofa-framework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:18831,Refactor,Refactor,18831,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"ixSort/RadixSort.cpp; oclRadixSort/Scan.cpp; tools/showvector.cpp; tools/top.cpp; ). set(OTHER_FILES; kernels/OpenCLFixedConstraint.cl; kernels/OpenCLGenericParticleForceField.cl; kernels/OpenCLGenericParticleForceField_Plane.macrocl; kernels/OpenCLGenericParticleForceField_Sphere.macrocl; kernels/OpenCLMechanicalObject.cl; kernels/OpenCLMemoryManager.cl; kernels/OpenCLSpatialGridForce.cl; kernels/OpenCLSpringForceField.cl; kernels/OpenCLUniformMass.cl; kernels/oclRadixSort/RadixSort.cl; kernels/oclRadixSort/Scan_b.cl; ). if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; OpenCLSPHFluidForceField.h; OpenCLSPHFluidForceField.inl; OpenCLSpatialGridContainer.h; OpenCLSpatialGridContainer.inl); list(APPEND SOURCE_FILES; OpenCLSPHFluidForceField.cpp; OpenCLSpatialGridContainer.cpp); list(APPEND OTHER_FILES; kernels/OpenCLSPHFluidForceField.cl; kernels/OpenCLSpatialGridContainer.cl; ); message(STATUS ""SofaOpenCL: optional dependency to SofaSphFluid found. Activing <OpenCLSPHFluidForceField>.""); else(); message(STATUS ""SofaOpenCL: optional dependency to SofaSphFluid not found. De-activing <OpenCLSPHFluidForceField>""); endif(). message(WARNING ""SofaOpenCL: TODO: don't use absolute path (SOFA_SRC_DIR)""). include_directories(${OPENCL_INCLUDE_DIRS}); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${OTHER_FILES}); add_definitions(""-DSOFA_SRC_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../../..\""""). add_definitions(""-DSOFA_BUILD_GPU_OPENCL""); target_link_libraries(${PROJECT_NAME} ${OPENCL_LIBRARIES} Sofa.Helper SofaEngine SofaUserInteraction csparse SofaGeneralObjectInteraction SofaGeneralDeformable Sofa.GL) # taucs taucs_mt system-taucs); if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid) # taucs taucs_mt system-taucs); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAOPENCL_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt:3459,plugin,plugins,3459,applications/plugins/SofaOpenCL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,ixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUD,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:209099,Plugin,Plugins,209099,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,k/sofa/pull/1258 ); - **[SofaKernel]** replace all serr by msg_error/msg_warning [#1237]( https://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:242299,Plugin,PluginExample,242299,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['Plugin'],['PluginExample']
Modifiability,"l *sofa-launcher* ease the scripting of **numerous SOFA simulations**. This can be done from XML or python scripts. To accelerate the processing of the simulations the script has the ability to run the simulation either: sequentially, in parallel or on a cluster. There is two options to use it depending on your needs:. - You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher yo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:1032,config,configuration,1032,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,1,['config'],['configuration']
Modifiability,l/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/2328 ); - [examples] Make scene resolution independent + doc [#2361]( https://github.com/sofa-framework/sofa/pull/2361 ); - [examples] add a warning comment in the scene header [#2470]( https://github.com/sofa-fr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162919,variab,variable,162919,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"l/3129 ) ; - [Sofa.Visual] Revert PR #2856 [#3073]( https://github.com/sofa-framework/sofa/pull/3073 ); - [SofaBaseCollision] Fixed invalid vector bug in ContactListener [#2676]( https://github.com/sofa-framework/sofa/pull/2676 ); - [SofaBaseLinearSolver] Fix message in MatrixLinearSolver [#2781]( https://github.com/sofa-framework/sofa/pull/2781 ); - [SofaBaseTopology][SofaDeformable][SofaMiscTopology] Proper topological changes in SpringForceField [#2653]( https://github.com/sofa-framework/sofa/pull/2653 ); - [SofaBoundaryCondition] Remove duplicated code [#2830]( https://github.com/sofa-framework/sofa/pull/2830 ); - [SofaCore.Topology] Depreciate method linked to topologyHandler create/destroy function [#2869]( https://github.com/sofa-framework/sofa/pull/2869 ); - [SofaCore] Fix invalid include in MappingHelper [#2632]( https://github.com/sofa-framework/sofa/pull/2632 ); - [SofaCore] Inf fix topo subset indices [#2870]( https://github.com/sofa-framework/sofa/pull/2870 ); - [SofaCore] Make inheritance virtual [#2594]( https://github.com/sofa-framework/sofa/pull/2594 ); - [SofaCore] Restore default component naming for python [#2801]( https://github.com/sofa-framework/sofa/pull/2801 ); - [SofaCore] Restore xml and python different naming conventions [#2773]( https://github.com/sofa-framework/sofa/pull/2773 ); - [SofaCore] Virtual inheritance of BaseObject [#2799]( https://github.com/sofa-framework/sofa/pull/2799 ); - [SofaDeformable] Handle division by zero in MeshSpringForceField [#2596]( https://github.com/sofa-framework/sofa/pull/2596 ); - [SofaDeformable] Springs are able to compute their bounding box [#2599]( https://github.com/sofa-framework/sofa/pull/2599 ); - [SofaEngine] Fix BoxROI undefined behavior [#2604]( https://github.com/sofa-framework/sofa/pull/2604 ); - [SofaFramework] Add tests on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:111559,inherit,inheritance,111559,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['inherit'],['inheritance']
Modifiability,l/3155) ; - [Constraint.Lagrangian] Fix BilateralInteractionConstraint double init and clean some Data [#3327](https://github.com/sofa-framework/sofa/pull/3327) ; - [Constraint.Lagrangian] Remove merge option from BilateralInteractionConstraint [#3328](https://github.com/sofa-framework/sofa/pull/3328) ; - [Constraint.Lagrangian.Solver] Deprecate MechanicalAccumulateConstraint [#3393](https://github.com/sofa-framework/sofa/pull/3393) ; - [TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField [#3412](https://github.com/sofa-framework/sofa/pull/3412) ; - [all] Fix compilation with float as floating_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local st,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:71872,variab,variables,71872,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,l/4110); - [MechanicalLoad] Implement buildStiffnessMatrix for TorsionForceField [#4115](https://github.com/sofa-framework/sofa/pull/4115); - [Mass] Add a callback on the lumping data in MMMass [#4128](https://github.com/sofa-framework/sofa/pull/4128); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: use given re-ordered list for unbuilt GS [#4132](https://github.com/sofa-framework/sofa/pull/4132); - [Core] Store default value in a Data [#4133](https://github.com/sofa-framework/sofa/pull/4133); - [all] Use SimulationInitDoneEvent instead of AnimateBeginEvent [#4160](https://github.com/sofa-framework/sofa/pull/4160); - [GitHub] filter action if not on sofa-framework repository [#4171](https://github.com/sofa-framework/sofa/pull/4171); - [LinearSystem] Assemble non-mapped and mapped matrices in parallel [#4172](https://github.com/sofa-framework/sofa/pull/4172); - [Config] Integrate Tracy profiler [#4182](https://github.com/sofa-framework/sofa/pull/4182); - [Config] CMake: Dont check for IPO at every configure step [#4191](https://github.com/sofa-framework/sofa/pull/4191); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: avoid repeated allocation in loops [#4195](https://github.com/sofa-framework/sofa/pull/4195); - [LinearSolver.Direct] Better distribution of tasks among threads [#4220](https://github.com/sofa-framework/sofa/pull/4220); - [all] Add the folder sofa-launcher to the resources component [#4245](https://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse product [#4256](https://github.com/sofa-framework/sofa/pull/4256); - [Helper] ADD option to cmake for advance,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:31607,Config,Config,31607,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Config', 'config']","['Config', 'configure']"
Modifiability,lMatrixVisitor [#1992]( https://github.com/sofa-framework/sofa/pull/1992 ); - [All] Data filename in BaseLoader is now using d_ [#2095]( https://github.com/sofa-framework/sofa/pull/2095 ); - [All] Move BaseMechanicalVisitor in its own files [#1989]( https://github.com/sofa-framework/sofa/pull/1989 ); - [All] Move ConstraintResolution in its own file instead of BaseConstraint.h [#1847]( https://github.com/sofa-framework/sofa/pull/1847 ); - [All] Move ScopedAdvancedTimer in its own files (.h & .cpp) [#1853]( https://github.com/sofa-framework/sofa/pull/1853 ); - [All] Remove un-needed includes. [#1730]( https://github.com/sofa-framework/sofa/pull/1730 ); - [All] Clean lifecycle for v21.06 [#2198]( https://github.com/sofa-framework/sofa/pull/2198 ); - **[Sofa.Helper]** Remove atomic.h (and fix compilation on Silicon M1) [#2160]( https://github.com/sofa-framework/sofa/pull/2160 ); - **[Sofa.Type]** Clean Quat [#1878]( https://github.com/sofa-framework/sofa/pull/1878 ); - **[SofaBaseCollision]** REFACTOR BruteForceDetection [#1999]( https://github.com/sofa-framework/sofa/pull/1999 ); - **[SofaBaseLinearSolver]** Cleaning in FullMatrix & FullVector & MechanicalState [#1792]( https://github.com/sofa-framework/sofa/pull/1792 ); - **[SofaBaseLinearSolver]** Document and clean CGLinearSolver [#2098]( https://github.com/sofa-framework/sofa/pull/2098 ); - **[SofaBaseMechanics]** Restore useRestPos Data initialization for BarycentricMapping [#1939]( https://github.com/sofa-framework/sofa/pull/1939 ); - **[SofaBaseTopology]** Clean RenumberPoints methods [#1840]( https://github.com/sofa-framework/sofa/pull/1840 ); - **[SofaBaseTopology]** Remove getter to some Data in Topology container and put them public [#1947]( https://github.com/sofa-framework/sofa/pull/1947 ); - **[SofaBaseTopology]** Remove public access to propagateTopologyChanges [#1860]( https://github.com/sofa-framework/sofa/pull/1860 ); - **[SofaBaseTopology]** Rename TopologyEngine and TopologyData classes to match fi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:171961,REFACTOR,REFACTOR,171961,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['REFACTOR'],['REFACTOR']
Modifiability,l] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https://github.com/sofa-framework/sofa/pull/3914) . **Plugins / Projects**; - [Multithreading] 2 steps to maximize coalescing memory access [#3572](https://github.com/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare data for rendering in parallel [#3599](https://github.com/sofa-framework/sofa/pull/3599) ; - [MultiThreading] Implement addDForce in ParallelStiffSpringForceField [#3668](https://github.com/sofa-framework/sofa/pull/3668) ; - [SofaCUDA] Add missing templates for Cuda MechanicalObject [#3688](https://github.com/sofa-framework/sofa/pull/3688) ; - [SceneChecking] Add check when setting contactStiffness uselessly [#3843](https://github.com/sofa-framework/sofa/pull/3843) . **Examples / Scenes**; - [example] Introduce an example for DistanceMultiMapping [#3742](https://github.com/sofa-framework/sofa/pull/3742) ; - [examples] Introduce examples for DistanceMapping and SquareDistanceMapping [#3756](https://github.com/sofa-framework/sofa/pull/3756). ### Bug Fixes. **Architecture**; -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:54110,Plugin,Plugins,54110,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,lation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:210111,Plugin,Plugins,210111,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"ldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:2973,plugin,plugin,2973,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,lds [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data defined by the file loaded [#1660]( https://github.com/sofa-framework/sofa/pull/1660 ); - [SofaQtGui] Restore GraphWidget for Momentum and Energy using QtCharts instead of Qwt [#1508]( https://github.com/sofa-framework/sofa/pull/1508 ). **Plugins / Projects**; - [Compliant] Add WinchMultiMapping and ContactMultiMapping [#1557]( https://github.com/sofa-framework/sofa/pull/1557 ). ### Bug Fixes; **Architecture**; - [CMake] FIX non-existent target with sofa_add_plugin [#1584]( https://github.com/sofa-framework/sofa/pull/1584 ); - [CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS [#1452]( https://github.com/sofa-framework/sofa/pull/1452 ). **Extlibs**; - [extlibs/gtest] Fix the broken sofa_create_package_with_targets in gtest [#1457]( https://github.com/sofa-framework/sofa/pull/1457 ). **Modules**; - [All] issofa_bugfix: cleans and fixes [#218]( https://github.com/sofa-framework/sofa/pull/218 ); - [SofaBaseLinearSolver] Fix logging info with SPARSEMATRIX_VERBOSE [#1715]( https://github.com/sofa-framework/sofa/pull/1715 ); - [SofaBaseMechanics] Use d_showColor for indices instead of arbitrary white [#1511]( https://github.com/sofa-framework/sofa/pull/1511 ); - [SofaBaseMechanics] 🐛 FIX draw function in UniformMass [#1480]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:219247,Plugin,Plugins,219247,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"le(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CONTACT ""contact@sofa-framework.org""); set(CPACK_PACKAGE_DESCRIPTION ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_EXECUTABLES ""runSofa"" ""runSofa""); set(CPACK_PACKAGE_DESCRIPTION_FILE ""${CMAKE_SOURCE_DIR}/README.md""); set(CPACK_PACKAGE_HOMEPAGE_URL ""https://www.sofa-framework.org""); set(CPACK_PACKAGE_FILE_NAME ""SOFA_v${CPACK_PACKAGE_VERSION}""); if(WIN32); set(CPACK_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/share/icons\\\\SOFA.png""); set(CPACK_PACKAGE_INSTALL_DIRECTORY ""SOFA\\\\v${CPACK_PACKAGE_VERSION}""); if(CMAKE_EXE_LINKER_FLAGS MATCHES "".*machine:x64""); se",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11844,config,config,11844,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['config']
Modifiability,"line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to ""6"", ""0.9"" and ""0.2"" respectively.; Add a OglIntVariable component and name it ""perlinBumpOctave"". Set the Uniform Value to ""1"".; Run in SOFA.; We have defined all the variables for the pattern of the dragon. Now we will define the color.; You can define a macro by giving it the same name as the variable, like we did above, or by setting the ID name.; Add a OglShaderDefineMacro component, and set the ID name to ""PERLIN_NOISE_COLOR"".; Add a perlinFloat4Variables, naming it ""perlinColorFactor"" and setting the Uniform Value to (0.2 0.9 0 0).; Add two OglFloatVariables. Name one ""perlinColorFrequency"" and give it a Uniform Value of ""0.5"". Name the other ""perlinColorPersistance""and give it a Uniform Value of ""0.5"".; Add a OglIntVariable named ""perlinColorOctave"" with a Uniform Value of ""3"".; Run in SOFA.; Lastly, we can add a texture to the dragon.; The Perlin texture requires a lot of values, too many to enter by hand. We will cheat a bit.; Open your scene in your favorite XML editor. Copy the bold text below, and paste it into your scene, right before </Node>.; <OglTexture2D id=""perlinPermutationsTexture"" proceduralTextureNbBits=""8"" proceduralTextureWidth=""1"" ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:2168,variab,variables,2168,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,1,['variab'],['variables']
Modifiability,lision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/objectmodel/DataFileName.h; ${SRC_ROOT}/objectmodel/DataFileNameVector.h; ${SRC_ROOT}/objectmodel/DataLink.h; ${SRC_ROOT}/objectmodel/DeprecatedData.h; ${SRC_ROOT}/objectmodel/RemovedData.h; ${SRC_ROOT}/objectmodel/DetachNodeEvent.h; ${SRC_ROOT}/objectmodel/Event.h; ${SRC_ROOT}/objectmodel/GUIEvent.h; ${SRC_ROOT}/objectmodel/HapticDeviceEvent.h; ${SRC_ROOT}/objectmodel/IdleEvent.h; ${SRC_ROOT}/objectmodel/JoystickEvent.h; ${SRC_ROOT}/objectmodel/KeypressedEvent.h; ${SRC_ROOT}/objectmodel/KeyreleasedEvent.h; ${SRC_ROOT}/objectmodel/Link.h; ${SRC_ROOT}/objectmodel/MouseEvent.h; ${SRC_ROOT}/objectmodel/SPtr.h; ${SRC_ROOT}/objectmodel/ScriptEvent.h; ${SRC_ROOT}/objectmodel/TypeOfInsertion.h; ${SRC_ROOT}/objectmodel/Tag.h; ${SRC_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:5295,Config,ConfigurationSetting,5295,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Config'],['ConfigurationSetting']
Modifiability,"ll/1472 ); - **[SofaKernel]** In DataFileName, the name FILE used in the PathType enum could be ambigous [#1465]( https://github.com/sofa-framework/sofa/pull/1465 ); - **[SofaKernel]** 🐛 Break link when passing a nullptr to setLinkedBase [#1479]( https://github.com/sofa-framework/sofa/pull/1479 ); - **[SofaKernel]**[SofaGeneralRigid] Minor fixes in ArticulatedSystemMapping and JointSpringForceField [#1448]( https://github.com/sofa-framework/sofa/pull/1448 ); - **[SofaKernel]** Implement an update mechanism on component: RequiredPlugin [#1458]( https://github.com/sofa-framework/sofa/pull/1458 ); - **[SofaKernel]** Switch to include_guard() instead of include_guard(GLOBAL) [#1467]( https://github.com/sofa-framework/sofa/pull/1467 ); - [SofaMacros] FIX RELOCATABLE_INSTALL_DIR target property [#1631]( https://github.com/sofa-framework/sofa/pull/1631 ); - [SofaMacros] FIX deprecated macro sofa_generate_package [#1446]( https://github.com/sofa-framework/sofa/pull/1446 ); - [SofaMacros] FIX libs copy and plugin deps finding [#1708]( https://github.com/sofa-framework/sofa/pull/1708 ); - [SofaMacros] FIX missing lib copy on Windows [#1711]( https://github.com/sofa-framework/sofa/pull/1711 ); - [SofaMacros] FIX plugins RPATH [#1619]( https://github.com/sofa-framework/sofa/pull/1619 ); - [SofaMacros] Improve RPATH coverage on MacOS [#1713]( https://github.com/sofa-framework/sofa/pull/1713 ); - [SofaMacros] Recursive deps search for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framewor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:223184,plugin,plugin,223184,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ll/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://g",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196572,Refactor,Refactor,196572,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,ll/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaValidation]; - move code to set default folder for monitor to init function [#500]( https://github.com/sofa-framework/sofa/pull/500 ). **Plugins / Projects**; - [All]; - FIX: compilation warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [CGALPlugin]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [image]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [Registration]; - Remove deprecated scene [#331]( https://github.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/304 ); - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - print cleaning + SofaPython quaternion dot product [#404]( https://github.com/sofa-framework/sofa/pull/404 ); - [runSofa]; - Clean : remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:323058,Plugin,Plugins,323058,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,ll/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginization [#609]( https://github.com/sofa-framework/sofa/pull/609 ); - [CImgPlugin] FIX malformed cflag append [#622]( https://github.com/sofa-framework/sofa/pull/622 ); - [HeadlessRecorder] Fix headless recorder stream definition [#666]( https://github.com/sofa-framework/sofa/pull/666 ); - [MultiThreading] FIX: add createSubelements param in MeshGmshLoader [#626]( https://github.com/sofa-framework/sofa/pull/626 ); - [runSofa] Fix compilation when SofaGuiQt is not activated [#599]( https://github.com/sofa-framework/sofa/pull/599 ); - [runSofa] ADD infinite iterations option to batch gui [#613]( https://github.com/sofa-framework/sofa/pull/613 ); - [runSofa] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaDistanceGrid] ADD .scene-tests to ignore scene [#594]( https://github.com/sofa-framework/sofa/pull/594 ); - [SofaPython] FIX build for MacOS >10.13.0 [#614]( https://github.com/sofa-framework/sofa/pull/614 ). **Examples,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:298120,plugin,pluginization,298120,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['pluginization']
Modifiability,ller [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] DisabledContact [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] EdgeSetController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] GraspingManager [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - **[SofaBaseMechanics]**[SofaMiscForceField] Homogeneization of mass components in SOFA [#637]( https://github.com/sofa-framework/sofa/pull/637 ); - **[SofaBaseMechanics]** Clean barycentric mapping [#797]( https://github.com/sofa-framework/sofa/pull/797 ); - [SofaBoundaryCondition] Refactor FixedPlaneConstraint (breaking) [#803]( https://github.com/sofa-framework/sofa/pull/803 ); - **[SofaFramework]** [BREAKING] Replacing DataEngine with SimpleDataEngine [#814]( https://github.com/sofa-framework/sofa/pull/814 ); - **[SofaFramework]** [BREAKING] Rename: data tracker has changed [#822]( https://github.com/sofa-framework/sofa/pull/822 ); - [SofaPreconditioner] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ); - [SofaSparseSolver] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ). ### Improvements. **Architecture**; - [CMake] use ccache if available [#692]( https://github.com/sofa-framework/sofa/pull/692 ); - [Cmake] Add a findCython.cmake [#734]( https://github.com/sofa-framework/sofa/pull/734 ); - [CMake] ADD QtIFW generator + improvements [#796]( https://github.com/sofa-framework/sofa/pull/796 ); - [SofaMacros] ADD CMake macro to create pybind11 & cython targets and modules #859( https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:277916,Refactor,Refactor,277916,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"logy]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:325342,plugin,plugin,325342,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,lper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805 ); - [SofaGeneralObjectInteraction] BoxStiffSpringForceField is now a pack of components [#2621]( https://github.com/sofa-framework/sofa/pull/2621 ); - [SofaGeneralSimpleFEM] Some cleaning in TriangularFEMForceFieldOptim [#2567]( https://github.com/sofa-framework/sofa/pull/2567 ); - [SofaSimpleFEM] Create a TriangleFEMUtils class to factorise Triangle/Triangular[FEMForceField] code [#2287]( https://github.com/sofa-framework/sofa/pull/2287 ); - [SolidMechanics] Remove unused _assembling data [#2901]( https://github.com/sofa-framework/sofa/pull/2901 ); - [Topology.Container.Dynamic] Fix duplicate Data Points in PointSetTopologyContainer [#2993]( https://github.com/sofa-framework/sofa/pull/2993 ). **Plugins / Projects**; - [runSofa] Add a button and a mechanism to activate the scenegraph updates [#3026]( https://github.com/sofa-framework/sofa/pull/3026 ); - [runSofa] Remove not working feature in QSofaListView. [#3025]( https://github.com/sofa-framework/sofa/pull/3025 ). **Examples / Scenes**. **Scripts / Tools**. ### Improvements. **Project**; - [Contributing] Update info regarding GitHub Discussions [#2741]( https://github.com/sofa-framework/sofa/pull/2741 ); - [Project] Add the graph illustrating the workflow of a PR review in CONTRIBUTING [#3051]( https://github.com/sofa-framework/sofa/pull/3051 ). **Architecture**; - [collections] Install collections in their own directory [#3196]( https://github.com/sofa-framework/sofa/pull/3196 ). **Modules**; - [Constraint.Lagrangian.Correction] Searching for Direct Linear Solver in LinearSolverConstraintCorrection [#3055]( https://github.com/sofa-framework/sofa/pull/3055 ) ; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GU,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:97376,Plugin,Plugins,97376,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"lugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1869,plugin,plugin,1869,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,3,"['Plugin', 'plugin']","['PluginExample', 'plugin']"
Modifiability,m/sofa-framework/sofa/pull/2499 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping lost ancestor info [#2460]( https://github.com/sofa-framework/sofa/pull/2460 ); - [SofaUserInteraction] Fix InteractionPerformerFactory symbol export [#2495]( https://github.com/sofa-framework/sofa/pull/2495 ). **Plugins / Projects**; - [CGALPlugin] FIX sofa::type [#2246]( https://github.com/sofa-framework/sofa/pull/2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. *,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:153067,variab,variables,153067,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,mework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59502,Plugin,Plugins,59502,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'variab']","['Plugins', 'variable']"
Modifiability,mework/sofa/pull/4676); - [Controller+Engine] Rename Data [#4678](https://github.com/sofa-framework/sofa/pull/4678); - [IO] Rename Data [#4679](https://github.com/sofa-framework/sofa/pull/4679); - [ODESolver] Rename Data [#4680](https://github.com/sofa-framework/sofa/pull/4680); - [Playback] Rename Data [#4681](https://github.com/sofa-framework/sofa/pull/4681); - [Setting] Rename Data [#4682](https://github.com/sofa-framework/sofa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchabl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:20506,Plugin,PluginManager,20506,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,mework/sofa/pull/949 ); - [SofaGeneralObjectInteraction] Fix attach constraint radius [#650]( https://github.com/sofa-framework/sofa/pull/650 ); - [SofaGui] Fix missing profiling timers for BatchGUI and HeadlessRecorder [#890]( https://github.com/sofa-framework/sofa/pull/890 ); - [SofaGuiGlut] Fix compilation [#1044]( https://github.com/sofa-framework/sofa/pull/1044 ); - [SofaGuiQt] FIX: component/nodes ordering in runSofa scene graph [#1001]( https://github.com/sofa-framework/sofa/pull/1001 ); - [SofaGuiQt] REMOVE: public export of target SofaExporter [#963]( https://github.com/sofa-framework/sofa/pull/963 ); - [SofaGuiQt] Fix: several QWidget do not have a parent [#1030]( https://github.com/sofa-framework/sofa/pull/1030 ); - **[SofaHelper]** FIX compilation on Visual Studio 2015 with QWT plugin [#935]( https://github.com/sofa-framework/sofa/pull/935 ); - **[SofaHelper]** FIX WinDepPack INSTALL_INTERFACE [#1042]( https://github.com/sofa-framework/sofa/pull/1042 ); - **[SofaHelper]** REMOVE PluginManager::m_searchPaths [#947]( https://github.com/sofa-framework/sofa/pull/947 ); - **[SofaKernel]** Clean & Fix TopologyChangeVisitor and StateChangeVisitor behavior [#880]( https://github.com/sofa-framework/sofa/pull/880 ); - **[SofaKernel]** Clean output data when doUpdate in BoxROI [#1056]( https://github.com/sofa-framework/sofa/pull/1056 ); - **[SofaKernel]** FIX deprecation message related to template types. [#939]( https://github.com/sofa-framework/sofa/pull/939 ); - **[SofaKernel]** FIX in TetrahedronFEMForceField & TetrahedronSetTopologyAlgorithm [#973]( https://github.com/sofa-framework/sofa/pull/973 ); - **[SofaKernel]** FIX operator>> in Mat.h and add corresponding test. [#993]( https://github.com/sofa-framework/sofa/pull/993 ); - **[SofaKernel]** FIX: A few fix to compile on Mac OSX Xcode 9 and Linux gcc 7.3.0 [#969]( https://github.com/sofa-framework/sofa/pull/969 ); - **[SofaKernel]** FIX: force name data to contain something [#1009]( https://github.com/sofa-f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:266899,Plugin,PluginManager,266899,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,mpared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixes #136 : Use the cmake install DIRECTORY instead of FILES [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - [LeapMotion]; - FIX compilation for LeapMotion plugin due to moved files [#296]( https://github.com/sofa-framework/sofa/pull/296 ); - [runSofa]; - Fix minor consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - [SofaTest]; - repair the minor API breaks introduced by PR #213 [#269]( https://github.com/sofa-framework/sofa/pull/269 ). **Scenes**; - Components/engine/GenerateGrid.scn was fixed [#303]( https://github.com/sofa-framework/sofa/pull/303 ). ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://git,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:334233,plugin,plugin,334233,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"n GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] Fix compat file SofaGuiQt.h [#2044]( https://github.com/sofa-framework/sofa/pull/2044 ); - [SofaGuiQt] Fix compilation [#1889]( https://github.com/sofa-framework/sofa/pull/1889 ); - [SofaGuiQt] Fix compilation when SOFA_DUMP_VISITOR is enabled [#1914]( https://github.com/sofa-framework/sofa/pull/1914 ); - [SofaGuiQt] Use opaque API instead [#1918]( https://github.com/sofa-framework/sofa/pull/1918 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader]",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:187634,Plugin,PluginManager,187634,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,"n example for DistanceMultiMapping [#3742](https://github.com/sofa-framework/sofa/pull/3742) ; - [examples] Introduce examples for DistanceMapping and SquareDistanceMapping [#3756](https://github.com/sofa-framework/sofa/pull/3756). ### Bug Fixes. **Architecture**; - [Simulation.Graph] SimpleAPI: Remove reference to Node argument in createChild() [#3620](https://github.com/sofa-framework/sofa/pull/3620) ; - [defaulttype] Fix cuda template instantiation [#3646](https://github.com/sofa-framework/sofa/pull/3646); - [Core] Fix UB (misaligned address) when comparing string [#3664](https://github.com/sofa-framework/sofa/pull/3664) ; - [Helper, GL] Fix various memleaks [#3671](https://github.com/sofa-framework/sofa/pull/3671) ; - [Helper] ArgumentParser: Fix map insertion when parsing more than once [#3672](https://github.com/sofa-framework/sofa/pull/3672) ; - [Defaulttype] Add generic precision aliases for Mat templates [#3675](https://github.com/sofa-framework/sofa/pull/3675) ; - [Config] Disable SOFA_EXTERN_TEMPLATE [#3678](https://github.com/sofa-framework/sofa/pull/3678) ; - [all] Simple robustification [#3685](https://github.com/sofa-framework/sofa/pull/3685) ; - [Helper] Fix FileRepository::relativeToPath [#3693](https://github.com/sofa-framework/sofa/pull/3693) ; - [Core] Fix MSVC warning in Link [#3763](https://github.com/sofa-framework/sofa/pull/3763) ; - [Core] Access cumulative sum of VecIds through proxy class [#3918](https://github.com/sofa-framework/sofa/pull/3918) . **Modules**; - [GUI] Fix CMake Packaging [#3595](https://github.com/sofa-framework/sofa/pull/3595) ; - [Component.Engine] Replace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-fr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:55887,Config,Config,55887,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"n existing actions [#4444](https://github.com/sofa-framework/sofa/pull/4444); - [SofaCUDA] Initialize module from another module [#4453](https://github.com/sofa-framework/sofa/pull/4453); - [SofaDistanceGrid] remove shadow variable [#4455](https://github.com/sofa-framework/sofa/pull/4455); - [Defaulttype, LinearAlgera] Fix warnings [#4465](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDri",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:14817,Config,Config,14817,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"nGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat data was not checked); - StateMask method clean needs to resize m_size to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:358739,config,configurations,358739,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configurations']
Modifiability,"nModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links for input and output topologies of the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:252934,plugin,plugin,252934,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"nd evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to the GNU Lesser General Public License as published by the Free Software; Foundation; either version 2.1 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2602,plugin,plugin,2602,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['plugin'],['plugin']
Modifiability,nd to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageB,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318191,plugin,plugin,318191,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,nentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sofa.Core] A helper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805 ); - [SofaGeneralObjectInteraction] BoxStiffSpringForceField is now a pack of components [#2621]( https://github.com/sofa-framework/sofa/pull/2621 ); - [SofaGeneralSimpleFEM] Some cleaning in TriangularFEMForceFieldOptim [#2567]( https://github.co,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:95920,plugin,plugin,95920,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ngEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350281,plugin,plugin,350281,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"nges and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:336907,plugin,plugin,336907,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,nline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixes #136 : Use the cmake install DIRECTORY instead of FILES [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - [LeapMotion]; - FIX compilation for LeapMotion plugin due to moved files [#296]( https://github.com/sofa-framework/sofa/pull/296 ); - [runSofa]; - Fix minor consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - [SofaTest]; - repair the minor API breaks introduced by PR #213 [#269]( https://github.com/sofa-framework/sofa/pull/269 ). **Scenes**; - Components/engine/GenerateGrid.scn was fixed [#303]( https://github.com/sofa-framework/sofa/pull/303 ). ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean Default,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:333889,Plugin,Plugins,333889,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"nseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin SofaSimpleGUI SofaSimpleGUI) # SofaSimpleGUI plugin can't work without OPENGL; sofa_a",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:3050,plugin,plugin,3050,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,nsformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:316543,Refactor,Refactor,316543,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"nstall(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CONTACT ""contact@sofa-framework.org""); set(CPACK_PACKAGE_DESCRIPTION ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_EXECUTABLES ""runSofa"" ""runSofa""); set(CPACK_PACKAGE_DESCRIPTION_FILE ""${CMAKE_SOURCE_DIR}/README.md""); set(CPACK_PACKAGE_HOMEPAGE_URL ""https://www.sofa-framework.org""); set(CPACK_PACKAGE_FILE_NAME ""SOFA_v${CPACK_PACKAGE_VERSION}""); if(WIN32); set(CPACK_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/share/icons\\\\SOFA.png""); set(CPACK_PACKAGE_INS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11774,config,configuration,11774,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['config'],['configuration']
Modifiability,"nt; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340507,Flexible,Flexible,340507,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Flexible'],['Flexible']
Modifiability,"ntionned below, please refer to the base. ### Commit message; A correct commit message must therefore be structured as: ; `[NAME_OF_MODULE_OR_PLUGIN] ACTION message` ; where ACTION includes ADD, REMOVE, FIX, CLEAN, REVERT. ; Example: `[SofaKernel] ADD test for the mass conservation in UniformMass` . ### Naming; Identifiers must respect the following conventions:. - [N1] Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; while (x == y); {; something();; somethingElse();; }; finalThing();; ```. - A space character should be used in the following situations:; - After C++ reserved words: `if (true)`; - Around binary operators: `a + b`; - After commas: `doSom",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:1141,variab,variables,1141,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,2,['variab'],['variables']
Modifiability,oader] Compute subElement by default for Gmsh format [#986]( https://github.com/sofa-framework/sofa/pull/986 ); - [SofaGeneralObjectInteraction] Fix AttachConstraint in case of FreeMotion (LM solving) [#949]( https://github.com/sofa-framework/sofa/pull/949 ); - [SofaGeneralObjectInteraction] Fix attach constraint radius [#650]( https://github.com/sofa-framework/sofa/pull/650 ); - [SofaGui] Fix missing profiling timers for BatchGUI and HeadlessRecorder [#890]( https://github.com/sofa-framework/sofa/pull/890 ); - [SofaGuiGlut] Fix compilation [#1044]( https://github.com/sofa-framework/sofa/pull/1044 ); - [SofaGuiQt] FIX: component/nodes ordering in runSofa scene graph [#1001]( https://github.com/sofa-framework/sofa/pull/1001 ); - [SofaGuiQt] REMOVE: public export of target SofaExporter [#963]( https://github.com/sofa-framework/sofa/pull/963 ); - [SofaGuiQt] Fix: several QWidget do not have a parent [#1030]( https://github.com/sofa-framework/sofa/pull/1030 ); - **[SofaHelper]** FIX compilation on Visual Studio 2015 with QWT plugin [#935]( https://github.com/sofa-framework/sofa/pull/935 ); - **[SofaHelper]** FIX WinDepPack INSTALL_INTERFACE [#1042]( https://github.com/sofa-framework/sofa/pull/1042 ); - **[SofaHelper]** REMOVE PluginManager::m_searchPaths [#947]( https://github.com/sofa-framework/sofa/pull/947 ); - **[SofaKernel]** Clean & Fix TopologyChangeVisitor and StateChangeVisitor behavior [#880]( https://github.com/sofa-framework/sofa/pull/880 ); - **[SofaKernel]** Clean output data when doUpdate in BoxROI [#1056]( https://github.com/sofa-framework/sofa/pull/1056 ); - **[SofaKernel]** FIX deprecation message related to template types. [#939]( https://github.com/sofa-framework/sofa/pull/939 ); - **[SofaKernel]** FIX in TetrahedronFEMForceField & TetrahedronSetTopologyAlgorithm [#973]( https://github.com/sofa-framework/sofa/pull/973 ); - **[SofaKernel]** FIX operator>> in Mat.h and add corresponding test. [#993]( https://github.com/sofa-framework/sofa/pull/993 ); - ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:266694,plugin,plugin,266694,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ocumentation. ColladaSceneLoader Plugin Documentation. 		A skinned and bones animated character walking. Introduction; How to use; Examples; Intellectual property and rights. Introduction; This page explains how to use the ColladaSceneLoader plugin to load collada scene (.dae) into Sofa. What is Collada ?.       COLLADA defines an XML-based schema to make it easy to transport 3D assets between applications ; - enabling diverse 3D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneCo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1003,plugin,plugin,1003,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,2,"['config', 'plugin']","['configuration', 'plugin']"
Modifiability,"ofa-framework/sofa/pull/457 ); - InciseAlongPathPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - RemovePrimitivePerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - StartNavigationPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - SuturePointPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Kernel modules**; - [All]; - issofa_visitors: Changing the way projective constraints are propagated in visitors [#216]( https://github.com/sofa-framework/sofa/pull/216 ); - [SofaDeformable]; - Change how rest shape is given in RestShapeSpringsForceField [#315]( https://github.com/sofa-framework/sofa/pull/315 ). **Other modules**; - [SofaHelper]; - Rewrite ArgumentParser [#513]( https://github.com/sofa-framework/sofa/pull/513 ); - [SofaValidation]; - ADD Monitor test [#312]( https://github.com/sofa-framework/sofa/pull/312 ). ### Improvements. **Kernel modules**; - [All]; - issofa_topology: Improvement, BugFix and Cleaning on Topology [#243]( https://github.com/sofa-framework/sofa/pull/243 ); - issofa_constraintsolving: improve constraints [#484]( https://github.com/sofa-framework/sofa/pull/484 ); - Improve File:line info in error message (for python and xml error reporting) [#314]( https://github.com/sofa-framework/sofa/pull/314 ); - [SofaDeformable]; - issofa_meshspringff [#497]( https://github.com/sofa-framework/sofa/pull/497 ); - issofa_springff [#498]( https://github.com/sofa-framework/sofa/pull/498 ); - [SofaHelper]; - add ability to use NoArgument for BaseCreator and Factory [#385]( https://github.com/sofa-framework/sofa/pull/385 ); - Remove legacy ImageBMP/ImagePNG and ImageQt [#424]( https://github.com/sofa-framework/sofa/pul",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:304655,Rewrite,Rewrite,304655,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Rewrite'],['Rewrite']
Modifiability,ofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] P,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:257903,Refactor,Refactor,257903,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"ofa/pull/1373 ); - **[SofaKernel]** Cleaner output when the creation of an object fails [#1266]( https://github.com/sofa-framework/sofa/pull/1266 ); - **[SofaSimulationCore]** Add a way to fill a multi vector from a base vector with a MechanicalOperations (mops). [#1248]( https://github.com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:233616,config,configuration,233616,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,ofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPath() [#2354]( https://github.com/sofa-framework/sofa/pull/2354 ); - [SofaCore] Link: case where Data parent is invalid [#2211]( https://github.com/sofa-framework/sofa/pull/2211 ); - [SofaCore_simutest] Fix getobjects and testcomponentstate unit tests [#2326]( https://github.com/sofa-framework/sofa/pull/2326 ); - [SofaDeformable] Forgot minus sign in #2429 [#2448]( https://github.com/sofa-framework/sofa/pull/2448 ); - [SofaGUICommon] Fix configuration file for install with cxxopts [#2279]( https://github.com/sofa-framework/sofa/pull/2279 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/sofa/pull/2458 ); - [SofaGuiQt] Revert #2458 [#2479]( https://github.com/sofa-framework/sofa/pull/2479 ); - [SofaGuiQt] Some fixes for Qt6 [#2490]( https://github.com/sofa-framework/sofa/pull/2490 ); - [SofaGuiQt] Switch name and class name for slaves [#2371]( https://github.com/sofa-framework/sofa/pull/2371 ); - [SofaKernel] Remove ambiguous constructors from type::vector [#2270]( https://github.com/sofa-framework/sofa/pull/2270 ); - [SofaKernel] Remove the getXXXAccessor in accessor.h to keep the one in Data.h [#2278]( https://github.com/sofa-framework/sofa/pull/2278 ); - [So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:149994,config,configuration,149994,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,"ofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.com/sofa-framework/sofa/pull/1005 ); - **[SofaSimpleFem]** Use msg and size_t in TetraDiff [#1016]( https://github.com/sofa-framework/sofa/pull/1016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding pluginization of DiffusionSolver [#1067]( https://github.com/sofa-framework/sofa/pull/1067 ); - [Modeler] Deactivate Modeler by default, since it is deprecated [#972]( https://github.com/sofa-framework/sofa/pull/972 ). **Examples / Scenes**; - [Scenes] Apply script on all scenes using VisualModel/OglModel [#1081]( https://github.com/sofa-framework/sofa/pull/1081 ). ____________________________________________________________. ## [v18.12]( https://github.com/sofa-framework/sofa/tree/v18.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.06...v18.12 ). ### Deprecated. **Removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead; - [SofaMisc] Par",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:274150,Plugin,Plugins,274150,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'pluginization']"
Modifiability,ofaKernel]** Remove warnings [#968]( https://github.com/sofa-framework/sofa/pull/968 ); - **[SofaKernel]** several small fix [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269220,plugin,plugin,269220,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,oisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [#2684]( https://github.com/sofa-framework/sofa/pull/2684 ); - [Geomagic] Clean scene and code warnings + minor changes [#2846]( https://github.com/sofa-framework/sofa/pull/2846 ); - [Geomagic] Fix CMake and replace includes from legacy header to new architecture [#3076]( https://github.com/sofa-framework/sofa/pull/3076 ); - [SensableEmulation][CMake] Clean Boost dep [#3067]( https://github.com/sofa-framework/sofa/pull/3067 ); - [SofaAssimp] fix shadow variable [#2844]( https://github.com/sofa-framework/sofa/pull/2844 ); - [SofaCUDA] Fix CMake to compile plugin without legacy headers option [#3077]( https://github.com/sofa-framework/sofa/pull/3077 ); - [SofaCUDA][SofaSphFluid] Remove some getTemplateName deprecated methods [#3144]( https://github.com/sofa-framework/sofa/pull/3144 ); - [SofaCUDA] Better readme [#2597]( https://github.com/sofa-framework/sofa/pull/2597 ); - [SofaCUDA] Clean Cuda Collision models [#2673]( https://github.com/sofa-framework/sofa/pull/2673 ); - [SofaCUDA] Clean and factorize CudaTriangularFEMForceFieldOptim [#2568]( https://github.com/sofa-framework/sofa/pull/2568 ); - [SofaCUDA] Convert standard stream to msg_* API [#2864]( https://github.com/sofa-framework/sofa/pull/2864 ); - [SofaCUDA] Modernize CMake for CUDA [#2878]( https://github.com/sofa-framework/sofa/pull/2878 ); - [SofaCUDA] QuadSpringsSphere scenes [#2598]( https://github.com/sofa-framework/sofa/pull/2598 ); - [SofaCUDA] Remove calls to __umul24 on device [#2715]( https://github.com/sofa-framework/sofa/pull/2715 ); - [SofaCUDA] Resurrect Cuda,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:131007,plugin,plugin,131007,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,ojects and remove all glut references in SofaFramework [#598]( https://github.com/sofa-framework/sofa/pull/598 ); - [SofaGUI] CMake: Remove useless if block in qt CMakelists.txt [#590]( https://github.com/sofa-framework/sofa/pull/590 ); - [SofaPhysicsAPI] FIX: remove the include of glut [#659]( https://github.com/sofa-framework/sofa/pull/659 ). ____________________________________________________________. ## [v17.12]( https://github.com/sofa-framework/sofa/tree/v17.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.06...v17.12 ). ### Deprecated. **Kernel modules**; - Will be removed in v17.12; - [All]; - SMP support [#457]( https://github.com/sofa-framework/sofa/pull/457 - no more maintained ); - [SofaDefaultType]; - LaparoscopicRigidType [#457]( https://github.com/sofa-framework/sofa/pull/457 ) - not used/dont compiled for a really long time. - Will be removed in v18.06; - [SofaHelper]; - Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead. **Other modules**; - Will be removed in v18.12; - [SofaBoundaryCondition]; - BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMisc]; - ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField]; - ForceMaskOff [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - LineBendingSprings [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - WashingMachineForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); 		- LennardJonesForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping]; - CatmullRomSplineMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - CenterPointMechanicalMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - CurveMapping [#457]( https://github.com/sofa-framework/sofa/pul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:301537,Plugin,PluginRepository,301537,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginRepository']
Modifiability,ologicalMapping: use Links for required QuadSet components [#4361](https://github.com/sofa-framework/sofa/pull/4361); - [MultiThreading] Fix failing test on ParallelImplementationsRegistry [#4392](https://github.com/sofa-framework/sofa/pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core] Call super init() in MultiMapping and Multi2Mapping [#4432](https://github.com/sofa-framework/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:6779,Plugin,PluginManager,6779,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,ols] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tree build [#2940]( https://github.com/sofa-framework/sofa/pull/2940 ); - [CMake] FIX out-of-tree build (2) [#2953]( https://github.com/sofa-framework/sofa/pull/2953 ); - [CMake] FIX out-of-tree configure [#2891]( https://github.com/sofa-framework/sofa/pull/2891 ); - [CMake] Fix install config files [#3031]( https://github.com/sofa-framework/sofa/pull/3031 ); - [Config][CMake] Fix include directories [#3023]( https://github.com/sofa-framework/sofa/pull/3023 ); - [project] Remove duplicate entry in clang-format [#3140]( https://github.com/sofa-framework/sofa/pull/3140 ). **Modules**; - [All] Fix compilation when SOFA_FLOATING_POINT_TYPE is set to float [#2560]( https://github.com/sofa-framework/sofa/pull/2560 ); - [All] Move addInput/addOutput from init() to constructor [#2825]( https://github.com/sofa-framework/sofa/pull/2825 ); - [All] Fix missing #include config.h or invalid ordering that disturb the factory's getTarget() to operate properly. [#2693]( https://github.com/sofa-framework/sofa/pull/2693 ); - [Component.IO.Mesh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *GeometryAlgorithms [#3034]( https://github.com/sofa-framework/sofa/pull/3034 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [Core] Dynamic control of the computation of the bounding box [#3080]( https://github.com/sofa-framework/sofa/pull/3080 ); - [Core] Fix ObjectFactory::getEntriesFromTarget that returns duplicated names [#2544]( https://github.com/sofa-framework/sofa/pull/2544 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - [FEM.elastic] Some optimisation to make FastTetrahedralCorotational even faster [#2,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:105030,config,config,105030,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"om/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:321680,Refactor,Refactor,321680,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,om/sofa-framework/sofa/pull/442 ); - Replacing afficheResult with resultToString [#473]( https://github.com/sofa-framework/sofa/pull/473 ); - FIX Remove override warnings [#520]( https://github.com/sofa-framework/sofa/pull/520 ); - Fix memory leak while capturing screenshot [#533]( https://github.com/sofa-framework/sofa/pull/533 ); - FIX Windows relative path from runSofa [#568]( https://github.com/sofa-framework/sofa/pull/568 ); - [SofaRigid]; - RigidMapping: fixed setRepartition backward compatibility [#441]( https://github.com/sofa-framework/sofa/pull/441 ); - [SofaSimulationCommon]; - Fix a minor regression introduced during the post-sprint [#476]( https://github.com/sofa-framework/sofa/pull/476 ); - [SofaSimulationCore]; - Add stop in add_mbktomatrixVisitor [#439]( https://github.com/sofa-framework/sofa/pull/439 ). **Other modules**; - [All]; - Fix warnings and strange double incrementation on iterator [#364]( https://github.com/sofa-framework/sofa/pull/364 ); - installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - Fix override warnings [#423]( https://github.com/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:314426,plugin,plugin,314426,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ompile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType Sofa.Core Sofa.Simulation.Graph Sofa.S",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:2188,config,config,2188,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['config'],['config']
Modifiability,"on [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-framework/sofa/pull/4203); - [LinearSolver] Remove CSparse-based linear solvers [#4258](https://github.com/sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48758,plugin,plugins,48758,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"on-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-fr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324750,plugin,plugins,324750,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"onMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; ta",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:6921,plugin,plugins,6921,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['plugin'],['plugins']
Modifiability,"on]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ). **Other**; - [Tools]; - Update astyle config [#550]( https://github.com/sofa-framework/sofa/pull/550 ). ### Bug Fixes. **Kernel modules**; - [All]; - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - Fix computeBBox functions [#527]( https://github.com/sofa-framework/sofa/pull/527 ); - CMake: FIX Boost::program_options finding in install [#618]( https://github.com/sofa-framework/sofa/pull/618 ); - [SofaBaseLinearSolver]; - FIX no step if condition on denominator is met at first step [#521]( https://github.com/sofa-framework/sofa/pull/521 ); - FIX breaking condition in CG at first step regarding threshold [#556]( https://github.com/sofa-framework/sofa/pull/556 ); - [SofaBaseMechanics]; - Make sure the mechanical object's state vectors size matches their respective argument size [#406]( https://github.com/sofa-framework/sofa/pull/406 ); - [SofaBaseTopology]; - FIX wrong clean in PointSetTopologyModifier [#380]( https://github.com/sofa-framework/sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:311417,config,config,311417,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,"ons); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA_BUILD_TUTORIALS; sofa_add_subdirectory(plugin applications/plugins/Sce",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:6991,Config,Config,6991,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Config'],['Config']
Modifiability,"oopParallelScheduler [#3676](https://github.com/sofa-framework/sofa/pull/3676) ; - [SofaCUDA] Remove BeamLinearMapping<Rigid3fTypes,.> [#3684](https://github.com/sofa-framework/sofa/pull/3684) ; - [GUI.Qt] Clean and fix in the ""inspector"" panel [#3713](https://github.com/sofa-framework/sofa/pull/3713) ; - [applications] rename shadow variable [#3738](https://github.com/sofa-framework/sofa/pull/3738) ; - [SofaPhysicsAPI] Remove unreachable code [#3771](https://github.com/sofa-framework/sofa/pull/3771) ; - [SofaCarving] Refresh : update file architecture and cmake [#3798](https://github.com/sofa-framework/sofa/pull/3798) ; - [BulletCollisionDetection] Revive project [#3800](https://github.com/sofa-framework/sofa/pull/3800) ; - [PreassembledMass] Make it external [#3802](https://github.com/sofa-framework/sofa/pull/3802) ; - [SofaCUDA] Move explicit template instantiations from CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull/3624) ; - [Scenes] Use ""floating-point type""-independent templates [#3635](https://github.com/sofa-framework/sofa/pull/3635) ; - [examples] Apply rest position in mappings [#3757](https://github.com/sofa-framework/sofa/pull/3757) . ### Refactoring. **Modules**; - [Collision.Detection] Rename DefaultPipeline into CollisionPipeline [#3590](https://github.com/sofa-framework/sofa/pull/3590) ; - [Mapping.NonLinear] Move DistanceMultiMapping in its own files [#3707](https://github.com/sofa-framework/sofa/pull/3707) . **Plugins / Projects**; - [MultiThreading] Reorganize following SOFA structure [#3598](https://github.com/sofa-framework/sofa/pull/3598) ; - [SofaCUDA] Reorganize fo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:66429,plugin,plugins,66429,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['plugin'],['plugins']
Modifiability,opagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113551,plugin,plugin,113551,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"operty; and; rights; Howto. doxygen code documentation; \( \LaTeX \) formulas in this document. Introduction. This page explains how to customize the empty plugin. Once you have; read this page, you can replace it with the documentation of your; plugin. To customize the template, you can:. Copy the SofaHAPI directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh ; to replace SofaHAPI; with MyPlugin in all; the file; names and their content:; utils/changeClassName.sh SofaHAPI MyPlugin; cd examples; ../utils/changeClassName.sh SofaHAPI MyPlugin; cd ../doc/; ../utils/changeClassName.sh SofaHAPI MyPlugin. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:1110,plugin,plugin,1110,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,1,['plugin'],['plugin']
Modifiability,"opology.Mapping] Types cleaning in Edge2QuadTopologicalMapping [#3408](https://github.com/sofa-framework/sofa/pull/3408) ; - [SolidMechanics.FEM] Clean and optimise TriangularFEMForceField draw method [#3413](https://github.com/sofa-framework/sofa/pull/3413); - [Topology.Mapping] Replace all beginEdit by writeAccessor to access Loc2GlobMap [#3429](https://github.com/sofa-framework/sofa/pull/3429) ; - [All] Fix unnecessary copy to access topology buffer when const ref can be used [#3446](https://github.com/sofa-framework/sofa/pull/3446) ; - [Lagrangian.Solver] Merge duplicated code into small but expressive functions [#3474](https://github.com/sofa-framework/sofa/pull/3474) ; - [all] Remove compilation warnings [#3494](https://github.com/sofa-framework/sofa/pull/3494) ; - [FEM.Elastic] Clean draw method [#3508](https://github.com/sofa-framework/sofa/pull/3508) ; - [all] Lifecycle v22.12 [#3534](https://github.com/sofa-framework/sofa/pull/3534) . **Plugins / Projects**; - [tutorials] Fix CMakeLists targets [#3200](https://github.com/sofa-framework/sofa/pull/3200) ; - [Project] Start v22.12 dev phase [#3218](https://github.com/sofa-framework/sofa/pull/3218) ; - [SofaImplicitField] Fix CMake for new NG architecture [#3223](https://github.com/sofa-framework/sofa/pull/3223); - [SofaValidation] is a plugin, not a collection [#3296](https://github.com/sofa-framework/sofa/pull/3296) ; - [SofaSimpleGUI] Without compatibility layer [#3301](https://github.com/sofa-framework/sofa/pull/3301) ; - [ExternalBehaviorModel] Without compatibility layer [#3302](https://github.com/sofa-framework/sofa/pull/3302) ; - [SofaCarving] Some cleaning in carvingManager to use link instead of string and clean warning in scenes [#3332](https://github.com/sofa-framework/sofa/pull/3332) ; - [image] Fix CMake warning from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [imag",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:89442,Plugin,Plugins,89442,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"or and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in NarrowPhaseDetection and IntersectorFactory [#3337](https://github.com/sofa-framework/sofa/pull/3337) ; - [Type] Remove explicit template instantiation to restore performances [#3349](https://github.com/sofa-framework/sofa/pull/3349) ; - [Topology] Fix topologyHandler removal [#3369](https://github.com/sofa-framework/sofa/pull/3369) ; - [Mapping.Linear] Fix assert [#3432](https://github.com/sofa-framework/sofa/pull/3432) ; - [DefaultType] fix rigidcoord compilation [#3462](https://github.com/sofa-framework/sofa/pull/3462) ; - Revert ""[Sofa.Core] Linear time getRoot() method in BaseNode and Node"" [#3464](https://github.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:77424,plugin,plugins,77424,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"ore efficiently.; Key points; We have seen how to call a Shader, but we may need to send uniform values to the Shader in order to change parameters on the fly.; 		This can be done with a set of objects called Ogl{Type}{Size}Variable. They can handle a lot of different formats : vectors, matrices, array of vectors in int and float types (see components/visualmodel/OglVariable.h for a list of available types).; Texture can be also given to the Shader, using OglTexture, which has a lot of parameters available; but the most important one is the texture unit id.; Another problem arises if you want to mix different effects (for example: toon shading and normal mapping).; 		You can write a big Shader that does a lot of things, and activate only what you want with a system of macro.; In your favorite editor, open /Sofa/share/shaders/generalRenderingShader.vert and /Sofa/share/shaders/generalRenderingShader.frag.; In the .frag file, look at line 85. This section defines the variables that are needed to execute the Perlin Noise Bump effect.; Now look at line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to ""6"", ""0.9"" and ""0.2"" respectively.; Add a OglIntVariable component and name it ""perlinBumpOctave"". Set the Uniform ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:1095,variab,variables,1095,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,1,['variab'],['variables']
Modifiability,ork/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:235619,Plugin,PluginManager,235619,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,ork/sofa/pull/2277 ); - [SofaSimpleFem] Set valid component state [#2499]( https://github.com/sofa-framework/sofa/pull/2499 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping lost ancestor info [#2460]( https://github.com/sofa-framework/sofa/pull/2460 ); - [SofaUserInteraction] Fix InteractionPerformerFactory symbol export [#2495]( https://github.com/sofa-framework/sofa/pull/2495 ). **Plugins / Projects**; - [CGALPlugin] FIX sofa::type [#2246]( https://github.com/sofa-framework/sofa/pull/2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:152976,variab,variable,152976,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,orrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-framework/sofa/pull/4203); - [LinearSolver] Remove CSparse-based linear solvers [#4258](https://github.com/sofa-framework/sofa/pull/4258); - [Common] Add message to make the fetch mechanism less hidden [#4310](https://github.com/sofa-framework/sofa/pull/4310); - [Simulation.Core] Deprecate LocalStorage feature [#4327](https://github.com/sofa-framework/sofa/pull/4327). ## [v23.06.00]( https://github.com/sofa-framework/sofa/tree/v23.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.12..v23.06 ). ### Highlighted contributions. - [LinearSystem] Refactor matrix assembly [#2777](https://github.com/sofa-framework/sofa/pull/2777) ; - [Core] Introduce parallel for each [#3548](https://github.com/sofa-framework/sofa/pull/3548) ; - [MultiThreading] Introduce ParallelTetrahedronFEMForceField [#3552](https://github.com/sofa-framework/sofa/pull/3552) ; - [examples] Apply Sofa/Component structure for all examples [#3588](https://github.com/sofa-framework/sofa/pull/3588) . ### Breaking. **Architecture**; - [all] Lifecycle v23.06 1/n [#3634](https://github.com/sofa-framework/sofa/pull/3634) ; - [all] Lifecycle v23.06 2/n [#3649](https://github.com/sofa-framework/sofa/pull/3649) ; - [all] Lifecycle v23.06 3/n [#3654](https://github.com/sofa-framework/sofa/pull/3654) ; - [all] Lifecycle v23.06 4/n [#3655](https://github.com/sofa-framework/sofa/pull/3655) ; - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https://github.com/sofa-framework/sofa/pull/3665) ; - [Helper] Improve OptionsGroup [#3737](https://github.com/sofa-framework/sofa/pu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:50236,Refactor,Refactor,50236,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"ou will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an OglModel component to draw the mesh on the screen and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automatically done by the SkinningMapping if we have a skinned mesh). Examples.       The file example.scn (located in the folder : ColladaSceneLoader/Demos/ ) which loads the collada file ""example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is v",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:2889,plugin,plugin,2889,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['plugin'],['plugin']
Modifiability,ove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.12.00...v22.06.00 ). ### SOFA-NG. **Architecture**; - [SofaNG] Dispatch SofaHaptics and SofaValidation [#3041]( https://github.com/sofa-framework/sofa/pull/3041 ); - [SofaNG] Dispatch useful SofaMiscCollision components into S.C.Collision [#2896]( https://github.com/sofa-framework/sofa/pull/2896 ); - [SofaNG] Re-organize Framework [#2876]( https://github.com/sofa-framework/sofa/pull/2876 ); - [SofaNG] Re-organize unit tests [#2873]( https://github.com/sofa-framework/sofa/pull/2873 ); - [SofaNG] Setup AnimationLoop [#2797]( https://github.com/sofa-framework/sofa/pul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:91485,Refactor,Refactoring,91485,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactoring']
Modifiability,"parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights (remove Glu calls and set matrices as data) + Fix typo in Camera; - quaternion to euler: not need for the hack since atan2 is used. - [SofaPython]; - clean examples; - clean the hard-binding example; - clean noPicking visitor. - [Flexible]; - remove unecessary data for Gauss points visualization; - some clean regarding openmp parallelisation; - clean metaFF; - remove unecessary apply in reinit; - clean FlexibleCorotationalMeshFEMForceField. - [Compliant]; - clean RigidJoint{Multi}Mapping. ____________________________________________________________. ## [v15.12]( https://github.com/sofa-framework/sofa/tree/v15.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v15.09...v15.12 ). ____________________________________________________________. ## [v15.09]( https://github.com/sofa-framework/sofa/tree/v15.09 ). [Full log]( https://github.com/sofa-framework/sofa/compare/release-v15.12...v15.09 ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:361237,Flexible,Flexible,361237,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['Flexible'],"['Flexible', 'FlexibleCorotationalMeshFEMForceField']"
Modifiability,part 4) [#2390]( https://github.com/sofa-framework/sofa/pull/2390 ); - [SofaMiscFem] Remove debug code [#2420]( https://github.com/sofa-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel w,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162413,variab,variable,162413,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,"plit between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS_DEBUG STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS ""${SOFACONFIG_LINK_OPTIONS}""); set_target_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:13142,CONFIG,CONFIG,13142,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,['CONFIG'],['CONFIG']
Modifiability,"pp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrOBBOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrSphereOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrTriangleOBB.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/IntrUtility3.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/MeshIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntTool.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/detection/intersection/OBBIntersection.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/CapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/OBBModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/geometry/RigidCapsuleModel.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/CapsuleContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/contact/OBBContact.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/CapsuleContactMapper.h; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.cpp; ${COLLISIONOBBCAPSULE_SRC_DIR}/response/mapper/OBBContactMapper.h; ). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED) # for performers. add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(COLLISIONOBBCAPSULE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(COLLISIONOBBCAPSULE_BUILD_TESTS); enable_testing(); add_subdirectory(CollisionOBBCapsule_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt:3890,Config,Config,3890,applications/plugins/CollisionOBBCapsule/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CollisionOBBCapsule/CMakeLists.txt,2,"['Config', 'plugin']","['Config', 'plugins']"
Modifiability,precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tree build [#2940]( https://github.com/sofa-framework/sofa/pull/2940 ); - [CMake] FIX out-of-tree build (2) [#2953]( https://github.com/sofa-framework/sofa/pull/2953 ); - [CMake] FIX out-of-tree configure [#2891]( https://github.com/sofa-framework/sofa/pull/2891 ); - [CMake] Fix install config files [#3031]( https://github.com/sofa-framework/sofa/pull/3031 ); - [Config][CMake] Fix include directories [#3023]( https://github.com/sofa-framework/sofa/pull/3023 ); - [project] Remove duplicate entry in clang-format [#3140]( https://github.com/sofa-framework/sofa/pull/3140 ). **Modules**; - [All] Fix compilation when SOFA_FLOATING_POINT_TYPE is set to float [#2560]( https://github.com/sofa-framework/sofa/pull/2560 ); - [All] Move addInput/addOutput from init() to constructor [#2825]( https://github.com/sofa-framework/sofa/pull/2825 ); - [All] Fix missing #include config.h or invalid ordering that disturb the factory's getTarget() to operate properly. [#2693]( https://github.com/sofa-framework/sofa/pull/2693 ); - [Component.IO.Mesh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *GeometryAlgorithms [#3034]( https://github.com/sofa-framework/sofa/pull/3034 ); - [Controller] Fix specialization issue in inline file [#3182]( https://github.com/sofa-framework/sofa/pull/3182 ); - ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:104525,Config,Config,104525,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and; modification follow. TERMS AND CONDITIONS. 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work; in a fashion requiring copyright permission, other than the making of an; exact copy. The resulting work is called a ""modified version"" of the; earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based; on the Program. To ""propagate"" a work means to do anything with it that, without; permission, would make you directly or secondarily liable for; infringement under applicable copyright law, except executing it on a; computer or modifying a private copy. Propagation includes copying,; distribution (with or without modification), making available to the; public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other; parties to make or receive copies. Mere interaction with a user through; a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices""; to the extent that it includes a convenient and promi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:22892,adapt,adapt,22892,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['adapt'],['adapt']
Modifiability,ps://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81662,plugin,plugin,81662,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,ps://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] F,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59383,refactor,refactor,59383,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactor']
Modifiability,ps://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchable SoftRobots [#3882](https://github.com/sofa-framework/sofa/pull/3882); - [Sofa.Simulation] First steps to remove the singleton Simulation [#3889](https://github.com/sofa-framework/sofa/pull/3889); - [plugins] ADD external collisions plugins [#3890](https://github.com/sofa-framework/sofa/pull/3890); - [LinearAlgebra] Implement CompressedRowSparseMatrixConstraint [#3894](https://github.com/sofa-framework/sofa/pull/3894); - [Simulation.Core] Refactor DefaultAnimationLoop + multithreading [#3959](https://github.com/sofa-framework/sofa/pull/3959); - [LinearSolver.Direct] Parallelization of H A^-1 H^T in SparseLDLSolver [#3986](https://github.com/sofa-framework/sofa/pull/3986); - [LinearSystem] Optim: Only account for affected DoFs [#4001](https://github.com/sofa-framework/sofa/pull/4001); - [GitHub] Action to check labels [#4079](https://github.com/sofa-framework/sofa/pull/4079); - [MultiThreading] Introduce parallel CG [#4138](https://github.com/sofa-framework/sofa/pull/4138); - [LinearSystem] Introduce constant sparsity matrix assembly [#4158](https://github.com/sofa-framework/sofa/pull/4158); - [LinearSolver] Implement parallel inverse product for all linear solvers [#4255](https://github.com/sofa-framework/sofa/pull/4255). ### Breaking; - [Constraint.Lagrangian] Activate the export of lambda forces by default [#3857](https://github.com/sofa-framework/sofa/pull/3857); - [all] Change variable name supportOnlySymmetricMatrix in MParams [#3861](https://git,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:21994,Refactor,Refactor,21994,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,ptions [#2170]( https://github.com/sofa-framework/sofa/pull/2170 ); - [SofaMiscCollision] Fix multiple bugs in group manager [#2076]( https://github.com/sofa-framework/sofa/pull/2076 ); - [SofaMiscCollision] Move OBB/Capsule (and related Intr* Code) [#2168]( https://github.com/sofa-framework/sofa/pull/2168 ); - [SofaMiscMapping] Factorize code to remove duplicated struct [#1957]( https://github.com/sofa-framework/sofa/pull/1957 ); - **[SofaSimulationCore]** Move CpuTask class into its own file [#1993]( https://github.com/sofa-framework/sofa/pull/1993 ); - **[SofaSimulationCore]** Simplify repetitive code in BaseMechanicalVisitor [#2125]( https://github.com/sofa-framework/sofa/pull/2125 ); - **[SofaSimulationGraph]** Remove dead-end experiment in SimpleApi.h [#1845]( https://github.com/sofa-framework/sofa/pull/1845 ); - [SofaTopologyMapping] adds ellipse feature to Edge2QuadTopologyMapping [#1861]( https://github.com/sofa-framework/sofa/pull/1861 ). **Plugins / Projects**; - [CGALPlugin] new features [#2124]( https://github.com/sofa-framework/sofa/pull/2124 ). ### Improvements; **Architecture**; - [CMake] Speedup configure step [#1837]( https://github.com/sofa-framework/sofa/pull/1837 ); - [CMake] ADD option to fetch pull-request commits in ExternalProject [#1961]( https://github.com/sofa-framework/sofa/pull/1961 ); - [CMake] ADD option to enable/disable compatibility layer [#2216]( https://github.com/sofa-framework/sofa/pull/2216 ). **Modules**; - **[SofaBaseCollision]** BVH narrow phase [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseCollision]** Introduce brute force broad phase [#2010]( https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollision]** Speedup direct SAP [#1917]( https://github.com/sofa-framework/sofa/pull/1917 ); - **[SofaBaseMechanics_test]** Add TopologicalChanges unit tests for DiagonalMass [#2176]( https://github.com/sofa-framework/sofa/pull/2176 ); - **[SofaBaseTopology]** add intersection methods [#2131],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:176059,Plugin,Plugins,176059,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,ramework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Impro,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:257542,Refactor,Refactor,257542,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,ramework/sofa/pull/886 ); - [All] Remove bunch of warnings (again) [#1065]( https://github.com/sofa-framework/sofa/pull/1065 ); - [All] remove #ifdef SOFA_HAVE_GLEW [#1077]( https://github.com/sofa-framework/sofa/pull/1077 ); - **[SofaLoader]** Change error into warning in MeshVTKLoader [#1037]( https://github.com/sofa-framework/sofa/pull/1037 ); - [SofaConstraint] Replaced sout calls by msg_info() in LCPConstraintSolver [#981]( https://github.com/sofa-framework/sofa/pull/981 ); - [SofaGeneralLinearSolver] Clean BTDLinearSolver [#907]( https://github.com/sofa-framework/sofa/pull/907 ); - [SofaHaptics] Replace deprecated INCLUDE_ROOT_DIR in CMakeLists.txt [#1023]( https://github.com/sofa-framework/sofa/pull/1023 ); - **[SofaKernel]** Brainless Warnings cleaning [#971]( https://github.com/sofa-framework/sofa/pull/971 ); - **[SofaKernel]** Minor code refactor in BaseData & new StringUtils functions. [#860]( https://github.com/sofa-framework/sofa/pull/860 ); - **[SofaKernel]** Refactor DataTrackerEngine so it match the DataCallback [#1073]( https://github.com/sofa-framework/sofa/pull/1073 ); - **[SofaKernel]** Remove annoying warning [#1062]( https://github.com/sofa-framework/sofa/pull/1062 ); - **[SofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:272984,Refactor,Refactor,272984,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,rangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:75593,Plugin,Plugins,75593,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"relasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in B",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:309584,Extend,Extend,309584,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Extend'],['Extend']
Modifiability,"ression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze] Fix initialization of distance type [#4711](https://github.com/sofa-framework/sofa/pull/4711); - [SceneUtility] Initialize pointer to nullptr [#4712](https://github.com/sofa-framework/sofa/pull/4712); - [SofaCUDA] extern template instantiations [#4714](https://github.com/sofa-framework/sofa/pull/4714); - [image_gui] Make it a cleaner SOFA module [#4719](https://github.com/sofa-framework/sofa/pull/4719); - [SensableEmulation] Fix module name [#4721](https://github.com/sofa-framework/sofa/pull/4721); - [tests] Adapt code to any Eigen version [#4724](https://github.com/sofa-framework/sofa/pull/4724); - [image,Mapping.NonLinear] Properly includes config.h before ObjectFactory.h [#4726](https://github.com/sofa-framework/sofa/pull/4726); - [tests] Fix and test value type string of topology primitives [#4732](https://github.com/sofa-framework/sofa/pull/4732); - [MultiThreading] Fix module name in BeamLinearMapping_mt [#4740](https://github.com/sofa-framework/sofa/pull/4740); - [image_gui] Fix module name [#4741](https://github.com/sofa-framework/sofa/pull/4741); - [Analyze] Fix typos [#4742](https://github.com/sofa-framework/sofa/pull/4742); - [PlayBack] Add option to set period in the WriteStateCreator visitor [#4744](https://github.com/sofa-framework/sofa/pull/4744); - [Core] Missing closing brace [#4753](https://github.com/sofa-framework/sofa/pull/4753); - [Helper] Fix dl open when path are not canonical [#4754](https://github.com/sofa-framework/sofa/pull/4754). ### Cleaning. - [MechanicalLoad] Add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:10946,Adapt,Adapt,10946,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Adapt'],['Adapt']
Modifiability,rint week2 [#884]( https://github.com/sofa-framework/sofa/pull/884 ); - [All] minor cleaning of warnings and bugfix [#886]( https://github.com/sofa-framework/sofa/pull/886 ); - [All] Remove bunch of warnings (again) [#1065]( https://github.com/sofa-framework/sofa/pull/1065 ); - [All] remove #ifdef SOFA_HAVE_GLEW [#1077]( https://github.com/sofa-framework/sofa/pull/1077 ); - **[SofaLoader]** Change error into warning in MeshVTKLoader [#1037]( https://github.com/sofa-framework/sofa/pull/1037 ); - [SofaConstraint] Replaced sout calls by msg_info() in LCPConstraintSolver [#981]( https://github.com/sofa-framework/sofa/pull/981 ); - [SofaGeneralLinearSolver] Clean BTDLinearSolver [#907]( https://github.com/sofa-framework/sofa/pull/907 ); - [SofaHaptics] Replace deprecated INCLUDE_ROOT_DIR in CMakeLists.txt [#1023]( https://github.com/sofa-framework/sofa/pull/1023 ); - **[SofaKernel]** Brainless Warnings cleaning [#971]( https://github.com/sofa-framework/sofa/pull/971 ); - **[SofaKernel]** Minor code refactor in BaseData & new StringUtils functions. [#860]( https://github.com/sofa-framework/sofa/pull/860 ); - **[SofaKernel]** Refactor DataTrackerEngine so it match the DataCallback [#1073]( https://github.com/sofa-framework/sofa/pull/1073 ); - **[SofaKernel]** Remove annoying warning [#1062]( https://github.com/sofa-framework/sofa/pull/1062 ); - **[SofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:272856,refactor,refactor,272856,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactor']
Modifiability,"rk/sofa/pull/2799 ); - [SofaDeformable] Handle division by zero in MeshSpringForceField [#2596]( https://github.com/sofa-framework/sofa/pull/2596 ); - [SofaDeformable] Springs are able to compute their bounding box [#2599]( https://github.com/sofa-framework/sofa/pull/2599 ); - [SofaEngine] Fix BoxROI undefined behavior [#2604]( https://github.com/sofa-framework/sofa/pull/2604 ); - [SofaFramework] Add tests on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:112985,variab,variables,112985,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,rnel]** Fix: remove unwanted AdvanceTimer::begin command [#1029]( https://github.com/sofa-framework/sofa/pull/1029 ); - **[SofaKernel]** Remove warnings [#968]( https://github.com/sofa-framework/sofa/pull/968 ); - **[SofaKernel]** several small fix [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.co,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269039,Plugin,Plugins,269039,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"rnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/pull/3545) ; - [GUI] GUI libraries as plugins [#3550](https://github.com/sofa-framework/sofa/pull/3550) ; - [LinearAlgebra, LinearSolver.Direct] make getSubMatrixDim() compile-time constant [#3556](https://github.com/sofa-framework/sofa/pull/3556) ; - [FEM.Elastic] Consistent default values for poisson's ratio and Young's modulus [#3563](https://github.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:63035,refactor,refactoring,63035,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactoring']
Modifiability,"rsistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin SofaSimpleGUI SofaSimpleGUI) # SofaSimpleGUI plugin can't work without OPENGL; sofa_add_subdirectory(plugin VolumetricRendering VolumetricRendering) # VolumetricRendering plugin can't work without OPENGL; else(); message(""Sofa.GL not found; disabling SofaSimpleGUI and Vol",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:3236,plugin,plugin,3236,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"ry(plugin CImgPlugin CImgPlugin) # ON by default and first as it is used by other plugins.; sofa_add_subdirectory(plugin ArticulatedSystemPlugin ArticulatedSystemPlugin ON); sofa_add_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaH",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1438,plugin,plugin,1438,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"s absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:4111,config,config,4111,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['config'],['config']
Modifiability,"s activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340728,config,configuration,340728,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,"s and topology warnings [#1111]( https://github.com/sofa-framework/sofa/pull/1111 ); - **[SofaKernel]** Small Fix in CollisionModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links for input and output topologies of the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:252838,plugin,plugin,252838,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"s not available for anyone; to copy, free of charge and under the terms of this License, through a; publicly available network server or other readily accessible means,; then you must either (1) cause the Corresponding Source to be so; available, or (2) arrange to deprive yourself of the benefit of the; patent license for this particular work, or (3) arrange, in a manner; consistent with the requirements of this License, to extend the patent; license to downstream recipients. ""Knowingly relying"" means you have; actual knowledge that, but for the patent license, your conveying the; covered work in a country, or your recipient's use of the covered work; in a country, would infringe one or more identifiable patents in that; country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or; arrangement, you convey, or propagate by procuring conveyance of, a; covered work, and grant a patent license to some of the parties; receiving the covered work authorizing them to use, propagate, modify; or convey a specific copy of the covered work, then the patent license; you grant is automatically extended to all recipients of the covered; work and works based on it. A patent license is ""discriminatory"" if it does not include within; the scope of its coverage, prohibits the exercise of, or is; conditioned on the non-exercise of one or more of the rights that are; specifically granted under this License. You may not convey a covered; work if you are a party to an arrangement with a third party that is; in the business of distributing software, under which you make payment; to the third party based on the extent of your activity of conveying; the work, and under which the third party grants, to any of the; parties who would receive the covered work from you, a discriminatory; patent license (a) in connection with copies of the covered work; conveyed by you (or copies made from those copies), or (b) primarily; for and in connection wit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:45637,extend,extended,45637,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['extend'],['extended']
Modifiability,"s. ### Base rules; The base rules are in Google C++ Style Guide: https://google.github.io/styleguide/cppguide.html ; All rules below **replace** the corresponding base rules. ; For any subject not mentionned below, please refer to the base. ### Commit message; A correct commit message must therefore be structured as: ; `[NAME_OF_MODULE_OR_PLUGIN] ACTION message` ; where ACTION includes ADD, REMOVE, FIX, CLEAN, REVERT. ; Example: `[SofaKernel] ADD test for the mass conservation in UniformMass` . ### Naming; Identifiers must respect the following conventions:. - [N1] Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; while (x == y); {; something();; someth",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:1008,variab,variables,1008,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,2,['variab'],['variables']
Modifiability,"s/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:3820,config,config,3820,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['config'],['config']
Modifiability,"s/gtest] Update gtest & clean the CMakeLists.txt [#604]( https://github.com/sofa-framework/sofa/pull/604 ). ### Cleanings. **Architecture**; - [CMake] Remove the option SOFA_GUI_INTERACTION and its associated codes/macro [#643]( https://github.com/sofa-framework/sofa/pull/643 ). **Modules**; - [All] CMake: Remove COMPONENTSET, keep DEPRECATED [#586]( https://github.com/sofa-framework/sofa/pull/586 ); - [All] CLEAN topology classes [#693]( https://github.com/sofa-framework/sofa/pull/693 ); - **[SofaHelper]** CLEAN commented code and double parentheses in Messaging.h [#587]( https://github.com/sofa-framework/sofa/pull/587 ); - **[SofaKernel]** Header include cleanup [#638]( https://github.com/sofa-framework/sofa/pull/638 ); - **[SofaKernel]** Remove unused function ""renumberConstraintId"" [#691]( https://github.com/sofa-framework/sofa/pull/691 ). **Plugins / Projects**; - [CImgPlugin] Less scary config warnings [#607]( https://github.com/sofa-framework/sofa/pull/607 ); - [HeadlessRecorder] Handle errors in target config [#608]( https://github.com/sofa-framework/sofa/pull/608 ); - [SofaGUI] Move GlutGUI to projects and remove all glut references in SofaFramework [#598]( https://github.com/sofa-framework/sofa/pull/598 ); - [SofaGUI] CMake: Remove useless if block in qt CMakelists.txt [#590]( https://github.com/sofa-framework/sofa/pull/590 ); - [SofaPhysicsAPI] FIX: remove the include of glut [#659]( https://github.com/sofa-framework/sofa/pull/659 ). ____________________________________________________________. ## [v17.12]( https://github.com/sofa-framework/sofa/tree/v17.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.06...v17.12 ). ### Deprecated. **Kernel modules**; - Will be removed in v17.12; - [All]; - SMP support [#457]( https://github.com/sofa-framework/sofa/pull/457 - no more maintained ); - [SofaDefaultType]; - LaparoscopicRigidType [#457]( https://github.com/sofa-framework/sofa/pull/457 ) - not used/dont compiled for a really long time. - Wil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:300429,config,config,300429,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['config']
Modifiability,s://github.com/sofa-framework/sofa/pull/1533 ); - [InvertibleFVM] Externalize the plugin [#1443]( https://github.com/sofa-framework/sofa/pull/1443 ). ____________________________________________________________. ## [v20.06]( https://github.com/sofa-framework/sofa/tree/v20.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framework/sofa/pull/1302 ). **Modules**; - [All] BaseClass reflection refactoring [#1283]( https://github.com/sofa-framework/sofa/pull/1283 ); - [All] Remove Aspects from Sofa [#1269]( https://github.com/sofa-framework/sofa/pull/1269 ); - [All] Remove compilation warnings related to collision models [#1301]( https://github.com/sofa-framework/sofa/pull/1301 ); - [All] Update code base according to refactoring done in PR1283. [#1330]( https://github.com/sofa-framework/sofa/pull/1330 ); - [All] Remove all deprecation warnings after v1912 [#1241]( https://github.com/sofa-framework/sofa/pull/1241 ); - [All] v19.12 changes + DocBrowser by Defrost [#1275]( https://github.com/sofa-framework/sofa/pull/1275 ); - **[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:229812,refactor,refactoring,229812,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactoring']
Modifiability,"s://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); - [All] Merge TopologySubsetData and TopologySparseData [#2114]( https://github.com/sofa-framework/sofa/pull/2114 ); - [All] Merge branch topologyChanges_PoC introducing topological changes callbacks [#2228]( https://github.com/sofa-framework/sofa/pull/2228 ); - [All] Remove ForceMask [#2316]( https://github.com/sofa-framework/sofa/pull/2316 ); - [All] Update collision response names [#2522]( https://github.com/sofa-framework/sofa/pull/2522 ); - [Sofa.BaseTopology] Remove 1D template for 2D/3D primitives in topology algorithms [#2291]( https://github.com/sofa-framework/sofa/pull/2291 ); - [Sofa.Core] Deprecate officially the usage of SofaOStream (sout, serr, sendl in Base) [#2292]( https://github.com/sofa-framework/sofa/pull/2292 ); - [Sofa.Core] Factorize ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:135811,Plugin,Plugins,135811,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,s://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:317702,Refactor,Refactor,317702,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - Fix override warnings [#423]( https://github.com/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:315425,extend,extend,315425,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['extend', 'plugin']","['extend', 'plugin']"
Modifiability,"ses in a manner consistent with the requirements of; this License. Each contributor grants you a non-exclusive, worldwide, royalty-free; patent license under the contributor's essential patent claims, to; make, use, sell, offer for sale, import and otherwise run, modify and; propagate the contents of its contributor version. In the following three paragraphs, a ""patent license"" is any express; agreement or commitment, however denominated, not to enforce a patent; (such as an express permission to practice a patent or covenant not to; sue for patent infringement). To ""grant"" such a patent license to a; party means to make such an agreement or commitment not to enforce a; patent against the party. If you convey a covered work, knowingly relying on a patent license,; and the Corresponding Source of the work is not available for anyone; to copy, free of charge and under the terms of this License, through a; publicly available network server or other readily accessible means,; then you must either (1) cause the Corresponding Source to be so; available, or (2) arrange to deprive yourself of the benefit of the; patent license for this particular work, or (3) arrange, in a manner; consistent with the requirements of this License, to extend the patent; license to downstream recipients. ""Knowingly relying"" means you have; actual knowledge that, but for the patent license, your conveying the; covered work in a country, or your recipient's use of the covered work; in a country, would infringe one or more identifiable patents in that; country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or; arrangement, you convey, or propagate by procuring conveyance of, a; covered work, and grant a patent license to some of the parties; receiving the covered work authorizing them to use, propagate, modify; or convey a specific copy of the covered work, then the patent license; you grant is automatically extended to all recipients of the c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:44916,extend,extend,44916,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['extend'],['extend']
Modifiability,"shadow variable [#4455](https://github.com/sofa-framework/sofa/pull/4455); - [Defaulttype, LinearAlgera] Fix warnings [#4465](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [C",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15036,Plugin,Plugins,15036,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"so reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is SofaHAPI.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP registration. Sponsors. Do not forget to thank your; sponsors, they love it !. HowTo; Code documentation . can be generated using doxygen. In Unix; systems, simply type doxygen; Doxyfile in the doc directory. LaTeX formulas. can be directly copy-pasted from .tex to this html document thanks to the mathjax config and; script included in the header. Equation numbering and cross-referencing works, as well a newcommand. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:1988,plugin,plugin,1988,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,4,"['config', 'plugin']","['config', 'plugin']"
Modifiability,sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framework/sofa/pull/1302 ). **Modules**; - [All] BaseClass reflection refactoring [#1283]( https://github.com/sofa-framework/sofa/pull/1283 ); - [All] Remove Aspects from Sofa [#1269]( https://github.com/sofa-framework/sofa/pull/1269 ); - [All] Remove compilation warnings related to collision models [#1301]( https://github.com/sofa-framework/sofa/pull/1301 ); - [All] Update code base according to refactoring done in PR1283. [#1330]( https://github.com/sofa-framework/sofa/pull/1330 ); - [All] Remove all deprecation warnings after v1912 [#1241]( https://github.com/sofa-framework/sofa/pull/1241 ); - [All] v19.12 changes + DocBrowser by Defrost [#1275]( https://github.com/sofa-framework/sofa/pull/1275 ); - **[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sofa-framework/sofa/pull/1404 ); - **[SofaCore]** ADD directory DataFileNames [#1407]( https://github.com/sofa-framework/sofa/pull/1407 ); - **[SofaKernel]** Refactor DDGNode [#1372]( https://github.com/sofa-framework/sofa/pull/1372 ); - **[SofaKernel]** Totally remove the macro CHECK_TOPOLOGY from BaseMeshTopo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:230142,refactor,refactoring,230142,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactoring']
Modifiability,"sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ). **Plugins / Projects**; - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( htt",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:212483,Plugin,PluginManager,212483,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,sofa-framework/sofa/pull/453 ); - CHANGE USE_MASK option to off by default [#532]( https://github.com/sofa-framework/sofa/pull/532 ); - [SofaBoundaryCondition]; - ADD flag PROJECTVELOCITY [#288]( https://github.com/sofa-framework/sofa/pull/288 ); - make LinearMovementConstraint accept absolute movements [#394]( https://github.com/sofa-framework/sofa/pull/394 ); - [SofaCore]; - Add some read/write free method to construct Data Read/WriteAccessor [#450]( https://github.com/sofa-framework/sofa/pull/450 ); - [SofaDefaulttype]; - MapMapSparseMatrix conversion utils with Eigen Sparse [#452]( https://github.com/sofa-framework/sofa/pull/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using SingleLink [#315]( https://github.com/sofa-framework/sofa/pull/315 ); - Add AngularSpringForceField [#334]( https://github.com/sofa-framework/sofa/pull/334 ); - [SofaEulerianFluid]; - Pluginizing the module [#396]( https://github.com/sofa-framework/sofa/pull/396 ); - [SofaExporter]; - Clean & test the exporter [#372]( https://github.com/sofa-framework/sofa/pull/372 ); - [SofaGraphComponent]; - Add SceneCheckerVisitor to detect missing RequiredPlugin [#306]( https://github.com/sofa-framework/sofa/pull/306 ); - Add a mechanism (SceneChecker) to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - Refactor the SceneChecker and add a new SceneChecker to test dumplicated names [#392]( https://github.com/sofa-framework/sofa/pull/392 ); - [SofaGeneralEngine]; - Add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - Add a computeBBox to the SmoothMeshEngine [#409]( https://github.com/sofa-framework/sofa/pull/409 ); - [SofaGeneralObjectInteraction]; - issofa_attachconstraint [#501]( https://github.com/sofa-framework/sofa/pull/501 ); - [SofaMisc]; - Add a data repository at,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:307418,Plugin,Pluginizing,307418,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginizing']
Modifiability,sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/sofa/pull/1000 ); - [SofaCUDA] Fix windows compilation. [#966]( https://github.com/sofa-framework/sofa/pull/966 ); - [SofaPython] FIX allow the derivTypeFromParentValue to work with node. [#984]( https://github.com/sofa-framework/sofa/pull/984 ); - [SofaPython] FIX example broken by PR#459 [#1020]( https://github.com/sofa-framework/sofa/pull/1020 ); - [SofaPython] FIX the broken Binding_Data::setValue() [#1006]( https://github.com/sofa-framework/sofa/pull/1006 ); - [SofaPython] Fix duplicate symbol [#1036]( https://github.com/sofa-framework/sofa/pull/1036 ); - [SofaPython] FIX: removing PythonLibs target from SofaPython [#891]( https://github.com/sofa-framework/sofa/pull/8,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269917,plugin,plugin,269917,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,sofa/pull/2072 ); - [HeadlessRecorder] CLEAN Headless recorder [#2058]( https://github.com/sofa-framework/sofa/pull/2058 ); - [LMConstraint] Move LMConstraint components in a new plugin [#1659]( https://github.com/sofa-framework/sofa/pull/1659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:207752,variab,variable,207752,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,sofa/pull/2766 ); - [SofaNG] Setup Topology [#2612]( https://github.com/sofa-framework/sofa/pull/2612 ); - [SofaNG] Setup Visual [#2679]( https://github.com/sofa-framework/sofa/pull/2679 ); - [SofaNG] Setup cmake and add ODESolver [#2571]( https://github.com/sofa-framework/sofa/pull/2571 ). **Modules**; - [Sofa] Compilation without Compatibility mode [#2975]( https://github.com/sofa-framework/sofa/pull/2975 ); - [Component.Compat] Remove wrong mappings in compat layer [#2705]( https://github.com/sofa-framework/sofa/pull/2705 ); - [S.C.Engine.Generate] Convert and move MeshTetraStuffing as an engine [#2917]( https://github.com/sofa-framework/sofa/pull/2917 ); - [Sofa.Component.ODESolver] Gather tests + create Sofa.Component.ODESolver.Testing [#2650]( https://github.com/sofa-framework/sofa/pull/2650 ); - [Sofa.Component] Remove empty test projects and move/clean tests from SofaBoundaryCondition [#2991]( https://github.com/sofa-framework/sofa/pull/2991 ); - [Sofa.GUI] Clean CMake variables [#2974]( https://github.com/sofa-framework/sofa/pull/2974 ); - [Sofa.Helper] Refresh ComponentChange info list [#2986]( https://github.com/sofa-framework/sofa/pull/2986 ); - [Sofa.Helper] clean ComponentChange and add new category [#2565]( https://github.com/sofa-framework/sofa/pull/2565 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:94817,variab,variables,94817,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,ssue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework/sofa/issues/1633 ); - [modules] Set relocatable flags to pluginized modules [#1604]( https://github.com/sofa-framework/sofa/pull/1604 ); - [SofaCommon] Make SofaCommon a deprecated collection [#1609]( https://github.com/sofa-framework/sofa/pull/1609 ); - [SofaGeneral] Make SofaGeneral a deprecated collection [#1596]( https://github.com/sofa-framework/sofa/pull/1596 ); - [SofaGeneral] Move BVH-format feature from Helper to SofaGeneralRigid [#1644]( https://github.com/sofa-framework/sofa/pull/1644 ). ### Breaking; **Architecture**; - [SofaMacros] Refactor for better target and package management [#1433]( https://github.com/sofa-framework/sofa/pull/1433 ). **Modules**; - [All] Change index_type from size_t to uint [#1514]( https://github.com/sofa-framework/sofa/pull/1514 ); - [All] Deprecate m_componentstate and rename to d_componentState [#1358]( https://github.com/sofa-framework/sofa/pull/1358 ); - [All] Factorize and rename TopologyObjectType into TopologyElementType [#1593]( https://github.com/sofa-framework/sofa/pull/1593 ); - [All] Remove topologyAlgorithms classes [#1546]( https://github.com/sofa-framework/sofa/pull/1546 ); - [All] Standardize index type for Vector/Matrix templates [#1453]( https://github.com/sofa-framework/sofa/pull/1453 ); - [All] Uniform size type [#1515]( https://github.com/sofa-framework/sofa/pull/1515 ); - **[SofaKernel]** Refactor BaseData to use DataLink [#1491]( https://github.com/sofa-framework/sofa/pull/1491 ); - **[SofaKernel]** ♻️ FIX & CLEANUP BoxROI [#1482]( https://github.com/sofa-framework/sofa/pull/1,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:215474,Refactor,Refactor,215474,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"stanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1784,plugin,plugin,1784,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['plugin'],['plugin']
Modifiability,"stic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https://github.com/sofa-framework/sofa/pull/2838 ); - [HyperElastic] Introduce example scene for StandardTetrahedralFEMForceField [#2857]( https://github.com/sofa-framework/sofa/pull/2857 ); - [LinearSolver.Direct] LU solver can be templated to CRSMat3x3 [#2862]( https://github.com/sofa-framework/sofa/pull/2862 ); - [LinearSolver.Direct] Unit tests around SparseLDLSolver [#3050]( https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https://github.com/sofa-framework/sofa/pull/2776 ); - [SceneUtility] Move RequiredPlugin to Sofa.SimulationCore [#2849]( https://github.com/sofa-framework/sofa/pull/2849 ); - [Simulation.Core] Special message if extension is Python [#2998]( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:99652,Config,Config,99652,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,store and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-framework/sofa/pull/2872 ); - [Topology.Container] Fix save/restoreLastState in draw method were missing [#3143]( https://github.com/sofa-framework/sofa/pull/3143 ). **Plugins / Projects**; - [ArticulatedSystemMapping] Fixed draw method [#3095]( https://github.com/sofa-framework/sofa/pull/3095 ); - [CollisionOBBCapsule] Fix compat for mappers [#2903]( https://github.com/sofa-framework/sofa/pull/2903 ); - [CollisionOBBCapsule] Fi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113971,config,configuration,113971,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,t viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://github.com/sofa-framework/sofa/pull/1317 ); - [SofaOpenCL] Make it work with 20.06 [#1361]( https://github.com/sofa-framework/sofa/pull/1361 ); - [SofaPython] Restrict the plugin and its dependers to C++11 [#1284]( https://github.com/sofa-framework/sofa/pull/1284 ). **Examples / Sce,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:237110,Plugin,Plugins,237110,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"t] FIX ""show grid"" (G) shortcut for QGLViewer [#2151]( https://github.com/sofa-framework/sofa/pull/2151 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] Fix compat file SofaGuiQt.h [#2044]( https://github.com/sofa-framework/sofa/pull/2044 ); - [SofaGuiQt] Fix compilation [#1889]( https://github.com/sofa-framework/sofa/pull/1889 ); - [SofaGuiQt] Fix compilation when SOFA_DUMP_VISITOR is enabled [#1914]( https://github.com/sofa-framework/sofa/pull/1914 ); - [SofaGuiQt] Use opaque API instead [#1918]( https://github.com/sofa-framework/sofa/pull/1918 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framewo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:187487,Plugin,PluginManager,187487,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginManager']
Modifiability,test headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://githu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8469,Config,Config,8469,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:117311,plugin,plugins,117311,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,thub.com/sofa-framework/sofa/pull/1831 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaCUDA] Ignore example scenes using SofaCUDA on CI [#2042]( https://github.com/sofa-framework/sofa/pull/2042 ); - [SofaCUDA] Quick fix for SofaCUDA NVCC flags include not found during CMake setup [#2022]( https://github.com/sofa-framework/sofa/pull/2022 ); - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ); - [SofaComponentAll] FIX build with disabled dependencies [#1940]( https://github.com/sofa-framework/sofa/pull/1940 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaOpenCL] Remove use of deleted functions [#1880]( https://github.com/sofa-framework/sofa/pull/1880 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaSphFluid] Fix ParticleSink init and refresh all examples. [#2026]( https://github.com/sofa-framework/sofa/pull/2026 ); - [Tutorials] Resurrect tutorials projects [#2024]( https://github.com/sofa-framework/sofa/pull/2024 ); - [VolumetricRendering] Fix compilation due to removal of params [#1869]( https://github.com/sofa-framework/sofa/pull/1869 ); - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ); - [examples] FIX scene name for Regression_test [#1881]( https://github.com/sofa-framework/sofa/pull/1881 ); - [examples] Fix or disable scene tests [#1919]( https://github.com/sofa-framework/sofa/pull/1919 ); - [examples] Fix warnings in Pendulum tutorial [#2055]( https://github.com/sofa-framework/sofa/pull/2055 ); - [examples] Scenes with build_lcp [#2110]( https://github.com/sofa-framework/sofa/pull/2110 ); - [image] Fix wrong condition [#2083],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:193712,plugin,plugin,193712,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,thub.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com/sofa-framework/sofa/pull/2969 ); - [Mapping.Linear] Fix some warnings [#2933]( https://github.com/sofa-framework/sofa/pull/2933 ); - [Mass] fix some warnings [#2931]( https://github.com/sofa-framework/sofa/pull/2931 ); - [Mass] Make warnings become info_msg in masses [#3116]( https://github.com/sofa-framework/sofa/pull/3116 ) ; - [Metis] Add header files to the project [#2581]( https://github.com/sofa-framework/sofa/pull/2581 ); - [Metis] Disable compilation warnings [#2874]( https://github.com/sofa-framework/sofa/pull/2874 ); - [S.C.LinearSolver] Restore specialized functions in SSORPreconditioner [#2885]( https://github.com/sofa-framework/sofa/pull/2885 ); - [Sofa.Component.Collision] Remove un-needed msg_warning in LocalMinDistance.cpp [#2976]( https://github.com/sofa-framework/sofa/pull/2976 ); - [Sofa.Component.ODESolver] Rewrite tests without SceneCreator [#2733]( https://github.com/sofa-framework/sofa/pull/2733 ); - [Sofa.Core] Use forward declaration for BoundingBox in Base [#2728]( https://github.com/sofa-framework/sofa/pull/2728 ); - [Sofa.DefaultType] Name() should be compile-time evaluable [#3174]( https://github.com/sofa-framework/sofa/pull/3174 ); - [Sofa.GL.Component] OglModel: Uniformize floating point type [#2856]( https://github.com/sofa-framework/sofa/pull/2856 ); - [Sofa.GUI.Component] Add module version [#3038]( https://github.com/sofa-framework/sofa/pull/3038 ); - [Sofa.Geometry][SofaMeshCollision] Deprecate RayTriangleIntersection class [#2763]( https://github.com/sofa-framework/sofa/pull/2763 ); - [Sofa.Helper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:124143,Rewrite,Rewrite,124143,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Rewrite'],['Rewrite']
Modifiability,"thub.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/sofa/pull/2858 ); - [LMConstraint] Remove LMConstraint folder as it is an external plugin [#2828]( https://github.com/sofa-framework/sofa/pull/2828 ); - [LinearSolver.Direct] Minor clean up in SparseCholeskySolver [#2881]( https://github.com/sofa-framework/sofa/pull/2881 ); - [LinearSolver.Direct] Move advice message into parse method [#3029]( https://github.com/sofa-framework/sofa/pull/3029 ); - [LinearSolver.Iterative] Clean floating point types in CG [#2808]( https://github.com/sofa-framework/sofa/pull/2808 ); - [LinearSolver] Remove explicit template instantiation for floating point types different from SReal [#2939]( https://github.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com/sofa-framework/sofa/pull/2969 ); - [Mapping.Linear] Fix some warnings [#2933]( https://github.com/sofa-framework/sofa/pull/2933 ); - [Mass] fix some warnings [#2931]( https://github.com/sofa-framework/sofa/pull/2931 ); - [Mass] Make warnings become info_msg in masses [#3",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:122610,plugin,plugin,122610,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using help",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359185,Flexible,Flexible,359185,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,"to details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variables by solving an equation involving the previous state variables and the new ones.; In contrast, implicit solvers are very stable (without conditions on the time step) and therefore work with larger time steps. The drawback of such a method is that it is more time consuming.; For example, implicit solvers would be advised for stiff or low-mass objects. Finally, it must be pointed out that explicit and implicit solvers are not the only way to solve ODEs.; Some other solvers do exist, such as semi-implicit (also called explicit-implicit solvers) solvers. Such solvers solve a part of the equation explicitly and the other part implicitly.; With such solvers using data from different steps, the user may face the need to save some state vectors during several time steps.; More details about the implementation of these solvers are given in the documentation: chapter ""State"", and chapter ""Solvers"". ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:2004,variab,variables,2004,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,2,['variab'],['variables']
Modifiability,tps://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:58948,config,configuration,58948,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,tps://github.com/sofa-framework/sofa/pull/4425); - [LinearSystem] Introduce components to map matrices [#4490](https://github.com/sofa-framework/sofa/pull/4490); - [SofaSphFluid] Externalize SofaSphFluid [#4526](https://github.com/sofa-framework/sofa/pull/4526); - [LinearSystem] Introduce ConstantSparsityProjectionMethod [#4552](https://github.com/sofa-framework/sofa/pull/4552); - [HyperElastic] Introduce stable Neo Hookean hyperelastic material [#4603](https://github.com/sofa-framework/sofa/pull/4603); - [LinearSystem] Cache mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor Mat [#4396](https://github.com/sofa-framework/sofa/pull/4396); - [LinearSystem] Detect changes in sparsity pattern when using ConstantSparsityPatternSystem [#4428](https://github.com/sofa-framework/sofa/pull/4428); - [Core][LinearSolver] Introduction of ordering method components [#4477](https://github.com/sofa-framework/sofa/pull/4477); - [Simulation.Graph] Move SimpleApi into,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:1385,Refactor,Refactor,1385,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"tps://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]( https://github.com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:321872,Plugin,PluginRepository,321872,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginRepository']
Modifiability,tps://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318724,Config,Configuration,318724,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Config', 'plugin']","['Configuration', 'plugin']"
Modifiability,tps://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] Update on demand as designed initially [#751]( https://github.com/sofa-framework/sofa/pull/751 ); - [SofaPython] ADD a custom __dir__ method in Binding_Base. [#762]( https://github.com/sofa-framework/sofa/pull/762 ); - [SofaPython] add getLinkedBase to the binding of a link. [#843]( https://github.com/sofa-framework/sofa/pull/843 ); - [SofaPython] ADD binding python to getCategories [#868]( https://github.com/sofa-framework/sofa/pull/868 ). ### Bug Fixes. **Architecture**; - [CMake] FIX: cyclic recursion [#766]( https://github.com/sofa-framework/sofa/pul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:282588,plugin,plugin,282588,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['enhance', 'plugin']","['enhancement', 'plugin']"
Modifiability,"traint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); sofa_find_package(Eigen3 REQUIRED); sofa_find_package(Sofa.GUI.Qt QUIET). find_package(metis 5.1.0 EXACT QUIET); if(NOT metis_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""SofaMatrix: DEPENDENCY metis NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching metis...""); include(FetchContent); FetchContent_Declare(metis; GIT_REPOSITORY https://github.com/sofa-framework/METIS; GIT_TAG v5.1.0-ModernInstall; ); FetchContent_MakeAvailable(metis); elseif (NOT metis_FOUND); message(FATAL_ERROR ""SofaMatrix: DEPENDENCY metis NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install metis (version=5.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFA_MODULES; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.LinearSolver.Direct; Sofa.Core; Eigen3::Eigen; ). set(SOFAMATRIX_SRC_DIR src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/config.h.in; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.inl; ); set(SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/initSofaMatrix.cpp; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageProxy.h; ); list(APPEND SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/Com",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:1178,config,config,1178,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,1,['config'],['config']
Modifiability,"troller: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add example showing how to better handle partially filled elements using fine volumes; - optimizing FlexibleCorotationalMeshFEMForceField by preassembling constant sub-graph; - refact",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350576,Flexible,Flexible,350576,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['Flexible'],"['Flexible', 'FlexibleCorotationalMeshFEMForceField']"
Modifiability,"ts (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](https://github.com/sofa-framework/sofa/pull/3234) ; - [Sofa.DefaultType] Constexpr VecTypes and RigidTypes [#3237](https://github.com/sofa-framework/sofa/pull/3237) ; - [Sofa.Core] Remove compilation warning because of un-used argument in BaseClass.h [#3243](https://github.com/sofa-framework/sofa/pull/3243) ; - [Topology] Remove Disabled and Deprecated method <= 22.06 [#3250](https://github.com/sofa-framework/sofa/pull/3250) ; - [Core][Type] Minor warning fixes [#3283](https://github.com/sofa-framework/sofa/pull/3283) ; - [Sofa.Defaulttype] Move Rigid{Coord, Deriv, Mass} from RigidTypes into their own headers [#3282](https://github.com/sofa-framework/sofa/pull/3282) ; - [Sofa.Core] Add missing #include [#3297](https://github.com/sofa-framework/sofa/pull/3297) ; - [Sofa.Co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:83833,variab,variables,83833,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,ttps://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework/sofa/issues/1633 ); - [modules] Set relocatable flags to pluginized modules [#1604]( https://github.com/sofa-framework/sofa/pull/1604 ); - [SofaCommon] Make SofaCommon a deprecated collection [#1609]( https://github.com/sofa-framework/sofa/pull/1609 ); - [SofaGeneral] Make SofaGeneral a deprecated collection [#1596]( https://github.com/sofa-framework/sofa/pull/1596 ); - [SofaGeneral] Move BVH-format feature from Helper to SofaGeneralRigid [#1644]( https://github.com/sofa-framework/sofa/pull/1644 ). ### Breaking; **Architecture**; - [SofaMacros] Refactor for better target and package management [#1433]( https://github.com/sofa-framework/sofa/pull/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:214561,Plugin,Pluginize,214561,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginize']
Modifiability,"ttps://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://github.com/sofa-framework/sofa/pull/2210 ); - [All] Remove use of compatibility layer [#2179]( https://github.com/sofa-framework/sofa/pull/2179 ); - **[Sofa.Core]** Move eq,peq utilities functions to a standalone file [#2137]( https://github.com/sofa-framework/sofa/pull/2137 ); - **[Sofa.GL]** Relocate the module (again) + clarify module vs plugin definitions [#1941]( https://github.com/sofa-framework/sofa/pull/1941 ); - **[Sofa.GL]** Remove warnings from deprecated headers [#2045]( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-fr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:197920,plugin,plugin,197920,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,"ub.com/sofa-framework/sofa/pull/1144 ); - **[SofaKernel]** Several fix in draw methods and topology warnings [#1111]( https://github.com/sofa-framework/sofa/pull/1111 ); - **[SofaKernel]** Small Fix in CollisionModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links for input and output topologies of the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:252697,Plugin,Plugins,252697,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['Plugins', 'plugins']"
Modifiability,ub.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifier on notify methods in Node [#1169]( https://github.com/sofa-framework/sofa/pull/1169 ); - **[SofaKernel]** Remove deprecated SOFA_DEBUG macro [#1232]( https://github.com/sofa-framework/sofa/pull/1232 ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://github.com/sofa-framework/sofa/pull/1201 ); - [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [SofaTest] CLEAN msg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for bett,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:255743,plugin,plugin,255743,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,ub.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [#2053]( https://github.com/sofa-framework/sofa/pull/2053 ); - [MultiThreading] Parallel brute force broad phase [#2038]( https://github.com/sofa-framework/sofa/pull/2038 ); - [Plugins] Add SofaGLFW GUI [#2062]( https://github.com/sofa-framework/sofa/pull/2062 ); - [SofaCUDA] Add more examples for liver scene and squareTissue [#2016]( https://github.com/sofa-framework/sofa/pull/2016 ). **Examples / Scenes**; - [Benchmark] Introduce benchmark on matrix assembly [#2208]( https://github.com/sofa-framework/sofa/pull/2208 ); - [examples] Improve BeamFEMForceField example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:180293,Plugin,Plugins,180293,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"ub.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https:",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145643,variab,variables,145643,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variables']
Modifiability,"ub.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in NarrowPhaseDetection and IntersectorFactory [#3337](https://github.com/sofa-framework/sofa/pull/3337) ; - [Type] Remove explicit template instantiation to restore performances ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76954,Config,Config,76954,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"ub.com/sofa-framework/sofa/pull/3563) ; - [FEM.Elastic] Minor refactoring and optimization in draw [#3564](https://github.com/sofa-framework/sofa/pull/3564) ; - [all] Fix some warnings further v22.12 [#3570](https://github.com/sofa-framework/sofa/pull/3570) ; - [LinearAlgebra] Remove wrong comment [#3582](https://github.com/sofa-framework/sofa/pull/3582) ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ; - [AnimationLoop] Call super init in FreeMotionAnimationLoop [#3791](https://github.com/sofa-framework/sofa/pull/3791) ; - [Hyperelastic] Reformat files and add override attribute [#3792](https://github.com/sofa-framework/sofa/pull/3792) ; - [Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals() [#3805](https://github.com/sofa-framework/sofa/pull/3805) ; - [Constraint] Change print variable names to be consistent with doc [#3816](https://github.com/sofa-framework/sofa/pull/3816) ; - [Components] rename shadow variable [#3818](https://github.com/sofa-framework/sofa/pull/3818) ; - [All] Remove trivial warnings [#3823](https://github.com/sofa-framework/sofa/pull/3823) ; - [Lagrangian.Model] Missing _API keyword [#3833](https://github.com/sofa-framework/sofa/pull/3833) ; - [All] Remove warnings for v23.06 [#3911](https://github.com/sofa-framework/sofa/pull/3911) . **Plugins / Projects**; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:63977,variab,variable,63977,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['variab'],['variable']
Modifiability,ull/3393) ; - [TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField [#3412](https://github.com/sofa-framework/sofa/pull/3412) ; - [all] Fix compilation with float as floating_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72272,Config,Config,72272,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,ull/764 ); - [SofaMiscFem] Clean BaseMaterial::handleTopologyChange [#817]( https://github.com/sofa-framework/sofa/pull/817 ); - [SofaMiscMapping] Clean DeformableOnRigidFrameMapping [#848]( https://github.com/sofa-framework/sofa/pull/848 ); - **[SofaSimpleFem]** Stc clean simplefem [#826]( https://github.com/sofa-framework/sofa/pull/826 ). **Plugins / Projects**; - [Multithreading] Move TaskScheduler files from MultiThreading plugin to SofaKernel [#805]( https://github.com/sofa-framework/sofa/pull/805 ). **Examples / Scenes**; - [examples] Remove scenes about deprecated components [#922]( https://github.com/sofa-framework/sofa/pull/922 ). ____________________________________________________________. ## [v18.06]( https://github.com/sofa-framework/sofa/tree/v18.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.12...v18.06 ). ### Deprecated. **Will be removed in v18.06**; - **[SofaHelper]** Utils::getPluginDirectory() [#518]( https://github.com/sofa-framework/sofa/pull/518) - Use PluginRepository.getFirstPath( ) instead. **Will be removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaBoundaryCondition] VaccumSphereForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMisc] ParallelCGLinearSolver [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] ForceMaskOff [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] LineBendingSprings [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] WashingMachineForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscForceField] LennardJonesForceField [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping] CatmullRomSplineMapping [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaMiscMapping] CenterPointMechanicalMapping [#457]( https://github.com/sofa-framework/sofa/pul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:290542,Plugin,PluginRepository,290542,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['PluginRepository']
Modifiability,"v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ). ### Bug Fixes; **Architecture**; - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ). **Plugins / Projects**; - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ). ### Cleanings; **Modules**; - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ). ____________________________________________________________. ## [v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:166561,Plugin,Plugins,166561,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Plugins']
Modifiability,"vectors, matrices, array of vectors in int and float types (see components/visualmodel/OglVariable.h for a list of available types).; Texture can be also given to the Shader, using OglTexture, which has a lot of parameters available; but the most important one is the texture unit id.; Another problem arises if you want to mix different effects (for example: toon shading and normal mapping).; 		You can write a big Shader that does a lot of things, and activate only what you want with a system of macro.; In your favorite editor, open /Sofa/share/shaders/generalRenderingShader.vert and /Sofa/share/shaders/generalRenderingShader.frag.; In the .frag file, look at line 85. This section defines the variables that are needed to execute the Perlin Noise Bump effect.; Now look at line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to ""6"", ""0.9"" and ""0.2"" respectively.; Add a OglIntVariable component and name it ""perlinBumpOctave"". Set the Uniform Value to ""1"".; Run in SOFA.; We have defined all the variables for the pattern of the dragon. Now we will define the color.; You can define a macro by giving it the same name as the variable, like we did above, or by setting the ID name.; Add a OglShaderDefineMacro component, and",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:1357,variab,variable,1357,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,2,['variab'],"['variable', 'variables']"
Modifiability,"when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] U",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:282055,refactor,refactoring,282055,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['refactor'],['refactoring']
Modifiability,"with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in Narr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76831,plugin,plugins,76831,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"wn above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:2327,config,configuration,2327,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['config'],['configuration']
Modifiability,work/sofa/pull/1269 ); - [All] Remove compilation warnings related to collision models [#1301]( https://github.com/sofa-framework/sofa/pull/1301 ); - [All] Update code base according to refactoring done in PR1283. [#1330]( https://github.com/sofa-framework/sofa/pull/1330 ); - [All] Remove all deprecation warnings after v1912 [#1241]( https://github.com/sofa-framework/sofa/pull/1241 ); - [All] v19.12 changes + DocBrowser by Defrost [#1275]( https://github.com/sofa-framework/sofa/pull/1275 ); - **[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sofa-framework/sofa/pull/1404 ); - **[SofaCore]** ADD directory DataFileNames [#1407]( https://github.com/sofa-framework/sofa/pull/1407 ); - **[SofaKernel]** Refactor DDGNode [#1372]( https://github.com/sofa-framework/sofa/pull/1372 ); - **[SofaKernel]** Totally remove the macro CHECK_TOPOLOGY from BaseMeshTopology [#1399]( https://github.com/sofa-framework/sofa/pull/1399 ); - **[SofaKernel]** Update EulerExplicitSolver [#1260]( https://github.com/sofa-framework/sofa/pull/1260 ); - **[SofaKernel]** implement activer's code at CollisionModel. [#1259]( https://github.com/sofa-framework/sofa/pull/1259 ). **Plugins**; - [SofaCUDA] Arch auto-detection for nvcc [#1336]( https://github.com/sofa-framework/sofa/pull/1336 ). ### Improvements. **Architecture**; - [CMake] Create an IDE folder for all relocatable_install targets [#1405]( https://github.com/sofa-framework/sofa/pull/1405 ). **Modules**; - **[SofaBaseVisual]** Add camera gizmo in base camera [#1253]( https://github.com/sofa-framework/sofa/pull/1253 ); - **[SofaCore]** Remove warning in ExecParam [#1325]( https://github.com/sofa-framework/sofa/pull/1325 ); - **[SofaCore]** ADD: DataC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:230964,Refactor,Refactor,230964,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Refactor'],['Refactor']
Modifiability,"work/sofa/pull/4295); - [SolidMechanics] Implement buildStiffnessMatrix for PolynomialSpringsFF [#4301](https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""meta-alias"" isMechanical [#4360](https://github.com/sofa-framework/sofa/pull/4360); - [github] Add new action checking PR age [#4386](https://github.com/sofa-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); - [Project] Start dev phase v24.06 [#4544](https://github.com/sofa-framework/sofa/pull/4544); - [runsofa] Allowing multiple argv [#4591](https://github.com/sofa-framework/sofa/pull/4591); - [GUI] Add ConstraintAttachButtonSetting [#4601](https://github.com/sofa-framework/sofa/pull/4601); - [plugins] Add fetchable ModelOrderReduction [#4608](https://github.com/sofa-framework/sofa/pull/4608); - [GUI.Qt] Add clickable link to online documentation [#4650](https://github.com/sofa-framework/sofa/pull/4650); - [CMake] Start finding Qt6 then Qt5 [#4686](https://github.com/sofa-framework/sofa/pull/4686); - [examples] Use MeshMatrixMass in hyperelastic examples [#4687](https://github.com/sofa-framework/sofa/pull/4687). ### Bug Fixes. - [Geometry] Update method intersectionWithEdge signature and redirect all methods t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:4415,plugin,plugins,4415,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugins']
Modifiability,"work/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] Update on demand as designed initially [#751]( https://github.com/sofa-framework/sofa/pull/751 ); - [SofaPython] ADD a custom __dir__ method in Binding_Base. [#762]( https://github.com/sofa-framework/sofa/pull/762 ); - [SofaPython] add getLinkedBase to the binding of a link. [#843]( https://github.com/sofa-framework/sofa/pull/843 ); - [SofaPython] ADD binding python to getCategories [#868]( https://github.com/sofa-framework/sofa/pull/868 ). ### Bug Fixes. **Ar",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:282501,enhance,enhancement,282501,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['enhance'],['enhancement']
Modifiability,x [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/sofa/pull/1000 ); - [SofaCUDA] Fix windows compilation. [#966]( https://github.com/sofa-framework/sofa/pull/966 ); - [SofaPyt,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269344,plugin,plugin,269344,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['plugin'],['plugin']
Modifiability,x getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixes #136 : Use the cmake install DIRECTORY instead of FILES [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - [LeapMotion]; - FIX compilation for LeapMotion plugin due to moved files [#296]( https://github.com/sofa-framework/sofa/pull/296 ); - [runSofa]; - Fix minor consistency issues related to the readOnly flag [#115]( ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:333415,config,configuration,333415,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['config'],['configuration']
Modifiability,xamples / Scenes**. **Scripts / Tools**. ### Improvements. **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [GitHub] Create bug-report issue template [#2365]( https://github.com/sofa-framework/sofa/pull/2365 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ); - [SofaScenes] Introduce option to add scenes as a project of the build [#2327]( https://github.com/sofa-framework/sofa/pull/2327 ). **Modules**; - [All] Add warnings if components are missing to solve a specific response [#2523]( https://github.com/sofa-framework/sofa/pull/2523 ); - [SofaHelper] Handle recent MSH format in MeshGmshLoader [#2155]( https://github.com/sofa-framework/sofa/pull/2155 ); - [Sofa.Geometry][Sofa.Topology] Add some functions + create unittests [#2434]( https://github.com/sofa-framework/sofa/pull/2434 ); - [Sofa.Helper] PluginManager: Add optional way to check if a plugin is init at the load stage [#2425]( https://github.com/sofa-framework/sofa/pull/2425 ); - [Sofa.LinearAlgebra] Introduce fast sparse matrix product and use it in MechanicalMatrixMapper [#2394]( https://github.com/sofa-framework/sofa/pull/2394 ); - [SofaBaseLinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template pa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:139807,Plugin,PluginManager,139807,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,xecution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework/sofa/issues/1633 ); - [modules] Set relocatable flags to pluginized modules [#1604]( https://github.com/sofa-framework/sofa/pull/1604 ); - [SofaCommon] Make SofaCommon a deprecated collection [#1609]( https://github.com/sofa-framework/sofa/pull/1609 ); - [SofaGeneral] Make SofaGeneral a deprecated collection [#1596]( https://github.com/sofa-framework/sofa/pull/1596 ); - [SofaGeneral] Move BVH-format feature from Helper to SofaGeneralRigid [#1644]( https://github.com/sofa-framework/sofa/pull/1644 ). ### Breaking; **Architecture**; - [SofaMacros] Refactor for better target and package management [#1433]( https://github.com/sofa-framework/sofa/pull/1433 ). **Modules**; - [All] Change index_type from size_t to uint [#1514]( https,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:214662,Plugin,Pluginize,214662,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Plugin'],['Pluginize']
Modifiability,ython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** F,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:296593,plugin,plugin,296593,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['config', 'plugin']","['configuration', 'plugin']"
Modifiability,yxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super init [#3884](https://github.com/sofa-framework/sofa/pull/3884); - [examples] Fix unstable scene constantMomentum.scn [#3886](https://github.com/sofa-framework/sofa/pull/3886); - [SolidMechanics] Use accessors & make geometrical data required in BFF [#3887](https://github.com/sofa-framework/sofa/pull/3887); - [SofaCUDA] Replace deprecated vector types [#3902](https://github.com/sofa-framework/sofa/pull/3902); - [Helper] Improve text message for users in ComponentChange [#3913](https://github.com/sofa-framework/sofa/pull/3913); - [all] Minor clean of types [#3915](https://github.com/sofa-framework/sofa/pull/3915); - [examples] Remove example for MechanicalMatrixMapper [#3919](https://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateI,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:40654,Config,Config,40654,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Config'],['Config']
Modifiability,"ze the template, you can:. Copy the SofaHAPI directory and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh ; to replace SofaHAPI; with MyPlugin in all; the file; names and their content:; utils/changeClassName.sh SofaHAPI MyPlugin; cd examples; ../utils/changeClassName.sh SofaHAPI MyPlugin; cd ../doc/; ../utils/changeClassName.sh SofaHAPI MyPlugin. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is SofaHAPI.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:1363,plugin,plugin,1363,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"{BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.inl; ). set(SOURCE_FILES; ${BULLETCOLLISIONDETECTION_SRC}/init.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionDetection.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContactMapper.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.cpp; ). set(README_FILES BulletCollisionDetection.txt). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(CollisionOBBCapsule REQUIRED); sofa_find_package(Sofa.GL REQUIRED); # sofa_find_package(SofaVolumetricData REQUIRED); find_package(Compliant QUIET); find_package(LMConstraint QUIET). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(Bullet REQUIRED); include_directories(${BULLET_INCLUDE_DIRS}); link_directories(${BULLET_LIBRARY_DIRS}). message(STATUS ""BULLET_INCLUDE_DIRS: ${BULLET_INCLUDE_DIRS}""); message(STATUS ""BULLET_LIBRARIES: ${BULLET_LIBRARIES}""). # HACD (present in the lib dir of bullet) is not set by FindBullet; # this should set the correct path; set(HACD_LIB """"); if(BULLET_LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libH",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:2066,Config,Config,2066,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['Config'],['Config']
Modifiability,}/QDisplayLinkWidget.cpp; ${SRC_ROOT}/QDisplayPropertyWidget.cpp; ${SRC_ROOT}/QRGBAColorPicker.cpp; ${SRC_ROOT}/QMenuFilesRecentlyOpened.cpp; ${SRC_ROOT}/QModelViewTableUpdater.cpp; ${SRC_ROOT}/QMouseOperations.cpp; ${SRC_ROOT}/QMouseWheelAdjustementGuard.cpp; ${SRC_ROOT}/QSofaListView.cpp; ${SRC_ROOT}/QSofaStatWidget.cpp; ${SRC_ROOT}/QTabulationModifyObject.cpp; ${SRC_ROOT}/QtMessageRedirection.cpp; ${SRC_ROOT}/QTransformationWidget.cpp; ${SRC_ROOT}/RealGUI.cpp; ${SRC_ROOT}/SimpleDataWidget.cpp; ${SRC_ROOT}/SofaMouseManager.cpp; ${SRC_ROOT}/SofaPluginManager.cpp; ${SRC_ROOT}/SofaVideoRecorderManager.cpp ; ${SRC_ROOT}/StructDataWidget.cpp; ${SRC_ROOT}/TableDataWidget.cpp; ${SRC_ROOT}/WDoubleLineEdit.cpp; ${SRC_ROOT}/viewer/SofaViewer.cpp; ${SRC_ROOT}/SofaSceneGraphWidget.cpp; ${SRC_ROOT}/viewer/VisualModelPolicy.cpp ; ); set(UI_FILES; ${SRC_ROOT}/AboutDialog.ui; ${SRC_ROOT}/BaseGenGraphForm.ui; ${SRC_ROOT}/DialogAddObject.ui; ${SRC_ROOT}/GUI.ui; ${SRC_ROOT}/MouseManager.ui; ${SRC_ROOT}/PluginManager.ui; ${SRC_ROOT}/VideoRecorderManager.ui; ); set(QRC_FILES; ${SRC_ROOT}/resources/RealGUI.qrc; ). if(SOFA_DUMP_VISITOR_INFO); list(APPEND MOC_HEADER_FILES; ${SRC_ROOT}/WindowVisitor.h; ${SRC_ROOT}/QVisitorControlPanel.h; ${SRC_ROOT}/PieWidget.h; ); list(APPEND HEADER_FILES; ${SRC_ROOT}/GraphVisitor.h; ); list(APPEND SOURCE_FILES; ${SRC_ROOT}/GraphVisitor.cpp; ${SRC_ROOT}/WindowVisitor.cpp; ${SRC_ROOT}/QVisitorControlPanel.cpp; ${SRC_ROOT}/PieWidget.cpp; ); list(APPEND UI_FILES; ${SRC_ROOT}/VisitorGUI.ui; ); endif(). if(Sofa.GL_FOUND); list(APPEND HEADER_FILES; ${SRC_ROOT}/GLPickHandler.h; ${SRC_ROOT}/viewer/GLBackend.h; ${SRC_ROOT}/viewer/OglModelPolicy.h; ); list(APPEND SOURCE_FILES; ${SRC_ROOT}/GLPickHandler.cpp; ${SRC_ROOT}/viewer/GLBackend.cpp; ${SRC_ROOT}/viewer/OglModelPolicy.cpp; ). # QtViewer; if(SOFA_GUI_QT_ENABLE_QTVIEWER); list(APPEND MOC_HEADER_FILES ${SRC_ROOT}/viewer/qt/QtViewer.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/viewer/qt/QtViewer.cpp); endif(). # QGL,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:6980,Plugin,PluginManager,6980,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['Plugin'],['PluginManager']
Performance," (set by the macro sofa_add_generic() ); set_property(GLOBAL PROPERTY __GlobalTargetList__ """"); set_property(GLOBAL PROPERTY __GlobalTargetNameList__ """"). # Help RELOCATABLE plugins to resolve their dependencies.; # See SofaMacrosInstall.cmake for usage of this property.; define_property(TARGET; PROPERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_WITH_DOUBLE 1); set(SOFA_WITH_FLOAT 0); endif(). # Options; option(SOFA_DETECTIONOUTPUT_FREEMOTION ""Compile Sofa with the DETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:1309,CACHE,CACHE,1309,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance," **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in NarrowPhaseDetection and IntersectorFactory [#3337](https://github.com/sofa-framework/sofa/pull/3337) ; - [Type] Remove explicit template instantiation to restore performances [#3349](https://github.com/sofa-framework/sofa/pull/3349) ; - [Topology] Fix topologyHandler removal [#3369](https://github.com/sofa-framework/sofa/pull/3369) ; - [Mapping.Linear] Fix assert [#3432](https://github.com/sofa-framework/sofa/pull/3432) ; - [DefaultType] fix rigidcoord compilation [#3462](https://github.com/sofa-framework/sofa/pull/3462) ; - Revert ""[Sofa.Core] Linear time getRoot() method in BaseNode and Node"" [#3464](https://github.com/sofa-framework/sofa/pull/3464) ; - [Sofa.Core, SofaSphFluid] Fix compilation with MSVC 2022, v17.4 [#3466](https://github.com/sofa-framework/sofa/pull/3466) ; - [Simulation.Core] Add the _API flag to Task::Status [#3543](https://github.com/sofa-framework/sofa/pull/3543) ; - [Core] Missing include in SingleStateAccessor [#3547](https://github.com/sofa-framework/sofa/pull/3547) ; - [Helper] Fix GenerateRigidMass redirection [#3560](https://github.com/sofa-framework/sofa/pull/3560) . **Modules**; - [T",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:77962,perform,performances,77962,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['perform'],['performances']
Performance, **Plugins / Projects**; - [ColladaSceneLoader][SofaAssimp] Move ColladaSceneLoader plugin content into SofaAssimp plugin [#1360]( https://github.com/sofa-framework/sofa/pull/1360 ); - [plugins] Remove plugins to be deleted [#1439]( https://github.com/sofa-framework/sofa/pull/1439 ). ### Improvements; **Architecture**; - [All] Accelerating CMake generation [#1464]( https://github.com/sofa-framework/sofa/pull/1464 ); - [SofaMacros] Handle COMPONENTS (needed by SofaPython3) [#1671]( https://github.com/sofa-framework/sofa/pull/1671 ). **Modules**; - [All] Replace last use of Qwt by QtCharts and remove internal library [#1512]( https://github.com/sofa-framework/sofa/pull/1512 ); - [SofaBaseCollision] Add option to use of normal orientation in triangle and self-colliding cube [#1559]( https://github.com/sofa-framework/sofa/pull/1559 ); - **[SofaCore]** Add virtual getPathName function in Base [#1455]( https://github.com/sofa-framework/sofa/pull/1455 ); - [SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API [#1495]( https://github.com/sofa-framework/sofa/pull/1495 ); - [SofaGeneralLoader] allow ReadState at init [#1654]( https://github.com/sofa-framework/sofa/pull/1654 ); - [SofaHaptics] Add multithread test on LCPForceFeedback component [#1581]( https://github.com/sofa-framework/sofa/pull/1581 ); - [SofaHaptics] Add simple tests on LCPForceFeedback component [#1576]( https://github.com/sofa-framework/sofa/pull/1576 ); - [SofaImplicitField] Add new ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program op,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:217674,load,loaders,217674,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loaders']
Performance, - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected [#3231](https://github.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for SpringForceField [#3269](https://github.com/sofa-framework/sofa/pull/3269) ; - [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](h,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:74428,Optimiz,Optimize,74428,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Optimiz'],['Optimize']
Performance," ; - [LinearAlgebra] Factorize rotateMatrix in RotationMatrix [#3586](https://github.com/sofa-framework/sofa/pull/3586) ; - [Mass] Remove empty loop in addForce [#3593](https://github.com/sofa-framework/sofa/pull/3593) ; - [Spring] Remove duplicated code [#3594](https://github.com/sofa-framework/sofa/pull/3594) ; - [Components] rename shadow variable [#3606](https://github.com/sofa-framework/sofa/pull/3606) ; - [Helper,Geometry] Move proximity classes into free functions [#3666](https://github.com/sofa-framework/sofa/pull/3666) ; - [all] Remove a bunch of warnings [#3711](https://github.com/sofa-framework/sofa/pull/3711); - [Spring] Remove variable redefinitions [#3754](https://github.com/sofa-framework/sofa/pull/3754) ; - [AnimationLoop] Call super init in FreeMotionAnimationLoop [#3791](https://github.com/sofa-framework/sofa/pull/3791) ; - [Hyperelastic] Reformat files and add override attribute [#3792](https://github.com/sofa-framework/sofa/pull/3792) ; - [Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals() [#3805](https://github.com/sofa-framework/sofa/pull/3805) ; - [Constraint] Change print variable names to be consistent with doc [#3816](https://github.com/sofa-framework/sofa/pull/3816) ; - [Components] rename shadow variable [#3818](https://github.com/sofa-framework/sofa/pull/3818) ; - [All] Remove trivial warnings [#3823](https://github.com/sofa-framework/sofa/pull/3823) ; - [Lagrangian.Model] Missing _API keyword [#3833](https://github.com/sofa-framework/sofa/pull/3833) ; - [All] Remove warnings for v23.06 [#3911](https://github.com/sofa-framework/sofa/pull/3911) . **Plugins / Projects**; - [plugins] rename shadow variable [#3581](https://github.com/sofa-framework/sofa/pull/3581) ; - [SofaCUDA] Clean removed code and add useful one [#3632](https://github.com/sofa-framework/sofa/pull/3632) ; - [GUI.Qt, Multithreading] Fix compilation when SReal=float [#3637](https://github.com/sofa-framework/sofa/pull/3637) ; - [MultiThreading] Remove obsol",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:64338,optimiz,optimize,64338,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimize']
Performance," Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add strain offseting option; - API: strainMappings as data members; - API: use branching images for mass computation; - API: make AffineMass, ShapeFunction, Behavior work in more cases; - API: make Behavior work in simple cases with no label image; - materials: removed checking for changed parameters at each step.; - add exa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350535,load,load,350535,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance," State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variables by solving an equation involving the previous state variables and the new ones.; In contrast, implicit solvers are very stable (without conditions on the time step) and therefore work with larger time steps. The drawback of such a method is that it is more time consuming.; For example, implicit solvers would be advised for stiff or low-mass objects. Finally, it must be pointed out that explicit and implicit solvers are not the only way to solve ODEs.; Some other solvers do exist, such as semi-implicit (also called explicit-implicit solvers) solvers. Such solvers solve a part of the equation explicitly and the other part implicitly.; With such solvers using data from different steps, the user may face the need to save some state vectors during several time steps.; More details about the implementation of these solvers are given in the documentation: chapter",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:1869,load,loadings,1869,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,1,['load'],['loadings']
Performance," Volume Different Mesh. Description. 	The aim of this tutorial is to show the different ways to create 3D volume mesh topologies. In this tutorial, three cylinders are represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; A topological component.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	There are three possible ways to build a 3D volume mesh using the following components.; 	These components are extensions of the ones explained in the Tutorial Topology Linear Different Mesh.; 	; MeshTopology creates a static mesh. Here there are tetrahedra, triangles and edges, using a mesh file. But no modifications are possible.; CylinderGridTopology creates a regular mesh. Here there are regular hexahedra. No mesh file is needed, using only boundaries and the scaling. CylinderGridTopology is an extension of the RegularGridTopology which would create a cube in this case.; TriangleSetTopologyContainer creates a dynamic mesh. Here there are tetrahedra, triangles and edges, using a mesh file. Other classes can be added to perform topological operations. Classes are TetrahedronSetTopologyModifier (for unitary operation), TetrahedronSetTopologyAlgorithms (for more complex topological operations) and TetrahedronSetGeometryAlgorithms (to couple topology algorithms and geometry positions). . Results. 	Thus, when simulated, the three models will fall due to gravity. A different behavior can be noticed for the regular grid near the fixed points due to the different topology elements used (hexahedra versus tetrahedra).; 	; 	Note that it is possible to change the behavior for the regular grid, using a topological mapping. See TutorialTopologyHexa2TetraTopologicalMapping.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyVolumeDifferentMesh.html:1353,perform,perform,1353,examples/Tutorials/Topologies/TopologyVolumeDifferentMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyVolumeDifferentMesh.html,1,['perform'],['perform']
Performance, [#2043]( https://github.com/sofa-framework/sofa/pull/2043 ); - **[SofaBaseCollision]** Introduce brute force broad phase [#2010]( https://github.com/sofa-framework/sofa/pull/2010 ); - **[SofaBaseCollision]** Speedup direct SAP [#1917]( https://github.com/sofa-framework/sofa/pull/1917 ); - **[SofaBaseMechanics_test]** Add TopologicalChanges unit tests for DiagonalMass [#2176]( https://github.com/sofa-framework/sofa/pull/2176 ); - **[SofaBaseTopology]** add intersection methods [#2131]( https://github.com/sofa-framework/sofa/pull/2131 ); - [SofaBoundaryCondition] Add callback in Partial/FixedConstraint [#1806]( https://github.com/sofa-framework/sofa/pull/1806 ); - [SofaBoundaryCondition] Add projectVelocity in FixedConstraint and PartialFixedConstraint [#1558]( https://github.com/sofa-framework/sofa/pull/1558 ); - [SofaBoundaryCondition_test] Add TopologicalChanges unit test for FixedConstraint [#2136]( https://github.com/sofa-framework/sofa/pull/2136 ); - [SofaConstraint] GenericConstraintSolver: compute compliances concurrently [#1862]( https://github.com/sofa-framework/sofa/pull/1862 ); - [SofaConstraint] Parallel free motion and collision detection [#2040]( https://github.com/sofa-framework/sofa/pull/2040 ); - **[SofaCore]** Add PCH support in CMakeLists.txt [#1727]( https://github.com/sofa-framework/sofa/pull/1727 ); - [SofaExporter] Add option for obj export [#1789]( https://github.com/sofa-framework/sofa/pull/1789 ); - [SofaGeneralAnimationLoop] MechanicalMatrixMapper: adds template [#1703]( https://github.com/sofa-framework/sofa/pull/1703 ); - [SofaGeneralLoader] adds translation and rotation to ReadState [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:177638,concurren,concurrently,177638,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['concurren'],['concurrently']
Performance," add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but wor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:349698,load,loaded,349698,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['load'],"['loadPlugin', 'loaded']"
Performance," cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and components when removing last plugin; - CMake: removing ""-Wno-deprecated-register"" compiler option that is only known by a few compilers; - Collision: add function setConstraintId in BaseConstraintSet; - SPtr: up to 10 parameters in constructor; - Add function in EigenBaseSparseMatrix in order to use eigen matrices with async solvers; - Add CUSPARSESolver in SofaCudaSolversPlugin, this solver uses cusparse library to solve a sparse triangular system on the GPU; - MeshBoundaryROI: allows specifying an input subset; - ColorMap: with face culling enabled; - ColorMap: adding a scale for the legend range values; - ImageViewer: adding new boolean data field displaying meshes directly on the slices; - ProjectionToPlaneMultiMapping: adding a projection factor to perform tricky stuff such as planar symmetry; - ProjectionToTargetPlaneMapping: adding a factor to perform planar symmetry for example; - DataDisplay: can now be displayed in wireframe; - DataDisplay: display used topology; - DataDisplay: fix and improving shading a bit; - SofaEngine: add selectLabelROI engine; - SofaEngine: add SelectConnectedLabelsROI; - SofaBoundaryCondition: it is now possible to hide fixedconstraint (default to shown as before); - Mat.h: adding tensor product between vectors; - ForceField: adding const getMState(); - VolumetricRendering: Initialize tetra/hexa Data<> (to be able to link them as data in scenes); - SofaBaseVisual: Add modelview and projection matrices as data output; - FrameBuf",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:343161,load,loading,343161,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['load', 'perform']","['loading', 'perform']"
Performance," collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an OglModel component to draw the mesh on the screen and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automatically done by the SkinningMapping if we have a skinned mesh). Examples.       The file example.scn (located in the folder : ColladaSceneLoader/Demos/ ) which loads the collada file ""example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.    ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:2815,load,loads,2815,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['loads']
Performance," d_showObject; ///< Show objects. (default=false); Data< defaulttype::Vec4f > d_color; ///< drawing color; Data< bool > d_isToPrint; ///< ignore some Data for file export. /// @name New vectors access API based on VecId; /// @{; virtual Data< VecCoord >* write(core::VecCoordId v);; virtual const Data< VecCoord >* read(core::ConstVecCoordId v) const;. virtual Data< VecDeriv >* write(core::VecDerivId v);; virtual const Data< VecDeriv >* read(core::ConstVecDerivId v) const;; /// @}. /** \brief Reorder values according to parameter.; *; * Result of this method is :; * newValue[ i ] = oldValue[ index[i] ];; */; void renumberValues( const sofa::helper::vector<unsigned int> &index );. /// Force the position of a point (and force its velocity to zero value); void forcePointPosition( const unsigned int i, const sofa::helper::vector< double >& m_x);; ; /// src and dest must have the same size.; /// Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare a",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:3901,Perform,Performs,3901,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['Perform'],['Performs']
Performance, of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized; - binding loadPythonSceneWithArguments; - adding a binding to get the pointer of a Data (with its dimensions and type); - adding binding of BaseMapping::getJs (as dense matrices for now); - adding python functions to convert a Data in a numpy array with shared memory; - adding a visitor to set all mstates as non pickable (such as picking will only be performed with collision models); - add tags to mesh groups; - add a groupsByTag dict to easily iterate over groups knowing a tag; - add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:347465,load,load,347465,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,5,"['load', 'perform']","['load', 'loadPythonSceneWithArguments', 'performed']"
Performance," of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work, including scripts to; control those activities. However, it does not include the work's; System Libraries, or general-purpose tools or generally available free; programs which are used unmodified in performing those activities but; which are not part of the work. For example, Corresponding Source; includes interface definition files associated with source files for; the work, and the source code for shared libraries and dynamically; linked subprograms that the work is specifically designed to require,; such as by intimate data communication or control flow between those; subprograms and other parts of the work. The Corresponding Source need not include anything that users; can regenerate automatically from other parts of the Corresponding; Source. The Corresponding Source for a work in source code form is that; same work. 2. Basic Permissions. All rights granted under this License are granted for the term of; copyright on the Program, and are irrevocable provided the stated; conditions are met. This License explicitly affirms your unlimited; permission to run the unmodified Program. The output from running a; covered work is covered by t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:25848,perform,performing,25848,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['perform'],['performing']
Performance," sofaBatch permits to automatically save states of several simulations without open the GUI (and so without X-server).; It is useful to run several simulations during the night on a distant server.; ; A list of scenes .scn are given, and for each a number of time steps to compute and a .simu output namefile.; Resulting .simu and simulation files will be saved in the 'simulation' directory.; ; Theses tasks must be written as a list in a text file (see the file Sofa/applications/projects/sofaBatch/tasks as an example):; //.scn names #time steps output name; scene1.scn 100 mysimu1; scene2.scn 1876 mysimu2; scene3.scn 15 mysimu3; ... Running command: sofaBatch listFileName; (example: Sofa/bin/sofaBatch Sofa/applications/projects/sofaBatch/tasks). Files mysimu1.simu, mysimu2.simu, mysimu3.simu, ... are created in Sofa/applications/projects/sofaBatch/simulation and they can be loaded with runSofa to visualize results. see help : Sofa/bin/sofaBatch --help. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaBatch/doc.txt:884,load,loaded,884,applications/projects/sofaBatch/doc.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaBatch/doc.txt,1,['load'],['loaded']
Performance, using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarvin,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7942,load,loadPlugin,7942,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loadPlugin']
Performance," with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in either source or binary form) with the major; components (compiler, kernel, and so on) of the operating system on; which the executable runs, unless that component itself accompanies; the executable. It may happen that this requirement contradicts the license; restrictions of other proprietary librarie",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:16185,perform,performing,16185,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['perform'],['performing']
Performance,# SOFA Changelog. ## [v24.06.00]( https://github.com/sofa-framework/sofa/tree/v24.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v23.12..v24.06 ). ### Highlighted contributions. - [GitHub] Add a python-based action managing discussions [#4268](https://github.com/sofa-framework/sofa/pull/4268); - [plugins] Update license to LGPL of remaining files [#4425](https://github.com/sofa-framework/sofa/pull/4425); - [LinearSystem] Introduce components to map matrices [#4490](https://github.com/sofa-framework/sofa/pull/4490); - [SofaSphFluid] Externalize SofaSphFluid [#4526](https://github.com/sofa-framework/sofa/pull/4526); - [LinearSystem] Introduce ConstantSparsityProjectionMethod [#4552](https://github.com/sofa-framework/sofa/pull/4552); - [HyperElastic] Introduce stable Neo Hookean hyperelastic material [#4603](https://github.com/sofa-framework/sofa/pull/4603); - [LinearSystem] Cache mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:906,Cache,Cache,906,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Cache'],['Cache']
Performance,"## Introduction. SofaCUDA is a plugin that provides a number of Sofa components that have been implemented using CUDA, which allows the graphics card to be used for multithreaded programming. This can significantly improve the performance of your scene when working with large meshes. ## Compilation. See [instructions on the SOFA website](https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/). ## Paradigm. The plugin is mainly a list of components that already exist in various modules of SOFA.; The difference is that those components are now implemented using CUDA. In SOFA, components are defined to work with specific data types, such as `Vec3Types` or `Rigid3Types` (most of them are defined in `VecTypes.h` and `RigidTypes.h`).; SofaCUDA adds more data types.; They still represent the same type of data, but they are implemented such that they can be manipulated on the GPU using CUDA.; For example, the CPU data type `Vec3Types` equivalent in SofaCUDA is `CudaVec3Types`.; CUDA data types are defined in `CudaTypes.h`. In SOFA, components working with a specific data type are just template classes explicitly instantiated with this data type.; For example, `MechanicalObject<Vec3Types>` is the instantiation of the template class `MechanicalObject` with `Vec3Types` as the template parameter.; In SofaCUDA, components are template specializations of the SOFA equivalents.; For example, `MechanicalObject<CudaVec3Types>` is a specialization of `MechanicalObject` for `CudaVec3Types`. The result is that the user just has to change the template parameter in the scene, in order to use the CUDA version of the same component.; For example, in XML, `<MechanicalObject template=""Vec3f"" />` is the CPU version of `MechanicalObject`, and `<MechanicalObject template=""CudaVec3f"" />` is the GPU version.; Note that in SOFA Vec3Types are by default in double (Vec3d), except if you compile in float only (CMake option: SOFA_FLOATING_POINT_TYPE). However CudaVec3Types are us",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md:227,perform,performance,227,applications/plugins/SofaCUDA/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/README.md,1,['perform'],['performance']
Performance,${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/objectmodel/DataFileName.h; ${SRC_R,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4591,load,loader,4591,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,"(APPEND SOFACONFIG_COMPILE_OPTIONS ""/wd4250;/wd4251;/wd4275;/wd4675;/wd4661""); # 4661: no suitable definition provided for explicit template instantiation request; # it happens because we put explicit instantiation in a separate translation unit; # it is by design, so this warning is irrelevant in our project. if(MSVC_TOOLSET_VERSION GREATER 140) # > VS 2015; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/Zc:__cplusplus""); endif(). # Experimental: compilation with MSVC/Clang-cl; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); if( ${CMAKE_CXX_COMPILER_FRONTEND_VARIANT} STREQUAL MSVC) # something weird happens if we put the two test in one if ??; message(WARNING ""Experimental: you are trying to compile with MSVC and the clang-cl toolchain; this is not officially supported.""); # remove lots of warnings (the Wall of ""normal"" clang seems different of Wall of clang-cl); list(APPEND SOFACONFIG_COMPILE_OPTIONS -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-double-promotion -Wno-old-style-cast -Wno-reserved-id-macro -Wno-language-extension-token -Wno-dllexport-explicit-instantiation-decl -Wno-nonportable-system-include-path -Wno-zero-as-null-pointer-constant -Wno-documentation); # optimization flags (not sure if necessary..); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE -march=native); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(); endif(); endif(). # Mac specific; if(APPLE); #remove OpenGL deprecation message; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-DGL_SILENCE_DEPRECATION""); endif(). ## OpenMP; option(SOFA_OPENMP ""Compile Sofa with OpenMP multithreading."" OFF); if(SOFA_OPENMP); sofa_find_package(OpenMP QUIET); if (OPENMP_FOUND); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${OpenMP_CXX_FLAGS}""); list(APPEND SOFACONFIG_LINK_OPTIONS ""${OpenMP_CXX_FLAGS}""); else(); message(""WARNING: Your compiler does not implement OpenMP.""); endif(); endif(). ## Tracy; option(SOFA_TRACY ""Compile SOFA with the Tracy profiler client"" OFF); if (SOFA_TRA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:9511,optimiz,optimization,9511,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['optimiz'],['optimization']
Performance,"**Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). ____________________________________________________________. ## [v21.06.01]( https://github.com/sofa-framework/sofa/tree/v21.06.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ). ### Bug Fixes; **Architecture**; - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaCo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:165331,load,loaded,165331,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loaded']
Performance,", it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disab",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:5280,CACHE,CACHE,5280,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,['CACHE'],['CACHE']
Performance,"- [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigid barycentric mapping [#710]( https://github.com/sofa-framework/sofa/pull/710 ); - **[SofaHelper]** PluginManager now checks for file existence instead of library extension match. [#621]( https://github.com/sofa-framework/sofa/pull/621 ). **Plugins / Projects**; - [HeadlessRecorder] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:294797,load,load,294797,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,-framework/sofa/pull/3182 ); - [FEM.elastic] Some optimisation to make FastTetrahedralCorotational even faster [#2877]( https://github.com/sofa-framework/sofa/pull/2877 ); - [GKlib] Portable random number generation [#3072]( https://github.com/sofa-framework/sofa/pull/3072 ); - [GUI.Common] FIX unused variable [#3158]( https://github.com/sofa-framework/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix assertion in BarycentricMapper [#2989]( https://github.com/sofa-framework/sofa/pull/2989 ); - [S.C.Topology.Container.Dynamic] Fix asser,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:106863,load,loading,106863,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"-framework/sofa/pull/3283) ; - [Sofa.Defaulttype] Move Rigid{Coord, Deriv, Mass} from RigidTypes into their own headers [#3282](https://github.com/sofa-framework/sofa/pull/3282) ; - [Sofa.Core] Add missing #include [#3297](https://github.com/sofa-framework/sofa/pull/3297) ; - [Sofa.Core] Use pragma, single line namespaces and move forward declarations in fwd.h [#3303](https://github.com/sofa-framework/sofa/pull/3303) ; - [Sofa.Core] Remove the use of Link in MechanicalParams & ConstraintParams [#3304](https://github.com/sofa-framework/sofa/pull/3304) ; - [Type] Disable deprecated methods [#3346](https://github.com/sofa-framework/sofa/pull/3346) ; - [Type] Deprecate Color.h [#3347](https://github.com/sofa-framework/sofa/pull/3347) ; - [Type] equalsZero returns bool, not a real [#3371](https://github.com/sofa-framework/sofa/pull/3371) ; - [Helper] Deprecate error-prone resize and add emplace_back [#3373](https://github.com/sofa-framework/sofa/pull/3373) ; - [Simulation] Change LoadFromMemory signature to remove unused parameter Size [#3376](https://github.com/sofa-framework/sofa/pull/3376) ; - [Sofa.Core] VecId: move definition of VecTypeLabels in its own Translation Unit [#3401](https://github.com/sofa-framework/sofa/pull/3401) ; - [Sofa.Core] TagSet: move method definitions in cpp [#3403](https://github.com/sofa-framework/sofa/pull/3403) ; - [Sofa.Config] CMake: Remove ""both"" as a choice for SOFA_FLOATING_POINT_TYPE parameter [#3436](https://github.com/sofa-framework/sofa/pull/3436) ; - [Simulation.Core] Clean Multithreading code [#3448](https://github.com/sofa-framework/sofa/pull/3448) ; - [Core] Minor cleaning [#3492](https://github.com/sofa-framework/sofa/pull/3492) . **Modules**; - [all] Remove code disabled in v21.06 [#3163](https://github.com/sofa-framework/sofa/pull/3163) ; - [Spring] RestSpringsForceField: Unify Vec/Rigid implementation [#3175](https://github.com/sofa-framework/sofa/pull/3175) ; - [LinearSolver.Direct] BTDLinearSolver: Clean debug information",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:85545,Load,LoadFromMemory,85545,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Load'],['LoadFromMemory']
Performance,". Barycentric Mapping. Description:. Unlike RigidMapping, Barycentric Mapping can be used to attach points to a deformable body. The attached body coordinates are defined ; using the barycentric coordinates with respect to the parent cells. The parent cells are defined by the topology associated with the body points. ; 			 Many topology components exist in SOFA to describe the organization of point sets, like TetrahedronSetTopologyContainer, HexahedronSetTopologyContainer, ; 			 RegularGridTopology...; 			The most common use of Barycentric Mapping in SOFA is to attach a visual model or a collision model to an underlying behaviour model.; 			. 				In the TutorialMappingLiverBarycentric scene, you get the following elements : ; 				; A node ""Liver"" containing the behavior model of a liver loaded through a MeshLoader component with a TetrahedronSetTopology and a TetrahedralCorotationalFEMForceField to handle the deformations.; A node ""Visual"" which is mapped to the ""Liver"" node by a barycentric mapping, which contains the visual representation of our liver.; A node ""Surf"" mapped to the ""Liver"" node by a barycentric mapping, containing the collision model of the liver. Key points. 			In this scene you actually have two kinds of barycentric mappings. A visual barycentric mapping, and a mechanical barycentric mapping.; 			. The visual barycentric mapping concerns the ""Visual"" node (child) and the ""Liver"" node (parent). Here the communication between the parent and the child is only one way. At each time step, the positions of the child are updated knowing the positions and the velocities of the parent and according to the barycentric weights.; 		. Mapping of a visual model to a behaviour model with a barycentric mapping. The mechanical barycentric mapping concerns the ""Surf"" node (child) and the ""Liver"" node (parent). It is this mapping which actually allows you to interact with the object using the mouse. Here the communication works in both ways. Like in a visual mapping",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingBarycentric.html:798,load,loaded,798,examples/Tutorials/Mappings/TutorialMappingBarycentric.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingBarycentric.html,1,['load'],['loaded']
Performance,". ColladaSceneLoader Plugin Documentation. ColladaSceneLoader Plugin Documentation. 		A skinned and bones animated character walking. Introduction; How to use; Examples; Intellectual property and rights. Introduction; This page explains how to use the ColladaSceneLoader plugin to load collada scene (.dae) into Sofa. What is Collada ?.       COLLADA defines an XML-based schema to make it easy to transport 3D assets between applications ; - enabling diverse 3D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For eve",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:281,load,load,281,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['load']
Performance,". Image Plugin; Image MeshToImage Example; This example scene shows an example of the Image plugin, which computes a rasterization image from a mesh. ; It can be seen as an inverse processing of marchingCube: a 3D voxel image (binary) is created from the mesh so that; the voxel values inside the mesh object are 1 and the ones outside the mesh object are 0. You can visualize the cut plan in the ; mesh by setting it in the ImageViewer. . To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/MeshToImage.html:463,load,load,463,applications/plugins/image/examples/MeshToImage.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/MeshToImage.html,1,['load'],['load']
Performance,". Image Plugin; Image marchingCube Example; This marchingCube Example shows an example of the Image plugin, which demonstrates the algorithm of MarchingCube.; It constructs a surface mesh from a 3D medical image. A blur filter is applied to the image. ; To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/marchingCubes.html:277,load,load,277,applications/plugins/image/examples/marchingCubes.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/marchingCubes.html,1,['load'],['load']
Performance,". Mesh Loading and Rendering 1 (1/7). Description; The objective of this first tutorial about visualization is to load an obj file and render it in the viewer.; Key points; OglModel is the main component for rendering file. This is where all geometrical information (vertices, faces ...) are given to OpenGL, which render it afterwards. Vertex Buffer Object is used (if supported) to enhance speed.; Just put an OglModel in the scene and fill the field filename with the path to your OBJ file.; Create a new scene. Clear it of the default components by selecting File > Clear.; Add an OglModel component to the root node. Change the Path to the model (found in the Property 2/3 tab) to /Sofa/share/mesh/dragon.obj; Run in SOFA and Animate.; Nothing happens, but you can see the object.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/0_Visual.html:7,Load,Loading,7,examples/Tutorials/StepByStep/Visual/0_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/0_Visual.html,2,"['Load', 'load']","['Loading', 'load']"
Performance,". Mesh Loading and Rendering 2 (2/7). Description; This step shows how to load mesh files which are not in OBJ format.; Key points; As we saw in the last step, OglModel can render simply OBJ file. This was done directly in this component because OBJ is widely used.; 		But if you have less common format files, there is a different method to render them.; MeshLoader is used to load several kinds of files. Its loaded data is connected to OglModel, which will used it to visualize.; 		In this example, we render an OFF file, using MeshOffLoader.; Clear the scene to start with just a root node again.; Add a MeshVTKLoader component and rename it ""loader"". Change the Filename of the object to /Sofa/share/mesh/aneurysm3d_2_small.off.; Add a OglModel. ; Save your scene file by selecting File > Save. We will refer to this file as myTutorial.scn.; In your favorite XML editor, open myTutorial.scn. Look for the line:; OglModel template=""ExtVec3f"" name=""oglModel8""; After the name property, add src=""@loader"". The line should now look like: ; OglModel template=""ExtVec3f"" name=""oglModel8"" src=""@loader""; Save the file. Re-open myTutorial.scn in the Modeler.; Run in SOFA.; You can now see the model of an aneurysm. If it is dark and difficult to see, don't be alarmed. That is simply because of the default colors specified for this model.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/1_Visual.html:7,Load,Loading,7,examples/Tutorials/StepByStep/Visual/1_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/1_Visual.html,7,"['Load', 'load']","['Loading', 'load', 'loaded', 'loader']"
Performance,". Mesh Loading and Rendering 3 (3/7). Description; Now we will go into more detail on how to use OglModel.; Key points; Clear the scene graph.; We will start by setting up a simple scene.; Add two GNodes to the root node. Name one ""DragonVisu"" and the other ""TexturedSofaVisu"".; Add an OglModel to each of the two new nodes. Name them ""dragon"" and ""sofa"".; Change the Path to the model in dragon to /Sofa/share/mesh/dragon.obj and the Path to the model in sofa to /Sofa/share/mesh/canapVM.obj.; Run in SOFA; The model is now correctly loaded and rendered; but we want to customize it.; Different kinds of parameters are offered through OglModel :. Transformation : rotation, translation and scale, each as a vector of 3 floats; Materials : describes ambient, diffuse, specular, emissive and shininess components. ; 		This is loaded either in a .MTL file attached to the OBJ; or as a string with the field material. You can also; 		use the color field, which will fill the material fields accordingly.; Texture : basic texture mapping with texturename field. In the properties for dragon, change the Initial Translation of the object to (0 10 2), the Initial Rotation of the object to (90 0 0) and the Initial Scale of the object to (0.5 0.5 0.5).; In the Property 2/3 tab, change the Ambient property to (0 191 0 255) and the Diffuse property to (51 51 0 229). Check the Specular and the Shininess checkboxes. Set Specular to (204 204 204 255) and Shininess to 25.; Run in SOFA.; Now we have a green dragon lying on the sofa.; In the Property 2/3 tab of the sofa, set the Name of the Texture to /Sofa/share/textures/snakeskin.png using the file browser.; Run in SOFA.; Now our sofa has been customized as well.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/2_Visual.html:7,Load,Loading,7,examples/Tutorials/StepByStep/Visual/2_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/2_Visual.html,3,"['Load', 'load']","['Loading', 'loaded']"
Performance,". Mesh generation; Preliminary note:. 			This scene is based on the component MeshTetraStuffing to generate from a surface mesh a tetrahedral mesh. Note that this can also be done using the CGAL plugin (which you would need to compile).; 		; Description:. 			This scene is not a simulation, it only generates a volumetric mesh from a surfacic mesh. ; 			Unlike surfacic meshes, volumetric meshes represent the interior volume of an object. ; 			The goal is to create this mesh and export it as a VTK file to use it later in another simulation.; 		; Key points:. Loading of the surfacic mesh with the Mesh component.; The MeshTetraStuffing component generates the interior volume geometry from the surfacic mesh.; We build a mesh from the generated geometry in a second Mesh component.; We export the mesh as a VTK file with the VTKExporter component. Note:. 			The MeshTetraStuffing component needs some crucial parameters to generate good quality meshes.; 		; Back. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.html:562,Load,Loading,562,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_Annex.html,1,['Load'],['Loading']
Performance,". Plugin Image; PluginImage Kinect. Load the images saved onto the computer with the Kinect_capture.scn, and use them to make a depth mesh via DepthMapToMesh component. Refer to the DepthMapToImage.scn or Kinect.scn for more details. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect_offline.html:36,Load,Load,36,applications/plugins/image/examples/Kinect_offline.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/Kinect_offline.html,1,['Load'],['Load']
Performance,". Plugin Image; PluginImage Load. Load simply an image with ImageContainer component, the main tool in the plugin image. It can load many types of image, video, etc... And the ImageViewer second main tool allow to display image 2D/3D, vector, tensor, video, etc... Refer to other loadXXX.scn for more examples. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/loadHDR.html:28,Load,Load,28,applications/plugins/image/examples/loadHDR.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/loadHDR.html,4,"['Load', 'load']","['Load', 'load', 'loadXXX']"
Performance,". PluginImage; PluginImage Sampler_Frames Example; This scene shows an example of the image plugin, which samples an object represented by an image with rigid frames.; To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_Frames.html:191,load,load,191,applications/plugins/image/examples/sampler_Frames.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_Frames.html,1,['load'],['load']
Performance,". PluginImage; PluginImage Sampler_HexaFEM Example. This scene shows another example of the sampler of the image plugin. A FEM model is used for the simulation of the object. . Run and shift+rightclick the object to get it moving. . To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_HexaFEM.html:256,load,load,256,applications/plugins/image/examples/sampler_HexaFEM.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_HexaFEM.html,1,['load'],['load']
Performance,". PluginImage; PluginImage Sampler_meshSpring Example. This scene shows anohter example of the sampler of image plugin. It shows the use of the sampler with meshSpring model for simulation. . Run and shift+rightclick the object to get it moving. . To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_meshSpring.html:271,load,load,271,applications/plugins/image/examples/sampler_meshSpring.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/sampler_meshSpring.html,1,['load'],['load']
Performance,". PluginImage; PluginImage multipleFilters Example; This scene shows an example of the image plugin. It demonstrates how to use multiple filters on one image. In this example,; a blur filter is first applied to the 3D image, after which a resize filter is applied and finally a structure tensors filter is used. To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/multipleFilters.html:335,load,load,335,applications/plugins/image/examples/multipleFilters.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/multipleFilters.html,1,['load'],['load']
Performance,". PluginImage; PluginImage openMeshToImage Example; This scene shows an example of the image plugin. It constructs a 3D voxel image from a surface mesh (cf. MeshToImage.scn) however; in this case the mesh given is not a closed one, which means with holes. It shows also the possiblity of filling holes in the mesh; from the 3D voxel image. ; To run it, you need to load image Plugin using the Plugin Manager of the GUI, or the command line. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/openMeshToImage.html:365,load,load,365,applications/plugins/image/examples/openMeshToImage.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/openMeshToImage.html,1,['load'],['load']
Performance,". Skinning Mapping. Description:. The Skinning Mapping is widely used in computer animation:; ; We set a weight to each simulated node.; By computing the influence of each node on a particle of the skin, we are able to model its deformation. We have implemented lots of different algorithms to let the user configure his skinning mapping the way he desires, adjusting the tradeoff between performance and quality. Key points:. Weighting algorithms: The diffusion of the weights through the structure can be done using: ; 	 ; Inverse of the square distance; Linear along the distance; Hermite; Spline. Distance algorithms: To know this influence, we can use the distance of the particle of the skin to each simulated node. This distance can be:; 		 ; Euclidian; Geodesic; Harmonic. Interpolating algorithms: We implemented two methods to interpolate the deformation of the particles:; 		 ; Linear Interpolation: the fastest, but can result in some nasty visual artifacts.; Dual Quaternion: it gives much nicer results, but is slightly slower. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingSkinning.html:389,perform,performance,389,examples/Tutorials/Mappings/TutorialMappingSkinning.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingSkinning.html,1,['perform'],['performance']
Performance,". The Graphic User; Interface in SOFA; I) An overview of the GUI; II) Structure; III) Viewers; IV) QtOgreViewer; . An Overview of the GUI. The main; program is divided in two main parts, a rendering window and a control; panel. A slider between them sets their; dimension. Common Interactions:. ANIM: launch the Simulation.; The text field, DTsets the step of time used during the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the change",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:720,load,load,720,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['load'],['load']
Performance,". Topological Mapping (2/7). Description; In this step we load a tetrahedral mesh using a mesh file and dynamic topological components. For details concerning differences between static and dynamic topologies, refer to; 		 topological tutorials. ; Key points; ; A meshLoader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; Dynamic topological components to store the volume mesh. Add a new GNode to the root node. Rename it ""Tetrahedrons Mesh"".; Add a MeshGmshLoader component to the Tetrahedrons Mesh node. Rename it ""loader"". Specify the Filename of the object to be /Sofa/share/mesh/cylinder.msh.; Add a MechanicalObject component to the Tetrahedrons Mesh node. Rename it ""Volume"".; Under the Transformations tab, press the Scale of the DOFs in 3 dimensions button. In the textbox that appears, enter ""@loader.scale3d"". Similarly, press the Translation of the DOFs button and enter ""@loader.translation"", and press the Rotation of the DOFs button and enter ""@loader.rotation"".; Under the Vector 1/4 tab, press the position coordinates of the degrees of freedom button. In the textbox that appears, enter ""@loader.position"". ; Add a TetrahedronSetTopologyContainer component to the Tetrahedrons Mesh node. Rename it ""Container"". Specify /Sofa/share/mesh/cylinder.msh as the Filename of the mesh. TetrahedronSetTopologyContainer is a topology container, it is used to store a topology (positions, edges, triangles, tetrahedrons). Usually this topology is not defined manually, but copied from the topology of a MeshLoader component.; In the Property 2/2 tab, press the List of tetrahedron indices button. Enter ""@loader.tetrahedra"" in the textbox that appears. This syntax means that the Data ""tetrahedra"" contained in the SOFA Component of this node named ""loader"" must be copied into this Data. ; Add a TetrahedronSetGeometryAlgorithms component to the Tetrahedrons Mesh node. In the Visualization 2/2 tab, check the if true, draw the tetahedr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html:58,load,load,58,examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/1_TopoMapping.html,5,['load'],"['load', 'loader']"
Performance,". Topology Dynamic Surface Mesh. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between a 3D volume mesh and a 2D surface mesh. In this tutorial, a cube is represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the hexahedra, a second node is used to represent the quad topology.; 	; 	This second representation won't reproduce all quads of the hexahedra topology, but only quads on the mesh borders. I.e quads with only one adjacent hexahedron. This process is similar to the Tetra2TriangleTopologicalMapping.; 	; 	Edges of hexahedra are represented in yellow in the simulation, whereas the visual model is based on the quads. Thus, display the scene in wire frame to see hexahedra and quads (in green).; 	. 	To create this mapping, the component Hexa2QuadTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (hexahedron here) and has an output topology (Data Object2) which is the container of the above topology (quad here).; 	. Results. 	As explained, the visual model uses the output topology (quads) to render the surface model.; 	; 	You can try to use directly the quads created in the HexahedronSetTopologyContainer for the ogl model. The result will be a cube with quads displayed inside the volume.; 	. 	Finally try to remove the HexahedronFEMForceField or QuadularBendingSprings component. The result will be a bad behavior of the cube.; 	. Additional results. 	 When deleting quads (Shift + right click during the simulation), the topolo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html:238,load,loader,238,examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html,1,['load'],['loader']
Performance,". Topology Hexa2QuadTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between a 3D volume mesh and a 2D surface mesh. In this tutorial, a cube is represented, implying:; 	; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactiona between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual modela which reproduce the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the hexahedra, a second node is used to represent the quad topology.; 	; 	This second representation won't reproduce all quads of the hexahedra topology, but only quads on the mesh borders. I.e quads with only one adjacent hexahedron. This process is similar to the Tetra2TriangleTopologicalMapping.; 	; 	Edges of hexahedra are represented in yellow in the simulation whereas the visual model is based on the quads. Thus, display the scene in wire frame to see hexahedra and quads (in green).; 	. 	To create this mapping, the component Hexa2QuadTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (hexahedron here) and has an output topology (Data Object2) which is the container of the above topology (quad here).; 	. Results. 	As explained, the visual model uses the output topology (quads) to render the surface model.; 	; 	you can try to use directly the quads created in the HexahedronSetTopologyContainer for the ogl model. The result will be a cube with quads displayed inside the volume.; 	. 	Finally, try to remove the HexahedronFEMForceField or QuadularBendingSprings component. The result will be a bad behavior of the cube.; 	. Additional results. 	When deleting quads, the topological mapping is updated. Thus, hexahed",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html:244,load,loader,244,examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html,1,['load'],['loader']
Performance,". Topology Linear Different Mesh. Description. 	The aim of this tutorial is to show the different ways to create linear mesh topologies. In this tutorial, three linear pendulums are represented, implying:; 	 ; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A mesh spring forcefield to create springs between points; An ODE scheme and a linear solver to solve the system at each time step.; And a topological component. Key points. 	There are three possible ways to build a linear mesh using the components:; 	; MeshTopology, to create a static mesh. I.e a component able to handle different topologies (2D/3D), either triangles, tetrahedra, quads, or hexahedra. But this component is only a container. This means, the structure can be accessed, as well as further information. But no modifications are possible.; RegularGridTopology, to create a regular mesh. I.e a component able to create a mesh (no mesh file needed) with a regular grid, by giving the boundaries and the scaling.; EdgeSetTopologyContainer, to create a dynamic mesh. I.e a component able to handle only edge topology, but, other classes can be added to perform topological operations. Classes are EdgeSetTopologyModifier (for unitary operation), EdgeSetTopologyAlgorithms (for more complex topological operations) and EdgeSetGeometryAlgorithms (to couple topology algorithms and geometry positions). . Results. 	Thus, when simulate, the three models will act as a pendulum, the same way.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyLinearDifferentMesh.html:1164,perform,perform,1164,examples/Tutorials/Topologies/TopologyLinearDifferentMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyLinearDifferentMesh.html,1,['perform'],['perform']
Performance,". Topology Surface Different Mesh. Description. 	The aim of this tutorial is to show the different ways to create 2D surface mesh topologies. In this tutorial, three soft tissues are represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interaction between points; An ODE scheme and a linear solver to solve the system at each time step.; A topological component.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	There are three possible ways to build a 2D surface mesh using the following components.; 	These components are extensions of the ones explained in the Tutorial Topology Linear Different Mesh.; 	; MeshTopology creates a static mesh (red model). Here there are triangles and edges, using a mesh file. But no modifications are possible.; RegularGridTopology creates a regular mesh (blue model). Here there are regular quads. No mesh file needed, using only boundaries and the scaling.; TriangleSetTopologyContainer creates a dynamic mesh (green model). Here there are triangles and edges, using a mesh file. Other classes can be added to perform topological operations. Classes are TriangleSetTopologyModifier (for unitary operation), TriangleSetTopologyAlgorithms (for more complex topological operations) and TriangleSetGeometryAlgorithms (to couple topology algorithms and geometry positions). . Results. 	Thus, when simulated, the three models will fall due to gravity. A different behavior can be noticed for the regular grid near the fix points due to the different topology elements used (triangles versus quads). ; 	; 	Note that it is possible to add triangle behavior for the regular grid, using a topological mapping. See TutorialTopologyQuad2TriangleTopologicalMapping.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologySurfaceDifferentMesh.html:218,load,loader,218,examples/Tutorials/Topologies/TopologySurfaceDifferentMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologySurfaceDifferentMesh.html,2,"['load', 'perform']","['loader', 'perform']"
Performance,". Topology Tetra2TriangleTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between a 3D volume mesh and a 2D surface mesh. In this tutorial, a cylinder is represented, implying:; 	; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the tetrahedrization, a second node is used to represent the triangle topology.; 	; 	This second representation won't reproduce all triangles of the tetrahedrization, but only triangles on the mesh borders. I.e triangles with only one adjacent tetrahedron. This process is similar to the Triangle2EdgeTopologicalMapping.; 	; 	Edges of tetrahedra are represented in yellow in the simulation whereas the visual model is based on the triangles. Thus, display the scene in wire frame to see tetrahedra and triangles (in blue).; 	. 	To create this mapping, the component Tetra2TriangleTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (tetrahedron here) and has an output topology (Data Object2) which is the container of the above topology (triangle here).; 	. Results. 	As explained the visual model uses the output topology (triangles) to render the surface model.; 	; 	You can try to directly use the triangles created in the TetrahedronSetTopologyContainer for the ogl model. The result will be a cylinder with triangles displayed inside the volume.; 	. 	Finally, try to remove the TetrahedralCorotationalFEMForceField or TriangularBendingSprings component. The result will be a bad behavior of the cylinder.; 	. Additio",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.html:253,load,loader,253,examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.html,1,['load'],['loader']
Performance,". Topology Triangle2EdgeTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between a 2D surface mesh and a 1D linear mesh. In this tutorial, a soft tissues is represented, implying:; 	 ; A mesh loader to read mesh file.; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the triangulation, a second node is used to represent the linear topology.; 	; 	This second representation won't reproduce all edges of the triangulation, but only edges on the mesh borders. I.e edges with only one adjacent triangle. ; 	; 	They are represented in green in the simulation.; 	. 	To create this mapping, the component Triangle2EdgeTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (triangulation here) and has an output topology (Data Object2) which is the container of the above topology (edges here).; 	. Results. 	In this simulation, both triangulation and edge mesh have spring forcefields to create interaction between points. Thus, when simulating, the soft tissue won't stretch.; 	; 	Try to remove the TriangularBendingSprings component. The result will be a tissue completely stretched.; 	. 	Finally, try to remove the MeshSringForceField component. The result will be a bad behavior of the mesh borders.; 	. Additional results. 	When deleting triangles, the topological mapping is updated and so is the list of border edges.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html:257,load,loader,257,examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html,1,['load'],['loader']
Performance,". Topology Tutorial. Triangular Topology. Description. 		In these tutorials we will introduce the different topologies that exist in SOFA. Indeed, depending on the number of dimension representing our mechanical object (1D,2D or 3D), a suitable topologies has to be found.; 		For a linear object (1D), beams must be used.; 		For a surface object (2D), the user can choose between different element types such as triangles or quads.; 		And finally, for a volume object (3D), tetrahedral or hexahedral topologies are available.; 		The choice of the element type is very important and has to be done depending on the geometry to mesh and on the aimed simulation. 		Once the type of element has been properly chosen, you need to import the topology of your objects in SOFA.; 		- If you are using an imported mesh, you just need to use the suitable meshLoader or use the MeshTopology to load the whole object topology. 		- Otherwise, you will have to define the following components in your scene file:; 		; SetTopologyContainer,; SetTopologyModifier,; SetTopologyAlgorithms,; SetGeometryAlgorithms. Almost all the topologies implemented in SOFA are linear elements. The implementation of quadratic elements is however possible, but the topology is to be reconsidered. ; Finally, we also introduce in this tutorial the notion of TopologicalMapping. It corresponds to transformation mapping of one topology to another. It is thereby possible to get a tetrahedral mesh based on a hexahedral mesh. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/Topologies.html:882,load,load,882,examples/Tutorials/Topologies/Topologies.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/Topologies.html,1,['load'],['load']
Performance,". Topology Volume Different Mesh. Description. 	The aim of this tutorial is to show the different ways to create 3D volume mesh topologies. In this tutorial, three cylinders are represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; A topological component.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	There are three possible ways to build a 3D volume mesh using the following components.; 	These components are extensions of the ones explained in the Tutorial Topology Linear Different Mesh.; 	; MeshTopology creates a static mesh. Here there are tetrahedra, triangles and edges, using a mesh file. But no modifications are possible.; CylinderGridTopology creates a regular mesh. Here there are regular hexahedra. No mesh file is needed, using only boundaries and the scaling. CylinderGridTopology is an extension of the RegularGridTopology which would create a cube in this case.; TriangleSetTopologyContainer creates a dynamic mesh. Here there are tetrahedra, triangles and edges, using a mesh file. Other classes can be added to perform topological operations. Classes are TetrahedronSetTopologyModifier (for unitary operation), TetrahedronSetTopologyAlgorithms (for more complex topological operations) and TetrahedronSetGeometryAlgorithms (to couple topology algorithms and geometry positions). . Results. 	Thus, when simulated, the three models will fall due to gravity. A different behavior can be noticed for the regular grid near the fixed points due to the different topology elements used (hexahedra versus tetrahedra).; 	; 	Note that it is possible to change the behavior for the regular grid, using a topological mapping. See TutorialTopologyHexa2TetraTopologicalMapp",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyVolumeDifferentMesh.html:213,load,loader,213,examples/Tutorials/Topologies/TopologyVolumeDifferentMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyVolumeDifferentMesh.html,1,['load'],['loader']
Performance,". Tutorial Topology Hexa2TetraTopologicalMapping. Description. 	This tutorial shows a very useful mapping available in SOFA. As its name suggests, this mapping enables you to get a tetrahedral topology from a hexadral one.; 	Therefore, this mapping divides each hexahedron into 6 tetrahedra. This can be very useful to get tetrahedra if you are working with a RegularGrid geometry. . 	By using the Hexa2TetraTopologicalMapping, you will collect all the data concerning the tetrahedra in the following components:; 	; TetrahedronSetTopologyContainer,; TetrahedronSetTopologyModifier,; TetrahedronSetTopologyAlgorithms,; TetrahedronSetGeometryAlgorithms. It must be stressed that the default division of each hexahedron is always made in the same way, so that it can lead to mesh orientation.; 	To avoid this bias effect, a swapping method is proposed just by activating a flag ""swapping"" in order to perform the better division. ; And do not forget that topological changes are not handled in this mapping. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html:899,perform,perform,899,examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html,1,['perform'],['perform']
Performance,". Tutorial Topology Quad2TriangleTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between two 2D surface meshes. In this tutorial, a soft cube is represented, implying:; 	 ; A mesh loader to read mesh file.; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the quad mesh, a second node is used to represent the triangle mesh.; 	; 	This is not the same case as a topological mapping with different dimension. In this case, both topologies are 2D surfaces. Thus, the triangulation will split each quad into 2 adjacent triangles.; 	; 	Triangle edges are represented in yellow in the simulation. Display the scene in wire frame to see the quads.; 	. 	To create this mapping, the component Quad2TriangleTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (quad here) and has an output topology (Data Object2) which is the container of the above topology (triangle here).; 	. Results. 	In this simulation, no forcefield is linked to the quads, showing that the ""above"" topology can be used as a base for the simulation. (useful when a more precise topology is wanted); 	; 	Try to remove either the TriangularBendingSprings or TriangularFEMForceField component. The result will be a completely stretched tissue.; 	. Additional results. 	When deleting triangles, the topological mapping is updated, and so is the list of quads.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyQuad2TriangleTopologicalMapping.html:246,load,loader,246,examples/Tutorials/Topologies/TopologyQuad2TriangleTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyQuad2TriangleTopologicalMapping.html,1,['load'],['loader']
Performance,". Tutorials for Haptics in a dentistry context; Description:. 		The aim of these tutorials is to understand, step by step, how to create a scene with an Omni phantom device.; 		. 		This first tutorial shows how to load the visual model of the tooth.; 		The first line defines global parameters for the scene which are attached to the root node of the scene.; 		Then we build an arborescence to contain the different objects of the scene:; 		; A root node for all the head; In the head node, we display the visual model of the head with the OglModelComponent.; In the head node, we create a new node for the tongue and another for the teeth.; In each of these nodes, we respectively display the visual model with the OglModelComponent. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_01.html:214,load,load,214,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_01.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_01.html,1,['load'],['load']
Performance,. set(HEADER_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/config.h.in; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecord,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1133,perform,performer,1133,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,".COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an OglModel component to draw the mesh on the screen and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automatically done by the SkinningMapping if we have a skinned mesh). Examples.       The file example.scn (l",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1826,load,load,1826,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['load']
Performance,".com/sofa-framework/sofa/pull/3232) ; - [SolidMechanics] Fix draw in MeshSpringForceField [#3235](https://github.com/sofa-framework/sofa/pull/3235) ; - [Constraint.Lagrangian] Make class abstract and add key function [#3240](https://github.com/sofa-framework/sofa/pull/3240) ; - [SolidMechanics.Spring] RestShapeSpringForceField: Fix addKToMatrix [#3249](https://github.com/sofa-framework/sofa/pull/3249) ; - [all] Split Tag & TagSet into separated files and fix missing includes. [#3277](https://github.com/sofa-framework/sofa/pull/3277) ; - [all] Minor warning fixes [#3306](https://github.com/sofa-framework/sofa/pull/3306) ; - [LinearSolver.Direct] Missing call to super init() [#3316](https://github.com/sofa-framework/sofa/pull/3316) ; - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80159,load,load,80159,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,.cpp; ${SRC_ROOT}/behavior/DefaultMultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/ForceField.cpp; ${SRC_ROOT}/behavior/LinearSolver.cpp; ${SRC_ROOT}/behavior/LinearSolverAccessor.cpp; ${SRC_ROOT}/behavior/Mass.cpp; ${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10004,load,loader,10004,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,"//github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145839,optimiz,optimize,145839,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimize']
Performance,/behavior/LinearSolver.cpp; ${SRC_ROOT}/behavior/LinearSolverAccessor.cpp; ${SRC_ROOT}/behavior/Mass.cpp; ${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/objectmodel/DataFileName.cpp; ${SRC_ROOT}/objectmodel/DataFileNameVecto,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10110,load,loader,10110,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['load'],['loader']
Performance,"/github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [SofaGeometry] Add geometric methods in class Triangle and Edge [#2587]( https://github.com/sofa-framework/sofa/pull/2587 ); - [SofaGuiQt][WindowProfiler] Add root tree + show overhead [#2643]( https://github.com/sofa-framework/sofa/pull/2643 ); - [SofaHelper] Load image using stb [#2551]( https://github.com/sofa-framework/sofa/pull/2551 ); - [SofaHelper] Reduce AdvancedTimer overhead [#2645]( https://github.com/sofa-framework/sofa/pull/2645 ); - [SofaSimpleFem] Improve data description [#2740]( https://github.com/sofa-framework/sofa/pull/2740 ); - [SofaSimpleFem][SofaGeneralSimpleFem][SofaMiscFem] Avoid vectors normalization [#2647]( https://github.com/sofa-framework/sofa/pull/2647 ); - [SofaSimulationCore] More generic DefaultVisualManagerLoop [#2549]( https://github.com/sofa-framework/sofa/pull/2549 ); - [SofaSimulationGraph] Add the ability to control where the object is added in a node. [#2396]( https://github.com/sofa-framework/sofa/pull/2396 ); - [SofaSparseSolver] Apply fill in permutation in SparseLDLSolver [#2762]( https://github.com/sofa-framework/sofa/pull/2762 ); - [SofaSparseSolver] Introduction of an asynchronous LDL solver [#2661]( https://github.com/sofa-framework/sofa/pull/2661 ); - [SofaSparseSolver] Added the choice to",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:100949,Load,Load,100949,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Load'],['Load']
Performance,"0 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - SofaNumpy: bind/share a c++ 1d array as a numpy array; - script.Controller : handle optional arguments before createGraph; - [image]; - raw import: add commented basic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLL",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:339218,perform,performed,339218,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['perform'],['performed']
Performance,"49]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [SofaBaseLinearSolver] CRS explicit instantiation [#2306]( https://github.com/sofa-framework/sofa/pull/2306 ); - [SofaBaseLinearSolver] Fix compilation when enabling CRSMultiMatrixAccessor [#2456]( https://github.com/sofa-framework/sofa/pull/2456 ); - [SofaBaseLinearSolver] Fix mulTranspose for scalar types [#2331]( https://github.com/sofa-framework/sofa/pull/2331 ); - [SofaBaseLinearSolver] Link is not overwritten [#2497]( https://github.com/sofa-framework/sofa/pull/2497 ); - [SofaBaseMechanics] Fix UniformMass topology changes handling mode. [#2377]( https://github.com/sofa-framework/sofa/pull/2377 ); - [SofaBaseMechanics] Fix compilation in BarycentricMapping [#2443]( https://github.com/sofa-framework/sofa/pull/2443 ); - [SofaBaseMechanics] Update MechanicalOb",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:146831,Optimiz,Optimize,146831,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Optimiz'],['Optimize']
Performance,://github.com/sofa-framework/sofa/pull/668 ). ### Improvements. **Architecture**; - [CMake] use ccache if available [#692]( https://github.com/sofa-framework/sofa/pull/692 ); - [Cmake] Add a findCython.cmake [#734]( https://github.com/sofa-framework/sofa/pull/734 ); - [CMake] ADD QtIFW generator + improvements [#796]( https://github.com/sofa-framework/sofa/pull/796 ); - [SofaMacros] ADD CMake macro to create pybind11 & cython targets and modules #859( https://github.com/sofa-framework/sofa/pull/859 ). **Modules**; - [All] Use drawtool everywhere [#704]( https://github.com/sofa-framework/sofa/pull/704 ); - [All] Sofa add mechanical matrix mapper [#721]( https://github.com/sofa-framework/sofa/pull/721 ); - **[SofaBaseTopology]** Add battery of tests on topology containers [#708]( https://github.com/sofa-framework/sofa/pull/708 ); - **[SofaBaseTopology]** Topology change propagation to Mechanical State [#838]( https://github.com/sofa-framework/sofa/pull/838 ); - **[SofaBaseMechanics]** Optimize barycentric mapping initialization [#798]( https://github.com/sofa-framework/sofa/pull/798 ); - [SofaBoundaryCondition] Factorize partial fixedconstraint [#718]( https://github.com/sofa-framework/sofa/pull/718 ); - [SofaConstraint] add a force data field in SlidingConstraint [#780]( https://github.com/sofa-framework/sofa/pull/780 ); - [SofaConstraint] ADD Data to show constraint forces [#840]( https://github.com/sofa-framework/sofa/pull/840 ); - [SofaConstraint] allow call of constraints' storeLambda() [#854]( https://github.com/sofa-framework/sofa/pull/854 ); - **[SofaCore]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all required tests on data and clean export with msg API [#714]( https://github.com/sofa-framework/sofa/pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] I,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:279420,Optimiz,Optimize,279420,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Optimiz'],['Optimize']
Performance,"; **********************************************; * Assimp plugin.txt *; **********************************************. AUTHOR :; - epernod (Erik Pernod); ; CONTACT:; - erik.pernod@gmail.com . LICENSE :; - Assimp is released as Open Source under the terms of a 3-clause BSD license.; - License of this Plugin: LGPL. OTHER COMMENTS :. Open Asset Import Library (short name: Assimp) is a portable Open Source library to import various well-known 3D model formats in a uniform manner. ; The most recent version also knows how to export 3D files and is therefore suitable as a general-purpose 3D model converter. ; See the feature list. - Library web page: http://www.assimp.org/; - Source code on github: https://github.com/assimp/assimp; - Release version: https://github.com/assimp/assimp/releases; - Library version tested: 4.1.0. Important: For the moment only single Mesh is handle. That is to say, if a multi mesh is loaded, only one Sofa Mesh will be created by merging all sub meshes.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt:921,load,loaded,921,applications/plugins/SofaAssimp/README_AssimpPlugin.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt,1,['load'],['loaded']
Performance,; ************************************; * SofaCarving.txt *; ************************************. AUTHOR :; - Brina Goyette; - Erik Pernod (Version 0.3 - 2018-07-12). . LICENCE :; - LGPL. OTHER COMMENTS :. The plugin include:; - CarvingManager handling carving operations between a tool and an object. ; The CarvingManager class will perform topological resection on a triangle surface (could be on top of tetrahedron topology); The tool performing the carving as well as the object to carved need to be represented by collision models; Detecting the collision is done using the scene Intersection and NarrowPhaseDetection pipeline.; - 2 simples scenes showing a sphere carving a cylinder volume with different parameters; - A scene showing how to use the carving Manager on a tool object model. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt:335,perform,perform,335,applications/plugins/SofaCarving/SofaCarving.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt,2,['perform'],"['perform', 'performing']"
Performance,"; endif(). endif(). ## GCC/Clang-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU"" OR ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); # Warnings; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-Wall;-W;-Wno-padded""). # Silence attribute warnings (for example, ignored already defined external template); target_compile_options(${PROJECT_NAME} PUBLIC -Wno-attributes). if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-ffast-math""); endif(). option(SOFA_ENABLE_THREAD_SANITIZER ""Enable thread sanitizer (only gcc or clang)"" OFF); if(SOFA_ENABLE_THREAD_SANITIZER); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-fsanitize=thread""); list(APPEND SOFACONFIG_LINK_OPTIONS ""-fsanitize=thread""); endif(); endif(). ## Windows-specific; if(WIN32); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_USE_MATH_DEFINES""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_SECURE_NO_WARNINGS""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_NONSTDC_NO_DEPRECATE""). set(SOFA_MSVC_NB_COMPILER_PROCESSES ""0"" CACHE STRING ""The maximum number of processes that the compiler can create. 0 (default) for the number of effective processors on the computer""); if (SOFA_MSVC_NB_COMPILER_PROCESSES EQUAL ""0""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP""); else(); if (SOFA_MSVC_NB_COMPILER_PROCESSES MATCHES ""^[0-9]+$""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP${SOFA_MSVC_NB_COMPILER_PROCESSES}""); else(); message(FATAL_ERROR ""A number is expected for SOFA_MSVC_NB_COMPILER_PROCESSES""); endif(); endif(). list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/wd4250;/wd4251;/wd4275;/wd4675;/wd4661""); # 4661: no suitable definition provided for explicit template instantiation request; # it happens because we put explicit instantiation in a separate translation unit; # it is by design, so this warning is irrelevant in our project. if(MSVC_TOOLSET_VERSION GREATER 140) # > VS 2015; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/Zc:__cplusplus""); endif(). # Experimental: compilation with MSVC/Clang-cl; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""Clan",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:7827,CACHE,CACHE,7827,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['CACHE'],['CACHE']
Performance,"; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared libraries.; #; # In the build directory, cmake creates binaries with absolute paths in; # RPATH. And by default, it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPEN",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:4457,load,loader,4457,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['load'],['loader']
Performance,"; myCfExport.cpp reads a list of scene files in a file, then for each scene file:; - load the file; - traverse the scene using a MyCfExportVisitor. MyCF is a knowledge based developed in Grenoble for the generation of mechanical models. Francois Faure, 2014 ; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/myCfExport/README.txt:85,load,load,85,applications/projects/myCfExport/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/myCfExport/README.txt,1,['load'],['load']
Performance,"; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no; charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a; table of data to be supplied by an application program that uses; the facility, other than as an argument passed when the facility; is invoked, then you must make a good faith effort to ensure that,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be reasonably considered independent and separate works in; themselves, then this License, and its terms, do not apply to those; sections when you distribute them as separate works. But when you; distribute the same sections as part of a whole which is a work based; on the Library",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:9290,perform,performs,9290,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['perform'],['performs']
Performance,Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#930]( https://github.com/sofa-framework/sofa/pull/930 ); - **[SofaCore]** ADD Datacallback and datalink [#911]( https://github.com/sofa-framework/sofa/pull/911 ); - [SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add option for Regression_test to check first and last iteration [#1061]( https://github.com/sofa-framework/sofa/pull/1061 ); - [SofaGeneralAnimationLoop] Improve MechanicalMatrixMapper [#882]( https://github.com/sofa-framework/sofa/pull/882 ); - [SofaGraphComponent] Run SceneChecker at each load [#938]( https://github.com/sofa-framework/sofa/pull/938 ); - [SofaGuiQt] Change the keyboard shortcut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObj,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:260426,load,load,260426,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['load']
Performance,"D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an Og",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1408,load,load,1408,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['load'],['load']
Performance,"E_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:6636,CACHE,CACHE,6636,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,"['CACHE', 'optimiz']","['CACHE', 'optimization']"
Performance,FIX Windows linkage [#910]( https://github.com/sofa-framework/sofa/pull/910 ); - [SofaGuiQt] Change method to allow antialiased screenshots in QtViewer [#728]( https://github.com/sofa-framework/sofa/pull/728 ); - **[SofaBaseMechanics]** Fix warning scene mass [#779]( https://github.com/sofa-framework/sofa/pull/779 ); - **[SofaBaseMechanics]** FIX DiagonalMass_test [#832]( https://github.com/sofa-framework/sofa/pull/832 ); - **[SofaBaseTopology]** Fix SparseGridTopology initialization with an input mesh [#670]( https://github.com/sofa-framework/sofa/pull/670 ); - [SofaBoundaryCondition] FIX AffineMovementConstraint orientation issue [#824]( https://github.com/sofa-framework/sofa/pull/824 ); - [SofaCarving] Modify the CMake config file to allow other plugins link to Sofa Carving [#781]( https://github.com/sofa-framework/sofa/pull/781 ); - **[SofaCore]** FIX: enable ExtVecXf mappings with double floating type [#827]( https://github.com/sofa-framework/sofa/pull/827 ); - [SofaDeformable] Fix MeshSpring ForceField and Loader [#815]( https://github.com/sofa-framework/sofa/pull/815 ); - **[SofaFramework]** Keep SOFA_EXTERN_TEMPLATE macro definition [#870]( https://github.com/sofa-framework/sofa/pull/870 ); - [SofaGui] ADD option to enable VSync (default: OFF) [#722]( https://github.com/sofa-framework/sofa/pull/722 ); - [SofaOpenglVisual] Rollback removal of Ogl components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** FIX bug in toEulerVector [#399]( https://github.com/sofa-framework/sofa/pull/399 ); - **[SofaKernel]** FIX segfault created by static initialisers on OSX/clang compiler [#642]( https://github.com/sofa-framework/sofa/pull/642 ); - **[SofaKernel]** Fix: correct path writing in sofa_set_python_directory macro [#763]( https://github.com/sofa-framework/sofa/pull/763 ); - **[SofaKernel]** Check if Quaternion has norm 1 [#790]( https://github.com/sofa-framework/sofa/pull/790 ); - [SofaPreconditioner] FIX ShewchukPCGLinearSolver [#737]( h,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:285068,Load,Loader,285068,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Load'],['Loader']
Performance,GUICOMPONENT_SOURCE_DIR}/init.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/BaseAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyBut,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:1209,perform,performer,1209,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,"Haptics] Replace deprecated INCLUDE_ROOT_DIR in CMakeLists.txt [#1023]( https://github.com/sofa-framework/sofa/pull/1023 ); - **[SofaKernel]** Brainless Warnings cleaning [#971]( https://github.com/sofa-framework/sofa/pull/971 ); - **[SofaKernel]** Minor code refactor in BaseData & new StringUtils functions. [#860]( https://github.com/sofa-framework/sofa/pull/860 ); - **[SofaKernel]** Refactor DataTrackerEngine so it match the DataCallback [#1073]( https://github.com/sofa-framework/sofa/pull/1073 ); - **[SofaKernel]** Remove annoying warning [#1062]( https://github.com/sofa-framework/sofa/pull/1062 ); - **[SofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.com/sofa-framework/sofa/pull/1005 ); - **[SofaSimpleFem]** Use msg and size_t in TetraDiff [#1016]( https://github.com/sofa-framework/sofa/pull/1016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding pluginization of DiffusionSolver [#1067]( https://github.com/sofa-framework/sofa/pull/1067 ); - [Modeler] Deactivate Modeler by default, since it is deprecated [#972]( https://github.com/sofa-framework/sofa/pull/972 ). **Examples / Scenes**; - [Scenes] Apply script on all scenes using VisualModel/OglModel [#1081]( https://github.com/sofa-framework/sofa/pull/1081 ). ___________",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:273620,load,loader,273620,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loader']
Performance,ICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.h; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.inl; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.h; ). set(SOURCE_FILES; ${SOFAGUICOMPONENT_SOURCE_DIR}/init.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddFrameButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AddRecordedCameraButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/AttachBodyButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/FixPickedParticleButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/ConstraintAttachButtonSetting.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AddRecordedCameraPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/AttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ComponentMouseInteraction.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/ConstraintAttachBodyPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/FixParticlePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InciseAlongPathPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/InteractionPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/MouseInteractor.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/RemovePrimitivePerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/StartNavigationPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/SuturePointPerformer.cpp; ${SOFAGUICOMPONENT_SOURCE_DIR}/performer/TopologicalChangeManager.cpp. ). sofa_find_package(Sofa.Simulation.Core REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SolidMech,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt:2387,perform,performer,2387,Sofa/GUI/Component/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Component/CMakeLists.txt,1,['perform'],['performer']
Performance,Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRowSparseMatrix: add virtual destructor [#4020](https://github.com/sofa-framework/sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused v,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:44048,load,loading,44048,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['load'],['loading']
Performance,"KE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:6204,optimiz,optimization,6204,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['optimiz'],['optimization']
Performance,MatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( http,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:126108,optimiz,optimization,126108,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['optimiz'],['optimization']
